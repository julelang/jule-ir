// Auto generated by JuleC.
// JuleC version: jule0.1.1 @master
// Date: 29/10/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include <arpa/inet.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <pthread.h>
#include <time.h>
#include <signal.h>
#include <sys/wait.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _1ac947c74_Char;
struct _1ac94b959_Int;
struct _1ac96cc00_Errno;
struct _1ac972b6c_Dir;
struct _1ac9736a6_Dirent;
struct _1ac974311_SysStat;
struct _1e0edb47c_acceptRange;
struct _1e102ada1_LittleEndian;
struct _1e1045728_u128;
struct _1beac872d_group;
struct _1beb21204_group;
struct _1beac6671__Map;
struct _1beb1e312__Map;
struct _1bead1deb_mapIterator;
struct _1beb27a35_mapIterator;
struct _1acac6bc2_metadata;
struct _1ace17078_Builder;
struct _1bb0807dd_foldPair;
struct _1bb080cd8_CaseRange;
struct _1bb08128e_Range16;
struct _1bb0817bc_Range32;
struct _1bb081c40_RangeTable;
struct _1acb9c56c_d;
struct _1bb08ee3a_lazyBuff;
struct _1ad0a8604_File;
struct _1ad131d64_cmdAttrs;
struct _1ad133ecb_Stat;
struct _1ace263b7_Log;
struct _1a7916d03_floatInfo;
struct _1a791794c_decimalSlice;
struct _1a79299c5_leftCheat;
struct _1a792a4dc_decimal;
struct _1bb0c1bb4_AnsiEscape;
struct _1a7930b74_Logger;
struct _1aa0d7ceb_Token;
struct _1aa0dd8a1_Fileset;
struct _1aa0e0bc2_kindPair;
struct _1aa0e6b62_lex;
struct _1aa0eb8ae_AST;
struct _1aa0ec816_Node;
struct _1aa0ecc34_Directive;
struct _1aa0ed817_TypeDecl;
struct _1aa0ede22_IdentTypeDecl;
struct _1aa0ee1db_SubIdentTypeDecl;
struct _1aa0ee5b5_NamespaceTypeDecl;
struct _1aa0ee8b2_SptrTypeDecl;
struct _1aa0eec47_SlcTypeDecl;
struct _1aa100044_TupleTypeDecl;
struct _1aa100341_PtrTypeDecl;
struct _1aa100ad3_ArrTypeDecl;
struct _1aa101331_MapTypeDecl;
struct _1aa10170a_RetTypeDecl;
struct _1aa102b4b_Expr;
struct _1aa102e15_RangeExpr;
struct _1aa103520_UseExpr;
struct _1aa103740_TupleExpr;
struct _1aa103ad6_LitExpr;
struct _1aa103eb0_UnsafeExpr;
struct _1aa104466_IdentExpr;
struct _1aa104c08_UnaryExpr;
struct _1aa1050d2_VariadicExpr;
struct _1aa1054ab_CastExpr;
struct _1aa105885_NamespaceExpr;
struct _1aa105c5e_SubIdentExpr;
struct _1aa106215_BinaryExpr;
struct _1aa106875_FnCallExpr;
struct _1aa10736a_FieldExprPair;
struct _1aa107b95_StructLit;
struct _1aa10814b_BraceLit;
struct _1aa108976_KeyValPair;
struct _1aa1091a2_SliceExpr;
struct _1aa109b0e_IndexingExpr;
struct _1aa10a26e_SlicingExpr;
struct _1aa10a56b_Constraint;
struct _1aa10aa22_GenericDecl;
struct _1aa10adeb_LabelSt;
struct _1aa10b2c5_GotoSt;
struct _1aa10b5c2_FallSt;
struct _1aa10bc32_AssignLeft;
struct _1aa10c2b5_AssignSt;
struct _1aa957318_Stmt;
struct _1aa957978_ScopeTree;
struct _1aa9581b5_ParamDecl;
struct _1aa959617_FnDecl;
struct _1aa95a7c2_VarDecl;
struct _1aa95ab9b_RetSt;
struct _1aa95b41b_Iter;
struct _1aa95bc46_WhileKind;
struct _1aa95c64d_RangeKind;
struct _1aa95ca27_BreakSt;
struct _1aa95ce01_ContSt;
struct _1aa95d3a7_If;
struct _1aa95d781_Else;
struct _1aa95dc37_Conditional;
struct _1aa95e551_TypeAliasDecl;
struct _1aa95ea07_Case;
struct _1aa960321_MatchCase;
struct _1aa9608a4_UseDecl;
struct _1aa960d5a_EnumItemDecl;
struct _1aa96191b_EnumDecl;
struct _1aa962246_TypeEnumItemDecl;
struct _1aa9628a6_TypeEnumDecl;
struct _1aa962b70_FieldDecl;
struct _1aa963566_StructDecl;
struct _1aa963ca3_TraitDecl;
struct _1aa964413_Impl;
struct _1aa9b96cc_Const;
struct _1aa965447_Field;
struct _1aa966767_Struct;
struct _1aa9689cd_FieldIns;
struct _1aa969605_StructIns;
struct _1aaa2dad7_OperandExpr;
struct _1aaa2e0d2_BinaryExpr;
struct _1aaa2e4ab_UnaryExpr;
struct _1aaa2e9d9_StructArgExpr;
struct _1aaa2ed80_StructLitExpr;
struct _1aaa3017c_AllocStructLitExpr;
struct _1aaa30633_CastingExpr;
struct _1aaa30ed5_FnCallExpr;
struct _1aaa313ae_SliceExpr;
struct _1aaa31865_IndexingExpr;
struct _1aaa31d1b_AnonFnExpr;
struct _1aaa321e5_KeyValPairExpr;
struct _1aaa325be_MapExpr;
struct _1aaa32b52_SlicingExpr;
struct _1aaa331d5_TraitSubIdentExpr;
struct _1aaa33a76_StructSubIdentExpr;
struct _1aaa33e1c_StructStaticIdentExpr;
struct _1aaa342e6_ArrayExpr;
struct _1aaa345e3_TupleExpr;
struct _1aaa348e0_BuiltinPrintCallExpr;
struct _1aaa34bdc_BuiltinPrintlnCallExpr;
struct _1aaa350b6_BuiltinNewCallExpr;
struct _1aaa35490_BuiltinPanicCallExpr;
struct _1aaa35946_BuiltinMakeCallExpr;
struct _1aaa35d20_BuiltinAppendCallExpr;
struct _1aaa3611c_BuiltinLenCallExpr;
struct _1aaa36419_BuiltinCapCallExpr;
struct _1aaa367e3_BuiltinDeleteCallExpr;
struct _1aaa36bbc_BuiltinCopyCallExpr;
struct _1aaa37096_BuiltinErrorCallExpr;
struct _1aaa37393_SizeofExpr;
struct _1aaa37a47_AlignofExpr;
struct _1aaa37c34_RuneExpr;
struct _1aaa380a8_BackendEmitExpr;
struct _1aaa383a5_FreeExpr;
struct _1aaa39186_RetType;
struct _1aaa3974c_Param;
struct _1aaa3b221_Fn;
struct _1aaa3d179_ParamIns;
struct _1aaa3e2ce_FnIns;
struct _1aaa42524_SymTab;
struct _1aaa46935_Trait;
struct _1aaa48580_EnumItem;
struct _1aaa490db_Enum;
struct _1aaa4a21e_TypeEnumItem;
struct _1aaa4a7e6_TypeEnum;
struct _1aaac1152_comptimeRange;
struct _1aaac1bad_comptimeStructField;
struct _1aaac3451_comptimeStructFields;
struct _1aaac4dd1_comptimeStatic;
struct _1aaac6685_comptimeStatics;
struct _1aaac8104_comptimeEnumField;
struct _1aaac9413_comptimeEnumFields;
struct _1aaacae1a_comptimeParam;
struct _1aaaccc74_comptimeParams;
struct _1aaace5d3_comptimeTypeInfos;
struct _1aaad1052_comptimeTypeInfo;
struct _1aaad7564_comptimeValue;
struct _1aaada2c0_comptimeFiles;
struct _1aaadbc3e_comptimeFile;
struct _1aaadd867_comptimeDecls;
struct _1aaae0b55_comptimeDecl;
struct _1aaae7541_constraintChecker;
struct _1aaae9840_Impl;
struct _1aaaec0a1_exprPart;
struct _1aaaec832_Scope;
struct _1aaaecc0b_If;
struct _1aaaed080_Else;
struct _1aaaed426_Conditional;
struct _1aaaed723_InfIter;
struct _1aaaedbc9_WhileIter;
struct _1aaaee6ad_RangeIter;
struct _1aaaee9aa_ContSt;
struct _1aaaeed84_BreakSt;
struct _1aab0033a_Label;
struct _1aab0099a_GotoSt;
struct _1aab00d74_Postfix;
struct _1aab0132a_Assign;
struct _1aab018ad_MultiAssign;
struct _1aab0232b_Match;
struct _1aab02b23_Case;
struct _1aab0331b_FallSt;
struct _1aab036b2_RetSt;
struct _1aab03b68_scopeLabel;
struct _1aab04042_result;
struct _1aab05032_scopeChecker;
struct _1aab1a575_directiveChecker;
struct _1aab1cd80_ReferenceStack;
struct _1aab1e3d1_Pass;
struct _1aab23d86_symBuilder;
struct _1aab2ee08_ImportInfo;
struct _1aab3267a_Package;
struct _1aab4b595_commonSemaMeta;
struct _1aab4c62e_sema;
struct _1aab6bbd1_missingRetChecker;
struct _1aab70795_Var;
struct _1aab71620_FuncPattern;
struct _1aaba4e17_typeCompatibilityChecker;
struct _1aaba6c93_assignTypeChecker;
struct _1aaba8668_dynamicTypeAnnotation;
struct _1aabad4c5_fnCallArgChecker;
struct _1aabb140c_structLitChecker;
struct _1aabb31de_rangeChecker;
struct _1aabb5b09_retTypeChecker;
struct _1aabb8db5_Data;
struct _1aabba03c_Value;
struct _1aabba416_target;
struct _1aabbad84_eval;
struct _1aabdb2c2_unaryEval;
struct _1aabdd25d_binaryEval;
struct _1aabeb4d0_InsGeneric;
struct _1aabec1a1_TypeAlias;
struct _1aabecdb6_Type;
struct _1aac062ba_TypeSym;
struct _1aac06bc2_Prim;
struct _1aac0a6ed_Sptr;
struct _1aac0b1c1_Slc;
struct _1aac0bcb5_Tuple;
struct _1aac0c865_Map;
struct _1aac0d4e2_Arr;
struct _1aac0deb5_Ptr;
struct _1aac0eeb6_referencer;
struct _1aac10ea6_typeChecker;
struct _1aac1ddc6_identTypeLookup;
struct _1ab57e7e1_FileInfo;
struct _1ab5cbb6d_stmt;
struct _1ab5cc50e_scopeParser;
struct _1ab5d9e34_exprBuilder;
struct _1ab5e70ea_assignInfo;
struct _1ab5ea2da_parser;
struct _1ab60b494_typeBuilder;
struct _1aa8128bb_CompileInfo;
struct _1aa814109_directiveEval;
struct _1ab6106da_Importer;
struct _1aac852c2_anyData;
struct _1ab616a21_ExprInspector;
struct _1ab61e0de_MetaStrBuilder;
struct _1ab61ecb0_MetaRuntime;
struct _1ab620783_MetaMathCmplx;
struct _1ab620d8d_Meta;
struct _1ab622367_OrderedDefines;
struct _1ac7acbb6_liveTable;
struct _1ac7acec4_ObjectDeadCode;
struct _1ac7b23b3_scopeDeadCode;
struct _1ac7b694a_exprDeadCode;
struct _1ac3d4d60_StrFromBytes;
struct _1ac3d513a_ExceptionalForwardingExpr;
struct _1ac3d53c1_FnCallIgnoreExceptionalExpr;
struct _1ac3d5745_StrConcatExpr;
struct _1ac3d5adb_SwapExpr;
struct _1ac3d5eb5_EmptyCompareExpr;
struct _1ac3d62b2_RefExpr;
struct _1ac3d6801_StrCompExpr;
struct _1ac3d6d84_MutSlicingExpr;
struct _1ac3d7181_UnsafeBinaryExpr;
struct _1ac3d747d_UnsafeIndexingExpr;
struct _1ac3d7857_PushToSliceExpr;
struct _1ac3d7c31_AppendToSliceExpr;
struct _1ac3d810a_StrRuneIter;
struct _1ac3d8407_UnsafeDerefExpr;
struct _1ac3d8935_UnsafeCastingExpr;
struct _1ac3d9491_nilVar;
struct _1ac3d97d2_nils;
struct _1ac67bd4e_scopeOptimizer;
struct _1ac68474c_exprOptimizer;
struct _1ac68c106_dynamicVar;
struct _1ac68c447_dynamic;
struct _1ac68ea76_dataCheckpoint;
struct _1ac690071_data;
struct _1ac691eda_boundaryVar;
struct _1ac69232b_boundary;
struct _1ac7b7a6c_Optimizer;
struct _1ac887510_AbsTime;
struct _1ac887bd6_Time;
struct _1bea7d8d1_UnixTime;
struct _1bea7de86_TimeData;
struct _1ac7bba4e_scopeCoder;
struct _1ac7c7b04_exprCoder;
struct _1ac7da2cb_TestCoder;
struct _1ac7dce27_identCoder;
struct _1ac8925a3_SerializationInfo;
struct _1ac8929c1_traitCast;
struct _1ac892d9a_anonHash;
struct _1ac8932b8_traitHash;
struct _1ac8935b5_metadata;
struct _1ac894d58_ObjectCoder;
struct _1ac8a3d78_customType;
struct _1ac8a498e_typeCoder;
struct _1ac8ac579_resultCoder;
struct _1c02aa3c6_Flag;
struct _1c02ad50b_Flag;
struct _1c02b1751_Flag;
struct _1c02b49da_Flag;
struct _1c02b7c30_Flag;
struct _1ac9224bd_FlagSet;
struct _1ac924e82_argParser;
struct _1ad0a39ea_Dir;
struct _1ad0a4622_Cmd;
struct _1ab61326a_IR;
struct _1ac947c74_Char {
};
inline jule::Bool _1ac947c74_Char_eq(_1ac947c74_Char *_self_, _1ac947c74_Char _other_);


struct _1ac94b959_Int {
};
inline jule::Bool _1ac94b959_Int_eq(_1ac94b959_Int *_self_, _1ac94b959_Int _other_);


struct _1ac96cc00_Errno {
};
inline jule::Bool _1ac96cc00_Errno_eq(_1ac96cc00_Errno *_self_, _1ac96cc00_Errno _other_);


struct _1ac972b6c_Dir {
};
inline jule::Bool _1ac972b6c_Dir_eq(_1ac972b6c_Dir *_self_, _1ac972b6c_Dir _other_);


struct _1ac9736a6_Dirent {
};
inline jule::Bool _1ac9736a6_Dirent_eq(_1ac9736a6_Dirent *_self_, _1ac9736a6_Dirent _other_);


struct _1ac974311_SysStat {
};
inline jule::Bool _1ac974311_SysStat_eq(_1ac974311_SysStat *_self_, _1ac974311_SysStat _other_);


struct _1e0edb47c_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
};
inline jule::Bool _1e0edb47c_acceptRange_eq(_1e0edb47c_acceptRange *_self_, _1e0edb47c_acceptRange _other_);


struct _1e102ada1_LittleEndian {
};
inline jule::Bool _1e102ada1_LittleEndian_eq(_1e102ada1_LittleEndian *_self_, _1e102ada1_LittleEndian _other_);


struct _1e1045728_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
};
inline jule::Bool _1e1045728_u128_eq(_1e1045728_u128 *_self_, _1e1045728_u128 _other_);


struct _1beac872d_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
};
inline jule::Bool _1beac872d_group_eq(_1beac872d_group *_self_, _1beac872d_group _other_);

struct _1beb21204_group {
	jule::Array<jule::Ptr<_1aaa3e2ce_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
};
struct _1beac6671__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1beac872d_group> _field_groups;
	jule::I32 _field_resident;
	jule::I32 _field_dead;
	jule::I32 _field_limit;
};struct _1beb1e312__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1beb21204_group> _field_groups;
	jule::I32 _field_resident;
	jule::I32 _field_dead;
	jule::I32 _field_limit;
};
struct _1bead1deb_mapIterator {
	jule::Ptr<_1beac6671__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1beac872d_group> _field_groups;
	jule::I32 _field_n;
	jule::I32 _field_g;
	jule::I32 _field_s;
};struct _1beb27a35_mapIterator {
	jule::Ptr<_1beb1e312__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1beb21204_group> _field_groups;
	jule::I32 _field_n;
	jule::I32 _field_g;
	jule::I32 _field_s;
};
struct _1acac6bc2_metadata {
};
inline jule::Bool _1acac6bc2_metadata_eq(_1acac6bc2_metadata *_self_, _1acac6bc2_metadata _other_);


struct _1ace17078_Builder {
	jule::Slice<jule::U8> _field_buf;
};
struct _1bb0807dd_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
};
inline jule::Bool _1bb0807dd_foldPair_eq(_1bb0807dd_foldPair *_self_, _1bb0807dd_foldPair _other_);


struct _1bb080cd8_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
};
inline jule::Bool _1bb080cd8_CaseRange_eq(_1bb080cd8_CaseRange *_self_, _1bb080cd8_CaseRange _other_);


struct _1bb08128e_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
};
inline jule::Bool _1bb08128e_Range16_eq(_1bb08128e_Range16 *_self_, _1bb08128e_Range16 _other_);


struct _1bb0817bc_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
};
inline jule::Bool _1bb0817bc_Range32_eq(_1bb0817bc_Range32 *_self_, _1bb0817bc_Range32 _other_);


struct _1bb081c40_RangeTable {
	jule::Slice<_1bb08128e_Range16> _field_R16;
	jule::Slice<_1bb0817bc_Range32> _field_R32;
	jule::I32 _field_LatinOffset;
};
struct _1acb9c56c_d {
};
inline jule::Bool _1acb9c56c_d_eq(_1acb9c56c_d *_self_, _1acb9c56c_d _other_);


struct _1bb08ee3a_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen;
};
struct _1ad0a8604_File {
	jule::Uintptr _field_handle;
};
inline jule::Bool _1ad0a8604_File_eq(_1ad0a8604_File *_self_, _1ad0a8604_File _other_);


struct _1ad131d64_cmdAttrs {
	jule::I32 _field_pid;
};
inline jule::Bool _1ad131d64_cmdAttrs_eq(_1ad131d64_cmdAttrs *_self_, _1ad131d64_cmdAttrs _other_);


struct _1ad133ecb_Stat {
	jule::I32 _field_mode;
	jule::U32 _field_size;
};
inline jule::Bool _1ad133ecb_Stat_eq(_1ad133ecb_Stat *_self_, _1ad133ecb_Stat _other_);


struct _1ace263b7_Log {
	jule::I32 _field_Kind;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
};
inline jule::Bool _1ace263b7_Log_eq(_1ace263b7_Log *_self_, _1ace263b7_Log _other_);


struct _1a7916d03_floatInfo {
	jule::U32 _field_mantbits;
	jule::U32 _field_expbits;
	jule::I32 _field_bias;
};
inline jule::Bool _1a7916d03_floatInfo_eq(_1a7916d03_floatInfo *_self_, _1a7916d03_floatInfo _other_);


struct _1a791794c_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
};
struct _1a79299c5_leftCheat {
	jule::I32 _field_delta;
	jule::Str _field_cutoff;
};
inline jule::Bool _1a79299c5_leftCheat_eq(_1a79299c5_leftCheat *_self_, _1a79299c5_leftCheat _other_);


struct _1a792a4dc_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
};
inline jule::Bool _1a792a4dc_decimal_eq(_1a792a4dc_decimal *_self_, _1a792a4dc_decimal _other_);


struct _1bb0c1bb4_AnsiEscape {
};
inline jule::Bool _1bb0c1bb4_AnsiEscape_eq(_1bb0c1bb4_AnsiEscape *_self_, _1bb0c1bb4_AnsiEscape _other_);


struct _1a7930b74_Logger {
};
inline jule::Bool _1a7930b74_Logger_eq(_1a7930b74_Logger *_self_, _1a7930b74_Logger _other_);


struct _1aa0d7ceb_Token {
	jule::Ptr<_1aa0dd8a1_Fileset> _field_File;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Kind;
	jule::U32 _field_Id;
};
inline jule::Bool _1aa0d7ceb_Token_eq(_1aa0d7ceb_Token *_self_, _1aa0d7ceb_Token _other_);


struct _1aa0dd8a1_Fileset {
	jule::Slice<jule::U8> _field_data;
	jule::Str _field_Path;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _field_Tokens;
};
struct _1aa0e0bc2_kindPair {
	jule::Str _field_kind;
	jule::U32 _field_id;
};
inline jule::Bool _1aa0e0bc2_kindPair_eq(_1aa0e0bc2_kindPair *_self_, _1aa0e0bc2_kindPair _other_);


struct _1aa0e6b62_lex {
	jule::I32 _field_mode;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _field_tokens;
	jule::Ptr<_1aa0dd8a1_Fileset> _field_file;
	jule::I32 _field_pos;
	jule::I32 _field_column;
	jule::I32 _field_row;
	jule::Slice<_1ace263b7_Log> _field_errors;
};
struct _1aa0eb8ae_AST {
	jule::Ptr<_1aa0dd8a1_Fileset> _field_File;
	jule::Slice<jule::Ptr<_1aa0ecc34_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1aa9608a4_UseDecl>> _field_UseDecls;
	jule::Slice<_1aa0ec816_Node> _field_Nodes;
};
struct _1aa0ec816_Node {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Any _field_Data;
};
inline jule::Bool _1aa0ec816_Node_eq(_1aa0ec816_Node *_self_, _1aa0ec816_Node _other_);


struct _1aa0ecc34_Directive {
	jule::Ptr<_1aa0d7ceb_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _field_Args;
};
struct _1aa0ed817_TypeDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Any _field_Kind;
};
inline jule::Bool _1aa0ed817_TypeDecl_eq(_1aa0ed817_TypeDecl *_self_, _1aa0ed817_TypeDecl _other_);


struct _1aa0ede22_IdentTypeDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> _field_Generics;
};
struct _1aa0ee1db_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1aa0ede22_IdentTypeDecl>> _field_Idents;
};
struct _1aa0ee5b5_NamespaceTypeDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Namespace;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Kind;
};
inline jule::Bool _1aa0ee5b5_NamespaceTypeDecl_eq(_1aa0ee5b5_NamespaceTypeDecl *_self_, _1aa0ee5b5_NamespaceTypeDecl _other_);


struct _1aa0ee8b2_SptrTypeDecl {
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Elem;
};
inline jule::Bool _1aa0ee8b2_SptrTypeDecl_eq(_1aa0ee8b2_SptrTypeDecl *_self_, _1aa0ee8b2_SptrTypeDecl _other_);


struct _1aa0eec47_SlcTypeDecl {
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Elem;
};
inline jule::Bool _1aa0eec47_SlcTypeDecl_eq(_1aa0eec47_SlcTypeDecl *_self_, _1aa0eec47_SlcTypeDecl _other_);


struct _1aa100044_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> _field_Types;
};
struct _1aa100341_PtrTypeDecl {
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Elem;
};
inline jule::Bool _1aa100341_PtrTypeDecl_eq(_1aa100341_PtrTypeDecl *_self_, _1aa100341_PtrTypeDecl _other_);


struct _1aa100ad3_ArrTypeDecl {
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Elem;
	jule::Ptr<_1aa102b4b_Expr> _field_Size;
};
inline jule::Bool _1aa100ad3_ArrTypeDecl_eq(_1aa100ad3_ArrTypeDecl *_self_, _1aa100ad3_ArrTypeDecl _other_);


struct _1aa101331_MapTypeDecl {
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Key;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Val;
};
inline jule::Bool _1aa101331_MapTypeDecl_eq(_1aa101331_MapTypeDecl *_self_, _1aa101331_MapTypeDecl _other_);


struct _1aa10170a_RetTypeDecl {
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _field_Idents;
};
struct _1aa102b4b_Expr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
	jule::Any _field_Kind;
};
inline jule::Bool _1aa102b4b_Expr_eq(_1aa102b4b_Expr *_self_, _1aa102b4b_Expr _other_);


struct _1aa102e15_RangeExpr {
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
};
inline jule::Bool _1aa102e15_RangeExpr_eq(_1aa102e15_RangeExpr *_self_, _1aa102e15_RangeExpr _other_);


struct _1aa103520_UseExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
};
inline jule::Bool _1aa103520_UseExpr_eq(_1aa103520_UseExpr *_self_, _1aa103520_UseExpr _other_);


struct _1aa103740_TupleExpr {
	jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _field_Expr;
};
struct _1aa103ad6_LitExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Value;
};
inline jule::Bool _1aa103ad6_LitExpr_eq(_1aa103ad6_LitExpr *_self_, _1aa103ad6_LitExpr _other_);


struct _1aa103eb0_UnsafeExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
};
inline jule::Bool _1aa103eb0_UnsafeExpr_eq(_1aa103eb0_UnsafeExpr *_self_, _1aa103eb0_UnsafeExpr _other_);


struct _1aa104466_IdentExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
};
inline jule::Bool _1aa104466_IdentExpr_eq(_1aa104466_IdentExpr *_self_, _1aa104466_IdentExpr _other_);


struct _1aa104c08_UnaryExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Op;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
};
inline jule::Bool _1aa104c08_UnaryExpr_eq(_1aa104c08_UnaryExpr *_self_, _1aa104c08_UnaryExpr _other_);


struct _1aa1050d2_VariadicExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
};
inline jule::Bool _1aa1050d2_VariadicExpr_eq(_1aa1050d2_VariadicExpr *_self_, _1aa1050d2_VariadicExpr _other_);


struct _1aa1054ab_CastExpr {
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Kind;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
};
inline jule::Bool _1aa1054ab_CastExpr_eq(_1aa1054ab_CastExpr *_self_, _1aa1054ab_CastExpr _other_);


struct _1aa105885_NamespaceExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Namespace;
	jule::Ptr<_1aa0d7ceb_Token> _field_Ident;
};
inline jule::Bool _1aa105885_NamespaceExpr_eq(_1aa105885_NamespaceExpr *_self_, _1aa105885_NamespaceExpr _other_);


struct _1aa105c5e_SubIdentExpr {
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
	jule::Ptr<_1aa0d7ceb_Token> _field_Ident;
};
inline jule::Bool _1aa105c5e_SubIdentExpr_eq(_1aa105c5e_SubIdentExpr *_self_, _1aa105c5e_SubIdentExpr _other_);


struct _1aa106215_BinaryExpr {
	jule::Ptr<_1aa102b4b_Expr> _field_Left;
	jule::Ptr<_1aa102b4b_Expr> _field_Right;
	jule::Ptr<_1aa0d7ceb_Token> _field_Op;
};
inline jule::Bool _1aa106215_BinaryExpr_eq(_1aa106215_BinaryExpr *_self_, _1aa106215_BinaryExpr _other_);


struct _1aa106875_FnCallExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _field_Args;
	jule::Ptr<_1aa957978_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
};
struct _1aa10736a_FieldExprPair {
	jule::Ptr<_1aa0d7ceb_Token> _field_Field;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
};
inline jule::Bool _1aa10736a_FieldExprPair_eq(_1aa10736a_FieldExprPair *_self_, _1aa10736a_FieldExprPair _other_);


struct _1aa107b95_StructLit {
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _field_Exprs;
};
struct _1aa10814b_BraceLit {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
	jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _field_Exprs;
};
struct _1aa108976_KeyValPair {
	jule::Ptr<_1aa102b4b_Expr> _field_Key;
	jule::Ptr<_1aa102b4b_Expr> _field_Val;
	jule::Ptr<_1aa0d7ceb_Token> _field_Colon;
};
inline jule::Bool _1aa108976_KeyValPair_eq(_1aa108976_KeyValPair *_self_, _1aa108976_KeyValPair _other_);


struct _1aa1091a2_SliceExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
	jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _field_Exprs;
};
struct _1aa109b0e_IndexingExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
	jule::Ptr<_1aa102b4b_Expr> _field_Index;
};
inline jule::Bool _1aa109b0e_IndexingExpr_eq(_1aa109b0e_IndexingExpr *_self_, _1aa109b0e_IndexingExpr _other_);


struct _1aa10a26e_SlicingExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
	jule::Ptr<_1aa102b4b_Expr> _field_Start;
	jule::Ptr<_1aa102b4b_Expr> _field_To;
};
inline jule::Bool _1aa10a26e_SlicingExpr_eq(_1aa10a26e_SlicingExpr *_self_, _1aa10a26e_SlicingExpr _other_);


struct _1aa10a56b_Constraint {
	jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> _field_Mask;
};
struct _1aa10aa22_GenericDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa10a56b_Constraint> _field_Constraint;
};
inline jule::Bool _1aa10aa22_GenericDecl_eq(_1aa10aa22_GenericDecl *_self_, _1aa10aa22_GenericDecl _other_);


struct _1aa10adeb_LabelSt {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
};
inline jule::Bool _1aa10adeb_LabelSt_eq(_1aa10adeb_LabelSt *_self_, _1aa10adeb_LabelSt _other_);


struct _1aa10b2c5_GotoSt {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_Label;
};
inline jule::Bool _1aa10b2c5_GotoSt_eq(_1aa10b2c5_GotoSt *_self_, _1aa10b2c5_GotoSt _other_);


struct _1aa10b5c2_FallSt {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
};
inline jule::Bool _1aa10b5c2_FallSt_eq(_1aa10b5c2_FallSt *_self_, _1aa10b5c2_FallSt _other_);


struct _1aa10bc32_AssignLeft {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
};
inline jule::Bool _1aa10bc32_AssignLeft_eq(_1aa10bc32_AssignLeft *_self_, _1aa10bc32_AssignLeft _other_);


struct _1aa10c2b5_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1aa0d7ceb_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1aa10bc32_AssignLeft>> _field_Left;
	jule::Ptr<_1aa102b4b_Expr> _field_Right;
};
struct _1aa957318_Stmt {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
	jule::Any _field_Data;
};
inline jule::Bool _1aa957318_Stmt_eq(_1aa957318_Stmt *_self_, _1aa957318_Stmt _other_);


struct _1aa957978_ScopeTree {
	jule::Ptr<_1aa957978_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1aa957318_Stmt> _field_Stmts;
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
};
struct _1aa9581b5_ParamDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
};
inline jule::Bool _1aa9581b5_ParamDecl_eq(_1aa9581b5_ParamDecl *_self_, _1aa9581b5_ParamDecl _other_);


struct _1aa959617_FnDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa0ecc34_Directive>> _field_Directives;
	jule::Ptr<_1aa957978_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>> _field_Generics;
	jule::Ptr<_1aa10170a_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1aa9581b5_ParamDecl>> _field_Params;
};
struct _1aa95a7c2_VarDecl {
	jule::Ptr<_1aa957978_ScopeTree> _field_Scope;
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1aa0ecc34_Directive>> _field_Directives;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Kind;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
};
struct _1aa95ab9b_RetSt {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
};
inline jule::Bool _1aa95ab9b_RetSt_eq(_1aa95ab9b_RetSt *_self_, _1aa95ab9b_RetSt _other_);


struct _1aa95b41b_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1aa957978_ScopeTree> _field_Scope;
};
inline jule::Bool _1aa95b41b_Iter_eq(_1aa95b41b_Iter *_self_, _1aa95b41b_Iter _other_);


struct _1aa95bc46_WhileKind {
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1aa0d7ceb_Token> _field_NextToken;
};
inline jule::Bool _1aa95bc46_WhileKind_eq(_1aa95bc46_WhileKind *_self_, _1aa95bc46_WhileKind _other_);


struct _1aa95c64d_RangeKind {
	jule::Ptr<_1aa0d7ceb_Token> _field_InToken;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
	jule::Ptr<_1aa95a7c2_VarDecl> _field_KeyA;
	jule::Ptr<_1aa95a7c2_VarDecl> _field_KeyB;
};
inline jule::Bool _1aa95c64d_RangeKind_eq(_1aa95c64d_RangeKind *_self_, _1aa95c64d_RangeKind _other_);


struct _1aa95ca27_BreakSt {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_Label;
};
inline jule::Bool _1aa95ca27_BreakSt_eq(_1aa95ca27_BreakSt *_self_, _1aa95ca27_BreakSt _other_);


struct _1aa95ce01_ContSt {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_Label;
};
inline jule::Bool _1aa95ce01_ContSt_eq(_1aa95ce01_ContSt *_self_, _1aa95ce01_ContSt _other_);


struct _1aa95d3a7_If {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
	jule::Ptr<_1aa957978_ScopeTree> _field_Scope;
};
inline jule::Bool _1aa95d3a7_If_eq(_1aa95d3a7_If *_self_, _1aa95d3a7_If _other_);


struct _1aa95d781_Else {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa957978_ScopeTree> _field_Scope;
};
inline jule::Bool _1aa95d781_Else_eq(_1aa95d781_Else *_self_, _1aa95d781_Else _other_);


struct _1aa95dc37_Conditional {
	jule::Ptr<_1aa95d3a7_If> _field_Head;
	jule::Slice<jule::Ptr<_1aa95d3a7_If>> _field_Tail;
	jule::Ptr<_1aa95d781_Else> _field_Default;
};
struct _1aa95e551_TypeAliasDecl {
	jule::Ptr<_1aa957978_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Strict;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Kind;
};
inline jule::Bool _1aa95e551_TypeAliasDecl_eq(_1aa95e551_TypeAliasDecl *_self_, _1aa95e551_TypeAliasDecl _other_);


struct _1aa95ea07_Case {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa957978_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _field_Exprs;
};
struct _1aa960321_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1aa95ea07_Case>> _field_Cases;
	jule::Ptr<_1aa95d781_Else> _field_Default;
};
struct _1aa9608a4_UseDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_Path;
	jule::Ptr<_1aa0d7ceb_Token> _field_Alias;
	jule::Bool _field_Binded;
};
inline jule::Bool _1aa9608a4_UseDecl_eq(_1aa9608a4_UseDecl *_self_, _1aa9608a4_UseDecl _other_);


struct _1aa960d5a_EnumItemDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
};
inline jule::Bool _1aa960d5a_EnumItemDecl_eq(_1aa960d5a_EnumItemDecl *_self_, _1aa960d5a_EnumItemDecl _other_);


struct _1aa96191b_EnumDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1aa960d5a_EnumItemDecl>> _field_Items;
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
};
struct _1aa962246_TypeEnumItemDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Kind;
};
inline jule::Bool _1aa962246_TypeEnumItemDecl_eq(_1aa962246_TypeEnumItemDecl *_self_, _1aa962246_TypeEnumItemDecl _other_);


struct _1aa9628a6_TypeEnumDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa962246_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
};
struct _1aa962b70_FieldDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Kind;
	jule::Ptr<_1aa102b4b_Expr> _field_Default;
};
inline jule::Bool _1aa962b70_FieldDecl_eq(_1aa962b70_FieldDecl *_self_, _1aa962b70_FieldDecl _other_);


struct _1aa963566_StructDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa962b70_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1aa0ecc34_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>> _field_Generics;
};
struct _1aa963ca3_TraitDecl {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1aa959617_FnDecl>> _field_Methods;
};
struct _1aa964413_Impl {
	jule::Ptr<_1aa0d7ceb_Token> _field_End;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Base;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1aa959617_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1aa95a7c2_VarDecl>> _field_Statics;
};
struct _1aa9b96cc_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
};
inline jule::Bool _1aa9b96cc_Const_eq(_1aa9b96cc_Const *_self_, _1aa9b96cc_Const _other_);


struct _1aa965447_Field {
	jule::Ptr<_1aa966767_Struct> _field_Owner;
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1aac062ba_TypeSym> _field_TypeSym;
	jule::Ptr<_1aa102b4b_Expr> _field_Default;
};
inline jule::Bool _1aa965447_Field_eq(_1aa965447_Field *_self_, _1aa965447_Field _other_);


struct _1aa966767_Struct {
	jule::Ptr<_1aab4c62e_sema> _field_sema;
	jule::Slice<jule::Ptr<_1aa966767_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1aa966767_Struct>> _field_Uses;
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa965447_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1aaa3b221_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1aab70795_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1aa0ecc34_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1aaa46935_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1aa969605_StructIns>> _field_Instances;
};
struct _1aa9689cd_FieldIns {
	jule::Ptr<_1aa969605_StructIns> _field_Owner;
	jule::Ptr<_1aa965447_Field> _field_Decl;
	jule::Ptr<_1aabecdb6_Type> _field_Type;
	jule::Ptr<_1aabb8db5_Data> _field_Default;
};
inline jule::Bool _1aa9689cd_FieldIns_eq(_1aa9689cd_FieldIns *_self_, _1aa9689cd_FieldIns _other_);


struct _1aa969605_StructIns {
	jule::Ptr<_1aabecdb6_Type> _field_Source;
	jule::Bool _field_Checked;
	jule::Ptr<_1aa966767_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1aa9689cd_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1aab70795_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1aaa3b221_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1aab1cd80_ReferenceStack> _field_Refers;
};
struct _1aaa2dad7_OperandExpr {
	jule::Ptr<_1aabecdb6_Type> _field_Type;
	jule::Any _field_Model;
};
inline jule::Bool _1aaa2dad7_OperandExpr_eq(_1aaa2dad7_OperandExpr *_self_, _1aaa2dad7_OperandExpr _other_);


struct _1aaa2e0d2_BinaryExpr {
	jule::Ptr<_1aaa2dad7_OperandExpr> _field_Left;
	jule::Ptr<_1aaa2dad7_OperandExpr> _field_Right;
	jule::Ptr<_1aa0d7ceb_Token> _field_Op;
};
inline jule::Bool _1aaa2e0d2_BinaryExpr_eq(_1aaa2e0d2_BinaryExpr *_self_, _1aaa2e0d2_BinaryExpr _other_);


struct _1aaa2e4ab_UnaryExpr {
	jule::Ptr<_1aabb8db5_Data> _field_Expr;
	jule::Ptr<_1aa0d7ceb_Token> _field_Op;
};
inline jule::Bool _1aaa2e4ab_UnaryExpr_eq(_1aaa2e4ab_UnaryExpr *_self_, _1aaa2e4ab_UnaryExpr _other_);


struct _1aaa2e9d9_StructArgExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aa9689cd_FieldIns> _field_Field;
	jule::Ptr<_1aabb8db5_Data> _field_Expr;
};
inline jule::Bool _1aaa2e9d9_StructArgExpr_eq(_1aaa2e9d9_StructArgExpr *_self_, _1aaa2e9d9_StructArgExpr _other_);


struct _1aaa2ed80_StructLitExpr {
	jule::Ptr<_1aa969605_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1aaa2e9d9_StructArgExpr>> _field_Args;
};
struct _1aaa3017c_AllocStructLitExpr {
	jule::Ptr<_1aaa2ed80_StructLitExpr> _field_Lit;
};
inline jule::Bool _1aaa3017c_AllocStructLitExpr_eq(_1aaa3017c_AllocStructLitExpr *_self_, _1aaa3017c_AllocStructLitExpr _other_);


struct _1aaa30633_CastingExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aabb8db5_Data> _field_Expr;
	jule::Ptr<_1aabecdb6_Type> _field_Type;
};
inline jule::Bool _1aaa30633_CastingExpr_eq(_1aaa30633_CastingExpr *_self_, _1aaa30633_CastingExpr _other_);


struct _1aaa30ed5_FnCallExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1aaaec832_Scope> _field_Except;
	jule::Bool _field_Assigned;
};
struct _1aaa313ae_SliceExpr {
	jule::Ptr<_1aabecdb6_Type> _field_ElemType;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1aaa31865_IndexingExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aabb8db5_Data> _field_Expr;
	jule::Ptr<_1aabb8db5_Data> _field_Index;
};
inline jule::Bool _1aaa31865_IndexingExpr_eq(_1aaa31865_IndexingExpr *_self_, _1aaa31865_IndexingExpr _other_);


struct _1aaa31d1b_AnonFnExpr {
	jule::Slice<jule::Ptr<_1aab70795_Var>> _field_Captured;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_Func;
	jule::Bool _field_Global;
};
struct _1aaa321e5_KeyValPairExpr {
	jule::Any _field_Key;
	jule::Any _field_Val;
};
inline jule::Bool _1aaa321e5_KeyValPairExpr_eq(_1aaa321e5_KeyValPairExpr *_self_, _1aaa321e5_KeyValPairExpr _other_);


struct _1aaa325be_MapExpr {
	jule::Ptr<_1aac0c865_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1aaa321e5_KeyValPairExpr>> _field_Entries;
};
struct _1aaa32b52_SlicingExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1aaa32b52_SlicingExpr_eq(_1aaa32b52_SlicingExpr *_self_, _1aaa32b52_SlicingExpr _other_);


struct _1aaa331d5_TraitSubIdentExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1aaa3b221_Fn> _field_Method;
	jule::Ptr<_1aaa46935_Trait> _field_Trt;
};
inline jule::Bool _1aaa331d5_TraitSubIdentExpr_eq(_1aaa331d5_TraitSubIdentExpr *_self_, _1aaa331d5_TraitSubIdentExpr _other_);


struct _1aaa33a76_StructSubIdentExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aabb8db5_Data> _field_Expr;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_Method;
	jule::Ptr<_1aa9689cd_FieldIns> _field_Field;
	jule::Ptr<_1aa969605_StructIns> _field_Owner;
};
inline jule::Bool _1aaa33a76_StructSubIdentExpr_eq(_1aaa33a76_StructSubIdentExpr *_self_, _1aaa33a76_StructSubIdentExpr _other_);


struct _1aaa33e1c_StructStaticIdentExpr {
	jule::Ptr<_1aa969605_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_Method;
};
inline jule::Bool _1aaa33e1c_StructStaticIdentExpr_eq(_1aaa33e1c_StructStaticIdentExpr *_self_, _1aaa33e1c_StructStaticIdentExpr _other_);


struct _1aaa342e6_ArrayExpr {
	jule::Ptr<_1aac0d4e2_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1aaa345e3_TupleExpr {
	jule::Slice<jule::Ptr<_1aabb8db5_Data>> _field_Datas;
};
struct _1aaa348e0_BuiltinPrintCallExpr {
	jule::Ptr<_1aabb8db5_Data> _field_Expr;
};
inline jule::Bool _1aaa348e0_BuiltinPrintCallExpr_eq(_1aaa348e0_BuiltinPrintCallExpr *_self_, _1aaa348e0_BuiltinPrintCallExpr _other_);


struct _1aaa34bdc_BuiltinPrintlnCallExpr {
	jule::Ptr<_1aabb8db5_Data> _field_Expr;
};
inline jule::Bool _1aaa34bdc_BuiltinPrintlnCallExpr_eq(_1aaa34bdc_BuiltinPrintlnCallExpr *_self_, _1aaa34bdc_BuiltinPrintlnCallExpr _other_);


struct _1aaa350b6_BuiltinNewCallExpr {
	jule::Ptr<_1aabecdb6_Type> _field_Type;
	jule::Any _field_Init;
};
inline jule::Bool _1aaa350b6_BuiltinNewCallExpr_eq(_1aaa350b6_BuiltinNewCallExpr *_self_, _1aaa350b6_BuiltinNewCallExpr _other_);


struct _1aaa35490_BuiltinPanicCallExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Any _field_Expr;
};
inline jule::Bool _1aaa35490_BuiltinPanicCallExpr_eq(_1aaa35490_BuiltinPanicCallExpr *_self_, _1aaa35490_BuiltinPanicCallExpr _other_);


struct _1aaa35946_BuiltinMakeCallExpr {
	jule::Ptr<_1aabecdb6_Type> _field_Type;
	jule::Any _field_Len;
	jule::Any _field_Cap;
};
inline jule::Bool _1aaa35946_BuiltinMakeCallExpr_eq(_1aaa35946_BuiltinMakeCallExpr *_self_, _1aaa35946_BuiltinMakeCallExpr _other_);


struct _1aaa35d20_BuiltinAppendCallExpr {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
};
inline jule::Bool _1aaa35d20_BuiltinAppendCallExpr_eq(_1aaa35d20_BuiltinAppendCallExpr *_self_, _1aaa35d20_BuiltinAppendCallExpr _other_);


struct _1aaa3611c_BuiltinLenCallExpr {
	jule::Ptr<_1aabb8db5_Data> _field_Expr;
};
inline jule::Bool _1aaa3611c_BuiltinLenCallExpr_eq(_1aaa3611c_BuiltinLenCallExpr *_self_, _1aaa3611c_BuiltinLenCallExpr _other_);


struct _1aaa36419_BuiltinCapCallExpr {
	jule::Ptr<_1aabb8db5_Data> _field_Expr;
};
inline jule::Bool _1aaa36419_BuiltinCapCallExpr_eq(_1aaa36419_BuiltinCapCallExpr *_self_, _1aaa36419_BuiltinCapCallExpr _other_);


struct _1aaa367e3_BuiltinDeleteCallExpr {
	jule::Ptr<_1aabb8db5_Data> _field_Dest;
	jule::Ptr<_1aabb8db5_Data> _field_Key;
};
inline jule::Bool _1aaa367e3_BuiltinDeleteCallExpr_eq(_1aaa367e3_BuiltinDeleteCallExpr *_self_, _1aaa367e3_BuiltinDeleteCallExpr _other_);


struct _1aaa36bbc_BuiltinCopyCallExpr {
	jule::Ptr<_1aabb8db5_Data> _field_Dest;
	jule::Ptr<_1aabb8db5_Data> _field_Src;
};
inline jule::Bool _1aaa36bbc_BuiltinCopyCallExpr_eq(_1aaa36bbc_BuiltinCopyCallExpr *_self_, _1aaa36bbc_BuiltinCopyCallExpr _other_);


struct _1aaa37096_BuiltinErrorCallExpr {
	jule::Ptr<_1aaa3e2ce_FnIns> _field_Func;
	jule::Ptr<_1aabb8db5_Data> _field_Err;
};
inline jule::Bool _1aaa37096_BuiltinErrorCallExpr_eq(_1aaa37096_BuiltinErrorCallExpr *_self_, _1aaa37096_BuiltinErrorCallExpr _other_);


struct _1aaa37393_SizeofExpr {
	jule::Any _field_Expr;
};
inline jule::Bool _1aaa37393_SizeofExpr_eq(_1aaa37393_SizeofExpr *_self_, _1aaa37393_SizeofExpr _other_);


struct _1aaa37a47_AlignofExpr {
	jule::Any _field_Expr;
};
inline jule::Bool _1aaa37a47_AlignofExpr_eq(_1aaa37a47_AlignofExpr *_self_, _1aaa37a47_AlignofExpr _other_);


struct _1aaa37c34_RuneExpr {
	jule::I32 _field_Code;
};
inline jule::Bool _1aaa37c34_RuneExpr_eq(_1aaa37c34_RuneExpr *_self_, _1aaa37c34_RuneExpr _other_);


struct _1aaa380a8_BackendEmitExpr {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
};
struct _1aaa383a5_FreeExpr {
	jule::Any _field_Expr;
};
inline jule::Bool _1aaa383a5_FreeExpr_eq(_1aaa383a5_FreeExpr *_self_, _1aaa383a5_FreeExpr _other_);


struct _1aaa39186_RetType {
	jule::Ptr<_1aac062ba_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _field_Idents;
};
struct _1aaa3974c_Param {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1aac062ba_TypeSym> _field_TypeSym;
	jule::Str _field_Ident;
};
inline jule::Bool _1aaa3974c_Param_eq(_1aaa3974c_Param *_self_, _1aaa3974c_Param _other_);


struct _1aaa3b221_Fn {
	jule::Ptr<_1aab4c62e_sema> _field_sema;
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aa0ecc34_Directive>> _field_Directives;
	jule::Ptr<_1aa957978_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>> _field_Generics;
	jule::Ptr<_1aaa39186_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1aaa3974c_Param>> _field_Params;
	jule::Ptr<_1aa966767_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>> _field_Instances;
};
struct _1aaa3d179_ParamIns {
	jule::Ptr<_1aaa3974c_Param> _field_Decl;
	jule::Ptr<_1aabecdb6_Type> _field_Type;
};
inline jule::Bool _1aaa3d179_ParamIns_eq(_1aaa3d179_ParamIns *_self_, _1aaa3d179_ParamIns _other_);


struct _1aaa3e2ce_FnIns {
	jule::Ptr<_1aa969605_StructIns> _field_Owner;
	jule::Ptr<_1aaa3b221_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>> _field_Params;
	jule::Ptr<_1aabecdb6_Type> _field_Result;
	jule::Ptr<_1aaaec832_Scope> _field_Scope;
	jule::Ptr<_1aab1cd80_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*> _field_caller;
	jule::Bool _field_reloaded;
};
struct _1aaa42524_SymTab {
	jule::Ptr<_1aa0dd8a1_Fileset> _field_File;
	jule::Slice<_1aab1e3d1_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1aab70795_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1aa966767_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1aaa3b221_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1aaa46935_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1aaa490db_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1aaa4a7e6_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1aaae9840_Impl>> _field_Impls;
};
struct _1aaa46935_Trait {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1aac062ba_TypeSym>> _field_Inherits;
	jule::Slice<jule::Ptr<_1aaa3b221_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1aa966767_Struct>> _field_Implemented;
};
struct _1aaa48580_EnumItem {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aabba03c_Value> _field_Value;
};
inline jule::Bool _1aaa48580_EnumItem_eq(_1aaa48580_EnumItem *_self_, _1aaa48580_EnumItem _other_);


struct _1aaa490db_Enum {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1aac062ba_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1aaa48580_EnumItem>> _field_Items;
};
struct _1aaa4a21e_TypeEnumItem {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aac062ba_TypeSym> _field_TypeSym;
};
inline jule::Bool _1aaa4a21e_TypeEnumItem_eq(_1aaa4a21e_TypeEnumItem *_self_, _1aaa4a21e_TypeEnumItem _other_);


struct _1aaa4a7e6_TypeEnum {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aaa4a21e_TypeEnumItem>> _field_Items;
};
struct _1aaac1152_comptimeRange {
	jule::Trait _field_kind;
};
inline jule::Bool _1aaac1152_comptimeRange_eq(_1aaac1152_comptimeRange *_self_, _1aaac1152_comptimeRange _other_);


struct _1aaac1bad_comptimeStructField {
	jule::Ptr<_1aa9689cd_FieldIns> _field_field;
};
inline jule::Bool _1aaac1bad_comptimeStructField_eq(_1aaac1bad_comptimeStructField *_self_, _1aaac1bad_comptimeStructField _other_);


struct _1aaac3451_comptimeStructFields {
	jule::Slice<jule::Ptr<_1aa9689cd_FieldIns>> _field_fields;
};
struct _1aaac4dd1_comptimeStatic {
	jule::Ptr<_1aab70795_Var> _field_field;
};
inline jule::Bool _1aaac4dd1_comptimeStatic_eq(_1aaac4dd1_comptimeStatic *_self_, _1aaac4dd1_comptimeStatic _other_);


struct _1aaac6685_comptimeStatics {
	jule::Slice<jule::Ptr<_1aab70795_Var>> _field_fields;
};
struct _1aaac8104_comptimeEnumField {
	jule::Ptr<_1aaa48580_EnumItem> _field_field;
};
inline jule::Bool _1aaac8104_comptimeEnumField_eq(_1aaac8104_comptimeEnumField *_self_, _1aaac8104_comptimeEnumField _other_);


struct _1aaac9413_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1aaa48580_EnumItem>> _field_fields;
};
struct _1aaacae1a_comptimeParam {
	jule::Ptr<_1aaa3d179_ParamIns> _field_param;
};
inline jule::Bool _1aaacae1a_comptimeParam_eq(_1aaacae1a_comptimeParam *_self_, _1aaacae1a_comptimeParam _other_);


struct _1aaaccc74_comptimeParams {
	jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>> _field_params;
};
struct _1aaace5d3_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1aaad1052_comptimeTypeInfo>> _field_types;
};
struct _1aaad1052_comptimeTypeInfo {
	jule::Ptr<_1aabecdb6_Type> _field_base;
};
inline jule::Bool _1aaad1052_comptimeTypeInfo_eq(_1aaad1052_comptimeTypeInfo *_self_, _1aaad1052_comptimeTypeInfo _other_);


struct _1aaad7564_comptimeValue {
	jule::Ptr<_1aabb8db5_Data> _field_data;
};
inline jule::Bool _1aaad7564_comptimeValue_eq(_1aaad7564_comptimeValue *_self_, _1aaad7564_comptimeValue _other_);


struct _1aaada2c0_comptimeFiles {
	jule::Slice<jule::Ptr<_1aaa42524_SymTab>> _field_files;
};
struct _1aaadbc3e_comptimeFile {
	jule::Ptr<_1aaa42524_SymTab> _field_file;
};
inline jule::Bool _1aaadbc3e_comptimeFile_eq(_1aaadbc3e_comptimeFile *_self_, _1aaadbc3e_comptimeFile _other_);


struct _1aaadd867_comptimeDecls {
	jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>> _field_decls;
};
struct _1aaae0b55_comptimeDecl {
	jule::Any _field_decl;
};
inline jule::Bool _1aaae0b55_comptimeDecl_eq(_1aaae0b55_comptimeDecl *_self_, _1aaae0b55_comptimeDecl _other_);


struct _1aaae7541_constraintChecker {
	jule::Ptr<_1aab4c62e_sema> _field_s;
	jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _field_genericsA;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_fi;
	jule::Ptr<_1aa969605_StructIns> _field_si;
	jule::Ptr<_1aa0d7ceb_Token> _field_et;
	jule::Bool _field_uniq;
};
struct _1aaae9840_Impl {
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Base;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1aaa3b221_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1aab70795_Var>> _field_Statics;
};
struct _1aaaec0a1_exprPart {
	jule::Ptr<_1aabb8db5_Data> _field_data;
	jule::Ptr<_1aa102b4b_Expr> _field_expr;
};
inline jule::Bool _1aaaec0a1_exprPart_eq(_1aaaec0a1_exprPart *_self_, _1aaaec0a1_exprPart _other_);


struct _1aaaec832_Scope {
	jule::Ptr<_1aaaec832_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I32 _field_ChildIndex;
	jule::I32 _field_StmtIndex;
};
struct _1aaaecc0b_If {
	jule::Any _field_Expr;
	jule::Ptr<_1aaaec832_Scope> _field_Scope;
};
inline jule::Bool _1aaaecc0b_If_eq(_1aaaecc0b_If *_self_, _1aaaecc0b_If _other_);


struct _1aaaed080_Else {
	jule::Ptr<_1aaaec832_Scope> _field_Scope;
};
inline jule::Bool _1aaaed080_Else_eq(_1aaaed080_Else *_self_, _1aaaed080_Else _other_);


struct _1aaaed426_Conditional {
	jule::Slice<jule::Ptr<_1aaaecc0b_If>> _field_Elifs;
	jule::Ptr<_1aaaed080_Else> _field_Default;
};
struct _1aaaed723_InfIter {
	jule::Ptr<_1aaaec832_Scope> _field_Scope;
};
inline jule::Bool _1aaaed723_InfIter_eq(_1aaaed723_InfIter *_self_, _1aaaed723_InfIter _other_);


struct _1aaaedbc9_WhileIter {
	jule::Ptr<_1aaaec832_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
};
inline jule::Bool _1aaaedbc9_WhileIter_eq(_1aaaedbc9_WhileIter *_self_, _1aaaedbc9_WhileIter _other_);


struct _1aaaee6ad_RangeIter {
	jule::Ptr<_1aaaec832_Scope> _field_Scope;
	jule::Ptr<_1aabb8db5_Data> _field_Expr;
	jule::Ptr<_1aab70795_Var> _field_KeyA;
	jule::Ptr<_1aab70795_Var> _field_KeyB;
};
inline jule::Bool _1aaaee6ad_RangeIter_eq(_1aaaee6ad_RangeIter *_self_, _1aaaee6ad_RangeIter _other_);


struct _1aaaee9aa_ContSt {
	jule::Uintptr _field_It;
};
inline jule::Bool _1aaaee9aa_ContSt_eq(_1aaaee9aa_ContSt *_self_, _1aaaee9aa_ContSt _other_);


struct _1aaaeed84_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
};
inline jule::Bool _1aaaeed84_BreakSt_eq(_1aaaeed84_BreakSt *_self_, _1aaaeed84_BreakSt _other_);


struct _1aab0033a_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1aaaec832_Scope> _field_Scope;
	jule::I32 _field_Index;
};
inline jule::Bool _1aab0033a_Label_eq(_1aab0033a_Label *_self_, _1aab0033a_Label _other_);


struct _1aab0099a_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Ptr<_1aab0033a_Label> _field_Label;
	jule::Ptr<_1aaaec832_Scope> _field_Scope;
	jule::I32 _field_Index;
};
inline jule::Bool _1aab0099a_GotoSt_eq(_1aab0099a_GotoSt *_self_, _1aab0099a_GotoSt _other_);


struct _1aab00d74_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
};
inline jule::Bool _1aab00d74_Postfix_eq(_1aab00d74_Postfix *_self_, _1aab00d74_Postfix _other_);


struct _1aab0132a_Assign {
	jule::Ptr<_1aaa2dad7_OperandExpr> _field_Left;
	jule::Ptr<_1aaa2dad7_OperandExpr> _field_Right;
	jule::Ptr<_1aa0d7ceb_Token> _field_Op;
};
inline jule::Bool _1aab0132a_Assign_eq(_1aab0132a_Assign *_self_, _1aab0132a_Assign _other_);


struct _1aab018ad_MultiAssign {
	jule::Slice<jule::Ptr<_1aab70795_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1aabb8db5_Data>> _field_Left;
	jule::Any _field_Right;
	jule::Ptr<_1aa0d7ceb_Token> _field_Op;
};
struct _1aab0232b_Match {
	jule::Ptr<_1aaaec832_Scope> _field_Scope;
	jule::Ptr<_1aabb8db5_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1aab02b23_Case>> _field_Cases;
	jule::Ptr<_1aab02b23_Case> _field_Default;
};
struct _1aab02b23_Case {
	jule::Ptr<_1aab0232b_Match> _field_Owner;
	jule::Ptr<_1aaaec832_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1aabb8db5_Data>> _field_Exprs;
	jule::Ptr<_1aab02b23_Case> _field_Next;
};
struct _1aab0331b_FallSt {
	jule::Uintptr _field_DestCase;
};
inline jule::Bool _1aab0331b_FallSt_eq(_1aab0331b_FallSt *_self_, _1aab0331b_FallSt _other_);


struct _1aab036b2_RetSt {
	jule::Ptr<_1aaa3e2ce_FnIns> _field_Func;
	jule::Any _field_Expr;
};
inline jule::Bool _1aab036b2_RetSt_eq(_1aab036b2_RetSt *_self_, _1aab036b2_RetSt _other_);


struct _1aab03b68_scopeLabel {
	jule::Ptr<_1aa0d7ceb_Token> _field_token;
	jule::Ptr<_1aab0033a_Label> _field_node;
	jule::Bool _field_used;
};
inline jule::Bool _1aab03b68_scopeLabel_eq(_1aab03b68_scopeLabel *_self_, _1aab03b68_scopeLabel _other_);


struct _1aab04042_result {
	jule::Ptr<_1aaa3e2ce_FnIns> _field_func;
	jule::Bool _field_mutable;
};
inline jule::Bool _1aab04042_result_eq(_1aab04042_result *_self_, _1aab04042_result _other_);


struct _1aab05032_scopeChecker {
	jule::Ptr<_1aa0d7ceb_Token> _field_calledFrom;
	jule::Ptr<_1aab4c62e_sema> _field_s;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_owner;
	jule::Ptr<_1aab05032_scopeChecker> _field_parent;
	jule::I32 _field_childIndex;
	jule::Ptr<_1aaa42524_SymTab> _field_table;
	jule::Ptr<_1aaaec832_Scope> _field_scope;
	jule::Ptr<_1aa957978_ScopeTree> _field_tree;
	jule::Ptr<_1aab04042_result> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1aab70795_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1aab03b68_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1aab0099a_GotoSt>>> _field_gotos;
	jule::I32 _field_i;
};
inline jule::Bool _1aab05032_scopeChecker_eq(_1aab05032_scopeChecker *_self_, _1aab05032_scopeChecker _other_);


struct _1aab1a575_directiveChecker {
	jule::Ptr<_1aab4c62e_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>> _field_d;
	jule::Any _field_o;
};
inline jule::Bool _1aab1a575_directiveChecker_eq(_1aab1a575_directiveChecker *_self_, _1aab1a575_directiveChecker _other_);


struct _1aab1cd80_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
};
struct _1aab1e3d1_Pass {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Text;
};
inline jule::Bool _1aab1e3d1_Pass_eq(_1aab1e3d1_Pass *_self_, _1aab1e3d1_Pass _other_);


struct _1aab23d86_symBuilder {
	jule::Ptr<_1aab23d86_symBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1ace263b7_Log> _field_errors;
	jule::Ptr<_1aa0eb8ae_AST> _field_ast;
	jule::Ptr<_1aaa42524_SymTab> _field_table;
};
struct _1aab2ee08_ImportInfo {
	jule::Ptr<_1aa9608a4_UseDecl> _field_Decl;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Ptr<_1aab3267a_Package> _field_Package;
	jule::I32 _field_ModId;
};
inline jule::Bool _1aab2ee08_ImportInfo_eq(_1aab2ee08_ImportInfo *_self_, _1aab2ee08_ImportInfo _other_);


struct _1aab3267a_Package {
	jule::Slice<jule::Ptr<_1aaa42524_SymTab>> _field_Files;
};
struct _1aab4b595_commonSemaMeta {
	jule::Slice<jule::Ptr<_1aaad1052_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1aab2ee08_ImportInfo> _field_runtime;
};
struct _1aab4c62e_sema {
	jule::Slice<_1ace263b7_Log> _field_errors;
	jule::Slice<jule::Ptr<_1aaa42524_SymTab>> _field_files;
	jule::Ptr<_1aaa42524_SymTab> _field_file;
	jule::I32 _field_flags;
	jule::Ptr<_1aab4b595_commonSemaMeta> _field_meta;
	jule::I32 _field_step;
};
struct _1aab6bbd1_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
};
struct _1aab70795_Var {
	jule::Ptr<_1aaaec832_Scope> _field_Scope;
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Bool _field_Checked;
	jule::Ptr<_1aac062ba_TypeSym> _field_TypeSym;
	jule::Ptr<_1aabba03c_Value> _field_Value;
	jule::Ptr<_1aab1cd80_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1aa0ecc34_Directive>> _field_Directives;
	jule::I32 _field_RetOrder;
	jule::Slice<jule::Ptr<_1aab70795_Var>> _field_Depends;
};
struct _1aab71620_FuncPattern {
};
inline jule::Bool _1aab71620_FuncPattern_eq(_1aab71620_FuncPattern *_self_, _1aab71620_FuncPattern _other_);


struct _1aaba4e17_typeCompatibilityChecker {
	jule::Ptr<_1aab4c62e_sema> _field_s;
	jule::Ptr<_1aabecdb6_Type> _field_dest;
	jule::Ptr<_1aabecdb6_Type> _field_src;
	jule::Ptr<_1aa0d7ceb_Token> _field_errorToken;
};
inline jule::Bool _1aaba4e17_typeCompatibilityChecker_eq(_1aaba4e17_typeCompatibilityChecker *_self_, _1aaba4e17_typeCompatibilityChecker _other_);


struct _1aaba6c93_assignTypeChecker {
	jule::Ptr<_1aab4c62e_sema> _field_s;
	jule::Ptr<_1aabecdb6_Type> _field_dest;
	jule::Ptr<_1aabb8db5_Data> _field_d;
	jule::Ptr<_1aa0d7ceb_Token> _field_errorToken;
	jule::Ptr<_1aab1cd80_ReferenceStack> _field_refers;
};
inline jule::Bool _1aaba6c93_assignTypeChecker_eq(_1aaba6c93_assignTypeChecker *_self_, _1aaba6c93_assignTypeChecker _other_);


struct _1aaba8668_dynamicTypeAnnotation {
	jule::Ptr<_1aabbad84_eval> _field_e;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_f;
	jule::Ptr<_1aaa3d179_ParamIns> _field_p;
	jule::Ptr<_1aabb8db5_Data> _field_a;
	jule::Ptr<_1aa0d7ceb_Token> _field_errorToken;
	jule::Ptr<_1aabecdb6_Type>* _field_k;
	jule::Ptr<_1aa0ed817_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1aabecdb6_Type>> _field_ignored;
};
struct _1aabad4c5_fnCallArgChecker {
	jule::Ptr<_1aabbad84_eval> _field_e;
	jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _field_args;
	jule::Ptr<_1aa0d7ceb_Token> _field_errorToken;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1aabecdb6_Type>> _field_ignored;
};
struct _1aabb140c_structLitChecker {
	jule::Ptr<_1aabbad84_eval> _field_e;
	jule::Ptr<_1aa0d7ceb_Token> _field_errorToken;
	jule::Ptr<_1aa969605_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1aaa2e9d9_StructArgExpr>> _field_args;
};
struct _1aabb31de_rangeChecker {
	jule::Ptr<_1aab05032_scopeChecker> _field_sc;
	jule::Ptr<_1aa95c64d_RangeKind> _field_rang;
	jule::Ptr<_1aaaee6ad_RangeIter> _field_Kind;
	jule::Ptr<_1aabb8db5_Data> _field_d;
};
inline jule::Bool _1aabb31de_rangeChecker_eq(_1aabb31de_rangeChecker *_self_, _1aabb31de_rangeChecker _other_);


struct _1aabb5b09_retTypeChecker {
	jule::Ptr<_1aab05032_scopeChecker> _field_sc;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1aabecdb6_Type>> _field_types;
	jule::Slice<jule::Ptr<_1aabb8db5_Data>> _field_exprs;
	jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _field_exprDecls;
	jule::Ptr<_1aa0d7ceb_Token> _field_errorToken;
	jule::Any _field_model;
	jule::Bool _field_mutable;
};
struct _1aabb8db5_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1aabecdb6_Type> _field_Type;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1aa9b96cc_Const> _field_Constant;
};
inline jule::Bool _1aabb8db5_Data_eq(_1aabb8db5_Data *_self_, _1aabb8db5_Data _other_);


struct _1aabba03c_Value {
	jule::Ptr<_1aa102b4b_Expr> _field_Expr;
	jule::Ptr<_1aabb8db5_Data> _field_Data;
};
inline jule::Bool _1aabba03c_Value_eq(_1aabba03c_Value *_self_, _1aabba03c_Value _other_);


struct _1aabba416_target {
	jule::Bool _field_ignored;
	jule::Bool _field_mutable;
};
inline jule::Bool _1aabba416_target_eq(_1aabba416_target *_self_, _1aabba416_target _other_);


struct _1aabbad84_eval {
	jule::Ptr<_1aab4c62e_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1aabecdb6_Type> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1aab70795_Var> _field_owner;
	jule::Ptr<_1aa9689cd_FieldIns> _field_field;
	_1aabba416_target _field_target;
};
inline jule::Bool _1aabbad84_eval_eq(_1aabbad84_eval *_self_, _1aabbad84_eval _other_);


struct _1aabdb2c2_unaryEval {
	jule::Ptr<_1aabbad84_eval> _field_e;
	jule::Ptr<_1aabb8db5_Data> _field_d;
	jule::Ptr<_1aa104c08_UnaryExpr> _field_u;
};
inline jule::Bool _1aabdb2c2_unaryEval_eq(_1aabdb2c2_unaryEval *_self_, _1aabdb2c2_unaryEval _other_);


struct _1aabdd25d_binaryEval {
	jule::Ptr<_1aabbad84_eval> _field_e;
	jule::Ptr<_1aabb8db5_Data> _field_l;
	jule::Ptr<_1aabb8db5_Data> _field_r;
	jule::Ptr<_1aa0d7ceb_Token> _field_op;
};
inline jule::Bool _1aabdd25d_binaryEval_eq(_1aabdd25d_binaryEval *_self_, _1aabdd25d_binaryEval _other_);


struct _1aabeb4d0_InsGeneric {
	jule::Ptr<_1aabecdb6_Type> _field_Type;
	jule::Slice<jule::Ptr<_1aabecdb6_Type>> _field_Constraint;
};
struct _1aabec1a1_TypeAlias {
	jule::Ptr<_1aa957978_ScopeTree> _field_Scope;
	jule::Bool _field_Strict;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aac062ba_TypeSym> _field_TypeSym;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _field_Generics;
};
struct _1aabecdb6_Type {
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
};
inline jule::Bool _1aabecdb6_Type_eq(_1aabecdb6_Type *_self_, _1aabecdb6_Type _other_);


struct _1aac062ba_TypeSym {
	jule::Ptr<_1aa0ed817_TypeDecl> _field_Decl;
	jule::Ptr<_1aabecdb6_Type> _field_Type;
};
inline jule::Bool _1aac062ba_TypeSym_eq(_1aac062ba_TypeSym *_self_, _1aac062ba_TypeSym _other_);


struct _1aac06bc2_Prim {
	jule::Str _field_Kind;
};
inline jule::Bool _1aac06bc2_Prim_eq(_1aac06bc2_Prim *_self_, _1aac06bc2_Prim _other_);


struct _1aac0a6ed_Sptr {
	jule::Ptr<_1aabecdb6_Type> _field_Elem;
};
inline jule::Bool _1aac0a6ed_Sptr_eq(_1aac0a6ed_Sptr *_self_, _1aac0a6ed_Sptr _other_);


struct _1aac0b1c1_Slc {
	jule::Ptr<_1aabecdb6_Type> _field_Elem;
};
inline jule::Bool _1aac0b1c1_Slc_eq(_1aac0b1c1_Slc *_self_, _1aac0b1c1_Slc _other_);


struct _1aac0bcb5_Tuple {
	jule::Slice<jule::Ptr<_1aabecdb6_Type>> _field_Types;
};
struct _1aac0c865_Map {
	jule::Ptr<_1aabecdb6_Type> _field_Key;
	jule::Ptr<_1aabecdb6_Type> _field_Val;
};
inline jule::Bool _1aac0c865_Map_eq(_1aac0c865_Map *_self_, _1aac0c865_Map _other_);


struct _1aac0d4e2_Arr {
	jule::Bool _field_Auto;
	jule::I32 _field_N;
	jule::Ptr<_1aabecdb6_Type> _field_Elem;
};
inline jule::Bool _1aac0d4e2_Arr_eq(_1aac0d4e2_Arr *_self_, _1aac0d4e2_Arr _other_);


struct _1aac0deb5_Ptr {
	jule::Ptr<_1aabecdb6_Type> _field_Elem;
};
inline jule::Bool _1aac0deb5_Ptr_eq(_1aac0deb5_Ptr *_self_, _1aac0deb5_Ptr _other_);


struct _1aac0eeb6_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
};
inline jule::Bool _1aac0eeb6_referencer_eq(_1aac0eeb6_referencer *_self_, _1aac0eeb6_referencer _other_);


struct _1aac10ea6_typeChecker {
	jule::Ptr<_1aab4c62e_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1aac0eeb6_referencer> _field_referencer;
	jule::Ptr<_1aab1cd80_ReferenceStack> _field_refers;
	jule::Ptr<_1aa0d7ceb_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1aabecdb6_Type>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1aabec1a1_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
};
struct _1aac1ddc6_identTypeLookup {
};
inline jule::Bool _1aac1ddc6_identTypeLookup_eq(_1aac1ddc6_identTypeLookup *_self_, _1aac1ddc6_identTypeLookup _other_);


struct _1ab57e7e1_FileInfo {
	jule::Ptr<_1aa0eb8ae_AST> _field_Ast;
	jule::Slice<_1ace263b7_Log> _field_Errors;
};
struct _1ab5cbb6d_stmt {
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _field_tokens;
	jule::Bool _field_terminated;
};
struct _1ab5cc50e_scopeParser {
	jule::Ptr<_1ab5ea2da_parser> _field_p;
	jule::Ptr<_1aa957978_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1ab5cbb6d_stmt>> _field_stmts;
	jule::I32 _field_pos;
};
struct _1ab5d9e34_exprBuilder {
	jule::Ptr<_1ab5ea2da_parser> _field_p;
};
inline jule::Bool _1ab5d9e34_exprBuilder_eq(_1ab5d9e34_exprBuilder *_self_, _1ab5d9e34_exprBuilder _other_);


struct _1ab5e70ea_assignInfo {
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _field_l;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _field_r;
	jule::Ptr<_1aa0d7ceb_Token> _field_setter;
	jule::Bool _field_ok;
};
struct _1ab5ea2da_parser {
	jule::Ptr<_1aa0eb8ae_AST> _field_ast;
	jule::Slice<jule::Ptr<_1aa0ecc34_Directive>> _field_directives;
	jule::Slice<_1ace263b7_Log> _field_errors;
	jule::Ptr<_1ab5d9e34_exprBuilder> _field_ep;
};
struct _1ab60b494_typeBuilder {
	jule::Ptr<_1ab5ea2da_parser> _field_p;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _field_tokens;
	jule::I32* _field_i;
	jule::Bool _field_err;
};
struct _1aa8128bb_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
};
inline jule::Bool _1aa8128bb_CompileInfo_eq(_1aa8128bb_CompileInfo *_self_, _1aa8128bb_CompileInfo _other_);


struct _1aa814109_directiveEval {
	jule::Slice<_1ace263b7_Log> _field_logs;
	jule::Ptr<_1aa0ecc34_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
};
struct _1ab6106da_Importer {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
};
struct _1aac852c2_anyData {
	jule::Ptr<jule::U32> _field_dataPtr;
	void* _field_typePtr;
};
inline jule::Bool _1aac852c2_anyData_eq(_1aac852c2_anyData *_self_, _1aac852c2_anyData _other_);


struct _1ab616a21_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
};
struct _1ab61e0de_MetaStrBuilder {
	jule::Ptr<_1aaa3e2ce_FnIns> _field_Write;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_WriteByte;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_WriteRune;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_WriteStr;
};
inline jule::Bool _1ab61e0de_MetaStrBuilder_eq(_1ab61e0de_MetaStrBuilder *_self_, _1ab61e0de_MetaStrBuilder _other_);


struct _1ab61ecb0_MetaRuntime {
	jule::Ptr<_1aaa3b221_Fn> _field_ToStr;
	jule::Ptr<_1aaa3b221_Fn> _field_ArrayCmp;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_RCAdd;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_RCLoad;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_RCDrop;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_RCAddAtomic;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_RCLoadAtomic;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_RCDropAtomic;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_RuneCount;
	jule::Ptr<_1aa966767_Struct> _field_Map;
	jule::Ptr<_1aa966767_Struct> _field_MapIterator;
};
inline jule::Bool _1ab61ecb0_MetaRuntime_eq(_1ab61ecb0_MetaRuntime *_self_, _1ab61ecb0_MetaRuntime _other_);


struct _1ab620783_MetaMathCmplx {
	jule::Ptr<_1aa969605_StructIns> _field_Cmplx;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_CmplxAdd;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_CmplxSub;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_CmplxMul;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_CmplxDiv;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_CmplxAddZ;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_CmplxSubZ;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_CmplxMulZ;
	jule::Ptr<_1aaa3e2ce_FnIns> _field_CmplxDivZ;
};
inline jule::Bool _1ab620783_MetaMathCmplx_eq(_1ab620783_MetaMathCmplx *_self_, _1ab620783_MetaMathCmplx _other_);


struct _1ab620d8d_Meta {
	jule::Ptr<_1ab61ecb0_MetaRuntime> _field_Runtime;
	jule::Ptr<_1ab61e0de_MetaStrBuilder> _field_StrBuilder;
	jule::Ptr<_1ab620783_MetaMathCmplx> _field_MathCmplx;
	jule::Ptr<_1aaa3b221_Fn> _field_EntryPoint;
};
inline jule::Bool _1ab620d8d_Meta_eq(_1ab620d8d_Meta *_self_, _1ab620d8d_Meta _other_);


struct _1ab622367_OrderedDefines {
	jule::Slice<jule::Ptr<_1aa966767_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1aab70795_Var>> _field_Globals;
};
struct _1ac7acbb6_liveTable {
	jule::Slice<jule::Ptr<_1aab70795_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1aa969605_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1aaa46935_Trait>> _field_traits;
};
struct _1ac7acec4_ObjectDeadCode {
	_1ac7acbb6_liveTable _field_live;
	jule::Ptr<_1ab61326a_IR> _field_ir;
};
struct _1ac7b23b3_scopeDeadCode {
	jule::Ptr<_1ac7b23b3_scopeDeadCode> _field_parent;
	jule::Ptr<_1aaaec832_Scope> _field_s;
	jule::I32 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1aab0033a_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1aab0099a_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
};
inline jule::Bool _1ac7b23b3_scopeDeadCode_eq(_1ac7b23b3_scopeDeadCode *_self_, _1ac7b23b3_scopeDeadCode _other_);


struct _1ac7b694a_exprDeadCode {
	jule::Ptr<_1ac7b23b3_scopeDeadCode> _field_s;
};
inline jule::Bool _1ac7b694a_exprDeadCode_eq(_1ac7b694a_exprDeadCode *_self_, _1ac7b694a_exprDeadCode _other_);


struct _1ac3d4d60_StrFromBytes {
	jule::Any _field_Expr;
};
inline jule::Bool _1ac3d4d60_StrFromBytes_eq(_1ac3d4d60_StrFromBytes *_self_, _1ac3d4d60_StrFromBytes _other_);


struct _1ac3d513a_ExceptionalForwardingExpr {
	jule::Ptr<_1aaa30ed5_FnCallExpr> _field_Expr;
};
inline jule::Bool _1ac3d513a_ExceptionalForwardingExpr_eq(_1ac3d513a_ExceptionalForwardingExpr *_self_, _1ac3d513a_ExceptionalForwardingExpr _other_);


struct _1ac3d53c1_FnCallIgnoreExceptionalExpr {
	jule::Ptr<_1aaa30ed5_FnCallExpr> _field_Base;
};
inline jule::Bool _1ac3d53c1_FnCallIgnoreExceptionalExpr_eq(_1ac3d53c1_FnCallIgnoreExceptionalExpr *_self_, _1ac3d53c1_FnCallIgnoreExceptionalExpr _other_);


struct _1ac3d5745_StrConcatExpr {
	jule::Slice<jule::Any> _field_Parts;
};
struct _1ac3d5adb_SwapExpr {
	jule::Ptr<_1aabb8db5_Data> _field_Left;
	jule::Ptr<_1aabb8db5_Data> _field_Right;
};
inline jule::Bool _1ac3d5adb_SwapExpr_eq(_1ac3d5adb_SwapExpr *_self_, _1ac3d5adb_SwapExpr _other_);


struct _1ac3d5eb5_EmptyCompareExpr {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
};
inline jule::Bool _1ac3d5eb5_EmptyCompareExpr_eq(_1ac3d5eb5_EmptyCompareExpr *_self_, _1ac3d5eb5_EmptyCompareExpr _other_);


struct _1ac3d62b2_RefExpr {
	jule::Ptr<_1aab70795_Var> _field_Var;
};
inline jule::Bool _1ac3d62b2_RefExpr_eq(_1ac3d62b2_RefExpr *_self_, _1ac3d62b2_RefExpr _other_);


struct _1ac3d6801_StrCompExpr {
	jule::Any _field_Left;
	jule::Ptr<_1aa9b96cc_Const> _field_Right;
	jule::Bool _field_NotEq;
};
inline jule::Bool _1ac3d6801_StrCompExpr_eq(_1ac3d6801_StrCompExpr *_self_, _1ac3d6801_StrCompExpr _other_);


struct _1ac3d6d84_MutSlicingExpr {
	jule::Ptr<_1aa0d7ceb_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1ac3d6d84_MutSlicingExpr_eq(_1ac3d6d84_MutSlicingExpr *_self_, _1ac3d6d84_MutSlicingExpr _other_);


struct _1ac3d7181_UnsafeBinaryExpr {
	jule::Ptr<_1aaa2e0d2_BinaryExpr> _field_Node;
};
inline jule::Bool _1ac3d7181_UnsafeBinaryExpr_eq(_1ac3d7181_UnsafeBinaryExpr *_self_, _1ac3d7181_UnsafeBinaryExpr _other_);


struct _1ac3d747d_UnsafeIndexingExpr {
	jule::Ptr<_1aaa31865_IndexingExpr> _field_Node;
};
inline jule::Bool _1ac3d747d_UnsafeIndexingExpr_eq(_1ac3d747d_UnsafeIndexingExpr *_self_, _1ac3d747d_UnsafeIndexingExpr _other_);


struct _1ac3d7857_PushToSliceExpr {
	jule::Any _field_Dest;
	jule::Ptr<_1aaa313ae_SliceExpr> _field_Elems;
};
inline jule::Bool _1ac3d7857_PushToSliceExpr_eq(_1ac3d7857_PushToSliceExpr *_self_, _1ac3d7857_PushToSliceExpr _other_);


struct _1ac3d7c31_AppendToSliceExpr {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
};
inline jule::Bool _1ac3d7c31_AppendToSliceExpr_eq(_1ac3d7c31_AppendToSliceExpr *_self_, _1ac3d7c31_AppendToSliceExpr _other_);


struct _1ac3d810a_StrRuneIter {
	jule::Ptr<_1aabb8db5_Data> _field_Expr;
	jule::Ptr<_1aaaee6ad_RangeIter> _field_Base;
};
inline jule::Bool _1ac3d810a_StrRuneIter_eq(_1ac3d810a_StrRuneIter *_self_, _1ac3d810a_StrRuneIter _other_);


struct _1ac3d8407_UnsafeDerefExpr {
	jule::Ptr<_1aaa2e4ab_UnaryExpr> _field_Base;
};
inline jule::Bool _1ac3d8407_UnsafeDerefExpr_eq(_1ac3d8407_UnsafeDerefExpr *_self_, _1ac3d8407_UnsafeDerefExpr _other_);


struct _1ac3d8935_UnsafeCastingExpr {
	jule::Ptr<_1aaa30633_CastingExpr> _field_Base;
};
inline jule::Bool _1ac3d8935_UnsafeCastingExpr_eq(_1ac3d8935_UnsafeCastingExpr *_self_, _1ac3d8935_UnsafeCastingExpr _other_);


struct _1ac3d9491_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
};
inline jule::Bool _1ac3d9491_nilVar_eq(_1ac3d9491_nilVar *_self_, _1ac3d9491_nilVar _other_);


struct _1ac3d97d2_nils {
	jule::Slice<_1ac3d9491_nilVar> _field_vars;
};
struct _1ac67bd4e_scopeOptimizer {
	jule::Ptr<_1ac67bd4e_scopeOptimizer> _field_parent;
	jule::I32 _field_i;
	jule::Ptr<_1aaaec832_Scope> _field_scope;
	jule::Ptr<_1ac690071_data> _field_data;
};
inline jule::Bool _1ac67bd4e_scopeOptimizer_eq(_1ac67bd4e_scopeOptimizer *_self_, _1ac67bd4e_scopeOptimizer _other_);


struct _1ac68474c_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1ac690071_data> _field_data;
	jule::Ptr<_1ab616a21_ExprInspector> _field_inspector;
	jule::Ptr<_1ac67bd4e_scopeOptimizer> _field_scopeOpt;
};
inline jule::Bool _1ac68474c_exprOptimizer_eq(_1ac68474c_exprOptimizer *_self_, _1ac68474c_exprOptimizer _other_);


struct _1ac68c106_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1aabecdb6_Type> _field_kind;
};
inline jule::Bool _1ac68c106_dynamicVar_eq(_1ac68c106_dynamicVar *_self_, _1ac68c106_dynamicVar _other_);


struct _1ac68c447_dynamic {
	jule::Slice<_1ac68c106_dynamicVar> _field_vars;
};
struct _1ac68ea76_dataCheckpoint {
	jule::Ptr<_1ac69232b_boundary> _field_boundary;
	jule::Ptr<_1ac3d97d2_nils> _field_nils;
	jule::Ptr<_1ac68c447_dynamic> _field_dynamic;
};
inline jule::Bool _1ac68ea76_dataCheckpoint_eq(_1ac68ea76_dataCheckpoint *_self_, _1ac68ea76_dataCheckpoint _other_);


struct _1ac690071_data {
	jule::Ptr<_1ac69232b_boundary> _field_boundary;
	jule::Ptr<_1ac3d97d2_nils> _field_nils;
	jule::Ptr<_1ac68c447_dynamic> _field_dynamic;
};
inline jule::Bool _1ac690071_data_eq(_1ac690071_data *_self_, _1ac690071_data _other_);


struct _1ac691eda_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
};
struct _1ac69232b_boundary {
	jule::Slice<_1ac691eda_boundaryVar> _field_vars;
};
struct _1ac7b7a6c_Optimizer {
	jule::Ptr<_1ab61326a_IR> _field_ir;
};
inline jule::Bool _1ac7b7a6c_Optimizer_eq(_1ac7b7a6c_Optimizer *_self_, _1ac7b7a6c_Optimizer _other_);


struct _1ac887510_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
};
inline jule::Bool _1ac887510_AbsTime_eq(_1ac887510_AbsTime *_self_, _1ac887510_AbsTime _other_);


struct _1ac887bd6_Time {
	jule::U64 _field_sec;
};
inline jule::Bool _1ac887bd6_Time_eq(_1ac887bd6_Time *_self_, _1ac887bd6_Time _other_);


struct _1bea7d8d1_UnixTime {
};
inline jule::Bool _1bea7d8d1_UnixTime_eq(_1bea7d8d1_UnixTime *_self_, _1bea7d8d1_UnixTime _other_);


struct _1bea7de86_TimeData {
};
inline jule::Bool _1bea7de86_TimeData_eq(_1bea7de86_TimeData *_self_, _1bea7de86_TimeData _other_);


struct _1ac7bba4e_scopeCoder {
	jule::Ptr<_1ac894d58_ObjectCoder> _field_oc;
};
inline jule::Bool _1ac7bba4e_scopeCoder_eq(_1ac7bba4e_scopeCoder *_self_, _1ac7bba4e_scopeCoder _other_);


struct _1ac7c7b04_exprCoder {
	jule::Ptr<_1ac894d58_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1aab70795_Var>>> _field_varPrefixes;
};
struct _1ac7da2cb_TestCoder {
	jule::Ptr<_1aa969605_StructIns> _field_t;
	jule::Ptr<_1aaa3b221_Fn> _field_tmReset;
	jule::Ptr<_1aaa3b221_Fn> _field_tmFailed;
	jule::Ptr<_1aaa3b221_Fn> _field_tmSkipped;
	jule::Ptr<_1ac894d58_ObjectCoder> _field_oc;
};
inline jule::Bool _1ac7da2cb_TestCoder_eq(_1ac7da2cb_TestCoder *_self_, _1ac7da2cb_TestCoder _other_);


struct _1ac7dce27_identCoder {
};
inline jule::Bool _1ac7dce27_identCoder_eq(_1ac7dce27_identCoder *_self_, _1ac7dce27_identCoder _other_);


struct _1ac8925a3_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
};
inline jule::Bool _1ac8925a3_SerializationInfo_eq(_1ac8925a3_SerializationInfo *_self_, _1ac8925a3_SerializationInfo _other_);


struct _1ac8929c1_traitCast {
	jule::Ptr<_1aaa46935_Trait> _field_t1;
	jule::Ptr<_1aaa46935_Trait> _field_t2;
};
inline jule::Bool _1ac8929c1_traitCast_eq(_1ac8929c1_traitCast *_self_, _1ac8929c1_traitCast _other_);


struct _1ac892d9a_anonHash {
	jule::Ptr<_1aaa31d1b_AnonFnExpr> _field_expr;
	jule::Str _field_ident;
};
inline jule::Bool _1ac892d9a_anonHash_eq(_1ac892d9a_anonHash *_self_, _1ac892d9a_anonHash _other_);


struct _1ac8932b8_traitHash {
	jule::Ptr<_1aaa46935_Trait> _field_traitDecl;
	jule::Slice<jule::Ptr<_1aaa3b221_Fn>> _field_methods;
};
struct _1ac8935b5_metadata {
	jule::Bool _field_concurrent;
};
inline jule::Bool _1ac8935b5_metadata_eq(_1ac8935b5_metadata *_self_, _1ac8935b5_metadata _other_);


struct _1ac894d58_ObjectCoder {
	_1ace17078_Builder _field_Buf;
	_1ace17078_Builder _field_resultDecls;
	_1ace17078_Builder _field_anyObj;
	_1ace17078_Builder _field_anonObj;
	_1ace17078_Builder _field_deallocObj;
	_1ace17078_Builder _field_coSpawnObj;
	jule::Ptr<_1ab61326a_IR> _field_ir;
	_1ac8925a3_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1ac892d9a_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1aabecdb6_Type>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_1beac6671__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_1aabecdb6_Type>> _field_anyTypeMap;
	jule::Slice<_1ac8929c1_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>> _field_coSpawnMap;
	jule::Slice<jule::Ptr<_1ac8932b8_traitHash>> _field_traitMap;
	jule::Ptr<_1beb1e312__Map> _field_traitMetMap;
	jule::Ptr<_1ac7c7b04_exprCoder> _field_ec;
	jule::Ptr<_1ac7bba4e_scopeCoder> _field_sc;
	jule::Ptr<_1ac8a498e_typeCoder> _field_tc;
	jule::I32 _field_headPos;
	jule::I32 _field_declPos;
	jule::I32 _field_wrapPos;
	_1ac8935b5_metadata _field_meta;
};
struct _1ac8a3d78_customType {
	jule::Str _field_kind;
};
inline jule::Bool _1ac8a3d78_customType_eq(_1ac8a3d78_customType *_self_, _1ac8a3d78_customType _other_);


struct _1ac8a498e_typeCoder {
	jule::Ptr<_1ac894d58_ObjectCoder> _field_oc;
	jule::Ptr<_1ac8ac579_resultCoder> _field_rc;
};
inline jule::Bool _1ac8a498e_typeCoder_eq(_1ac8a498e_typeCoder *_self_, _1ac8a498e_typeCoder _other_);


struct _1ac8ac579_resultCoder {
	jule::Ptr<_1ac8a498e_typeCoder> _field_tc;
};
inline jule::Bool _1ac8ac579_resultCoder_eq(_1ac8ac579_resultCoder *_self_, _1ac8ac579_resultCoder _other_);


struct _1c02aa3c6_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
};
inline jule::Bool _1c02aa3c6_Flag_eq(_1c02aa3c6_Flag *_self_, _1c02aa3c6_Flag _other_);

struct _1c02ad50b_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
};
inline jule::Bool _1c02ad50b_Flag_eq(_1c02ad50b_Flag *_self_, _1c02ad50b_Flag _other_);

struct _1c02b1751_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
};
inline jule::Bool _1c02b1751_Flag_eq(_1c02b1751_Flag *_self_, _1c02b1751_Flag _other_);

struct _1c02b49da_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
};
inline jule::Bool _1c02b49da_Flag_eq(_1c02b49da_Flag *_self_, _1c02b49da_Flag _other_);

struct _1c02b7c30_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
};
inline jule::Bool _1c02b7c30_Flag_eq(_1c02b7c30_Flag *_self_, _1c02b7c30_Flag _other_);


struct _1ac9224bd_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
};
struct _1ac924e82_argParser {
	_1ac9224bd_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i;
};
struct _1ad0a39ea_Dir {
	jule::Str _field_Name;
	_1ad133ecb_Stat _field_Stat;
};
inline jule::Bool _1ad0a39ea_Dir_eq(_1ad0a39ea_Dir *_self_, _1ad0a39ea_Dir _other_);


struct _1ad0a4622_Cmd {
	_1ad131d64_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
};
struct _1ab61326a_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1aab3267a_Package> _field_Main;
	jule::Ptr<_1aab2ee08_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>> _field_Used;
	_1ab622367_OrderedDefines _field_Ordered;
};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1aaa3e2ce_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1aaa3e2ce_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_s_1aaaec0a1_exprPart__jule_tuple_x_1aabb8db5_Data__jule_tuple_bool {
	jule::Slice<_1aaaec0a1_exprPart> __jule_result_arg0;
	jule::Ptr<_1aabb8db5_Data> __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_bool__jule_tuple_str {
	jule::Bool __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aabb8db5_Data__jule_tuple_x_1aabb8db5_Data {
	jule::Ptr<_1aabb8db5_Data> __jule_result_arg0;
	jule::Ptr<_1aabb8db5_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1aabb8db5_Data__jule_tuple_bool {
	jule::Ptr<_1aabb8db5_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aa102b4b_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1aa102b4b_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa95ea07_Case__jule_tuple_bool {
	jule::Ptr<_1aa95ea07_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aa95ea07_Case__jule_tuple_x_1aa95d781_Else {
	jule::Slice<jule::Ptr<_1aa95ea07_Case>> __jule_result_arg0;
	jule::Ptr<_1aa95d781_Else> __jule_result_arg1;
};
struct __jule_tuple__1aa956ed8_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa10c2b5_AssignSt__jule_tuple_bool {
	jule::Ptr<_1aa10c2b5_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1aa0ed817_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aa10170a_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1aa10170a_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log {
	jule::Slice<jule::Ptr<_1aa0eb8ae_AST>> __jule_result_arg0;
	jule::Slice<_1ace263b7_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1ace263b7_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1ace263b7_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1aaa3e2ce_FnIns__jule_tuple_bool {
	jule::Ptr<_1aaa3e2ce_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab61326a_IR__jule_tuple_s_1ace263b7_Log {
	jule::Ptr<_1ab61326a_IR> __jule_result_arg0;
	jule::Slice<_1ace263b7_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1a7368ee7_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1a7368ee7_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1a7368ee7_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1a7368ee7_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_s_1ac931565_byte__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple__1ac931565_byte__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aaa42524_SymTab__jule_tuple_s_1ace263b7_Log {
	jule::Ptr<_1aaa42524_SymTab> __jule_result_arg0;
	jule::Slice<_1ace263b7_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1aab3267a_Package__jule_tuple_s_1ace263b7_Log {
	jule::Ptr<_1aab3267a_Package> __jule_result_arg0;
	jule::Slice<_1ace263b7_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log {
	jule::Ptr<_1aa0eb8ae_AST> __jule_result_arg0;
	jule::Slice<_1ace263b7_Log> __jule_result_arg1;
};
struct __jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_sx_1aa0d7ceb_Token {
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> __jule_result_arg0;
	jule::Slice<_1ace263b7_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__1e10416be_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__1e10420e8_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_1beac6671__Map> static__1beac6a4a_make(void);
inline void _1beac6b9e_initData(_1beac6671__Map* _self_, jule::I32 _13524_cap);
inline jule::U64 _1beac6d03_hash(_1beac6671__Map* _self_, jule::Str _14616_k);
inline void _1beac6e57_rehash(_1beac6671__Map* _self_, jule::I32 _15122_n);
inline jule::I32 _1beac70ab_nextSize(_1beac6671__Map* _self_);
inline void _1beac7210_lookup(jule::Ptr<_1beac6671__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _1beac7364_get(jule::Ptr<_1beac6671__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _1beac74b8_set(_1beac6671__Map* _self_, jule::Str _24123_k);
inline jule::Bool _1beac761c_del(jule::Ptr<_1beac6671__Map> _self_, jule::Str _27624_k);
inline void _1beac7771_clear(jule::Ptr<_1beac6671__Map> _self_);
inline jule::I32 _1beac78c5_len(jule::Ptr<_1beac6671__Map> _self_);
inline jule::I32 _1beac7a29_cap(_1beac6671__Map* _self_);
inline _1bead1deb_mapIterator _1beac7b7d_iterator(jule::Ptr<_1beac6671__Map> _self_);
inline jule::Ptr<_1beb1e312__Map> static__1beb1e642_make(void);
inline void _1beb1e796_initData(_1beb1e312__Map* _self_, jule::I32 _13524_cap);
inline jule::U64 _1beb1e8ea_hash(_1beb1e312__Map* _self_, jule::Ptr<_1aaa3e2ce_FnIns> _14616_k);
inline void _1beb1ea4e_rehash(_1beb1e312__Map* _self_, jule::I32 _15122_n);
inline jule::I32 _1beb1eba3_nextSize(_1beb1e312__Map* _self_);
inline void _1beb1ed07_lookup(jule::Ptr<_1beb1e312__Map> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _1beb1ee5b_get(jule::Ptr<_1beb1e312__Map> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _1beb200b0_set(_1beb1e312__Map* _self_, jule::Ptr<_1aaa3e2ce_FnIns> _24123_k);
inline jule::Bool _1beb20214_del(jule::Ptr<_1beb1e312__Map> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _27624_k);
inline void _1beb20368_clear(jule::Ptr<_1beb1e312__Map> _self_);
inline jule::I32 _1beb204bc_len(jule::Ptr<_1beb1e312__Map> _self_);
inline jule::I32 _1beb20621_cap(_1beb1e312__Map* _self_);
inline _1beb27a35_mapIterator _1beb20775_iterator(jule::Ptr<_1beb1e312__Map> _self_);
inline void _1bead2292_init(_1bead1deb_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1bead23e6_next(_1bead1deb_mapIterator* _self_);
inline void _1beb27dcb_init(_1beb27a35_mapIterator* _self_);
inline __jule_tuple_px_1aaa3e2ce_FnIns__jule_tuple_psuintptr _1beb28030_next(_1beb27a35_mapIterator* _self_);
inline _1ace17078_Builder static__1ace178c5_New(jule::I32 _2316_cap);
inline jule::Exceptional<jule::I32> _1ace17c16_Write(_1ace17078_Builder* _self_, jule::Slice<jule::U8> _3421_b);
inline jule::Exceptional<jule::I32> _1ace18057_WriteStr(_1ace17078_Builder* _self_, jule::Str _4124_s);
inline jule::VoidExceptional _1ace18310_WriteByte(_1ace17078_Builder* _self_, jule::U8 _4825_b);
inline jule::Exceptional<jule::I32> _1ace18651_WriteRune(_1ace17078_Builder* _self_, jule::I32 _5525_r);
inline jule::Str _1ace188d7_Str(_1ace17078_Builder* _self_);
inline void _1ace18ad5_Clear(_1ace17078_Builder* _self_);
inline jule::I32 _1ace18d6b_Len(_1ace17078_Builder* _self_);
inline jule::Slice<jule::U8> _1ace19388_Buf(_1ace17078_Builder* _self_);
inline void _1ace19641_SetBuf(_1ace17078_Builder* _self_, jule::Slice<jule::U8> _9533_buf);
inline jule::U8 _1bb090402_index(_1bb08ee3a_lazyBuff* _self_, jule::I32 _5421_i);
inline void _1bb0906aa_append(_1bb08ee3a_lazyBuff* _self_, jule::U8 _6122_c);
inline jule::Str _1bb090941_string(_1bb08ee3a_lazyBuff* _self_);
inline jule::Exceptional<jule::Ptr<_1ad0a8604_File>> static__1ad0a2950_Open(jule::Str _1517_path, jule::I32 _1528_flag, jule::I32 _1541_mode);
inline jule::VoidExceptional static__1ad0a2b81_Remove(jule::Str _2519_path);
inline jule::Exceptional<jule::I32> _1ad0a3115_Write(_1ad0a8604_File* _self_, jule::Slice<jule::U8> _3821_buf);
inline jule::Exceptional<jule::I32> _1ad0a3456_Read(_1ad0a8604_File* _self_, jule::Slice<jule::U8> _5724_buf);
inline jule::Ptr<_1ad0a8604_File> static__1ad0a90d8_New(jule::Uintptr _6723_handle);
inline jule::Exceptional<jule::Ptr<_1ad0a8604_File>> static__1ad0a93a2_Create(jule::Str _7819_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1ad0a966b_Read(jule::Str _8517_path);
inline jule::VoidExceptional static__1ad0a9a12_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I32 _12443_perm);
inline jule::VoidExceptional _1ad0aa31a_Close(_1ad0a8604_File* _self_);
inline jule::Exceptional<_1ad133ecb_Stat> static__1ad0a5a41_Of(jule::Str _1015_path);
inline jule::Bool _1ad1343d8_IsDir(_1ad133ecb_Stat* _self_);
inline jule::Bool _1ad13466e_IsReg(_1ad133ecb_Stat* _self_);
inline jule::U32 _1ad134905_Size(_1ad133ecb_Stat* _self_);
inline jule::Bool _1a7921ea6_set(_1a792a4dc_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1a79222e7_floatBits(_1a792a4dc_decimal* _self_, _1a7916d03_floatInfo* _33226_flt);
inline void _1a792a8c7_assign(_1a792a4dc_decimal* _self_, jule::U64 _15126_v);
inline void _1a792ab80_shift(_1a792a4dc_decimal* _self_, jule::I32 _17625_k);
inline void _1a792ae38_roundDown(_1a792a4dc_decimal* _self_, jule::I32 _19625_nd);
inline void _1a792b1e1_roundUp(_1a792a4dc_decimal* _self_, jule::I32 _20523_nd);
inline void _1a792b499_round(_1a792a4dc_decimal* _self_, jule::I32 _23221_nd);
inline jule::U64 _1a792b730_roundedInteger(_1a792a4dc_decimal* _self_);
inline void static__1bb0a0852_Reset(void);
inline void static__1bb0c0b5d_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1a7930e2c_LogFlat(_1ace263b7_Log* _1421_l);
inline void static__1a793114c_LogError(_1ace263b7_Log* _1922_l);
inline void static__1a793137d_Log(_1ace263b7_Log* _6417_l);
inline void static__1a79315ae_PrintLogs(jule::Slice<_1ace263b7_Log>* _7423_logs);
inline jule::U8 _1aa0d81a3_Prec(_1aa0d7ceb_Token* _self_);
inline jule::Ptr<_1aa0dd8a1_Fileset> static__1aa0ddc36_New(jule::Str _2016_path);
inline void _1aa0de297_FillMut(_1aa0dd8a1_Fileset* _self_, jule::Slice<jule::U8> _3634_data);
inline jule::Str _1aa0de52d_Dir(_1aa0dd8a1_Fileset* _self_);
inline jule::Str _1aa0de7b4_Name(_1aa0dd8a1_Fileset* _self_);
inline jule::Str _1aa0ded8b_GetRow(_1aa0dd8a1_Fileset* _self_, jule::I32 _5718_row);
inline void _1aa0e7228_pushErr(_1aa0e6b62_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args);
inline void _1aa0e7789_lex(_1aa0e6b62_lex* _self_);
inline jule::Str _1aa0e7aca_id(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _47219_ln);
inline jule::Slice<jule::U8> _1aa0e7d61_resume(_1aa0e6b62_lex* _self_);
inline void _1aa0e8119_lexLineComment(_1aa0e6b62_lex* _self_, jule::Ptr<_1aa0d7ceb_Token>* _52235_token);
inline void _1aa0e83c2_lexRangeComment(_1aa0e6b62_lex* _self_, jule::Ptr<_1aa0d7ceb_Token>* _53736_token);
inline jule::Str _1aa0e8713_num(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _56520_txt);
inline jule::Str _1aa0e8a54_escapeSeq(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _58726_txt);
inline jule::Str _1aa0e8e50_getRune(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw);
inline jule::Str _1aa0e9291_lexRune(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _62624_txt);
inline jule::Str _1aa0e9527_lexStr(_1aa0e6b62_lex* _self_);
inline void _1aa0e99ab_newLine(_1aa0e6b62_lex* _self_);
inline jule::Bool _1aa0ea01c_isOp(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U32 _70845_id, jule::Ptr<_1aa0d7ceb_Token>* _70858_t);
inline jule::Bool _1aa0ea418_lexBasicOps(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1aa0d7ceb_Token>* _71845_tok);
inline jule::Bool _1aa0ea814_lexId(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1aa0d7ceb_Token>* _72740_t);
inline jule::Bool _1aa0eac10_lexNum(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1aa0d7ceb_Token>* _73741_t);
inline jule::Ptr<_1aa0d7ceb_Token> _1aa0eae96_token(_1aa0e6b62_lex* _self_);
inline jule::Bool _1aa1006d7_IsUnsafe(_1aa100341_PtrTypeDecl* _self_);
inline jule::Bool _1aa100e79_AutoSized(_1aa100ad3_ArrTypeDecl* _self_);
inline jule::Bool _1aa106c2c_Unhandled(_1aa106875_FnCallExpr* _self_);
inline jule::Bool _1aa106eb3_Ignored(_1aa106875_FnCallExpr* _self_);
inline jule::Bool _1aa95856c_IsSelf(_1aa9581b5_ParamDecl* _self_);
inline jule::Bool _1aa9599ad_IsAnon(_1aa959617_FnDecl* _self_);
inline jule::Bool _1aa95b7b2_IsInf(_1aa95b41b_Iter* _self_);
inline jule::Bool _1aa95c0dc_IsWhileNext(_1aa95bc46_WhileKind* _self_);
inline jule::Ptr<_1aa9b96cc_Const> static__1aaa22c30_NewI64(jule::I64 _1419_x);
inline jule::Ptr<_1aa9b96cc_Const> static__1aaa22e83_NewU64(jule::U64 _1719_x);
inline jule::Ptr<_1aa9b96cc_Const> static__1aaa2324c_NewBool(jule::Bool _2020_x);
inline jule::Ptr<_1aa9b96cc_Const> static__1aaa23516_NewStr(jule::Str _2319_x);
inline jule::Ptr<_1aa9b96cc_Const> static__1aaa237d0_NewF64(jule::F64 _2619_x);
inline jule::Ptr<_1aa9b96cc_Const> static__1aaa239de_NewNil(void);
inline jule::I64 _1aaa2414e_ReadI64(_1aa9b96cc_Const* _self_);
inline jule::U64 _1aaa243d5_ReadU64(_1aa9b96cc_Const* _self_);
inline jule::Bool _1aaa2466b_ReadBool(_1aa9b96cc_Const* _self_);
inline jule::Str _1aaa24902_ReadStr(_1aa9b96cc_Const* _self_);
inline jule::F64 _1aaa24b88_ReadF64(_1aa9b96cc_Const* _self_);
inline jule::I64 _1aaa24e1e_AsI64(_1aa9b96cc_Const* _self_);
inline jule::U64 _1aaa251a5_AsU64(_1aa9b96cc_Const* _self_);
inline jule::F64 _1aaa2543b_AsF64(_1aa9b96cc_Const* _self_);
inline void _1aaa256e4_SetI64(_1aa9b96cc_Const* _self_, jule::I64 _13622_x);
inline void _1aaa2599c_SetU64(_1aa9b96cc_Const* _self_, jule::U64 _13922_x);
inline void _1aaa25c55_SetBool(_1aa9b96cc_Const* _self_, jule::Bool _14223_x);
inline void _1aaa2600d_SetStr(_1aa9b96cc_Const* _self_, jule::Str _14522_x);
inline void _1aaa262b6_SetF64(_1aa9b96cc_Const* _self_, jule::F64 _14822_x);
inline jule::Bool _1aaa2674a_IsI64(_1aa9b96cc_Const* _self_);
inline jule::Bool _1aaa269d1_IsU64(_1aa9b96cc_Const* _self_);
inline jule::Bool _1aaa26c67_IsBool(_1aa9b96cc_Const* _self_);
inline jule::Bool _1aaa26eed_IsStr(_1aa9b96cc_Const* _self_);
inline jule::Bool _1aaa27284_IsF64(_1aa9b96cc_Const* _self_);
inline jule::Bool _1aaa2751a_IsNil(_1aa9b96cc_Const* _self_);
inline jule::Bool _1aaa27b9c_And(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _23615_x);
inline jule::Bool _1aaa27edd_Or(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _24714_x);
inline jule::Bool _1aaa2832e_Eq(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _25814_x);
inline jule::Bool _1aaa28670_Lt(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _28514_x);
inline jule::Bool _1aaa289b1_LtEq(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _30816_x);
inline jule::Bool _1aaa28d02_Gt(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _33114_x);
inline jule::Bool _1aaa29143_GtEq(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _35416_x);
inline jule::Bool _1aaa29484_Add(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _37519_x);
inline jule::Bool _1aaa297c5_Sub(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _40419_x);
inline jule::Bool _1aaa29b16_Mul(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _42819_x);
inline jule::Bool _1aaa29e57_Div(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _45619_x);
inline jule::Bool _1aaa2a298_Mod(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _48519_x);
inline jule::Bool _1aaa2a5d9_BitwiseAnd(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _50726_x);
inline jule::Bool _1aaa2a92a_BitwiseOr(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _52125_x);
inline jule::Bool _1aaa2ac6b_Xor(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _53519_x);
inline jule::Bool _1aaa2b0ac_Lshift(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _54922_x);
inline jule::Bool _1aaa2b3ed_Rshift(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _56922_x);
inline jule::Ptr<_1aa9689cd_FieldIns> _1aa965832_instance(jule::Ptr<_1aa965447_Field> _self_);
inline jule::Ptr<_1aa969605_StructIns> _1aa966b85_instance(jule::Ptr<_1aa966767_Struct> _self_);
inline jule::Ptr<_1aa969605_StructIns> _1aa966ec6_appendInstance(_1aa966767_Struct* _self_, jule::Ptr<_1aa969605_StructIns>* _10235_ins);
inline jule::Ptr<_1aaa3b221_Fn> _1aa9673c2_FindMethod(_1aa966767_Struct* _self_, jule::Str _12026_ident, jule::Bool _12038_statically);
inline jule::Ptr<_1aab70795_Var> _1aa967713_FindStatic(_1aa966767_Struct* _self_, jule::Str _13126_ident);
inline jule::Ptr<_1aa965447_Field> _1aa967a54_FindField(_1aa966767_Struct* _self_, jule::Str _14225_ident);
inline jule::Bool _1aa967d95_IsImplements(_1aa966767_Struct* _self_, jule::Ptr<_1aaa46935_Trait> _15224_t);
inline jule::Bool _1aa9681d6_IsUses(_1aa966767_Struct* _self_, jule::Ptr<_1aa966767_Struct> _16218_s);
inline jule::Str _1aa969979_Str(_1aa969605_StructIns* _self_);
inline jule::Bool _1aa969cba_Equal(jule::Ptr<_1aa969605_StructIns> _self_, jule::Ptr<_1aabecdb6_Type> _22718_other);
inline jule::Bool _1aa96a271_Same(_1aa969605_StructIns* _self_, jule::Ptr<_1aa969605_StructIns> _26216_s);
inline jule::Ptr<_1aaa3b221_Fn> _1aa96a66c_FindMethod(_1aa969605_StructIns* _self_, jule::Str _27726_ident, jule::Bool _27738_statically);
inline jule::Ptr<_1aa9689cd_FieldIns> _1aa96a9ad_FindField(_1aa969605_StructIns* _self_, jule::Str _28825_ident);
inline jule::Ptr<_1aab70795_Var> _1aa96acee_FindStatic(_1aa969605_StructIns* _self_, jule::Str _29926_ident);
inline jule::Ptr<_1aaa3d179_ParamIns> _1aaa39b15_instance(jule::Ptr<_1aaa3974c_Param> _self_);
inline jule::Bool _1aaa39d9b_IsSelf(_1aaa3974c_Param* _self_);
inline jule::Bool _1aaa3a132_IsRef(_1aaa3974c_Param* _self_);
inline jule::Bool _1aaa3b6c7_IsVoid(_1aaa3b221_Fn* _self_);
inline jule::Bool _1aaa3b95d_IsMethod(_1aaa3b221_Fn* _self_);
inline jule::Bool _1aaa3bbe4_IsEntryPoint(_1aaa3b221_Fn* _self_);
inline jule::Bool _1aaa3be7a_IsInit(_1aaa3b221_Fn* _self_);
inline jule::Bool _1aaa3c211_IsAnon(_1aaa3b221_Fn* _self_);
inline jule::Bool _1aaa3c497_AnyVar(_1aaa3b221_Fn* _self_);
inline jule::Ptr<_1aaa3e2ce_FnIns> _1aaa3c72d_instanceForce(jule::Ptr<_1aaa3b221_Fn> _self_);
inline jule::Ptr<_1aaa3e2ce_FnIns> _1aaa3c9b4_instance(jule::Ptr<_1aaa3b221_Fn> _self_);
inline jule::Ptr<_1aaa3e2ce_FnIns> _1aaa3ccc2_appendInstance(_1aaa3b221_Fn* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _14535_ins);
inline jule::Str _1aaa3d520_Str(_1aaa3d179_ParamIns* _self_);
inline jule::Str _1aaa3e653_Str(_1aaa3e2ce_FnIns* _self_);
inline jule::Bool _1aaa3e994_Equal(jule::Ptr<_1aaa3e2ce_FnIns> _self_, jule::Ptr<_1aabecdb6_Type> _23618_other);
inline jule::Bool _1aaa3ee39_EqualFn(jule::Ptr<_1aaa3e2ce_FnIns> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _24721_f);
inline jule::Bool _1aaa4027a_equalTrait(jule::Ptr<_1aaa3e2ce_FnIns> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _30624_other);
inline jule::Slice<jule::Ptr<_1aabecdb6_Type>> _1aaa40511_Types(_1aaa3e2ce_FnIns* _self_);
inline jule::Bool _1aaa40797_IsBuiltin(_1aaa3e2ce_FnIns* _self_);
inline jule::Bool _1aaa40a2d_IsAnon(_1aaa3e2ce_FnIns* _self_);
inline jule::Bool _1aaa40d6e_Same(_1aaa3e2ce_FnIns* _self_, jule::Ptr<_1aaa3e2ce_FnIns> _34916_f);
inline jule::Str _1aaa411b0_GetKindStr(_1aaa3e2ce_FnIns* _self_, jule::Bool _36622_ident);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1aaa42a41_SelectPackage(_1aaa42524_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> _2729_selector);
inline jule::Ptr<_1aab70795_Var> _1aaa42e3c_FindVar(_1aaa42524_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1aabec1a1_TypeAlias> _1aaa43338_FindTypeAlias(_1aaa42524_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1aa966767_Struct> _1aaa43734_FindStruct(_1aaa42524_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1aaa3b221_Fn> _1aaa43b30_FindFn(_1aaa42524_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1aaa46935_Trait> _1aaa43e71_FindTrait(_1aaa42524_SymTab* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1aaa490db_Enum> _1aaa442b2_FindEnum(_1aaa42524_SymTab* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aaa44603_FindTypeEnum(_1aaa42524_SymTab* _self_, jule::Str _9728_ident);
inline jule::I32 _1aaa44aba_findVar1(_1aaa42524_SymTab* _self_, jule::Ptr<_1aab70795_Var>* _10825_v);
inline jule::Ptr<_1aab70795_Var> _1aaa45071_findVar(_1aaa42524_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1aabec1a1_TypeAlias> _1aaa45527_findTypeAlias(_1aaa42524_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1aaa45923_defByIdent(_1aaa42524_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1aaa45dc9_isDuplicatedIdent(_1aaa42524_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Str _1aaa46d31_Str(_1aaa46935_Trait* _self_);
inline jule::Bool _1aaa47172_Equal(jule::Ptr<_1aaa46935_Trait> _self_, jule::Ptr<_1aabecdb6_Type> _2518_other);
inline jule::Ptr<_1aaa3b221_Fn> _1aaa47617_FindMethod(_1aaa46935_Trait* _self_, jule::Str _3726_ident);
inline jule::Ptr<_1aaa3b221_Fn> _1aaa47c99_findMethodInherit(_1aaa46935_Trait* _self_, jule::Str* _5834_ident);
inline jule::Bool _1aaa48959_AutoExpr(_1aaa48580_EnumItem* _self_);
inline jule::Str _1aaa49493_Str(_1aaa490db_Enum* _self_);
inline jule::Bool _1aaa497d4_Equal(jule::Ptr<_1aaa490db_Enum> _self_, jule::Ptr<_1aabecdb6_Type> _3818_other);
inline jule::Ptr<_1aaa48580_EnumItem> _1aaa49c13_FindItem(_1aaa490db_Enum* _self_, jule::Str _5024_ident);
inline jule::Str _1aaa4ab6a_Str(_1aaa4a7e6_TypeEnum* _self_);
inline jule::Bool _1aaa4aeab_Equal(jule::Ptr<_1aaa4a7e6_TypeEnum> _self_, jule::Ptr<_1aabecdb6_Type> _8318_other);
inline jule::Ptr<_1aaa4a21e_TypeEnumItem> _1aaa4b3da_FindItem(_1aaa4a7e6_TypeEnum* _self_, jule::Str _9524_ident);
inline jule::Str _1aaac154d_Str(_1aaac1152_comptimeRange* _self_);
inline jule::Bool _1aaac188e_Equal(jule::Ptr<_1aaac1152_comptimeRange> _self_, jule::Ptr<_1aabecdb6_Type> _2718_other);
inline jule::Str _1aaac2065_Str(_1aaac1bad_comptimeStructField* _self_);
inline jule::Bool _1aaac23a6_Equal(jule::Ptr<_1aaac1bad_comptimeStructField> _self_, jule::Ptr<_1aabecdb6_Type> _3718_other);
inline jule::Ptr<_1aabb8db5_Data> _1aaac28b2__Decl(jule::Ptr<_1aaac1bad_comptimeStructField> _self_, jule::Ptr<_1aabbad84_eval>* _4127_e, jule::Ptr<_1aa106875_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaac2cad__Type(jule::Ptr<_1aaac1bad_comptimeStructField> _self_, jule::Ptr<_1aabbad84_eval>* _5327_e, jule::Ptr<_1aa106875_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaac30ee_subIdent(jule::Ptr<_1aaac1bad_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1aaac3819_Str(_1aaac3451_comptimeStructFields* _self_);
inline jule::Bool _1aaac3b5a_Equal(jule::Ptr<_1aaac3451_comptimeStructFields> _self_, jule::Ptr<_1aabecdb6_Type> _9018_other);
inline void _1aaac40de_ready(_1aaac3451_comptimeStructFields* _self_, jule::Ptr<_1aab70795_Var>* _9426_keyA, jule::Ptr<_1aab70795_Var>* _9443_keyB);
inline void _1aaac4452_index(_1aaac3451_comptimeStructFields* _self_, jule::Ptr<_1aabb8db5_Data>* _11526_d, jule::I32 _11536_i);
inline void _1aaac4870_step(_1aaac3451_comptimeStructFields* _self_, jule::I32 _12620_i, jule::Ptr<_1aab70795_Var>* _12633_keyA, jule::Ptr<_1aab70795_Var>* _12650_keyB);
inline jule::I32 _1aaac4b06_len(_1aaac3451_comptimeStructFields* _self_);
inline jule::Str _1aaac5288_Str(_1aaac4dd1_comptimeStatic* _self_);
inline jule::Bool _1aaac55c9_Equal(jule::Ptr<_1aaac4dd1_comptimeStatic> _self_, jule::Ptr<_1aabecdb6_Type> _15018_other);
inline jule::Ptr<_1aabb8db5_Data> _1aaac5ad5__Decl(jule::Ptr<_1aaac4dd1_comptimeStatic> _self_, jule::Ptr<_1aabbad84_eval>* _15427_e, jule::Ptr<_1aa106875_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaac5ed1__Type(jule::Ptr<_1aaac4dd1_comptimeStatic> _self_, jule::Ptr<_1aabbad84_eval>* _16627_e, jule::Ptr<_1aa106875_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaac6322_subIdent(jule::Ptr<_1aaac4dd1_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1aaac6a3c_Str(_1aaac6685_comptimeStatics* _self_);
inline jule::Bool _1aaac6d7d_Equal(jule::Ptr<_1aaac6685_comptimeStatics> _self_, jule::Ptr<_1aabecdb6_Type> _20318_other);
inline void _1aaac7312_ready(_1aaac6685_comptimeStatics* _self_, jule::Ptr<_1aab70795_Var>* _20726_keyA, jule::Ptr<_1aab70795_Var>* _20743_keyB);
inline void _1aaac7675_index(_1aaac6685_comptimeStatics* _self_, jule::Ptr<_1aabb8db5_Data>* _22826_d, jule::I32 _22836_i);
inline void _1aaac7a93_step(_1aaac6685_comptimeStatics* _self_, jule::I32 _23920_i, jule::Ptr<_1aab70795_Var>* _23933_keyA, jule::Ptr<_1aab70795_Var>* _23950_keyB);
inline jule::I32 _1aaac7d29_len(_1aaac6685_comptimeStatics* _self_);
inline jule::Str _1aaac84ab_Str(_1aaac8104_comptimeEnumField* _self_);
inline jule::Bool _1aaac87ec_Equal(jule::Ptr<_1aaac8104_comptimeEnumField> _self_, jule::Ptr<_1aabecdb6_Type> _26318_other);
inline jule::Ptr<_1aabb8db5_Data> _1aaac8ce7__Decl(jule::Ptr<_1aaac8104_comptimeEnumField> _self_, jule::Ptr<_1aabbad84_eval>* _26727_e, jule::Ptr<_1aa106875_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaac9138_subIdent(jule::Ptr<_1aaac8104_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1aaac98ca_Str(_1aaac9413_comptimeEnumFields* _self_);
inline jule::Bool _1aaac9c1b_Equal(jule::Ptr<_1aaac9413_comptimeEnumFields> _self_, jule::Ptr<_1aabecdb6_Type> _30118_other);
inline void _1aaaca128_ready(_1aaac9413_comptimeEnumFields* _self_, jule::Ptr<_1aab70795_Var>* _30526_keyA, jule::Ptr<_1aab70795_Var>* _30543_keyB);
inline void _1aaaca48b_index(_1aaac9413_comptimeEnumFields* _self_, jule::Ptr<_1aabb8db5_Data>* _32626_d, jule::I32 _32636_i);
inline void _1aaaca8a9_step(_1aaac9413_comptimeEnumFields* _self_, jule::I32 _33720_i, jule::Ptr<_1aab70795_Var>* _33733_keyA, jule::Ptr<_1aab70795_Var>* _33750_keyB);
inline jule::I32 _1aaacab40_len(_1aaac9413_comptimeEnumFields* _self_);
inline jule::Str _1aaacb2c2_Str(_1aaacae1a_comptimeParam* _self_);
inline jule::Bool _1aaacb613_Equal(jule::Ptr<_1aaacae1a_comptimeParam> _self_, jule::Ptr<_1aabecdb6_Type> _36118_other);
inline jule::Ptr<_1aabb8db5_Data> _1aaacbb30__Decl(jule::Ptr<_1aaacae1a_comptimeParam> _self_, jule::Ptr<_1aabbad84_eval>* _36527_e, jule::Ptr<_1aa106875_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaacc02b__Type(jule::Ptr<_1aaacae1a_comptimeParam> _self_, jule::Ptr<_1aabbad84_eval>* _37727_e, jule::Ptr<_1aa106875_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaacc427__Recv(jule::Ptr<_1aaacae1a_comptimeParam> _self_, jule::Ptr<_1aabbad84_eval>* _38527_e, jule::Ptr<_1aa106875_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaacc768_subIdent(jule::Ptr<_1aaacae1a_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1aaacd01b_Str(_1aaaccc74_comptimeParams* _self_);
inline jule::Bool _1aaacd35c_Equal(jule::Ptr<_1aaaccc74_comptimeParams> _self_, jule::Ptr<_1aabecdb6_Type> _43418_other);
inline void _1aaacd7e1_ready(_1aaaccc74_comptimeParams* _self_, jule::Ptr<_1aab70795_Var>* _43826_keyA, jule::Ptr<_1aab70795_Var>* _43843_keyB);
inline void _1aaacdb54_index(_1aaaccc74_comptimeParams* _self_, jule::Ptr<_1aabb8db5_Data>* _45926_d, jule::I32 _45936_i);
inline void _1aaace072_step(_1aaaccc74_comptimeParams* _self_, jule::I32 _47020_i, jule::Ptr<_1aab70795_Var>* _47033_keyA, jule::Ptr<_1aab70795_Var>* _47050_keyB);
inline jule::I32 _1aaace308_len(_1aaaccc74_comptimeParams* _self_);
inline jule::Str _1aaace98a_Str(_1aaace5d3_comptimeTypeInfos* _self_);
inline jule::Bool _1aaaceccb_Equal(jule::Ptr<_1aaace5d3_comptimeTypeInfos> _self_, jule::Ptr<_1aabecdb6_Type> _49418_other);
inline void _1aaad0260_ready(_1aaace5d3_comptimeTypeInfos* _self_, jule::Ptr<_1aab70795_Var>* _49826_keyA, jule::Ptr<_1aab70795_Var>* _49843_keyB);
inline void _1aaad05c3_index(_1aaace5d3_comptimeTypeInfos* _self_, jule::Ptr<_1aabb8db5_Data>* _51926_d, jule::I32 _51936_i);
inline void _1aaad09e1_step(_1aaace5d3_comptimeTypeInfos* _self_, jule::I32 _52820_i, jule::Ptr<_1aab70795_Var>* _52833_keyA, jule::Ptr<_1aab70795_Var>* _52850_keyB);
inline jule::I32 _1aaad0c77_len(_1aaace5d3_comptimeTypeInfos* _self_);
inline jule::Str _1aaad1409_Str(_1aaad1052_comptimeTypeInfo* _self_);
inline jule::Bool _1aaad174a_Equal(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabecdb6_Type> _55218_other);
inline jule::Ptr<_1aabb8db5_Data> _1aaad1d99__Decl(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _55627_e, jule::Ptr<_1aa106875_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad2295__Str(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _59322_e, jule::Ptr<_1aa106875_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad2691__Kind(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _60627_e, jule::Ptr<_1aa106875_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad2a8c__Bits(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _68627_e, jule::Ptr<_1aa106875_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad2e88__Elem(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _71027_e, jule::Ptr<_1aa106875_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad3384__Size(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _74327_e, jule::Ptr<_1aa106875_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad3780__Key(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _76226_e, jule::Ptr<_1aa106875_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad3b7b__Value(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _77528_e, jule::Ptr<_1aa106875_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad4077__Fields(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _78829_e, jule::Ptr<_1aa106875_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad4473__Statics(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _81730_e, jule::Ptr<_1aa106875_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad486e__Binded(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _83629_e, jule::Ptr<_1aa106875_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad4c6a__Ordered(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _84926_e, jule::Ptr<_1aa106875_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad5166__Comparable(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _86229_e, jule::Ptr<_1aa106875_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad5562__Mutable(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _87526_e, jule::Ptr<_1aa106875_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad595d__Types(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _88828_e, jule::Ptr<_1aa106875_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad5d59__CanNil(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _91129_e, jule::Ptr<_1aa106875_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad6255__GC(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _92425_e, jule::Ptr<_1aa106875_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad6651__Result(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _93729_e, jule::Ptr<_1aa106875_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad6a4c__Params(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _95329_e, jule::Ptr<_1aa106875_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad6e48__Strict(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _97029_e, jule::Ptr<_1aa106875_FnCallExpr>* _97044_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad7289_subIdent(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Str* _98426_ident);
inline jule::Str _1aaad791b_Str(_1aaad7564_comptimeValue* _self_);
inline jule::Bool _1aaad7c5c_Equal(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabecdb6_Type> _113918_other);
inline jule::Ptr<_1aabb8db5_Data> _1aaad82bd__Unwrap(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _114329_e, jule::Ptr<_1aa106875_FnCallExpr>* _114344_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad86b9__Type(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _115127_e, jule::Ptr<_1aa106875_FnCallExpr>* _115142_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad8ab5__Lvalue(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _115929_e, jule::Ptr<_1aa106875_FnCallExpr>* _115944_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad8eb1__Mutable(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _117230_e, jule::Ptr<_1aa106875_FnCallExpr>* _117245_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad93ac__Const(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _118528_e, jule::Ptr<_1aa106875_FnCallExpr>* _118543_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad97a8__Field(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _119828_e, jule::Ptr<_1aa106875_FnCallExpr>* _119843_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad9ba4__Method(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _123329_e, jule::Ptr<_1aa106875_FnCallExpr>* _123344_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaad9ee5_subIdent(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Str* _128026_ident);
inline jule::Str _1aaada677_Str(_1aaada2c0_comptimeFiles* _self_);
inline jule::Bool _1aaada9b8_Equal(jule::Ptr<_1aaada2c0_comptimeFiles> _self_, jule::Ptr<_1aabecdb6_Type> _134418_other);
inline void _1aaadae4c_ready(_1aaada2c0_comptimeFiles* _self_, jule::Ptr<_1aab70795_Var>* _134826_keyA, jule::Ptr<_1aab70795_Var>* _134843_keyB);
inline void _1aaadb2b0_index(_1aaada2c0_comptimeFiles* _self_, jule::Ptr<_1aabb8db5_Data>* _136926_d, jule::I32 _136936_i);
inline void _1aaadb6cd_step(_1aaada2c0_comptimeFiles* _self_, jule::I32 _138020_i, jule::Ptr<_1aab70795_Var>* _138033_keyA, jule::Ptr<_1aab70795_Var>* _138050_keyB);
inline jule::I32 _1aaadb964_len(_1aaada2c0_comptimeFiles* _self_);
inline jule::Str _1aaadc0e6_Str(_1aaadbc3e_comptimeFile* _self_);
inline jule::Bool _1aaadc437_Equal(jule::Ptr<_1aaadbc3e_comptimeFile> _self_, jule::Ptr<_1aabecdb6_Type> _140418_other);
inline jule::Ptr<_1aabb8db5_Data> _1aaadc954__Path(jule::Ptr<_1aaadbc3e_comptimeFile> _self_, jule::Ptr<_1aabbad84_eval>* _140827_e, jule::Ptr<_1aa106875_FnCallExpr>* _140842_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaadcd50__Name(jule::Ptr<_1aaadbc3e_comptimeFile> _self_, jule::Ptr<_1aabbad84_eval>* _142127_e, jule::Ptr<_1aa106875_FnCallExpr>* _142142_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaadd24b__Dir(jule::Ptr<_1aaadbc3e_comptimeFile> _self_, jule::Ptr<_1aabbad84_eval>* _143426_e, jule::Ptr<_1aa106875_FnCallExpr>* _143441_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaadd58c_subIdent(jule::Ptr<_1aaadbc3e_comptimeFile> _self_, jule::Str* _144726_ident);
inline jule::Str _1aaadde50_Str(_1aaadd867_comptimeDecls* _self_);
inline jule::Bool _1aaade291_Equal(jule::Ptr<_1aaadd867_comptimeDecls> _self_, jule::Ptr<_1aabecdb6_Type> _148318_other);
inline void _1aaade615_ready(_1aaadd867_comptimeDecls* _self_, jule::Ptr<_1aab70795_Var>* _148726_keyA, jule::Ptr<_1aab70795_Var>* _148743_keyB);
inline void _1aaade978_index(_1aaadd867_comptimeDecls* _self_, jule::Ptr<_1aabb8db5_Data>* _150826_d, jule::I32 _150836_i);
inline void _1aaaded96_step(_1aaadd867_comptimeDecls* _self_, jule::I32 _151720_i, jule::Ptr<_1aab70795_Var>* _151733_keyA, jule::Ptr<_1aab70795_Var>* _151750_keyB);
inline jule::I32 _1aaae012c_len(_1aaadd867_comptimeDecls* _self_);
inline jule::Str _1aaae100c_Str(_1aaae0b55_comptimeDecl* _self_);
inline jule::Bool _1aaae134d_Equal(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabecdb6_Type> _155618_other);
inline jule::Str _1aaae179e_declAsStr(_1aaae0b55_comptimeDecl* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aaae1b9a__Name(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _158727_e, jule::Ptr<_1aa106875_FnCallExpr>* _158742_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaae2096__Public(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _162529_e, jule::Ptr<_1aa106875_FnCallExpr>* _162544_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaae2492__Binded(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _166329_e, jule::Ptr<_1aa106875_FnCallExpr>* _166344_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaae288d__Exceptional(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _169734_e, jule::Ptr<_1aa106875_FnCallExpr>* _169749_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaae2c89__Mutable(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _171830_e, jule::Ptr<_1aa106875_FnCallExpr>* _171845_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaae3185__Variadic(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _175131_e, jule::Ptr<_1aa106875_FnCallExpr>* _175146_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaae3581__Reference(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _178232_e, jule::Ptr<_1aa106875_FnCallExpr>* _178247_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaae397c__Params(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _181429_e, jule::Ptr<_1aa106875_FnCallExpr>* _181444_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaae3d78__Fields(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _184929_e, jule::Ptr<_1aa106875_FnCallExpr>* _184944_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaae4274__Statics(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _189030_e, jule::Ptr<_1aa106875_FnCallExpr>* _189045_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaae4670__Methods(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _192630_e, jule::Ptr<_1aa106875_FnCallExpr>* _192645_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aaae49b1_subIdent(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Str* _196726_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1aab4c62e_sema>*,jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>*> _1aaae7970_readyFn(jule::Ptr<_1aaae7541_constraintChecker> _self_);
inline jule::Bool _1aaae7c06_readyFi(jule::Ptr<_1aaae7541_constraintChecker> _self_);
inline jule::Bool _1aaae7e8c_readySi(jule::Ptr<_1aaae7541_constraintChecker> _self_);
inline jule::Bool _1aaae8223_ready(jule::Ptr<_1aaae7541_constraintChecker> _self_);
inline jule::Bool _1aaae84a9_check(jule::Ptr<_1aaae7541_constraintChecker> _self_);
inline jule::Bool _1aaae9c3b_IsTraitImpl(_1aaae9840_Impl* _self_);
inline jule::Bool _1aaae9ec2_IsStructImpl(_1aaae9840_Impl* _self_);
inline jule::Bool _1aaaee180_IsWhileNext(_1aaaedbc9_WhileIter* _self_);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab0550a_SelectPackage(_1aab05032_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> _24029_selector);
inline jule::Ptr<_1aab70795_Var> _1aab05906_FindVar(_1aab05032_scopeChecker* _self_, jule::Str _25123_ident, jule::Bool _25135_binded);
inline jule::Ptr<_1aabec1a1_TypeAlias> _1aab05d02_FindTypeAlias(_1aab05032_scopeChecker* _self_, jule::Str _26829_ident, jule::Bool _26841_binded);
inline jule::Ptr<_1aa966767_Struct> _1aab061ed_FindStruct(_1aab05032_scopeChecker* _self_, jule::Str _29326_ident, jule::Bool _29338_binded);
inline jule::Ptr<_1aaa3b221_Fn> _1aab065e9_FindFn(_1aab05032_scopeChecker* _self_, jule::Str _30222_ident, jule::Bool _30234_binded);
inline jule::Ptr<_1aaa46935_Trait> _1aab0693a_FindTrait(_1aab05032_scopeChecker* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1aaa490db_Enum> _1aab06c7b_FindEnum(_1aab05032_scopeChecker* _self_, jule::Str _32024_ident);
inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aab070bc_FindTypeEnum(_1aab05032_scopeChecker* _self_, jule::Str _32928_ident);
inline jule::Bool _1aab0741e_isUnsafe(jule::Ptr<_1aab05032_scopeChecker> _self_);
inline jule::Bool _1aab076a5_isRoot(_1aab05032_scopeChecker* _self_);
inline void _1aab078a3_stop(_1aab05032_scopeChecker* _self_);
inline jule::Bool _1aab07b39_stopped(_1aab05032_scopeChecker* _self_);
inline jule::Bool _1aab07dc0_isDeferred(jule::Ptr<_1aab05032_scopeChecker> _self_);
inline void _1aab08178_pushCaptured(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aab70795_Var>* _39134_v);
inline jule::Ptr<_1aab05032_scopeChecker> _1aab0840e_getRoot(jule::Ptr<_1aab05032_scopeChecker> _self_);
inline jule::Ptr<_1aab05032_scopeChecker> _1aab08695_getHardRoot(jule::Ptr<_1aab05032_scopeChecker> _self_);
inline jule::Ptr<_1aab1cd80_ReferenceStack> _1aab0892b_getOwnerRefers(jule::Ptr<_1aab05032_scopeChecker> _self_);
inline jule::Ptr<_1aab70795_Var> _1aab08c6c_findVar(_1aab05032_scopeChecker* _self_, jule::Str _43823_ident);
inline jule::Ptr<_1aab0033a_Label> _1aab090ad_findLabel(_1aab05032_scopeChecker* _self_, jule::Str* _45926_ident);
inline jule::Ptr<_1aab03b68_scopeLabel> _1aab093ee_findLabelScope(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Str* _47532_ident);
inline jule::Ptr<_1aab03b68_scopeLabel> _1aab09740_findLabelAll(_1aab05032_scopeChecker* _self_, jule::Str* _48629_ident);
inline jule::Bool _1aab09b3b_isDuplicatedIdent(_1aab05032_scopeChecker* _self_, jule::Uintptr _49833_itself, jule::Str* _49851_ident);
inline void _1aab09de4_checkVarDecl(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95a7c2_VarDecl> _51833_decl);
inline void _1aab0a19c_checkTypeAlias(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aabec1a1_TypeAlias>* _54936_ta);
inline void _1aab0a455_checkTypeAliasDecl(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95e551_TypeAliasDecl> _56539_decl);
inline jule::Ptr<_1aaaec832_Scope> _1aab0a6db_getChild(_1aab05032_scopeChecker* _self_);
inline void _1aab0ab09_checkChildSsc(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa957978_ScopeTree>* _57635_tree, jule::Ptr<_1aaaec832_Scope>* _57663_s, jule::Ptr<_1aab05032_scopeChecker>* _57679_ssc);
inline jule::Ptr<_1aaaec832_Scope> _1aab0b005_checkChildSc(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa957978_ScopeTree>* _58334_tree, jule::Ptr<_1aab05032_scopeChecker>* _58362_ssc);
inline jule::Ptr<_1aaaec832_Scope> _1aab0b346_checkChild(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa957978_ScopeTree>* _58932_tree);
inline void _1aab0b5ee_checkAnonScope(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa957978_ScopeTree> _59435_tree);
inline void _1aab0b962_processErrorCall(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aaa37096_BuiltinErrorCallExpr>* _59938_m, jule::Ptr<_1aa0d7ceb_Token> _59964_err);
inline void _1aab0bc1a_checkExpr(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa102b4b_Expr> _61230_expr);
inline jule::Ptr<_1aaaecc0b_If> _1aab0c05b_checkIf(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95d3a7_If> _64228_i);
inline jule::Ptr<_1aaaed080_Else> _1aab0c39c_checkElse(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95d781_Else> _66230_e);
inline void _1aab0c655_checkConditional(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95dc37_Conditional> _66837_conditional);
inline void _1aab0cb2d_checkIterScopeSsc(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Uintptr _68434_it, jule::Ptr<_1aa957978_ScopeTree> _68451_tree, jule::Ptr<_1aaaec832_Scope>* _68479_s, jule::Ptr<_1aab05032_scopeChecker> _68494_ssc);
inline jule::Ptr<_1aaaec832_Scope> _1aab0d0d4_checkIterScopeSc(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Uintptr _68933_it, jule::Ptr<_1aa957978_ScopeTree> _68950_tree, jule::Ptr<_1aab05032_scopeChecker> _68977_ssc);
inline jule::Ptr<_1aaaec832_Scope> _1aab0d4d0_checkIterScope(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Uintptr _69531_it, jule::Ptr<_1aa957978_ScopeTree>* _69549_tree);
inline void _1aab0d788_checkInfIter(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95b41b_Iter>* _70034_it);
inline void _1aab0da41_checkWhileIter(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95b41b_Iter>* _70636_it);
inline void _1aab0de5e_checkComptimeRangeIter(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95b41b_Iter>* _75644_it, jule::Ptr<_1aaaee6ad_RangeIter>* _75665_kind, jule::Ptr<_1aabb8db5_Data>* _75688_d);
inline void _1aab0e217_checkRangeIter(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95b41b_Iter>* _81336_it);
inline void _1aab0e4c0_checkIter(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95b41b_Iter> _88030_it);
inline jule::Bool _1aab0e811_checkValidContLabel(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Uintptr _90436_it);
inline jule::Bool _1aab0eb52_checkValidBreakLabel(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Uintptr _92037_ptr);
inline jule::Ptr<_1aaaee9aa_ContSt> _1aab0ee93_checkContValidScope(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95ce01_ContSt> _94336_c);
inline void _1aab1024b_checkCont(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95ce01_ContSt> _96726_c);
inline void _1aab10504_checkLabel(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10adeb_LabelSt> _101431_l);
inline void _1aab107ac_pushGoto(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10b2c5_GotoSt> _103329_gt);
inline void _1aab10a65_checkPostfix(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10c2b5_AssignSt> _104433_a);
inline jule::Bool _1aab10da6_isNewAssignIdent(_1aab05032_scopeChecker* _self_, jule::Str _108032_ident);
inline void _1aab1115e_removeInteriorMutRisk(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aabb8db5_Data>* _109343_d);
inline void _1aab11417_checkSingleAssign(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10c2b5_AssignSt>* _110739_a);
inline void _1aab11a55_processEndPartOfMultiAssign(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _118749_st, jule::Ptr<_1aa10c2b5_AssignSt>* _118772_a, jule::Ptr<_1aa10bc32_AssignLeft>* _11888_lexpr, jule::Ptr<_1aabb8db5_Data>* _118838_l, _1aaaec0a1_exprPart* _118853_r, jule::Bool _118866_strict);
inline __jule_tuple_s_1aaaec0a1_exprPart__jule_tuple_x_1aabb8db5_Data__jule_tuple_bool _1aab11e51_getRightExprsOfMultiAssign(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10c2b5_AssignSt> _126347_a, jule::Ptr<_1aabbad84_eval> _12647_eval);
inline void _1aab12209_checkMultiAssign(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10c2b5_AssignSt>* _133738_a);
inline void _1aab124b2_checkAssignSt(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10c2b5_AssignSt> _141034_a);
inline jule::Ptr<_1aaaec832_Scope> _1aab128ad_checkCaseScope(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aab02b23_Case>* _142132_c, jule::Ptr<_1aa957978_ScopeTree>* _142147_tree);
inline jule::Ptr<_1aab02b23_Case> _1aab12e1e_checkCase(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aab0232b_Match> _142730_m, jule::I32 _142741_i, jule::Ptr<_1aa95ea07_Case> _142753_c, jule::Ptr<_1aabb8db5_Data> _142772_expr);
inline void _1aab1333c_checkCases(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa960321_MatchCase>* _150432_m, jule::Ptr<_1aab0232b_Match> _150456_rm, jule::Ptr<_1aabb8db5_Data> _150472_expr);
inline jule::Ptr<_1aab02b23_Case> _1aab13738_checkDefault(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aab0232b_Match> _152533_m, jule::Ptr<_1aa95d781_Else> _152548_d);
inline void _1aab13a9b_checkComptimePanic(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa0d7ceb_Token> _153339_callToken, jule::Ptr<_1aaaec832_Scope>* _153366_s);
inline void _1aab13e0e_processConstMatch(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aab0232b_Match>* _156539_tm, jule::Ptr<_1aa960321_MatchCase>* _156556_m);
inline void _1aab141b7_checkTypeMatch(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa960321_MatchCase>* _159436_m);
inline void _1aab14470_checkCommonMatch(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa960321_MatchCase>* _163738_m);
inline void _1aab14728_checkMatch(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa960321_MatchCase> _168831_m);
inline void _1aab149d1_checkFall(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10b5c2_FallSt> _169626_f);
inline jule::Ptr<_1aaaeed84_BreakSt> _1aab14d22_checkBreakWithLabel(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95ca27_BreakSt> _171936_b);
inline jule::Ptr<_1aaaeed84_BreakSt> _1aab15163_checkPlainBreak(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95ca27_BreakSt> _177732_b);
inline void _1aab1541b_checkBreak(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95ca27_BreakSt> _179927_b);
inline void _1aab156c4_checkRet(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95ab9b_RetSt> _181029_r);
inline void _1aab1597c_checkUseExpr(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa103520_UseExpr> _183629_ue);
inline void _1aab15c35_checkNode(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Any* _185231_node);
inline void _1aab15e33_checkResult(jule::Ptr<_1aab05032_scopeChecker> _self_);
inline void _1aab16131_checkTree(jule::Ptr<_1aab05032_scopeChecker> _self_);
inline void _1aab16494_checkGoto(_1aab05032_scopeChecker* _self_, jule::Ptr<_1aab0099a_GotoSt>* _195530_gt, jule::Ptr<_1aab03b68_scopeLabel>* _195548_label);
inline void _1aab16692_checkGotos(_1aab05032_scopeChecker* _self_);
inline void _1aab16890_checkLabels(_1aab05032_scopeChecker* _self_);
inline void _1aab16a8d_checkVars(_1aab05032_scopeChecker* _self_);
inline void _1aab16c8b_checkAliases(_1aab05032_scopeChecker* _self_);
inline void _1aab170ee_check(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa957978_ScopeTree>* _205027_tree, jule::Ptr<_1aaaec832_Scope>* _205055_s);
inline jule::Ptr<_1aab05032_scopeChecker> _1aab17385_newChildChecker(jule::Ptr<_1aab05032_scopeChecker> _self_);
inline void _1aab1a9c6_checkCdef(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _1626_d);
inline void _1aab1ac7e_checkTypedef(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _3229_d);
inline void _1aab1b037_checkNamespace(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _4835_d);
inline void _1aab1b2e0_checkDeprecated(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _10036_d);
inline void _1aab1b598_checkTest(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _14126_d);
inline void _1aab1b851_checkExport(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _16232_d);
inline void _1aab1bb09_checkDirective(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _20035_d);
inline void _1aab1bd07_check(_1aab1a575_directiveChecker* _self_);
inline jule::Ptr<_1aab1cd80_ReferenceStack> static__1aab1d1e3_new(void);
inline jule::I32 _1aab1d5de_Len(_1aab1cd80_ReferenceStack* _self_);
inline jule::Any _1aab1d930_At(_1aab1cd80_ReferenceStack* _self_, jule::I32 _4318_i);
inline void _1aab1dbd8_Push(_1aab1cd80_ReferenceStack* _self_, jule::Any _4824_ref);
inline jule::Bool _1bdbc8dc3_Exist(_1aab1cd80_ReferenceStack* _self_, jule::Ptr<_1aa969605_StructIns> _5320_t);
inline jule::Bool _1bdbd4b15_Exist(_1aab1cd80_ReferenceStack* _self_, jule::Ptr<_1aaa3e2ce_FnIns> _5320_t);
inline jule::Bool _1bdbead07_Exist(_1aab1cd80_ReferenceStack* _self_, jule::Ptr<_1aab70795_Var> _5320_t);
inline jule::Bool _1be0aaa35_Exist(_1aab1cd80_ReferenceStack* _self_, jule::Ptr<_1aaa46935_Trait> _5320_t);
inline void _1aab2488c_pushErr(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aa0d7ceb_Token>* _30824_token, jule::Str _30846_fmt, jule::Slice<jule::Any> _30866_args);
inline void _1aab2511d_pushSuggestion(_1aab23d86_symBuilder* _self_, jule::Str _31730_fmt, jule::Slice<jule::Any> _31750_args);
inline jule::Bool _1aab25519_checkCppUseDeclPath(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aa9608a4_UseDecl>* _32136_decl, jule::Str* _32158_path);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab25827_buildCppHeaderImport(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aa9608a4_UseDecl>* _34141_decl);
inline jule::Str _1aab25c23_checkAbsPath(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Str _37133_filepath, jule::Ptr<_1aa9608a4_UseDecl>* _37153_decl);
inline jule::Str _1aab2611e_checkStdAbsPath(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Str _40036_filepath, jule::Ptr<_1aa9608a4_UseDecl>* _40056_decl);
inline __jule_tuple_bool__jule_tuple_str _1aab26460_checkImpPath(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aa9608a4_UseDecl>* _42334_decl);
inline void _1aab26718_assignAlias(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _45333_imp);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab26a59_buildImport(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aa9608a4_UseDecl>* _46033_decl);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab26d9a_findUseDecl(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _48728_pkg);
inline jule::Bool _1aab271db_checkDuplicateUseDecl(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _49542_pkg);
inline jule::Str _1aab2752c_getAsLinkPath(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Str _50534_path);
inline void _1aab2794a_pushCycleError(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aab23d86_symBuilder>* _52632_sb, jule::Str _52649_path, _1ace17078_Builder* _52665_message);
inline void _1aab27d68_pushCrossCycleError(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aab23d86_symBuilder>* _53937_target, jule::Ptr<_1aab2ee08_ImportInfo>* _53959_imp, jule::Ptr<_1aa0d7ceb_Token>* _53978_errorToken);
inline jule::Bool _1aab28264_checkImportCycles(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aab2ee08_ImportInfo> _56234_imp, jule::Ptr<_1aa9608a4_UseDecl>* _56253_decl);
inline void _1aab28682_checkPackageAccessibility(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aa9608a4_UseDecl>* _59342_decl, jule::Str* _59364_mod, jule::Str* _59375_path);
inline jule::Bool _1aab28a7d_importPackage(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _62335_imp, jule::Ptr<_1aa9608a4_UseDecl>* _62358_decl);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab28dbe_importUseDecl(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aa9608a4_UseDecl>* _66935_decl);
inline void _1aab290bc_importUseDecls(jule::Ptr<_1aab23d86_symBuilder> _self_);
inline void _1aab29375_appendNode(_1aab23d86_symBuilder* _self_, _1aa0ec816_Node* _69831_node);
inline void _1aab29573_appendNodes(_1aab23d86_symBuilder* _self_);
inline void _1aab2982b_pushDirectivePass(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aa0ecc34_Directive>* _73438_d);
inline void _1aab29a29_appendTopDirectives(_1aab23d86_symBuilder* _self_);
inline void _1aab29c27_build(jule::Ptr<_1aab23d86_symBuilder> _self_);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab30425_SelectPackage(_1aab2ee08_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> );
inline jule::Ptr<_1aab70795_Var> _1aab30821_FindVar(_1aab2ee08_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1aabec1a1_TypeAlias> _1aab30c1c_FindTypeAlias(_1aab2ee08_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1aa966767_Struct> _1aab31118_FindStruct(_1aab2ee08_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1aaa3b221_Fn> _1aab31514_FindFn(_1aab2ee08_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1aaa46935_Trait> _1aab31855_FindTrait(_1aab2ee08_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1aaa490db_Enum> _1aab31b96_FindEnum(_1aab2ee08_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aab31ed7_FindTypeEnum(_1aab2ee08_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1aab323a0_isLookupable(_1aab2ee08_ImportInfo* _self_);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab32b53_SelectPackage(_1aab3267a_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> );
inline jule::Ptr<_1aab70795_Var> _1aab3304e_FindVar(_1aab3267a_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded);
inline jule::Ptr<_1aabec1a1_TypeAlias> _1aab3344a_FindTypeAlias(_1aab3267a_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded);
inline jule::Ptr<_1aa966767_Struct> _1aab33846_FindStruct(_1aab3267a_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded);
inline jule::Ptr<_1aaa3b221_Fn> _1aab33c42_FindFn(_1aab3267a_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded);
inline jule::Ptr<_1aaa46935_Trait> _1aab34083_FindTrait(_1aab3267a_Package* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1aaa490db_Enum> _1aab343c4_FindEnum(_1aab3267a_Package* _self_, jule::Str _31724_ident);
inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aab34715_FindTypeEnum(_1aab3267a_Package* _self_, jule::Str _32328_ident);
inline jule::Ptr<_1aaad1052_comptimeTypeInfo> _1aab4ba3a_pushComptimeTypeInfo(_1aab4b595_commonSemaMeta* _self_, jule::Ptr<_1aabecdb6_Type>* _21141_t);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab4cb07_SelectPackage(_1aab4c62e_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> _24829_selector);
inline jule::Ptr<_1aab70795_Var> _1aab4d003_FindVar(_1aab4c62e_sema* _self_, jule::Str _25823_ident, jule::Bool _25835_binded);
inline jule::Ptr<_1aabec1a1_TypeAlias> _1aab4d3ee_FindTypeAlias(_1aab4c62e_sema* _self_, jule::Str _27329_ident, jule::Bool _27341_binded);
inline jule::Ptr<_1aa966767_Struct> _1aab4d7ea_FindStruct(_1aab4c62e_sema* _self_, jule::Str _28826_ident, jule::Bool _28838_binded);
inline jule::Ptr<_1aaa3b221_Fn> _1aab4dbe6_FindFn(_1aab4c62e_sema* _self_, jule::Str _30322_ident, jule::Bool _30334_binded);
inline jule::Ptr<_1aaa46935_Trait> _1aab4e037_FindTrait(_1aab4c62e_sema* _self_, jule::Str _31825_ident);
inline jule::Ptr<_1aaa490db_Enum> _1aab4e378_FindEnum(_1aab4c62e_sema* _self_, jule::Str _33324_ident);
inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aab4e6b9_FindTypeEnum(_1aab4c62e_sema* _self_, jule::Str _34828_ident);
inline jule::Bool _1aab4eac6_isFlag(_1aab4c62e_sema* _self_, jule::I32 _36018_flags);
inline jule::Ptr<_1aaa42524_SymTab> _1aab4ed5c_getCurrentFile(_1aab4c62e_sema* _self_);
inline void _1aab50115_setCurrentFile(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa42524_SymTab> _36334_f);
inline void _1aab50533_pushErr(_1aab4c62e_sema* _self_, jule::Ptr<_1aa0d7ceb_Token> _36523_token, jule::Str _36545_fmt, jule::Slice<jule::Any> _36565_args);
inline void _1aab50896_pushSuggestion(_1aab4c62e_sema* _self_, jule::Str _37030_fmt, jule::Slice<jule::Any> _37050_args);
inline jule::Bool _1aab50c92_isAccessibleDefine(_1aab4c62e_sema* _self_, jule::Bool _37630_public, jule::Ptr<_1aa0d7ceb_Token> _37644_token);
inline jule::Bool _1aab51248_isDuplicatedIdent(_1aab4c62e_sema* _self_, jule::Uintptr _39929_itself, jule::Str* _39947_ident, jule::Bool _39959_binded);
inline void _1aab515ab_checkDirectives(jule::Ptr<_1aab4c62e_sema> _self_, jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>* _40837_d, jule::Any _40863_o);
inline jule::Bool _1aab51a62_checkGenericQuantity(_1aab4c62e_sema* _self_, jule::I32 _41736_required, jule::I32 _41751_given, jule::Ptr<_1aa0d7ceb_Token> _41763_token);
inline jule::Bool _1aab52a96_isUseAliasDuplication(_1aab4c62e_sema* _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _47538_imp);
inline jule::Bool _1aab52dd7_checkAutoAlias(_1aab4c62e_sema* _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _48735_imp);
inline jule::Bool _1aab53228_checkImport(_1aab4c62e_sema* _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _50532_imp);
inline void _1aab53426_checkImports(_1aab4c62e_sema* _self_);
inline void _1aab53624_implFileImpls(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab53822_implImpls(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab53a20_checkEnums(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab53c1d_checkFileInherits(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab53e1b_checkInherits(jule::Ptr<_1aab4c62e_sema> _self_);
inline _1aac10ea6_typeChecker _1aab543c2_typeChecker(jule::Ptr<_1aab4c62e_sema> _self_, jule::Trait _59832_l, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _59847_generics, jule::Ptr<_1aac0eeb6_referencer> _5997_referencer);
inline jule::Ptr<_1aabecdb6_Type> _1aab54933_buildTypeWithRefers(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa0ed817_TypeDecl>* _62541_t, jule::Trait _62564_l, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _6267_generics, jule::Ptr<_1aac0eeb6_referencer> _62635_referencer);
inline jule::Bool _1aab54e94_checkTypeSymWithRefers(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aac062ba_TypeSym>* _63244_t, jule::Trait _63261_l, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _6337_generics, jule::Ptr<_1aac0eeb6_referencer> _63335_referencer);
inline jule::Ptr<_1aaae7541_constraintChecker> _1aab5522a_constraintChecker(jule::Ptr<_1aab4c62e_sema> _self_);
inline jule::Bool _1aab55626_checkTypeSym(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aac062ba_TypeSym>* _64734_t, jule::Trait _64751_l);
inline jule::Ptr<_1aabecdb6_Type> _1aab55acc_checkTypeSymRefers(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa0ed817_TypeDecl>* _65240_t, jule::Trait _65263_l, jule::Ptr<_1aab1cd80_ReferenceStack> _65278_refers);
inline jule::Ptr<_1aabecdb6_Type> _1aab56083_buildTypeWithGenerics(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa0ed817_TypeDecl>* _66443_t, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _6657_generics, jule::Ptr<_1aab1cd80_ReferenceStack> _66535_refers);
inline jule::Ptr<_1aabecdb6_Type> _1aab56715_selectType(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa0ed817_TypeDecl>* _68232_t);
inline jule::Ptr<_1aabbad84_eval> _1aab56bbb_evalpd(jule::Ptr<_1aab4c62e_sema> _self_, jule::Trait _69427_l, jule::Ptr<_1aabecdb6_Type> _69442_p, jule::Ptr<_1aab70795_Var> _69456_owner);
inline jule::Ptr<_1aabbad84_eval> _1aab570b7_evalp(jule::Ptr<_1aab4c62e_sema> _self_, jule::Trait _70926_l, jule::Ptr<_1aabecdb6_Type> _70941_p);
inline jule::Ptr<_1aabbad84_eval> _1aab57408_eval(jule::Ptr<_1aab4c62e_sema> _self_, jule::Trait _71425_l);
inline jule::Bool _1aab57a24_checkAssignType(jule::Ptr<_1aab4c62e_sema> _self_, jule::Bool _71932_destIsRef, jule::Ptr<_1aabecdb6_Type>* _71954_dest, jule::Ptr<_1aabb8db5_Data>* _7208_d, jule::Ptr<_1aa0d7ceb_Token> _72022_errorToken, jule::Ptr<_1aab1cd80_ReferenceStack> _72053_refers);
inline jule::Bool _1aab57eca__checkTypeCompatibility(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabecdb6_Type>* _76245_dest, jule::Ptr<_1aabecdb6_Type>* _76263_src, jule::Ptr<_1aa0d7ceb_Token> _7637_errorToken);
inline jule::Bool _1aab58481_checkTypeCompatibility(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabecdb6_Type>* _78044_dest, jule::Ptr<_1aabecdb6_Type>* _7818_src, jule::Ptr<_1aa0d7ceb_Token>* _78125_errorToken);
inline void _1aab5889e_pushCompatiblityError(_1aab4c62e_sema* _self_, jule::Ptr<_1aabecdb6_Type>* _78942_dest, jule::Ptr<_1aabb8db5_Data>* _78960_src, jule::Ptr<_1aa0d7ceb_Token>* _7908_errorToken);
inline jule::Bool _1aab58d55_checkTypeCompatibility1(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabecdb6_Type>* _80745_dest, jule::Ptr<_1aabb8db5_Data>* _80763_src, jule::Ptr<_1aa0d7ceb_Token>* _8088_errorToken);
inline jule::Ptr<_1aabecdb6_Type> _1aab5930b_buildNonGenericType(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa0ed817_TypeDecl>* _82241_ast, jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>* _8238_generics, jule::Slice<jule::Ptr<_1aabecdb6_Type>>* _82344_ignored);
inline jule::Bool _1aab59707_buildFnNonGenericTypes(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _83443_f, jule::Slice<jule::Ptr<_1aabecdb6_Type>>* _83459_ignored);
inline jule::Ptr<_1aaa3e2ce_FnIns> _1aab59a48_getTraitCheckFnKind(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _85741_f);
inline jule::Bool _1aab59eee_checkConstraintsFn(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _88640_f, jule::Ptr<_1aa0d7ceb_Token>* _88656_et, jule::Ptr<_1aaa3e2ce_FnIns> _88679_exist);
inline jule::Bool _1aab5a4a5_checkConstraintsStruct(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa969605_StructIns>* _90044_s, jule::Ptr<_1aa0d7ceb_Token>* _90064_et, jule::Ptr<_1aa969605_StructIns> _90087_exist);
inline jule::Bool _1aab5a8a1_basicFnEnvironment(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _91740_f, jule::Fn<jule::Bool,jule::Ptr<_1aab4c62e_sema>*> _91751_algo);
inline jule::Bool _1aab5ac9c_fnEnvironment(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _93735_f, jule::Fn<jule::Bool,jule::Ptr<_1aab4c62e_sema>*,jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>*> _93746_algo);
inline void _1aab5b055_checkFnParamKind(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3d179_ParamIns>* _94938_p);
inline jule::Bool _1aab5b396_reloadFnInsTypes(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _95337_f);
inline jule::Bool _1aab5b84c_checkRefValidityForInitExpr(jule::Ptr<_1aab4c62e_sema> _self_, jule::Bool _99344_leftMut, jule::Ptr<_1aabb8db5_Data>* _99364_d, jule::Ptr<_1aa0d7ceb_Token>* _99379_errorToken);
inline jule::Bool _1aab5bb8d_isMutRiskyStruct(_1aab4c62e_sema* _self_, jule::Ptr<_1aa969605_StructIns>* _101029_s);
inline jule::Bool _1aab5c2a9_checkValidityForInitExpr(jule::Ptr<_1aab4c62e_sema> _self_, jule::Bool _103741_leftMut, jule::Bool _103756_leftRef, jule::Ptr<_1aabecdb6_Type>* _10384_leftKind, jule::Ptr<_1aabb8db5_Data>* _103826_d, jule::Ptr<_1aa0d7ceb_Token>* _103841_errorToken);
inline jule::Bool _1aab5c6a5_checkTypeAliasDeclKind(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabec1a1_TypeAlias>* _106544_ta, jule::Trait _106564_l);
inline jule::Bool _1aab5caa1_checkTypeAliasDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabec1a1_TypeAlias>* _108840_ta, jule::Trait _108860_l);
inline void _1aab5cd59_checkTypeAliasDeclDup(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabec1a1_TypeAlias>* _111943_ta);
inline jule::Bool _1aab5d0e0_checkTypeAliasDecls(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1bd85cc66_checkEnumItemsDup(_1aab4c62e_sema* _self_, jule::Slice<jule::Ptr<_1aaa48580_EnumItem>> _114036_items);
inline void _1bd86a966_checkEnumItemsDup(_1aab4c62e_sema* _self_, jule::Slice<jule::Ptr<_1aaa4a21e_TypeEnumItem>> _114036_items);
inline void _1aab5d651_checkEnumItemsStr(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa490db_Enum>* _116039_e);
inline void _1bd83c938_checkEnumItemInt(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabbad84_eval>* _118743_eval, jule::Ptr<_1aaa490db_Enum>* _118761_e, jule::Ptr<_1aac06bc2_Prim>* _118772_prim, jule::Ptr<_1aaa48580_EnumItem>* _118790_item, jule::U64* _1187112_n);
inline void _1bd84cd77_checkEnumItemInt(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabbad84_eval>* _118743_eval, jule::Ptr<_1aaa490db_Enum>* _118761_e, jule::Ptr<_1aac06bc2_Prim>* _118772_prim, jule::Ptr<_1aaa48580_EnumItem>* _118790_item, jule::I64* _1187112_n);
inline void _1bd838cb9_checkEnumItemsInt1(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aac06bc2_Prim>* _122341_prim, jule::Ptr<_1aaa490db_Enum>* _122359_e);
inline void _1bd839094_checkEnumItemsInt1(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aac06bc2_Prim>* _122341_prim, jule::Ptr<_1aaa490db_Enum>* _122359_e);
inline void _1aab5e300_checkEnumItemsInt(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa490db_Enum>* _125839_e);
inline void _1aab5e5a8_checkEnumDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa490db_Enum>* _126835_e);
inline void _1aab5e861_checkTypeEnumDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa4a7e6_TypeEnum>* _130939_e);
inline jule::Bool _1aab5eae7_checkEnumDecls(jule::Ptr<_1aab4c62e_sema> _self_);
inline jule::Bool _1aab5ed7d_checkTypeEnumDecls(jule::Ptr<_1aab4c62e_sema> _self_);
inline jule::Bool _1aab601be_checkDeclGenerics(_1aab4c62e_sema* _self_, jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>* _137234_generics);
inline jule::Bool _1aab60510_checkFnDeclParamsDup(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa3b221_Fn>* _139937_f);
inline jule::Bool _1aab60851_checkFnDeclResultDup(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa3b221_Fn>* _143641_f);
inline jule::Bool _1aab60b92_checkFnVariadicParam(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _148142_f);
inline void _1aab60e4a_checkFnDeclPrototype(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _149442_f);
inline jule::Bool _1aab61401_catchTraitInheritCycle(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa46935_Trait> _151639_t1, jule::Ptr<_1aaa46935_Trait> _151655_t2, _1ace17078_Builder* _151672_message);
inline jule::Bool _1aab61742__checkTraitDeclInherits(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa46935_Trait>* _153545_t);
inline void _1aab619ea_checkTraitDeclInherits(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa46935_Trait>* _157644_t);
inline void _1aab61ca3_checkTraitDeclMethod(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _160142_f);
inline void _1aab6205b_checkTraitDeclMethods(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa46935_Trait>* _161543_t);
inline void _1aab62314_checkTraitDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa46935_Trait>* _165136_t);
inline jule::Bool _1aab6259a_checkTraitDecls(jule::Ptr<_1aab4c62e_sema> _self_);
inline jule::Bool _1aab62996_checkTraitImplMethods(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa46935_Trait>* _167542_base, jule::Ptr<_1aaae9840_Impl>* _167557_ipl);
inline jule::Bool _1aab62d92_implToStruct(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa966767_Struct>* _168634_dest, jule::Ptr<_1aaae9840_Impl>* _168654_ipl);
inline void _1aab6314a_implTrait(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaae9840_Impl>* _173931_decl);
inline void _1aab63403_implStruct(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaae9840_Impl>* _178232_decl);
inline void _1aab636ab_implImpl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaae9840_Impl>* _180630_decl);
inline void _1aab63a1e_checkVarDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aab70795_Var>* _181734_decl, jule::Trait _181750_l);
inline void _1aab63cc7_checkGlobalVarDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aab70795_Var>* _186340_decl);
inline jule::Bool _1aab6405d_checkGlobalDecls(jule::Ptr<_1aab4c62e_sema> _self_);
inline jule::Bool _1aab64459_checkStructTraitImpl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa966767_Struct>* _189142_strct, jule::Ptr<_1aaa46935_Trait>* _189163_trt);
inline jule::Bool _1aab6479a_checkStructImpls(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa966767_Struct>* _191738_s);
inline jule::Bool _1aab64adb_checkStructFields(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa966767_Struct>* _192539_st);
inline void _1aab64d94_checkStructDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa966767_Struct>* _194237_s);
inline jule::Bool _1aab6512a_checkStructDecls(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab653d3_checkAnonFuncDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _198639_f);
inline void _1aab6568b_checkFuncDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _199135_f);
inline jule::Bool _1aab659cc_checkFuncDeclsBy(jule::Ptr<_1aab4c62e_sema> _self_, jule::Slice<jule::Ptr<_1aaa3b221_Fn>>* _201338_funcs);
inline jule::Bool _1aab65c63_checkFuncDecls(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab66181_pushCycleError(_1aab4c62e_sema* _self_, jule::Str* _202927_st1, jule::Str* _202938_st2, _1ace17078_Builder* _202953_message);
inline void _1aab66835_checkPackageDecls(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab66b98_checkDataForTypeInference(_1aab4c62e_sema* _self_, jule::Ptr<_1aabb8db5_Data>* _208942_d, jule::Ptr<_1aa0d7ceb_Token>* _208953_errToken);
inline void _1aab66e51_checkVarValue(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aab70795_Var>* _210135_v);
inline void _1aab672b4_evalVarValue(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aab70795_Var>* _215034_decl, jule::Trait _215050_l);
inline void _1aab67627_checkVar(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aab70795_Var>* _216730_decl, jule::Trait _216746_l);
inline void _1aab67825_checkGlobals(jule::Ptr<_1aab4c62e_sema> _self_);
inline jule::Ptr<_1aaa3e2ce_FnIns> _1aab67c21_readyToCheckFn(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa969605_StructIns>* _219136_s, jule::Ptr<_1aaa3b221_Fn>* _219156_f);
inline __jule_tuple_bool__jule_tuple_bool _1aab6811c_checkGenericFn(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _220736_f, jule::Ptr<_1aa0d7ceb_Token>* _220752_et);
inline void _1aab68480_checkTypeMethod(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa969605_StructIns>* _223037_s, jule::Ptr<_1aaa3b221_Fn>* _223057_f);
inline jule::Bool _1aab6887b_checkStructEnv(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa969605_StructIns>* _224636_s, jule::Ptr<_1aa0d7ceb_Token> _224655_errorToken);
inline jule::Bool _1aab68c77_precheckStructIns(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa969605_StructIns>* _234439_s, jule::Ptr<_1aa0d7ceb_Token> _234458_errorToken);
inline void _1aab69030_checkStructIns(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa969605_StructIns>* _238236_s);
inline void _1aab692d8_checkTypeStruct(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa966767_Struct>* _238837_s);
inline void _1aab694d6_checkStructTypes(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab6978e_checkRets(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _241930_f);
inline void _1aab69b02_checkFnInsSc(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _243033_f, jule::Ptr<_1aab05032_scopeChecker>* _243049_sc);
inline void _1aab69e65_checkFnInsCaller(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _244338_f, jule::Ptr<_1aa0d7ceb_Token> _244353_caller);
inline void _1aab6a21d_checkFnIns(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _246532_f);
inline void _1aab6a4c6_checkFunc(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _246931_f);
inline void _1aab6a77e_checkTestFn(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _248432_f);
inline void _1aab6aa37_precheckFunc(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _252034_f);
inline void _1aab6ac35_precheckFuncs(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab6ae33_checkFuncs(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab6b131_checkPackageTypes(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab6b32e_setFileSemaFields(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab6b52c_setSemaFields(jule::Ptr<_1aab4c62e_sema> _self_);
inline void _1aab6b7d5_check(jule::Ptr<_1aab4c62e_sema> _self_, jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _261127_files);
inline _1aab6bbd1_missingRetChecker static__1aab6c0cc_new(void);
inline jule::Bool _1aab6c3da_checkConditional(_1aab6bbd1_missingRetChecker* _self_, jule::Ptr<_1aaaed426_Conditional> _266232_c);
inline jule::Bool _1aab6c72b_checkMatch(_1aab6bbd1_missingRetChecker* _self_, jule::Ptr<_1aab0232b_Match> _267426_m);
inline jule::Bool _1aab6cb27_checkInfIter(_1aab6bbd1_missingRetChecker* _self_, jule::Uintptr _270024_it, jule::Ptr<_1aaaec832_Scope>* _270042_s);
inline jule::Bool _1aab6ce68_checkScope(_1aab6bbd1_missingRetChecker* _self_, jule::Ptr<_1aaaec832_Scope> _271826_s);
inline jule::Bool _1aab6d2a9_check(_1aab6bbd1_missingRetChecker* _self_, jule::Ptr<_1aaaec832_Scope> _277321_s);
inline jule::Bool _1aab70ba2_IsInitialized(_1aab70795_Var* _self_);
inline jule::Bool _1aab70e38_IsTypeInferred(_1aab70795_Var* _self_);
inline jule::Bool _1aab711be_untypedConstant(_1aab70795_Var* _self_);
inline jule::Bool static__1aab71a1b_Str(jule::Ptr<_1aaa3b221_Fn> _1016_f);
inline void _1aaba5445_pushErr(_1aaba4e17_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args);
inline jule::Bool _1aaba56cb_checkTrait(_1aaba4e17_typeCompatibilityChecker* _self_);
inline jule::Bool _1aaba5962_checkPtr(_1aaba4e17_typeCompatibilityChecker* _self_);
inline jule::Bool _1aaba5be8_checkPrim(_1aaba4e17_typeCompatibilityChecker* _self_);
inline jule::Bool _1aaba60e4_typeEnum(_1aaba4e17_typeCompatibilityChecker* _self_, jule::Ptr<_1aaa4a7e6_TypeEnum>* _18725_e, jule::Ptr<_1aabecdb6_Type>* _18744_t2);
inline jule::Bool _1aaba637a_checkTypeEnum(_1aaba4e17_typeCompatibilityChecker* _self_);
inline jule::Bool _1aaba6611_check(_1aaba4e17_typeCompatibilityChecker* _self_);
inline void _1aaba725a_pushErr(_1aaba6c93_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25543_args);
inline jule::Bool _1aaba74e1_checkValidity(_1aaba6c93_assignTypeChecker* _self_);
inline jule::Bool _1aaba7777_checkConst(_1aaba6c93_assignTypeChecker* _self_);
inline jule::Bool _1aaba7a0d_checkCompatibility(_1aaba6c93_assignTypeChecker* _self_);
inline jule::Bool _1aaba7c94_check(_1aaba6c93_assignTypeChecker* _self_);
inline jule::Bool _1bda338a9_annotateConstraintElem(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _37146_k);
inline jule::Bool _1bda33b62_annotateConstraintElem(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _37146_k);
inline jule::Bool _1bda393e8_annotateConstraintElem(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _37146_k);
inline jule::Bool _1bda4050e_annotateConstraintElem(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _37146_k);
inline jule::Bool _1aaba9092_annotateConstraintMap(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _39142_k);
inline jule::Bool _1aaba93d3_annotateConstraintTup(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _40642_k);
inline jule::Bool _1aaba9724_annotateConstraintFn(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _42341_k);
inline jule::Bool _1aaba9a65_annotateConstraintIdent(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _44444_k);
inline jule::Bool _1aaba9da6_annotateConstraint(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _47339_k);
inline void _1aabaa219_pushGeneric(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _49832_k, jule::I32 _49842_i);
inline jule::Bool _1aabaa55a_annotatePrim(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _51340_k);
inline jule::Bool _1aabaa89b_annotateArr(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _51739_k);
inline jule::Bool _1aabaabdc_annotateSlc(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _52739_k);
inline jule::Bool _1aabab0d8_checkMapKey(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _53738_k, jule::Ptr<_1aabecdb6_Type>* _53754_ck);
inline jule::Bool _1aabab429_annotateMap(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _54539_k);
inline jule::Bool _1aabab76a_annotateFn(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _55538_k);
inline jule::Bool _1aababaab_annotatePtr(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _58439_k);
inline jule::Bool _1aababdec_annotateSptr(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _59440_k);
inline jule::Bool _1aabac23d_annotateStruct(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _60442_k);
inline jule::Bool _1aabac57e_annotateAny(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _62639_k);
inline jule::Bool _1aabac8c0_annotateKind(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _64740_k);
inline jule::Bool _1aabacb56_annotate(_1aaba8668_dynamicTypeAnnotation* _self_);
inline void _1aabada69_pushErrToken(_1aabad4c5_fnCallArgChecker* _self_, jule::Ptr<_1aa0d7ceb_Token> _69228_token, jule::Str _69250_fmt, jule::Slice<jule::Any> _69270_args);
inline void _1aabaddcc_pushErr(_1aabad4c5_fnCallArgChecker* _self_, jule::Str _69623_fmt, jule::Slice<jule::Any> _69643_args);
inline jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>> _1aabae163_getParams(_1aabad4c5_fnCallArgChecker* _self_);
inline jule::Bool _1aabae4a4_checkCounts(_1aabad4c5_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>* _70928_params);
inline jule::Bool _1aabae95a_checkArg(_1aabad4c5_fnCallArgChecker* _self_, jule::Ptr<_1aaa3d179_ParamIns>* _74829_p, jule::Ptr<_1aabb8db5_Data>* _74848_arg, jule::Ptr<_1aa0d7ceb_Token>* _74865_errorToken);
inline jule::Bool _1aabaed56_push(_1aabad4c5_fnCallArgChecker* _self_, jule::Ptr<_1aaa3d179_ParamIns>* _77725_p, jule::Ptr<_1aa102b4b_Expr> _77743_arg);
inline jule::Bool _1aabb0252_pushVariadic(_1aabad4c5_fnCallArgChecker* _self_, jule::Ptr<_1aaa3d179_ParamIns>* _80133_p, jule::I32 _80151_i);
inline jule::Bool _1aabb0593_checkArgs(_1aabad4c5_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>* _88630_params);
inline jule::Bool _1aabb0829_checkDynamicTypeAnnotation(_1aabad4c5_fnCallArgChecker* _self_);
inline jule::Bool _1aabb0ab0_check(_1aabad4c5_fnCallArgChecker* _self_);
inline void _1aabb1990_pushErr(_1aabb140c_structLitChecker* _self_, jule::Ptr<_1aa0d7ceb_Token> _96623_token, jule::Str _96645_fmt, jule::Slice<jule::Any> _96665_args);
inline void _1aabb1d03_pushSuggestion(_1aabb140c_structLitChecker* _self_, jule::Str _97130_fmt, jule::Slice<jule::Any> _97150_args);
inline void _1aabb2221_pushMatch(_1aabb140c_structLitChecker* _self_, jule::Ptr<_1aa9689cd_FieldIns>* _97530_f, jule::Ptr<_1aabb8db5_Data>* _97549_d, jule::Ptr<_1aa0d7ceb_Token>* _97564_errorToken);
inline void _1aabb2584_checkPair(_1aabb140c_structLitChecker* _self_, jule::Ptr<_1aa10736a_FieldExprPair>* _99430_pair, jule::Slice<jule::Ptr<_1aa102b4b_Expr>>* _99462_exprs);
inline jule::Bool _1aabb28c5_readyExprs(_1aabb140c_structLitChecker* _self_, jule::Slice<jule::Ptr<_1aa102b4b_Expr>>* _103531_exprs);
inline void _1aabb2b7d_check(_1aabb140c_structLitChecker* _self_, jule::Slice<jule::Ptr<_1aa102b4b_Expr>>* _105926_exprs);
inline jule::Ptr<_1aab70795_Var> _1aabb370b_buildVar(_1aabb31de_rangeChecker* _self_, jule::Ptr<_1aa95a7c2_VarDecl>* _113525_decl);
inline void _1aabb3909_setSizeKey(_1aabb31de_rangeChecker* _self_);
inline void _1aabb3d27_checkRangeExprValidity(_1aabb31de_rangeChecker* _self_, jule::Ptr<_1aabb8db5_Data>* _115443_d, jule::Ptr<_1aab70795_Var>* _115454_key, jule::Ptr<_1aabecdb6_Type>* _115470_k);
inline void _1aabb4025_checkSlice(_1aabb31de_rangeChecker* _self_);
inline void _1aabb4223_checkArray(_1aabb31de_rangeChecker* _self_);
inline void _1aabb4421_checkMapKeyA(_1aabb31de_rangeChecker* _self_);
inline void _1aabb461e_checkMapKeyB(_1aabb31de_rangeChecker* _self_);
inline void _1aabb481c_checkMap(_1aabb31de_rangeChecker* _self_);
inline void _1aabb4a1a_checkStr(_1aabb31de_rangeChecker* _self_);
inline void _1aabb4c18_checkComptime(_1aabb31de_rangeChecker* _self_);
inline jule::Bool _1aabb4e9e_checkComptimeRange(_1aabb31de_rangeChecker* _self_);
inline jule::Bool _1aabb5235_check(_1aabb31de_rangeChecker* _self_);
inline void _1aabb6005_prepareTypes(_1aabb5b09_retTypeChecker* _self_);
inline jule::Bool _1aabb6346_prepareExprs(_1aabb5b09_retTypeChecker* _self_, jule::Ptr<_1aa102b4b_Expr>* _131533_e);
inline void _1aabb6544_checkExprs(_1aabb5b09_retTypeChecker* _self_);
inline void _1aabb6742_tryFuncMultiRetForward(_1aabb5b09_retTypeChecker* _self_);
inline void _1aabb6940_notFitVariables(_1aabb5b09_retTypeChecker* _self_);
inline jule::Bool _1aabb6c81_check(_1aabb5b09_retTypeChecker* _self_, jule::Ptr<_1aa102b4b_Expr>* _141026_e);
inline jule::Bool _1aabb92d3_IsNil(_1aabb8db5_Data* _self_);
inline jule::Bool _1aabb9569_IsVoid(_1aabb8db5_Data* _self_);
inline jule::Bool _1aabb9800_IsConst(_1aabb8db5_Data* _self_);
inline jule::Bool _1aabb9b41_GoodOperand(_1aabb8db5_Data* _self_, jule::Ptr<_1aabb8db5_Data>* _6228_other);
inline void _1aabbb35c_pushErr(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args);
inline void _1aabbb6c0_pushSuggestion(_1aabbad84_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args);
inline void _1aabbb8bd_allowBuiltin(_1aabbad84_eval* _self_);
inline void _1aabbbabb_disallowBuiltin(_1aabbad84_eval* _self_);
inline jule::Bool _1aabbbd52_isUnsafe(_1aabbad84_eval* _self_);
inline jule::Bool _1aabbc0d8_isGlobal(_1aabbad84_eval* _self_);
inline jule::Bool _1aabbc429_applyNumericPrefix(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _12939_d);
inline jule::Ptr<_1aabb8db5_Data> _1aabbc76a_litStr(_1aabbad84_eval* _self_, jule::Ptr<_1aa103ad6_LitExpr>* _16419_l);
inline jule::Ptr<_1aabb8db5_Data> _1aabbcaab_litRune(_1aabbad84_eval* _self_, jule::Ptr<_1aa103ad6_LitExpr>* _18220_l);
inline jule::Ptr<_1aabb8db5_Data> _1aabbcdec_litFloat(_1aabbad84_eval* _self_, jule::Ptr<_1aa103ad6_LitExpr>* _20121_l);
inline jule::Ptr<_1aabb8db5_Data> _1aabbd23d_litInt(_1aabbad84_eval* _self_, jule::Ptr<_1aa103ad6_LitExpr>* _21323_l);
inline jule::Ptr<_1aabb8db5_Data> _1aabbd57e_litNum(_1aabbad84_eval* _self_, jule::Ptr<_1aa103ad6_LitExpr>* _26823_l);
inline jule::Ptr<_1aabb8db5_Data> _1aabbd8c0_evalLit(_1aabbad84_eval* _self_, jule::Ptr<_1aa103ad6_LitExpr> _27723_lit);
inline jule::Any _1aabbdc11_findBuiltins(_1aabbad84_eval* _self_, jule::Str* _29029_ident);
inline jule::Any _1aabbe10c_getDef(_1aabbad84_eval* _self_, jule::Str* _31723_ident, jule::Bool _31735_binded);
inline jule::Ptr<_1aab1cd80_ReferenceStack> _1aabbe393_getOwnerRefers(_1aabbad84_eval* _self_);
inline void _1bdbc6c28_pushReference(_1aabbad84_eval* _self_, jule::Ptr<_1aa969605_StructIns>* _38037_ref);
inline void _1bdbd27c2_pushReference(_1aabbad84_eval* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _38037_ref);
inline void _1bdbe8a5d_pushReference(_1aabbad84_eval* _self_, jule::Ptr<_1aab70795_Var>* _38037_ref);
inline jule::Ptr<_1aabb8db5_Data> _1aabbe98c__evalEnum(_1aabbad84_eval* _self_, jule::Ptr<_1aaa490db_Enum> _38725_enm);
inline jule::Ptr<_1aabb8db5_Data> _1aabbed88_evalEnum(_1aabbad84_eval* _self_, jule::Ptr<_1aaa490db_Enum> _39628_enm, jule::Ptr<_1aa0d7ceb_Token> _39640_errorToken);
inline jule::Ptr<_1aabb8db5_Data> _1aabc01c9__evalTypeEnum(_1aabbad84_eval* _self_, jule::Ptr<_1aaa4a7e6_TypeEnum> _40529_enm);
inline jule::Ptr<_1aabb8db5_Data> _1aabc05c5_evalTypeEnum(_1aabbad84_eval* _self_, jule::Ptr<_1aaa4a7e6_TypeEnum> _41432_enm, jule::Ptr<_1aa0d7ceb_Token> _41448_errorToken);
inline jule::Ptr<_1aabb8db5_Data> _1aabc0916__evalStruct(_1aabbad84_eval* _self_, jule::Ptr<_1aa969605_StructIns> _42327_s);
inline jule::Ptr<_1aabb8db5_Data> _1aabc0d12_evalStruct(_1aabbad84_eval* _self_, jule::Ptr<_1aa966767_Struct> _43430_s, jule::Ptr<_1aa0d7ceb_Token> _43446_errorToken);
inline jule::Ptr<_1aabb8db5_Data> _1aabc1153_evalFnIns(_1aabbad84_eval* _self_, jule::Ptr<_1aaa3e2ce_FnIns> _46425_f);
inline void _1aabc14b6_checkDeprecated(_1aabbad84_eval* _self_, jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>* _47336_directives, jule::Ptr<_1aa0d7ceb_Token> _47367_tok);
inline jule::Ptr<_1aabb8db5_Data> _1aabc18b2_evalFn(_1aabbad84_eval* _self_, jule::Ptr<_1aaa3b221_Fn> _48926_f, jule::Ptr<_1aa0d7ceb_Token> _48934_errorToken);
inline void _1aabc1cd0_pushIllegalCycleError(_1aabbad84_eval* _self_, jule::Ptr<_1aab70795_Var>* _51438_v1, jule::Ptr<_1aab70795_Var>* _51449_v2, _1ace17078_Builder* _51464_message);
inline jule::Bool _1aabc21cb_checkCrossCycle(_1aabbad84_eval* _self_, jule::Ptr<_1aab70795_Var>* _52432_v, _1ace17078_Builder* _52446_message);
inline jule::Bool _1aabc25c7_checkIllegalCycles(_1aabbad84_eval* _self_, jule::Ptr<_1aab70795_Var>* _54139_v, jule::Ptr<_1aa0d7ceb_Token> _54148_declToken);
inline jule::Ptr<_1aabb8db5_Data> _1aabc29c3_evalVar(_1aabbad84_eval* _self_, jule::Ptr<_1aab70795_Var> _56927_v, jule::Ptr<_1aa0d7ceb_Token> _56936_errorToken);
inline jule::Ptr<_1aabb8db5_Data> _1aabc2dbe_evalTypeAlias(_1aabbad84_eval* _self_, jule::Ptr<_1aabec1a1_TypeAlias> _66933_ta, jule::Ptr<_1aa0d7ceb_Token> _66949_errorToken);
inline jule::Ptr<_1aabb8db5_Data> _1aabc3210_evalTrait(_1aabbad84_eval* _self_, jule::Ptr<_1aaa46935_Trait> _72229_t);
inline jule::Ptr<_1aabb8db5_Data> _1aabc360b_evalDef(_1aabbad84_eval* _self_, jule::Any* _73128_def, jule::Ptr<_1aa0d7ceb_Token> _73142_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabc394c_evalIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aa104466_IdentExpr> _75729_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabc3c8d_evalUnary(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa104c08_UnaryExpr> _76230_u);
inline jule::Ptr<_1aabb8db5_Data> _1aabc40ce_evalVariadic(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa1050d2_VariadicExpr> _76733_v);
inline jule::Ptr<_1aabb8db5_Data> _1aabc4420_evalUnsafe(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa103eb0_UnsafeExpr> _78931_u);
inline jule::Ptr<_1aabb8db5_Data> _1aabc4761_evalArr(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa1091a2_SliceExpr> _79728_s);
inline jule::Ptr<_1aabb8db5_Data> _1aabc4c17_evalExpSlc(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa1091a2_SliceExpr> _87431_s, jule::Ptr<_1aabecdb6_Type> _87455_t, jule::Any _87469_first);
inline jule::Ptr<_1aabb8db5_Data> _1aabc5058_evalSliceExpr(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa1091a2_SliceExpr> _91234_s);
inline jule::Bool _1aabc5454_checkIntegerIndexingByData(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _95747_d, jule::Ptr<_1aa0d7ceb_Token> _95761_token);
inline void _1aabc5872_indexingPtr(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _97032_d, jule::Ptr<_1aabb8db5_Data>* _97047_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _97066_i);
inline void _1aabc5c90_indexingArr(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _98632_d, jule::Ptr<_1aabb8db5_Data>* _98647_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _98666_i);
inline void _1aabc61ad_indexingSlc(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _99632_d, jule::Ptr<_1aabb8db5_Data>* _99647_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _99666_i);
inline void _1aabc65cb_indexingMap(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _101932_d, jule::Ptr<_1aabb8db5_Data>* _101947_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _101966_i);
inline void _1aabc69e9_indexingStr(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _103632_d, jule::Ptr<_1aabb8db5_Data>* _103647_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _103666_i);
inline void _1aabc6e17_comptimeRange(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _106434_d, jule::Ptr<_1aabb8db5_Data>* _106449_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _106468_i);
inline void _1aabc7335_toIndexing(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _108931_d, jule::Ptr<_1aabb8db5_Data>* _108946_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _108965_i);
inline jule::Bool _1aabc77db_pushGenericsFromExprSubIdent(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa105c5e_SubIdentExpr>* _111750_sexpr, jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>* _11188_generics, jule::Ptr<_1aa102b4b_Expr>* _111841_expr);
inline jule::Bool _1aabc7bd7_pushGenericsFromData(jule::Ptr<_1aabbad84_eval> _self_, jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>* _112842_generics, jule::Ptr<_1aa102b4b_Expr>* _112875_expr);
inline void _1aabc804a_evalIdentDeclFromIndexing(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aabb8db5_Data>* _119847_d, jule::Ptr<_1aa109b0e_IndexingExpr>* _119862_i);
inline __jule_tuple_bool__jule_tuple_bool _1aabc8501_checkGenericFn(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _124136_f, jule::Ptr<_1aa0d7ceb_Token>* _124152_et, jule::Any* _124176_model);
inline void _1aabc8864_evalFnGenericFromIndexing(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aabb8db5_Data>* _125747_d, jule::Ptr<_1aa109b0e_IndexingExpr>* _125762_i);
inline jule::Ptr<_1aabb8db5_Data> _1aabc8ba5_evalIndexing(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa109b0e_IndexingExpr> _129733_i);
inline __jule_tuple_x_1aabb8db5_Data__jule_tuple_x_1aabb8db5_Data _1aabc8ee6_evalSlicingExprs(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa10a26e_SlicingExpr>* _135738_s);
inline void _1aabc929e_slicingArr(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _139327_d);
inline void _1aabc96bc_slicingStr(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _140827_d, jule::Ptr<_1aabb8db5_Data>* _140838_l, jule::Ptr<_1aabb8db5_Data>* _140849_r);
inline void _1aabc9b95_checkSlicing(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _144633_d, jule::Ptr<_1aabb8db5_Data>* _144644_l, jule::Ptr<_1aabb8db5_Data>* _144655_r, jule::Ptr<_1aa10a26e_SlicingExpr>* _144666_s);
inline jule::Ptr<_1aabb8db5_Data> _1aabc9ed6_evalSlicing(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa10a26e_SlicingExpr> _146532_s);
inline void _1aabca404_castPtr(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _150227_t, jule::Ptr<_1aabb8db5_Data> _150241_d, jule::Ptr<_1aa0d7ceb_Token> _150251_errorToken);
inline void _1aabca822_castStruct(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _152430_t, jule::Ptr<_1aabb8db5_Data> _152444_d, jule::Ptr<_1aa0d7ceb_Token> _152454_errorToken);
inline void _1aabcac40_castRef(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _154127_t, jule::Ptr<_1aabb8db5_Data> _154141_d, jule::Ptr<_1aa0d7ceb_Token> _154151_errorToken);
inline void _1aabcb15d_castSlc(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _156427_t, jule::Ptr<_1aabb8db5_Data> _156441_d, jule::Ptr<_1aa0d7ceb_Token> _156451_errorToken);
inline void _1aabcb57b_castBool(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _161928_t, jule::Ptr<_1aabb8db5_Data> _161942_d, jule::Ptr<_1aa0d7ceb_Token> _161952_errorToken);
inline void _1aabcb999_castStr(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _162627_t, jule::Ptr<_1aabb8db5_Data> _162641_d, jule::Ptr<_1aa0d7ceb_Token> _162651_errorToken);
inline void _1aabcbdb7_castInt(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _167627_t, jule::Ptr<_1aabb8db5_Data> _167641_d, jule::Ptr<_1aa0d7ceb_Token> _167651_errorToken);
inline void _1aabcc2d5_castNum(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _172227_t, jule::Ptr<_1aabb8db5_Data> _172241_d, jule::Ptr<_1aa0d7ceb_Token> _172251_errorToken);
inline void _1aabcc703_castPrim(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _175328_t, jule::Ptr<_1aabb8db5_Data> _175342_d, jule::Ptr<_1aa0d7ceb_Token> _175352_errorToken);
inline void _1aabcca66_castConstant(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type>* _177133_t, jule::Ptr<_1aabb8db5_Data>* _177148_d);
inline void _1aabcce84_castTypeEnum(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type>* _178033_t, jule::Ptr<_1aabb8db5_Data>* _178048_d, jule::Ptr<_1aa0d7ceb_Token>* _178063_errorToken);
inline void _1aabcd3a2_castTypeEnumT(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type>* _179034_t, jule::Ptr<_1aabb8db5_Data>* _179049_d, jule::Ptr<_1aa0d7ceb_Token>* _179064_errorToken);
inline jule::Ptr<_1aabb8db5_Data> _1aabcd858_evalCastByTypeNData(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _180039_t, jule::Ptr<_1aabb8db5_Data> _180053_d, jule::Ptr<_1aa0d7ceb_Token> _180067_errorToken);
inline jule::Ptr<_1aabb8db5_Data> _1aabcdd0e_evalCastT(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aabecdb6_Type>* _189731_t, jule::Ptr<_1aa102b4b_Expr>* _189746_e, jule::Ptr<_1aa0d7ceb_Token>* _189766_et);
inline jule::Ptr<_1aabb8db5_Data> _1aabce150_evalCast(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa1054ab_CastExpr> _191429_c);
inline jule::Ptr<_1aabb8db5_Data> _1aabce491_evalNamespace(_1aabbad84_eval* _self_, jule::Ptr<_1aa105885_NamespaceExpr> _192333_s);
inline jule::Ptr<_1aabb8db5_Data> _1aabce947_evalStructLitExplicit(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa969605_StructIns> _194242_s, jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _19437_exprs, jule::Ptr<_1aa0d7ceb_Token> _194332_errorToken);
inline jule::Ptr<_1aabb8db5_Data> _1aabcec88_evalStructLit(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa107b95_StructLit> _197734_lit);
inline _1aac10ea6_typeChecker _1aabd001e_typeChecker(_1aabbad84_eval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabd0360_evalType(_1aabbad84_eval* _self_, jule::Ptr<_1aa0ed817_TypeDecl> _201928_t);
inline void _1aabd06c3_callTypeFn(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa106875_FnCallExpr>* _203232_fc, jule::Ptr<_1aabb8db5_Data>* _203259_d);
inline void _1aabd0a36_callBuiltinFn(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa106875_FnCallExpr>* _205835_fc, jule::Ptr<_1aabb8db5_Data>* _205862_d);
inline void _1aabd0d99_checkFnOfConcurrentCall(_1aabbad84_eval* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _207040_f, jule::Ptr<_1aa0d7ceb_Token> _207051_errorToken);
inline void _1aabd12b7_processExceptionalHandler(_1aabbad84_eval* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _208946_f, jule::Ptr<_1aa106875_FnCallExpr>* _208962_fc, jule::Ptr<_1aabb8db5_Data>* _208989_d);
inline void _1aabd162a_callFn(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa106875_FnCallExpr>* _211628_fc, jule::Ptr<_1aabb8db5_Data>* _211655_d);
inline jule::Ptr<_1aabb8db5_Data> _1aabd196b_evalFnCall(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa106875_FnCallExpr> _226531_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aabd1d67_evalEnumStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aaa490db_Enum> _229834_enm, jule::Ptr<_1aa0d7ceb_Token> _229850_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd2263_evalTypeEnumStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aaa4a7e6_TypeEnum> _230638_enm, jule::Ptr<_1aa0d7ceb_Token> _230654_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd265e_evalStructStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa969605_StructIns> _232936_s, jule::Ptr<_1aa0d7ceb_Token> _232951_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd2b15_evalTraitSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data> _236437_d, jule::Ptr<_1aaa46935_Trait> _236451_trt, jule::Ptr<_1aa0d7ceb_Token> _236468_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd3176_evalStructSubIdentField(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _238644_d, jule::Ptr<_1aa969605_StructIns>* _238659_s, jule::Ptr<_1aa0d7ceb_Token>* _238679_tok, jule::Ptr<_1aa9689cd_FieldIns>* _2386104_f);
inline __jule_tuple_x_1aabb8db5_Data__jule_tuple_bool _1aabd362c_evalStructSubIdentFieldOnly(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data> _241047_d, jule::Ptr<_1aa969605_StructIns> _241061_s, jule::Ptr<_1aa105c5e_SubIdentExpr> _241080_si);
inline jule::Ptr<_1aabb8db5_Data> _1aabd3c48_evalStructSubIdentMethod(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _242445_d, jule::Ptr<_1aa969605_StructIns>* _242460_s, jule::Ptr<_1aa0d7ceb_Token>* _242480_tok, jule::Ptr<_1aaa3b221_Fn>* _2424105_m, jule::Bool _2424113_ref);
inline jule::Ptr<_1aabb8db5_Data> _1aabd42a9_evalStructSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data> _244538_d, jule::Ptr<_1aa969605_StructIns> _244552_s, jule::Ptr<_1aa105c5e_SubIdentExpr> _244571_si, jule::Bool _244595_ref);
inline jule::Ptr<_1aabb8db5_Data> _1aabd45ea_evalIntTypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _247333_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd493b_evalUintTypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _250034_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd4c7c_evalI8TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _251832_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd50bd_evalI16TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _254733_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd540e_evalI32TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _257633_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd5750_evalI64TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _260533_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd5a91_evalU8TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _263432_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd5dd2_evalU16TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _265333_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd6223_evalU32TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _267233_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd6564_evalU64TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _269133_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd68a5_evalF32TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _271033_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd6be6_evalF64TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _274933_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd70e2_evalPrimStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _278834_t, jule::Ptr<_1aa0d7ceb_Token> _278844_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aabd74dd_evalTypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data> _282634_d, jule::Ptr<_1aa105c5e_SubIdentExpr> _282648_si);
inline jule::Ptr<_1aabb8db5_Data> _1bde1c248_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaad1052_comptimeTypeInfo>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si);
inline jule::Ptr<_1aabb8db5_Data> _1bde266b4_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaac1bad_comptimeStructField>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si);
inline jule::Ptr<_1aabb8db5_Data> _1bde2ac7e_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaac8104_comptimeEnumField>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si);
inline jule::Ptr<_1aabb8db5_Data> _1bde3038d_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaacae1a_comptimeParam>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si);
inline jule::Ptr<_1aabb8db5_Data> _1bde34a9b_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaac4dd1_comptimeStatic>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si);
inline jule::Ptr<_1aabb8db5_Data> _1bde39166_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaad7564_comptimeValue>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si);
inline jule::Ptr<_1aabb8db5_Data> _1bde3d731_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaadbc3e_comptimeFile>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si);
inline jule::Ptr<_1aabb8db5_Data> _1bde42d84_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaae0b55_comptimeDecl>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si);
inline __jule_tuple_x_1aabb8db5_Data__jule_tuple_bool _1aabd7d90_tryComptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _285243_d, jule::Ptr<_1aa105c5e_SubIdentExpr> _285257_si);
inline jule::Ptr<_1aabb8db5_Data> _1aabd828b_evalObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data> _288335_d, jule::Ptr<_1aa105c5e_SubIdentExpr> _288349_si);
inline jule::Ptr<_1aabb8db5_Data> _1aabd85cc_evalSubIdent(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa105c5e_SubIdentExpr> _293133_si);
inline jule::Ptr<_1aabb8db5_Data> _1aabd89c8_evalTupleFunc(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa103740_TupleExpr> _294534_tup, jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aa102b4b_Expr>*> _294556_part);
inline jule::Ptr<_1aabb8db5_Data> _1aabd8d19_evalTuple(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa103740_TupleExpr> _297430_tup);
inline jule::Ptr<_1aabb8db5_Data> _1aabd9215_evalMap(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aac0c865_Map> _298028_m, jule::Ptr<_1aa10814b_BraceLit> _298041_lit);
inline jule::Ptr<_1aabb8db5_Data> _1aabd9556_evalBraceLit(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa10814b_BraceLit> _302833_lit);
inline jule::Ptr<_1aabb8db5_Data> _1aabd9897_evalAnonFunc(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa959617_FnDecl> _305433_decl);
inline jule::Ptr<_1aabb8db5_Data> _1aabd9bd8_evalBinary(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa106215_BinaryExpr> _309231_op);
inline jule::Ptr<_1aabb8db5_Data> _1aabda029_evalExprKind(jule::Ptr<_1aabbad84_eval> _self_, jule::Any _310733_kind);
inline jule::Ptr<_1aabb8db5_Data> _1aabda36a_eval1(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa102b4b_Expr> _315526_expr);
inline jule::Ptr<_1aabb8db5_Data> _1aabda6ab_eval(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa102b4b_Expr> _320025_expr);
inline jule::Ptr<_1aabb8db5_Data> _1aabda9ec_evalExpr1(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa102b4b_Expr> _321530_expr);
inline jule::Ptr<_1aabb8db5_Data> _1aabdad3d_evalExpr(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa102b4b_Expr> _323129_expr);
inline _1aabdb2c2_unaryEval static__1aabdb745_new(jule::Ptr<_1aabbad84_eval> _325220_e);
inline void _1aabdb943_minus(_1aabdb2c2_unaryEval* _self_);
inline void _1aabdbb41_plus(_1aabdb2c2_unaryEval* _self_);
inline void _1aabdbd3e_caret(_1aabdb2c2_unaryEval* _self_);
inline void _1aabdc03c_excl(_1aabdb2c2_unaryEval* _self_);
inline void _1aabdc23a_star(_1aabdb2c2_unaryEval* _self_);
inline void _1aabdc438_amper(_1aabdb2c2_unaryEval* _self_);
inline void _1aabdc636_typeDecl(_1aabdb2c2_unaryEval* _self_);
inline void _1aabdc834_evalData(_1aabdb2c2_unaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabdcb75_eval(_1aabdb2c2_unaryEval* _self_, jule::Ptr<_1aa104c08_UnaryExpr> _352424_u);
inline _1aabdd25d_binaryEval static__1aabdd846_newPlain(jule::Ptr<_1aabbad84_eval> _357225_e);
inline _1aabdd25d_binaryEval static__1aabddbba_new(jule::Ptr<_1aabbad84_eval> _357820_e, jule::Ptr<_1aa0d7ceb_Token> _357834_op);
inline jule::Bool _1aabdde51_checkTypeCompatibility(_1aabdd25d_binaryEval* _self_);
inline jule::Bool _1aabde1d7_checkTypeCompatibility1(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabde46d_evalComptimeTypeInfo(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabde704_evalNil(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabde98a_evalEnum(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabdec21_evalTypeEnum(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabdeea7_evalSptr(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabe023d_evalPtr(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabe04c4_evalArr(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabe075a_evalStruct(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabe09e1_evalTrait(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabe0c77_evalAny(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabe100d_evalBool(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabe1294_evalStr(_1aabdd25d_binaryEval* _self_);
inline void _1aabe1492_setTypeToGreater(_1aabdd25d_binaryEval* _self_);
inline void _1aabe174a_checkModData(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aabb8db5_Data>* _391933_d);
inline void _1aabe1948_mod(_1aabdd25d_binaryEval* _self_);
inline jule::Bool _1aabe1bce_numbersAreCompatibile(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabe1e65_shift(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabe21eb_evalFloat(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabe2482_evalInt(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabe2718_evalPrim(_1aabdd25d_binaryEval* _self_);
inline jule::Bool _1aabe299e_checkSpecialCases(_1aabdd25d_binaryEval* _self_);
inline jule::Ptr<_1aabb8db5_Data> _1aabe2c35_evalOp(_1aabdd25d_binaryEval* _self_);
inline void _1aabe2edd_evalConst(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aabb8db5_Data>* _424330_d);
inline void _1aabe3296_checkData(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aabb8db5_Data>* _432130_d);
inline void _1aabe3494_checkDatas(_1aabdd25d_binaryEval* _self_);
inline void _1aabe374c_setModel(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aabb8db5_Data>* _433329_d);
inline void _1aabe3a05_postEval(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aabb8db5_Data>* _436229_d);
inline jule::Ptr<_1aabb8db5_Data> _1aabe3e01_solveExplicit(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aabb8db5_Data>* _436734_l, jule::Ptr<_1aabb8db5_Data>* _436749_r);
inline jule::Ptr<_1aabb8db5_Data> _1aabe4242_eval(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aa106215_BinaryExpr>* _438725_op);
inline jule::Str _1aabed2b2_Str(_1aabecdb6_Type* _self_);
inline jule::Bool _1aabed603_Equal(jule::Ptr<_1aabecdb6_Type> _self_, jule::Ptr<_1aabecdb6_Type> _6618_other);
inline jule::Bool _1aabedca7_Binded(_1aabecdb6_Type* _self_);
inline jule::Bool _1aabee03d_IsNil(_1aabecdb6_Type* _self_);
inline jule::Bool _1aabee2c4_Void(_1aabecdb6_Type* _self_);
inline jule::Trait _1aabee55a_ActualKind(_1aabecdb6_Type* _self_);
inline jule::Bool _1aabee89b_ActualEqual(jule::Ptr<_1aabecdb6_Type> _self_, jule::Ptr<_1aabecdb6_Type> _11524_other);
inline jule::Bool _1aabeebdc_deepActualEqual(jule::Ptr<_1aabecdb6_Type> _self_, jule::Ptr<_1aabecdb6_Type> _13028_other);
inline jule::Bool _1aabeee73_Comparable(_1aabecdb6_Type* _self_);
inline jule::Bool _1aac00209_Mutable(_1aabecdb6_Type* _self_);
inline jule::Bool _1aac00490_Ordered(_1aabecdb6_Type* _self_);
inline jule::Bool _1aac00726_NilCompatible(_1aabecdb6_Type* _self_);
inline jule::Bool _1aac009ac_GC(_1aabecdb6_Type* _self_);
inline jule::Bool _1aac00c43_Variadicable(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aac06bc2_Prim> _1aac00ec9_Prim(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aac0a6ed_Sptr> _1aac01260_Sptr(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aac0deb5_Ptr> _1aac014e6_Ptr(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaa490db_Enum> _1aac0177c_Enum(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aac01a13_TypeEnum(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aac0d4e2_Arr> _1aac01c99_Arr(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aac0b1c1_Slc> _1aac02030_Slc(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaa3e2ce_FnIns> _1aac022b6_Fn(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aa969605_StructIns> _1aac0254c_Struct(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aa969605_StructIns> _1aac027d3_softStruct(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaa46935_Trait> _1aac02a69_Trait(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aac0c865_Map> _1aac02d00_Map(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aac0bcb5_Tuple> _1aac03086_Tup(_1aabecdb6_Type* _self_);
inline jule::Bool _1aac0331c_comptime(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaac3451_comptimeStructFields> _1aac035a3_comptimeStructFields(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaac1bad_comptimeStructField> _1aac03839_comptimeStructField(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaac9413_comptimeEnumFields> _1aac03ac0_comptimeEnumFields(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaac8104_comptimeEnumField> _1aac03d56_comptimeEnumField(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaaccc74_comptimeParams> _1aac040dc_comptimeParams(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaacae1a_comptimeParam> _1aac04373_comptimeParam(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaac1152_comptimeRange> _1aac04609_comptimeRange(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaace5d3_comptimeTypeInfos> _1aac04890_comptimeTypeInfos(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaad1052_comptimeTypeInfo> _1aac04b26_comptimeTypeInfo(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaac6685_comptimeStatics> _1aac04dac_comptimeStatics(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaac4dd1_comptimeStatic> _1aac05143_comptimeStatic(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaad7564_comptimeValue> _1aac053c9_comptimeValue(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaae0b55_comptimeDecl> _1aac05660_comptimeDecl(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaadd867_comptimeDecls> _1aac058e6_comptimeDecls(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaadbc3e_comptimeFile> _1aac05b7c_comptimeFile(_1aabecdb6_Type* _self_);
inline jule::Ptr<_1aaada2c0_comptimeFiles> _1aac05e13_comptimeFiles(_1aabecdb6_Type* _self_);
inline jule::Bool _1aac06672_checked(_1aac062ba_TypeSym* _self_);
inline jule::Str _1aac07046_Str(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac07387_Equal(jule::Ptr<_1aac06bc2_Prim> _self_, jule::Ptr<_1aabecdb6_Type> _57118_other);
inline jule::Bool _1aac0782c_IsConstraint(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac07ab3_IsI8(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac07d49_IsI16(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac080d0_IsI32(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac08366_IsI64(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac085ec_IsU8(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac08883_IsU16(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac08b19_IsU32(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac08da0_IsU64(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac09136_IsF32(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac093bc_IsF64(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac09653_IsInt(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac098d9_IsUint(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac09b70_IsUintptr(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac09e06_IsBool(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac0a18c_IsStr(_1aac06bc2_Prim* _self_);
inline jule::Bool _1aac0a423_IsAny(_1aac06bc2_Prim* _self_);
inline jule::Str _1aac0aaa5_Str(_1aac0a6ed_Sptr* _self_);
inline jule::Bool _1aac0ade6_Equal(jule::Ptr<_1aac0a6ed_Sptr> _self_, jule::Ptr<_1aabecdb6_Type> _64818_other);
inline jule::Str _1aac0b688_Str(_1aac0b1c1_Slc* _self_);
inline jule::Bool _1aac0b9c9_Equal(jule::Ptr<_1aac0b1c1_Slc> _self_, jule::Ptr<_1aabecdb6_Type> _66718_other);
inline jule::Str _1aac0c16c_Str(_1aac0bcb5_Tuple* _self_);
inline jule::Bool _1aac0c4ad_Equal(jule::Ptr<_1aac0bcb5_Tuple> _self_, jule::Ptr<_1aabecdb6_Type> _69618_other);
inline jule::Str _1aac0cc1c_Str(_1aac0c865_Map* _self_);
inline jule::Bool _1aac0d05d_Equal(jule::Ptr<_1aac0c865_Map> _self_, jule::Ptr<_1aabecdb6_Type> _73318_other);
inline jule::Str _1aac0d899_Str(_1aac0d4e2_Arr* _self_);
inline jule::Bool _1aac0dbda_Equal(jule::Ptr<_1aac0d4e2_Arr> _self_, jule::Ptr<_1aabecdb6_Type> _76218_other);
inline jule::Str _1aac0e36c_Str(_1aac0deb5_Ptr* _self_);
inline jule::Bool _1aac0e6ad_Equal(jule::Ptr<_1aac0deb5_Ptr> _self_, jule::Ptr<_1aabecdb6_Type> _78718_other);
inline jule::Bool _1aac0ea32_IsUnsafe(_1aac0deb5_Ptr* _self_);
inline void _1aac11737_pushErr(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0d7ceb_Token> _88123_token, jule::Str _88145_fmt, jule::Slice<jule::Any> _88165_args);
inline void _1aac11935_allowBuiltin(_1aac10ea6_typeChecker* _self_);
inline void _1aac11b33_disallowBuiltin(_1aac10ea6_typeChecker* _self_);
inline void _1be0a649d_pushReference(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa969605_StructIns>* _89337_t);
inline void _1be0a8d52_pushReference(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aaa46935_Trait>* _89337_t);
inline void _1aac12194_pushReferenceByKind(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aabecdb6_Type>* _90340_k);
inline void _1aac125b2_pushCycleError(_1aac10ea6_typeChecker* _self_, jule::Any _91426_def1, jule::Any _91437_def2, _1ace17078_Builder* _91453_message);
inline jule::Bool _1aac129ad_checkCrossCycle(_1aac10ea6_typeChecker* _self_, jule::Any _93627_decl, _1ace17078_Builder* _93643_message);
inline jule::Bool _1aac12da9_checkIllegalCycles(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _97035_ident, jule::Any _97067_decl);
inline jule::Trait _1aac132a5_fromTypeAlias(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _102034_decl, jule::Ptr<_1aabec1a1_TypeAlias>* _102066_ta);
inline jule::Ptr<_1aaa490db_Enum> _1aac136a1_fromEnum(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _110525_decl, jule::Ptr<_1aaa490db_Enum>* _110557_e);
inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aac13a9c_fromTypeEnum(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _111729_decl, jule::Ptr<_1aaa4a7e6_TypeEnum>* _111761_e);
inline jule::Ptr<_1aaa46935_Trait> _1aac13e98_fromTrait(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _112926_decl, jule::Ptr<_1aaa46935_Trait>* _112958_t);
inline jule::Bool _1aac14394_checkStructIns(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa969605_StructIns>* _114235_ins, jule::Ptr<_1aa0d7ceb_Token>* _114257_errorToken);
inline void _1aac1464c_appendUsedStructReference(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa966767_Struct>* _116246_s);
inline jule::Ptr<_1aa969605_StructIns> _1aac14a48_buildStructInstance(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _117540_decl, jule::Ptr<_1aa966767_Struct>* _117572_s);
inline jule::Ptr<_1aa969605_StructIns> _1aac14e44_fromStructIns(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa969605_StructIns>* _122334_ins, jule::Ptr<_1aa0d7ceb_Token> _122355_token);
inline jule::Ptr<_1aa969605_StructIns> _1aac15340_fromStruct(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _124131_decl, jule::Ptr<_1aa966767_Struct>* _124163_s);
inline jule::Trait _1aac15681_getDef(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _128527_decl);
inline jule::Trait _1aac159c2_buildIdent(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl> _134630_decl);
inline jule::Trait _1aac15d13_buildSubIdent(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ee1db_SubIdentTypeDecl> _135033_decl);
inline jule::Ptr<_1aac0a6ed_Sptr> _1aac16154_buildSptrFromType(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aabecdb6_Type>* _138438_elem);
inline jule::Ptr<_1aac0a6ed_Sptr> _1aac16495_buildSptr(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ee8b2_SptrTypeDecl> _139829_decl);
inline jule::Ptr<_1aac0deb5_Ptr> _1aac167d6_buildPtrFromType(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aabecdb6_Type>* _140737_elem);
inline jule::Ptr<_1aac0deb5_Ptr> _1aac16b27_buildPtr(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa100341_PtrTypeDecl> _142228_decl);
inline jule::Ptr<_1aac0b1c1_Slc> _1aac16e68_buildSlc(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0eec47_SlcTypeDecl> _143928_decl);
inline jule::Ptr<_1aac0d4e2_Arr> _1aac172a9_buildArr(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa100ad3_ArrTypeDecl> _146028_decl);
inline jule::Ptr<_1aac0c865_Map> _1aac175ea_buildMap(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa101331_MapTypeDecl> _150928_decl);
inline jule::Ptr<_1aac0bcb5_Tuple> _1aac1793b_buildTuple(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa100044_TupleTypeDecl> _154130_decl);
inline jule::Bool _1aac17c7c_checkFuncTypes(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _155435_f);
inline jule::Ptr<_1aaa3e2ce_FnIns> _1aac180bd_buildFunc(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa959617_FnDecl> _157229_decl);
inline jule::Trait _1aac1840e_buildNamespace(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ee5b5_NamespaceTypeDecl> _160234_ns);
inline jule::Ptr<_1aabecdb6_Type> _1aac1d5ac_build(_1aac10ea6_typeChecker* _self_, jule::Any* _161826_declKind);
inline jule::Ptr<_1aabecdb6_Type> _1aac1d8ed_checkDecl(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ed817_TypeDecl>* _170130_decl);
inline jule::Bool static__1aac1e349_prim(jule::Str* _172818_ident, jule::Ptr<_1aac06bc2_Prim> _172830_t);
inline jule::Bool static__1aac1e6bd_exist(jule::Str* _173219_ident, jule::Ptr<_1aabecdb6_Type>* _173236_k);
inline void _1ab5ccbb3_stop(_1ab5cc50e_scopeParser* _self_);
inline jule::Bool _1ab5cce49_stopped(_1ab5cc50e_scopeParser* _self_);
inline jule::Bool _1ab5cd1d0_finished(_1ab5cc50e_scopeParser* _self_);
inline jule::Bool _1ab5cd466_isLastSt(_1ab5cc50e_scopeParser* _self_);
inline void _1ab5cd7c9_pushErr(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1aa0d7ceb_Token> _15423_token, jule::Str _15445_fmt);
inline void _1ab5cdb3c_pushSuggestion(_1ab5cc50e_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args);
inline void _1ab5cdde5_insertAsNext(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _16333_tokens);
inline jule::Ptr<_1ab5cbb6d_stmt> _1ab5ce17b_next(_1ab5cc50e_scopeParser* _self_);
inline jule::Ptr<_1aa957978_ScopeTree> _1ab5ce577_buildScope(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _17331_tokens, jule::Ptr<_1aa0d7ceb_Token> _17360_end);
inline jule::Ptr<_1aa95a7c2_VarDecl> _1ab5ce8b8_buildVarSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _18431_tokens);
inline jule::Ptr<_1aa95ab9b_RetSt> _1ab5cec09_buildRetSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _19230_tokens);
inline jule::Ptr<_1aa95b41b_Iter> _1ab5d004a_buildWhileNextIter(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1ab5cbb6d_stmt>* _20339_s);
inline jule::Ptr<_1aa95bc46_WhileKind> _1ab5d038b_buildWhileIterKind(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _24839_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _1ab5d06cc_getRangeKindKeysTokens(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _25443_toks);
inline jule::Ptr<_1aa95a7c2_VarDecl> _1ab5d0a1d_buildRangeKindKey(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _26038_tokens);
inline jule::Slice<jule::Ptr<_1aa95a7c2_VarDecl>> _1ab5d0d5e_buildRangeKindKeys(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>>* _28639_parts);
inline void _1ab5d11c2_setupRangeKindKeysPlain(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1aa95c64d_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _29471_tokens);
inline void _1ab5d1535_setupRangeKindKeysExplicit(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1aa95c64d_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _30974_tokens);
inline void _1ab5d1898_setupRangeKindKeys(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1aa95c64d_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _31866_tokens);
inline jule::Ptr<_1aa95c64d_RangeKind> _1ab5d1d4e_buildRangeIterKind(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _3278_exprTokens, jule::Ptr<_1aa0d7ceb_Token>* _32742_inToken);
inline jule::Any _1ab5d224a_buildCommonIterKind(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _34240_tokens, jule::Ptr<_1aa0d7ceb_Token>* _34266_errTok);
inline jule::Ptr<_1aa95b41b_Iter> _1ab5d258b_buildCommonIter(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _36935_tokens);
inline jule::Ptr<_1aa95b41b_Iter> _1ab5d28cc_buildIterSt(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1ab5cbb6d_stmt>* _39932_st);
inline jule::Ptr<_1aa95ca27_BreakSt> _1ab5d2c1d_buildBreakSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _40633_tokens);
inline jule::Ptr<_1aa95ce01_ContSt> _1ab5d305e_buildContSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _42432_tokens);
inline jule::Ptr<_1aa95d3a7_If> _1ab5d33a0_buildIf(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _44228_tokens);
inline jule::Ptr<_1aa95d781_Else> _1ab5d36e1_buildElse(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _47530_tokens);
inline jule::Ptr<_1aa95dc37_Conditional> _1ab5d3a32_buildIfElseChain(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _49936_tokens);
inline jule::Ptr<_1aa102b4b_Expr> _1ab5d3d73_buildCoCallSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _52233_tokens);
inline jule::Ptr<_1aa10b2c5_GotoSt> _1ab5d41b4_buildGotoSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _53832_tokens);
inline jule::Ptr<_1aa10b5c2_FallSt> _1ab5d4505_buildFallSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _55832_tokens);
inline jule::Ptr<_1aa95e551_TypeAliasDecl> _1ab5d4846_buildTypeAliasSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _56837_tokens);
inline void _1ab5d4d1e_pushCaseExpr(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _57432_tokens, jule::Ptr<_1aa0d7ceb_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1aa102b4b_Expr>>* _57525_exprs);
inline __jule_tuple_sx_1aa102b4b_Expr__jule_tuple_bool _1ab5d52c5_buildCaseExprs(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _59735_tokens, jule::Ptr<_1aa0d7ceb_Token>* _59765_colon, jule::Bool _59787_typeMatch);
inline jule::Ptr<_1aa957978_ScopeTree> _1ab5d5616_buildCaseScope(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _63935_tokens);
inline __jule_tuple_x_1aa95ea07_Case__jule_tuple_bool _1ab5d5a12_buildCase(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _66630_tokens, jule::Bool _66655_typeMatch);
inline __jule_tuple_sx_1aa95ea07_Case__jule_tuple_x_1aa95d781_Else _1ab5d5e0d_buildCases(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _68530_tokens, jule::Bool _68555_typeMatch);
inline jule::Ptr<_1aa960321_MatchCase> _1ab5d624e_buildMatchCase(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _71934_tokens);
inline jule::Ptr<_1aa957978_ScopeTree> _1ab5d6590_buildScopeSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _75232_tokens);
inline jule::Ptr<_1aa10adeb_LabelSt> _1ab5d68d1_buildLabelSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _79533_tokens);
inline __jule_tuple__1aa956ed8_StmtData__jule_tuple_bool _1ab5d6c22_buildIdSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _81030_tokens);
inline jule::Ptr<_1ab5e70ea_assignInfo> _1ab5d7063_buildAssignInfo(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _82436_tokens);
inline jule::Ptr<_1aa10bc32_AssignLeft> _1ab5d73a4_buildAssignL(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _86933_tokens);
inline jule::Slice<jule::Ptr<_1aa10bc32_AssignLeft>> _1ab5d76e5_buildAssignLs(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>>* _88034_parts);
inline __jule_tuple__1aa956ed8_StmtData__jule_tuple_bool _1ab5d7a36_buildPlainAssign(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _88937_tokens);
inline jule::Bool _1ab5d7e32_buildDeclAssign1(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _94337_lefts, jule::Ptr<_1aa10c2b5_AssignSt>* _94366_assign);
inline __jule_tuple_x_1aa10c2b5_AssignSt__jule_tuple_bool _1ab5d8273_buildDeclAssign(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _99135_tokens);
inline __jule_tuple__1aa956ed8_StmtData__jule_tuple_bool _1ab5d85b4_buildAssignSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _102534_tokens);
inline jule::Ptr<_1aa103520_UseExpr> _1ab5d8905_buildUseExpr(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _103833_tokens);
inline jule::Any _1ab5d8c46_buildConstSt(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1ab5cbb6d_stmt>* _105133_st);
inline jule::Any _1ab5d9087_buildSt(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1ab5cbb6d_stmt>* _107628_st);
inline void _1ab5d93ea_build(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _114026_tokens, jule::Ptr<_1aa957978_ScopeTree>* _114056_s);
inline void _1ab5da62c_pushErr(_1ab5d9e34_exprBuilder* _self_, jule::Ptr<_1aa0d7ceb_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args);
inline void _1ab5da990_pushSuggestion(_1ab5d9e34_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args);
inline jule::Ptr<_1aa103740_TupleExpr> _1ab5dacd1_buildTuple(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>>* _2331_parts);
inline jule::Ptr<_1aa103ad6_LitExpr> _1ab5db122_buildLit(_1ab5d9e34_exprBuilder* _self_, jule::Ptr<_1aa0d7ceb_Token> _3324_token);
inline jule::Any _1ab5db7a4_buildSingle(_1ab5d9e34_exprBuilder* _self_, jule::Ptr<_1aa0d7ceb_Token> _4431_token);
inline jule::Ptr<_1aa104466_IdentExpr> _1ab5dbae5_buildBindIdent(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _6135_tokens);
inline jule::Ptr<_1aa104c08_UnaryExpr> _1ab5dbe36_buildUnary(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _8030_tokens);
inline jule::Ptr<_1aa105c5e_SubIdentExpr> _1ab5dc277_buildObjSubIdent(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _10136_tokens);
inline jule::Ptr<_1aa105885_NamespaceExpr> _1ab5dc5b8_buildNamespace(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _11635_tokens);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab5dc909_buildType(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _15030_tokens);
inline jule::Any _1ab5dcc4a_buildSubIdent(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _16434_tokens);
inline jule::Ptr<_1aa1050d2_VariadicExpr> _1ab5dd08b_buildVariadic(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _18633_tokens);
inline jule::Ptr<_1aa102e15_RangeExpr> _1ab5dd3cc_buildBetweenParentheses(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _19543_tokens);
inline jule::Ptr<_1aa1054ab_CastExpr> _1ab5dd71d_tryBuildCast(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _20733_tokens);
inline jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _1ab5dda5e_buildArgs(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _28029_tokens);
inline jule::Ptr<_1aa106875_FnCallExpr> _1ab5de356_buildFnCall(_1ab5d9e34_exprBuilder* _self_, jule::Ptr<_1aa0d7ceb_Token>* _32232_token, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _32259_expr, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _32287_args);
inline jule::Any _1ab5de697_buildParenthesesRange(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _33042_tokens);
inline jule::Ptr<_1aa103eb0_UnsafeExpr> _1ab5de9d8_buildUnsafeExpr(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _35235_tokens);
inline jule::Ptr<_1aa959617_FnDecl> _1ab5ded29_buildAnonFn(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _36732_tokens);
inline jule::Any _1ab5e016a_buildUnsafe(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _37632_tokens);
inline void _1ab5e0588_pushRangeLitPart(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _38636_part, jule::Ptr<_1aa0d7ceb_Token> _3873_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>>* _38735_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _1ab5e08c9_getBraceRangeLitExprParts(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _39745_tokens);
inline jule::Ptr<_1aa10736a_FieldExprPair> _1ab5e0c1a_buildFieldExprPair(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _43938_tokens);
inline jule::Ptr<_1aa102b4b_Expr> _1ab5e105b_buildStructLitExpr(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _45239_tokens);
inline jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _1ab5e139c_buildStructLitExprs(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _46740_tokens);
inline jule::Ptr<_1aa107b95_StructLit> _1ab5e16dd_buildTypedStructLiteral(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _48043_tokens);
inline jule::Ptr<_1aa102b4b_Expr> _1ab5e1a2e_buildBraceLitPart(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _50438_tokens);
inline jule::Ptr<_1aa10814b_BraceLit> _1ab5e1d70_buildBraceLit(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _52134_tokens);
inline jule::Any _1ab5e21b1_buildBraceRange(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _54036_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _1ab5e2502_getEnumerableParts(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _59238_tokens);
inline jule::Ptr<_1aa1091a2_SliceExpr> _1ab5e2843_buildSlice(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _59930_tokens);
inline jule::Ptr<_1aa109b0e_IndexingExpr> _1ab5e2ce9_buildIndexing(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _62133_exprTokens, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _6227_tokens, jule::Ptr<_1aa0d7ceb_Token> _62236_errorToken);
inline jule::Ptr<_1aa10a26e_SlicingExpr> _1ab5e3415_buildSlicing(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _64533_exprTokens, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _64567_start, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _6468_to, jule::Ptr<_1aa0d7ceb_Token>* _64634_errorToken, jule::Ptr<_1aa0d7ceb_Token> _64665_end);
inline jule::Any _1ab5e3756_buildBracketRange(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _66137_tokens);
inline jule::Any _1ab5e3a97_buildExclRight(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _68635_tokens);
inline jule::Any _1ab5e3dd8_buildData(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _70430_tokens);
inline jule::Any _1ab5e42d4_buildBinary(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _77332_tokens, jule::I32 _77357_i);
inline jule::Any _1ab5e4625_build(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _79826_tokens);
inline jule::Any _1ab5e4966_buildKind(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _80930_tokens);
inline jule::Ptr<_1aa102b4b_Expr> _1ab5e4ca7_buildFromTokens(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _82035_tokens);
inline void _1ab5ea61a_stop(_1ab5ea2da_parser* _self_);
inline jule::Bool _1ab5ea8a1_stopped(_1ab5ea2da_parser* _self_);
inline void _1ab5eacbe_pushErr(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa0d7ceb_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args);
inline void _1ab5eb132_pushSuggestion(_1ab5ea2da_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args);
inline jule::Ptr<_1aa102b4b_Expr> _1ab5eb473_buildExpr(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _17831_tokens);
inline jule::Ptr<_1aa0ecc34_Directive> _1ab5eb7b4_buildDirective(_1ab5ea2da_parser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _18234_tokens);
inline void _1ab5eba6c_pushDirective(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa0ecc34_Directive> _19733_d);
inline jule::Ptr<_1aa957978_ScopeTree> _1ab5ebe68_buildScope(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _21032_tokens, jule::Ptr<_1aa0d7ceb_Token> _21061_end);
inline __jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool _1ab5ec41e__buildType(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _22039_tokens, jule::I32* _2217_i, jule::Bool _22116_err);
inline __jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool _1ab5ec8c5_buildType(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _23238_tokens, jule::I32* _2337_i, jule::Bool _23316_err);
inline jule::Ptr<_1aa95e551_TypeAliasDecl> _1ab5ecc16_buildTypeAliasDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _24240_tokens);
inline void _1ab5ed079_buildVarTypeAndExpr(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa95a7c2_VarDecl>* _28841_v, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _28864_tokens);
inline void _1ab5ed3dc_buildVarCommon(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa95a7c2_VarDecl>* _32136_v, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _32158_tokens);
inline void _1ab5ed750_buildVarBegin(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa95a7c2_VarDecl>* _33734_v, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _33757_tokens);
inline jule::Ptr<_1aa95a7c2_VarDecl> _1ab5eda91_buildVar(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _36529_tokens);
inline jule::Ptr<_1aa10aa22_GenericDecl> _1ab5eddd2_buildGeneric(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _38434_tokens);
inline jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>> _1ab5ee2cd_buildGenerics(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _42135_tokens, jule::Ptr<_1aa0d7ceb_Token>* _42161_errorToken);
inline jule::Ptr<_1aa9581b5_ParamDecl> _1ab5ee61e_buildSelfParam(_1ab5ea2da_parser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _44134_tokens);
inline void _1ab5eea3c_paramTypeBegin(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa9581b5_ParamDecl>* _48135_param, jule::I32* _48164_i, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _48173_tokens);
inline void _1ab5eeda0_buildParamType(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa9581b5_ParamDecl>* _49636_param, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _49665_tokens);
inline void _1ab600213_buildParamBody(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa9581b5_ParamDecl>* _50936_param, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _50964_tokens);
inline jule::Ptr<_1aa9581b5_ParamDecl> _1ab600554_buildParam(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _52931_tokens);
inline void _1ab60080c_checkParams(_1ab5ea2da_parser* _self_, jule::Slice<jule::Ptr<_1aa9581b5_ParamDecl>>* _57232_params);
inline jule::Slice<jule::Ptr<_1aa9581b5_ParamDecl>> _1ab600c08_buildParams(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _59233_tokens, jule::Bool _59258_method);
inline __jule_tuple_x_1aa10170a_RetTypeDecl__jule_tuple_bool _1ab601104_buildMultiRetType(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _62239_tokens, jule::I32* _62269_i);
inline __jule_tuple_x_1aa10170a_RetTypeDecl__jule_tuple_bool _1ab601500_buildRetType(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _69334_tokens, jule::I32* _69364_i);
inline jule::Ptr<_1aa959617_FnDecl> _1ab6019a6_buildFnPrototype(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _73238_tokens, jule::I32* _73268_i, jule::Bool _73276_method);
inline jule::Ptr<_1aa959617_FnDecl> _1ab601e5c_buildFn(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _80929_tokens, jule::Bool _80954_method, jule::Bool _80968_prototype);
inline void _1ab6022c0_buildBindUseDecl(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa9608a4_UseDecl>* _84337_decl, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _84363_tokens);
inline void _1ab602633_parseUseDecl(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa9608a4_UseDecl>* _85633_decl, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _85658_tokens);
inline jule::Ptr<_1aa9608a4_UseDecl> _1ab602a2e_buildUseDecl(_1ab5ea2da_parser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _88632_tokens, jule::Bool _88657_binded);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab602e2a_buildTypeEnumItemKind(jule::Ptr<_1ab5ea2da_parser> _self_, jule::I32* _90043_i, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _90056_tokens);
inline jule::Slice<jule::Ptr<_1aa962246_TypeEnumItemDecl>> _1ab60326b_buildTypeEnumItems(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _93740_tokens);
inline jule::Ptr<_1aa9628a6_TypeEnumDecl> _1ab6035ac_buildTypeEnumDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _96139_tokens);
inline jule::Ptr<_1aa102b4b_Expr> _1ab6039a8_buildEnumItemExpr(jule::Ptr<_1ab5ea2da_parser> _self_, jule::I32* _98839_i, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _98852_tokens);
inline jule::Slice<jule::Ptr<_1aa960d5a_EnumItemDecl>> _1ab603ce9_buildEnumItems(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _102036_tokens);
inline jule::Ptr<_1aa96191b_EnumDecl> _1ab60413a_buildEnumDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _105735_tokens);
inline jule::Any _1ab60447b_buildNodeEnumDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _110239_tokens);
inline jule::Ptr<_1aa962b70_FieldDecl> _1ab6047bc_buildField(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _111131_tokens);
inline jule::Slice<jule::Ptr<_1aa962b70_FieldDecl>> _1ab604b0d_buildStructDeclFields(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _116042_tokens);
inline jule::Ptr<_1aa963566_StructDecl> _1ab604e4e_buildStructDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _117137_tokens);
inline void _1ab605207_checkMethodReceiver(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa959617_FnDecl>* _121936_f);
inline void _1ab60556a_buildTraitBody(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa963ca3_TraitDecl>* _123836_t, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _123860_tokens);
inline jule::Ptr<_1aa963ca3_TraitDecl> _1ab6058ab_buildTraitDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _127036_tokens);
inline jule::Ptr<_1aa959617_FnDecl> _1ab605bec_buildBindFn(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _130032_tokens);
inline jule::Ptr<_1aa95a7c2_VarDecl> _1ab60603d_buildBindVar(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _131033_tokens);
inline jule::Ptr<_1aa963566_StructDecl> _1ab60637e_buildBindStruct(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _132336_tokens);
inline jule::Ptr<_1aa95e551_TypeAliasDecl> _1ab6066c0_buildBindTypeAlias(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _133739_tokens);
inline jule::Ptr<_1aa9608a4_UseDecl> _1ab606a11_buildBindUse(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _134733_tokens);
inline jule::Any _1ab606d52_buildBind(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _135831_tokens);
inline jule::Ptr<_1aa959617_FnDecl> _1ab607193_getMethod(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _138231_tokens);
inline void _1ab607506_parseImplBody(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa964413_Impl>* _141135_ipl, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _141157_tokens);
inline jule::Ptr<_1aa964413_Impl> _1ab607847_buildImpl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _144430_tokens);
inline jule::Any _1ab607b88_buildNodeData(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _151535_tokens);
inline void _1ab607e41_applyFnMeta(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa959617_FnDecl>* _154832_f);
inline void _1ab6081e9_applyMeta(_1ab5ea2da_parser* _self_, _1aa0ec816_Node* _155330_node);
inline void _1ab6084a2_pushUseDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa9608a4_UseDecl>* _157833_decl);
inline jule::Bool _1ab6087e3_pushMetaNodes(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _158635_tokens);
inline _1aa0ec816_Node _1ab608b34_parseNode(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _160631_st);
inline void _1ab608ddc_appendNode(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _163032_st);
inline void _1ab6093b5_removeRange(_1ab5ea2da_parser* _self_, jule::I32 _164027_i, jule::U32 _164035_id, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _164051_tokens, jule::Slice<jule::I32>* _164081_ranges);
inline void _1ab6097d3_pushWrongOrderCloseErr(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa0d7ceb_Token>* _165239_t, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _165258_tokens, jule::Slice<jule::I32>* _165284_ranges);
inline void _1ab609cab_pushRangeClose(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa0d7ceb_Token> _166330_t, jule::U32 _166348_left, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _166366_tokens, jule::Slice<jule::I32>* _166396_ranges);
inline void _1ab60a064_checkRanges(_1ab5ea2da_parser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _168128_tokens);
inline void _1ab60a31c_parse(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa0dd8a1_Fileset>* _171227_f);
inline void _1ab60ba6b_pushErr(_1ab60b494_typeBuilder* _self_, jule::Ptr<_1aa0d7ceb_Token> _3123_token, jule::Str _3145_fmt);
inline void _1ab60bdce_pushSuggestion(_1ab60b494_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60c165_buildNamespace(_1ab60b494_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> _1ab60c3eb_buildGenerics(_1ab60b494_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _1ab60c682_identGenerics(_1ab60b494_typeBuilder* _self_);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60c918_buildIdent(_1ab60b494_typeBuilder* _self_);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60cb9e_buildCppLink(_1ab60b494_typeBuilder* _self_);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60ce35_buildFn(_1ab60b494_typeBuilder* _self_);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60d1bb_buildPtr(_1ab60b494_typeBuilder* _self_);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60d452_buildSptr(_1ab60b494_typeBuilder* _self_);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60d6d8_buildSlc(_1ab60b494_typeBuilder* _self_);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60d96e_buildArr(_1ab60b494_typeBuilder* _self_);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60dc05_buildMap(_1ab60b494_typeBuilder* _self_);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60de8b_buildEnumerable(_1ab60b494_typeBuilder* _self_);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60e222_step(_1ab60b494_typeBuilder* _self_);
inline __jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool _1ab60e4a8_build(_1ab60b494_typeBuilder* _self_);
inline void _1aa81468c_pushErr(_1aa814109_directiveEval* _self_, jule::Ptr<_1aa0d7ceb_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _1aa814a88_splitOperans(_1aa814109_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _3348_tokens);
inline jule::Bool _1aa814dc9_evalDirectiveIdent(_1aa814109_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1aa81521a_evalDirectivePart(_1aa814109_directiveEval* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _7037_part);
inline jule::Bool _1aa8154a1_eval(_1aa814109_directiveEval* _self_);
inline jule::Bool _1aa811931_isPassFileAnnotation(_1ab6106da_Importer* _self_, jule::Str _5136_p);
inline jule::Ptr<_1ab6106da_Importer> static__1ab610b19_New(_1aa8128bb_CompileInfo _4516_info);
inline jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>> _1ab610da0_AllPackages(_1ab6106da_Importer* _self_);
inline void _1ab6112e0_SetModPath(_1ab6106da_Importer* _self_, jule::Str _6226_path);
inline jule::Str _1ab611576_GetModPath(_1ab6106da_Importer* _self_);
inline jule::Str _1ab6118b7_ModById(_1ab6106da_Importer* _self_, jule::I32 _7019_id);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1ab611c08_GetImport(_1ab6106da_Importer* _self_, jule::Str _7425_path);
inline __jule_tuple_sx_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log _1ab612104_ImportPackage(_1ab6106da_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod);
inline void _1ab6123ac_Imported(_1ab6106da_Importer* _self_, jule::Ptr<_1aab2ee08_ImportInfo> _14128_imp);
inline __jule_tuple_bool__jule_tuple_s_1ace263b7_Log _1ab6127db_isPassBuildDirectives(_1ab6106da_Importer* _self_, jule::Ptr<_1aa0eb8ae_AST>* _16842_file);
inline jule::Ptr<_1ab616a21_ExprInspector> static__1ab616d62_New(void);
inline void _1ab61711a_args(_1ab616a21_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args);
inline void _1ab6173c3_InspectStep(_1ab616a21_ExprInspector* _self_, jule::Any* _3339_m);
inline void _1ab61767b_inspect(_1ab616a21_ExprInspector* _self_, jule::Any* _3728_m);
inline void _1ab6179de_Inspect(_1ab616a21_ExprInspector* _self_, jule::Any* _16128_m, jule::Fn<void,jule::Any*> _16143_f);
inline jule::Ptr<_1ab620d8d_Meta> static__1ab621267_Collect(jule::Ptr<_1ab61326a_IR> _7124_ir);
inline jule::Ptr<_1ab61ecb0_MetaRuntime> static__1ab621531_CollectRuntime(jule::Ptr<_1ab61326a_IR>* _8032_ir);
inline jule::Ptr<_1ab61e0de_MetaStrBuilder> static__1ab6217ea_CollectStrBuilder(jule::Ptr<_1ab61326a_IR>* _10635_ir);
inline jule::Ptr<_1ab620783_MetaMathCmplx> static__1ab621ab4_CollectMathCmplx(jule::Ptr<_1ab61326a_IR>* _12334_ir);
inline jule::Ptr<_1ac7acec4_ObjectDeadCode> static__1ac7ad4be_new(jule::Ptr<_1ab61326a_IR>* _2521_ir);
inline jule::Bool _1be77707a_isLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aa969605_StructIns>* _3127_t);
inline jule::Bool _1be77d900_isLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _3127_t);
inline jule::Bool _1be788bd5_isLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aaa46935_Trait>* _3127_t);
inline jule::Bool _1be79399d_isLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aab70795_Var>* _3127_t);
inline void _1be779489_pushLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aa969605_StructIns> _5132_t);
inline void _1be77e99a_pushLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _5132_t);
inline void _1be78a995_pushLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aaa46935_Trait> _5132_t);
inline void _1be796c04_pushLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aab70795_Var> _5132_t);
inline void _1ac7add71_pushStructAsLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aa969605_StructIns>* _6438_s);
inline void _1ac7ae129_setReferencesAsLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aab1cd80_ReferenceStack>* _10841_rs);
inline void _1ac7ae3d2_inits(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aab3267a_Package>* _15827_pkg);
inline void _1ac7ae68a_collectLivePackage(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aab3267a_Package>* _17240_pkg);
inline void _1ac7ae888_collectLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_);
inline void _1ac7aeb41_removeDeadGlobals(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aab70795_Var>>* _24839_vars);
inline void _1ac7aede9_removeDeadFns(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aaa3b221_Fn>>* _26035_funcs);
inline void _1ac7b01a2_removeDeadStructs(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa966767_Struct>>* _28139_structs);
inline void _1ac7b045a_removeDeadTraits(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aaa46935_Trait>>* _30338_traits);
inline void _1ac7b0713_removeDeadStrictTypeAliases(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>* _32449_aliases);
inline void _1ac7b09bb_removeDeadsFile(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aaa42524_SymTab>* _34937_file);
inline void _1ac7b0c74_removeDeadsPackage(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aab3267a_Package>* _35740_pkg);
inline void _1ac7b0e72_removeDeads(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_);
inline void _1ac7b1170_elimanate(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_);
inline void _1ac7b28d0_optimizeChild(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaec832_Scope>* _1935_s);
inline void _1ac7b2b88_optimizeBodyChildExceptional(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaec832_Scope>* _2950_s);
inline void _1ac7b2e41_optimizeBodyChild(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaec832_Scope>* _3939_s);
inline void _1ac7b31e9_optimizeExpr(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Any* _4834_model);
inline void _1ac7b33e7_eliminateFollowed(_1ac7b23b3_scopeDeadCode* _self_);
inline void _1ac7b36a0_pushGoto(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aab0099a_GotoSt> _6929_gt);
inline void _1ac7b3958_pushLabel(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aab0033a_Label> _7930_l);
inline void _1ac7b3c11_optimizeRangeIter(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaee6ad_RangeIter> _9238_it);
inline void _1ac7b3eb9_optimizeWhileIter(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaedbc9_WhileIter> _9738_it);
inline void _1ac7b4272_optimizeInfIter(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaed723_InfIter> _10536_it);
inline void _1ac7b452a_optimizeConditional(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaed426_Conditional> _10940_c);
inline void _1ac7b47d3_optimizeMatch(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aab0232b_Match> _12734_m);
inline void _1ac7b4a8b_optimizeAssign(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aab0132a_Assign> _14535_assign);
inline void _1ac7b4d44_optimizeMultiAssign(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aab018ad_MultiAssign> _15040_assign);
inline void _1ac7b50ec_optimizeStmt(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Any _15933_st);
inline void _1ac7b52ea_optimizeStmts(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_);
inline _1ac7b694a_exprDeadCode static__1ac7b6d68_new(jule::Ptr<_1ac7b23b3_scopeDeadCode>* _1421_s);
inline void _1ac7b7121_optimize(_1ac7b694a_exprDeadCode* _self_, jule::Any* _2025_model);
inline void _1ac3d9c77_pushVar(_1ac3d97d2_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe);
inline jule::Bool _1ac3da0b8_removeVar(_1ac3d97d2_nils* _self_, jule::Uintptr _4825_var);
inline jule::Bool _1ac3da409_isSafe(_1ac3d97d2_nils* _self_, jule::Uintptr _6322_var);
inline jule::Ptr<_1ac67bd4e_scopeOptimizer> static__1ac67c448_new(jule::Ptr<_1aaaec832_Scope> _2420_scope);
inline void _1ac67c701_setCurrentStmt(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Any _3635_stmt);
inline void _1ac67c8ee_removeCurrent(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_);
inline jule::Bool _1ac67cb85_isLastStmt(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_);
inline jule::Bool _1ac67ce1b_isIter(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_);
inline void _1ac67d1c4_optimizeData(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aabb8db5_Data> _6833_d);
inline void _1ac67d47c_optimizeVar(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab70795_Var> _8732_v);
inline void _1ac67d735_optimizeConditional(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aaaed426_Conditional> _10840_c);
inline void _1ac67db53_buildDefaultConstantTrueCase(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab02b23_Case> _19149_case, jule::I32* _19173_i, jule::Ptr<_1aab0232b_Match>* _19186_m);
inline void _1ac67de0b_optimizeMatch(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab0232b_Match> _21734_m);
inline void _1ac67e1b4_optimizeRangeIter(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aaaee6ad_RangeIter> _30938_it);
inline void _1ac67e46c_optimizeWhileIter(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aaaedbc9_WhileIter> _36638_it);
inline jule::Bool _1ac67e7ad_substr(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab0132a_Assign> _37227_a);
inline jule::Bool _1ac67eaee_strAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab0132a_Assign> _39230_a);
inline jule::Bool _1ac67ee40_sliceAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab0132a_Assign> _40332_a);
inline void _1ac6801e8_optimizePostfix(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab00d74_Postfix> _41136_postfix);
inline jule::Bool _1ac680539_cmplxAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab0132a_Assign>* _41833_assign);
inline void _1ac6807e2_optimizeAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab0132a_Assign> _46035_assign);
inline void _1ac680b55_normalizeAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _59437_assign, jule::Ptr<_1aaa345e3_TupleExpr>* _59470_tup);
inline jule::Bool _1ac681051_tryOptimizeSwap(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _66737_assign, jule::Ptr<_1aaa345e3_TupleExpr>* _66770_tup);
inline void _1ac6813b4_splitAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _68933_assign, jule::Ptr<_1aaa345e3_TupleExpr>* _68966_tup);
inline void _1ac68166c_optimizeMultiAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab018ad_MultiAssign> _77040_assign);
inline void _1ac681925_optimizeRet(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab036b2_RetSt> _89332_r);
inline void _1ac681bcd_optimizeStmt(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Any _91733_stmt);
inline void _1ac681e86_optimizeChild(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aaaec832_Scope> _94734_child);
inline void _1ac68223e_optimizeChildHard(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aaaec832_Scope> _98338_child);
inline void _1ac68243c_optimize(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_);
inline void static__1ac684cad_optimize(jule::Any* _2326_model);
inline jule::Ptr<_1ac68474c_exprOptimizer> static__1ac6851dc_new(jule::Any* _2721_model, jule::Ptr<_1ac690071_data>* _2745_d, jule::Ptr<_1ac67bd4e_scopeOptimizer> _2759_s);
inline void static__1ac685583_optimizeData(jule::Any* _3630_model, jule::Ptr<_1ac690071_data>* _3654_d, jule::Ptr<_1ac67bd4e_scopeOptimizer> _3668_s);
inline void static__1ac685929_optimizeConditionalData(jule::Any* _4741_model, jule::Ptr<_1ac690071_data>* _4765_d, jule::Ptr<_1ac67bd4e_scopeOptimizer> _4779_s);
inline jule::Bool _1ac685c6a_selfCmpCond(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _10128_m);
inline jule::Bool _1ac6860ab_boolCond(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _13025_m);
inline jule::Bool _1ac6863ec_arrayCond(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr> _18325_m);
inline void _1ac6866a5_strConv(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2dad7_OperandExpr>* _19824_m);
inline jule::Bool _1ac6869e6_strCond(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _22324_m);
inline jule::Bool _1ac686d37_strConcat(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _28126_m);
inline jule::Bool _1ac6872dd_tryNeutralElement1(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _34535_m, jule::Ptr<_1aa9b96cc_Const> _34561_c, jule::Ptr<_1aaa2dad7_OperandExpr>* _34587_nc);
inline jule::Bool _1ac68762e_tryNeutralElement(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _39534_m);
inline void _1ac6878d7_checkBinaryForBoundary(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _41039_m);
inline void _1ac687b90_checkBinaryForNil(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _46234_m);
inline void _1ac687e48_shift(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr> _49621_m);
inline jule::Bool _1ac688289_binaryMath(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _51627_m);
inline void _1ac688542_binaryStrCommon(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _62432_m);
inline void _1ac6887ea_binary(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr> _62922_m);
inline void _1ac688aa3_unary(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e4ab_UnaryExpr> _70621_m);
inline void _1ac688d5b_structureLit(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2ed80_StructLitExpr> _74528_m);
inline void _1ac689114_casting(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa30633_CastingExpr> _76123_m);
inline void _1ac689477_args(_1ac68474c_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>> _77520_params, jule::Slice<jule::Any>* _77552_args);
inline void _1ac6897da_scope(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaaec832_Scope>* _80022_s, jule::Bool _80039_child);
inline void _1ac689a93_optimizeStrBuilderCall(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa30ed5_FnCallExpr>* _81639_m);
inline void _1ac689d4b_lenCall(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa3611c_BuiltinLenCallExpr> _83123_m);
inline void _1ac68a104_funcCall(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa30ed5_FnCallExpr> _87424_m);
inline void _1ac68a3ac_indexing(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa31865_IndexingExpr> _88824_m);
inline void _1ac68a665_anonFunc(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa31d1b_AnonFnExpr> _91224_m);
inline void _1ac68a91d_inspectStep(_1ac68474c_exprOptimizer* _self_, jule::Any* _92128_m);
inline void _1ac68ab1b_do(_1ac68474c_exprOptimizer* _self_);
inline void _1ac68c8dc_pushVar(jule::Ptr<_1ac68c447_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1aabecdb6_Type> _2442_kind);
inline jule::Bool _1ac68cc2d_removeVar(_1ac68c447_dynamic* _self_, jule::Uintptr _4925_var);
inline jule::Bool _1ac68d129_isFits(_1ac68c447_dynamic* _self_, jule::Uintptr _6422_var, jule::Ptr<_1aabecdb6_Type> _6436_kind);
inline void _1ac690857_removeDeads(_1ac690071_data* _self_, jule::Ptr<_1ac690071_data>* _4228_other);
inline _1ac68ea76_dataCheckpoint _1ac690add_getCheckpoint(_1ac690071_data* _self_);
inline _1ac68ea76_dataCheckpoint _1ac690d74_getMutCheckpoint(_1ac690071_data* _self_);
inline void _1ac69112c_loadCheckpoint(_1ac690071_data* _self_, _1ac68ea76_dataCheckpoint _8534_c);
inline void _1ac6927c1_pushVar(_1ac69232b_boundary* _self_, jule::Uintptr _2523_var, jule::Any _2541_maxSize);
inline jule::Bool _1ac692b12_removeVar(_1ac69232b_boundary* _self_, jule::Uintptr _5825_var);
inline jule::Bool _1ac69300d_fitsMaxSize(_1ac69232b_boundary* _self_, jule::Uintptr _7227_var, jule::Any _7241_expr);
inline jule::Ptr<_1ac7b7a6c_Optimizer> static__1ac7b8034_New(jule::Ptr<_1ab61326a_IR>* _2121_ir);
inline void _1ac7b82dc_optimizeExpr(_1ac7b7a6c_Optimizer* _self_, jule::Any* _2733_model);
inline void _1ac7b8595_optimizeGlobal(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aab70795_Var>* _3135_v);
inline void _1ac7b884d_optimizeFunction(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aaa3b221_Fn>* _3737_func);
inline void _1ac7b8b06_optimizeStruct(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aa966767_Struct> _4734_s);
inline void _1ac7b8dae_optimizeGlobals(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aab3267a_Package>* _6336_p);
inline void _1ac7b9167_optimizeFunctions(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aab3267a_Package>* _7138_p);
inline void _1ac7b9420_optimizeStructs(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aab3267a_Package>* _7936_p);
inline void _1ac7b96c8_optimizePackage(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aab3267a_Package>* _9236_p);
inline void _1ac7b98c6_Optimize(_1ac7b7a6c_Optimizer* _self_);
inline _1ac887bd6_Time static__1ac8880c1_Unix(jule::U64 _9117_sec);
inline _1ac887bd6_Time static__1ac8882d0_Now(void);
inline _1ac887510_AbsTime _1ac8899b8_Abs(_1ac887bd6_Time* _self_);
inline jule::Ptr<_1ac7bba4e_scopeCoder> static__1ac7bc236_new(jule::Ptr<_1ac894d58_ObjectCoder>* _3721_oc);
inline void _1bebd6154_iterHead(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaee6ad_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin);
inline void _1ac7bc90c_rangeIndexIter(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaee6ad_RangeIter>* _9336_it);
inline void _1ac7bcbb5_rangeHashmapIter(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaee6ad_RangeIter>* _16038_it);
inline void _1ac7bce6d_strRuneIter(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1ac3d810a_StrRuneIter> _24132_it);
inline void _1ac7bd226_ifCase(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaecc0b_If> _35327_i);
inline void _1ac7bd4ce_conditional(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaed426_Conditional> _36232_c);
inline void _1ac7bd787_infIter(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaed723_InfIter> _38228_it);
inline void _1ac7bda40_whileIter(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaedbc9_WhileIter> _39930_it);
inline void _1ac7bdce8_rangeIter(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaee6ad_RangeIter> _43830_it);
inline void _1ac7be0a1_cont(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaee9aa_ContSt> _45121_c);
inline void _1ac7be359_label(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0033a_Label> _45622_l);
inline void _1ac7be612_gotoSt(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0099a_GotoSt> _46123_gt);
inline void _1ac7be8ba_postfix(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab00d74_Postfix> _46628_p);
inline void _1ac7beb73_assignLeft(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Any* _47332_model);
inline void _1ac7bee2b_shl(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0132a_Assign> _50424_a);
inline void _1ac7c01d4_shr(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0132a_Assign> _51024_a);
inline void _1ac7c048c_divByZeroAssign(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0132a_Assign> _51636_a);
inline void _1ac7c0745_assign(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0132a_Assign> _52227_a);
inline void _1ac7c09ed_mapLookupAssign(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _55337_a);
inline void _1ac7c0ca6_multiAssignTup(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _58536_a);
inline void _1ac7c105e_multiAssignFn(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _65535_a);
inline void _1ac7c1317_multiAssign(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab018ad_MultiAssign> _71432_a);
inline jule::Fn<void> _1ac7c1658_matchExpr(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0232b_Match> _74030_m);
inline void _1ac7c19bb_case(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0232b_Match> _75025_m, jule::Ptr<_1aab02b23_Case> _75046_c);
inline void _1ac7c1c74_matchSt(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0232b_Match> _82028_m);
inline void _1ac7c202c_fallSt(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0331b_FallSt> _87523_f);
inline void _1ac7c22d5_breakSt(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaeed84_BreakSt> _88024_b);
inline void _1ac7c258d_setResult(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab036b2_RetSt> _88930_r);
inline void _1ac7c2846_retSt(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab036b2_RetSt> _91726_r);
inline void _1ac7c2aee_var(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab70795_Var> _95324_v);
inline void _1ac7c2da7_mutSlicing(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1ac3d6d84_MutSlicingExpr> _95931_m);
inline void _1ac7c3160_swap(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1ac3d5adb_SwapExpr> _97625_m);
inline void _1ac7c3418_exceptionalForwarding(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1ac3d513a_ExceptionalForwardingExpr> _98442_m);
inline void _1ac7c36c1_st(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Any _99023_st);
inline void _1ac7c3979_scopeStmts(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaec832_Scope>* _104632_s);
inline void _1ac7c3c32_scope(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaec832_Scope> _105526_s);
inline void _1ac7c3eda_commonFuncScope(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _107037_f);
inline void _1ac7c434d_anonFuncScope(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaa31d1b_AnonFnExpr> _111034_m, jule::Str _111056_ident);
inline void _1ac7c4606_funcScope(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _114230_f);
inline jule::Ptr<_1ac7c7b04_exprCoder> static__1ac7c8000_new(jule::Ptr<_1ac894d58_ObjectCoder>* _5021_oc);
inline void _1ac7c82a8_string(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa9b96cc_Const>* _5624_c);
inline void _1ac7c8561_boolean(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Bool _7124_b);
inline void _1ac7c875e_nilLit(jule::Ptr<_1ac7c7b04_exprCoder> _self_);
inline jule::Bool _1ac7c8aa0_ftoaSpecialCases(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::F64* _8334_x);
inline void _1ac7c8d58_float32(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa9b96cc_Const>* _9725_c);
inline void _1ac7c9111_float64(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa9b96cc_Const>* _11625_c);
inline void _1ac7c93b9_constant(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa9b96cc_Const> _13429_c);
inline void _1ac7c97d7_divByZeroBinary(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa0d7ceb_Token>* _15833_op, jule::Ptr<_1aaa2dad7_OperandExpr>* _15857_l, jule::Ptr<_1aaa2dad7_OperandExpr>* _15885_r);
inline void _1ac7c9ed0__unsafeBinary(jule::Ptr<_1ac7c7b04_exprCoder> _self_, _1ace17078_Builder* _19735_buf, jule::Str* _19759_l, jule::Str* _19768_r, jule::Ptr<_1aabecdb6_Type>* _1988_lk, jule::Ptr<_1aabecdb6_Type>* _19830_rk, jule::U32 _19847_op, jule::Str _19862_kind);
inline void _1ac7ca288_unsafeBinary(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr> _26633_m);
inline void _1ac7ca5eb_shl(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa2dad7_OperandExpr>* _27825_l, jule::Ptr<_1aaa2dad7_OperandExpr>* _27853_r);
inline void _1ac7ca95e_shr(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa2dad7_OperandExpr>* _30625_l, jule::Ptr<_1aaa2dad7_OperandExpr>* _30653_r);
inline void _1ac7cac17_binary(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr> _33427_m);
inline void _1ac7caec0_var(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aab70795_Var> _35124_m);
inline void _1ac7cb278_structureIns(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa969605_StructIns> _36733_m);
inline void _1ac7cb531_unary(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa2e4ab_UnaryExpr> _37126_m);
inline void _1ac7cb7d9_structureLit(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa2ed80_StructLitExpr> _39533_m);
inline void _1ac7cba92_allocStructure(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa3017c_AllocStructLitExpr> _43935_m);
inline void _1ac7cbd4a_possibleRefExpr(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Any _44732_expr);
inline void _1ac7cc268_castTraitFromTrait(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30633_CastingExpr>* _46140_m, jule::Ptr<_1aaa46935_Trait> _46167_t1, jule::Ptr<_1aaa46935_Trait> _46189_t2);
inline void _1ac7cc521_casting(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30633_CastingExpr> _47428_m);
inline void _1ac7cc7c9_args(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30ed5_FnCallExpr>* _62626_m);
inline void _1ac7cca82_modelForCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Any _65733_expr);
inline void _1ac7ccd3a_pushCallInf(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30ed5_FnCallExpr>* _67229_m);
inline jule::Bool _1ac7cd17b_isWrapped(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30ed5_FnCallExpr>* _69531_m);
inline jule::Bool _1ac7cd4bc_writeReceiver(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Any _72434_m);
inline void _1ac7cd775_pureFuncCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30ed5_FnCallExpr>* _73834_m);
inline void _1ac7cda2d_coFuncCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30ed5_FnCallExpr>* _83232_m);
inline void _1ac7cdd91_writeUseExpr(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _91034_f, jule::Ptr<_1aabb8db5_Data> _91055_d);
inline void _1ac7ce204_funcCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30ed5_FnCallExpr> _93129_m, jule::Bool _93151_ignoreExceptional);
inline void _1ac7ce4ac_slice(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa313ae_SliceExpr> _101426_m);
inline void _1ac7ce765_indexing(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa31865_IndexingExpr> _104329_m);
inline void _1ac7cea1d_unsafeIndexing(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d747d_UnsafeIndexingExpr> _109435_m);
inline void _1ac7cecc6_anonFunc(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa31d1b_AnonFnExpr> _111129_m);
inline void _1ac7d007e_mapExpr(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa325be_MapExpr> _114228_m);
inline void _1ac7d0337_slicing(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa32b52_SlicingExpr> _117728_m);
inline void _1ac7d05e0_traitSub(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa331d5_TraitSubIdentExpr> _119329_m);
inline void _1ac7d0898_structureSub(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa33a76_StructSubIdentExpr> _120933_m);
inline void _1ac7d0b51_array(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa342e6_ArrayExpr> _121826_m);
inline void _1ac7d0e09_funcInsCommon(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _126834_m);
inline void _1ac7d11b2_funcIns(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _127528_m);
inline void _1ac7d146a_tuple(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa345e3_TupleExpr> _128626_m);
inline void _1ac7d1723_newCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa350b6_BuiltinNewCallExpr> _129728_m);
inline void _1ac7d19cb_printCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa348e0_BuiltinPrintCallExpr> _130930_m);
inline void _1ac7d1c84_printlnCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa34bdc_BuiltinPrintlnCallExpr> _131832_m);
inline void _1ac7d203c_panicCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa35490_BuiltinPanicCallExpr> _132730_m);
inline void _1ac7d22e5_errorCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa37096_BuiltinErrorCallExpr> _133530_m);
inline void _1ac7d259d_copyCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa36bbc_BuiltinCopyCallExpr> _136729_m);
inline void _1ac7d2856_lenCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa3611c_BuiltinLenCallExpr> _137528_m);
inline void _1ac7d2b0e_capCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa36419_BuiltinCapCallExpr> _139128_m);
inline void _1ac7d2db7_deleteCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa367e3_BuiltinDeleteCallExpr> _139631_m);
inline void _1ac7d3170_makeCallSlice(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa35946_BuiltinMakeCallExpr>* _142035_m);
inline void _1ac7d3428_makeCallStr(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa35946_BuiltinMakeCallExpr>* _144433_m);
inline void _1ac7d36d1_makeCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa35946_BuiltinMakeCallExpr> _145529_m);
inline void _1ac7d3989_pushToSlice(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d7857_PushToSliceExpr> _146332_m);
inline void _1ac7d3c42_appendToSlice(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d7c31_AppendToSliceExpr> _152334_m);
inline void _1ac7d3eea_appendCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa35d20_BuiltinAppendCallExpr> _153131_m);
inline void _1ac7d42a3_sizeof(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa37393_SizeofExpr> _153927_m);
inline void _1ac7d455b_alignof(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa37a47_AlignofExpr> _154528_m);
inline void _1ac7d4814_runeLit(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa37c34_RuneExpr> _155124_m);
inline void _1ac7d4abc_structureStatic(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa33e1c_StructStaticIdentExpr> _156536_m);
inline void _1ac7d4d75_backendEmit(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa380a8_BackendEmitExpr> _156932_m);
inline void _1ac7d512d_free(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa383a5_FreeExpr> _158525_m);
inline void _1ac7d53d6_strComp(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d6801_StrCompExpr> _159428_m);
inline void _1ac7d568e_emptyCompare(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d5eb5_EmptyCompareExpr> _161033_m);
inline void _1ac7d5947_unsafeDeref(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d8407_UnsafeDerefExpr> _161932_m);
inline void _1ac7d5c00_unsafeCasting(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d8935_UnsafeCastingExpr> _163034_m);
inline void _1ac7d5ea8_strConcat(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d5745_StrConcatExpr> _164730_m);
inline void _1ac7d6261_strFromBytes(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d4d60_StrFromBytes> _166933_m);
inline void _1ac7d6519_model(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Any _167526_m);
inline jule::Bool _1ac7d685a_handleFieldByDefault(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa9689cd_FieldIns>* _178142_f);
inline void _1ac7d6b13_initStructLit(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa969605_StructIns>* _180235_s);
inline void _1ac7d6dbb_fillCollectionByDefault(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aabecdb6_Type>* _182445_elem);
inline void _1ac7d7174_initCollection(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aabecdb6_Type>* _183936_elem);
inline void _1ac7d742c_initArray(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aac0d4e2_Arr>* _185331_arr);
inline void _1ac7d76d5_initExpr(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aabecdb6_Type> _186729_t);
inline jule::Ptr<_1ac7da2cb_TestCoder> static__1ac7da782_New(jule::Ptr<_1ac894d58_ObjectCoder>* _2021_oc);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1ac7daa18_findTestingPackage(jule::Ptr<_1ac7da2cb_TestCoder> _self_);
inline void _1ac7dacc1_appendTest(jule::Ptr<_1ac7da2cb_TestCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _3531_f);
inline void _1ac7db079_appendPackageTests(jule::Ptr<_1ac7da2cb_TestCoder> _self_, jule::Ptr<_1aab3267a_Package>* _5040_p);
inline jule::Bool _1ac7db310_readyTestingPackage(jule::Ptr<_1ac7da2cb_TestCoder> _self_);
inline void _1ac7db50d_callTmReset(jule::Ptr<_1ac7da2cb_TestCoder> _self_);
inline void _1ac7db70b_callTmFailed(jule::Ptr<_1ac7da2cb_TestCoder> _self_);
inline void _1ac7db909_callTmSkipped(jule::Ptr<_1ac7da2cb_TestCoder> _self_);
inline void _1ac7dbb07_Serialize(jule::Ptr<_1ac7da2cb_TestCoder> _self_);
inline void static__1ac7dd466_writeIdentTo(_1ace17078_Builder* _2630_buf, jule::Str* _2654_ident);
inline void static__1ac7dd80c_toOut(_1ace17078_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr);
inline void static__1ac7ddc5d_toLocal(_1ace17078_Builder* _6925_buf, jule::I32 _6948_row, jule::I32 _6958_col, jule::Str* _6969_ident);
inline void static__1ac7de049_func(_1ace17078_Builder* _7722_buf, jule::Ptr<_1aaa3b221_Fn>* _7750_f);
inline void static__1ac7de335_funcIns(_1ace17078_Builder* _9525_buf, jule::Ptr<_1aaa3e2ce_FnIns>* _9553_f);
inline void static__1ac7de621_traitDecl(_1ace17078_Builder* _11027_buf, jule::Ptr<_1aaa46935_Trait> _11050_t);
inline void static__1ac7de90c_param(_1ace17078_Builder* _11423_buf, jule::Ptr<_1aaa3974c_Param>* _11447_p);
inline void static__1ac7debe8_structure(_1ace17078_Builder* _12927_buf, jule::Ptr<_1aa966767_Struct>* _12951_s);
inline void static__1ac7deed4_structureIns(_1ace17078_Builder* _14030_buf, jule::Ptr<_1aa969605_StructIns>* _14054_s);
inline void static__1ac7e02c0_field(_1ace17078_Builder* _14823_buf, jule::Ptr<_1aa965447_Field>* _14847_f);
inline void static__1ac7e05ab_var(_1ace17078_Builder* _15821_buf, jule::Ptr<_1aab70795_Var> _15848_v);
inline void static__1ac7e0897_iterBegin(_1ace17078_Builder* _18527_buf, jule::Uintptr _18550_it);
inline void static__1ac7e0b83_iterEnd(_1ace17078_Builder* _19025_buf, jule::Uintptr _19048_it);
inline void static__1ac7e0e6e_iterNext(_1ace17078_Builder* _19526_buf, jule::Uintptr _19549_it);
inline void static__1ac7e125a_label(_1ace17078_Builder* _20023_buf, jule::Uintptr _20046_u);
inline void static__1ac7e1546_matchEnd(_1ace17078_Builder* _20526_buf, jule::Uintptr _20549_m);
inline void static__1ac7e1832_caseBegin(_1ace17078_Builder* _21027_buf, jule::Uintptr _21050_c);
inline jule::Ptr<_1ac894d58_ObjectCoder> static__1ac8952ba_New(jule::Ptr<_1ab61326a_IR>* _11921_ir, _1ac8925a3_SerializationInfo _11935_info);
inline void _1ac895573_write(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Str _13222_s);
inline void _1ac89582b_writeBytes(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Slice<jule::U8> _13627_b);
inline void _1ac895a29_addIndent(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac895c27_doneIndent(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac895e25_indent(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline jule::I32 _1ac896266_findAnyType(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aabecdb6_Type>* _15533_t);
inline jule::I32 _1ac8965a7_pushCoSpawn(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _16432_f);
inline jule::I32 _1ac8968e8_pushDealloc(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aabecdb6_Type> _26732_t);
inline jule::Str _1ac896c39_pushAnonFn(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa31d1b_AnonFnExpr>* _28332_m);
inline jule::I32 _1ac89707a_pushAnyType(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aabecdb6_Type> _32532_t);
inline void _1ac897333_pushResultIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _42535_f);
inline void _1ac8975db_pushResult(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3b221_Fn>* _44632_f);
inline void _1ac89794e_pushAndWriteMaskMapper(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa46935_Trait> _45943_t1, jule::Ptr<_1aaa46935_Trait> _45965_t2);
inline void _1ac897c07_locInfo(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa0d7ceb_Token>* _51025_t);
inline void _1ac897e05_head(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac8981ad_links(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Bool _57722_std);
inline void _1ac898466_prepareStructure(_1ac894d58_ObjectCoder* _self_, jule::Ptr<_1aa966767_Struct>* _60037_s);
inline void _1ac898664_prepareStructures(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac89891c_structurePlainDecl(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa966767_Struct>* _63140_s);
inline void _1ac898b1a_structurePlainDecls(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac898dc3_fieldDecl(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa9689cd_FieldIns>* _64731_f);
inline void _1ac8992e1_structureOperatorEq(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Str _65436_ident, jule::Ptr<_1aa969605_StructIns>* _65453_s, jule::Bool _65474_decl);
inline void _1ac899654_structureOperators(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa969605_StructIns>* _72240_s, jule::Bool _72261_decl);
inline void _1ac89990c_structureInsDecl(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa969605_StructIns>* _73138_s);
inline void _1ac899bb5_structureDecl(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa966767_Struct>* _75135_s);
inline void _1ac899db3_structureDecls(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac89a16b_structureMethodDecls1(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa966767_Struct>* _76643_s);
inline void _1ac89a369_structureMethodDecls(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac89a842_funcHead(jule::Ptr<_1ac894d58_ObjectCoder> _self_, _1ace17078_Builder* _78630_buf, jule::Ptr<_1aaa3e2ce_FnIns>* _78658_f, jule::Bool _78675_ptr, jule::Str _78686_ident);
inline void _1ac89aba5_funcDeclIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _80533_f, jule::Bool _80550_ptr);
inline void _1ac89b018_funcDecl(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3b221_Fn>* _81330_f, jule::Bool _81344_ptr);
inline void _1ac89b2c1_funcDeclTrait(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3b221_Fn>* _81935_f);
inline void _1ac89b4be_funcDecls(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac89b777_traitDataTypeMethods(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1ac8932b8_traitHash>* _84142_hash);
inline void _1ac89b975_traitDataTypes(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac89bcd8_paramIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, _1ace17078_Builder* _86930_buf, jule::Ptr<_1aaa3d179_ParamIns>* _86958_p);
inline void _1ac89c14b_paramsIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, _1ace17078_Builder* _87531_buf, jule::Ptr<_1aaa3e2ce_FnIns>* _87559_f);
inline void _1ac89c4ae_varInitExpr(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aab70795_Var>* _89633_v, jule::Fn<void> _89648_init);
inline void _1ac89c767_var(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aab70795_Var> _91424_v);
inline void _1ac89caca_anonFuncInsDecl(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa31d1b_AnonFnExpr>* _94537_m, jule::Str _94559_ident);
inline void _1ac89ce3d_anonFuncIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa31d1b_AnonFnExpr>* _95133_m, jule::Str _95155_ident);
inline void _1ac89d2a1_funcIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _96128_f, jule::Str _96145_ident);
inline void _1ac89d559_func(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3b221_Fn>* _97126_f);
inline void _1ac89d8bc_funcTrait(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa969605_StructIns>* _97727_s, jule::Ptr<_1aaa3e2ce_FnIns>* _97753_f);
inline __jule_tuple_x_1aaa3e2ce_FnIns__jule_tuple_bool _1ac89dc0d_findTraitMetMap(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3b221_Fn>* _99237_m);
inline void _1ac89e071_traitWrapper(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa46935_Trait>* _100434_t, jule::Ptr<_1aaa3b221_Fn>* _100456_m);
inline void _1ac89e26e_traitWrappers(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac89e5d2_traitDataMethods(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1ac8932b8_traitHash>* _106838_hash, jule::Ptr<_1aa969605_StructIns> _106856_s);
inline void _1ac89ea00_traitData(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1ac8932b8_traitHash>* _108631_hash, jule::I32 _108649_i, jule::Ptr<_1aa969605_StructIns>* _108662_s);
inline void _1ac89ebed_traitDatas(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac89edeb_globalDecls(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac8a00e9_decls(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac8a03a2_structureMethods(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa969605_StructIns>* _114638_s);
inline void _1ac8a065a_structureIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa969605_StructIns>* _115334_s);
inline void _1ac8a0913_structure(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa966767_Struct>* _116231_s);
inline void _1ac8a0b11_structures(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac8a0d0e_funcs(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac8a10b7_pushInit(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aab3267a_Package>* _120130_pkg);
inline void _1ac8a12b5_anonHashes(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac8a14b3_initGlobals(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac8a16b1_initCaller(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac8a18ae_end(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac8a1b67_buildTraitHash(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa46935_Trait>* _127336_t);
inline void _1ac8a1d65_buildTraitHashes(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac8a21c8_insertBuf(jule::Ptr<_1ac894d58_ObjectCoder> _self_, _1ace17078_Builder* _130331_buf, jule::I32 _130354_pos);
inline void _1ac8a23c6_implementRC(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac8a25c4_serializeHead(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline void _1ac8a27c2_Serialize(jule::Ptr<_1ac894d58_ObjectCoder> _self_);
inline jule::Str _1ac8a4252_Str(_1ac8a3d78_customType* _self_);
inline jule::Bool _1ac8a4593_Equal(jule::Ptr<_1ac8a3d78_customType> _self_, jule::Ptr<_1aabecdb6_Type> _2518_k);
inline jule::Ptr<_1ac8a498e_typeCoder> static__1ac8a4ede_new(jule::Ptr<_1ac894d58_ObjectCoder>* _5021_oc);
inline void _1ac8a5352_toType(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _5727_buf, jule::Str _5754_id);
inline void _1ac8a56b5_prim(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _7125_buf, jule::Ptr<_1aac06bc2_Prim> _7148_p);
inline void _1ac8a5a28_tuple(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _7626_buf, jule::Ptr<_1aac0bcb5_Tuple> _7653_t);
inline void _1ac8a5d8b_asSptr(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem);
inline void _1ac8a61ee_sptr(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _9525_buf, jule::Ptr<_1aac0a6ed_Sptr> _9552_sptr);
inline void _1ac8a6562_ptr(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _10224_buf, jule::Ptr<_1aac0deb5_Ptr> _10251_p);
inline void _1ac8a68c5_enumDecl(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _11329_buf, jule::Ptr<_1aaa490db_Enum> _11356_e);
inline void _1ac8a6c38_typeEnumDecl(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _11833_buf, jule::Ptr<_1aaa4a7e6_TypeEnum> _11860_e);
inline void _1ac8a709b_asSlice(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _12228_buf, jule::Ptr<_1aabecdb6_Type> _12255_elem);
inline void _1ac8a740e_slice(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _12926_buf, jule::Ptr<_1aac0b1c1_Slc> _12953_s);
inline void _1ac8a7772_mapType(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _13428_buf, jule::Ptr<_1aac0c865_Map> _13455_m);
inline void _1ac8a7e48_structureIns(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _14733_buf, jule::Ptr<_1aa969605_StructIns> _14760_s);
inline void _1ac8a82ab_array(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _17526_buf, jule::Ptr<_1aac0d4e2_Arr> _17553_a);
inline void _1ac8a8982_paramIns(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _19829_buf, jule::Ptr<_1aaa3d179_ParamIns>* _19857_p);
inline void _1ac8a9158_funcInsResult(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _23034_s, jule::Ptr<_1aaa3e2ce_FnIns>* _23060_f);
inline void _1ac8a94bb_anonFunc(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _24829_buf, jule::Ptr<_1aaa3e2ce_FnIns> _24856_f);
inline void _1ac8a982e_func(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _26925_buf, jule::Ptr<_1aaa3e2ce_FnIns> _26952_f);
inline void _1ac8a9b92_kind(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _27625_buf, jule::Ptr<_1aabecdb6_Type> _27652_k);
inline jule::Ptr<_1ac8ac579_resultCoder> static__1ac8aca85_new(jule::Ptr<_1ac8a498e_typeCoder>* _34421_tc);
inline void _1ac8acde8_ptr(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _34824_s, jule::Ptr<_1aac0deb5_Ptr> _34849_p);
inline void _1ac8ad25b_sptr(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _35325_s, jule::Ptr<_1aac0a6ed_Sptr> _35350_p);
inline void _1ac8ad5be_mapType(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _35828_s, jule::Ptr<_1aac0c865_Map> _35853_p);
inline void _1ac8ad932_slice(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _36426_s, jule::Ptr<_1aac0b1c1_Slc> _36451_slc);
inline void _1ac8adc95_arr(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _36924_s, jule::Ptr<_1aac0d4e2_Arr> _36949_arr);
inline void _1ac8ae108_func(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _37525_s, jule::Ptr<_1aaa3e2ce_FnIns> _37550_f);
inline void _1ac8ae46b_tup(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _38824_s, jule::Ptr<_1aac0bcb5_Tuple> _38849_tup);
inline void _1ac8ae7ce_codeMut(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _39528_s, jule::Ptr<_1aabecdb6_Type>* _39554_t);
inline void _1ac8aeb42_codeMut1(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _44229_s, jule::Ptr<_1aabecdb6_Type>* _44255_t);
inline jule::Slice<jule::U8> _1ac8aee50_code(_1ac8ac579_resultCoder* _self_, jule::Ptr<_1aabecdb6_Type>* _45125_t);
inline jule::Str _1c02aa591_Name(_1c02aa3c6_Flag* _self_);
inline jule::Str _1c02aa6e5_What(_1c02aa3c6_Flag* _self_);
inline void _1c02aa849_Reset(_1c02aa3c6_Flag* _self_);
inline jule::I32 _1c02aa99d_Short(_1c02aa3c6_Flag* _self_);
inline jule::Str _1c02ad6b5_Name(_1c02ad50b_Flag* _self_);
inline jule::Str _1c02ad9c3_What(_1c02ad50b_Flag* _self_);
inline void _1c02adb16_Reset(_1c02ad50b_Flag* _self_);
inline jule::I32 _1c02adc59_Short(_1c02ad50b_Flag* _self_);
inline jule::Str _1c02b190a_Name(_1c02b1751_Flag* _self_);
inline jule::Str _1c02b1c18_What(_1c02b1751_Flag* _self_);
inline void _1c02b1d5b_Reset(_1c02b1751_Flag* _self_);
inline jule::I32 _1c02b1e9e_Short(_1c02b1751_Flag* _self_);
inline jule::Str _1c02b4b94_Name(_1c02b49da_Flag* _self_);
inline jule::Str _1c02b4ea2_What(_1c02b49da_Flag* _self_);
inline void _1c02b50e5_Reset(_1c02b49da_Flag* _self_);
inline jule::I32 _1c02b5238_Short(_1c02b49da_Flag* _self_);
inline jule::Str _1c02b7dd9_Name(_1c02b7c30_Flag* _self_);
inline jule::Str _1c02b81e7_What(_1c02b7c30_Flag* _self_);
inline void _1c02b833a_Reset(_1c02b7c30_Flag* _self_);
inline jule::I32 _1c02b847d_Short(_1c02b7c30_Flag* _self_);
inline jule::Ptr<_1ac9224bd_FlagSet> static__1ac9227dc_New(void);
inline jule::Trait _1ac922c93_FindFlag(_1ac9224bd_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1ac9230d4_FindFlagShort(_1ac9224bd_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1ac9236ab_Parse(_1ac9224bd_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1c02b7c30_Flag> _1c0341da8_addFlagCommon(_1ac9224bd_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1c02b49da_Flag> _1c034a587_addFlagCommon(_1ac9224bd_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1c033e878_AddVar(_1ac9224bd_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1c034809b_AddVar(_1ac9224bd_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1c02c9da7_parseInteger(_1ac924e82_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1c02d26a6_parseInteger(_1ac924e82_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline jule::Str _1ac9257ce_getData(_1ac924e82_argParser* _self_);
inline jule::VoidExceptional _1ac925a54_processFlag(_1ac924e82_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1ac925d0c_singleDash(_1ac924e82_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1ac9260b5_doubleDash(_1ac924e82_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1ac9262b3_tryArg(_1ac924e82_argParser* _self_);
inline jule::VoidExceptional _1ac9264b1_parse(_1ac924e82_argParser* _self_);
inline jule::Exceptional<jule::Slice<_1ad0a39ea_Dir>> static__1bb0945e3_Read(jule::Str _1117_path);
inline jule::VoidExceptional static__1bb0947e1_Create(jule::Str _3419_path);
inline jule::VoidExceptional static__1bb094a22_Remove(jule::Str _4519_path);
inline jule::Ptr<_1ad0a4622_Cmd> static__1ad0a4a73_New(jule::Str _3516_path);
inline jule::VoidExceptional _1ad0a4c71_Spawn(_1ad0a4622_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1ad0a5205_Wait(_1ad0a4622_Cmd* _self_);
inline jule::VoidExceptional _1ad132b12_spawn(_1ad0a4622_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1ad133096_wait(_1ad0a4622_Cmd* _self_);
inline __jule_tuple_x_1ab61326a_IR__jule_tuple_s_1ace263b7_Log static__1ab613743_Build(jule::Str _3018_path, jule::I32 _3029_flags);
inline void _1ab613c2c_appendStructs(_1ab61326a_IR* _self_, jule::Ptr<_1aab3267a_Package>* _6830_p, jule::Slice<jule::Ptr<_1aa966767_Struct>>* _6854_buffer);
inline jule::Slice<jule::Ptr<_1aa966767_Struct>> _1ab613eb3_GetAllStructures(_1ab61326a_IR* _self_);
inline void _1ab614326_appendGlobals(_1ab61326a_IR* _self_, jule::Ptr<_1aab3267a_Package>* _9630_p, jule::Slice<jule::Ptr<_1aab70795_Var>>* _9654_buffer);
inline jule::Slice<jule::Ptr<_1aab70795_Var>> _1ab6145ac_GetAllGlobals(_1ab61326a_IR* _self_);
inline void _1ab6147aa_Order(_1ab61326a_IR* _self_);
inline void _1c694b577_Free(void* _4520_ptr);
inline jule::Str _1c69799b2_BytePtrToStr(jule::U8* _6524_s);
inline jule::Slice<jule::U8> _1c6979c48_StrToBytes(jule::Str _9015_s);
inline jule::Str _1c697a5ea_Str(jule::U8* _108_b, jule::I32 _1018_n);
inline jule::Slice<jule::U8> _1ac968c1d_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap);
inline jule::Slice<jule::U8> _1c69914ac_StrBytes(jule::Str _4013_s);
inline jule::Str _1c6991743_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _1c6991a0c_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline jule::I32 _1c6c329c3_GetLastErrno(void);
inline jule::I32 _1c6c609ce_Fcntl(jule::I32 _5510_handle, jule::I32 _5523_cmd, jule::I32 _5533_arg);
inline jule::I32 _1c6c60d53_Stat(jule::U8* _6016_path, struct stat* _6033_stat);
inline jule::I32 _1c6c61282_Open(jule::U8* _6516_path, jule::I32 _6529_flag, jule::I32 _6540_mode);
inline jule::U8* _1c6c61606_Getcwd(jule::U8* _7118_buff, jule::U32 _7131_bufflen);
inline DIR* _1c6c61b01_Opendir(jule::U8* _7619_path);
inline struct dirent* _1c6c61ccc_Readdir(DIR* _7923_dir);
inline jule::I32 _1c6c62074_Closedir(DIR* _8224_dir);
inline jule::I32 _1c6c6297b_Mkdir(jule::U8* _9117_path, jule::I32 _9130_mode);
inline jule::I32 _1c6c62c45_Rmdir(jule::U8* _9617_path);
inline jule::I32 _1c6c6300e_Unlink(jule::U8* _9918_path);
inline jule::I32 _1c6ca0bc8_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n);
inline jule::I32 _1c6ca10a2_Close(jule::I32 _2510_handle);
inline jule::I32 _1c6ca1459_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n);
inline void _1c6ca168a_Exit(jule::I32 _339_code);
inline __jule_tuple_i32__jule_tuple_int _1e0edc15e_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1e0edc4a0_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1e0edca00_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::Slice<jule::U8> _1e0edd54a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1e0edd8be_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I32 _1e0edde52_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1e0ede21b_RuneStart(jule::U8 _51714_b);
inline jule::I32 _1c6d924c3_LeadingZeros64(jule::U64 _5919_x);
inline jule::I32 _1c6d93419_TrailingZeros(jule::U32 _8118_x);
inline jule::I32 _1c6d93cee_TrailingZeros32(jule::U32 _10320_x);
inline jule::I32 _1c6d940b8_TrailingZeros64(jule::U64 _11220_x);
inline jule::I32 _1c6d99a91_Len32(jule::U32 _35014_x);
inline jule::I32 _1c6d99d5a_Len64(jule::U64 _36414_x);
inline __jule_tuple_u64__jule_tuple_u64 _1c6d9aae7_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1c6d9c401_Mul64(jule::U64 _49710_x, jule::U64 _49718_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::U64 _1c68b9858_f64bits(jule::F64 _612_f);
inline jule::I32 _1c68ba24e_randInt(jule::U64 _716_seed, jule::I32 _727_max);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3514_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4413_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5317_x);
inline jule::I32 _1c6992d60_u64ToBuf(jule::Slice<jule::U8> _6217_buf, jule::U64 _6234_x);
inline jule::Str __jule_f64ToStr(jule::F64 _9017_f);
inline jule::Str _1c031681c_arrToStr(jule::Slice<jule::U8> _15816_x);
inline jule::Str _1c0309458_structToStr(_1ace17078_Builder _19119_x);
inline jule::Str _1acb72aa3_toStr(jule::Any _23213_x);
inline jule::Str _1acbbe47e_toStr(jule::Str _23213_x);
inline jule::Str _1bc6e53d5_toStr(jule::I32 _23213_x);
inline jule::Str _1bc6eb5ea_toStr(jule::I32 _23213_x);
inline jule::Str _1bc70746e_toStr(jule::I32 _23213_x);
inline jule::Str _1bc7404a7_toStr(jule::I32 _23213_x);
inline jule::Str _1bc780aad_toStr(jule::U8 _23213_x);
inline jule::Str _1bc7810ca_toStr(jule::I32 _23213_x);
inline jule::Str _1bca97c60_toStr(jule::I32 _23213_x);
inline jule::Str _1bcd5d762_toStr(jule::I64 _23213_x);
inline jule::Str _1bcd5da3c_toStr(jule::U64 _23213_x);
inline jule::Str _1bcd644b0_toStr(jule::Bool _23213_x);
inline jule::Str _1bcd6aa38_toStr(jule::F64 _23213_x);
inline jule::Str _1bce1ea65_toStr(jule::F32 _23213_x);
inline jule::Str _1bce20093_toStr(jule::I8 _23213_x);
inline jule::Str _1bc780e87_toStr(jule::I16 _23213_x);
inline jule::Str _1bce2aae8_toStr(jule::U8 _23213_x);
inline jule::Str _1bce34371_toStr(jule::U16 _23213_x);
inline jule::Str _1bce39420_toStr(jule::U32 _23213_x);
inline jule::Str _1bd18d6a7_toStr(jule::Ptr<_1aab70795_Var> _23213_x);
inline jule::Str _1bd190c81_toStr(jule::Ptr<_1aabec1a1_TypeAlias> _23213_x);
inline jule::Str _1bd193316_toStr(jule::Ptr<_1aa966767_Struct> _23213_x);
inline jule::Str _1bd196a45_toStr(jule::Ptr<_1aaa3b221_Fn> _23213_x);
inline jule::Str _1bd19a472_toStr(jule::Ptr<_1aaa46935_Trait> _23213_x);
inline jule::Str _1bd19d167_toStr(jule::Ptr<_1aaa490db_Enum> _23213_x);
inline jule::Str _1bd1a1b71_toStr(jule::Ptr<_1aaa4a7e6_TypeEnum> _23213_x);
inline jule::Str _1bd1c6129_toStr(jule::Ptr<_1aa965447_Field> _23213_x);
inline jule::Str _1bd1d7877_toStr(jule::Ptr<_1aa9b96cc_Const> _23213_x);
inline jule::Str _1bd200e34_toStr(jule::Ptr<_1aaa48580_EnumItem> _23213_x);
inline jule::Str _1bd211c7a_toStr(jule::Ptr<_1aaa3974c_Param> _23213_x);
inline jule::Str _1bd3b99e3_toStr(jule::Ptr<_1aa0ede22_IdentTypeDecl> _23213_x);
inline jule::Str _1bd3dc64d_toStr(jule::Ptr<_1aab018ad_MultiAssign> _23213_x);
inline jule::Str _1bd3e5403_toStr(jule::Ptr<_1aa103740_TupleExpr> _23213_x);
inline jule::Str _1bd402795_toStr(jule::Ptr<_1aa10c2b5_AssignSt> _23213_x);
inline jule::Str _1bd404a2d_toStr(jule::Ptr<_1aa102b4b_Expr> _23213_x);
inline jule::Str _1bd40a98a_toStr(jule::Ptr<_1aab00d74_Postfix> _23213_x);
inline jule::Str _1bd40de00_toStr(jule::Ptr<_1aab0132a_Assign> _23213_x);
inline jule::Str _1bd41181a_toStr(jule::Ptr<_1aabb8db5_Data> _23213_x);
inline jule::Str _1bd40ee78_toStr(jule::Ptr<_1aaa30ed5_FnCallExpr> _23213_x);
inline jule::Str _1bd42d23d_toStr(jule::Ptr<_1aab0033a_Label> _23213_x);
inline jule::Str _1bd44b37c_toStr(jule::Ptr<_1aaaec832_Scope> _23213_x);
inline jule::Str _1bd45563e_toStr(jule::Ptr<_1aaa37096_BuiltinErrorCallExpr> _23213_x);
inline jule::Str _1bd4588d9_toStr(jule::Ptr<_1aaa380a8_BackendEmitExpr> _23213_x);
inline jule::Str _1bd4590c1_toStr(jule::Ptr<_1aaa35d20_BuiltinAppendCallExpr> _23213_x);
inline jule::Str _1bd46299d_toStr(jule::Ptr<_1aaa348e0_BuiltinPrintCallExpr> _23213_x);
inline jule::Str _1bd45e170_toStr(jule::Ptr<_1aaa34bdc_BuiltinPrintlnCallExpr> _23213_x);
inline jule::Str _1bd465187_toStr(jule::Ptr<_1aaa35490_BuiltinPanicCallExpr> _23213_x);
inline jule::Str _1bd467354_toStr(jule::Ptr<_1aaa36bbc_BuiltinCopyCallExpr> _23213_x);
inline jule::Str _1bd469c6e_toStr(jule::Ptr<_1aaa367e3_BuiltinDeleteCallExpr> _23213_x);
inline jule::Str _1bd46c689_toStr(jule::Ptr<_1aaa383a5_FreeExpr> _23213_x);
inline jule::Str _1bd47c2e2_toStr(jule::Ptr<_1aaaed426_Conditional> _23213_x);
inline jule::Str _1bd4878a2_toStr(jule::Ptr<_1aaaed723_InfIter> _23213_x);
inline jule::Str _1bd48c2ad_toStr(jule::Ptr<_1aaaedbc9_WhileIter> _23213_x);
inline jule::Str _1bd4b8e33_toStr(jule::Ptr<_1aaaee6ad_RangeIter> _23213_x);
inline jule::Str _1bd4c86e5_toStr(jule::Ptr<_1aa95bc46_WhileKind> _23213_x);
inline jule::Str _1bd4cb2b9_toStr(jule::Ptr<_1aa95c64d_RangeKind> _23213_x);
inline jule::Str _1bd4e6ee9_toStr(jule::Ptr<_1aaaee9aa_ContSt> _23213_x);
inline jule::Str _1bd500aa2_toStr(jule::Ptr<_1aab0099a_GotoSt> _23213_x);
inline jule::Str _1bd538cc7_toStr(jule::Ptr<_1aa104466_IdentExpr> _23213_x);
inline jule::Str _1bd55ce1c_toStr(jule::Ptr<_1aaa31865_IndexingExpr> _23213_x);
inline jule::Str _1bd5a6251_toStr(jule::Ptr<_1aab0232b_Match> _23213_x);
inline jule::Str _1bd5ba243_toStr(jule::Ptr<_1aab0331b_FallSt> _23213_x);
inline jule::Str _1bd5d9d9a_toStr(jule::Ptr<_1aaaeed84_BreakSt> _23213_x);
inline jule::Str _1bd5e0da1_toStr(jule::Ptr<_1aab036b2_RetSt> _23213_x);
inline jule::Str _1bd5ed056_toStr(jule::Ptr<_1aa957978_ScopeTree> _23213_x);
inline jule::Str _1bd600322_toStr(jule::Ptr<_1aa95a7c2_VarDecl> _23213_x);
inline jule::Str _1bd606306_toStr(jule::Ptr<_1aa95e551_TypeAliasDecl> _23213_x);
inline jule::Str _1bd6049ca_toStr(jule::Ptr<_1aa95dc37_Conditional> _23213_x);
inline jule::Str _1bd60cb26_toStr(jule::Ptr<_1aa95b41b_Iter> _23213_x);
inline jule::Str _1bd610b18_toStr(jule::Ptr<_1aa95ce01_ContSt> _23213_x);
inline jule::Str _1bd60e1bb_toStr(jule::Ptr<_1aa10adeb_LabelSt> _23213_x);
inline jule::Str _1bd60b77e_toStr(jule::Ptr<_1aa10b2c5_GotoSt> _23213_x);
inline jule::Str _1bd61627d_toStr(jule::Ptr<_1aa960321_MatchCase> _23213_x);
inline jule::Str _1bd6158ba_toStr(jule::Ptr<_1aa10b5c2_FallSt> _23213_x);
inline jule::Str _1bd621057_toStr(jule::Ptr<_1aa95ca27_BreakSt> _23213_x);
inline jule::Str _1bd61e60a_toStr(jule::Ptr<_1aa95ab9b_RetSt> _23213_x);
inline jule::Str _1bd62703b_toStr(jule::Ptr<_1aa103520_UseExpr> _23213_x);
inline jule::Str _1bd70c5c7_toStr(jule::Ptr<_1aa964413_Impl> _23213_x);
inline jule::Str _1bd70e0bd_toStr(jule::Ptr<_1aa963566_StructDecl> _23213_x);
inline jule::Str _1bd7147dd_toStr(jule::Ptr<_1aa959617_FnDecl> _23213_x);
inline jule::Str _1bd71822b_toStr(jule::Ptr<_1aa963ca3_TraitDecl> _23213_x);
inline jule::Str _1bd71cc58_toStr(jule::Ptr<_1aa96191b_EnumDecl> _23213_x);
inline jule::Str _1bd7213ee_toStr(jule::Ptr<_1aa9628a6_TypeEnumDecl> _23213_x);
inline jule::Str _1bd74da7a_toStr(jule::Ptr<_1aaa33a76_StructSubIdentExpr> _23213_x);
inline jule::Str _1bd74e020_toStr(jule::Ptr<_1aaa2e4ab_UnaryExpr> _23213_x);
inline jule::Str _1bd7807b0_toStr(jule::Ptr<_1aaa3e2ce_FnIns> _23213_x);
inline jule::Str _1bda1bce3_toStr(jule::Ptr<_1aa101331_MapTypeDecl> _23213_x);
inline jule::Str _1bda2126a_toStr(jule::Ptr<_1aa100044_TupleTypeDecl> _23213_x);
inline jule::Str _1bda3535b_toStr(jule::Ptr<_1aa100ad3_ArrTypeDecl> _23213_x);
inline jule::Str _1bda3a2d9_toStr(jule::Ptr<_1aa0eec47_SlcTypeDecl> _23213_x);
inline jule::Str _1bda41444_toStr(jule::Ptr<_1aa100341_PtrTypeDecl> _23213_x);
inline jule::Str _1bda472b3_toStr(jule::Ptr<_1aa0ee8b2_SptrTypeDecl> _23213_x);
inline jule::Str _1bda98ee6_toStr(jule::Ptr<_1aa1050d2_VariadicExpr> _23213_x);
inline jule::Str _1bda9d7c0_toStr(jule::Ptr<_1aaa313ae_SliceExpr> _23213_x);
inline jule::Str _1bdaba776_toStr(jule::Ptr<_1aa10736a_FieldExprPair> _23213_x);
inline jule::Str _1bdac6133_toStr(jule::Ptr<_1aa108976_KeyValPair> _23213_x);
inline jule::Str _1bdb1b93c_toStr(jule::Ptr<_1aaa345e3_TupleExpr> _23213_x);
inline jule::Str _1bdb3b9c3_toStr(jule::Ptr<_1aaa3017c_AllocStructLitExpr> _23213_x);
inline jule::Str _1bdb4e3ed_toStr(jule::Ptr<_1aaa30633_CastingExpr> _23213_x);
inline jule::Str _1bdb6ad10_toStr(jule::Ptr<_1aaa33e1c_StructStaticIdentExpr> _23213_x);
inline jule::Str _1bdb6ec04_toStr(jule::Ptr<_1aa105c5e_SubIdentExpr> _23213_x);
inline jule::Str _1bdb7a1d7_toStr(jule::Ptr<_1aaa2ed80_StructLitExpr> _23213_x);
inline jule::Str _1bdb9bd41_toStr(jule::Ptr<_1aaa37c34_RuneExpr> _23213_x);
inline jule::Str _1bdbbec65_toStr(jule::Ptr<_1aa969605_StructIns> _23213_x);
inline jule::Str _1bdc0b444_toStr(jule::Ptr<_1aabecdb6_Type> _23213_x);
inline jule::Str _1bdc31b62_toStr(jule::Ptr<_1aaa342e6_ArrayExpr> _23213_x);
inline jule::Str _1bdc6c807_toStr(jule::Ptr<_1aa0ee1db_SubIdentTypeDecl> _23213_x);
inline jule::Str _1bdc70b29_toStr(jule::Ptr<_1aa104c08_UnaryExpr> _23213_x);
inline jule::Str _1bdc76ec6_toStr(jule::Ptr<_1aa0ed817_TypeDecl> _23213_x);
inline jule::Str _1bdc81992_toStr(jule::Ptr<_1aa105885_NamespaceExpr> _23213_x);
inline jule::Str _1bdc85611_toStr(jule::Ptr<_1aa0ee5b5_NamespaceTypeDecl> _23213_x);
inline jule::Str _1bdcc63aa_toStr(jule::Ptr<_1aaa32b52_SlicingExpr> _23213_x);
inline jule::Str _1bdd461b6_toStr(jule::Ptr<_1aa1091a2_SliceExpr> _23213_x);
inline jule::Str _1bddb2243_toStr(jule::Ptr<_1aaa331d5_TraitSubIdentExpr> _23213_x);
inline jule::Str _1bde64889_toStr(jule::Ptr<_1aaa325be_MapExpr> _23213_x);
inline jule::Str _1bde77094_toStr(jule::Ptr<_1aaa31d1b_AnonFnExpr> _23213_x);
inline jule::Str _1bde7de36_toStr(jule::Ptr<_1aa102e15_RangeExpr> _23213_x);
inline jule::Str _1bde810c0_toStr(jule::Ptr<_1aa103ad6_LitExpr> _23213_x);
inline jule::Str _1bde81c91_toStr(jule::Ptr<_1aa103eb0_UnsafeExpr> _23213_x);
inline jule::Str _1bde88eda_toStr(jule::Ptr<_1aa109b0e_IndexingExpr> _23213_x);
inline jule::Str _1bde8aaad_toStr(jule::Ptr<_1aa10a26e_SlicingExpr> _23213_x);
inline jule::Str _1bde8d3c9_toStr(jule::Ptr<_1aa1054ab_CastExpr> _23213_x);
inline jule::Str _1bde8e0de_toStr(jule::Ptr<_1aa107b95_StructLit> _23213_x);
inline jule::Str _1bde92488_toStr(jule::Ptr<_1aa106875_FnCallExpr> _23213_x);
inline jule::Str _1bde95dd7_toStr(jule::Ptr<_1aa10814b_BraceLit> _23213_x);
inline jule::Str _1bde9b2b6_toStr(jule::Ptr<_1aa106215_BinaryExpr> _23213_x);
inline jule::Str _1ab4ee420_toStr(jule::Ptr<_1aaa2e0d2_BinaryExpr> _23213_x);
inline jule::Str _1be1b21e1_toStr(jule::Ptr<_1aaa350b6_BuiltinNewCallExpr> _23213_x);
inline jule::Str _1be1c7877_toStr(jule::Ptr<_1aaa35946_BuiltinMakeCallExpr> _23213_x);
inline jule::Str _1be211bd0_toStr(jule::Ptr<_1aaa3611c_BuiltinLenCallExpr> _23213_x);
inline jule::Str _1be22b623_toStr(jule::Ptr<_1aaa36419_BuiltinCapCallExpr> _23213_x);
inline jule::Str _1be272339_toStr(jule::Ptr<_1aaa37393_SizeofExpr> _23213_x);
inline jule::Str _1be27b112_toStr(jule::Ptr<_1aaa37a47_AlignofExpr> _23213_x);
inline jule::Str _1be860086_toStr(jule::Ptr<_1ac3d513a_ExceptionalForwardingExpr> _23213_x);
inline jule::Str _1be8985db_toStr(jule::Ptr<_1ac3d810a_StrRuneIter> _23213_x);
inline jule::Str _1be8a355d_toStr(jule::Ptr<_1ac3d6d84_MutSlicingExpr> _23213_x);
inline jule::Str _1be8dd0e2_toStr(jule::Ptr<_1ac3d7c31_AppendToSliceExpr> _23213_x);
inline jule::Str _1be8e07dc_toStr(jule::Ptr<_1ac3d7857_PushToSliceExpr> _23213_x);
inline jule::Str _1be912116_toStr(jule::Ptr<_1ac3d5adb_SwapExpr> _23213_x);
inline jule::Str _1be96bb32_toStr(jule::Ptr<_1ac3d4d60_StrFromBytes> _23213_x);
inline jule::Str _1be976323_toStr(jule::Ptr<_1ac3d5eb5_EmptyCompareExpr> _23213_x);
inline jule::Str _1be978e5d_toStr(jule::Ptr<_1ac3d6801_StrCompExpr> _23213_x);
inline jule::Str _1be9852dd_toStr(jule::Ptr<_1ac3d5745_StrConcatExpr> _23213_x);
inline jule::Str _1be9ad17e_toStr(jule::Ptr<_1ac3d7181_UnsafeBinaryExpr> _23213_x);
inline jule::Str _1be9d54d6_toStr(jule::Ptr<_1ac3d8407_UnsafeDerefExpr> _23213_x);
inline jule::Str _1be9dbb19_toStr(jule::Ptr<_1ac3d62b2_RefExpr> _23213_x);
inline jule::Str _1be9dee3b_toStr(jule::Ptr<_1aaa2e9d9_StructArgExpr> _23213_x);
inline jule::Str _1be9e77b2_toStr(jule::Ptr<_1ac3d8935_UnsafeCastingExpr> _23213_x);
inline jule::Str _1bea0698b_toStr(jule::Ptr<_1ac3d53c1_FnCallIgnoreExceptionalExpr> _23213_x);
inline jule::Str _1bea18a7a_toStr(jule::Ptr<_1ac3d747d_UnsafeIndexingExpr> _23213_x);
inline jule::Str _1c0070e39_toStr(jule::Ptr<jule::Str> _23213_x);
inline jule::Str _1c03022ca_toStr(_1ace17078_Builder _23213_x);
inline jule::Str _1c0310b79_toStr(jule::Slice<jule::U8> _23213_x);
inline jule::Str _1c03115b4_toStr(jule::Str _23213_x);
inline jule::Str _1c0319875_toStr(jule::Str _23213_x);
inline jule::Bool _1acba142d_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1acc01a77_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1bca0ba5e_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1beac8c28_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I32 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void _1c6ca59be__handleRW(jule::Slice<jule::U8>* _1615_b);
inline jule::I32 __jule_writeStdout(jule::Slice<jule::U8> _2516_buf);
inline jule::I32 __jule_writeStderr(jule::Slice<jule::U8> _3616_buf);
inline jule::I32 __jule_readStdin(jule::Slice<jule::U8> _4718_buf);
inline void __jule_panic(jule::U8* _1318_m, jule::I32 _1328_n);
inline jule::U32 _1acb17bbe_atomicLoad(jule::U32* _3525_p, jule::I32 _3532_mo);
inline jule::U32 _1acb1cbe6_atomicAdd(jule::U32* _4628_p, jule::U32 _4635_delta, jule::I32 _4645_mo);
inline jule::Str _1c6cadda1_executable(void);
inline jule::U32* __jule_RCNew(void);
inline jule::U32 __jule_RCLoad(jule::U32* _4019_p);
inline jule::U32 __jule_RCLoadAtomic(jule::U32* _4625_p);
inline void __jule_RCAdd(jule::U32* _5722_p);
inline void __jule_RCAddAtomic(jule::U32* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U32* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U32* _8429_p);
inline void __jule_RCFree(jule::U32* _9219_p);
inline jule::I32 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I32 _9430_n, jule::I32* _9442_r, jule::I32* _9456_outLen);
inline jule::I32 __jule_runeCount(jule::Str _10514_s);
inline void _1e0ee2098_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Slice<jule::Str> _1e0ee25a4_args(void);
inline jule::I32 _1e0ee2b48_strlen(jule::U8* _3122_p);
inline jule::Bool _1e0ee3e68__coSpawn(void* _1520_func, void* _1535_args);
inline jule::U64 _1e1045ad0_hash128to64(_1e1045728_u128 _4316_sum);
inline jule::U64 _1e1045ddd_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _1e10461a7_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _1e10464e8_shiftMix(jule::U64 _5513_z);
inline jule::U64 _1e1046839_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _1e1046bad_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _1e10470dc_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _1e1047571_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I32 _7532_n);
inline _1e1045728_u128 _1e1047928_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I32 _10334_n, _1e1045728_u128 _10342_seed);
inline _1e1045728_u128 _1e1048077_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _1e1045728_u128 _1e10484a6_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _1e1045728_u128 _1e10488d5_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I32 _16040_n, _1e1045728_u128 _16048_seed);
inline jule::U64 _1e1048b9e_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _1c6da1aed_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _1c6da1e0b_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _1c6da21c5_nextMatch(jule::U64* _6419_b);
inline jule::U64 _1c6da2516_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _1c6da279c_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I32 _1c6da2a66_numGroups(jule::I32 _7914_n);
inline jule::Array<jule::I8,8> _1c6da2c75_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _1c6da314e_splitHash(jule::U64 _9414_h);
inline jule::U32 _1c6da344b_probeStart(jule::U64 _9815_hi, jule::I32 _9823_groups);
inline jule::U32 _1c6da37c0_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline __jule_tuple_int__jule_tuple_bool _1ad0eeb67_AtoiBp(jule::U8* _722_b, jule::I32 _736_n);
inline jule::Str _1ad1084bc_Itoa(jule::I32 _89_x);
inline jule::Str _1ad108720_Utoa(jule::U32 _1613_x);
inline void _1ad108951_rev(jule::Slice<jule::U8>* _3513_b);
inline jule::I32 _1ad12353c_findLastByte(jule::U8* _2117_begin, jule::U8* _2135_end, jule::U8 _2147_b);
inline jule::I32 _1ad12d8bb_FindByteStr(jule::Str _4416_s, jule::U8 _4424_b);
inline jule::I32 _1ad12dc40_FindLastByteStr(jule::Str _5520_s, jule::U8 _5528_b);
inline jule::Str _1ad14178b_Getwd(void);
inline jule::Bool _1bb01c417_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1bb08302c_is16(jule::Slice<_1bb08128e_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1bb0833a1_is32(jule::Slice<_1bb0817bc_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1bb083ba9_isExcludingLatin(jule::Ptr<_1bb081c40_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1bb083deb_IsUpper(jule::I32 _29512_r);
inline jule::I32 _1bb0845e4_convertCase(jule::I32 _31316_case, jule::I32 _31327_r, jule::Ptr<_1bb080cd8_CaseRange> _31336_cr);
inline jule::Ptr<_1bb080cd8_CaseRange> _1bb084968_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1bb080cd8_CaseRange> _33329_caseRange);
inline jule::I32 _1bb084c32_SimpleFold(jule::I32 _37015_r);
inline jule::Str _1bb0851a5_Repeat(jule::Str _1111_s, jule::I32 _1123_n);
inline jule::Bool _1bb08556d_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1bb0858e2_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I32 _1bb085d98_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i);
inline jule::I32 _1bb0861d9_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I32 _1bb086618_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i);
inline jule::I32 _1bb08698c_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I32 _1bb088274_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I32 _1bb0885e8_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I32 _1bb089022_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1bb0896b5_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n);
inline jule::Slice<jule::Str> _1bb089a39_SplitAll(jule::Str _24413_s, jule::Str _24421_sub);
inline jule::Bool _1bb089dad_Contains(jule::Str _24913_s, jule::Str _24921_sub);
inline jule::Bool _1bb08a92a_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes);
inline jule::I32 _1bb08ac9e_Count(jule::Str _27010_s, jule::Str _27018_sub);
inline jule::Str _1bb08b288_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I32 _29044_n);
inline jule::Str _1bb08b6b7_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new);
inline jule::Str _1bb08c443_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset);
inline jule::Str _1bb08c7b7_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset);
inline jule::Str _1bb08cdc2_Trim(jule::Str _3819_s, jule::Str _38117_cutset);
inline jule::Str _1bb08d202_Join(jule::Slice<jule::Str> _3879_parts, jule::Str _38723_sep);
inline jule::Bool _1bb08e8c9_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Str _1bb090cc6_Clean(jule::Str _10814_path);
inline jule::Str _1bb09139d_FromSlash(jule::Str _21114_path);
inline jule::Str _1bb0916de_Join(jule::Slice<jule::Str> _2259_elem);
inline jule::Str _1bb091975_Ext(jule::Str _2308_path);
inline __jule_tuple_str__jule_tuple_bool _1bb091c3e_Abs(jule::Str _2458_path);
inline jule::Str _1bb092008_Base(jule::Str _25113_path);
inline jule::Str _1bb0923d2_Dir(jule::Str _2828_path);
inline jule::Str _1bb092624_VolumeName(jule::Str _30015_path);
inline jule::Bool _1bb0934c1_IsPathSep(jule::U8 _4814_c);
inline jule::Bool _1bb0937ce_IsAbs(jule::Str _5310_path);
inline jule::I32 _1bb093a98_volumeNameLen(jule::Str _5918_path);
inline __jule_tuple_str__jule_tuple_bool _1bb093dd9_abs(jule::Str _638_path);
inline jule::Str _1bb094170_join(jule::Slice<jule::Str> _749_elem);
inline jule::Slice<char*> _1ad1322c6_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s, jule::Slice<jule::Slice<jule::U8>>* _3640_bargs);
inline jule::I32 _1ad13264a_execvp(jule::Str* _4812_file, jule::Slice<jule::Str>* _4824_argv);
inline jule::VoidExceptional _1ad13287b_setenv(jule::Slice<jule::Str>* _5712_envv);
inline jule::I32 _1ad13342b_cmdErrorFromCode(jule::I32 _15121_code);
inline jule::I32 _1ad13363a_getLastCmdError(void);
inline void _1ad142e41_Exit(jule::I32 _119_code);
inline jule::Str _1ad1431b6_Executable(void);
inline jule::Slice<jule::Str> _1ad143370_Args(void);
inline jule::Exceptional<jule::Str> _1ad1437d2_Getwd(void);
inline jule::I32 _1ad148b5b_getLastFsError(void);
inline jule::I32 _1ad149167_getLastOsError(void);
inline jule::Bool _1c6e36512_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1c6e367dc_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1c6e36aa6_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1ace26829_Logf(jule::Str _3259_fmt, jule::Slice<jule::Any> _32522_args);
inline jule::Str _1ace26b37_argToStr(jule::Any _32913_arg);
inline jule::I32 _1ace26e01_findNextFmt(jule::Str _34216_fmt);
inline jule::Str _1ace272b9_applyFmt(jule::Str _35117_fmt, jule::Slice<jule::Any> _35127_args);
inline jule::Bool _1ace281bb_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _1ace295da_IsWindows(jule::Str _3714_os);
inline jule::Bool _1ace298e8_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1ace29bb2_IsLinux(jule::Str _4312_os);
inline jule::Bool _1ace2a003_IsI386(jule::Str _4611_arch);
inline jule::Bool _1ace2a289_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1ace2a553_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1ace2a81c_IsUnix(jule::Str _5511_os);
inline jule::Bool _1ace2abe6_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1ace2ae38_Is64Bit(jule::Str _6112_arch);
inline void _1bb0961e9_init(void);
inline jule::U32 _1a78caa64_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1a78cad72_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1a78cb13b_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1a78cb47c_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1a78cd9e0_Frexp(jule::F64 _4714_f);
inline jule::F64 _1a78d3e57_NaN(void);
inline jule::Bool _1a78d4265_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1a78d452e_Inf(jule::I32 _618_sign);
inline jule::Bool _1a78d48e7_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1a78d4bb1_normalize(jule::F64 _8214_x);
inline jule::F64 _1a78d6685_Log(jule::F64 _1118_x);
inline jule::F64 _1a78d706a_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1a78ddadd_Modf(jule::F64 _449_f);
inline jule::F64 _1a78de3e6_Log2(jule::F64 _449_x);
inline jule::Str _1a7917ed0_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize);
inline jule::Slice<jule::U8> _1a79185b8_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize);
inline jule::Slice<jule::U8> _1a7918cc2_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _1a7916d03_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1a7919498_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1a791794c_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt);
inline void _1a79198b6_roundShortest(_1a792a4dc_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1a7916d03_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1a7919e5a_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1a791794c_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1a791a444_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1a791794c_decimalSlice _45637_d, jule::I32 _45654_prec);
inline jule::Slice<jule::U8> _1a791aae8_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1a7916d03_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1a791b27a_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _1a7916d03_floatInfo* _51232_flt);
inline jule::I32 _1a791b5ee_min(jule::I32 _5968_a, jule::I32 _59616_b);
inline jule::I32 _1a791b973_max(jule::I32 _6038_a, jule::I32 _60316_b);
inline jule::U8 _1a791c611_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1a7368ee7_ConvError _1a791ca84_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1a791ceb3_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1a791d469_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1a791e107_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1a791e4e2_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg);
inline jule::I32 _1a7921219_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a7921527_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a79217e1_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1a792333c_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1a792376b_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1a7368ee7_ConvError _1a7923d10_atofHex(_1a7916d03_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a7368ee7_ConvError _1a79241d9_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a7368ee7_ConvError _1a792442b_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a7368ee7_ConvError _1a79247a0_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1a7924b24_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize);
inline void _1a792544e_ryuFtoaFixed32(_1a791794c_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec);
inline void _1a79258e4_ryuFtoaFixed64(_1a791794c_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec);
inline void _1a7926230_formatDecimal(_1a791794c_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec);
inline void _1a7926708_ryuFtoaShortest(_1a791794c_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1a7916d03_floatInfo* _26168_flt);
inline jule::I32 _1a792698e_mulByLog2Log10(jule::I32 _37719_x);
inline jule::I32 _1a7926c58_mulByLog10Log2(jule::I32 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a7927187_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1a7916d03_floatInfo* _3963_flt);
inline void _1a79277d6_ryuDigits(_1a791794c_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1a7927e57_ryuDigits32(_1a791794c_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a7928386_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a79287b5_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q);
inline jule::Bool _1a7928b39_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1a7928e03_divmod1e9(jule::U64 _60214_x);
inline void _1a792bd3a_trim(_1a792a4dc_decimal* _27414_a);
inline void _1a792c126_rightShift(_1a792a4dc_decimal* _28420_a, jule::U32 _28432_k);
inline jule::Bool _1a792c5cc_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s);
inline void _1a792c885_leftShift(_1a792a4dc_decimal* _35219_a, jule::U32 _35231_k);
inline jule::Bool _1a792cc09_shouldRoundUp(_1a792a4dc_decimal* _39919_a, jule::I32 _39931_nd);
inline jule::Str _1a792e3d1_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base);
inline jule::Str _1a792e799_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base);
inline jule::Str _1a792ea63_Itoa(jule::I32 _819_i);
inline jule::Str _1a792eda4_small(jule::I32 _8610_i);
inline jule::Bool _1a793013a_isPowerOfTwo(jule::I32 _9617_x);
inline __jule_tuple_s_1ac931565_byte__jule_tuple_str _1a79306ce_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline void _1a7932082_Throw(jule::Str _910_msg);
inline jule::Bool _1aa0d8538_IsUnaryOp(jule::U32 _33314_id);
inline jule::Bool _1aa0d8846_IsBinOp(jule::U32 _34312_id);
inline jule::Bool _1aa0d8e51_IsStr(jule::Str _36310_k);
inline jule::Bool _1aa0d91d7_IsRawStr(jule::Str _36613_k);
inline jule::Bool _1aa0d94a1_IsRune(jule::Str _37011_k);
inline jule::Bool _1aa0d9d86_IsFloat(jule::Str _37912_k);
inline jule::Bool _1aa0da150_IsNum(jule::Str _38710_k);
inline jule::Bool _1aa0da6d3_IsIgnoreIdent(jule::Str _40218_ident);
inline jule::Bool _1aa0da99c_IsAnonIdent(jule::Str _40516_ident);
inline jule::Bool _1aa0db030_IsSpace(jule::I32 _41812_r);
inline jule::Bool _1aa0db52a_IsLetter(jule::I32 _42813_r);
inline jule::Bool _1aa0db99d_IsKeyword(jule::Str _44814_s);
inline jule::Bool _1aa0dbc67_IsDecimal(jule::I32 _45814_r);
inline jule::Bool _1aa0dc031_IsBinary(jule::I32 _46113_r);
inline jule::Bool _1aa0dc2ea_IsOctal(jule::I32 _46412_r);
inline jule::Bool _1aa0dc5b4_IsHex(jule::I32 _46710_r);
inline jule::Bool _1aa0dc87d_IsAssign(jule::U32 _48213_id);
inline jule::Bool _1aa0dcb47_IsPostfixOp(jule::U32 _49416_id);
inline jule::Bool _1aa0dce11_IsAssignOp(jule::U32 _50415_id);
inline _1ace263b7_Log _1aa0e192b_makeErr(jule::I32 _10112_row, jule::I32 _10122_col, jule::Ptr<_1aa0dd8a1_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args);
inline jule::Bool _1aa0e1ce4_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix);
inline jule::Str _1aa0e2168_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I32 _12332_i);
inline jule::Str _1aa0e2531_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I32 _15728_i);
inline jule::Str _1aa0e28a5_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I32 _16136_i);
inline jule::Str _1aa0e2c29_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I32 _18236_i);
inline jule::Str _1aa0e309d_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I32 _18735_i);
inline jule::Str _1aa0e3532_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I32 _19231_i);
inline jule::Str _1aa0e3774_commonNum(jule::Slice<jule::U8>* _21715_txt);
inline jule::Str _1aa0e3a3d_binaryNum(jule::Slice<jule::U8>* _24015_txt);
inline jule::Bool _1aa0e3db2_isFloatFmtE(jule::U8 _26216_b, jule::I32 _26225_i);
inline jule::Bool _1aa0e4236_isFloatFmtP(jule::U8 _26616_b, jule::I32 _26625_i);
inline jule::Bool _1aa0e45aa_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I32 _27038_i);
inline jule::Bool _1aa0e492e_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I32 _29133_i);
inline jule::Bool _1aa0e4ca3_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I32 _30434_i);
inline jule::Str _1aa0e529d_octalNum(jule::Slice<jule::U8>* _31914_txt);
inline jule::Str _1aa0e5479_hexNum(jule::Slice<jule::U8>* _36112_txt);
inline jule::Str _1aa0e57cb_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I32 _39428_n);
inline jule::Str _1aa0e5a95_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt);
inline jule::Str _1aa0e5d5e_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt);
inline jule::Str _1aa0e6128_hexByteEscape(jule::Slice<jule::U8>* _42219_txt);
inline jule::Str _1aa0e63e2_byteEscape(jule::Slice<jule::U8>* _42716_txt);
inline jule::Slice<_1ace263b7_Log> _1aa0eb3d6_Lex(jule::Ptr<_1aa0dd8a1_Fileset> _80712_f, jule::I32 _80725_mode);
inline void _1aaa2b761_lshiftUnsig(_1aa9b96cc_Const* _58821_c, _1aa9b96cc_Const* _58832_x);
inline void _1aaa2ba91_rshiftUnsig(_1aa9b96cc_Const* _59421_c, _1aa9b96cc_Const* _59432_x);
inline jule::Str _1aaab62bd_RealKindOf(jule::Str _4515_kind);
inline jule::I32 _1aaab6587_BitSizeOf(jule::Str _5914_k);
inline jule::Str _1aaab68c8_IntFromBits(jule::I32 _8716_bits);
inline jule::Str _1aaab6b5e_UintFromBits(jule::I32 _10517_bits);
inline jule::Str _1aaab6e28_FloatFromBits(jule::I32 _12318_bits);
inline jule::Bool _1aaab7a2d_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit);
inline jule::I32 _1aaab7ce7_BitSizeOfFloat(jule::F64 _16119_x);
inline jule::I32 _1aaab80b1_BitSizeOfInt(jule::I64 _17717_x);
inline jule::I32 _1aaab837a_BitSizeOfUint(jule::U64 _19718_x);
inline void _1aaab8523_UpdateTarget(void);
inline void _1aaab8699_init(void);
inline jule::I64 _1aaabc25d_MinI(jule::Str _6113_k);
inline jule::I64 _1aaabc56b_MaxI(jule::Str _7913_k);
inline jule::U64 _1aaabc835_MaxU(jule::Str _9713_k);
inline jule::F64 _1aaabcb76_Min(jule::Str _11512_k);
inline jule::F64 _1aaabce0c_Max(jule::Str _13312_k);
inline jule::Bool _1aaabe02e_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1aaabe33c_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1aaabe606_IsInt(jule::Str _4610_k);
inline jule::Bool _1aaabe947_IsFloat(jule::Str _5112_k);
inline jule::Bool _1aaabebcd_IsNum(jule::Str _5610_k);
inline jule::Bool _1aaabee97_IsSigNum(jule::Str _6113_k);
inline jule::Bool _1aab4854d_FindModuleFile(jule::Slice<_1ad0a39ea_Dir>* _1420_dirents);
inline jule::Str _1aab4885b_FindModuleFileDeep(jule::Str _2627_path);
inline jule::Slice<_1ace263b7_Log> _1aab48b25_CheckModuleFile(jule::Str* _4821_path);
inline jule::Bool _1aab493b7_IsPub(jule::Str _910_ident);
inline jule::Bool _1aaba0671_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1aab8736c_ToRune(jule::Str _2015_lit);
inline jule::Str _1aaba2563_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1aaba28a4_ToStr(jule::Str _4714_lit);
inline __jule_tuple__1ac931565_byte__jule_tuple_bool _1aaba2b3a_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1aaba2eae_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i);
inline void _1aaba3355_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i);
inline jule::I32 _1aac6a85c_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I32 _1241_i);
inline jule::Slice<jule::U8> _1aac72237_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1aac72523_FmtByDefault(_1ace17078_Builder* _4822_buf, jule::Any* _4846_arg);
inline void _1aac72941_applyFmtByDefault(_1ace17078_Builder* _8727_buf, jule::I32* _8755_j, jule::Slice<jule::Any> _8763_args);
inline void _1aac72d5e_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1ace17078_Builder* _9536_buf, jule::I32* _9564_j, jule::Slice<jule::Any> _9572_args);
inline jule::Slice<jule::U8> _1aac731d3_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1aac7537d_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1aaa3b221_Fn> _1aa5ce776_runtimeFindFn(jule::Ptr<_1aab2ee08_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1aa966767_Struct> _1aa5cebc7_runtimeFindStruct(jule::Ptr<_1aab2ee08_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1aaa415ab_parameterUsesGenerics(jule::Ptr<_1aaa3d179_ParamIns>* _40231_p, jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>* _40246_generics);
inline jule::Ptr<_1aabb8db5_Data> _1aaae5143_buildAsComptimeMethodData(jule::Ptr<_1aaa3e2ce_FnIns>* _205235_f);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1aaae5352_findComptimePackage(jule::Ptr<_1aab4c62e_sema>* _206029_s);
inline jule::Ptr<_1aabb8db5_Data> _1aaae56c6_buildComptimeTypeInfoData(jule::Ptr<_1aab4c62e_sema>* _206635_s, jule::Ptr<_1aabecdb6_Type>* _206650_t);
inline jule::Ptr<_1aabb8db5_Data> _1aaae5a17_buildComptimeValue(jule::Ptr<_1aabb8db5_Data>* _207428_d);
inline jule::Str _1aaae883e_toStrConstraints(jule::Ptr<_1aabeb4d0_InsGeneric> _14321_g);
inline jule::Bool _1aaae8c07_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1aabecdb6_Type>* _15434_g);
inline jule::Bool _1aaae8ec1_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1aab05032_scopeChecker> _1aaaeb8a8_newScopeCheckerBase(jule::Ptr<_1aab4c62e_sema>* _3229_s, jule::Ptr<_1aaa3e2ce_FnIns> _3243_owner);
inline jule::Ptr<_1aab05032_scopeChecker> _1aaaebc71_newScopeChecker(jule::Ptr<_1aab4c62e_sema>* _4025_s, jule::Ptr<_1aaa3e2ce_FnIns> _4039_owner);
inline jule::U32 _1aab176c6_removeEqFromOp(jule::U32 _208319_op);
inline void _1aab1797e_makeComptimeRange(jule::Ptr<_1aabb8db5_Data>* _211227_d);
inline jule::Bool _1aab17c15_canComptimeMatch(jule::Ptr<_1aabb8db5_Data>* _213526_d);
inline jule::Bool _1aab17ece_stmtIsDef(jule::Any* _214315_stmt);
inline jule::I32 _1aab18353_countMatchType(jule::Ptr<_1aab0232b_Match>* _215520_m, jule::Ptr<_1aabecdb6_Type>* _215532_t);
inline jule::Ptr<_1aab03b68_scopeLabel> _1aab187d7_findLabelParent(jule::Str* _217921_ident, jule::Ptr<_1aab05032_scopeChecker> _217937_scope);
inline jule::Bool _1aab19013_checkAssignMut(jule::Ptr<_1aab4c62e_sema>* _222624_s, jule::Ptr<_1aabb8db5_Data>* _222635_left, jule::Ptr<_1aabb8db5_Data> _222652_right, jule::Ptr<_1aa0d7ceb_Token> _222666_op);
inline jule::Bool _1aab194ec_checkAssign(jule::Ptr<_1aab4c62e_sema>* _223921_s, jule::Ptr<_1aabb8db5_Data>* _223936_left, jule::Ptr<_1aabb8db5_Data> _223953_right, jule::Ptr<_1aa0d7ceb_Token> _223967_op);
inline jule::Bool _1aab197b6_isValidAstStForNextSt(jule::Any* _225731_n);
inline jule::Bool _1aab19a80_isValidStForNextSt(jule::Any* _226824_st);
inline jule::Ptr<_1aac062ba_TypeSym> _1aab1e744_buildType(jule::Ptr<_1aa0ed817_TypeDecl> _6918_t);
inline jule::Ptr<_1aabba03c_Value> _1aab1ea52_buildExpr(jule::Ptr<_1aa102b4b_Expr> _7818_expr);
inline jule::Ptr<_1aabec1a1_TypeAlias> _1aab1ed1b_buildTypeAlias(jule::Ptr<_1aa95e551_TypeAliasDecl> _8723_decl);
inline jule::Ptr<_1aa965447_Field> _1aab2015c_buildField(jule::Ptr<_1aa962b70_FieldDecl> _9919_decl);
inline jule::Slice<jule::Ptr<_1aa965447_Field>> _1aab203e3_buildFields(jule::Slice<jule::Ptr<_1aa962b70_FieldDecl>>* _11021_decls);
inline jule::Ptr<_1aa966767_Struct> _1aab206ac_buildStruct(jule::Ptr<_1aa963566_StructDecl> _11820_decl);
inline jule::Ptr<_1aaa3974c_Param> _1aab20976_buildParam(jule::Ptr<_1aa9581b5_ParamDecl> _13019_decl);
inline jule::Slice<jule::Ptr<_1aaa3974c_Param>> _1aab20d50_buildParams(jule::Slice<jule::Ptr<_1aa9581b5_ParamDecl>>* _14121_decls);
inline jule::Ptr<_1aaa39186_RetType> _1aab21092_buildRetType(jule::Ptr<_1aa10170a_RetTypeDecl> _14921_decl);
inline jule::Ptr<_1aaa3b221_Fn> _1aab2135b_buildFunc(jule::Ptr<_1aa959617_FnDecl> _15918_decl);
inline jule::Slice<jule::Ptr<_1aaa3b221_Fn>> _1aab21625_buildMethods(jule::Slice<jule::Ptr<_1aa959617_FnDecl>>* _17722_decls);
inline jule::Slice<jule::Ptr<_1aac062ba_TypeSym>> _1aab218de_buildTraitInherits(jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>* _18528_inherits);
inline jule::Ptr<_1aaa46935_Trait> _1aab21ba8_buildTrait(jule::Ptr<_1aa963ca3_TraitDecl> _19319_decl);
inline jule::Ptr<_1aaa48580_EnumItem> _1aab21e72_buildEnumItem(jule::Ptr<_1aa960d5a_EnumItemDecl> _20322_decl);
inline jule::Slice<jule::Ptr<_1aaa48580_EnumItem>> _1aab2223b_buildEnumItems(jule::Slice<jule::Ptr<_1aa960d5a_EnumItemDecl>>* _21124_decls);
inline jule::Ptr<_1aaa490db_Enum> _1aab22736_buildEnum(jule::Ptr<_1aa96191b_EnumDecl> _21918_decl);
inline jule::Ptr<_1aaa4a21e_TypeEnumItem> _1aab22912_buildTypeEnumItem(jule::Ptr<_1aa962246_TypeEnumItemDecl> _22926_decl);
inline jule::Slice<jule::Ptr<_1aaa4a21e_TypeEnumItem>> _1aab22ba9_buildTypeEnumItems(jule::Slice<jule::Ptr<_1aa962246_TypeEnumItemDecl>>* _23728_decls);
inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aab22e73_buildTypeEnum(jule::Ptr<_1aa9628a6_TypeEnumDecl> _24522_decl);
inline jule::Ptr<_1aab70795_Var> _1aab2323c_buildVar(jule::Ptr<_1aa95a7c2_VarDecl> _25417_decl);
inline jule::Slice<jule::Ptr<_1aab70795_Var>> _1aab23506_buildVars(jule::Slice<jule::Ptr<_1aa95a7c2_VarDecl>> _27118_decls);
inline jule::Ptr<_1aaae9840_Impl> _1aab237c0_buildImpl(jule::Ptr<_1aa964413_Impl> _27918_decl);
inline jule::Bool _1aab2a0e0_isImplicitImport(jule::Ptr<_1aab2ee08_ImportInfo> _79221_imp);
inline jule::Ptr<_1aaa42524_SymTab> _1aab2c246_findVarFileInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _4430_files, jule::Ptr<_1aab70795_Var>* _4449_v);
inline jule::Ptr<_1aab70795_Var> _1aab2c6b9_findVarInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded);
inline jule::Ptr<_1aabec1a1_TypeAlias> _1aab2cae8_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded);
inline jule::Ptr<_1aa966767_Struct> _1aab2d09e_findStructInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded);
inline jule::Ptr<_1aaa3b221_Fn> _1aab2d49a_findFnInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded);
inline jule::Ptr<_1aaa46935_Trait> _1aab2d81e_findTraitInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _10328_files, jule::Str* _10347_ident);
inline jule::Ptr<_1aaa490db_Enum> _1aab2db93_findEnumInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _11527_files, jule::Str* _11546_ident);
inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aab2e127_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _12731_files, jule::Str* _12750_ident);
inline jule::Bool _1aab34b55_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p);
inline jule::Bool _1aab49a7c_isValidModelForRef(jule::Any* _1528_m);
inline _1ace263b7_Log _1aab4a0aa_compilerErr(jule::Ptr<_1aa0d7ceb_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args);
inline void _1aab4a396_appendRetVars(jule::Slice<jule::Ptr<_1aab70795_Var>>* _6323_dest, jule::Ptr<_1aaa3e2ce_FnIns>* _6342_f);
inline void _1aab4a6c6_appendParamVars(jule::Slice<jule::Ptr<_1aab70795_Var>>* _9325_dest, jule::Ptr<_1aaa3e2ce_FnIns>* _9344_f);
inline void _1aab4a9b2_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>* _15134_dest, jule::Ptr<_1aaa3e2ce_FnIns>* _15159_f);
inline jule::Ptr<_1aaa42524_SymTab> _1aab4ad36_findFile(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _19218_files, jule::Ptr<_1aa0dd8a1_Fileset>* _19237_handler);
inline void _1aab4b1cc_pushSuggestion(_1ace263b7_Log* _20130_log, jule::Str _20148_fmt, jule::Slice<jule::Any> _20168_args);
inline void _1aab6d61c_pushImplemented(jule::Ptr<_1aaa46935_Trait> _277824_t, jule::Ptr<_1aa966767_Struct>* _277840_d);
inline void _1aab6d908_pushImplements(jule::Ptr<_1aa966767_Struct>* _279624_s, jule::Ptr<_1aaa46935_Trait> _279640_t);
inline void _1aab6dd59_pushRuntimeToStr(jule::Ptr<_1aab4c62e_sema>* _281426_s, jule::Ptr<_1aabecdb6_Type>* _281441_t, jule::Ptr<_1aa0d7ceb_Token>* _281456_token, jule::Ptr<_1aab1cd80_ReferenceStack> _28156_refers);
inline jule::Bool _1aab6e123_isValidImpAlias(jule::Str _283024_alias);
inline jule::Bool _1aaba39a4_traitHasReferenceReceiver(jule::Ptr<_1aaa46935_Trait>* _1631_t);
inline jule::Bool _1aaba3d6c_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1aabb8db5_Data>* _3133_d);
inline jule::Bool _1aaba41e1_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1aabb8db5_Data>* _3630_d);
inline jule::Bool _1aaba45a9_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1aabb8db5_Data>* _5932_d);
inline jule::Bool _1aaba492d_intAssignable(jule::Str _8818_kind, jule::Ptr<_1aabb8db5_Data>* _8830_d);
inline void _1aabb0e23_checkMutRiskOfStructLit(jule::Ptr<_1aab4c62e_sema>* _94533_s, jule::Ptr<_1aaa2ed80_StructLitExpr>* _94544_m);
inline jule::Ptr<_1aabecdb6_Type> _1aabb7127_lenKind(void);
inline jule::Bool _1aabb7479_isGoodValueToInfer(jule::Ptr<_1aabb8db5_Data>* _144124_d);
inline jule::Ptr<_1aa0ecc34_Directive> _1aabe463d_findDirective(jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>* _442123_directives, jule::Str _442154_d);
inline jule::Any _1aabe4a06_findBuiltinsImport(jule::Str* _443024_ident, jule::Ptr<_1aab2ee08_ImportInfo> _443036_imp);
inline void _1aabe4c37_fitBitsize(jule::Ptr<_1aabb8db5_Data>* _443920_d);
inline void _1aabe5067_makeStructLitAlloc(jule::Ptr<_1aabb8db5_Data>* _446828_d, jule::Ptr<_1aaa2ed80_StructLitExpr>* _446843_lit);
inline jule::Ptr<_1aab70795_Var> _1aabe53db_buildErrorVar(jule::Ptr<_1aaaec832_Scope>* _447923_s, jule::Ptr<_1aa106875_FnCallExpr>* _447939_fc);
inline jule::Any _1aabe5760_findBuiltinsSema(jule::Str* _449422_ident, jule::Ptr<_1aab4c62e_sema> _449438_s);
inline jule::Bool _1aabe5a29_isOkForShifting(jule::Ptr<_1aabb8db5_Data>* _450925_d);
inline jule::Bool _1aabe5e03_isInstancedStruct(jule::Ptr<_1aa969605_StructIns> _452622_s);
inline jule::Bool _1aabe6200_isPtrArithmeticCompatible(jule::Ptr<_1aabb8db5_Data>* _453035_l, jule::Ptr<_1aabb8db5_Data>* _453050_r);
inline void _1aabe670b_applyRuntimeToStr(jule::Ptr<_1aab4c62e_sema>* _455127_s, jule::Ptr<_1aabecdb6_Type>* _455142_from, jule::Ptr<_1aabecdb6_Type>* _455160_to, jule::Ptr<_1aa0d7ceb_Token>* _45527_token, jule::Ptr<_1aab1cd80_ReferenceStack> _455233_refers);
inline void _1aabe6c17_applyCastKindModel(jule::Ptr<_1aab4c62e_sema>* _456628_s, jule::Ptr<_1aabb8db5_Data>* _456643_d, jule::Ptr<_1aabecdb6_Type>* _456658_t, jule::Ptr<_1aa0d7ceb_Token>* _45677_token, jule::Ptr<_1aab1cd80_ReferenceStack> _456733_refers);
inline void _1aabe7223_applyCastKind(jule::Ptr<_1aab4c62e_sema>* _457623_s, jule::Ptr<_1aabb8db5_Data>* _457638_d, jule::Ptr<_1aabecdb6_Type>* _457653_t, jule::Ptr<_1aa0d7ceb_Token>* _45777_token, jule::Ptr<_1aab1cd80_ReferenceStack> _457733_refers);
inline jule::Ptr<_1aabb8db5_Data> _1aabe7432_buildVoidData(void);
inline jule::Str _1aabe791b_checkDataForIntegerIndexing(jule::Ptr<_1aab4c62e_sema>* _458837_s, jule::Ptr<_1aabb8db5_Data>* _458852_d, jule::Ptr<_1aa0d7ceb_Token>* _45897_token, jule::Ptr<_1aab1cd80_ReferenceStack> _458933_refers);
inline void _1aabe7e27_applyCastModelByEnum(jule::Ptr<_1aab4c62e_sema>* _461430_s, jule::Ptr<_1aabb8db5_Data>* _461445_d, jule::Ptr<_1aaa490db_Enum> _461459_e, jule::Ptr<_1aa0d7ceb_Token>* _46157_token, jule::Ptr<_1aab1cd80_ReferenceStack> _461533_refers);
inline void _1aabe8444_castConstByType(jule::Str* _462221_t, jule::Ptr<_1aabb8db5_Data>* _462234_d);
inline void _1aabe8620_updateModelToGenericIns(jule::Any* _465633_m, jule::Ptr<_1aaa3e2ce_FnIns>* _465647_f);
inline jule::Bool _1aabe8994_pushSubIdentFromExpr(jule::Any _466729_expr, jule::Ptr<_1aa0ee1db_SubIdentTypeDecl>* _466755_t);
inline jule::Str _1aabe8c5d_constoa(jule::Ptr<_1aa9b96cc_Const>* _469013_c);
inline jule::Ptr<_1aabb8db5_Data> _1aabe9302_evalEnumStatic(jule::Ptr<_1aab4c62e_sema>* _470124_s, jule::Ptr<_1aaa490db_Enum>* _470139_enm, jule::Ptr<_1aaa48580_EnumItem>* _470156_item, jule::Ptr<_1aa0d7ceb_Token>* _47027_token, jule::Ptr<_1aab1cd80_ReferenceStack> _470233_refers);
inline jule::Ptr<_1aaa2ed80_StructLitExpr> _1aabe95bb_isLitBased(jule::Any* _471920_m);
inline void _1aabe98a7_makeImplicitDeref(jule::Ptr<_1aabb8db5_Data>* _473627_d, jule::Ptr<_1aa0d7ceb_Token> _473641_baseToken);
inline void _1bdc946b9_updateRefer(jule::Ptr<_1aab1cd80_ReferenceStack> _474723_ref, jule::Ptr<_1aaa3e2ce_FnIns>* _474746_old, jule::Ptr<_1aaa3e2ce_FnIns>* _474759_new);
inline void _1aabea039_makeVariadic(jule::Ptr<_1aabb8db5_Data>* _475522_d, jule::Ptr<_1aabecdb6_Type> _475536_elem);
inline jule::Bool _1aabea468_isVarCaptured(jule::Ptr<_1aab05032_scopeChecker> _476818_r, jule::Ptr<_1aab05032_scopeChecker> _476840_s, jule::Ptr<_1aab70795_Var> _476858_v);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1aabea7dc_findNamespace(jule::Trait _478522_lookup, jule::Str _478538_namespace);
inline jule::Bool _1aac1eab9_kindUsesGenerics(jule::Ptr<_1aabecdb6_Type>* _178826_k, jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>* _178837_generics);
inline jule::Bool _1aac1ee82_hasDirective(jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>* _179822_directives, jule::Str _179853_tag);
inline jule::Bool _1aac2024b_canGetPtr(jule::Ptr<_1aabb8db5_Data>* _180719_d);
inline jule::Bool _1aac2058c_isBuiltinStrConvertable(jule::Ptr<_1aabecdb6_Type>* _181033_t);
inline jule::Ptr<_1aac06bc2_Prim> _1aac20823_buildPrimType(jule::Str _181418_kind);
inline void _1aac210e8_applyImplicitCast(jule::Ptr<_1aab4c62e_sema>* _184227_s, jule::Ptr<_1aabecdb6_Type>* _184242_dest, jule::Ptr<_1aabb8db5_Data>* _184260_d, jule::Ptr<_1aa0d7ceb_Token>* _18437_token, jule::Ptr<_1aab1cd80_ReferenceStack> _184333_refers);
inline jule::Bool _1aac214c2_validTypeForXof(jule::Ptr<_1aabecdb6_Type>* _187225_t);
inline jule::Ptr<_1aa969605_StructIns> _1aac217be_initNewStructType(jule::Str _187822_ident, jule::Ptr<_1aabecdb6_Type> _187838_source);
inline __jule_tuple_x_1aaa42524_SymTab__jule_tuple_s_1ace263b7_Log _1aac247c2_buildSymbols(jule::Ptr<_1aa0eb8ae_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1aab23d86_symBuilder> _1667_owner);
inline void _1aac24b02_collectImplicitImports(jule::Ptr<_1aab4c62e_sema>* _3132_s, jule::Ptr<_1aaa42524_SymTab>* _3147_file);
inline __jule_tuple_x_1aab3267a_Package__jule_tuple_s_1ace263b7_Log _1aac25031_analyzePackage(jule::Slice<jule::Ptr<_1aa0eb8ae_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I32* _4570_flags);
inline __jule_tuple_x_1aab3267a_Package__jule_tuple_s_1ace263b7_Log _1aac254d7_AnalyzePackage(jule::Slice<jule::Ptr<_1aa0eb8ae_AST>> _9523_files, jule::Trait _9547_importer, jule::I32 _9567_flags);
inline jule::Ptr<_1aaa3e2ce_FnIns> _1aac75cda_findBuiltinFunc(jule::Str* _2021_ident);
inline jule::Ptr<_1aabec1a1_TypeAlias> _1aac7623b_primTypeAlias(jule::Str _5718_ident, jule::Ptr<_1aabecdb6_Type>* _5735_k, jule::Bool _5745_strict);
inline jule::Ptr<_1aab70795_Var> _1aac79ae1_findBuiltinVar(jule::Str* _9820_ident);
inline jule::Ptr<_1aabec1a1_TypeAlias> _1aac79e32_findBuiltinTypeAlias(jule::Str _14825_ident);
inline jule::Any _1aac7a1b8_findBuiltinDef(jule::Str* _20920_ident);
inline jule::Any _1aac7a482_findBuiltinDefStdMem(jule::Str* _22526_ident);
inline jule::Any _1aac7a74b_findBuiltinDefStdComptime(jule::Str* _24131_ident);
inline jule::Any _1aac7ab25_findBuiltinDefStdJuleIntegrated(jule::Str* _26637_ident);
inline jule::Any _1aac7ae22_findPackageBuiltinDef(jule::Str* _28127_linkPath, jule::Str* _28143_ident);
inline jule::Ptr<_1aabb8db5_Data> _1aac7b296_builtinCallerError(jule::Ptr<_1aabbad84_eval>* _29428_e, jule::Ptr<_1aa106875_FnCallExpr>* _29443_fc);
inline jule::Ptr<_1aabb8db5_Data> _1aac7b6c5_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _32528_e, jule::Ptr<_1aa106875_FnCallExpr>* _32543_fc, jule::Ptr<_1aabb8db5_Data>* );
inline jule::Ptr<_1aabb8db5_Data> _1aac7bb04_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _35230_e, jule::Ptr<_1aa106875_FnCallExpr>* _35245_fc, jule::Ptr<_1aabb8db5_Data>* _35272_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac7c033_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _36426_e, jule::Ptr<_1aa106875_FnCallExpr>* _36441_fc, jule::Ptr<_1aabb8db5_Data>* _36468_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac7c462_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _41828_e, jule::Ptr<_1aa106875_FnCallExpr>* _41843_fc, jule::Ptr<_1aabb8db5_Data>* );
inline jule::Ptr<_1aabb8db5_Data> _1aac7c891_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _44427_e, jule::Ptr<_1aa106875_FnCallExpr>* _44442_fc, jule::Ptr<_1aabb8db5_Data>* _44469_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac7d001_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _49529_e, jule::Ptr<_1aa106875_FnCallExpr>* _49544_fc, jule::Ptr<_1aabb8db5_Data>* _49571_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac7d3ca_callerCopySlice(jule::Ptr<_1aabb8db5_Data>* _61525_dest, jule::Ptr<_1aabbad84_eval>* _61543_e, jule::Ptr<_1aa106875_FnCallExpr>* _61558_fc, jule::Ptr<_1aabb8db5_Data>* _61585_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac7d809_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _64927_e, jule::Ptr<_1aa106875_FnCallExpr>* _64942_fc, jule::Ptr<_1aabb8db5_Data>* _64969_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac7db7d_callerLenSlice(jule::Ptr<_1aabb8db5_Data>* _67424_expr, jule::Ptr<_1aabb8db5_Data>* _67442_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac7e002_callerLenMap(jule::Ptr<_1aabb8db5_Data>* _68222_expr, jule::Ptr<_1aabb8db5_Data>* _68240_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac7e376_callerLenArr(jule::Ptr<_1aabb8db5_Data>* _69022_expr, jule::Ptr<_1aabb8db5_Data>* _69040_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac7e6ea_callerLenStr(jule::Ptr<_1aabb8db5_Data>* _69722_expr, jule::Ptr<_1aabb8db5_Data>* _69740_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac7ea6e_callerLenComptime(jule::Ptr<_1aabb8db5_Data>* _71027_d, jule::I32 _71037_n);
inline jule::Ptr<_1aabb8db5_Data> _1aac7ee9d_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _71726_e, jule::Ptr<_1aa106875_FnCallExpr>* _71741_fc, jule::Ptr<_1aabb8db5_Data>* _71768_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac80322_callerCapSlice(jule::Ptr<_1aabb8db5_Data>* _75724_expr, jule::Ptr<_1aabb8db5_Data>* _75742_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac80751_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _76526_e, jule::Ptr<_1aa106875_FnCallExpr>* _76541_fc, jule::Ptr<_1aabb8db5_Data>* _76568_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac80c3a_callerDeleteMap(jule::Ptr<_1aabbad84_eval>* _78825_e, jule::Ptr<_1aa106875_FnCallExpr>* _78840_fc, jule::Ptr<_1aabb8db5_Data>* _78867_expr, jule::Ptr<_1aabb8db5_Data>* _78885_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac81169_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _81729_e, jule::Ptr<_1aa106875_FnCallExpr>* _81744_fc, jule::Ptr<_1aabb8db5_Data>* _81771_d);
inline jule::Ptr<_1aabb8db5_Data> _1aac81598_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _84040_e, jule::Ptr<_1aa106875_FnCallExpr>* _84055_fc, jule::Ptr<_1aabb8db5_Data>* );
inline jule::Ptr<_1aabb8db5_Data> _1aac819c7_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _87641_e, jule::Ptr<_1aa106875_FnCallExpr>* _87656_fc, jule::Ptr<_1aabb8db5_Data>* );
inline jule::Ptr<_1aabb8db5_Data> _1aac81e06_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _89638_e, jule::Ptr<_1aa106875_FnCallExpr>* _89653_fc, jule::Ptr<_1aabb8db5_Data>* );
inline jule::Ptr<_1aabb8db5_Data> _1aac82577_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _90838_e, jule::Ptr<_1aa106875_FnCallExpr>* _90853_fc, jule::Ptr<_1aabb8db5_Data>* );
inline jule::Ptr<_1aabb8db5_Data> _1aac829a6_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _92139_e, jule::Ptr<_1aa106875_FnCallExpr>* _92154_fc, jule::Ptr<_1aabb8db5_Data>* );
inline jule::Ptr<_1aabb8db5_Data> _1aac82dd5_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _93443_e, jule::Ptr<_1aa106875_FnCallExpr>* _93458_fc, jule::Ptr<_1aabb8db5_Data>* );
inline jule::Ptr<_1aabb8db5_Data> _1aac83314_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _99435_e, jule::Ptr<_1aa106875_FnCallExpr>* _99450_fc, jule::Ptr<_1aabb8db5_Data>* );
inline jule::Ptr<_1aabb8db5_Data> _1aac83743_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _101936_e, jule::Ptr<_1aa106875_FnCallExpr>* _101951_fc, jule::Ptr<_1aabb8db5_Data>* );
inline jule::Ptr<_1aabb8db5_Data> _1aac83b72_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _104433_e, jule::Ptr<_1aa106875_FnCallExpr>* _104448_fc, jule::Ptr<_1aabb8db5_Data>* );
inline jule::Ptr<_1aabb8db5_Data> _1aac840a1_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _106744_e, jule::Ptr<_1aa106875_FnCallExpr>* _106759_fc, jule::Ptr<_1aabb8db5_Data>* _106786_d);
inline jule::Ptr<_1ab57e7e1_FileInfo> _1ab5c9990_ParseFile(jule::Ptr<_1aa0dd8a1_Fileset> _2318_f);
inline __jule_tuple_x_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log _1ab5ca067_parseFileset(jule::Ptr<_1aa0dd8a1_Fileset> _5521_f);
inline jule::Ptr<_1aa957978_ScopeTree> _1ab5ca8e7_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1ab5cac7c_isSt(jule::Ptr<_1aa0d7ceb_Token> _149_current, jule::Ptr<_1aa0d7ceb_Token> _1433_prev);
inline jule::Bool _1ab5cb101_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _2026_tokens, jule::I32* _2052_i);
inline __jule_tuple_int__jule_tuple_bool _1ab5cb4b9_nextStPos(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _3415_tokens, jule::I32 _3440_start);
inline __jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_bool _1ab5cb83d_skipSt(jule::I32* _9616_i, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _9628_tokens);
inline jule::Slice<jule::Ptr<_1ab5cbb6d_stmt>> _1ab5cc025_splitStmts(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _11720_tokens);
inline jule::Bool _1ab5e513c_isTypeOp(jule::U32* _83714_id);
inline jule::Bool _1ab5e544a_isTypeRange(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _84421_tokens);
inline jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _1ab5e5714_getBlockExpr(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _87722_tokens);
inline __jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_sx_1aa0d7ceb_Token _1ab5e5acc_splitDelim(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _90920_tokens, jule::U32 _90945_delim);
inline jule::I32 _1ab5e5d96_findLowestPrecOp(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _94822_tokens);
inline jule::Ptr<_1aa104466_IdentExpr> _1ab5e6160_buildIdentExpr(jule::Ptr<_1aa0d7ceb_Token>* _101324_token);
inline __jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_int _1ab5e6429_getRangeExprTokens(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _102128_tokens);
inline jule::Bool _1ab5e6803_isAnonFnHead(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _104418_tokens);
inline jule::Bool _1ab5e74a2_checkAssignTokens(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _1623_tokens);
inline _1ace263b7_Log _1ab5e845e_makeErr(jule::I32 _1212_row, jule::I32 _1222_col, jule::Ptr<_1aa0dd8a1_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args);
inline jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _1ab5e898c_range(jule::I32* _3015_i, jule::U32 _3023_open, jule::U32 _3040_close, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _3063_tokens);
inline __jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_sx_1aa0d7ceb_Token _1ab5e8c56_rangeLast(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _6019_tokens);
inline __jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log _1ab5e920c_parts(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _9815_tokens, jule::U32 _9840_id, jule::Bool _9855_exprMust);
inline jule::U32 _1ab5e9493_getCloseOfBrace(jule::U32 _12820_left);
inline _1ace263b7_Log _1ab5e98c2_compilerErr(jule::Ptr<_1aa0d7ceb_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args);
inline void _1ab5e9c68_pushSuggestion(_1ace263b7_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args);
inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60abd0_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1aa811348_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1aa811579_checkArch(jule::Str _2814_arg);
inline void _1aa812bda_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1aa812e60_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1aa81324b_initVars(jule::Slice<jule::Str>* _5518_vars, _1aa8128bb_CompileInfo* _5532_info);
inline jule::I32 _1aa813614_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident);
inline jule::Slice<jule::U8> _1ab610003_readBuff(jule::Str _1713_path);
inline _1ace263b7_Log _1ab610201_flatCompilerErr(jule::Str _2820_text);
inline jule::Ptr<_1aaa3b221_Fn> _1aac843c0_RuntimeFindFn(jule::Ptr<_1aab2ee08_ImportInfo>* _723_runtime, jule::Str _751_ident);
inline jule::Ptr<_1aa966767_Struct> _1aac84788_RuntimeFindStruct(jule::Ptr<_1aab2ee08_ImportInfo>* _1627_runtime, jule::Str _1655_ident);
inline jule::Uintptr _1aac854ae_TypeData(jule::Any* _1414_m);
inline jule::Bool _1aac85877_equalConst(jule::Ptr<_1aa9b96cc_Const> _1815_l, jule::Ptr<_1aa9b96cc_Const> _1836_r);
inline jule::Bool _1aac85beb_equalCasting(jule::Ptr<_1aaa30633_CastingExpr> _3717_l, jule::Ptr<_1aaa30633_CastingExpr> _3740_r);
inline jule::Bool _1aac860b4_equalUnary(jule::Ptr<_1aaa2e4ab_UnaryExpr> _4415_l, jule::Ptr<_1aaa2e4ab_UnaryExpr> _4436_r);
inline jule::Bool _1aac86438_equalIndexing(jule::Ptr<_1aaa31865_IndexingExpr> _5118_l, jule::Ptr<_1aaa31865_IndexingExpr> _5142_r);
inline jule::Bool _1aac867ac_equalBinary(jule::Ptr<_1aaa2e0d2_BinaryExpr> _5616_l, jule::Ptr<_1aaa2e0d2_BinaryExpr> _5638_r);
inline jule::Bool _1aac86b31_EqualModels(jule::Any _6716_l, jule::Any _6731_r);
inline void _1ab614b1d_pushPasses(jule::Ptr<_1aab3267a_Package>* _12820_p, jule::Slice<jule::Str>* _12844_passes);
inline jule::Slice<jule::Str> _1ab614ed6_getAllUniquePasses(jule::Ptr<_1aab3267a_Package>* _14528_pkg, jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>> _14553_uses);
inline _1aa8128bb_CompileInfo _1ab6151e5_buildCompileInfo(void);
inline void _1ab61549d_pushRuntimeToAST(jule::Ptr<_1aa0eb8ae_AST>* _18426_f);
inline void _1ab615c84_IterPackages(jule::Ptr<_1ab61326a_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1aab3267a_Package>*> _731_f);
inline void _1ab616009_IterFiles(jule::Ptr<_1aab3267a_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1aaa42524_SymTab>*> _1640_f);
inline void _1ab6162e5_IterTraitMethods(jule::Ptr<_1aaa46935_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1aaa3b221_Fn>*> _2443_f);
inline jule::Bool _1ab618528_IsForwarded(jule::Ptr<_1aaaec832_Scope>* _1117_s);
inline jule::Bool _1ab618836_IsExprComesFromBind(jule::Ptr<_1aabb8db5_Data>* _2725_d);
inline jule::Bool _1ab618b00_IsAny(jule::Ptr<_1aabecdb6_Type>* _3915_t);
inline jule::Bool _1ab618e41_IsClosure(jule::Ptr<_1aaa31d1b_AnonFnExpr>* _4815_m);
inline jule::Bool _1ab619282_IsTraitMethod(jule::Ptr<_1aa969605_StructIns>* _5123_owner, jule::Ptr<_1aaa3e2ce_FnIns>* _5149_f);
inline jule::Bool _1ab619606_IsStdPackage(jule::Str _6517_f, jule::Str _6525_p);
inline jule::Bool _1ab619c99_IsStructBinded(jule::Ptr<_1aa969605_StructIns> _7919_s);
inline jule::Ptr<_1aa0ecc34_Directive> _1ab61a4e7_FindDirective(jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>* _923_directives, jule::Str _954_tag);
inline jule::Bool _1ab61a8b0_HasDirective(jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>* _1918_directives, jule::Str _1949_tag);
inline jule::I32 _1ab61b3e9_FindTraitTypeOffsetS(jule::Ptr<_1aaa46935_Trait> _3725_t, jule::Ptr<_1aa969605_StructIns> _3746_s);
inline jule::I32 _1ab61b76d_FindTraitTypeOffset(jule::Ptr<_1aaa46935_Trait> _6024_t, jule::Ptr<_1aabecdb6_Type> _6045_k);
inline jule::Ptr<_1aaa3e2ce_FnIns> _1ab61bae2_FindFnGenericInstance(jule::Ptr<_1aaa3b221_Fn>* _8431_f, jule::Slice<jule::Ptr<_1aabecdb6_Type>> _8445_generics);
inline jule::Ptr<_1aa969605_StructIns> _1ab61be66_FindStructGenericInstance(jule::Ptr<_1aa966767_Struct>* _10035_s, jule::Slice<jule::Ptr<_1aabecdb6_Type>> _10053_generics);
inline jule::Ptr<_1aab2ee08_ImportInfo> _1ab61c3ea_SelectImport(jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>> _11521_imports, jule::Str _11551_linkpath);
inline jule::I32 _1ab61c6e7_FindVar(jule::Ptr<_1aab70795_Var> _12512_v, jule::Slice<jule::Ptr<_1aab70795_Var>> _12527_vars);
inline jule::Str _1ab61c9b1_GetBindIdent(jule::Ptr<_1aabecdb6_Type> _13617_t);
inline jule::Bool _1be6ec165_isOrdered(jule::Ptr<_1aab70795_Var>* _1418_t, jule::Slice<jule::Ptr<_1aab70795_Var>> _1425_s);
inline jule::Bool _1be702c5e_isOrdered(jule::Ptr<_1aa966767_Struct>* _1418_t, jule::Slice<jule::Ptr<_1aa966767_Struct>> _1425_s);
inline void _1be6e93a4_order(jule::Slice<jule::Ptr<_1aab70795_Var>> _3717_s);
inline void _1be6e9ad0_order(jule::Slice<jule::Ptr<_1aa966767_Struct>> _3717_s);
inline void _1be902458_Reverse(jule::Slice<jule::Any> _7327_s);
inline void _1c024b037_Reverse(jule::Slice<jule::U8> _7327_s);
inline void _1be901127_rotateLeft(jule::Slice<jule::Any> _4222_s, jule::I32 _4230_r);
inline void _1c0249c4a_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I32 _4230_r);
inline void _1be8edaa3_rotateRight(jule::Slice<jule::Any> _4823_s, jule::I32 _4831_r);
inline void _1c024771a_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I32 _4831_r);
inline jule::Bool _1be8eae57_overlaps(jule::Slice<jule::Any> _5316_a, jule::Slice<jule::Any> _5324_b);
inline jule::Bool _1c0244b13_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b);
inline jule::Slice<jule::Any> _1be8e568d_Insert(jule::Slice<jule::Any> _7226_s, jule::I32 _7232_i, jule::Slice<jule::Any> _7244_v);
inline jule::Slice<jule::U8> _1c0240999_Insert(jule::Slice<jule::U8> _7226_s, jule::I32 _7232_i, jule::Slice<jule::U8> _7244_v);
inline void _1ac7b146c_EliminateDefines(jule::Ptr<_1ab61326a_IR>* _37826_ir);
inline jule::Bool _1ac7b177a_isAllMethodsLive(jule::Ptr<_1aa966767_Struct> _38421_s);
inline void _1ac7b55e7_eliminateDeadCodeOfScope(jule::Ptr<_1aaaec832_Scope> _21833_s);
inline void _1ac7b586c_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1aaa3b221_Fn>>* _23033_funcs);
inline void _1ac7b5a9d_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1aa966767_Struct>>* _23937_structs);
inline void _1ac7b5d56_eliminateFunctionsScopePackage(jule::Ptr<_1aab3267a_Package>* _24740_pkg);
inline void _1ac7b6054_eliminateScopePackage(jule::Ptr<_1aab3267a_Package>* _25431_pkg);
inline void _1ac7b6285_EliminateScopes(jule::Ptr<_1ab61326a_IR>* _25925_ir);
inline void _1ac3da7b1_possibleNilRemove(jule::Ptr<_1ac3d97d2_nils>* _7527_n, jule::Any _7537_m);
inline jule::Bool _1ac3dab79_isGuaranteedNonNilExpr(jule::Ptr<_1ac3d97d2_nils>* _8132_n, jule::Any _8142_m);
inline jule::Bool _1ac3dae43_isNilValidType(jule::Ptr<_1aabecdb6_Type> _8923_t);
inline jule::Uintptr _1ac3db284_getNilVar(jule::Any _9114_m);
inline jule::Bool _1ac6827c2_isConstantValidConditionalCase(jule::Ptr<_1aaaecc0b_If>* _100736_i);
inline jule::Bool _1ac682ad0_isUnreachableExpr(jule::Any* _101623_expr);
inline jule::Bool _1ac682d99_isConstantValidMatchCase(jule::Ptr<_1aab02b23_Case>* _103130_case);
inline jule::Bool _1ac6831da_isUnreachableConditionalCase(jule::Ptr<_1aaaecc0b_If>* _104034_i);
inline jule::Bool _1ac683471_isUnreachableMatchCase(jule::Ptr<_1aab02b23_Case>* _104428_case);
inline __jule_tuple_bool__jule_tuple_u64 _1ac68b05b_checkForBitShiftOpt(jule::Ptr<_1aaa2dad7_OperandExpr>* _96029_l, jule::Ptr<_1aaa2dad7_OperandExpr>* _96057_r);
inline jule::Bool _1ac68b424_areSameLvalueExpr(jule::Any* _97923_l, jule::Any* _97939_r);
inline void _1ac68d4d1_possibleDynamicRemove(jule::Ptr<_1ac68c447_dynamic>* _7631_d, jule::Any _7644_m);
inline jule::Bool _1ac68d7de_isDynamicValidType(jule::Ptr<_1aabecdb6_Type> _8227_t);
inline jule::Ptr<_1aabecdb6_Type> _1ac68dc1d_isTypeGuaranteedDynamicData(jule::Ptr<_1ac68c447_dynamic>* _8437_dy, jule::Ptr<_1aabecdb6_Type> _8455_t, jule::Any _8475_m);
inline jule::Uintptr _1ac68e05e_getDynamicVar(jule::Any _11218_m);
inline void _1bea3e2cb__removeDeads(jule::Ptr<_1ac69232b_boundary>* _2340_alive, jule::Ptr<_1ac69232b_boundary>* _2366_other, jule::Uintptr _2391_invalid);
inline void _1bea411ce__removeDeads(jule::Ptr<_1ac3d97d2_nils>* _2340_alive, jule::Ptr<_1ac3d97d2_nils>* _2366_other, jule::Uintptr _2391_invalid);
inline void _1bea44666__removeDeads(jule::Ptr<_1ac68c447_dynamic>* _2340_alive, jule::Ptr<_1ac68c447_dynamic>* _2366_other, jule::Uintptr _2391_invalid);
inline jule::Bool _1ac693393_isValidBoundaryInfo(jule::Any _8524_m);
inline jule::I32 _1ac69375b_fitsMaxSize(jule::Slice<jule::Any> _9016_max, jule::Any _9035_expr);
inline jule::Bool _1ac693ad0_fitsSize(jule::Any _9913_e1, jule::Any _9929_e2);
inline void _1ac693e10_possibleBoundaryRemove(jule::Ptr<_1ac69232b_boundary>* _12532_b, jule::Any _12546_model);
inline jule::Bool _1ac6941c9_isBoundaryRiskyType(jule::Ptr<_1aabecdb6_Type> _13728_t);
inline jule::Bool _1ac694493_isBoundaryValidType(jule::Ptr<_1aabecdb6_Type> _14228_t);
inline jule::Uintptr _1ac69475c_getBoundaryVar(jule::Any _14419_m);
inline void _1ac6985c9_PushOptLevel(jule::I32 _4117_level);
inline void _1ac7b9b3a_detectEnabled(void);
inline jule::U64 _1ac889cc6_unix(void);
inline jule::Bool _1ac7c498b_isCopyOptimizable(jule::Ptr<_1aabb8db5_Data>* _115523_expr);
inline jule::Bool _1ac7c4d54_isIterCopyOptimizable(jule::Ptr<_1aabb8db5_Data>* _116627_expr, jule::Ptr<_1aab70795_Var>* _116647_v);
inline jule::Bool _1ac7c5283_captureVarHandling(jule::Ptr<_1ac894d58_ObjectCoder>* _117328_oc, jule::Ptr<_1aaa31d1b_AnonFnExpr>* _117351_m, jule::Ptr<_1aab70795_Var>* _117378_v);
inline jule::Str _1ac7d7a6a_decomposeCommonEsq(jule::U8 _193223_b);
inline jule::Str _1ac7d7d78_sbtoa(jule::U8 _195910_b);
inline void _1ac7d8164_cstrBytes(_1ace17078_Builder* _197919_s, jule::Str _197940_ctx);
inline void _1ac7d8494_cstrLit(_1ace17078_Builder* _198517_s, jule::Str _198538_ctx);
inline void _1ac7d883a_ftoa(_1ace17078_Builder* _199114_s, jule::F64 _199135_f, jule::I32 _199143_bitsize);
inline void _1ac7d8b26_itoa(_1ace17078_Builder* _200914_s, jule::I64 _200935_x);
inline void _1ac7d8e12_utoa(_1ace17078_Builder* _202614_s, jule::U64 _202635_x);
inline void _1ac7d9561_structBinary(_1ace17078_Builder* _204022_buf, jule::Ptr<_1aa969605_StructIns>* _204050_s, jule::Str* _204072_l, jule::Str* _20413_r, jule::U32 _204111_op, jule::Str _204126_kind);
inline jule::Slice<jule::U8> _1ac8a2b57_concatAllParts(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _137219_parts);
inline jule::Bool _1ac8b1a45_ableToInit(jule::Ptr<_1aabecdb6_Type>* _45920_t);
inline jule::Bool _1ac8b1d20_shouldInitialized(jule::Ptr<_1aabecdb6_Type>* _46627_t);
inline void _1bb09d7a6_printErrorMessage(jule::Str _3022_msg);
inline void _1bb09da2b_help(jule::Slice<jule::Str>* _3510_args);
inline void _1bb09dc5c_version(jule::Slice<jule::Str>* _6313_args);
inline void _1bb09de6b_toolDistos(void);
inline void _1bb09e0d1_toolDistarch(void);
inline void _1bb09e2ce_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1bb09e510_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1bb09e851_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1bb09ea93_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1bb09ec3b_showInfo(void);
void _1bb09edb2_main(void);
inline void _1ac927968_init(void);
inline jule::Ptr<_1ad0a8604_File> _1ac927c32_openOutput(jule::Str* _3016_path);
inline void _1ac927dca_clearObjects(void);
inline void _1ac9281d8_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd);
inline jule::Bool _1ac9284a2_isCppSourceFile(jule::Str _8620_path);
inline void _1ac9286d3_pushCompCmdClang(_1ace17078_Builder* _9426_cmd);
inline void _1ac928914_pushCompCmdGcc(_1ace17078_Builder* _12024_cmd);
inline __jule_tuple_str__jule_tuple_str _1ac928d98_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1ab61326a_IR>* _14636_ir);
inline jule::Str _1ac929030_getCompilePath(void);
inline void _1ac929261_applyTargetIndependentOptimizations(jule::Ptr<_1ab61326a_IR>* _19245_ir);
inline void _1ac929409_checkCompilerFlag(void);
inline void _1ac929618_checkTargetArch(jule::Str _21420_arch);
inline void _1ac929849_checkTargetOs(jule::Str _22218_os);
inline void _1ac929a7a_checkTargetFlag(jule::Str* _23021_target);
inline void _1ac929cab_checkOptFlag(jule::Str* _25318_opt);
inline void _1ac92a174_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1ac92a33e_checkFlags(jule::Slice<jule::Str>* _28116_args);
inline void _1ac92a54d_setupSemaFlags(jule::I32* _33024_flags);
inline jule::Ptr<_1ab61326a_IR> _1ac92a817_buildIr(jule::Slice<jule::Str>* _33613_args);
inline void _1ac92aa48_compileCommand(jule::Slice<jule::Str>* _37624_args);


struct _1aaac0e32_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1aaac02b6_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabb8db5_Data>* _1426_d, jule::I32 _1436_i);
	void(*_1aaac0629_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aab70795_Var>* _1526_keyA, jule::Ptr<_1aab70795_Var>* _1543_keyB);
	void(*_1aaac0a47_step)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1aab70795_Var>* _1633_keyA, jule::Ptr<_1aab70795_Var>* _1650_keyB);
	jule::I32(*_1aaac0ccd_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1aab2be05_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1aab2ac7d_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1aab2ae6a_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1aab2b2ab_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id);
	jule::Ptr<_1aab2ee08_ImportInfo>(*_1aab2b5ec_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log(*_1aab2b9e8_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod);
	void(*_1aab2bca1_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aab2ee08_ImportInfo> _4128__0);
};

struct _1aabec9dc_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1aabec547_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1aabec888_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other);
};

struct _1aac23ae0_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1aab2ee08_ImportInfo>(*_1aac21dc9_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> _929_selector);
	jule::Ptr<_1aab70795_Var>(*_1aac222c5_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1aabec1a1_TypeAlias>(*_1aac226c1_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1aa966767_Struct>(*_1aac22abc_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1aaa3b221_Fn>(*_1aac22eb8_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1aaa46935_Trait>(*_1aac23309_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1aaa490db_Enum>(*_1aac2364a_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1aaa4a7e6_TypeEnum>(*_1aac2398b_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1ac9208ea_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1ac8de028_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1ac8de16b_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1ac8de347_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1ac9207a7_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaac3451_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaac6685_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaac9413_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaccc74_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaace5d3_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaada2c0_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaadd867_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ab6106da_Importer>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa969605_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa3e2ce_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa46935_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa490db_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa4a7e6_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaac1152_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaac1bad_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaac4dd1_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaac8104_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaacae1a_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaad1052_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaad7564_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaadbc3e_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaae0b55_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aabecdb6_Type>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aac06bc2_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aac0a6ed_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aac0b1c1_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aac0bcb5_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aac0c865_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aac0d4e2_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aac0deb5_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac8a3d78_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa42524_SymTab>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab05032_scopeChecker>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab2ee08_ImportInfo>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab3267a_Package>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab4c62e_sema>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c02aa3c6_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c02ad50b_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c02b1751_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c02b49da_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c02b7c30_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab70795_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aabec1a1_TypeAlias>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa966767_Struct>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa3b221_Fn>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa965447_Field>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa9b96cc_Const>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa48580_EnumItem>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa3974c_Param>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab0033a_Label>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaec832_Scope>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa37096_BuiltinErrorCallExpr>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aabb8db5_Data>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa380a8_BackendEmitExpr>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa35d20_BuiltinAppendCallExpr>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa348e0_BuiltinPrintCallExpr>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa34bdc_BuiltinPrintlnCallExpr>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa35490_BuiltinPanicCallExpr>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa36bbc_BuiltinCopyCallExpr>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa367e3_BuiltinDeleteCallExpr>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa383a5_FreeExpr>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa30ed5_FnCallExpr>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaed426_Conditional>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaed723_InfIter>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa95bc46_WhileKind>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaedbc9_WhileIter>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa95c64d_RangeKind>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaee6ad_RangeIter>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaee9aa_ContSt>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab0099a_GotoSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab00d74_Postfix>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab0132a_Assign>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa104466_IdentExpr>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa103740_TupleExpr>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa31865_IndexingExpr>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab018ad_MultiAssign>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab0232b_Match>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab0331b_FallSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaeed84_BreakSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab036b2_RetSt>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa957978_ScopeTree>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa95a7c2_VarDecl>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa95e551_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa102b4b_Expr>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa95dc37_Conditional>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa95b41b_Iter>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa95ce01_ContSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa10adeb_LabelSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa10b2c5_GotoSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa10c2b5_AssignSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa960321_MatchCase>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa10b5c2_FallSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa95ca27_BreakSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa95ab9b_RetSt>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa103520_UseExpr>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa964413_Impl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa963566_StructDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa959617_FnDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa963ca3_TraitDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa96191b_EnumDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa9628a6_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa100ad3_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa0eec47_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa100341_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa0ee8b2_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa101331_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa100044_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa0ede22_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa1050d2_VariadicExpr>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa313ae_SliceExpr>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa10736a_FieldExprPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa108976_KeyValPair>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa345e3_TupleExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa37c34_RuneExpr>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa342e6_ArrayExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa105c5e_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa0ee1db_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa104c08_UnaryExpr>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa0ed817_TypeDecl>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa105885_NamespaceExpr>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa0ee5b5_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa32b52_SlicingExpr>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa30633_CastingExpr>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa1091a2_SliceExpr>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa2ed80_StructLitExpr>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa33e1c_StructStaticIdentExpr>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa331d5_TraitSubIdentExpr>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa33a76_StructSubIdentExpr>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa325be_MapExpr>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa31d1b_AnonFnExpr>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa102e15_RangeExpr>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa103ad6_LitExpr>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa103eb0_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa109b0e_IndexingExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa10a26e_SlicingExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa1054ab_CastExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa107b95_StructLit>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa106875_FnCallExpr>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa10814b_BraceLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa106215_BinaryExpr>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa2e4ab_UnaryExpr>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa2e0d2_BinaryExpr>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa3017c_AllocStructLitExpr>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa350b6_BuiltinNewCallExpr>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa35946_BuiltinMakeCallExpr>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa3611c_BuiltinLenCallExpr>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa36419_BuiltinCapCallExpr>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa37393_SizeofExpr>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa37a47_AlignofExpr>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d513a_ExceptionalForwardingExpr>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d810a_StrRuneIter>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d6d84_MutSlicingExpr>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d7857_PushToSliceExpr>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d7c31_AppendToSliceExpr>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d5adb_SwapExpr>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d4d60_StrFromBytes>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d5eb5_EmptyCompareExpr>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d6801_StrCompExpr>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d5745_StrConcatExpr>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d7181_UnsafeBinaryExpr>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d8407_UnsafeDerefExpr>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d62b2_RefExpr>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa2e9d9_StructArgExpr>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d8935_UnsafeCastingExpr>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d53c1_FnCallIgnoreExceptionalExpr>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ac3d747d_UnsafeIndexingExpr>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator176(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator177(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator178(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator179(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator180(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator181(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator182(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1bd0baeec_1bd074b32(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabb8db5_Data>* _1426_d, jule::I32 _1436_i) {
	_1aaac4452_index(_self_.as<_1aaac3451_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bd0baeec_1bd08a21e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabb8db5_Data>* _1426_d, jule::I32 _1436_i) {
	_1aaac7675_index(_self_.as<_1aaac6685_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bd0baeec_1bd07a198(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabb8db5_Data>* _1426_d, jule::I32 _1436_i) {
	_1aaaca48b_index(_self_.as<_1aaac9413_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bd0baeec_1bd080005(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabb8db5_Data>* _1426_d, jule::I32 _1436_i) {
	_1aaacdb54_index(_self_.as<_1aaaccc74_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bd0baeec_1bd0870d9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabb8db5_Data>* _1426_d, jule::I32 _1436_i) {
	_1aaad05c3_index(_self_.as<_1aaace5d3_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bd0baeec_1bd0a34ac(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabb8db5_Data>* _1426_d, jule::I32 _1436_i) {
	_1aaadb2b0_index(_self_.as<_1aaada2c0_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bd0baeec_1bd09c73c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabb8db5_Data>* _1426_d, jule::I32 _1436_i) {
	_1aaade978_index(_self_.as<_1aaadd867_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1bd0bb481_1bd074b32(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aab70795_Var>* _1526_keyA, jule::Ptr<_1aab70795_Var>* _1543_keyB) {
	_1aaac40de_ready(_self_.as<_1aaac3451_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bd0bb481_1bd08a21e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aab70795_Var>* _1526_keyA, jule::Ptr<_1aab70795_Var>* _1543_keyB) {
	_1aaac7312_ready(_self_.as<_1aaac6685_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bd0bb481_1bd07a198(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aab70795_Var>* _1526_keyA, jule::Ptr<_1aab70795_Var>* _1543_keyB) {
	_1aaaca128_ready(_self_.as<_1aaac9413_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bd0bb481_1bd080005(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aab70795_Var>* _1526_keyA, jule::Ptr<_1aab70795_Var>* _1543_keyB) {
	_1aaacd7e1_ready(_self_.as<_1aaaccc74_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bd0bb481_1bd0870d9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aab70795_Var>* _1526_keyA, jule::Ptr<_1aab70795_Var>* _1543_keyB) {
	_1aaad0260_ready(_self_.as<_1aaace5d3_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bd0bb481_1bd0a34ac(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aab70795_Var>* _1526_keyA, jule::Ptr<_1aab70795_Var>* _1543_keyB) {
	_1aaadae4c_ready(_self_.as<_1aaada2c0_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bd0bb481_1bd09c73c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aab70795_Var>* _1526_keyA, jule::Ptr<_1aab70795_Var>* _1543_keyB) {
	_1aaade615_ready(_self_.as<_1aaadd867_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1bd0bba8b_1bd074b32(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1aab70795_Var>* _1633_keyA, jule::Ptr<_1aab70795_Var>* _1650_keyB) {
	_1aaac4870_step(_self_.as<_1aaac3451_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1bd0bba8b_1bd08a21e(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1aab70795_Var>* _1633_keyA, jule::Ptr<_1aab70795_Var>* _1650_keyB) {
	_1aaac7a93_step(_self_.as<_1aaac6685_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1bd0bba8b_1bd07a198(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1aab70795_Var>* _1633_keyA, jule::Ptr<_1aab70795_Var>* _1650_keyB) {
	_1aaaca8a9_step(_self_.as<_1aaac9413_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1bd0bba8b_1bd080005(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1aab70795_Var>* _1633_keyA, jule::Ptr<_1aab70795_Var>* _1650_keyB) {
	_1aaace072_step(_self_.as<_1aaaccc74_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1bd0bba8b_1bd0870d9(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1aab70795_Var>* _1633_keyA, jule::Ptr<_1aab70795_Var>* _1650_keyB) {
	_1aaad09e1_step(_self_.as<_1aaace5d3_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1bd0bba8b_1bd0a34ac(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1aab70795_Var>* _1633_keyA, jule::Ptr<_1aab70795_Var>* _1650_keyB) {
	_1aaadb6cd_step(_self_.as<_1aaada2c0_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1bd0bba8b_1bd09c73c(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1aab70795_Var>* _1633_keyA, jule::Ptr<_1aab70795_Var>* _1650_keyB) {
	_1aaaded96_step(_self_.as<_1aaadd867_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I32 __jule_trait_method_1bd0bc1b8_1bd074b32(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaac4b06_len(_self_.as<_1aaac3451_comptimeStructFields>().alloc);
}
inline jule::I32 __jule_trait_method_1bd0bc1b8_1bd08a21e(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaac7d29_len(_self_.as<_1aaac6685_comptimeStatics>().alloc);
}
inline jule::I32 __jule_trait_method_1bd0bc1b8_1bd07a198(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaacab40_len(_self_.as<_1aaac9413_comptimeEnumFields>().alloc);
}
inline jule::I32 __jule_trait_method_1bd0bc1b8_1bd080005(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaace308_len(_self_.as<_1aaaccc74_comptimeParams>().alloc);
}
inline jule::I32 __jule_trait_method_1bd0bc1b8_1bd0870d9(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaad0c77_len(_self_.as<_1aaace5d3_comptimeTypeInfos>().alloc);
}
inline jule::I32 __jule_trait_method_1bd0bc1b8_1bd0a34ac(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaadb964_len(_self_.as<_1aaada2c0_comptimeFiles>().alloc);
}
inline jule::I32 __jule_trait_method_1bd0bc1b8_1bd09c73c(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaae012c_len(_self_.as<_1aaadd867_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1bd0bc4e8_1be67e955(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1ab6112e0_SetModPath(_self_.as<_1ab6106da_Importer>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1bd0bc927_1be67e955(jule::Ptr<jule::Uintptr> _self_) {
	return _1ab611576_GetModPath(_self_.as<_1ab6106da_Importer>().alloc);
}
inline jule::Str __jule_trait_method_1bd0bcd12_1be67e955(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id) {
	return _1ab6118b7_ModById(_self_.as<_1ab6106da_Importer>().alloc, _2519_id);
}
inline jule::Ptr<_1aab2ee08_ImportInfo> __jule_trait_method_1bd0bd285_1be67e955(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1ab611c08_GetImport(_self_.as<_1ab6106da_Importer>().alloc, _3125_path);
}
inline __jule_tuple_sx_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log __jule_trait_method_1bd0bd807_1be67e955(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod) {
	return _1ab612104_ImportPackage(_self_.as<_1ab6106da_Importer>().alloc, _3729_path, _3740_updateMod);
}
inline void __jule_trait_method_1bd0be099_1be67e955(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aab2ee08_ImportInfo> _4128__0) {
	_1ab6123ac_Imported(_self_.as<_1ab6106da_Importer>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bce75e40(jule::Ptr<jule::Uintptr> _self_) {
	return _1aa969979_Str(_self_.as<_1aa969605_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bce754a0(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaa3e653_Str(_self_.as<_1aaa3e2ce_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bce89a69(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaa46d31_Str(_self_.as<_1aaa46935_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bce697c4(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaa49493_Str(_self_.as<_1aaa490db_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bce70588(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaa4ab6a_Str(_self_.as<_1aaa4a7e6_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd085c75(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaac154d_Str(_self_.as<_1aaac1152_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd0777c2(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaac2065_Str(_self_.as<_1aaac1bad_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd074b32(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaac3819_Str(_self_.as<_1aaac3451_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd08cdae(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaac5288_Str(_self_.as<_1aaac4dd1_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd08a21e(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaac6a3c_Str(_self_.as<_1aaac6685_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd07cd38(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaac84ab_Str(_self_.as<_1aaac8104_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd07a198(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaac98ca_Str(_self_.as<_1aaac9413_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd082b95(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaacb2c2_Str(_self_.as<_1aaacae1a_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd080005(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaacd01b_Str(_self_.as<_1aaaccc74_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd0870d9(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaace98a_Str(_self_.as<_1aaace5d3_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bce992a4(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaad1409_Str(_self_.as<_1aaad1052_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd090785(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaad791b_Str(_self_.as<_1aaad7564_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd0a34ac(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaada677_Str(_self_.as<_1aaada2c0_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd0a03cc(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaadc0e6_Str(_self_.as<_1aaadbc3e_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd09c73c(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaadde50_Str(_self_.as<_1aaadd867_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bd09568b(jule::Ptr<jule::Uintptr> _self_) {
	return _1aaae100c_Str(_self_.as<_1aaae0b55_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bce5ab7d(jule::Ptr<jule::Uintptr> _self_) {
	return _1aabed2b2_Str(_self_.as<_1aabecdb6_Type>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bce60a51(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac07046_Str(_self_.as<_1aac06bc2_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bce66a13(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac0aaa5_Str(_self_.as<_1aac0a6ed_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bce73eb5(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac0b688_Str(_self_.as<_1aac0b1c1_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bcecda36(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac0c16c_Str(_self_.as<_1aac0bcb5_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bcecc3e7(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac0cc1c_Str(_self_.as<_1aac0c865_Map>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bce72953(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac0d899_Str(_self_.as<_1aac0d4e2_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1bce67e32(jule::Ptr<jule::Uintptr> _self_) {
	return _1aac0e36c_Str(_self_.as<_1aac0deb5_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1bd0be53e_1c0192258(jule::Ptr<jule::Uintptr> _self_) {
	return _1ac8a4252_Str(_self_.as<_1ac8a3d78_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bce75e40(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aa969cba_Equal(_self_.as<_1aa969605_StructIns>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bce754a0(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaa3e994_Equal(_self_.as<_1aaa3e2ce_FnIns>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bce89a69(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaa47172_Equal(_self_.as<_1aaa46935_Trait>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bce697c4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaa497d4_Equal(_self_.as<_1aaa490db_Enum>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bce70588(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaa4aeab_Equal(_self_.as<_1aaa4a7e6_TypeEnum>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd085c75(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaac188e_Equal(_self_.as<_1aaac1152_comptimeRange>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd0777c2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaac23a6_Equal(_self_.as<_1aaac1bad_comptimeStructField>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd074b32(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaac3b5a_Equal(_self_.as<_1aaac3451_comptimeStructFields>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd08cdae(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaac55c9_Equal(_self_.as<_1aaac4dd1_comptimeStatic>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd08a21e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaac6d7d_Equal(_self_.as<_1aaac6685_comptimeStatics>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd07cd38(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaac87ec_Equal(_self_.as<_1aaac8104_comptimeEnumField>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd07a198(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaac9c1b_Equal(_self_.as<_1aaac9413_comptimeEnumFields>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd082b95(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaacb613_Equal(_self_.as<_1aaacae1a_comptimeParam>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd080005(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaacd35c_Equal(_self_.as<_1aaaccc74_comptimeParams>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd0870d9(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaaceccb_Equal(_self_.as<_1aaace5d3_comptimeTypeInfos>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bce992a4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaad174a_Equal(_self_.as<_1aaad1052_comptimeTypeInfo>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd090785(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaad7c5c_Equal(_self_.as<_1aaad7564_comptimeValue>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd0a34ac(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaada9b8_Equal(_self_.as<_1aaada2c0_comptimeFiles>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd0a03cc(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaadc437_Equal(_self_.as<_1aaadbc3e_comptimeFile>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd09c73c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaade291_Equal(_self_.as<_1aaadd867_comptimeDecls>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bd09568b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aaae134d_Equal(_self_.as<_1aaae0b55_comptimeDecl>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bce5ab7d(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aabed603_Equal(_self_.as<_1aabecdb6_Type>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bce60a51(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aac07387_Equal(_self_.as<_1aac06bc2_Prim>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bce66a13(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aac0ade6_Equal(_self_.as<_1aac0a6ed_Sptr>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bce73eb5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aac0b9c9_Equal(_self_.as<_1aac0b1c1_Slc>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bcecda36(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aac0c4ad_Equal(_self_.as<_1aac0bcb5_Tuple>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bcecc3e7(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aac0d05d_Equal(_self_.as<_1aac0c865_Map>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bce72953(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aac0dbda_Equal(_self_.as<_1aac0d4e2_Arr>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1bce67e32(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1aac0e6ad_Equal(_self_.as<_1aac0deb5_Ptr>(), _3918_other);
}
inline jule::Bool __jule_trait_method_1bd0be891_1c0192258(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1aabecdb6_Type> _3918_other) {
	return _1ac8a4593_Equal(_self_.as<_1ac8a3d78_customType>(), _3918_other);
}
inline jule::Ptr<_1aab2ee08_ImportInfo> __jule_trait_method_1bd0bedbe_1bce77c44(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> _929_selector) {
	return _1aaa42a41_SelectPackage(_self_.as<_1aaa42524_SymTab>().alloc, _929_selector);
}
inline jule::Ptr<_1aab2ee08_ImportInfo> __jule_trait_method_1bd0bedbe_1bd03477e(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> _929_selector) {
	return _1aab0550a_SelectPackage(_self_.as<_1aab05032_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1aab2ee08_ImportInfo> __jule_trait_method_1bd0bedbe_1bce78d66(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> _929_selector) {
	return _1aab30425_SelectPackage(_self_.as<_1aab2ee08_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1aab2ee08_ImportInfo> __jule_trait_method_1bd0bedbe_1bce798b1(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> _929_selector) {
	return _1aab32b53_SelectPackage(_self_.as<_1aab3267a_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1aab2ee08_ImportInfo> __jule_trait_method_1bd0bedbe_1bce7742a(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> _929_selector) {
	return _1aab4cb07_SelectPackage(_self_.as<_1aab4c62e_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1aab70795_Var> __jule_trait_method_1bd0c0b39_1bce77c44(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1aaa42e3c_FindVar(_self_.as<_1aaa42524_SymTab>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1aab70795_Var> __jule_trait_method_1bd0c0b39_1bd03477e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1aab05906_FindVar(_self_.as<_1aab05032_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1aab70795_Var> __jule_trait_method_1bd0c0b39_1bce78d66(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1aab30821_FindVar(_self_.as<_1aab2ee08_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1aab70795_Var> __jule_trait_method_1bd0c0b39_1bce798b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1aab3304e_FindVar(_self_.as<_1aab3267a_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1aab70795_Var> __jule_trait_method_1bd0c0b39_1bce7742a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1aab4d003_FindVar(_self_.as<_1aab4c62e_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1aabec1a1_TypeAlias> __jule_trait_method_1bd0c1189_1bce77c44(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1aaa43338_FindTypeAlias(_self_.as<_1aaa42524_SymTab>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1aabec1a1_TypeAlias> __jule_trait_method_1bd0c1189_1bd03477e(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1aab05d02_FindTypeAlias(_self_.as<_1aab05032_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1aabec1a1_TypeAlias> __jule_trait_method_1bd0c1189_1bce78d66(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1aab30c1c_FindTypeAlias(_self_.as<_1aab2ee08_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1aabec1a1_TypeAlias> __jule_trait_method_1bd0c1189_1bce798b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1aab3344a_FindTypeAlias(_self_.as<_1aab3267a_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1aabec1a1_TypeAlias> __jule_trait_method_1bd0c1189_1bce7742a(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1aab4d3ee_FindTypeAlias(_self_.as<_1aab4c62e_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1aa966767_Struct> __jule_trait_method_1bd0c170b_1bce77c44(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1aaa43734_FindStruct(_self_.as<_1aaa42524_SymTab>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1aa966767_Struct> __jule_trait_method_1bd0c170b_1bd03477e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1aab061ed_FindStruct(_self_.as<_1aab05032_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1aa966767_Struct> __jule_trait_method_1bd0c170b_1bce78d66(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1aab31118_FindStruct(_self_.as<_1aab2ee08_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1aa966767_Struct> __jule_trait_method_1bd0c170b_1bce798b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1aab33846_FindStruct(_self_.as<_1aab3267a_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1aa966767_Struct> __jule_trait_method_1bd0c170b_1bce7742a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1aab4d7ea_FindStruct(_self_.as<_1aab4c62e_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1aaa3b221_Fn> __jule_trait_method_1bd0c1c7d_1bce77c44(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1aaa43b30_FindFn(_self_.as<_1aaa42524_SymTab>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1aaa3b221_Fn> __jule_trait_method_1bd0c1c7d_1bd03477e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1aab065e9_FindFn(_self_.as<_1aab05032_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1aaa3b221_Fn> __jule_trait_method_1bd0c1c7d_1bce78d66(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1aab31514_FindFn(_self_.as<_1aab2ee08_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1aaa3b221_Fn> __jule_trait_method_1bd0c1c7d_1bce798b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1aab33c42_FindFn(_self_.as<_1aab3267a_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1aaa3b221_Fn> __jule_trait_method_1bd0c1c7d_1bce7742a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1aab4dbe6_FindFn(_self_.as<_1aab4c62e_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1aaa46935_Trait> __jule_trait_method_1bd0c2300_1bce77c44(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1aaa43e71_FindTrait(_self_.as<_1aaa42524_SymTab>().alloc, _2925_ident);
}
inline jule::Ptr<_1aaa46935_Trait> __jule_trait_method_1bd0c2300_1bd03477e(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1aab0693a_FindTrait(_self_.as<_1aab05032_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1aaa46935_Trait> __jule_trait_method_1bd0c2300_1bce78d66(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1aab31855_FindTrait(_self_.as<_1aab2ee08_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1aaa46935_Trait> __jule_trait_method_1bd0c2300_1bce798b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1aab34083_FindTrait(_self_.as<_1aab3267a_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1aaa46935_Trait> __jule_trait_method_1bd0c2300_1bce7742a(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1aab4e037_FindTrait(_self_.as<_1aab4c62e_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1aaa490db_Enum> __jule_trait_method_1bd0c27d9_1bce77c44(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1aaa442b2_FindEnum(_self_.as<_1aaa42524_SymTab>().alloc, _3324_ident);
}
inline jule::Ptr<_1aaa490db_Enum> __jule_trait_method_1bd0c27d9_1bd03477e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1aab06c7b_FindEnum(_self_.as<_1aab05032_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1aaa490db_Enum> __jule_trait_method_1bd0c27d9_1bce78d66(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1aab31b96_FindEnum(_self_.as<_1aab2ee08_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1aaa490db_Enum> __jule_trait_method_1bd0c27d9_1bce798b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1aab343c4_FindEnum(_self_.as<_1aab3267a_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1aaa490db_Enum> __jule_trait_method_1bd0c27d9_1bce7742a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1aab4e378_FindEnum(_self_.as<_1aab4c62e_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1aaa4a7e6_TypeEnum> __jule_trait_method_1bd0c2cc3_1bce77c44(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1aaa44603_FindTypeEnum(_self_.as<_1aaa42524_SymTab>().alloc, _3728_ident);
}
inline jule::Ptr<_1aaa4a7e6_TypeEnum> __jule_trait_method_1bd0c2cc3_1bd03477e(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1aab070bc_FindTypeEnum(_self_.as<_1aab05032_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1aaa4a7e6_TypeEnum> __jule_trait_method_1bd0c2cc3_1bce78d66(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1aab31ed7_FindTypeEnum(_self_.as<_1aab2ee08_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1aaa4a7e6_TypeEnum> __jule_trait_method_1bd0c2cc3_1bce798b1(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1aab34715_FindTypeEnum(_self_.as<_1aab3267a_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1aaa4a7e6_TypeEnum> __jule_trait_method_1bd0c2cc3_1bce7742a(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1aab4e6b9_FindTypeEnum(_self_.as<_1aab4c62e_sema>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1c02bae75_1c02aa3c6(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02aa591_Name(_self_.as<_1c02aa3c6_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c02bae75_1c02ad50b(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02ad6b5_Name(_self_.as<_1c02ad50b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c02bae75_1c02b1751(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02b190a_Name(_self_.as<_1c02b1751_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c02bae75_1c02b49da(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02b4b94_Name(_self_.as<_1c02b49da_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c02bae75_1c02b7c30(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02b7dd9_Name(_self_.as<_1c02b7c30_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c02b9b55_1c02aa3c6(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02aa99d_Short(_self_.as<_1c02aa3c6_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c02b9b55_1c02ad50b(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02adc59_Short(_self_.as<_1c02ad50b_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c02b9b55_1c02b1751(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02b1e9e_Short(_self_.as<_1c02b1751_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c02b9b55_1c02b49da(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02b5238_Short(_self_.as<_1c02b49da_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c02b9b55_1c02b7c30(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02b847d_Short(_self_.as<_1c02b7c30_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c02bb690_1c02aa3c6(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02aa6e5_What(_self_.as<_1c02aa3c6_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c02bb690_1c02ad50b(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02ad9c3_What(_self_.as<_1c02ad50b_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c02bb690_1c02b1751(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02b1c18_What(_self_.as<_1c02b1751_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c02bb690_1c02b49da(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02b4ea2_What(_self_.as<_1c02b49da_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c02bb690_1c02b7c30(jule::Ptr<jule::Uintptr> _self_) {
	return _1c02b81e7_What(_self_.as<_1c02b7c30_Flag>().alloc);
}
inline void __jule_trait_method_1c02bba7a_1c02aa3c6(jule::Ptr<jule::Uintptr> _self_) {
	_1c02aa849_Reset(_self_.as<_1c02aa3c6_Flag>().alloc);
}
inline void __jule_trait_method_1c02bba7a_1c02ad50b(jule::Ptr<jule::Uintptr> _self_) {
	_1c02adb16_Reset(_self_.as<_1c02ad50b_Flag>().alloc);
}
inline void __jule_trait_method_1c02bba7a_1c02b1751(jule::Ptr<jule::Uintptr> _self_) {
	_1c02b1d5b_Reset(_self_.as<_1c02b1751_Flag>().alloc);
}
inline void __jule_trait_method_1c02bba7a_1c02b49da(jule::Ptr<jule::Uintptr> _self_) {
	_1c02b50e5_Reset(_self_.as<_1c02b49da_Flag>().alloc);
}
inline void __jule_trait_method_1c02bba7a_1c02b7c30(jule::Ptr<jule::Uintptr> _self_) {
	_1c02b833a_Reset(_self_.as<_1c02b7c30_Flag>().alloc);
}


static _1aaac0e32_comptimeRangeKindMptrData _1aaac0e32_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1aaac02b6_index=__jule_trait_method_1bd0baeec_1bd074b32,
	._1aaac0629_ready=__jule_trait_method_1bd0bb481_1bd074b32,
	._1aaac0a47_step=__jule_trait_method_1bd0bba8b_1bd074b32,
	._1aaac0ccd_len=__jule_trait_method_1bd0bc1b8_1bd074b32,
};
static _1aaac0e32_comptimeRangeKindMptrData _1aaac0e32_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1aaac02b6_index=__jule_trait_method_1bd0baeec_1bd08a21e,
	._1aaac0629_ready=__jule_trait_method_1bd0bb481_1bd08a21e,
	._1aaac0a47_step=__jule_trait_method_1bd0bba8b_1bd08a21e,
	._1aaac0ccd_len=__jule_trait_method_1bd0bc1b8_1bd08a21e,
};
static _1aaac0e32_comptimeRangeKindMptrData _1aaac0e32_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1aaac02b6_index=__jule_trait_method_1bd0baeec_1bd07a198,
	._1aaac0629_ready=__jule_trait_method_1bd0bb481_1bd07a198,
	._1aaac0a47_step=__jule_trait_method_1bd0bba8b_1bd07a198,
	._1aaac0ccd_len=__jule_trait_method_1bd0bc1b8_1bd07a198,
};
static _1aaac0e32_comptimeRangeKindMptrData _1aaac0e32_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1aaac02b6_index=__jule_trait_method_1bd0baeec_1bd080005,
	._1aaac0629_ready=__jule_trait_method_1bd0bb481_1bd080005,
	._1aaac0a47_step=__jule_trait_method_1bd0bba8b_1bd080005,
	._1aaac0ccd_len=__jule_trait_method_1bd0bc1b8_1bd080005,
};
static _1aaac0e32_comptimeRangeKindMptrData _1aaac0e32_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1aaac02b6_index=__jule_trait_method_1bd0baeec_1bd0870d9,
	._1aaac0629_ready=__jule_trait_method_1bd0bb481_1bd0870d9,
	._1aaac0a47_step=__jule_trait_method_1bd0bba8b_1bd0870d9,
	._1aaac0ccd_len=__jule_trait_method_1bd0bc1b8_1bd0870d9,
};
static _1aaac0e32_comptimeRangeKindMptrData _1aaac0e32_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1aaac02b6_index=__jule_trait_method_1bd0baeec_1bd0a34ac,
	._1aaac0629_ready=__jule_trait_method_1bd0bb481_1bd0a34ac,
	._1aaac0a47_step=__jule_trait_method_1bd0bba8b_1bd0a34ac,
	._1aaac0ccd_len=__jule_trait_method_1bd0bc1b8_1bd0a34ac,
};
static _1aaac0e32_comptimeRangeKindMptrData _1aaac0e32_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1aaac02b6_index=__jule_trait_method_1bd0baeec_1bd09c73c,
	._1aaac0629_ready=__jule_trait_method_1bd0bb481_1bd09c73c,
	._1aaac0a47_step=__jule_trait_method_1bd0bba8b_1bd09c73c,
	._1aaac0ccd_len=__jule_trait_method_1bd0bc1b8_1bd09c73c,
};
static _1aab2be05_ImporterMptrData _1aab2be05_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1aab2ac7d_SetModPath=__jule_trait_method_1bd0bc4e8_1be67e955,
	._1aab2ae6a_GetModPath=__jule_trait_method_1bd0bc927_1be67e955,
	._1aab2b2ab_ModById=__jule_trait_method_1bd0bcd12_1be67e955,
	._1aab2b5ec_GetImport=__jule_trait_method_1bd0bd285_1be67e955,
	._1aab2b9e8_ImportPackage=__jule_trait_method_1bd0bd807_1be67e955,
	._1aab2bca1_Imported=__jule_trait_method_1bd0be099_1be67e955,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bce75e40,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bce75e40,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bce754a0,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bce754a0,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bce89a69,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bce89a69,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bce697c4,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bce697c4,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bce70588,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bce70588,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd085c75,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd085c75,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd0777c2,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd0777c2,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd074b32,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd074b32,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd08cdae,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd08cdae,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd08a21e,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd08a21e,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd07cd38,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd07cd38,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd07a198,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd07a198,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd082b95,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd082b95,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd080005,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd080005,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd0870d9,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd0870d9,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bce992a4,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bce992a4,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd090785,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd090785,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd0a34ac,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd0a34ac,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd0a03cc,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd0a03cc,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd09c73c,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd09c73c,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bd09568b,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bd09568b,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bce5ab7d,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bce5ab7d,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bce60a51,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bce60a51,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bce66a13,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bce66a13,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bce73eb5,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bce73eb5,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bcecda36,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bcecda36,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bcecc3e7,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bcecc3e7,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bce72953,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bce72953,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1bce67e32,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1bce67e32,
};
static _1aabec9dc_KindMptrData _1aabec9dc_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1aabec547_Str=__jule_trait_method_1bd0be53e_1c0192258,
	._1aabec888_Equal=__jule_trait_method_1bd0be891_1c0192258,
};
static _1aac23ae0_LookupMptrData _1aac23ae0_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1aac21dc9_SelectPackage=__jule_trait_method_1bd0bedbe_1bce77c44,
	._1aac222c5_FindVar=__jule_trait_method_1bd0c0b39_1bce77c44,
	._1aac226c1_FindTypeAlias=__jule_trait_method_1bd0c1189_1bce77c44,
	._1aac22abc_FindStruct=__jule_trait_method_1bd0c170b_1bce77c44,
	._1aac22eb8_FindFn=__jule_trait_method_1bd0c1c7d_1bce77c44,
	._1aac23309_FindTrait=__jule_trait_method_1bd0c2300_1bce77c44,
	._1aac2364a_FindEnum=__jule_trait_method_1bd0c27d9_1bce77c44,
	._1aac2398b_FindTypeEnum=__jule_trait_method_1bd0c2cc3_1bce77c44,
};
static _1aac23ae0_LookupMptrData _1aac23ae0_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1aac21dc9_SelectPackage=__jule_trait_method_1bd0bedbe_1bd03477e,
	._1aac222c5_FindVar=__jule_trait_method_1bd0c0b39_1bd03477e,
	._1aac226c1_FindTypeAlias=__jule_trait_method_1bd0c1189_1bd03477e,
	._1aac22abc_FindStruct=__jule_trait_method_1bd0c170b_1bd03477e,
	._1aac22eb8_FindFn=__jule_trait_method_1bd0c1c7d_1bd03477e,
	._1aac23309_FindTrait=__jule_trait_method_1bd0c2300_1bd03477e,
	._1aac2364a_FindEnum=__jule_trait_method_1bd0c27d9_1bd03477e,
	._1aac2398b_FindTypeEnum=__jule_trait_method_1bd0c2cc3_1bd03477e,
};
static _1aac23ae0_LookupMptrData _1aac23ae0_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1aac21dc9_SelectPackage=__jule_trait_method_1bd0bedbe_1bce78d66,
	._1aac222c5_FindVar=__jule_trait_method_1bd0c0b39_1bce78d66,
	._1aac226c1_FindTypeAlias=__jule_trait_method_1bd0c1189_1bce78d66,
	._1aac22abc_FindStruct=__jule_trait_method_1bd0c170b_1bce78d66,
	._1aac22eb8_FindFn=__jule_trait_method_1bd0c1c7d_1bce78d66,
	._1aac23309_FindTrait=__jule_trait_method_1bd0c2300_1bce78d66,
	._1aac2364a_FindEnum=__jule_trait_method_1bd0c27d9_1bce78d66,
	._1aac2398b_FindTypeEnum=__jule_trait_method_1bd0c2cc3_1bce78d66,
};
static _1aac23ae0_LookupMptrData _1aac23ae0_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1aac21dc9_SelectPackage=__jule_trait_method_1bd0bedbe_1bce798b1,
	._1aac222c5_FindVar=__jule_trait_method_1bd0c0b39_1bce798b1,
	._1aac226c1_FindTypeAlias=__jule_trait_method_1bd0c1189_1bce798b1,
	._1aac22abc_FindStruct=__jule_trait_method_1bd0c170b_1bce798b1,
	._1aac22eb8_FindFn=__jule_trait_method_1bd0c1c7d_1bce798b1,
	._1aac23309_FindTrait=__jule_trait_method_1bd0c2300_1bce798b1,
	._1aac2364a_FindEnum=__jule_trait_method_1bd0c27d9_1bce798b1,
	._1aac2398b_FindTypeEnum=__jule_trait_method_1bd0c2cc3_1bce798b1,
};
static _1aac23ae0_LookupMptrData _1aac23ae0_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1aac21dc9_SelectPackage=__jule_trait_method_1bd0bedbe_1bce7742a,
	._1aac222c5_FindVar=__jule_trait_method_1bd0c0b39_1bce7742a,
	._1aac226c1_FindTypeAlias=__jule_trait_method_1bd0c1189_1bce7742a,
	._1aac22abc_FindStruct=__jule_trait_method_1bd0c170b_1bce7742a,
	._1aac22eb8_FindFn=__jule_trait_method_1bd0c1c7d_1bce7742a,
	._1aac23309_FindTrait=__jule_trait_method_1bd0c2300_1bce7742a,
	._1aac2364a_FindEnum=__jule_trait_method_1bd0c27d9_1bce7742a,
	._1aac2398b_FindTypeEnum=__jule_trait_method_1bd0c2cc3_1bce7742a,
};
static _1ac9208ea_CommonFlagMptrData _1ac9208ea_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1ac8de028_Name=__jule_trait_method_1c02bae75_1c02aa3c6,
	._1ac8de16b_Short=__jule_trait_method_1c02b9b55_1c02aa3c6,
	._1ac8de347_What=__jule_trait_method_1c02bb690_1c02aa3c6,
	._1ac9207a7_Reset=__jule_trait_method_1c02bba7a_1c02aa3c6,
};
static _1ac9208ea_CommonFlagMptrData _1ac9208ea_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1ac8de028_Name=__jule_trait_method_1c02bae75_1c02ad50b,
	._1ac8de16b_Short=__jule_trait_method_1c02b9b55_1c02ad50b,
	._1ac8de347_What=__jule_trait_method_1c02bb690_1c02ad50b,
	._1ac9207a7_Reset=__jule_trait_method_1c02bba7a_1c02ad50b,
};
static _1ac9208ea_CommonFlagMptrData _1ac9208ea_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1ac8de028_Name=__jule_trait_method_1c02bae75_1c02b1751,
	._1ac8de16b_Short=__jule_trait_method_1c02b9b55_1c02b1751,
	._1ac8de347_What=__jule_trait_method_1c02bb690_1c02b1751,
	._1ac9207a7_Reset=__jule_trait_method_1c02bba7a_1c02b1751,
};
static _1ac9208ea_CommonFlagMptrData _1ac9208ea_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1ac8de028_Name=__jule_trait_method_1c02bae75_1c02b49da,
	._1ac8de16b_Short=__jule_trait_method_1c02b9b55_1c02b49da,
	._1ac8de347_What=__jule_trait_method_1c02bb690_1c02b49da,
	._1ac9207a7_Reset=__jule_trait_method_1c02bba7a_1c02b49da,
};
static _1ac9208ea_CommonFlagMptrData _1ac9208ea_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1ac8de028_Name=__jule_trait_method_1c02bae75_1c02b7c30,
	._1ac8de16b_Short=__jule_trait_method_1c02b9b55_1c02b7c30,
	._1ac8de347_What=__jule_trait_method_1c02bb690_1c02b7c30,
	._1ac9207a7_Reset=__jule_trait_method_1c02bba7a_1c02b7c30,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1bc6e53d5_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1bc7810ca_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1bcd5d762_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1bcd5da3c_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1bcd644b0_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1acbbe47e_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1bcd6aa38_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1aab70795_Var> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1aabec1a1_TypeAlias> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1aa966767_Struct> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1aaa3b221_Fn> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1aaa46935_Trait> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1aaa490db_Enum> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1aaa4a7e6_TypeEnum> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1aa965447_Field> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1aa9b96cc_Const> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1aaa48580_EnumItem> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1aaa3974c_Param> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1aab0033a_Label> &other) { return any.type == &__jule_any_type18 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1aaaec832_Scope> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1aaa37096_BuiltinErrorCallExpr> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1aabb8db5_Data> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1aaa380a8_BackendEmitExpr> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1aaa35d20_BuiltinAppendCallExpr> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1aaa348e0_BuiltinPrintCallExpr> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1aaa34bdc_BuiltinPrintlnCallExpr> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1aaa35490_BuiltinPanicCallExpr> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1aaa36bbc_BuiltinCopyCallExpr> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1aaa367e3_BuiltinDeleteCallExpr> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1aaa383a5_FreeExpr> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1aaa30ed5_FnCallExpr> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1aaaed426_Conditional> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1aaaed723_InfIter> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1aa95bc46_WhileKind> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1aaaedbc9_WhileIter> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1aa95c64d_RangeKind> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1aaaee6ad_RangeIter> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1aaaee9aa_ContSt> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1aab0099a_GotoSt> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1aab00d74_Postfix> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1aab0132a_Assign> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1aa104466_IdentExpr> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1aa103740_TupleExpr> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1aaa31865_IndexingExpr> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1aab018ad_MultiAssign> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1aab0232b_Match> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1aab0331b_FallSt> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1aaaeed84_BreakSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1aab036b2_RetSt> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1aa957978_ScopeTree> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1aa95a7c2_VarDecl> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1aa95e551_TypeAliasDecl> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1aa102b4b_Expr> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1aa95dc37_Conditional> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1aa95b41b_Iter> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1aa95ce01_ContSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1aa10adeb_LabelSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1aa10b2c5_GotoSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1aa10c2b5_AssignSt> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1aa960321_MatchCase> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1aa10b5c2_FallSt> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1aa95ca27_BreakSt> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1aa95ab9b_RetSt> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1aa103520_UseExpr> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1aa969605_StructIns> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1aaa3e2ce_FnIns> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1aa964413_Impl> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1aa963566_StructDecl> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1aa959617_FnDecl> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1aa963ca3_TraitDecl> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1aa96191b_EnumDecl> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1aa9628a6_TypeEnumDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1aa100ad3_ArrTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1aa0eec47_SlcTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1aa100341_PtrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1aa0ee8b2_SptrTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1aa101331_MapTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1aa100044_TupleTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1aa0ede22_IdentTypeDecl> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1aa1050d2_VariadicExpr> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1aaa313ae_SliceExpr> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1aa10736a_FieldExprPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1aa108976_KeyValPair> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1aaa345e3_TupleExpr> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1aaa37c34_RuneExpr> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1aabecdb6_Type> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1aaa342e6_ArrayExpr> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1aa105c5e_SubIdentExpr> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1aa0ee1db_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1aa104c08_UnaryExpr> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1aa0ed817_TypeDecl> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1aa105885_NamespaceExpr> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1aa0ee5b5_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1aaa32b52_SlicingExpr> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1aaa30633_CastingExpr> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1aa1091a2_SliceExpr> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1aaa2ed80_StructLitExpr> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1aaa33e1c_StructStaticIdentExpr> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1aaa331d5_TraitSubIdentExpr> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1aaa33a76_StructSubIdentExpr> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1aaa325be_MapExpr> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1aaa31d1b_AnonFnExpr> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1aa102e15_RangeExpr> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1aa103ad6_LitExpr> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1aa103eb0_UnsafeExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1aa109b0e_IndexingExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1aa10a26e_SlicingExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1aa1054ab_CastExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1aa107b95_StructLit> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1aa106875_FnCallExpr> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1aa10814b_BraceLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1aa106215_BinaryExpr> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1aaa2e4ab_UnaryExpr> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1aaa2e0d2_BinaryExpr> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1aaa3017c_AllocStructLitExpr> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1aaa350b6_BuiltinNewCallExpr> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1aaa35946_BuiltinMakeCallExpr> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1aaa3611c_BuiltinLenCallExpr> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1aaa36419_BuiltinCapCallExpr> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1aaa37393_SizeofExpr> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1aaa37a47_AlignofExpr> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1ac3d513a_ExceptionalForwardingExpr> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1ac3d810a_StrRuneIter> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1ac3d6d84_MutSlicingExpr> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1ac3d7857_PushToSliceExpr> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1ac3d7c31_AppendToSliceExpr> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1ac3d5adb_SwapExpr> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1ac3d4d60_StrFromBytes> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1ac3d5eb5_EmptyCompareExpr> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1ac3d6801_StrCompExpr> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1ac3d5745_StrConcatExpr> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1ac3d7181_UnsafeBinaryExpr> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1ac3d8407_UnsafeDerefExpr> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1ac3d62b2_RefExpr> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1aaa2e9d9_StructArgExpr> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator170, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<_1ac3d8935_UnsafeCastingExpr> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator171, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::Ptr<_1ac3d53c1_FnCallIgnoreExceptionalExpr> &other) { return any.type == &__jule_any_type136 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator172, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::Ptr<_1ac3d747d_UnsafeIndexingExpr> &other) { return any.type == &__jule_any_type137 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator46, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type138 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1bc70746e_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1bc7404a7_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1bc780aad_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type142_to_str(void *alloc) noexcept { return _1bca97c60_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_type_deallocator176, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
jule::Bool __jule_any_type143_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type143_to_str(void *alloc) noexcept { return _1bce1ea65_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type143{.dealloc=__jule_type_deallocator177, .eq=__jule_any_type143_eq, .to_str=__jule_any_type143_to_str};
jule::Bool __jule_any_type144_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type144_to_str(void *alloc) noexcept { return _1bce20093_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type144{.dealloc=__jule_type_deallocator178, .eq=__jule_any_type144_eq, .to_str=__jule_any_type144_to_str};
jule::Bool __jule_any_type145_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type145_to_str(void *alloc) noexcept { return _1bc780e87_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type145{.dealloc=__jule_type_deallocator179, .eq=__jule_any_type145_eq, .to_str=__jule_any_type145_to_str};
jule::Bool __jule_any_type146_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type146_to_str(void *alloc) noexcept { return _1bce2aae8_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type146{.dealloc=__jule_type_deallocator180, .eq=__jule_any_type146_eq, .to_str=__jule_any_type146_to_str};
jule::Bool __jule_any_type147_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type147_to_str(void *alloc) noexcept { return _1bce34371_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type147{.dealloc=__jule_type_deallocator181, .eq=__jule_any_type147_eq, .to_str=__jule_any_type147_to_str};
jule::Bool __jule_any_type148_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type148_to_str(void *alloc) noexcept { return _1bce39420_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type148{.dealloc=__jule_type_deallocator182, .eq=__jule_any_type148_eq, .to_str=__jule_any_type148_to_str};
inline jule::Bool __jule_anon1bd163869(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa3d179_ParamIns> _25721_p1, jule::Ptr<_1aaa3d179_ParamIns> _25736_p2);
struct __jule_anon_1bd1cc718_ctx{
	jule::Ptr<_1aaac1bad_comptimeStructField> _self_;
};
static void __jule_anon_1bd1cc718_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd1cc718_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd1cc718(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _6521_e, jule::Ptr<_1aa106875_FnCallExpr>* _6536_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd1ce4ea_ctx{
	jule::Ptr<_1aaac1bad_comptimeStructField> _self_;
};
static void __jule_anon_1bd1ce4ea_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd1ce4ea_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd1ce4ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _7221_e, jule::Ptr<_1aa106875_FnCallExpr>* _7236_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd1e26ea_ctx{
	jule::Ptr<_1aaac4dd1_comptimeStatic> _self_;
};
static void __jule_anon_1bd1e26ea_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd1e26ea_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd1e26ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _17821_e, jule::Ptr<_1aa106875_FnCallExpr>* _17836_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd1e44dd_ctx{
	jule::Ptr<_1aaac4dd1_comptimeStatic> _self_;
};
static void __jule_anon_1bd1e44dd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd1e44dd_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd1e44dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _18521_e, jule::Ptr<_1aa106875_FnCallExpr>* _18536_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd203e59_ctx{
	jule::Ptr<_1aaac8104_comptimeEnumField> _self_;
};
static void __jule_anon_1bd203e59_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd203e59_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd203e59(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _28321_e, jule::Ptr<_1aa106875_FnCallExpr>* _28336_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd21b306_ctx{
	jule::Ptr<_1aaacae1a_comptimeParam> _self_;
};
static void __jule_anon_1bd21b306_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd21b306_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd21b306(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _40221_e, jule::Ptr<_1aa106875_FnCallExpr>* _40236_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd21d0e9_ctx{
	jule::Ptr<_1aaacae1a_comptimeParam> _self_;
};
static void __jule_anon_1bd21d0e9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd21d0e9_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd21d0e9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _40921_e, jule::Ptr<_1aa106875_FnCallExpr>* _40936_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd21eddc_ctx{
	jule::Ptr<_1aaacae1a_comptimeParam> _self_;
};
static void __jule_anon_1bd21eddc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd21eddc_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd21eddc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _41621_e, jule::Ptr<_1aa106875_FnCallExpr>* _41636_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2aabe2_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2aabe2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2aabe2_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2aabe2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _98821_e, jule::Ptr<_1aa106875_FnCallExpr>* _98836_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2ac9d5_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2ac9d5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2ac9d5_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2ac9d5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _99521_e, jule::Ptr<_1aa106875_FnCallExpr>* _99536_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2ae7c8_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2ae7c8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2ae7c8_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2ae7c8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _100221_e, jule::Ptr<_1aa106875_FnCallExpr>* _100236_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2b15bb_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2b15bb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2b15bb_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2b15bb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _100921_e, jule::Ptr<_1aa106875_FnCallExpr>* _100936_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2b33ae_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2b33ae_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2b33ae_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2b33ae(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _101621_e, jule::Ptr<_1aa106875_FnCallExpr>* _101636_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2b51a2_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2b51a2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2b51a2_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2b51a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _102321_e, jule::Ptr<_1aa106875_FnCallExpr>* _102336_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2b6e95_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2b6e95_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2b6e95_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2b6e95(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _103021_e, jule::Ptr<_1aa106875_FnCallExpr>* _103036_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2b8c88_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2b8c88_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2b8c88_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2b8c88(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _103721_e, jule::Ptr<_1aa106875_FnCallExpr>* _103736_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2babbe_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2babbe_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2babbe_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2babbe(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _104421_e, jule::Ptr<_1aa106875_FnCallExpr>* _104436_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2bc9b2_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2bc9b2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2bc9b2_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2bc9b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _105121_e, jule::Ptr<_1aa106875_FnCallExpr>* _105136_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2be7a5_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2be7a5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2be7a5_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2be7a5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _105821_e, jule::Ptr<_1aa106875_FnCallExpr>* _105836_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2c1598_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2c1598_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2c1598_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2c1598(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _106521_e, jule::Ptr<_1aa106875_FnCallExpr>* _106536_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2c338b_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2c338b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2c338b_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2c338b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _107221_e, jule::Ptr<_1aa106875_FnCallExpr>* _107236_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2c517e_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2c517e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2c517e_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2c517e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _107921_e, jule::Ptr<_1aa106875_FnCallExpr>* _107936_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2c6e72_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2c6e72_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2c6e72_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2c6e72(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _108621_e, jule::Ptr<_1aa106875_FnCallExpr>* _108636_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2c8c65_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2c8c65_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2c8c65_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2c8c65(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _109321_e, jule::Ptr<_1aa106875_FnCallExpr>* _109336_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2caa58_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2caa58_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2caa58_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2caa58(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _110021_e, jule::Ptr<_1aa106875_FnCallExpr>* _110036_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2cc84b_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2cc84b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2cc84b_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2cc84b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _110721_e, jule::Ptr<_1aa106875_FnCallExpr>* _110736_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2ce63e_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2ce63e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2ce63e_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2ce63e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _111421_e, jule::Ptr<_1aa106875_FnCallExpr>* _111436_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd2d1432_ctx{
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bd2d1432_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd2d1432_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2d1432(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _112121_e, jule::Ptr<_1aa106875_FnCallExpr>* _112136_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd30a3c3_ctx{
	jule::Ptr<_1aaad7564_comptimeValue> _self_;
};
static void __jule_anon_1bd30a3c3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd30a3c3_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd30a3c3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _128421_e, jule::Ptr<_1aa106875_FnCallExpr>* _128436_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd30c1b6_ctx{
	jule::Ptr<_1aaad7564_comptimeValue> _self_;
};
static void __jule_anon_1bd30c1b6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd30c1b6_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd30c1b6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _129121_e, jule::Ptr<_1aa106875_FnCallExpr>* _129136_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd30dea9_ctx{
	jule::Ptr<_1aaad7564_comptimeValue> _self_;
};
static void __jule_anon_1bd30dea9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd30dea9_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd30dea9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _129821_e, jule::Ptr<_1aa106875_FnCallExpr>* _129836_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd310c9c_ctx{
	jule::Ptr<_1aaad7564_comptimeValue> _self_;
};
static void __jule_anon_1bd310c9c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd310c9c_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd310c9c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _130521_e, jule::Ptr<_1aa106875_FnCallExpr>* _130536_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd312a90_ctx{
	jule::Ptr<_1aaad7564_comptimeValue> _self_;
};
static void __jule_anon_1bd312a90_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd312a90_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd312a90(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _131221_e, jule::Ptr<_1aa106875_FnCallExpr>* _131236_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd3196e0_ctx{
	jule::Ptr<_1aaad7564_comptimeValue> _self_;
};
static void __jule_anon_1bd3196e0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd3196e0_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3196e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _131921_e, jule::Ptr<_1aa106875_FnCallExpr>* _131936_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd31b4d3_ctx{
	jule::Ptr<_1aaad7564_comptimeValue> _self_;
};
static void __jule_anon_1bd31b4d3_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd31b4d3_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd31b4d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _132621_e, jule::Ptr<_1aa106875_FnCallExpr>* _132636_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd33096a_ctx{
	jule::Ptr<_1aaadbc3e_comptimeFile> _self_;
};
static void __jule_anon_1bd33096a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd33096a_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd33096a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _145121_e, jule::Ptr<_1aa106875_FnCallExpr>* _145136_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd33275d_ctx{
	jule::Ptr<_1aaadbc3e_comptimeFile> _self_;
};
static void __jule_anon_1bd33275d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd33275d_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd33275d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _145821_e, jule::Ptr<_1aa106875_FnCallExpr>* _145836_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd334551_ctx{
	jule::Ptr<_1aaadbc3e_comptimeFile> _self_;
};
static void __jule_anon_1bd334551_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd334551_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd334551(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _146521_e, jule::Ptr<_1aa106875_FnCallExpr>* _146536_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd393deb_ctx{
	jule::Ptr<_1aaae0b55_comptimeDecl> _self_;
};
static void __jule_anon_1bd393deb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd393deb_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd393deb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _197121_e, jule::Ptr<_1aa106875_FnCallExpr>* _197136_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd395bde_ctx{
	jule::Ptr<_1aaae0b55_comptimeDecl> _self_;
};
static void __jule_anon_1bd395bde_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd395bde_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd395bde(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _197821_e, jule::Ptr<_1aa106875_FnCallExpr>* _197836_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd3979d2_ctx{
	jule::Ptr<_1aaae0b55_comptimeDecl> _self_;
};
static void __jule_anon_1bd3979d2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd3979d2_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3979d2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _198521_e, jule::Ptr<_1aa106875_FnCallExpr>* _198536_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd3997c5_ctx{
	jule::Ptr<_1aaae0b55_comptimeDecl> _self_;
};
static void __jule_anon_1bd3997c5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd3997c5_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3997c5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _199221_e, jule::Ptr<_1aa106875_FnCallExpr>* _199236_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd39b5b8_ctx{
	jule::Ptr<_1aaae0b55_comptimeDecl> _self_;
};
static void __jule_anon_1bd39b5b8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd39b5b8_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd39b5b8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _199921_e, jule::Ptr<_1aa106875_FnCallExpr>* _199936_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd39d3ab_ctx{
	jule::Ptr<_1aaae0b55_comptimeDecl> _self_;
};
static void __jule_anon_1bd39d3ab_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd39d3ab_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd39d3ab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _200621_e, jule::Ptr<_1aa106875_FnCallExpr>* _200636_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd3a019e_ctx{
	jule::Ptr<_1aaae0b55_comptimeDecl> _self_;
};
static void __jule_anon_1bd3a019e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd3a019e_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3a019e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _201321_e, jule::Ptr<_1aa106875_FnCallExpr>* _201336_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd3a1e92_ctx{
	jule::Ptr<_1aaae0b55_comptimeDecl> _self_;
};
static void __jule_anon_1bd3a1e92_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd3a1e92_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3a1e92(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _202021_e, jule::Ptr<_1aa106875_FnCallExpr>* _202036_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd3a3dc8_ctx{
	jule::Ptr<_1aaae0b55_comptimeDecl> _self_;
};
static void __jule_anon_1bd3a3dc8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd3a3dc8_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3a3dc8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _202721_e, jule::Ptr<_1aa106875_FnCallExpr>* _202736_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd3a5bbb_ctx{
	jule::Ptr<_1aaae0b55_comptimeDecl> _self_;
};
static void __jule_anon_1bd3a5bbb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd3a5bbb_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3a5bbb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _203421_e, jule::Ptr<_1aa106875_FnCallExpr>* _203436_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd3a79ae_ctx{
	jule::Ptr<_1aaae0b55_comptimeDecl> _self_;
};
static void __jule_anon_1bd3a79ae_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd3a79ae_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3a79ae(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _204121_e, jule::Ptr<_1aa106875_FnCallExpr>* _204136_fc, jule::Ptr<_1aabb8db5_Data>* );
struct __jule_anon_1bd3b3976_ctx{
	jule::Ptr<_1aaae7541_constraintChecker> _self_;
};
static void __jule_anon_1bd3b3976_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd3b3976_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bd3b3976(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab4c62e_sema>* _6415_sema, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>* _6433_generics);
struct __jule_anon_1bd54a3d2_ctx{
	jule::Ptr<_1aa10c2b5_AssignSt> _126347_a;
	jule::Ptr<_1aabbad84_eval> _12647_eval;
	jule::Ptr<_1aab05032_scopeChecker> _self_;
};
static void __jule_anon_1bd54a3d2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd54a3d2_ctx>().dealloc(); }
inline void __jule_anon_1bd54a3d2(jule::Ptr<jule::Uintptr> __f_ctx, jule::I32 _126519_i);
struct __jule_anon_1bd5566a7_ctx{
	jule::Ptr<jule::I32> _12948__i;
	jule::Ptr<_1aa10c2b5_AssignSt> _126347_a;
	jule::Fn<void,jule::I32> _12653_updateMut;
	jule::Ptr<_1aabbad84_eval> _12647_eval;
	jule::Ptr<jule::Slice<_1aaaec0a1_exprPart>> _12958__parts;
};
static void __jule_anon_1bd5566a7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd5566a7_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd5566a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa102b4b_Expr>* _129644_expr);
struct __jule_anon_1bd6d2921_ctx{
	jule::Ptr<_1aab2ee08_ImportInfo> *_48728_pkg;
};
static void __jule_anon_1bd6d2921_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd6d2921_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bd6d2921(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab2ee08_ImportInfo> _48835_spkg);
struct __jule_anon_1bd7e1a0d_ctx{
	jule::Ptr<_1aaa3e2ce_FnIns> _83443_f;
	jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>> _83511_generics;
	jule::Slice<jule::Ptr<_1aabecdb6_Type>> *_83459_ignored;
};
static void __jule_anon_1bd7e1a0d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd7e1a0d_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bd7e1a0d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab4c62e_sema>* _84142_sema);
struct __jule_anon_1bd809729_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1aab4c62e_sema>*,jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>*> _93746_algo;
	jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _9427_generics;
};
static void __jule_anon_1bd809729_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd809729_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bd809729(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab4c62e_sema>* _94442_sema);
struct __jule_anon_1bd80c111_ctx{
	jule::Ptr<_1aaa3e2ce_FnIns> _95337_f;
	jule::Ptr<_1aab4c62e_sema> _self_;
};
static void __jule_anon_1bd80c111_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd80c111_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bd80c111(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab4c62e_sema>* _95737_sema, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>* _95755_generics);
struct __jule_anon_1bde59791_ctx{
	jule::Ptr<_1aabbad84_eval> _self_;
};
static void __jule_anon_1bde59791_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bde59791_ctx>().dealloc(); }
inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bde59791(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa102b4b_Expr>* _297539_expr);
inline jule::Str __jule_anon1be0acd12(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _91619_def);
struct __jule_anon_1be79c6ee_ctx{
	jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_;
};
static void __jule_anon_1be79c6ee_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be79c6ee_ctx>().dealloc(); }
inline void __jule_anon_1be79c6ee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa42524_SymTab>* _17731_file);
struct __jule_anon_1be810850_ctx{
	_1ac7b694a_exprDeadCode *_self_;
};
static void __jule_anon_1be810850_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be810850_ctx>().dealloc(); }
inline void __jule_anon_1be810850(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr);
struct __jule_anon_1be955489_ctx{
	jule::Ptr<jule::Bool> _687__check;
	jule::Ptr<_1ac68474c_exprOptimizer> _527_exop;
};
static void __jule_anon_1be955489_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be955489_ctx>().dealloc(); }
inline void __jule_anon_1be955489(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _7047_m);
struct __jule_anon_1be984ed0_ctx{
	jule::Ptr<_1ac3d5745_StrConcatExpr> _3057_model;
	_1ac68474c_exprOptimizer *_self_;
	jule::Fn<void,jule::Any> *_3094__step;
};
static void __jule_anon_1be984ed0_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be984ed0_ctx>().dealloc(); }
inline void __jule_anon_1be984ed0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any _31013_m);
struct __jule_anon_1bea26280_ctx{
	_1ac68474c_exprOptimizer *_self_;
};
static void __jule_anon_1bea26280_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bea26280_ctx>().dealloc(); }
inline void __jule_anon_1bea26280(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _94447_m);
struct __jule_anon_1bebe69b1_ctx{
	jule::Ptr<_1ac7bba4e_scopeCoder> _self_;
	jule::Bool _1017_ref;
};
static void __jule_anon_1bebe69b1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bebe69b1_ctx>().dealloc(); }
inline void __jule_anon_1bebe69b1(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bebea4ba_ctx{
	jule::Ptr<_1ac7bba4e_scopeCoder> _self_;
	jule::Ptr<_1aaaee6ad_RangeIter> *_9336_it;
};
static void __jule_anon_1bebea4ba_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bebea4ba_ctx>().dealloc(); }
inline void __jule_anon_1bebea4ba(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bec1994b_ctx{
	jule::Ptr<_1ac7bba4e_scopeCoder> _self_;
};
static void __jule_anon_1bec1994b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bec1994b_ctx>().dealloc(); }
inline void __jule_anon_1bec1994b(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bec1be37_ctx{
	jule::Ptr<_1ac7bba4e_scopeCoder> _self_;
};
static void __jule_anon_1bec1be37_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bec1be37_ctx>().dealloc(); }
inline void __jule_anon_1bec1be37(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bec35a44_ctx{
	jule::Ptr<_1ac7bba4e_scopeCoder> _self_;
};
static void __jule_anon_1bec35a44_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bec35a44_ctx>().dealloc(); }
inline void __jule_anon_1bec35a44(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1becb7334_ctx{
	jule::Ptr<_1ac7bba4e_scopeCoder> _self_;
};
static void __jule_anon_1becb7334_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1becb7334_ctx>().dealloc(); }
inline void __jule_anon_1becb7334(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1becb8665_ctx{
	jule::Ptr<_1ac7bba4e_scopeCoder> _self_;
	jule::Ptr<_1aab0232b_Match> _74030_m;
};
static void __jule_anon_1becb8665_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1becb8665_ctx>().dealloc(); }
inline void __jule_anon_1becb8665(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1bed3c552_ctx{
	jule::Ptr<_1ac7bba4e_scopeCoder> _self_;
	jule::Ptr<_1aaa31d1b_AnonFnExpr> _111034_m;
};
static void __jule_anon_1bed3c552_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bed3c552_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bed3c552(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab70795_Var> _111667_v);
struct __jule_anon_1c01bd2c8_ctx{
	jule::Ptr<_1ac894d58_ObjectCoder> _self_;
};
static void __jule_anon_1c01bd2c8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c01bd2c8_ctx>().dealloc(); }
inline void __jule_anon_1c01bd2c8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab3267a_Package>* _82938_pkg);
struct __jule_anon_1c01d2d04_ctx{
	jule::Ptr<_1ac894d58_ObjectCoder> _self_;
	jule::Ptr<_1aab70795_Var> _91424_v;
};
static void __jule_anon_1c01d2d04_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c01d2d04_ctx>().dealloc(); }
inline void __jule_anon_1c01d2d04(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c01d4de4_ctx{
	jule::Ptr<_1ac894d58_ObjectCoder> _self_;
	jule::Ptr<_1aab70795_Var> _91424_v;
};
static void __jule_anon_1c01d4de4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c01d4de4_ctx>().dealloc(); }
inline void __jule_anon_1c01d4de4(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c01d7600_ctx{
	jule::Ptr<_1ac894d58_ObjectCoder> _self_;
};
static void __jule_anon_1c01d7600_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c01d7600_ctx>().dealloc(); }
inline void __jule_anon_1c01d7600(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c01d8799_ctx{
	jule::Ptr<_1ac894d58_ObjectCoder> _self_;
	jule::Ptr<_1aab70795_Var> _91424_v;
};
static void __jule_anon_1c01d8799_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c01d8799_ctx>().dealloc(); }
inline void __jule_anon_1c01d8799(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c0227673_ctx{
	jule::Ptr<_1ac894d58_ObjectCoder> _self_;
};
static void __jule_anon_1c0227673_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0227673_ctx>().dealloc(); }
inline void __jule_anon_1c0227673(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab3267a_Package>* _117938_pkg);
struct __jule_anon_1c02289d7_ctx{
	jule::Ptr<_1ac894d58_ObjectCoder> _self_;
};
static void __jule_anon_1c02289d7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c02289d7_ctx>().dealloc(); }
inline void __jule_anon_1c02289d7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa42524_SymTab>* _120231_file);
struct __jule_anon_1c0234c9b_ctx{
	jule::Ptr<_1ac894d58_ObjectCoder> _self_;
};
static void __jule_anon_1c0234c9b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0234c9b_ctx>().dealloc(); }
inline void __jule_anon_1c0234c9b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab3267a_Package>* _124138_pkg);
struct __jule_anon_1c0239cd4_ctx{
	jule::Ptr<_1ac8932b8_traitHash> _12747_hash;
};
static void __jule_anon_1c0239cd4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0239cd4_ctx>().dealloc(); }
inline void __jule_anon_1c0239cd4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa3b221_Fn>* _127836_m);
struct __jule_anon_1c023c336_ctx{
	jule::Ptr<_1ac894d58_ObjectCoder> _self_;
};
static void __jule_anon_1c023c336_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c023c336_ctx>().dealloc(); }
inline void __jule_anon_1c023c336(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab3267a_Package>* _129238_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1c02cd6d5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1c02d60b1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base);
inline jule::Bool __jule_anon1bd1c1531(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab2ee08_ImportInfo> _206125_pkg);
struct __jule_anon_1bdb856cb_ctx{
	jule::Str _478538_namespace;
};
static void __jule_anon_1bdb856cb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bdb856cb_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bdb856cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab2ee08_ImportInfo> _478630_imp);
struct __jule_anon_1c01be186_ctx{
	jule::Ptr<_1ac894d58_ObjectCoder> _self_;
};
static void __jule_anon_1c01be186_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c01be186_ctx>().dealloc(); }
inline void __jule_anon_1c01be186(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa42524_SymTab>* _83032_file);
struct __jule_anon_1c0228531_ctx{
	jule::Ptr<_1aab3267a_Package> *_117938_pkg;
	jule::Ptr<_1ac894d58_ObjectCoder> _self_;
};
static void __jule_anon_1c0228531_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0228531_ctx>().dealloc(); }
inline void __jule_anon_1c0228531(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa42524_SymTab>* _118032_file);
struct __jule_anon_1c023d1e4_ctx{
	jule::Ptr<_1ac894d58_ObjectCoder> _self_;
};
static void __jule_anon_1c023d1e4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c023d1e4_ctx>().dealloc(); }
inline void __jule_anon_1c023d1e4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa42524_SymTab>* _129332_file);
jule::Array<jule::Array<jule::Str,2>,5> _1bb09d5ca_HelpMap;
jule::Str _1ac92712c_OutDir;
jule::Str _1ac927506_OutName;
jule::Str _1ac9277ae_Out;
jule::Uintptr _1c6c5e934_STDIN;
jule::Uintptr _1c6c5ec64_STDOUT;
jule::Uintptr _1c6c60050_STDERR;
jule::Array<jule::U8,256> _1e0edadc7_first;
jule::Array<_1e0edb47c_acceptRange,16> _1e0edb823_acceptRanges;
jule::Array<jule::U8,32> _1c6d92abc__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1c6d931a5__DE_BRUIJN64_TAB;
jule::I32 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_1bb081c40_RangeTable> _1bb01e4e6__L;
jule::Ptr<_1bb081c40_RangeTable> _1bb020409__LU;
jule::Ptr<_1bb081c40_RangeTable> _1bb0263dd_Letter;
jule::Ptr<_1bb081c40_RangeTable> _1bb02c6ad_Upper;
jule::Slice<_1bb080cd8_CaseRange> _1bb079d9d__CaseRanges;
jule::Array<jule::U8,256> _1bb07a189__PROPERTIES;
jule::Array<jule::U16,128> _1bb07be6b_asciiFold;
jule::Slice<_1bb0807dd_foldPair> _1bb07c257_caseOrbit;
jule::Array<jule::Str,4> _1c6dac466_CppHeaderExts;
jule::Array<jule::Str,3> _1c6dac554_CppExts;
jule::Array<jule::Str,1> _1c6e36358_ObjectiveCppExts;
jule::Str _1bb095209_PathStdlib;
jule::Str _1bb095490_PathExec;
jule::Str _1bb095748_PathWd;
jule::Str _1bb095a45_PathApi;
jule::Str _1bb095ced_OS;
jule::Str _1bb0960a6_Arch;
jule::Str _1bb099b37_Compiler;
jule::Str _1bb09b034_CompilerPath;
jule::Str _1bb09b243_CppStd;
jule::Bool _1bb09b4da_Shadowing;
jule::Bool _1bb09b793_Transpilation;
jule::Bool _1bb09ba4b_Test;
jule::Bool _1bb09bd04_RC;
jule::Bool _1bb09c1bc_Safety;
jule::Bool _1bb09c40e_Production;
_1a7916d03_floatInfo _1a79171bb_f32info;
_1a7916d03_floatInfo _1a79174b8_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1a791edd8_detailedPowsOfTen;
jule::Slice<jule::I32> _1a7921b43_powtab;
jule::Slice<jule::F64> _1a7922704_f64pow10;
jule::Slice<jule::F32> _1a7922a34_f32pow10;
jule::Array<jule::U64,20> _1a7925c35_u64pow10;
jule::Slice<_1a79299c5_leftCheat> _1a7929e04_leftCheats;
jule::Array<jule::I32,5> _1aa03a2c0_Spaces;
jule::Array<jule::U32,6> _1aa03a5ab_UnaryOps;
jule::Array<jule::U32,18> _1aa03a8db_BinOps;
jule::Array<jule::U32,2> _1aa0d22ce_PostfixOps;
jule::Array<jule::U32,11> _1aa0d25ba_AssignOps;
jule::Array<_1aa0e0bc2_kindPair,28> _1aa0e10ac_keywords;
jule::Array<_1aa0e0bc2_kindPair,46> _1aa0e13dc_basicOps;
jule::I32 _1aaab5586_BitSize;
jule::Str _1aaab57d9_SysInt;
jule::Str _1aaab5a92_SysUint;
jule::Slice<jule::Str> _1aaae6c05_builtinConstraints;
jule::Ptr<_1aabecdb6_Type> _1aac76549_primNil;
jule::Ptr<_1aabecdb6_Type> _1aac76846_primVoid;
jule::Ptr<_1aabecdb6_Type> _1aac76aee_primAny;
jule::Ptr<_1aabecdb6_Type> _1aac76deb_primStr;
jule::Ptr<_1aabecdb6_Type> _1aac771a4_primBool;
jule::Ptr<_1aabecdb6_Type> _1aac7745c_primUintptr;
jule::Ptr<_1aabecdb6_Type> _1aac77715_primUint;
jule::Ptr<_1aabecdb6_Type> _1aac77acd_primInt;
jule::Ptr<_1aabecdb6_Type> _1aac77d20_primI8;
jule::Ptr<_1aabecdb6_Type> _1aac780b7_primI16;
jule::Ptr<_1aabecdb6_Type> _1aac78370_primI32;
jule::Ptr<_1aabecdb6_Type> _1aac78628_primI64;
jule::Ptr<_1aabecdb6_Type> _1aac788d1_primU8;
jule::Ptr<_1aabecdb6_Type> _1aac78b89_primU16;
jule::Ptr<_1aabecdb6_Type> _1aac78e42_primU32;
jule::Ptr<_1aabecdb6_Type> _1aac7942b_primU64;
jule::Ptr<_1aabecdb6_Type> _1aac7966d_primF32;
jule::Ptr<_1aabecdb6_Type> _1aac7987c_primF64;
jule::Ptr<_1ab620d8d_Meta> _1ab61db5a_ProgramMeta;
jule::Ptr<_1ac690071_data> _1ac68e713_emptyData;
jule::Bool _1ac6950ba_Copy;
jule::Bool _1ac6953b7_Deadcode;
jule::Bool _1ac695670_Append;
jule::Bool _1ac69596c_Math;
jule::Bool _1ac695c25_Access;
jule::Bool _1ac695ecd_Inline;
jule::Bool _1ac696286_Ptr;
jule::Bool _1ac69664e_Cond;
jule::Bool _1ac696891_Str;
jule::Bool _1ac696b38_Slice;
jule::Bool _1ac696de1_Assign;
jule::Bool _1ac697199_Exceptional;
jule::Bool _1ac697452_Iter;
jule::Bool _1ac69770a_Dynamic;
jule::Bool _1ac6979b3_Array;
jule::Bool _1ac697e9c_Len;
jule::Bool _1ac6981de_StdStrings;
jule::Bool _1ac6983ed_StdMathCmplx;
jule::Bool _1ac7b76c6_exprEnabled;
jule::Bool _1ac7b78d5_scopeEnabled;
jule::Array<jule::I32,12> _1ac886971_mdays;
jule::Str _1ac7bb2e0_assignArgName;
jule::Ptr<_1aabecdb6_Type> _1ac8922c8_generalGCPtr;
jule::Slice<_1bb080cd8_CaseRange> _1bb079ab2_CaseRanges;


























inline jule::Bool _1e0edb47c_acceptRange_eq(_1e0edb47c_acceptRange *_self_, _1e0edb47c_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _1e102ada1_LittleEndian_eq(_1e102ada1_LittleEndian *_self_, _1e102ada1_LittleEndian _other_) { return true; }

inline jule::U32 static__1e10416be_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__1e10420e8_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _1e1045728_u128_eq(_1e1045728_u128 *_self_, _1e1045728_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1beac872d_group_eq(_1beac872d_group *_self_, _1beac872d_group _other_) {
	return 
		_1acba142d_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1beac8c28_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_1beac6671__Map> static__1beac6a4a_make(void) {
	return jule::new_ptr<_1beac6671__Map>(_1beac6671__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1beac872d_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1beac6b9e_initData(_1beac6671__Map* _self_, jule::I32 _13524_cap) {
	jule::I32 _1363_groups = _1c6da2a66_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1beac872d_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1beac872d_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beae3b33:;
		if (it != expr_end) {
			jule::I32 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1c6da2c75_newEmptyMetadata();
			}
			_iter_next_1beae3b33:;
			++it;
			_1407_i++;
			goto _iter_begin_1beae3b33;
		}
		_iter_end_1beae3b33:;
	};
}



inline jule::U64 _1beac6d03_hash(_1beac6671__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _1acbbe47e_toStr(_14616_k);;
	return _1e1048b9e_hash(_1c69914ac_StrBytes(_1473_bytes));;
}



inline void _1beac6e57_rehash(_1beac6671__Map* _self_, jule::I32 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1beac6b9e_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1beac872d_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1beac872d_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1beac872d_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1beac872d_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beae6d9a:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1c6da2c75_newEmptyMetadata();
			}
			_iter_next_1beae6d9a:;
			++it;
			_1617_i++;
			goto _iter_begin_1beae6d9a;
		}
		_iter_end_1beae6d9a:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	(*(_self_))._field_dead=0LL;
	(*(_self_))._field_resident=0LL;
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beae71db:;
		if (it != expr_end) {
			jule::I32 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1beae89d4:;
					if (it != expr_end) {
						jule::I32 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1beae89d4;
							};
							{
								(*(_1beac74b8_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1beae89d4:;
						++it;
						_1678_s++;
						goto _iter_begin_1beae89d4;
					}
					_iter_end_1beae89d4:;
				};
			}
			_iter_next_1beae71db:;
			++it;
			_1667_g++;
			goto _iter_begin_1beae71db;
		}
		_iter_end_1beae71db:;
	};
}



inline jule::I32 _1beac70ab_nextSize(_1beac6671__Map* _self_) {
	jule::I32 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1beac7210_lookup(jule::Ptr<_1beac6671__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1c6da314e_splitHash(_1beac6d03_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1c6da344b_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1c6da1aed_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1c6da21c5_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_keys[static_cast<jule::I32>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_values[static_cast<jule::I32>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1beaeeee6:;
			}
			_iter_end_1beaeeee6:;;
			_2018_matches=_1c6da1e0b_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1bead8782:;
	}
	_iter_end_1bead8782:;;
}



inline jule::Bool _1beac7364_get(jule::Ptr<_1beac6671__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1beac7210_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _1beac74b8_set(_1beac6671__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1beac6e57_rehash(_self_, _1beac70ab_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1c6da314e_splitHash(_1beac6d03_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1c6da344b_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1c6da1aed_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1c6da21c5_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1beb07b69:;
			}
			_iter_end_1beb07b69:;;
			_2488_matches=_1c6da1e0b_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1c6da21c5_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)][static_cast<jule::I32>(_2615_s)]=_2457_lo;
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1beb06096:;
	}
	_iter_end_1beb06096:;;
}



inline jule::Bool _1beac761c_del(jule::Ptr<_1beac6671__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1c6da314e_splitHash(_1beac6d03_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1c6da344b_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1c6da1aed_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1c6da21c5_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1c6da1e0b_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)]))) != 0LLU)) {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-128LL;
							((*_self_.alloc)._field_resident)--;
						} else {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-2LL;
							((*_self_.alloc)._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)]=_30214_key;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_values[static_cast<jule::I32>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1beb106aa:;
			}
			_iter_end_1beb106aa:;;
			_2838_matches=_1c6da1e0b_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1beb0e742:;
	}
	_iter_end_1beb0e742:;;
}



inline void _1beac7771_clear(jule::Ptr<_1beac6671__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb16c55:;
		if (it != expr_end) {
			jule::I32 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1beb1777d:;
					if (it != expr_end) {
						jule::I32 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1beb1777d:;
						++it;
						_3298_j++;
						goto _iter_begin_1beb1777d;
					}
					_iter_end_1beb1777d:;
				};
			}
			_iter_next_1beb16c55:;
			++it;
			_3287_i++;
			goto _iter_begin_1beb16c55;
		}
		_iter_end_1beb16c55:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*_self_.alloc)._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb071da:;
		if (it != expr_end) {
			jule::I32 _3357_i = it - expr->begin();
			{
				_1beac872d_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1beb19d46:;
						if (it != expr_end) {
							jule::I32 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1beb19d46:;
							++it;
							_3389_j++;
							goto _iter_begin_1beb19d46;
						}
						_iter_end_1beb19d46:;
					};
				};
			}
			_iter_next_1beb071da:;
			++it;
			_3357_i++;
			goto _iter_begin_1beb071da;
		}
		_iter_end_1beb071da:;
	};
	(*(_self_))._field_dead=0LL;
	(*_self_.alloc)._field_resident=0LL;
}



inline jule::I32 _1beac78c5_len(jule::Ptr<_1beac6671__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*_self_.alloc)._field_dead);;
}



inline jule::I32 _1beac7a29_cap(_1beac6671__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1bead1deb_mapIterator _1beac7b7d_iterator(jule::Ptr<_1beac6671__Map> _self_) {
	_1bead1deb_mapIterator _3607_iterator = _1bead1deb_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1beac872d_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1bead2292_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_1beb1e312__Map> static__1beb1e642_make(void) {
	return jule::new_ptr<_1beb1e312__Map>(_1beb1e312__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1beb21204_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1beb1e796_initData(_1beb1e312__Map* _self_, jule::I32 _13524_cap) {
	jule::I32 _1363_groups = _1c6da2a66_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1beb21204_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1beb21204_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1aaa3e2ce_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaa3e2ce_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb39805:;
		if (it != expr_end) {
			jule::I32 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1c6da2c75_newEmptyMetadata();
			}
			_iter_next_1beb39805:;
			++it;
			_1407_i++;
			goto _iter_begin_1beb39805;
		}
		_iter_end_1beb39805:;
	};
}



inline jule::U64 _1beb1e8ea_hash(_1beb1e312__Map* _self_, jule::Ptr<_1aaa3e2ce_FnIns> _14616_k) {
	jule::Str _1473_bytes = _1bd7807b0_toStr(_14616_k);;
	return _1e1048b9e_hash(_1c69914ac_StrBytes(_1473_bytes));;
}



inline void _1beb1ea4e_rehash(_1beb1e312__Map* _self_, jule::I32 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1beb1e796_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1beb21204_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1beb21204_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1beb21204_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1beb21204_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1aaa3e2ce_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaa3e2ce_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb3ca6c:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1c6da2c75_newEmptyMetadata();
			}
			_iter_next_1beb3ca6c:;
			++it;
			_1617_i++;
			goto _iter_begin_1beb3ca6c;
		}
		_iter_end_1beb3ca6c:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	(*(_self_))._field_dead=0LL;
	(*(_self_))._field_resident=0LL;
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb3cdad:;
		if (it != expr_end) {
			jule::I32 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1beb3e6a6:;
					if (it != expr_end) {
						jule::I32 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1beb3e6a6;
							};
							{
								(*(_1beb200b0_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1beb3e6a6:;
						++it;
						_1678_s++;
						goto _iter_begin_1beb3e6a6;
					}
					_iter_end_1beb3e6a6:;
				};
			}
			_iter_next_1beb3cdad:;
			++it;
			_1667_g++;
			goto _iter_begin_1beb3cdad;
		}
		_iter_end_1beb3cdad:;
	};
}



inline jule::I32 _1beb1eba3_nextSize(_1beb1e312__Map* _self_) {
	jule::I32 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1beb1ed07_lookup(jule::Ptr<_1beb1e312__Map> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1c6da314e_splitHash(_1beb1e8ea_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1c6da344b_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1c6da1aed_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1c6da21c5_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_keys[static_cast<jule::I32>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_values[static_cast<jule::I32>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1beb45bb8:;
			}
			_iter_end_1beb45bb8:;;
			_2018_matches=_1c6da1e0b_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1beb2e454:;
	}
	_iter_end_1beb2e454:;;
}



inline jule::Slice<jule::Uintptr> _1beb1ee5b_get(jule::Ptr<_1beb1e312__Map> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1beb1ed07_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _1beb200b0_set(_1beb1e312__Map* _self_, jule::Ptr<_1aaa3e2ce_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1beb1ea4e_rehash(_self_, _1beb1eba3_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1c6da314e_splitHash(_1beb1e8ea_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1c6da344b_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1c6da1aed_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1c6da21c5_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1beb4d83b:;
			}
			_iter_end_1beb4d83b:;;
			_2488_matches=_1c6da1e0b_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1c6da21c5_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)][static_cast<jule::I32>(_2615_s)]=_2457_lo;
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1beb4bc68:;
	}
	_iter_end_1beb4bc68:;;
}



inline jule::Bool _1beb20214_del(jule::Ptr<_1beb1e312__Map> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1c6da314e_splitHash(_1beb1e8ea_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1c6da344b_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1c6da1aed_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1c6da21c5_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1c6da1e0b_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)]))) != 0LLU)) {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-128LL;
							((*_self_.alloc)._field_resident)--;
						} else {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-2LL;
							((*_self_.alloc)._field_dead)++;
						};
						jule::Ptr<_1aaa3e2ce_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)]=_30214_key;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_values[static_cast<jule::I32>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1beb5637c:;
			}
			_iter_end_1beb5637c:;;
			_2838_matches=_1c6da1e0b_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1beb55414:;
	}
	_iter_end_1beb55414:;;
}



inline void _1beb20368_clear(jule::Ptr<_1beb1e312__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb5c927:;
		if (it != expr_end) {
			jule::I32 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1beb5d450:;
					if (it != expr_end) {
						jule::I32 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1beb5d450:;
						++it;
						_3298_j++;
						goto _iter_begin_1beb5d450;
					}
					_iter_end_1beb5d450:;
				};
			}
			_iter_next_1beb5c927:;
			++it;
			_3287_i++;
			goto _iter_begin_1beb5c927;
		}
		_iter_end_1beb5c927:;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*_self_.alloc)._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beb4cdac:;
		if (it != expr_end) {
			jule::I32 _3357_i = it - expr->begin();
			{
				_1beb21204_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1beb60a18:;
						if (it != expr_end) {
							jule::I32 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1beb60a18:;
							++it;
							_3389_j++;
							goto _iter_begin_1beb60a18;
						}
						_iter_end_1beb60a18:;
					};
				};
			}
			_iter_next_1beb4cdac:;
			++it;
			_3357_i++;
			goto _iter_begin_1beb4cdac;
		}
		_iter_end_1beb4cdac:;
	};
	(*(_self_))._field_dead=0LL;
	(*_self_.alloc)._field_resident=0LL;
}



inline jule::I32 _1beb204bc_len(jule::Ptr<_1beb1e312__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*_self_.alloc)._field_dead);;
}



inline jule::I32 _1beb20621_cap(_1beb1e312__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1beb27a35_mapIterator _1beb20775_iterator(jule::Ptr<_1beb1e312__Map> _self_) {
	_1beb27a35_mapIterator _3607_iterator = _1beb27a35_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1beb21204_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1beb27dcb_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _1bead2292_init(_1bead1deb_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1beac872d_group> _1___jule_assign_arg = (*(*(_self_))._field_m.alloc)._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1beac78c5_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1c68ba24e_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1bead23e6_next(_1bead1deb_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1bead94db;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1bead94db:;
			}
			_iter_end_1bead94db:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1bead60ba:;
	}
	_iter_end_1bead60ba:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1beb27dcb_init(_1beb27a35_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1beb21204_group> _1___jule_assign_arg = (*(*(_self_))._field_m.alloc)._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1beb204bc_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1c68ba24e_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1aaa3e2ce_FnIns__jule_tuple_psuintptr _1beb28030_next(_1beb27a35_mapIterator* _self_) {
	__jule_tuple_px_1aaa3e2ce_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1beb301ad;
					};
					jule::Ptr<_1aaa3e2ce_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1beb301ad:;
			}
			_iter_end_1beb301ad:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1beb2bc8c:;
	}
	_iter_end_1beb2bc8c:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}











inline _1ace17078_Builder static__1ace178c5_New(jule::I32 _2316_cap) {
	if ((_2316_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("strings: Builder.New: cap < 0", 29) + jule::Str("\nlocation: std/internal/strings/builder.jule:25:4"));;
	};
	return _1ace17078_Builder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _2316_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline jule::Exceptional<jule::I32> _1ace17c16_Write(_1ace17078_Builder* _self_, jule::Slice<jule::U8> _3421_b) {
	jule::I32 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_3421_b);;
	__jule_func_result = _3421_b.len();
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1ace18057_WriteStr(_1ace17078_Builder* _self_, jule::Str _4124_s) {
	jule::I32 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_4124_s);;
	__jule_func_result = _4124_s.len();
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::VoidExceptional _1ace18310_WriteByte(_1ace17078_Builder* _self_, jule::U8 _4825_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_4825_b); };
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1ace18651_WriteRune(_1ace17078_Builder* _self_, jule::I32 _5525_r) {
	jule::I32 __jule_func_result = 0;
	if ((_5525_r < 128LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(static_cast<jule::U8>(_5525_r)); };
		__jule_func_result = 1LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=(*(_self_))._field_buf.len();
	(*(_self_))._field_buf=_1e0edd54a_AppendRune((*(_self_))._field_buf, _5525_r);
	__jule_func_result=((*(_self_))._field_buf.len() - __jule_func_result);
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Str _1ace188d7_Str(_1ace17078_Builder* _self_) {
	jule::Str _687_s = _1c6991a0c_StrFromBytes((*(_self_))._field_buf);;
	_1ace18ad5_Clear(_self_);
	return _687_s;;
}



inline void _1ace18ad5_Clear(_1ace17078_Builder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I32 _1ace18d6b_Len(_1ace17078_Builder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1ace19388_Buf(_1ace17078_Builder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1ace19641_SetBuf(_1ace17078_Builder* _self_, jule::Slice<jule::U8> _9533_buf) {
	(*(_self_))._field_buf=_9533_buf;
}








inline jule::Bool _1bb0807dd_foldPair_eq(_1bb0807dd_foldPair *_self_, _1bb0807dd_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _1bb080cd8_CaseRange_eq(_1bb080cd8_CaseRange *_self_, _1bb080cd8_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_1acc01a77_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _1bb08128e_Range16_eq(_1bb08128e_Range16 *_self_, _1bb08128e_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _1bb0817bc_Range32_eq(_1bb0817bc_Range32 *_self_, _1bb0817bc_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}













inline jule::U8 _1bb090402_index(_1bb08ee3a_lazyBuff* _self_, jule::I32 _5421_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5421_i];;
	};
	return (*(_self_))._field_path[_5421_i];;
}



inline void _1bb0906aa_append(_1bb08ee3a_lazyBuff* _self_, jule::U8 _6122_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6122_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6122_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1bb090941_string(_1bb08ee3a_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + jule::Str::unsafe_from_bytes((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _1ad0a8604_File_eq(_1ad0a8604_File *_self_, _1ad0a8604_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Exceptional<jule::Ptr<_1ad0a8604_File>> static__1ad0a2950_Open(jule::Str _1517_path, jule::I32 _1528_flag, jule::I32 _1541_mode) {
	jule::Slice<jule::U8> _163_s = _1c6979c48_StrToBytes(_1517_path);;
	jule::I32 _173_handle = _1c6c61282_Open((&(_163_s[0LL])), _1528_flag, _1541_mode);;
	if ((_173_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1ad0a8604_File>>{.error=jule::Any(_1ad148b5b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_1ad0a8604_File>>{.result=static__1ad0a90d8_New(static_cast<jule::Uintptr>(_173_handle))};;
}



inline jule::VoidExceptional static__1ad0a2b81_Remove(jule::Str _2519_path) {
	jule::Slice<jule::U8> _263_s = _1c6979c48_StrToBytes(_2519_path);;
	if ((_1c6c6300e_Unlink((&(_263_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ad148b5b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1ad0a3115_Write(_1ad0a8604_File* _self_, jule::Slice<jule::U8> _3821_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_3821_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1e0ee2098_handleRW(&(_3821_buf));
	__jule_func_result=_1c6ca1459_Write(static_cast<jule::I32>((*(_self_))._field_handle), (&(_3821_buf[0LL])), static_cast<jule::U32>(_3821_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_1ad148b5b_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1ad0a3456_Read(_1ad0a8604_File* _self_, jule::Slice<jule::U8> _5724_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_5724_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1e0ee2098_handleRW(&(_5724_buf));
	__jule_func_result=_1c6ca0bc8_Read(static_cast<jule::I32>((*(_self_))._field_handle), (&(_5724_buf[0LL])), static_cast<jule::U32>(_5724_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_1ad148b5b_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Ptr<_1ad0a8604_File> static__1ad0a90d8_New(jule::Uintptr _6723_handle) {
	return jule::new_ptr<_1ad0a8604_File>(_1ad0a8604_File{._field_handle=_6723_handle});;
}



inline jule::Exceptional<jule::Ptr<_1ad0a8604_File>> static__1ad0a93a2_Create(jule::Str _7819_path) {
	return static__1ad0a2950_Open(_7819_path, static_cast<jule::I32>(578LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1ad0a966b_Read(jule::Str _8517_path) {
	_1ad133ecb_Stat _863_s = ({
		auto except = static__1ad0a5a41_Of(_8517_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} _1ad133ecb_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1ad13466e_IsReg(&_863_s)))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0)};
	};
	jule::I32 _917_sz = static_cast<jule::I32>(_1ad134905_Size(&_863_s));;
	if ((_917_sz != static_cast<jule::I32>(_1ad134905_Size(&_863_s)))) {
		_917_sz=0LL;
	};
	if ((_917_sz < 512LLU)) {
		_917_sz=512LLU;
	};
	jule::Ptr<_1ad0a8604_File> _1047_f = ({
		auto except = static__1ad0a2950_Open(_8517_path, 0LL, 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1ad0a8604_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _1057_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_917_sz, _917_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1067_n = 0LL;;
	while ((_1067_n < _917_sz)) {
		{
			jule::I32 _1084_rn = ({
				auto except = _1ad0a3456_Read(_1047_f.ptr(), _1057_buf.slice(_1067_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_1084_rn == 0LL)) {
				goto _iter_end_1bc724e92;
			};
			_1067_n+=_1084_rn;
		}
	_iter_next_1bc724e92:;
	}
	_iter_end_1bc724e92:;;
	({
		auto except = _1ad0aa31a_Close(_1047_f.ptr());
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_1057_buf.slice(0LL, _1067_n)};;
}



inline jule::VoidExceptional static__1ad0a9a12_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I32 _12443_perm) {
	jule::Ptr<_1ad0a8604_File> _1257_f = ({
		auto except = static__1ad0a2950_Open(_12418_path, static_cast<jule::I32>(577LL), _12443_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_1ad0a8604_File>(nullptr);});
	});;
	jule::I32 _1267_n = 0LL;;
	while ((_1267_n < _12429_data.len())) {
		{
			_1267_n+=({
				auto except = _1ad0a3115_Write(_1257_f, _12429_data.slice(_1267_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1bc729e97:;
	}
	_iter_end_1bc729e97:;;
	return _1ad0aa31a_Close(_1257_f.ptr());
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ad0aa31a_Close(_1ad0a8604_File* _self_) {
	if ((_1c6ca10a2_Close(static_cast<jule::I32>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ad148b5b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _1ad131d64_cmdAttrs_eq(_1ad131d64_cmdAttrs *_self_, _1ad131d64_cmdAttrs _other_) {
	return 
		(_self_->_field_pid == _other_._field_pid);
}






inline jule::Bool _1ad133ecb_Stat_eq(_1ad133ecb_Stat *_self_, _1ad133ecb_Stat _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Exceptional<_1ad133ecb_Stat> static__1ad0a5a41_Of(jule::Str _1015_path) {
	if ((_1015_path).empty()) {
		return jule::Exceptional<_1ad133ecb_Stat>{.error=jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0)};
	};
	struct stat _147_handle = (struct stat){};;
	jule::Slice<jule::U8> _153_s = _1c6979c48_StrToBytes(_1015_path);;
	jule::I32 _163_code = _1c6c60d53_Stat((&(_153_s[0LL])), (&(_147_handle)));;
	if ((_163_code == -1LL)) {
		return jule::Exceptional<_1ad133ecb_Stat>{.error=jule::Any(_1ad148b5b_getLastFsError(), &__jule_any_type0)};
	};
	_1ad133ecb_Stat _207_stat = _1ad133ecb_Stat{._field_mode=0LL, ._field_size=0};;
	_207_stat._field_size=static_cast<jule::U32>(_147_handle.st_size);
	if (((_147_handle.st_mode & 16384LLU) == 16384LLU)) {
		_207_stat._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_147_handle.st_mode & 32768LLU) == 32768LLU)) {
		_207_stat._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<_1ad133ecb_Stat>{.result=_207_stat};;
}



inline jule::Bool _1ad1343d8_IsDir(_1ad133ecb_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _1ad13466e_IsReg(_1ad133ecb_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _1ad134905_Size(_1ad133ecb_Stat* _self_) {
	return (*(_self_))._field_size;;
}








inline jule::Bool _1ace263b7_Log_eq(_1ace263b7_Log *_self_, _1ace263b7_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1a7916d03_floatInfo_eq(_1a7916d03_floatInfo *_self_, _1a7916d03_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1a79299c5_leftCheat_eq(_1a79299c5_leftCheat *_self_, _1a79299c5_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1a792a4dc_decimal_eq(_1a792a4dc_decimal *_self_, _1a792a4dc_decimal _other_) {
	return 
		_1bca0ba5e_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1a7921ea6_set(_1a792a4dc_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1bcbe440b:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1bcbe4472:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1bcbe452c:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1bcbe6056:;
					{
						goto _iter_next_1bcbe57d6;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1bcbe6100:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1bcbe57d6;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1bcbe6166:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1bcbe57d6;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1bcbe57d6;
					}
				}
				_match_end_1bcbe5e24:;
			};
			goto _iter_end_1bcbe57d6;
		}
	_iter_next_1bcbe57d6:;
	}
	_iter_end_1bcbe57d6:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1a791c611_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1bcbebe3b;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I32>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1bcbebe3b:;
		}
		_iter_end_1bcbebe3b:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1a79222e7_floatBits(_1a792a4dc_decimal* _self_, _1a7916d03_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1bcc097d9;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1bcc096b8;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1bcc097d9;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1a7921b43_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1a7921b43_powtab[(*(_self_))._field_dp];
			};
			_1a792ab80_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1bcc02084:;
	}
	_iter_end_1bcc02084:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1a7921b43_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1a7921b43_powtab[(-((*(_self_))._field_dp))];
			};
			_1a792ab80_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1bcc007ad:;
	}
	_iter_end_1bcc007ad:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I32 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1a792ab80_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= (({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
		goto _julec_label_1bcc096b8;
	};
	_1a792ab80_shift(_self_, static_cast<jule::I32>((jule::U32)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1a792b730_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= (({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			goto _julec_label_1bcc096b8;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1bcc097d9;
	_julec_label_1bcc096b8:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I32>((jule::U32)((jule::U32)(({ jule::U32 __jule_x = static_cast<jule::U32>(1LLU); jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U32>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1bcc097d9:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & (({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL))); jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1a792a8c7_assign(_1a792a4dc_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1bcc0cc4e:;
	}
	_iter_end_1bcc0cc4e:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1bcc0d029:;
	}
	_iter_end_1bcc0d029:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1a792bd3a_trim(_self_);
}



inline void _1a792ab80_shift(_1a792a4dc_decimal* _self_, jule::I32 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1bcc1058c:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1bcc10636:;
			{
				while ((_17625_k > 28LL)) {
					{
						_1a792c885_leftShift(_self_, 28LLU);
						_17625_k-=28LL;
					}
				_iter_next_1bcc111d6:;
				}
				_iter_end_1bcc111d6:;;
				_1a792c885_leftShift(_self_, static_cast<jule::U32>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1bcc1069c:;
			{
				while ((_17625_k < -28LL)) {
					{
						_1a792c126_rightShift(_self_, 28LLU);
						_17625_k+=28LL;
					}
				_iter_next_1bcc1112b:;
				}
				_iter_end_1bcc1112b:;;
				_1a792c126_rightShift(_self_, static_cast<jule::U32>((-(_17625_k))));
			}
		}
		_match_end_1bcc10427:;
	};
}



inline void _1a792ae38_roundDown(_1a792a4dc_decimal* _self_, jule::I32 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1a792bd3a_trim(_self_);
}



inline void _1a792b1e1_roundUp(_1a792a4dc_decimal* _self_, jule::I32 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1bcc144a3:;
	}
	_iter_end_1bcc144a3:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1a792b499_round(_1a792a4dc_decimal* _self_, jule::I32 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1a792cc09_shouldRoundUp(_self_, _23221_nd)) {
		_1a792b1e1_roundUp(_self_, _23221_nd);
	} else {
		_1a792ae38_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1a792b730_roundedInteger(_1a792a4dc_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1bcc16cd0:;
	}
	_iter_end_1bcc16cd0:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1bcc18bd3:;
	}
	_iter_end_1bcc18bd3:;;
	if (_1a792cc09_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}








inline jule::Bool _1bb0c1bb4_AnsiEscape_eq(_1bb0c1bb4_AnsiEscape *_self_, _1bb0c1bb4_AnsiEscape _other_) { return true; }

inline void static__1bb0a0852_Reset(void) {
	jule::print(_1acbbe47e_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__1bb0c0b5d_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::print(_1acbbe47e_toStr(_1918_escape));
	jule::print(_1acbbe47e_toStr(_1931_text));
	static__1bb0a0852_Reset();
}








inline jule::Bool _1a7930b74_Logger_eq(_1a7930b74_Logger *_self_, _1a7930b74_Logger _other_) { return true; }

inline void static__1a7930e2c_LogFlat(_1ace263b7_Log* _1421_l) {
	jule::println(_1acbbe47e_toStr((*(_1421_l))._field_Text));
}



inline void static__1a793114c_LogError(_1ace263b7_Log* _1922_l) {
	jule::print(_1acbbe47e_toStr(jule::Str::lit("\033[31m", 5)));
	jule::print(_1acbbe47e_toStr(jule::Str::lit("error: ", 7)));
	jule::print(_1acbbe47e_toStr((*(_1922_l))._field_Text));
	static__1bb0a0852_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::print(_1acbbe47e_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::print(_1acbbe47e_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::print(_1acbbe47e_toStr(jule::Str::lit(":", 1)));
		jule::print(_1acbbe47e_toStr(_1a792ea63_Itoa((*(_1922_l))._field_Row)));
		jule::print(_1acbbe47e_toStr(jule::Str::lit(":", 1)));
		jule::print(_1acbbe47e_toStr(_1a792ea63_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1bb08cdc2_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1bb08b6b7_ReplaceAll(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1));
		jule::I32 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::print(_1acbbe47e_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1a792ea63_Itoa((*(_1922_l))._field_Row);;
		jule::print(_1acbbe47e_toStr(_434_row));
		jule::print(_1acbbe47e_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1acbbe47e_toStr(_388_line));
		jule::print(_1acbbe47e_toStr(jule::Str::lit("\n  ", 3)));
		jule::print(_1acbbe47e_toStr(_1bb0851a5_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::print(_1acbbe47e_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1acbbe47e_toStr(_1bb0851a5_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::print(_1acbbe47e_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::print(_1acbbe47e_toStr(jule::Str::lit("\n  ", 3)));
			jule::print(_1acbbe47e_toStr(_1bb0851a5_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::print(_1acbbe47e_toStr(jule::Str::lit(" | ", 3)));
			static__1bb0c0b5d_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::print(_1acbbe47e_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::println(_1acbbe47e_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1a793137d_Log(_1ace263b7_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1bcc3b299:;
			{
				static__1a7930e2c_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1bcc3b574:;
			{
				static__1a793114c_LogError(_6417_l);
			}
		}
		_match_end_1bcc3b475:;
	};
}



inline void static__1a79315ae_PrintLogs(jule::Slice<_1ace263b7_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc3b640:;
		if (it != expr_end) {
			_1ace263b7_Log *_7510_l = it;
			{
				static__1a793137d_Log(_7510_l);
			}
			_iter_next_1bcc3b640:;
			++it;
			goto _iter_begin_1bcc3b640;
		}
		_iter_end_1bcc3b640:;
	};
	jule::print(_1acbbe47e_toStr(jule::Str::lit("=== ", 4)));
	jule::print(_1acbbe47e_toStr(_1a792ea63_Itoa((*(_7423_logs)).len())));
	jule::println(_1acbbe47e_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1aa0d7ceb_Token_eq(_1aa0d7ceb_Token *_self_, _1aa0d7ceb_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1aa0d81a3_Prec(_1aa0d7ceb_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bcc95b50:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1bcc96227:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1bcc9628d:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1bcc95bb6:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1bcc95c2c:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1bcc956bb:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bcc95a1d:;
	};
}







inline jule::Ptr<_1aa0dd8a1_Fileset> static__1aa0ddc36_New(jule::Str _2016_path) {
	return jule::new_ptr<_1aa0dd8a1_Fileset>(_1aa0dd8a1_Fileset{._field_data=jule::Slice<jule::U8>(nullptr), ._field_Path=_2016_path, ._field_Tokens=jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>(nullptr)});;
}



inline void _1aa0de297_FillMut(_1aa0dd8a1_Fileset* _self_, jule::Slice<jule::U8> _3634_data) {
	(*(_self_))._field_data=_3634_data;
}



inline jule::Str _1aa0de52d_Dir(_1aa0dd8a1_Fileset* _self_) {
	return _1bb0923d2_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1aa0de7b4_Name(_1aa0dd8a1_Fileset* _self_) {
	return _1bb092008_Base((*(_self_))._field_Path);;
}



inline jule::Str _1aa0ded8b_GetRow(_1aa0dd8a1_Fileset* _self_, jule::I32 _5718_row) {
	jule::I32 _587_n = 0LL;;
	jule::I32 _597_lineStart = 0LL;;
	jule::I32 _607_i = 0LL;;
	for (; (_607_i < (*(_self_))._field_data.len()); (_607_i)++) {
		{
			if (((*(_self_))._field_data[_607_i] != '\n')) {
				goto _iter_next_1bcc9bda9;
			};
			(_587_n)++;
			if ((_587_n == _5718_row)) {
				return _1c6991a0c_StrFromBytes((*(_self_))._field_data.slice(_597_lineStart, _607_i));;
			};
			_597_lineStart=(_607_i + 1LL);
		}
	_iter_next_1bcc9bda9:;
	}
	_iter_end_1bcc9bda9:;;
	return jule::Str();;
}








inline jule::Bool _1aa0e0bc2_kindPair_eq(_1aa0e0bc2_kindPair *_self_, _1aa0e0bc2_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1aa0e7228_pushErr(_1aa0e6b62_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args) {
	{ jule::Slice<_1ace263b7_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1aa0e192b_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44823_fmt, _44843_args)); };
}



inline void _1aa0e7789_lex(_1aa0e6b62_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1aa0e99ab_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len())) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _4638_token = _1aa0eae96_token(_self_);;
			if (((*(_4638_token))._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4638_token); };
			};
		}
	_iter_next_1bccd2708:;
	}
	_iter_end_1bccd2708:;;
}



inline jule::Str _1aa0e7aca_id(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _47219_ln) {
	if (((*(_47219_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4763_r;
	jule::I32 _47610_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc15e_DecodeRune((*(_47219_ln)));
		_4763_r = __jule_assign_result.__jule_result_arg0;
		_47610_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4763_r != '_') && (!(_1aa0db52a_IsLetter(_4763_r))))) {
		return jule::Str();;
	};
	while ((_47610_i < (*(_47219_ln)).len())) {
		{
			jule::I32 _4824_pr;
			jule::I32 _4828_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc15e_DecodeRune((*(_47219_ln)).slice(_47610_i));
				_4824_pr = __jule_assign_result.__jule_result_arg0;
				_4828_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4824_pr != '_') && (!(_1aa0dbc67_IsDecimal(_4824_pr)))) && (!(_1aa0db52a_IsLetter(_4824_pr))))) {
				(*(_self_))._field_pos+=_47610_i;
				return _1c6991a0c_StrFromBytes((*(_47219_ln)).slice(0LL, _47610_i));;
			};
			_47610_i+=_4828_n;
		}
	_iter_next_1bccd5dd2:;
	}
	_iter_end_1bccd5dd2:;;
	(*(_self_))._field_pos+=(*(_47219_ln)).len();
	return _1c6991a0c_StrFromBytes((*(_47219_ln)));;
}



inline jule::Slice<jule::U8> _1aa0e7d61_resume(_1aa0e6b62_lex* _self_) {
	jule::I32 _4977_i = (*(_self_))._field_pos;;
	for (; (_4977_i < (*((*(_self_))._field_file))._field_data.len()); (_4977_i)++) {
		{
			jule::I32 _4994_r = static_cast<jule::I32>((*(*(_self_))._field_file.alloc)._field_data[_4977_i]);;
			if (_1aa0db030_IsSpace(_4994_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4994_r };
					
					if (_match_expr == '\n') {
						_case_begin_1bccd9c1b:;
						{
							_1aa0e99ab_newLine(_self_);
						}
					}
					else {
						_case_begin_1bccd95cd:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1bccd9864:;
				};
				goto _iter_next_1bccd8324;
			};
			jule::I32 _5118_j = _4977_i;;
			for (; (_5118_j < (*(*(_self_))._field_file.alloc)._field_data.len()); (_5118_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_data[_5118_j] == '\n')) {
						goto _iter_end_1bccd918d;
					};
				}
			_iter_next_1bccd918d:;
			}
			_iter_end_1bccd918d:;;
			return (*(*(_self_))._field_file.alloc)._field_data.slice(_4977_i, _5118_j);;
		}
	_iter_next_1bccd8324:;
	}
	_iter_end_1bccd8324:;;
	return nullptr;;
}



inline void _1aa0e8119_lexLineComment(_1aa0e6b62_lex* _self_, jule::Ptr<_1aa0d7ceb_Token>* _52235_token) {
	jule::I32 _5233_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5264_r = (*(*(_self_))._field_file.alloc)._field_data[(*(_self_))._field_pos];;
			if (((_5264_r == '\n') || (_5264_r == '\r'))) {
				goto _iter_end_1bccdc37d;
			};
		}
	_iter_next_1bccdc37d:;
	}
	_iter_end_1bccdc37d:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*((*(_52235_token))))._field_Id=static_cast<jule::U32>(15LLU);
		(*((*(_52235_token))))._field_Kind=_1c6991a0c_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5233_start, (*(_self_))._field_pos));
	};
}



inline void _1aa0e83c2_lexRangeComment(_1aa0e6b62_lex* _self_, jule::Ptr<_1aa0d7ceb_Token>* _53736_token) {
	jule::I32 _5383_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5414_r = (*(*(_self_))._field_file.alloc)._field_data[(*(_self_))._field_pos];;
			if ((_5414_r == '\r')) {
				goto _iter_next_1bcce0936;
			};
			if ((_5414_r == '\n')) {
				_1aa0e99ab_newLine(_self_);
				goto _iter_next_1bcce0936;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_data.len()) && (_5414_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*((*(_53736_token))))._field_Id=static_cast<jule::U32>(15LLU);
					(*((*(_53736_token))))._field_Kind=_1c6991a0c_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5383_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1bcce0936:;
	}
	_iter_end_1bcce0936:;;
	_1aa0e7228_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1aa0e8713_num(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _56520_txt) {
	jule::Str __jule_func_result;
	if (((*(_56520_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1aa0e5479_hexNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bcce7542;
	};
	__jule_func_result=_1aa0e529d_octalNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bcce7542;
	};
	__jule_func_result=_1aa0e3a3d_binaryNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1bcce7542;
	};
	__jule_func_result=_1aa0e3774_commonNum(_56520_txt);
	_julec_label_1bcce7542:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1aa0e8a54_escapeSeq(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _58726_txt) {
	jule::Str _5887_seq = jule::Str();;
	if (((*(_58726_txt)).len() < 2LL)) {
		goto _julec_label_1bcceb205;
	};
	{
		auto &_match_expr{ (*(_58726_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1bcce8ec2:;
			{
				(*(_self_))._field_pos+=2LL;
				return _1c6991a0c_StrFromBytes((*(_58726_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bcce9038:;
			{
				_5887_seq=_1aa0e5a95_bigUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1bcce8ba3:;
			{
				_5887_seq=_1aa0e5d5e_littleUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bcce8c19:;
			{
				_5887_seq=_1aa0e6128_hexByteEscape(_58726_txt);
			}
		}
		else {
			_case_begin_1bcce83cd:;
			{
				_5887_seq=_1aa0e63e2_byteEscape(_58726_txt);
			}
		}
		_match_end_1bcce8a3d:;
	};
	_julec_label_1bcceb205:;
	if ((_5887_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1aa0e7228_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5887_seq.len();
	return _5887_seq;;
}



inline jule::Str _1aa0e8e50_getRune(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw) {
	if (((!(_61737_raw)) && ((*(_61724_txt))[0LL] == '\\'))) {
		return _1aa0e8a54_escapeSeq(_self_, _61724_txt);;
	};
	jule::I32 _6213_r;
	jule::I32 _6216_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc15e_DecodeRune((*(_61724_txt)));
		_6213_r = __jule_assign_result.__jule_result_arg0;
		_6216_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6216_n;
	return __jule_strFromRune(_6213_r);;
}



inline jule::Str _1aa0e9291_lexRune(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _62624_txt) {
	_1ace17078_Builder _6277_run = static__1ace178c5_New(8LL);;
	({
		auto except = _1ace18310_WriteByte(&_6277_run, '\'');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:628:3"));
	});
	((*(_self_))._field_column)++;
	jule::I32 _6307_n = 0LL;;
	jule::I32 _6317_i = 1LL;;
	for (; (_6317_i < (*(_62624_txt)).len()); (_6317_i)++) {
		{
			if (((*(_62624_txt))[_6317_i] == '\r')) {
				goto _iter_next_1bcceee84;
			};
			if (((*(_62624_txt))[_6317_i] == '\n')) {
				_1aa0e7228_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1aa0e99ab_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6434_part = (*(_62624_txt)).slice(_6317_i);;
			jule::Str _6444_r = _1aa0e8e50_getRune(_self_, &(_6434_part), false);;
			({
				auto except = _1ace18057_WriteStr(&_6277_run, _6444_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:645:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1e0edde52_RuneCountStr(_6444_r);
			if (_6444_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1bcceee84;
			};
			if ((_6444_r.len() > 1LL)) {
				_6317_i+=(_6444_r.len() - 1LL);
			};
			(_6307_n)++;
		}
	_iter_next_1bcceee84:;
	}
	_iter_end_1bcceee84:;;
	if ((_6307_n == 0LL)) {
		_1aa0e7228_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6307_n > 1LL)) {
		_1aa0e7228_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _1ace188d7_Str(&_6277_run);;
}



inline jule::Str _1aa0e9527_lexStr(_1aa0e6b62_lex* _self_) {
	_1ace17078_Builder _6677_s = static__1ace178c5_New(16LL);;
	jule::U8 _6683_mark = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6703_raw = (_6683_mark == '`');;
	({
		auto except = _1ace18310_WriteByte(&_6677_s, _6683_mark);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:671:3"));
	});
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_data.len())) {
		{
			jule::U8 _6754_ch = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if ((_6754_ch == '\r')) {
				goto _iter_next_1bcd05c7b;
			};
			if ((_6754_ch == '\n')) {
				_1aa0e99ab_newLine(_self_);
				if ((!(_6703_raw))) {
					_1aa0e7228_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6878_part = (*(*(_self_))._field_file.alloc)._field_data.slice((*(_self_))._field_pos);;
			jule::Str _6884_r = _1aa0e8e50_getRune(_self_, &(_6878_part), _6703_raw);;
			({
				auto except = _1ace18057_WriteStr(&_6677_s, _6884_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:689:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1e0edde52_RuneCountStr(_6884_r);
			if ((_6754_ch == _6683_mark)) {
				goto _iter_end_1bcd05c7b;
			};
		}
	_iter_next_1bcd05c7b:;
	}
	_iter_end_1bcd05c7b:;;
	return _1ace188d7_Str(&_6677_s);;
}



inline void _1aa0e99ab_newLine(_1aa0e6b62_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1aa0ea01c_isOp(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U32 _70845_id, jule::Ptr<_1aa0d7ceb_Token>* _70858_t) {
	if ((!(_1aa0e1ce4_bytesHasPrefix(_70821_txt, _70834_kind)))) {
		return false;;
	};
	(*((*(_70858_t))))._field_Kind=_70834_kind;
	(*((*(_70858_t))))._field_Id=_70845_id;
	(*(_self_))._field_pos+=_70834_kind.len();
	return true;;
}



inline jule::Bool _1aa0ea418_lexBasicOps(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1aa0d7ceb_Token>* _71845_tok) {
	{
		auto expr = &(_1aa0e13dc_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcd0c27c:;
		if (it != expr_end) {
			_1aa0e0bc2_kindPair *_71910_pair = it;
			{
				if (_1aa0ea01c_isOp(_self_, &(_71827_txt), (*(_71910_pair))._field_kind, (*(_71910_pair))._field_id, _71845_tok)) {
					return true;;
				};
			}
			_iter_next_1bcd0c27c:;
			++it;
			goto _iter_begin_1bcd0c27c;
		}
		_iter_end_1bcd0c27c:;
	};
	return false;;
}



inline jule::Bool _1aa0ea814_lexId(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1aa0d7ceb_Token>* _72740_t) {
	jule::Str _7283_lex = _1aa0e7aca_id(_self_, _72722_txt);;
	if ((_7283_lex).empty()) {
		return false;;
	};
	(*((*(_72740_t))))._field_Kind=_7283_lex;
	(*((*(_72740_t))))._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _1aa0eac10_lexNum(_1aa0e6b62_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1aa0d7ceb_Token>* _73741_t) {
	jule::Str _7383_lex = _1aa0e8713_num(_self_, _73723_txt);;
	if ((_7383_lex).empty()) {
		return false;;
	};
	(*((*(_73741_t))))._field_Kind=_7383_lex;
	(*((*(_73741_t))))._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_1aa0d7ceb_Token> _1aa0eae96_token(_1aa0e6b62_lex* _self_) {
	jule::Ptr<_1aa0d7ceb_Token> _7497_t = jule::new_ptr<_1aa0d7ceb_Token>(_1aa0d7ceb_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _7543_txt = _1aa0e7d61_resume(_self_);;
	if ((_7543_txt == nullptr)) {
		return _7497_t;;
	};
	(*(_7497_t))._field_Column=(*(_self_))._field_column;
	(*_7497_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1aa0eac10_lexNum(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1bcd131a6:;
			{
				goto _match_end_1bcd12aac;
			}
		}
		else if ((_7543_txt[0LL] == '\'')) {
			_case_begin_1bcd12e20:;
			{
				(*_7497_t.alloc)._field_Kind=_1aa0e9291_lexRune(_self_, &(_7543_txt));
				(*_7497_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7497_t;;
			}
		}
		else if (((_7543_txt[0LL] == '\"') || (_7543_txt[0LL] == '`'))) {
			_case_begin_1bcd12e86:;
			{
				(*_7497_t.alloc)._field_Kind=_1aa0e9527_lexStr(_self_);
				(*_7497_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7497_t;;
			}
		}
		else if (_1aa0e1ce4_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1bcd12eec:;
			{
				_1aa0e8119_lexLineComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1aa0e1ce4_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1bcd13063:;
			{
				_1aa0e83c2_lexRangeComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1aa0ea418_lexBasicOps(_self_, _7543_txt, &(_7497_t))) {
			_case_begin_1bcd130c9:;
			{
				goto _match_end_1bcd12aac;
			}
		}
		else if (_1aa0ea814_lexId(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1bcd14493:;
			{
				{
					auto expr = &(_1aa0e10ac_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bcd17cb0:;
					if (it != expr_end) {
						_1aa0e0bc2_kindPair *_78611_pair = it;
						{
							if (((*(_78611_pair))._field_kind == (*_7497_t.alloc)._field_Kind)) {
								(*_7497_t.alloc)._field_Id=(*(_78611_pair))._field_id;
								goto _iter_end_1bcd17cb0;
							};
						}
						_iter_next_1bcd17cb0:;
						++it;
						goto _iter_begin_1bcd17cb0;
					}
					_iter_end_1bcd17cb0:;
				};
			}
		}
		else {
			_case_begin_1bcd12d21:;
			{
				jule::I32 _7934_r;
				jule::I32 _7937_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc15e_DecodeRune(_7543_txt);
					_7934_r = __jule_assign_result.__jule_result_arg0;
					_7937_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1aa0e7228_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7934_r, &__jule_any_type1); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7937_sz;
				return _7497_t;;
			}
		}
		_match_end_1bcd12aac:;
	};
	(*(_self_))._field_column+=_1e0edde52_RuneCountStr((*_7497_t.alloc)._field_Kind);
	return _7497_t;;
}












inline jule::Bool _1aa0ec816_Node_eq(_1aa0ec816_Node *_self_, _1aa0ec816_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1aa0ed817_TypeDecl_eq(_1aa0ed817_TypeDecl *_self_, _1aa0ed817_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1aa0ee5b5_NamespaceTypeDecl_eq(_1aa0ee5b5_NamespaceTypeDecl *_self_, _1aa0ee5b5_NamespaceTypeDecl _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1aa0ee8b2_SptrTypeDecl_eq(_1aa0ee8b2_SptrTypeDecl *_self_, _1aa0ee8b2_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1aa0eec47_SlcTypeDecl_eq(_1aa0eec47_SlcTypeDecl *_self_, _1aa0eec47_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1aa100341_PtrTypeDecl_eq(_1aa100341_PtrTypeDecl *_self_, _1aa100341_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1aa1006d7_IsUnsafe(_1aa100341_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1aa100ad3_ArrTypeDecl_eq(_1aa100ad3_ArrTypeDecl *_self_, _1aa100ad3_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1aa100e79_AutoSized(_1aa100ad3_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1aa101331_MapTypeDecl_eq(_1aa101331_MapTypeDecl *_self_, _1aa101331_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1aa102b4b_Expr_eq(_1aa102b4b_Expr *_self_, _1aa102b4b_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1aa102e15_RangeExpr_eq(_1aa102e15_RangeExpr *_self_, _1aa102e15_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aa103520_UseExpr_eq(_1aa103520_UseExpr *_self_, _1aa103520_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1aa103ad6_LitExpr_eq(_1aa103ad6_LitExpr *_self_, _1aa103ad6_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1aa103eb0_UnsafeExpr_eq(_1aa103eb0_UnsafeExpr *_self_, _1aa103eb0_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1aa104466_IdentExpr_eq(_1aa104466_IdentExpr *_self_, _1aa104466_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1aa104c08_UnaryExpr_eq(_1aa104c08_UnaryExpr *_self_, _1aa104c08_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1aa1050d2_VariadicExpr_eq(_1aa1050d2_VariadicExpr *_self_, _1aa1050d2_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1aa1054ab_CastExpr_eq(_1aa1054ab_CastExpr *_self_, _1aa1054ab_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1aa105885_NamespaceExpr_eq(_1aa105885_NamespaceExpr *_self_, _1aa105885_NamespaceExpr _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1aa105c5e_SubIdentExpr_eq(_1aa105c5e_SubIdentExpr *_self_, _1aa105c5e_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1aa106215_BinaryExpr_eq(_1aa106215_BinaryExpr *_self_, _1aa106215_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1aa106c2c_Unhandled(_1aa106875_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1aa106eb3_Ignored(_1aa106875_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*((*(_self_))._field_Exception))._field_Deferred);;
}








inline jule::Bool _1aa10736a_FieldExprPair_eq(_1aa10736a_FieldExprPair *_self_, _1aa10736a_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1aa108976_KeyValPair_eq(_1aa108976_KeyValPair *_self_, _1aa108976_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1aa109b0e_IndexingExpr_eq(_1aa109b0e_IndexingExpr *_self_, _1aa109b0e_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1aa10a26e_SlicingExpr_eq(_1aa10a26e_SlicingExpr *_self_, _1aa10a26e_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1aa10aa22_GenericDecl_eq(_1aa10aa22_GenericDecl *_self_, _1aa10aa22_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1aa10adeb_LabelSt_eq(_1aa10adeb_LabelSt *_self_, _1aa10adeb_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1aa10b2c5_GotoSt_eq(_1aa10b2c5_GotoSt *_self_, _1aa10b2c5_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1aa10b5c2_FallSt_eq(_1aa10b5c2_FallSt *_self_, _1aa10b5c2_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1aa10bc32_AssignLeft_eq(_1aa10bc32_AssignLeft *_self_, _1aa10bc32_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1aa957318_Stmt_eq(_1aa957318_Stmt *_self_, _1aa957318_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1aa9581b5_ParamDecl_eq(_1aa9581b5_ParamDecl *_self_, _1aa9581b5_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1aa95856c_IsSelf(_1aa9581b5_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1aa9599ad_IsAnon(_1aa959617_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1aa95ab9b_RetSt_eq(_1aa95ab9b_RetSt *_self_, _1aa95ab9b_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1aa95b41b_Iter_eq(_1aa95b41b_Iter *_self_, _1aa95b41b_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1aa95b7b2_IsInf(_1aa95b41b_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1aa95bc46_WhileKind_eq(_1aa95bc46_WhileKind *_self_, _1aa95bc46_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1aa95c0dc_IsWhileNext(_1aa95bc46_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1aa95c64d_RangeKind_eq(_1aa95c64d_RangeKind *_self_, _1aa95c64d_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1aa95ca27_BreakSt_eq(_1aa95ca27_BreakSt *_self_, _1aa95ca27_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1aa95ce01_ContSt_eq(_1aa95ce01_ContSt *_self_, _1aa95ce01_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1aa95d3a7_If_eq(_1aa95d3a7_If *_self_, _1aa95d3a7_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1aa95d781_Else_eq(_1aa95d781_Else *_self_, _1aa95d781_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1aa95e551_TypeAliasDecl_eq(_1aa95e551_TypeAliasDecl *_self_, _1aa95e551_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Strict == _self_->_field_Strict) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1aa9608a4_UseDecl_eq(_1aa9608a4_UseDecl *_self_, _1aa9608a4_UseDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1aa960d5a_EnumItemDecl_eq(_1aa960d5a_EnumItemDecl *_self_, _1aa960d5a_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1aa962246_TypeEnumItemDecl_eq(_1aa962246_TypeEnumItemDecl *_self_, _1aa962246_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1aa962b70_FieldDecl_eq(_1aa962b70_FieldDecl *_self_, _1aa962b70_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}


















inline jule::Bool _1aa9b96cc_Const_eq(_1aa9b96cc_Const *_self_, _1aa9b96cc_Const _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1aa9b96cc_Const> static__1aaa22c30_NewI64(jule::I64 _1419_x) {
	return jule::new_ptr<_1aa9b96cc_Const>(_1aa9b96cc_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1419_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1aa9b96cc_Const> static__1aaa22e83_NewU64(jule::U64 _1719_x) {
	return jule::new_ptr<_1aa9b96cc_Const>(_1aa9b96cc_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1719_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1aa9b96cc_Const> static__1aaa2324c_NewBool(jule::Bool _2020_x) {
	return jule::new_ptr<_1aa9b96cc_Const>(_1aa9b96cc_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2020_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1aa9b96cc_Const> static__1aaa23516_NewStr(jule::Str _2319_x) {
	return jule::new_ptr<_1aa9b96cc_Const>(_1aa9b96cc_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2319_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1aa9b96cc_Const> static__1aaa237d0_NewF64(jule::F64 _2619_x) {
	return jule::new_ptr<_1aa9b96cc_Const>(_1aa9b96cc_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2619_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1aa9b96cc_Const> static__1aaa239de_NewNil(void) {
	return jule::new_ptr<_1aa9b96cc_Const>(_1aa9b96cc_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1aaa2414e_ReadI64(_1aa9b96cc_Const* _self_) {
	if ((!(_1aaa2674a_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2);;
}



inline jule::U64 _1aaa243d5_ReadU64(_1aa9b96cc_Const* _self_) {
	if ((!(_1aaa269d1_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3);;
}



inline jule::Bool _1aaa2466b_ReadBool(_1aa9b96cc_Const* _self_) {
	if ((!(_1aaa26c67_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1aaa24902_ReadStr(_1aa9b96cc_Const* _self_) {
	if ((!(_1aaa26eed_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1aaa24b88_ReadF64(_1aa9b96cc_Const* _self_) {
	if ((!(_1aaa27284_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6);;
}



inline jule::I64 _1aaa24e1e_AsI64(_1aa9b96cc_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bcd7459c:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bcd754c1:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bcd75537:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1bcd7504d:;
			{
				return 0LL;;
			}
		}
		_match_end_1bcd74ed7:;
	};
}



inline jule::U64 _1aaa251a5_AsU64(_1aa9b96cc_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bcd768ce:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bcd751e6:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bcd7525c:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1bcd75180:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bcd75119:;
	};
}



inline jule::F64 _1aaa2543b_AsF64(_1aa9b96cc_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bcd7866c:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bcd76ca8:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bcd76d1e:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1bcd76c42:;
			{
				return 0LL;;
			}
		}
		_match_end_1bcd76bcb:;
	};
}



inline void _1aaa256e4_SetI64(_1aa9b96cc_Const* _self_, jule::I64 _13622_x) {
	(*(_self_))._field_data=jule::Any(_13622_x, &__jule_any_type2);
}



inline void _1aaa2599c_SetU64(_1aa9b96cc_Const* _self_, jule::U64 _13922_x) {
	(*(_self_))._field_data=jule::Any(_13922_x, &__jule_any_type3);
}



inline void _1aaa25c55_SetBool(_1aa9b96cc_Const* _self_, jule::Bool _14223_x) {
	(*(_self_))._field_data=jule::Any(_14223_x, &__jule_any_type4);
}



inline void _1aaa2600d_SetStr(_1aa9b96cc_Const* _self_, jule::Str _14522_x) {
	(*(_self_))._field_data=jule::Any(_14522_x, &__jule_any_type5);
}



inline void _1aaa262b6_SetF64(_1aa9b96cc_Const* _self_, jule::F64 _14822_x) {
	(*(_self_))._field_data=jule::Any(_14822_x, &__jule_any_type6);
}



inline jule::Bool _1aaa2674a_IsI64(_1aa9b96cc_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bcd7bc9c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bcd7c022:;
			{
				return false;;
			}
		}
		_match_end_1bcd7beab:;
	};
}



inline jule::Bool _1aaa269d1_IsU64(_1aa9b96cc_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bcd7c1ed:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bcd7c85d:;
			{
				return false;;
			}
		}
		_match_end_1bcd7c7e7:;
	};
}



inline jule::Bool _1aaa26c67_IsBool(_1aa9b96cc_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bcd7cdd0:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bcd7d265:;
			{
				return false;;
			}
		}
		_match_end_1bcd7d1ee:;
	};
}



inline jule::Bool _1aaa26eed_IsStr(_1aa9b96cc_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bcd7d81a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bcd7dba0:;
			{
				return false;;
			}
		}
		_match_end_1bcd7db39:;
	};
}



inline jule::Bool _1aaa27284_IsF64(_1aa9b96cc_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bcd7e255:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bcd7e5da:;
			{
				return false;;
			}
		}
		_match_end_1bcd7e574:;
	};
}



inline jule::Bool _1aaa2751a_IsNil(_1aa9b96cc_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1aaa27b9c_And(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _23615_x) {
	{
		
		if ((_1aaa26c67_IsBool(_self_) && _1aaa26c67_IsBool(&_23615_x))) {
			_case_begin_1bcd839b8:;
			{
				return (_1aaa2466b_ReadBool(_self_) && _1aaa2466b_ReadBool(&_23615_x));;
			}
		}
		else {
			_case_begin_1bcd83952:;
			{
				return false;;
			}
		}
		_match_end_1bcd83534:;
	};
}



inline jule::Bool _1aaa27edd_Or(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _24714_x) {
	{
		
		if ((_1aaa26c67_IsBool(_self_) && _1aaa26c67_IsBool(&_24714_x))) {
			_case_begin_1bcd84ca5:;
			{
				return (_1aaa2466b_ReadBool(_self_) || _1aaa2466b_ReadBool(&_24714_x));;
			}
		}
		else {
			_case_begin_1bcd84469:;
			{
				return false;;
			}
		}
		_match_end_1bcd84359:;
	};
}



inline jule::Bool _1aaa2832e_Eq(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _25814_x) {
	{
		
		if (_1aaa2751a_IsNil(_self_)) {
			_case_begin_1bcd860e7:;
			{
				return _1aaa2751a_IsNil(&_25814_x);;
			}
		}
		else if (_1aaa26c67_IsBool(_self_)) {
			_case_begin_1bcd8615d:;
			{
				return (_1aaa26c67_IsBool(&_25814_x) && (_1aaa2466b_ReadBool(_self_) == _1aaa2466b_ReadBool(&_25814_x)));;
			}
		}
		else if (_1aaa26eed_IsStr(_self_)) {
			_case_begin_1bcd861c4:;
			{
				return (_1aaa26eed_IsStr(&_25814_x) && (_1aaa24902_ReadStr(_self_) == _1aaa24902_ReadStr(&_25814_x)));;
			}
		}
		else if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcd8623a:;
			{
				return (_1aaa2414e_ReadI64(_self_) == _1aaa24e1e_AsI64(&_25814_x));;
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcd862b2:;
			{
				return (_1aaa243d5_ReadU64(_self_) == _1aaa251a5_AsU64(&_25814_x));;
			}
		}
		else if (_1aaa27284_IsF64(_self_)) {
			_case_begin_1bcd86438:;
			{
				return (_1aaa24b88_ReadF64(_self_) == _1aaa2543b_AsF64(&_25814_x));;
			}
		}
		else {
			_case_begin_1bcd85734:;
			{
				return false;;
			}
		}
		_match_end_1bcd85624:;
	};
}



inline jule::Bool _1aaa28670_Lt(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _28514_x) {
	{
		
		if (_1aaa26eed_IsStr(_self_)) {
			_case_begin_1bcd89cdd:;
			{
				return (_1aaa26eed_IsStr(&_28514_x) && (_1aaa24902_ReadStr(_self_) < _1aaa24902_ReadStr(&_28514_x)));;
			}
		}
		else if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcd89d54:;
			{
				return (_1aaa2414e_ReadI64(_self_) < _1aaa24e1e_AsI64(&_28514_x));;
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcd89dba:;
			{
				return (_1aaa243d5_ReadU64(_self_) < _1aaa251a5_AsU64(&_28514_x));;
			}
		}
		else if (_1aaa27284_IsF64(_self_)) {
			_case_begin_1bcd89e31:;
			{
				return (_1aaa24b88_ReadF64(_self_) < _1aaa2543b_AsF64(&_28514_x));;
			}
		}
		else {
			_case_begin_1bcd86a32:;
			{
				return false;;
			}
		}
		_match_end_1bcd86922:;
	};
}



inline jule::Bool _1aaa289b1_LtEq(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _30816_x) {
	{
		
		if (_1aaa26eed_IsStr(_self_)) {
			_case_begin_1bcd8c9c2:;
			{
				return (_1aaa26eed_IsStr(&_30816_x) && (_1aaa24902_ReadStr(_self_) <= _1aaa24902_ReadStr(&_30816_x)));;
			}
		}
		else if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcd8ca38:;
			{
				return (_1aaa2414e_ReadI64(_self_) <= _1aaa24e1e_AsI64(&_30816_x));;
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcd8ca9e:;
			{
				return (_1aaa243d5_ReadU64(_self_) <= _1aaa251a5_AsU64(&_30816_x));;
			}
		}
		else if (_1aaa27284_IsF64(_self_)) {
			_case_begin_1bcd8cb15:;
			{
				return (_1aaa24b88_ReadF64(_self_) <= _1aaa2543b_AsF64(&_30816_x));;
			}
		}
		else {
			_case_begin_1bcd8a629:;
			{
				return false;;
			}
		}
		_match_end_1bcd8a519:;
	};
}



inline jule::Bool _1aaa28d02_Gt(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _33114_x) {
	{
		
		if (_1aaa26eed_IsStr(_self_)) {
			_case_begin_1bcd906a6:;
			{
				return (_1aaa26eed_IsStr(&_33114_x) && (_1aaa24902_ReadStr(_self_) > _1aaa24902_ReadStr(&_33114_x)));;
			}
		}
		else if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcd9071c:;
			{
				return (_1aaa2414e_ReadI64(_self_) > _1aaa24e1e_AsI64(&_33114_x));;
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcd90783:;
			{
				return (_1aaa243d5_ReadU64(_self_) > _1aaa251a5_AsU64(&_33114_x));;
			}
		}
		else if (_1aaa27284_IsF64(_self_)) {
			_case_begin_1bcd907e9:;
			{
				return (_1aaa24b88_ReadF64(_self_) > _1aaa2543b_AsF64(&_33114_x));;
			}
		}
		else {
			_case_begin_1bcd8d30d:;
			{
				return false;;
			}
		}
		_match_end_1bcd8d1ed:;
	};
}



inline jule::Bool _1aaa29143_GtEq(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _35416_x) {
	{
		
		if (_1aaa26eed_IsStr(_self_)) {
			_case_begin_1bcd9338a:;
			{
				return (_1aaa26eed_IsStr(&_35416_x) && (_1aaa24902_ReadStr(_self_) >= _1aaa24902_ReadStr(&_35416_x)));;
			}
		}
		else if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcd93401:;
			{
				return (_1aaa2414e_ReadI64(_self_) >= _1aaa24e1e_AsI64(&_35416_x));;
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcd93467:;
			{
				return (_1aaa243d5_ReadU64(_self_) >= _1aaa251a5_AsU64(&_35416_x));;
			}
		}
		else if (_1aaa27284_IsF64(_self_)) {
			_case_begin_1bcd934cd:;
			{
				return (_1aaa24b88_ReadF64(_self_) >= _1aaa2543b_AsF64(&_35416_x));;
			}
		}
		else {
			_case_begin_1bcd90ee2:;
			{
				return false;;
			}
		}
		_match_end_1bcd90dd2:;
	};
}



inline jule::Bool _1aaa29484_Add(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _37519_x) {
	{
		
		if (_1aaa26eed_IsStr(_self_)) {
			_case_begin_1bcd9606e:;
			{
				if ((!(_1aaa26eed_IsStr(&_37519_x)))) {
					return false;;
				};
				_1aaa2600d_SetStr(_self_, (_1aaa24902_ReadStr(_self_) + _1aaa24902_ReadStr(&_37519_x)));
			}
		}
		else if (_1aaa27284_IsF64(_self_)) {
			_case_begin_1bcd960d5:;
			{
				_1aaa262b6_SetF64(_self_, (_1aaa24b88_ReadF64(_self_) + _1aaa2543b_AsF64(&_37519_x)));
			}
		}
		else if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcd9614b:;
			{
				if (_1aaa27284_IsF64(&_37519_x)) {
					_1aaa262b6_SetF64(_self_, (_1aaa2543b_AsF64(_self_) + _1aaa24b88_ReadF64(&_37519_x)));
				} else {
					_1aaa256e4_SetI64(_self_, (_1aaa2414e_ReadI64(_self_) + _1aaa24e1e_AsI64(&_37519_x)));
				};
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcd961b2:;
			{
				if (_1aaa27284_IsF64(&_37519_x)) {
					_1aaa262b6_SetF64(_self_, (_1aaa2543b_AsF64(_self_) + _1aaa24b88_ReadF64(&_37519_x)));
				} else {
					_1aaa2599c_SetU64(_self_, (jule::U64)(_1aaa243d5_ReadU64(_self_) + _1aaa251a5_AsU64(&_37519_x)));
				};
			}
		}
		else {
			_case_begin_1bcd93bc6:;
			{
				return false;;
			}
		}
		_match_end_1bcd93ab6:;
	};
	return true;;
}



inline jule::Bool _1aaa297c5_Sub(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _40419_x) {
	{
		
		if (_1aaa27284_IsF64(_self_)) {
			_case_begin_1bcd9ad65:;
			{
				_1aaa262b6_SetF64(_self_, (_1aaa24b88_ReadF64(_self_) - _1aaa2543b_AsF64(&_40419_x)));
			}
		}
		else if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcd9adcb:;
			{
				if (_1aaa27284_IsF64(&_40419_x)) {
					_1aaa262b6_SetF64(_self_, (_1aaa2543b_AsF64(_self_) - _1aaa24b88_ReadF64(&_40419_x)));
				} else {
					_1aaa256e4_SetI64(_self_, (_1aaa2414e_ReadI64(_self_) - _1aaa24e1e_AsI64(&_40419_x)));
				};
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcd9ae42:;
			{
				if (_1aaa27284_IsF64(&_40419_x)) {
					_1aaa262b6_SetF64(_self_, (_1aaa2543b_AsF64(_self_) - _1aaa24b88_ReadF64(&_40419_x)));
				} else {
					_1aaa2599c_SetU64(_self_, (jule::U64)(_1aaa243d5_ReadU64(_self_) - _1aaa251a5_AsU64(&_40419_x)));
				};
			}
		}
		else {
			_case_begin_1bcd9a5d4:;
			{
				return false;;
			}
		}
		_match_end_1bcd9a507:;
	};
	return true;;
}



inline jule::Bool _1aaa29b16_Mul(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _42819_x) {
	{
		
		if (_1aaa27284_IsF64(_self_)) {
			_case_begin_1bcd9ec48:;
			{
				_1aaa262b6_SetF64(_self_, (_1aaa24b88_ReadF64(_self_) * _1aaa2543b_AsF64(&_42819_x)));
			}
		}
		else if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcd9ecae:;
			{
				if (_1aaa27284_IsF64(&_42819_x)) {
					_1aaa262b6_SetF64(_self_, (_1aaa2543b_AsF64(_self_) * _1aaa24b88_ReadF64(&_42819_x)));
				} else {
					_1aaa256e4_SetI64(_self_, (_1aaa2414e_ReadI64(_self_) * _1aaa24e1e_AsI64(&_42819_x)));
				};
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcd9ed25:;
			{
				if (_1aaa27284_IsF64(&_42819_x)) {
					_1aaa262b6_SetF64(_self_, (_1aaa2543b_AsF64(_self_) * _1aaa24b88_ReadF64(&_42819_x)));
				} else {
					_1aaa2599c_SetU64(_self_, (jule::U64)(_1aaa243d5_ReadU64(_self_) * _1aaa251a5_AsU64(&_42819_x)));
				};
			}
		}
		else {
			_case_begin_1bcd9e341:;
			{
				return false;;
			}
		}
		_match_end_1bcd9e242:;
	};
	return true;;
}



inline jule::Bool _1aaa29e57_Div(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _45619_x) {
	{
		
		if (_1aaa27284_IsF64(_self_)) {
			_case_begin_1bcda3b2b:;
			{
				jule::F64 _4594_l = _1aaa2543b_AsF64(&_45619_x);;
				if ((_4594_l == 0LL)) {
					return false;;
				};
				_1aaa262b6_SetF64(_self_, ({ jule::F64 __jule_x = _1aaa24b88_ReadF64(_self_); jule::F64 __jule_y = _4594_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcda3b92:;
			{
				jule::F64 _4654_l = _1aaa2543b_AsF64(&_45619_x);;
				if ((_4654_l == 0LL)) {
					return false;;
				};
				_1aaa262b6_SetF64(_self_, ({ jule::F64 __jule_x = _1aaa2543b_AsF64(_self_); jule::F64 __jule_y = _4654_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcda3c08:;
			{
				jule::F64 _4714_l = _1aaa2543b_AsF64(&_45619_x);;
				if ((_4714_l == 0LL)) {
					return false;;
				};
				_1aaa262b6_SetF64(_self_, ({ jule::F64 __jule_x = _1aaa2543b_AsF64(_self_); jule::F64 __jule_y = _4714_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1bcda3224:;
			{
				return false;;
			}
		}
		_match_end_1bcda3125:;
	};
	return true;;
}



inline jule::Bool _1aaa2a298_Mod(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _48519_x) {
	{
		
		if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcda79dc:;
			{
				jule::I64 _4884_l = _1aaa24e1e_AsI64(&_48519_x);;
				if ((_4884_l == 0LL)) {
					return false;;
				};
				_1aaa256e4_SetI64(_self_, ({ jule::I64 __jule_x = _1aaa2414e_ReadI64(_self_); jule::I64 __jule_y = _4884_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcda7a86:;
			{
				jule::U64 _4944_l = _1aaa251a5_AsU64(&_48519_x);;
				if ((_4944_l == 0LLU)) {
					return false;;
				};
				_1aaa2599c_SetU64(_self_, ({ jule::U64 __jule_x = _1aaa243d5_ReadU64(_self_); jule::U64 __jule_y = _4944_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1bcda7976:;
			{
				return false;;
			}
		}
		_match_end_1bcda7866:;
	};
	return true;;
}



inline jule::Bool _1aaa2a5d9_BitwiseAnd(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _50726_x) {
	{
		
		if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcdaa7e2:;
			{
				_1aaa256e4_SetI64(_self_, (_1aaa2414e_ReadI64(_self_) & _1aaa24e1e_AsI64(&_50726_x)));
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcdaa88b:;
			{
				_1aaa2599c_SetU64(_self_, (_1aaa243d5_ReadU64(_self_) & _1aaa251a5_AsU64(&_50726_x)));
			}
		}
		else {
			_case_begin_1bcdaa77b:;
			{
				return false;;
			}
		}
		_match_end_1bcdaa66b:;
	};
	return true;;
}



inline jule::Bool _1aaa2a92a_BitwiseOr(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _52125_x) {
	{
		
		if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcdac591:;
			{
				_1aaa256e4_SetI64(_self_, (_1aaa2414e_ReadI64(_self_) | _1aaa24e1e_AsI64(&_52125_x)));
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcdac63a:;
			{
				_1aaa2599c_SetU64(_self_, (_1aaa243d5_ReadU64(_self_) | _1aaa251a5_AsU64(&_52125_x)));
			}
		}
		else {
			_case_begin_1bcdac52a:;
			{
				return false;;
			}
		}
		_match_end_1bcdac41a:;
	};
	return true;;
}



inline jule::Bool _1aaa2ac6b_Xor(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _53519_x) {
	{
		
		if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcdae340:;
			{
				_1aaa256e4_SetI64(_self_, (_1aaa2414e_ReadI64(_self_) ^ _1aaa24e1e_AsI64(&_53519_x)));
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcdae3d9:;
			{
				_1aaa2599c_SetU64(_self_, (_1aaa243d5_ReadU64(_self_) ^ _1aaa251a5_AsU64(&_53519_x)));
			}
		}
		else {
			_case_begin_1bcdae2c9:;
			{
				return false;;
			}
		}
		_match_end_1bcdae1b9:;
	};
	return true;;
}



inline jule::Bool _1aaa2b0ac_Lshift(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _54922_x) {
	{
		
		if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcdb10de:;
			{
				jule::I64 _5524_l = _1aaa24e1e_AsI64(_self_);;
				if ((_5524_l < 0LL)) {
					jule::U64 _5545_r = _1aaa251a5_AsU64(&_54922_x);;
					_1aaa256e4_SetI64(_self_, ({ jule::I64 __jule_x = _5524_l; jule::U64 __jule_y = _5545_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1aaa2b761_lshiftUnsig(_self_, &(_54922_x));
				};
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcdb1188:;
			{
				_1aaa2b761_lshiftUnsig(_self_, &(_54922_x));
			}
		}
		else {
			_case_begin_1bcdb1078:;
			{
				return false;;
			}
		}
		_match_end_1bcdb0e68:;
	};
	return true;;
}



inline jule::Bool _1aaa2b3ed_Rshift(_1aa9b96cc_Const* _self_, _1aa9b96cc_Const _56922_x) {
	{
		
		if (_1aaa2674a_IsI64(_self_)) {
			_case_begin_1bcdb3630:;
			{
				jule::I64 _5724_l = _1aaa24e1e_AsI64(_self_);;
				if ((_5724_l < 0LL)) {
					jule::U64 _5745_r = _1aaa251a5_AsU64(&_56922_x);;
					_1aaa256e4_SetI64(_self_, ({ jule::I64 __jule_x = _5724_l; jule::U64 __jule_y = _5745_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1aaa2ba91_rshiftUnsig(_self_, &(_56922_x));
				};
			}
		}
		else if (_1aaa269d1_IsU64(_self_)) {
			_case_begin_1bcdb36c9:;
			{
				_1aaa2ba91_rshiftUnsig(_self_, &(_56922_x));
			}
		}
		else {
			_case_begin_1bcdb35b9:;
			{
				return false;;
			}
		}
		_match_end_1bcdb34a9:;
	};
	return true;;
}








inline jule::Bool _1aa965447_Field_eq(_1aa965447_Field *_self_, _1aa965447_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1aa9689cd_FieldIns> _1aa965832_instance(jule::Ptr<_1aa965447_Field> _self_) {
	return jule::new_ptr<_1aa9689cd_FieldIns>(_1aa9689cd_FieldIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=_self_, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Default=jule::Ptr<_1aabb8db5_Data>(nullptr)});;
}







inline jule::Ptr<_1aa969605_StructIns> _1aa966b85_instance(jule::Ptr<_1aa966767_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1aa969605_StructIns> _667_ins = jule::new_ptr<_1aa969605_StructIns>(_1aa969605_StructIns{._field_Source=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa9689cd_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa9689cd_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aab70795_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1aaa3b221_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1aab1d1e3_new()});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd12a9b8:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _7315_s = *it;
			{
				(*(_667_ins))._field_Statics=jule::append((*_667_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aab70795_Var>((*(_7315_s))); __jule_collection; }));
			}
			_iter_next_1bd12a9b8:;
			++it;
			goto _iter_begin_1bd12a9b8;
		}
		_iter_end_1bd12a9b8:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd12bb62:;
		if (it != expr_end) {
			jule::Ptr<_1aa965447_Field> _7715_f = *it;
			{
				jule::Ptr<_1aa9689cd_FieldIns> _788_f2 = _1aa965832_instance(_7715_f);;
				(*(_788_f2))._field_Owner=_667_ins;
				(*(_667_ins))._field_Fields=jule::append((*_667_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa9689cd_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _788_f2; __jule_collection; }));
				if ((((!((*_7715_f.alloc)._field_Mutable)) && ((*((*_7715_f.alloc)._field_TypeSym))._field_Type != nullptr)) && _1aac00209_Mutable((*((*(_7715_f))._field_TypeSym))._field_Type))) {
					(*_667_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1bd12bb62:;
			++it;
			goto _iter_begin_1bd12bb62;
		}
		_iter_end_1bd12bb62:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*(_667_ins))._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*(_667_ins))._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa3b221_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaa3b221_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd130b00:;
			if (it != expr_end) {
				jule::Ptr<_1aaa3b221_Fn> _9016_f = *it;
				{
					jule::Ptr<_1aaa3b221_Fn> _919_fins = jule::new_ptr<_1aaa3b221_Fn>((*(_9016_f)));;
					(*_919_fins.alloc)._field_Instances=nullptr;
					(*_667_ins.alloc)._field_Methods=jule::append((*_667_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa3b221_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_fins; __jule_collection; }));
				}
				_iter_next_1bd130b00:;
				++it;
				goto _iter_begin_1bd130b00;
			}
			_iter_end_1bd130b00:;
		};
	};
	return _667_ins;;
}



inline jule::Ptr<_1aa969605_StructIns> _1aa966ec6_appendInstance(_1aa966767_Struct* _self_, jule::Ptr<_1aa969605_StructIns>* _10235_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd132dcc:;
		if (it != expr_end) {
			jule::Ptr<_1aa969605_StructIns> _10815_ains = *it;
			{
				if (_1aa96a271_Same(_10815_ains.ptr(), (*(_10235_ins)))) {
					return _10815_ains;;
				};
			}
			_iter_next_1bd132dcc:;
			++it;
			goto _iter_begin_1bd132dcc;
		}
		_iter_end_1bd132dcc:;
	};
	{ jule::Slice<jule::Ptr<_1aa969605_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_10235_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aa9673c2_FindMethod(_1aa966767_Struct* _self_, jule::Str _12026_ident, jule::Bool _12038_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd13442d:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _12115_f = *it;
			{
				if ((((*(_12115_f))._field_Statically == _12038_statically) && ((*_12115_f.alloc)._field_Ident == _12026_ident))) {
					return _12115_f;;
				};
			}
			_iter_next_1bd13442d:;
			++it;
			goto _iter_begin_1bd13442d;
		}
		_iter_end_1bd13442d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aab70795_Var> _1aa967713_FindStatic(_1aa966767_Struct* _self_, jule::Str _13126_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd13574d:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _13215_v = *it;
			{
				if (((*(_13215_v))._field_Ident == _13126_ident)) {
					return _13215_v;;
				};
			}
			_iter_next_1bd13574d:;
			++it;
			goto _iter_begin_1bd13574d;
		}
		_iter_end_1bd13574d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa965447_Field> _1aa967a54_FindField(_1aa966767_Struct* _self_, jule::Str _14225_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd13670a:;
		if (it != expr_end) {
			jule::Ptr<_1aa965447_Field> _14315_f = *it;
			{
				if (((*(_14315_f))._field_Ident == _14225_ident)) {
					return _14315_f;;
				};
			}
			_iter_next_1bd13670a:;
			++it;
			goto _iter_begin_1bd13670a;
		}
		_iter_end_1bd13670a:;
	};
	return nullptr;;
}



inline jule::Bool _1aa967d95_IsImplements(_1aa966767_Struct* _self_, jule::Ptr<_1aaa46935_Trait> _15224_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1376c8:;
		if (it != expr_end) {
			jule::Ptr<_1aaa46935_Trait> *_15310_it = it;
			{
				if ((_15224_t == (*(_15310_it)))) {
					return true;;
				};
			}
			_iter_next_1bd1376c8:;
			++it;
			goto _iter_begin_1bd1376c8;
		}
		_iter_end_1bd1376c8:;
	};
	return false;;
}



inline jule::Bool _1aa9681d6_IsUses(_1aa966767_Struct* _self_, jule::Ptr<_1aa966767_Struct> _16218_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd138124:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> *_16310_u = it;
			{
				while ((_16218_s == (*(_16310_u)))) {
					{
						return true;;
					}
				_iter_next_1bd138c07:;
				}
				_iter_end_1bd138c07:;;
			}
			_iter_next_1bd138124:;
			++it;
			goto _iter_begin_1bd138124;
		}
		_iter_end_1bd138124:;
	};
	return false;;
}








inline jule::Bool _1aa9689cd_FieldIns_eq(_1aa9689cd_FieldIns *_self_, _1aa9689cd_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1aa969979_Str(_1aa969605_StructIns* _self_) {
	_1ace17078_Builder _2087_kind = static__1ace178c5_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Binded) {
		({
			auto except = _1ace18057_WriteStr(&_2087_kind, jule::Str::lit("cpp.", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:210:4"));
			(except.result);
		});
	};
	({
		auto except = _1ace18057_WriteStr(&_2087_kind, (*((*(_self_))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:212:3"));
		(except.result);
	});
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		({
			auto except = _1ace18310_WriteByte(&_2087_kind, '[');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:214:4"));
		});
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd13c2c1:;
			if (it != expr_end) {
				jule::I32 _2158_i = it - expr->begin();
				jule::Ptr<_1aabeb4d0_InsGeneric> *_21511_g = it;
				{
					({
						auto except = _1ace18057_WriteStr(&_2087_kind, _1aabed2b2_Str((*((*(_21511_g))))._field_Type.ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:216:5"));
						(except.result);
					});
					if ((_2158_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						({
							auto except = _1ace18310_WriteByte(&_2087_kind, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:218:6"));
						});
					};
				}
				_iter_next_1bd13c2c1:;
				++it;
				_2158_i++;
				goto _iter_begin_1bd13c2c1;
			}
			_iter_end_1bd13c2c1:;
		};
		({
			auto except = _1ace18310_WriteByte(&_2087_kind, ']');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:221:4"));
		});
	};
	return _1ace188d7_Str(&_2087_kind);;
}



inline jule::Bool _1aa969cba_Equal(jule::Ptr<_1aa969605_StructIns> _self_, jule::Ptr<_1aabecdb6_Type> _22718_other) {
	{
		auto &_match_expr{ (*(_22718_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
			_case_begin_1bd13ee94:;
			{
				jule::Ptr<_1aa969605_StructIns> _2304_s = (*(_22718_other))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);;
				if (((*(_2304_s))._field_Source != nullptr)) {
					return (_self_ == _2304_s);;
				};
			}
		}
		else {
			_case_begin_1bd13e56a:;
			{
				if (((*(_self_))._field_Source != nullptr)) {
					return false;;
				};
			}
		}
		_match_end_1bd13e504:;
	};
	jule::Ptr<_1aa969605_StructIns> _2403_s = _1aac0254c_Struct(_22718_other.ptr());;
	if ((((_2403_s == nullptr) || ((*(_self_))._field_Decl != (*(_2403_s))._field_Decl)) || ((*(_self_))._field_Generics.len() != (*(_2403_s))._field_Generics.len()))) {
		return false;;
	};
	jule::I32 _2487_i = 0LL;;
	for (; (_2487_i < (*(_self_))._field_Generics.len()); (_2487_i)++) {
		{
			if ((!(_1aabed603_Equal((*((*_self_.alloc)._field_Generics[_2487_i]))._field_Type, (*((*(_2403_s))._field_Generics[_2487_i]))._field_Type)))) {
				return false;;
			};
		}
	_iter_next_1bd142a9b:;
	}
	_iter_end_1bd142a9b:;;
	return true;;
}



inline jule::Bool _1aa96a271_Same(_1aa969605_StructIns* _self_, jule::Ptr<_1aa969605_StructIns> _26216_s) {
	if ((((*(_self_))._field_Decl != (*(_26216_s))._field_Decl) || ((*(_26216_s))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd145472:;
		if (it != expr_end) {
			jule::I32 _2667_i = it - expr->begin();
			jule::Ptr<_1aabeb4d0_InsGeneric> *_26610_g = it;
			{
				jule::Ptr<_1aabeb4d0_InsGeneric> _2674_g2 = (*(_26216_s))._field_Generics[_2667_i];;
				if ((!(_1aabed603_Equal((*((*(_26610_g))))._field_Type, (*(_2674_g2))._field_Type)))) {
					return false;;
				};
			}
			_iter_next_1bd145472:;
			++it;
			_2667_i++;
			goto _iter_begin_1bd145472;
		}
		_iter_end_1bd145472:;
	};
	return true;;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aa96a66c_FindMethod(_1aa969605_StructIns* _self_, jule::Str _27726_ident, jule::Bool _27738_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd14750c:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _27815_f = *it;
			{
				if ((((*(_27815_f))._field_Statically == _27738_statically) && ((*_27815_f.alloc)._field_Ident == _27726_ident))) {
					return _27815_f;;
				};
			}
			_iter_next_1bd14750c:;
			++it;
			goto _iter_begin_1bd14750c;
		}
		_iter_end_1bd14750c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa9689cd_FieldIns> _1aa96a9ad_FindField(_1aa969605_StructIns* _self_, jule::Str _28825_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd14882c:;
		if (it != expr_end) {
			jule::Ptr<_1aa9689cd_FieldIns> _28915_f = *it;
			{
				if (((*((*(_28915_f))._field_Decl))._field_Ident == _28825_ident)) {
					return _28915_f;;
				};
			}
			_iter_next_1bd14882c:;
			++it;
			goto _iter_begin_1bd14882c;
		}
		_iter_end_1bd14882c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aab70795_Var> _1aa96acee_FindStatic(_1aa969605_StructIns* _self_, jule::Str _29926_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1499e8:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _30015_v = *it;
			{
				if (((*(_30015_v))._field_Ident == _29926_ident)) {
					return _30015_v;;
				};
			}
			_iter_next_1bd1499e8:;
			++it;
			goto _iter_begin_1bd1499e8;
		}
		_iter_end_1bd1499e8:;
	};
	return nullptr;;
}








inline jule::Bool _1aaa2dad7_OperandExpr_eq(_1aaa2dad7_OperandExpr *_self_, _1aaa2dad7_OperandExpr _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1aaa2e0d2_BinaryExpr_eq(_1aaa2e0d2_BinaryExpr *_self_, _1aaa2e0d2_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1aaa2e4ab_UnaryExpr_eq(_1aaa2e4ab_UnaryExpr *_self_, _1aaa2e4ab_UnaryExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1aaa2e9d9_StructArgExpr_eq(_1aaa2e9d9_StructArgExpr *_self_, _1aaa2e9d9_StructArgExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1aaa3017c_AllocStructLitExpr_eq(_1aaa3017c_AllocStructLitExpr *_self_, _1aaa3017c_AllocStructLitExpr _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1aaa30633_CastingExpr_eq(_1aaa30633_CastingExpr *_self_, _1aaa30633_CastingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Type == _self_->_field_Type);
}














inline jule::Bool _1aaa31865_IndexingExpr_eq(_1aaa31865_IndexingExpr *_self_, _1aaa31865_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1aaa321e5_KeyValPairExpr_eq(_1aaa321e5_KeyValPairExpr *_self_, _1aaa321e5_KeyValPairExpr _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1aaa32b52_SlicingExpr_eq(_1aaa32b52_SlicingExpr *_self_, _1aaa32b52_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1aaa331d5_TraitSubIdentExpr_eq(_1aaa331d5_TraitSubIdentExpr *_self_, _1aaa331d5_TraitSubIdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1aaa33a76_StructSubIdentExpr_eq(_1aaa33a76_StructSubIdentExpr *_self_, _1aaa33a76_StructSubIdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1aaa33e1c_StructStaticIdentExpr_eq(_1aaa33e1c_StructStaticIdentExpr *_self_, _1aaa33e1c_StructStaticIdentExpr _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1aaa348e0_BuiltinPrintCallExpr_eq(_1aaa348e0_BuiltinPrintCallExpr *_self_, _1aaa348e0_BuiltinPrintCallExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aaa34bdc_BuiltinPrintlnCallExpr_eq(_1aaa34bdc_BuiltinPrintlnCallExpr *_self_, _1aaa34bdc_BuiltinPrintlnCallExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aaa350b6_BuiltinNewCallExpr_eq(_1aaa350b6_BuiltinNewCallExpr *_self_, _1aaa350b6_BuiltinNewCallExpr _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1aaa35490_BuiltinPanicCallExpr_eq(_1aaa35490_BuiltinPanicCallExpr *_self_, _1aaa35490_BuiltinPanicCallExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1aaa35946_BuiltinMakeCallExpr_eq(_1aaa35946_BuiltinMakeCallExpr *_self_, _1aaa35946_BuiltinMakeCallExpr _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1aaa35d20_BuiltinAppendCallExpr_eq(_1aaa35d20_BuiltinAppendCallExpr *_self_, _1aaa35d20_BuiltinAppendCallExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1aaa3611c_BuiltinLenCallExpr_eq(_1aaa3611c_BuiltinLenCallExpr *_self_, _1aaa3611c_BuiltinLenCallExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aaa36419_BuiltinCapCallExpr_eq(_1aaa36419_BuiltinCapCallExpr *_self_, _1aaa36419_BuiltinCapCallExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aaa367e3_BuiltinDeleteCallExpr_eq(_1aaa367e3_BuiltinDeleteCallExpr *_self_, _1aaa367e3_BuiltinDeleteCallExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1aaa36bbc_BuiltinCopyCallExpr_eq(_1aaa36bbc_BuiltinCopyCallExpr *_self_, _1aaa36bbc_BuiltinCopyCallExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1aaa37096_BuiltinErrorCallExpr_eq(_1aaa37096_BuiltinErrorCallExpr *_self_, _1aaa37096_BuiltinErrorCallExpr _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1aaa37393_SizeofExpr_eq(_1aaa37393_SizeofExpr *_self_, _1aaa37393_SizeofExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aaa37a47_AlignofExpr_eq(_1aaa37a47_AlignofExpr *_self_, _1aaa37a47_AlignofExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1aaa37c34_RuneExpr_eq(_1aaa37c34_RuneExpr *_self_, _1aaa37c34_RuneExpr _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1aaa383a5_FreeExpr_eq(_1aaa383a5_FreeExpr *_self_, _1aaa383a5_FreeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1aaa3974c_Param_eq(_1aaa3974c_Param *_self_, _1aaa3974c_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1aaa3d179_ParamIns> _1aaa39b15_instance(jule::Ptr<_1aaa3974c_Param> _self_) {
	return jule::new_ptr<_1aaa3d179_ParamIns>(_1aaa3d179_ParamIns{._field_Decl=_self_, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr)});;
}



inline jule::Bool _1aaa39d9b_IsSelf(_1aaa3974c_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1aaa3a132_IsRef(_1aaa3974c_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1aaa3b6c7_IsVoid(_1aaa3b221_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1aaa3b95d_IsMethod(_1aaa3b221_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1aaa3974c_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1aaa39d9b_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1aaa3bbe4_IsEntryPoint(_1aaa3b221_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1aaa3be7a_IsInit(_1aaa3b221_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1aaa3c211_IsAnon(_1aaa3b221_Fn* _self_) {
	return _1aa0da99c_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1aaa3c497_AnyVar(_1aaa3b221_Fn* _self_) {
	if (((*(_self_))._field_Result != nullptr)) {
		{
			auto expr = &((*(*(_self_))._field_Result.alloc)._field_Idents);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd1512c4:;
			if (it != expr_end) {
				jule::Ptr<_1aa0d7ceb_Token> *_10611_ident = it;
				{
					if ((!(_1aa0da99c_IsAnonIdent((*((*(_10611_ident))))._field_Kind)))) {
						return true;;
					};
				}
				_iter_next_1bd1512c4:;
				++it;
				goto _iter_begin_1bd1512c4;
			}
			_iter_end_1bd1512c4:;
		};
	};
	return false;;
}



inline jule::Ptr<_1aaa3e2ce_FnIns> _1aaa3c72d_instanceForce(jule::Ptr<_1aaa3b221_Fn> _self_) {
	jule::Ptr<_1aaa3e2ce_FnIns> _1177_ins = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::new_ptr<_1aaaec832_Scope>(_1aaaec832_Scope{._field_Parent=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1aab1d1e3_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1177_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaa3d179_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd15346e:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3974c_Param> _12415_p = *it;
			{
				(*_1177_ins.alloc)._field_Params=jule::append((*_1177_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aaa39b15_instance(_12415_p); __jule_collection; }));
			}
			_iter_next_1bd15346e:;
			++it;
			goto _iter_begin_1bd15346e;
		}
		_iter_end_1bd15346e:;
	};
	if (((*((*_1177_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1177_ins.alloc)._field_Result=(*((*(*((*(_1177_ins))._field_Decl))._field_Result.alloc)._field_TypeSym))._field_Type;
	};
	return _1177_ins;;
}



inline jule::Ptr<_1aaa3e2ce_FnIns> _1aaa3c9b4_instance(jule::Ptr<_1aaa3b221_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1aaa3c72d_instanceForce(_self_);;
}



inline jule::Ptr<_1aaa3e2ce_FnIns> _1aaa3ccc2_appendInstance(_1aaa3b221_Fn* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _14535_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_14535_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_14535_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd158b28:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3e2ce_FnIns> _16115_ains = *it;
			{
				if (_1aaa40d6e_Same(_16115_ains.ptr(), (*(_14535_ins)))) {
					return _16115_ains;;
				};
			}
			_iter_next_1bd158b28:;
			++it;
			goto _iter_begin_1bd158b28;
		}
		_iter_end_1bd158b28:;
	};
	{ jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_14535_ins))); };
	return nullptr;;
}








inline jule::Bool _1aaa3d179_ParamIns_eq(_1aaa3d179_ParamIns *_self_, _1aaa3d179_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Str _1aaa3d520_Str(_1aaa3d179_ParamIns* _self_) {
	_1ace17078_Builder _1837_s = static__1ace178c5_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		({
			auto except = _1ace18057_WriteStr(&_1837_s, jule::Str::lit("mut ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:185:4"));
			(except.result);
		});
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		({
			auto except = _1ace18057_WriteStr(&_1837_s, jule::Str::lit("&_:", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:189:4"));
			(except.result);
		});
	};
	if (_1aaa39d9b_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1aaa3a132_IsRef((*(_self_))._field_Decl)) {
			({
				auto except = _1ace18310_WriteByte(&_1837_s, '&');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:194:5"));
			});
		};
		({
			auto except = _1ace18057_WriteStr(&_1837_s, jule::Str::lit("self", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:196:4"));
			(except.result);
		});
		return _1ace188d7_Str(&_1837_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		({
			auto except = _1ace18057_WriteStr(&_1837_s, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:201:4"));
			(except.result);
		});
	};
	if (((*(_self_))._field_Type != nullptr)) {
		({
			auto except = _1ace18057_WriteStr(&_1837_s, _1aabed2b2_Str((*(_self_))._field_Type));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:204:4"));
			(except.result);
		});
	};
	return _1ace188d7_Str(&_1837_s);;
}







inline jule::Str _1aaa3e653_Str(_1aaa3e2ce_FnIns* _self_) {
	;
	return _1aaa411b0_GetKindStr(_self_, false);;
}



inline jule::Bool _1aaa3e994_Equal(jule::Ptr<_1aaa3e2ce_FnIns> _self_, jule::Ptr<_1aabecdb6_Type> _23618_other) {
	jule::Ptr<_1aaa3e2ce_FnIns> _2373_f = _1aac022b6_Fn(_23618_other.ptr());;
	if ((_2373_f == nullptr)) {
		return false;;
	};
	return _1aaa3ee39_EqualFn(_self_, &(_2373_f));;
}



inline jule::Bool _1aaa3ee39_EqualFn(jule::Ptr<_1aaa3e2ce_FnIns> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _24721_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24721_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*(*((*(_24721_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1aaa3b6c7_IsVoid((*(_self_))._field_Decl.ptr()) != _1aaa3b6c7_IsVoid((*((*(_24721_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1aaa3d179_ParamIns>,jule::Ptr<_1aaa3d179_ParamIns>> _2573_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1aaa3d179_ParamIns>,jule::Ptr<_1aaa3d179_ParamIns>>((void*)__jule_anon1bd163869, nullptr, nullptr);;
	if (((*((*(_24721_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I32 _2897_i = 0LL;;
	for (; (_2897_i < (*(_self_))._field_Params.len()); (_2897_i)++) {
		{
			if ((!(_2573_checkParams((*_self_.alloc)._field_Params[_2897_i], (*((*(_24721_f))))._field_Params[_2897_i])))) {
				return false;;
			};
		}
	_iter_next_1bd1695ea:;
	}
	_iter_end_1bd1695ea:;;
	if ((!(_1aaa3b6c7_IsVoid((*_self_.alloc)._field_Decl.ptr())))) {
		if ((!(_1aabed603_Equal((*_self_.alloc)._field_Result, (*((*(_24721_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1aaa4027a_equalTrait(jule::Ptr<_1aaa3e2ce_FnIns> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _30624_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_30624_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*(*((*(_30624_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1aaa3ee39_EqualFn(_self_, _30624_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*(*((*(_30624_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1aabecdb6_Type>> _1aaa40511_Types(_1aaa3e2ce_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1bd16ed1a:;
			{
				return nullptr;;
			}
		}
		else if ((_1aac03086_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1bd170227:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1bd16eca4:;
			{
				return (*(_1aac03086_Tup((*(_self_))._field_Result)))._field_Types;;
			}
		}
		_match_end_1bd16ebb6:;
	};
}



inline jule::Bool _1aaa40797_IsBuiltin(_1aaa3e2ce_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1aaa40a2d_IsAnon(_1aaa3e2ce_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1aaa3c211_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1aaa40d6e_Same(_1aaa3e2ce_FnIns* _self_, jule::Ptr<_1aaa3e2ce_FnIns> _34916_f) {
	if ((((*(_self_))._field_Decl != (*(_34916_f))._field_Decl) || ((*(_34916_f))._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd17367b:;
		if (it != expr_end) {
			jule::I32 _3547_i = it - expr->begin();
			jule::Ptr<_1aabeb4d0_InsGeneric> *_35410_g = it;
			{
				jule::Ptr<_1aabeb4d0_InsGeneric> _3554_g2 = (*(_34916_f))._field_Generics[_3547_i];;
				if ((!(_1aabed603_Equal((*((*(_35410_g))))._field_Type, (*(_3554_g2))._field_Type)))) {
					return false;;
				};
			}
			_iter_next_1bd17367b:;
			++it;
			_3547_i++;
			goto _iter_begin_1bd17367b;
		}
		_iter_end_1bd17367b:;
	};
	return true;;
}



inline jule::Str _1aaa411b0_GetKindStr(_1aaa3e2ce_FnIns* _self_, jule::Bool _36622_ident) {
	_1ace17078_Builder _3677_s = static__1ace178c5_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		({
			auto except = _1ace18057_WriteStr(&_3677_s, jule::Str::lit("unsafe ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:370:4"));
			(except.result);
		});
	};
	({
		auto except = _1ace18057_WriteStr(&_3677_s, jule::Str::lit("fn", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:373:3"));
		(except.result);
	});
	if ((_36622_ident && ((*(_self_))._field_Decl != nullptr))) {
		({
			auto except = _1ace18310_WriteByte(&_3677_s, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:376:4"));
		});
		({
			auto except = _1ace18057_WriteStr(&_3677_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:377:4"));
			(except.result);
		});
	};
	({
		auto except = _1ace18310_WriteByte(&_3677_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:380:3"));
	});
	jule::I32 _3813_n = (*(_self_))._field_Params.len();;
	if ((_3813_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd178362:;
			if (it != expr_end) {
				jule::I32 _3838_i = it - expr->begin();
				jule::Ptr<_1aaa3d179_ParamIns> *_38311_p = it;
				{
					({
						auto except = _1ace18057_WriteStr(&_3677_s, _1aaa3d520_Str((*(_38311_p)).ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:384:5"));
						(except.result);
					});
					if ((_3838_i < ((*(_self_))._field_Params.len() - 1LL))) {
						({
							auto except = _1ace18310_WriteByte(&_3677_s, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:386:6"));
						});
					};
				}
				_iter_next_1bd178362:;
				++it;
				_3838_i++;
				goto _iter_begin_1bd178362;
			}
			_iter_end_1bd178362:;
		};
	};
	({
		auto except = _1ace18310_WriteByte(&_3677_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:390:3"));
	});
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		({
			auto except = _1ace18310_WriteByte(&_3677_s, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:392:4"));
		});
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1aaa3b6c7_IsVoid((*(_self_))._field_Decl))))) {
		({
			auto except = _1ace18310_WriteByte(&_3677_s, ':');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:395:4"));
		});
		({
			auto except = _1ace18057_WriteStr(&_3677_s, _1aabed2b2_Str((*(_self_))._field_Result.ptr()));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:396:4"));
			(except.result);
		});
	};
	return _1ace188d7_Str(&_3677_s);;
}







inline jule::Ptr<_1aab2ee08_ImportInfo> _1aaa42a41_SelectPackage(_1aaa42524_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd17bc06:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1bd17bc06:;
			++it;
			goto _iter_begin_1bd17bc06;
		}
		_iter_end_1bd17bc06:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aab70795_Var> _1aaa42e3c_FindVar(_1aaa42524_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1aaa45071_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1aabec1a1_TypeAlias> _1aaa43338_FindTypeAlias(_1aaa42524_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1aaa45527_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1aa966767_Struct> _1aaa43734_FindStruct(_1aaa42524_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd17e489:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1bd17e489:;
			++it;
			goto _iter_begin_1bd17e489;
		}
		_iter_end_1bd17e489:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aaa43b30_FindFn(_1aaa42524_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1809c9:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1bd1809c9:;
			++it;
			goto _iter_begin_1bd1809c9;
		}
		_iter_end_1bd1809c9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa46935_Trait> _1aaa43e71_FindTrait(_1aaa42524_SymTab* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd181ce9:;
		if (it != expr_end) {
			jule::Ptr<_1aaa46935_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1bd181ce9:;
			++it;
			goto _iter_begin_1bd181ce9;
		}
		_iter_end_1bd181ce9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa490db_Enum> _1aaa442b2_FindEnum(_1aaa42524_SymTab* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd182ca6:;
		if (it != expr_end) {
			jule::Ptr<_1aaa490db_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1bd182ca6:;
			++it;
			goto _iter_begin_1bd182ca6;
		}
		_iter_end_1bd182ca6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aaa44603_FindTypeEnum(_1aaa42524_SymTab* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd183c74:;
		if (it != expr_end) {
			jule::Ptr<_1aaa4a7e6_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1bd183c74:;
			++it;
			goto _iter_begin_1bd183c74;
		}
		_iter_end_1bd183c74:;
	};
	return nullptr;;
}



inline jule::I32 _1aaa44aba_findVar1(_1aaa42524_SymTab* _self_, jule::Ptr<_1aab70795_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd184c42:;
		if (it != expr_end) {
			jule::I32 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1bd184c42:;
			++it;
			_1097_i++;
			goto _iter_begin_1bd184c42;
		}
		_iter_end_1bd184c42:;
	};
	return -1LL;;
}



inline jule::Ptr<_1aab70795_Var> _1aaa45071_findVar(_1aaa42524_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I32 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1aab70795_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1bd186a9b:;
		}
		_iter_end_1bd186a9b:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd187ecb:;
			if (it != expr_end) {
				jule::Ptr<_1aab70795_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1bd187ecb:;
				++it;
				goto _iter_begin_1bd187ecb;
			}
			_iter_end_1bd187ecb:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1aabec1a1_TypeAlias> _1aaa45527_findTypeAlias(_1aaa42524_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I32 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1aabec1a1_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1bd189d9b:;
		}
		_iter_end_1bd189d9b:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd18b2cb:;
			if (it != expr_end) {
				jule::Ptr<_1aabec1a1_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1bd18b2cb:;
				++it;
				goto _iter_begin_1bd18b2cb;
			}
			_iter_end_1bd18b2cb:;
		};
	};
	return nullptr;;
}



inline jule::Any _1aaa45923_defByIdent(_1aaa42524_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd18c530:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type7);;
				};
			}
			_iter_next_1bd18c530:;
			++it;
			goto _iter_begin_1bd18c530;
		}
		_iter_end_1bd18c530:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd193c84:;
		if (it != expr_end) {
			jule::Ptr<_1aabec1a1_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type8);;
				};
			}
			_iter_next_1bd193c84:;
			++it;
			goto _iter_begin_1bd193c84;
		}
		_iter_end_1bd193c84:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1908da:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type9);;
				};
			}
			_iter_next_1bd1908da:;
			++it;
			goto _iter_begin_1bd1908da;
		}
		_iter_end_1bd1908da:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1959bc:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type10);;
				};
			}
			_iter_next_1bd1959bc:;
			++it;
			goto _iter_begin_1bd1959bc;
		}
		_iter_end_1bd1959bc:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd19e3aa:;
		if (it != expr_end) {
			jule::Ptr<_1aaa46935_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type11);;
				};
			}
			_iter_next_1bd19e3aa:;
			++it;
			goto _iter_begin_1bd19e3aa;
		}
		_iter_end_1bd19e3aa:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd19e267:;
		if (it != expr_end) {
			jule::Ptr<_1aaa490db_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type12);;
				};
			}
			_iter_next_1bd19e267:;
			++it;
			goto _iter_begin_1bd19e267;
		}
		_iter_end_1bd19e267:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd199d01:;
		if (it != expr_end) {
			jule::Ptr<_1aaa4a7e6_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type13);;
				};
			}
			_iter_next_1bd199d01:;
			++it;
			goto _iter_begin_1bd199d01;
		}
		_iter_end_1bd199d01:;
	};
	return nullptr;;
}



inline jule::Bool _1aaa45dc9_isDuplicatedIdent(_1aaa42524_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1a2c0a:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1bd1a2c0a:;
			++it;
			goto _iter_begin_1bd1a2c0a;
		}
		_iter_end_1bd1a2c0a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1a4954:;
		if (it != expr_end) {
			jule::Ptr<_1aabec1a1_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1bd1a4954:;
			++it;
			goto _iter_begin_1bd1a4954;
		}
		_iter_end_1bd1a4954:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1a73c4:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1bd1a73c4:;
			++it;
			goto _iter_begin_1bd1a73c4;
		}
		_iter_end_1bd1a73c4:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1ad52e:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1bd1ad52e:;
			++it;
			goto _iter_begin_1bd1ad52e;
		}
		_iter_end_1bd1ad52e:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1b0421:;
		if (it != expr_end) {
			jule::Ptr<_1aaa46935_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1bd1b0421:;
			++it;
			goto _iter_begin_1bd1b0421;
		}
		_iter_end_1bd1b0421:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1b1c80:;
		if (it != expr_end) {
			jule::Ptr<_1aaa490db_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1bd1b1c80:;
			++it;
			goto _iter_begin_1bd1b1c80;
		}
		_iter_end_1bd1b1c80:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1b2b60:;
		if (it != expr_end) {
			jule::Ptr<_1aaa4a7e6_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1bd1b2b60:;
			++it;
			goto _iter_begin_1bd1b2b60;
		}
		_iter_end_1bd1b2b60:;
	};
	return false;;
}







inline jule::Str _1aaa46d31_Str(_1aaa46935_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1aaa47172_Equal(jule::Ptr<_1aaa46935_Trait> _self_, jule::Ptr<_1aabecdb6_Type> _2518_other) {
	{
		auto &_match_expr{ (*(_2518_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data2)) {
			_case_begin_1bd1b4931:;
			{
				return (_self_ == (*(_2518_other))._field_Kind.cast_ptr<_1aaa46935_Trait>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data2));;
			}
		}
		_match_end_1bd1b48a9:;
	};
	return false;;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aaa47617_FindMethod(_1aaa46935_Trait* _self_, jule::Str _3726_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1b5811:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _3815_f = *it;
			{
				if (((*(_3815_f))._field_Ident == _3726_ident)) {
					return _3815_f;;
				};
			}
			_iter_next_1bd1b5811:;
			++it;
			goto _iter_begin_1bd1b5811;
		}
		_iter_end_1bd1b5811:;
	};
	return _1aaa47c99_findMethodInherit(_self_, &(_3726_ident));;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aaa47c99_findMethodInherit(_1aaa46935_Trait* _self_, jule::Str* _5834_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1b8418:;
		if (it != expr_end) {
			jule::Ptr<_1aac062ba_TypeSym> _5915_i = *it;
			{
				if (((*(_5915_i))._field_Type == nullptr)) {
					goto _iter_next_1bd1b8418;
				};
				jule::Ptr<_1aaa46935_Trait> _638_t = _1aac02a69_Trait((*(_5915_i))._field_Type.ptr());;
				if ((_638_t != nullptr)) {
					jule::Ptr<_1aaa3b221_Fn> _659_f2 = _1aaa47617_FindMethod(_638_t, (*(_5834_ident)));;
					if ((_659_f2 != nullptr)) {
						return _659_f2;;
					};
				};
			}
			_iter_next_1bd1b8418:;
			++it;
			goto _iter_begin_1bd1b8418;
		}
		_iter_end_1bd1b8418:;
	};
	return nullptr;;
}








inline jule::Bool _1aaa48580_EnumItem_eq(_1aaa48580_EnumItem *_self_, _1aaa48580_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1aaa48959_AutoExpr(_1aaa48580_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1aaa49493_Str(_1aaa490db_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1aaa497d4_Equal(jule::Ptr<_1aaa490db_Enum> _self_, jule::Ptr<_1aabecdb6_Type> _3818_other) {
	{
		auto &_match_expr{ (*(_3818_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data3)) {
			_case_begin_1bd1bb4d7:;
			{
				return (_self_ == (*(_3818_other))._field_Kind.cast_ptr<_1aaa490db_Enum>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data3));;
			}
		}
		_match_end_1bd1bb460:;
	};
	return false;;
}



inline jule::Ptr<_1aaa48580_EnumItem> _1aaa49c13_FindItem(_1aaa490db_Enum* _self_, jule::Str _5024_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1bc3b7:;
		if (it != expr_end) {
			jule::Ptr<_1aaa48580_EnumItem> _5115_item = *it;
			{
				if (((*(_5115_item))._field_Ident == _5024_ident)) {
					return _5115_item;;
				};
			}
			_iter_next_1bd1bc3b7:;
			++it;
			goto _iter_begin_1bd1bc3b7;
		}
		_iter_end_1bd1bc3b7:;
	};
	return nullptr;;
}








inline jule::Bool _1aaa4a21e_TypeEnumItem_eq(_1aaa4a21e_TypeEnumItem *_self_, _1aaa4a21e_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym);
}





inline jule::Str _1aaa4ab6a_Str(_1aaa4a7e6_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1aaa4aeab_Equal(jule::Ptr<_1aaa4a7e6_TypeEnum> _self_, jule::Ptr<_1aabecdb6_Type> _8318_other) {
	{
		auto &_match_expr{ (*(_8318_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4)) {
			_case_begin_1bd1bd8e6:;
			{
				return (_self_ == (*(_8318_other))._field_Kind.cast_ptr<_1aaa4a7e6_TypeEnum>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4));;
			}
		}
		_match_end_1bd1bd86e:;
	};
	return false;;
}



inline jule::Ptr<_1aaa4a21e_TypeEnumItem> _1aaa4b3da_FindItem(_1aaa4a7e6_TypeEnum* _self_, jule::Str _9524_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd1be7c6:;
		if (it != expr_end) {
			jule::Ptr<_1aaa4a21e_TypeEnumItem> _9615_item = *it;
			{
				if (((*(_9615_item))._field_Ident == _9524_ident)) {
					return _9615_item;;
				};
			}
			_iter_next_1bd1be7c6:;
			++it;
			goto _iter_begin_1bd1be7c6;
		}
		_iter_end_1bd1be7c6:;
	};
	return nullptr;;
}








inline jule::Bool _1aaac1152_comptimeRange_eq(_1aaac1152_comptimeRange *_self_, _1aaac1152_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1aaac154d_Str(_1aaac1152_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1aaac188e_Equal(jule::Ptr<_1aaac1152_comptimeRange> _self_, jule::Ptr<_1aabecdb6_Type> _2718_other) {
	return false;;
}








inline jule::Bool _1aaac1bad_comptimeStructField_eq(_1aaac1bad_comptimeStructField *_self_, _1aaac1bad_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1aaac2065_Str(_1aaac1bad_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1aaac23a6_Equal(jule::Ptr<_1aaac1bad_comptimeStructField> _self_, jule::Ptr<_1aabecdb6_Type> _3718_other) {
	return false;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaac28b2__Decl(jule::Ptr<_1aaac1bad_comptimeStructField> _self_, jule::Ptr<_1aabbad84_eval>* _4127_e, jule::Ptr<_1aa106875_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaae0b55_comptimeDecl>(_1aaae0b55_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type14)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaac2cad__Type(jule::Ptr<_1aaac1bad_comptimeStructField> _self_, jule::Ptr<_1aabbad84_eval>* _5327_e, jule::Ptr<_1aa106875_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Type));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaac30ee_subIdent(jule::Ptr<_1aaac1bad_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bd1ca293:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _648_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd1cc718, jule::Ptr<__jule_anon_1bd1cc718_ctx>::make(__jule_anon_1bd1cc718_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd1cc718_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bd1ca33c:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _718_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd1ce4ea, jule::Ptr<__jule_anon_1bd1ce4ea_ctx>::make(__jule_anon_1bd1ce4ea_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd1ce4ea_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1bd1ca095:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1ca1b6:;
	};
}







inline jule::Str _1aaac3819_Str(_1aaac3451_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1aaac3b5a_Equal(jule::Ptr<_1aaac3451_comptimeStructFields> _self_, jule::Ptr<_1aabecdb6_Type> _9018_other) {
	return false;;
}



inline void _1aaac40de_ready(_1aaac3451_comptimeStructFields* _self_, jule::Ptr<_1aab70795_Var>* _9426_keyA, jule::Ptr<_1aab70795_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac1bad_comptimeStructField>(_1aaac1bad_comptimeStructField{._field_field=jule::Ptr<_1aa9689cd_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data6)})});
	};
}



inline void _1aaac4452_index(_1aaac3451_comptimeStructFields* _self_, jule::Ptr<_1aabb8db5_Data>* _11526_d, jule::I32 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac1bad_comptimeStructField>(_1aaac1bad_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data6)});
}



inline void _1aaac4870_step(_1aaac3451_comptimeStructFields* _self_, jule::I32 _12620_i, jule::Ptr<_1aab70795_Var>* _12633_keyA, jule::Ptr<_1aab70795_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1aaa22c30_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1aac03839_comptimeStructField((*((*((*(_12650_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I32 _1aaac4b06_len(_1aaac3451_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1aaac4dd1_comptimeStatic_eq(_1aaac4dd1_comptimeStatic *_self_, _1aaac4dd1_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1aaac5288_Str(_1aaac4dd1_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1aaac55c9_Equal(jule::Ptr<_1aaac4dd1_comptimeStatic> _self_, jule::Ptr<_1aabecdb6_Type> _15018_other) {
	return false;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaac5ad5__Decl(jule::Ptr<_1aaac4dd1_comptimeStatic> _self_, jule::Ptr<_1aabbad84_eval>* _15427_e, jule::Ptr<_1aa106875_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaae0b55_comptimeDecl>(_1aaae0b55_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type7)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaac5ed1__Type(jule::Ptr<_1aaac4dd1_comptimeStatic> _self_, jule::Ptr<_1aabbad84_eval>* _16627_e, jule::Ptr<_1aa106875_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_TypeSym))._field_Type));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaac6322_subIdent(jule::Ptr<_1aaac4dd1_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bd1e1474:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _1778_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd1e26ea, jule::Ptr<__jule_anon_1bd1e26ea_ctx>::make(__jule_anon_1bd1e26ea_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd1e26ea_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bd1e150c:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _1848_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd1e44dd, jule::Ptr<__jule_anon_1bd1e44dd_ctx>::make(__jule_anon_1bd1e44dd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd1e44dd_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1bd1e12dc:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd1e13ec:;
	};
}







inline jule::Str _1aaac6a3c_Str(_1aaac6685_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1aaac6d7d_Equal(jule::Ptr<_1aaac6685_comptimeStatics> _self_, jule::Ptr<_1aabecdb6_Type> _20318_other) {
	return false;;
}



inline void _1aaac7312_ready(_1aaac6685_comptimeStatics* _self_, jule::Ptr<_1aab70795_Var>* _20726_keyA, jule::Ptr<_1aab70795_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac4dd1_comptimeStatic>(_1aaac4dd1_comptimeStatic{._field_field=jule::Ptr<_1aab70795_Var>(nullptr)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data8)})});
	};
}



inline void _1aaac7675_index(_1aaac6685_comptimeStatics* _self_, jule::Ptr<_1aabb8db5_Data>* _22826_d, jule::I32 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac4dd1_comptimeStatic>(_1aaac4dd1_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data8)});
}



inline void _1aaac7a93_step(_1aaac6685_comptimeStatics* _self_, jule::I32 _23920_i, jule::Ptr<_1aab70795_Var>* _23933_keyA, jule::Ptr<_1aab70795_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1aaa22c30_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1aac05143_comptimeStatic((*((*((*(_23950_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I32 _1aaac7d29_len(_1aaac6685_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1aaac8104_comptimeEnumField_eq(_1aaac8104_comptimeEnumField *_self_, _1aaac8104_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1aaac84ab_Str(_1aaac8104_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1aaac87ec_Equal(jule::Ptr<_1aaac8104_comptimeEnumField> _self_, jule::Ptr<_1aabecdb6_Type> _26318_other) {
	return false;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaac8ce7__Decl(jule::Ptr<_1aaac8104_comptimeEnumField> _self_, jule::Ptr<_1aabbad84_eval>* _26727_e, jule::Ptr<_1aa106875_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaae0b55_comptimeDecl>(_1aaae0b55_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type16)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaac9138_subIdent(jule::Ptr<_1aaac8104_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bd2013da:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _2828_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd203e59, jule::Ptr<__jule_anon_1bd203e59_ctx>::make(__jule_anon_1bd203e59_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd203e59_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1bd206533:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd206357:;
	};
}







inline jule::Str _1aaac98ca_Str(_1aaac9413_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1aaac9c1b_Equal(jule::Ptr<_1aaac9413_comptimeEnumFields> _self_, jule::Ptr<_1aabecdb6_Type> _30118_other) {
	return false;;
}



inline void _1aaaca128_ready(_1aaac9413_comptimeEnumFields* _self_, jule::Ptr<_1aab70795_Var>* _30526_keyA, jule::Ptr<_1aab70795_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac8104_comptimeEnumField>(_1aaac8104_comptimeEnumField{._field_field=jule::Ptr<_1aaa48580_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data10)})});
	};
}



inline void _1aaaca48b_index(_1aaac9413_comptimeEnumFields* _self_, jule::Ptr<_1aabb8db5_Data>* _32626_d, jule::I32 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac8104_comptimeEnumField>(_1aaac8104_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data10)});
}



inline void _1aaaca8a9_step(_1aaac9413_comptimeEnumFields* _self_, jule::I32 _33720_i, jule::Ptr<_1aab70795_Var>* _33733_keyA, jule::Ptr<_1aab70795_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1aaa22c30_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1aac03d56_comptimeEnumField((*((*((*(_33750_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I32 _1aaacab40_len(_1aaac9413_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1aaacae1a_comptimeParam_eq(_1aaacae1a_comptimeParam *_self_, _1aaacae1a_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1aaacb2c2_Str(_1aaacae1a_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1aaacb613_Equal(jule::Ptr<_1aaacae1a_comptimeParam> _self_, jule::Ptr<_1aabecdb6_Type> _36118_other) {
	return false;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaacbb30__Decl(jule::Ptr<_1aaacae1a_comptimeParam> _self_, jule::Ptr<_1aabbad84_eval>* _36527_e, jule::Ptr<_1aa106875_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaae0b55_comptimeDecl>(_1aaae0b55_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type17)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaacc02b__Type(jule::Ptr<_1aaacae1a_comptimeParam> _self_, jule::Ptr<_1aabbad84_eval>* _37727_e, jule::Ptr<_1aa106875_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Type));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaacc427__Recv(jule::Ptr<_1aaacae1a_comptimeParam> _self_, jule::Ptr<_1aabbad84_eval>* _38527_e, jule::Ptr<_1aa106875_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _3907_constant = static__1aaa2324c_NewBool(_1aaa39d9b_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaacc768_subIdent(jule::Ptr<_1aaacae1a_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bd219ee7:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _4018_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd21b306, jule::Ptr<__jule_anon_1bd21b306_ctx>::make(__jule_anon_1bd21b306_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd21b306_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1bd21a2b1:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _4088_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd21d0e9, jule::Ptr<__jule_anon_1bd21d0e9_ctx>::make(__jule_anon_1bd21d0e9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd21d0e9_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bd21a080:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _4158_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd21eddc, jule::Ptr<__jule_anon_1bd21eddc_ctx>::make(__jule_anon_1bd21eddc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd21eddc_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1bd219d3d:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd219e1a:;
	};
}







inline jule::Str _1aaacd01b_Str(_1aaaccc74_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1aaacd35c_Equal(jule::Ptr<_1aaaccc74_comptimeParams> _self_, jule::Ptr<_1aabecdb6_Type> _43418_other) {
	return false;;
}



inline void _1aaacd7e1_ready(_1aaaccc74_comptimeParams* _self_, jule::Ptr<_1aab70795_Var>* _43826_keyA, jule::Ptr<_1aab70795_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaacae1a_comptimeParam>(_1aaacae1a_comptimeParam{._field_param=jule::Ptr<_1aaa3d179_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data12)})});
	};
}



inline void _1aaacdb54_index(_1aaaccc74_comptimeParams* _self_, jule::Ptr<_1aabb8db5_Data>* _45926_d, jule::I32 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaacae1a_comptimeParam>(_1aaacae1a_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data12)});
}



inline void _1aaace072_step(_1aaaccc74_comptimeParams* _self_, jule::I32 _47020_i, jule::Ptr<_1aab70795_Var>* _47033_keyA, jule::Ptr<_1aab70795_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1aaa22c30_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1aac04373_comptimeParam((*((*((*(_47050_keyB))))._field_TypeSym))._field_Type.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I32 _1aaace308_len(_1aaaccc74_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1aaace98a_Str(_1aaace5d3_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1aaaceccb_Equal(jule::Ptr<_1aaace5d3_comptimeTypeInfos> _self_, jule::Ptr<_1aabecdb6_Type> _49418_other) {
	return false;;
}



inline void _1aaad0260_ready(_1aaace5d3_comptimeTypeInfos* _self_, jule::Ptr<_1aab70795_Var>* _49826_keyA, jule::Ptr<_1aab70795_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaad1052_comptimeTypeInfo>(_1aaad1052_comptimeTypeInfo{._field_base=jule::Ptr<_1aabecdb6_Type>(nullptr)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data15)})});
	};
}



inline void _1aaad05c3_index(_1aaace5d3_comptimeTypeInfos* _self_, jule::Ptr<_1aabb8db5_Data>* _51926_d, jule::I32 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data15)});
}



inline void _1aaad09e1_step(_1aaace5d3_comptimeTypeInfos* _self_, jule::I32 _52820_i, jule::Ptr<_1aab70795_Var>* _52833_keyA, jule::Ptr<_1aab70795_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1aaa22c30_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_TypeSym))._field_Type))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data15);
	};
}



inline jule::I32 _1aaad0c77_len(_1aaace5d3_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1aaad1052_comptimeTypeInfo_eq(_1aaad1052_comptimeTypeInfo *_self_, _1aaad1052_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1aaad1409_Str(_1aaad1052_comptimeTypeInfo* _self_) {
	return ({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("comptimeTypeInfo[", 17)); size += part0.len(); jule::Str part1 = std::move(_1aabed2b2_Str((*(_self_))._field_base.ptr())); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit("]", 1)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); });;
}



inline jule::Bool _1aaad174a_Equal(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabecdb6_Type> _55218_other) {
	return false;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad1d99__Decl(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _55627_e, jule::Ptr<_1aa106875_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1aac027d3_softStruct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bd2353ec:;
			{
				_5617_decl=jule::Any((*(_1aac027d3_softStruct((*(_self_))._field_base)))._field_Decl, &__jule_any_type9);
			}
		}
		else if ((_1aac02a69_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bd2364ca:;
			{
				_5617_decl=jule::Any(_1aac02a69_Trait((*(_self_))._field_base), &__jule_any_type11);
			}
		}
		else if ((_1aac0177c_Enum((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd236541:;
			{
				_5617_decl=jule::Any(_1aac0177c_Enum((*(_self_))._field_base), &__jule_any_type12);
			}
		}
		else if ((_1aac01a13_TypeEnum((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd2365a7:;
			{
				_5617_decl=jule::Any(_1aac01a13_TypeEnum((*(_self_))._field_base), &__jule_any_type13);
			}
		}
		else if ((_1aac022b6_Fn((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd235067:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _5728_f = _1aac022b6_Fn((*(_self_))._field_base);;
				{
					
					if (_1aaa40797_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1bd23b58a:;
						{
							_1aabbb35c_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1aaa40a2d_IsAnon(_5728_f.ptr())) {
						_case_begin_1bd23b634:;
						{
							_1aabbb35c_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1bd23b502:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type10);
			}
		}
		else {
			_case_begin_1bd235001:;
			{
				_1aabbb35c_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bd234dbe:;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaae0b55_comptimeDecl>(_1aaae0b55_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad2295__Str(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _59322_e, jule::Ptr<_1aa106875_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _5987_constant = static__1aaa23516_NewStr(_1aabed2b2_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac76deb_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad2691__Kind(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _60627_e, jule::Ptr<_1aa106875_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aaa490db_Enum> _6117_enm = _1aab31b96_FindEnum(_1aaae5352_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1aaa48580_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1aabee2c4_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1bd244c8b:;
			{
				_61211_item=_1aaa49c13_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1aac0254c_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bd244d02:;
			{
				_61211_item=_1aaa49c13_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1aac02a69_Trait((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd244d68:;
			{
				_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1aac014e6_Ptr((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd244de0:;
			{
				if (_1aac0ea32_IsUnsafe(_1aac014e6_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1aac01260_Sptr((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd244e67:;
			{
				_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1aac0177c_Enum((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd244ede:;
			{
				_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1aac01a13_TypeEnum((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd245918:;
			{
				_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1aac02d00_Map((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd24597e:;
			{
				_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Map", 3));
			}
		}
		else if ((_1aac02030_Slc((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd245a06:;
			{
				_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1aac01c99_Arr((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd245a7d:;
			{
				_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Array", 5));
			}
		}
		else if ((_1aac022b6_Fn((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd245b05:;
			{
				_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Func", 4));
			}
		}
		else if ((_1aac03086_Tup((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd245b7c:;
			{
				_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1aac00ec9_Prim((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bd245c04:;
			{
				jule::Ptr<_1aac06bc2_Prim> _6434_prim = _1aac00ec9_Prim((*(_self_))._field_base);;
				{
					
					if (_1aac0a423_IsAny(_6434_prim.ptr())) {
						_case_begin_1bd25234d:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Any", 3));
						}
					}
					else if (_1aac09e06_IsBool(_6434_prim.ptr())) {
						_case_begin_1bd25256d:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Bool", 4));
						}
					}
					else if (_1aac0a18c_IsStr(_6434_prim)) {
						_case_begin_1bd2525e5:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Str", 3));
						}
					}
					else if (_1aac09136_IsF32(_6434_prim)) {
						_case_begin_1bd2523b4:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("F32", 3));
						}
					}
					else if (_1aac093bc_IsF64(_6434_prim)) {
						_case_begin_1bd25242a:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("F64", 3));
						}
					}
					else if (_1aac07ab3_IsI8(_6434_prim)) {
						_case_begin_1bd252d98:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("I8", 2));
						}
					}
					else if (_1aac07d49_IsI16(_6434_prim)) {
						_case_begin_1bd252e0e:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("I16", 3));
						}
					}
					else if (_1aac080d0_IsI32(_6434_prim)) {
						_case_begin_1bd252e75:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("I32", 3));
						}
					}
					else if (_1aac08366_IsI64(_6434_prim)) {
						_case_begin_1bd252edb:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("I64", 3));
						}
					}
					else if (_1aac085ec_IsU8(_6434_prim)) {
						_case_begin_1bd253052:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("U8", 2));
						}
					}
					else if (_1aac08883_IsU16(_6434_prim)) {
						_case_begin_1bd2530b8:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("U16", 3));
						}
					}
					else if (_1aac08b19_IsU32(_6434_prim)) {
						_case_begin_1bd253140:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("U32", 3));
						}
					}
					else if (_1aac08da0_IsU64(_6434_prim)) {
						_case_begin_1bd2531b7:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("U64", 3));
						}
					}
					else if (_1aac09653_IsInt(_6434_prim)) {
						_case_begin_1bd25323e:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Int", 3));
						}
					}
					else if (_1aac098d9_IsUint(_6434_prim)) {
						_case_begin_1bd2532b6:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Uint", 4));
						}
					}
					else if (_1aac09b70_IsUintptr(_6434_prim)) {
						_case_begin_1bd25333d:;
						{
							_61211_item=_1aaa49c13_FindItem(_6117_enm, jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1bd2521a5:;
						{
							__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1aabed2b2_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1bd25212d:;
				};
			}
		}
		else {
			_case_begin_1bd244c25:;
			{
				__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1aabed2b2_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1bd244b6a:;
	};
	return _1aabe9302_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1aabbe393_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad2a8c__Bits(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _68627_e, jule::Ptr<_1aa106875_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aac06bc2_Prim> _6913_prim = _1aac00ec9_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1aabbb35c_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _6963_n = _1aaab6587_BitSizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1aabbb35c_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _7017_constant = static__1aaa22c30_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac77acd_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad2e88__Elem(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _71027_e, jule::Ptr<_1aa106875_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aac0deb5_Ptr> _7157_ptr = _1aac014e6_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1aac0ea32_IsUnsafe(_7157_ptr)) {
			_1aabbb35c_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1aac0a6ed_Sptr> _7237_sptr = _1aac01260_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1aac0b1c1_Slc> _7277_slice = _1aac02030_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1aac0d4e2_Arr> _7317_array = _1aac01c99_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1aaa490db_Enum> _7357_enm = _1aac0177c_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_TypeSym))._field_Type));;
	};
	_1aabbb35c_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad3384__Size(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _74327_e, jule::Ptr<_1aa106875_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aac0d4e2_Arr> _7487_arr = _1aac01c99_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1aabbb35c_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _7537_constant = static__1aaa22c30_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac77acd_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad3780__Key(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _76226_e, jule::Ptr<_1aa106875_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aac0c865_Map> _7677_m = _1aac02d00_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1aabbb35c_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad3b7b__Value(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _77528_e, jule::Ptr<_1aa106875_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aac0c865_Map> _7807_m = _1aac02d00_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1aabbb35c_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad4077__Fields(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _78829_e, jule::Ptr<_1aa106875_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa969605_StructIns> _7937_s = _1aac0254c_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac3451_comptimeStructFields>(_1aaac3451_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
	};
	jule::Ptr<_1aaa490db_Enum> _8037_enm = _1aac0177c_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac9413_comptimeEnumFields>(_1aaac9413_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
	};
	_1aabbb35c_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad4473__Statics(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _81730_e, jule::Ptr<_1aa106875_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa969605_StructIns> _8227_s = _1aac0254c_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1aabbb35c_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac6685_comptimeStatics>(_1aaac6685_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad486e__Binded(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _83629_e, jule::Ptr<_1aa106875_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _8417_constant = static__1aaa2324c_NewBool(_1aabedca7_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad4c6a__Ordered(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _84926_e, jule::Ptr<_1aa106875_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _8547_constant = static__1aaa2324c_NewBool(_1aac00490_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad5166__Comparable(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _86229_e, jule::Ptr<_1aa106875_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _8677_constant = static__1aaa2324c_NewBool(_1aabeee73_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad5562__Mutable(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _87526_e, jule::Ptr<_1aa106875_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _8807_constant = static__1aaa2324c_NewBool(_1aac00209_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad595d__Types(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _88828_e, jule::Ptr<_1aa106875_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aac0bcb5_Tuple> _8937_tup = _1aac03086_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1aabbb35c_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aaace5d3_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1aaace5d3_comptimeTypeInfos>(_1aaace5d3_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaad1052_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaad1052_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*_8937_tup.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd29502d:;
		if (it != expr_end) {
			jule::Ptr<_1aabecdb6_Type> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaad1052_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aab4ba3a_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1bd29502d:;
			++it;
			goto _iter_begin_1bd29502d;
		}
		_iter_end_1bd29502d:;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad5d59__CanNil(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _91129_e, jule::Ptr<_1aa106875_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _9167_constant = static__1aaa2324c_NewBool(_1aac00726_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad6255__GC(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _92425_e, jule::Ptr<_1aa106875_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _9297_constant = static__1aaa2324c_NewBool(_1aac009ac_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad6651__Result(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _93729_e, jule::Ptr<_1aa106875_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _9427_f = _1aac022b6_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1aabbb35c_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1aac76846_primVoid));;
	};
	return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad6a4c__Params(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _95329_e, jule::Ptr<_1aa106875_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _9587_f = _1aac022b6_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1aabbb35c_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaaccc74_comptimeParams>(_1aaaccc74_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad6e48__Strict(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Ptr<_1aabbad84_eval>* _97029_e, jule::Ptr<_1aa106875_FnCallExpr>* _97044_fc) {
	if (((*((*(_97044_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_97029_e)).ptr(), (*((*((*(_97044_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Strict", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa969605_StructIns> _9753_s = _1aac027d3_softStruct((*(_self_))._field_base.ptr());;
	jule::Ptr<_1aa9b96cc_Const> _9767_constant = static__1aaa2324c_NewBool(((_9753_s != nullptr) && ((*(_9753_s))._field_Source != nullptr)));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9767_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9767_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad7289_subIdent(jule::Ptr<_1aaad1052_comptimeTypeInfo> _self_, jule::Str* _98426_ident) {
	{
		auto &_match_expr{ (*(_98426_ident)) };
		
		if (_match_expr == jule::Str::lit("Strict", 6)) {
			_case_begin_1bd2a90a8:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _9878_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2aabe2, jule::Ptr<__jule_anon_1bd2aabe2_ctx>::make(__jule_anon_1bd2aabe2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2aabe2_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bd2a91c9:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _9948_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2ac9d5, jule::Ptr<__jule_anon_1bd2ac9d5_ctx>::make(__jule_anon_1bd2ac9d5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2ac9d5_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1bd2a9251:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10018_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2ae7c8, jule::Ptr<__jule_anon_1bd2ae7c8_ctx>::make(__jule_anon_1bd2ae7c8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2ae7c8_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1bd2a932d:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10088_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2b15bb, jule::Ptr<__jule_anon_1bd2b15bb_ctx>::make(__jule_anon_1bd2b15bb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2b15bb_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1bd2a93a5:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10158_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2b33ae, jule::Ptr<__jule_anon_1bd2b33ae_ctx>::make(__jule_anon_1bd2b33ae_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2b33ae_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1bd2a942c:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10228_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2b51a2, jule::Ptr<__jule_anon_1bd2b51a2_ctx>::make(__jule_anon_1bd2b51a2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2b51a2_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1bd2a94a4:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10298_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2b6e95, jule::Ptr<__jule_anon_1bd2b6e95_ctx>::make(__jule_anon_1bd2b6e95_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2b6e95_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1bd2a95e7:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10368_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2b8c88, jule::Ptr<__jule_anon_1bd2b8c88_ctx>::make(__jule_anon_1bd2b8c88_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2b8c88_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1bd2a965d:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10438_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2babbe, jule::Ptr<__jule_anon_1bd2babbe_ctx>::make(__jule_anon_1bd2babbe_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2babbe_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1bd2a96c4:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10508_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2bc9b2, jule::Ptr<__jule_anon_1bd2bc9b2_ctx>::make(__jule_anon_1bd2bc9b2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2bc9b2_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1bd2a973a:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10578_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2be7a5, jule::Ptr<__jule_anon_1bd2be7a5_ctx>::make(__jule_anon_1bd2be7a5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2be7a5_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1bd2a97a1:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10648_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2c1598, jule::Ptr<__jule_anon_1bd2c1598_ctx>::make(__jule_anon_1bd2c1598_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2c1598_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1bd2a9817:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10718_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2c338b, jule::Ptr<__jule_anon_1bd2c338b_ctx>::make(__jule_anon_1bd2c338b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2c338b_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1bd2a988e:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10788_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2c517e, jule::Ptr<__jule_anon_1bd2c517e_ctx>::make(__jule_anon_1bd2c517e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2c517e_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1bd2a9916:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10858_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2c6e72, jule::Ptr<__jule_anon_1bd2c6e72_ctx>::make(__jule_anon_1bd2c6e72_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2c6e72_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bd2a998d:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10928_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2c8c65, jule::Ptr<__jule_anon_1bd2c8c65_ctx>::make(__jule_anon_1bd2c8c65_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2c8c65_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1bd2a9a15:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10998_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2caa58, jule::Ptr<__jule_anon_1bd2caa58_ctx>::make(__jule_anon_1bd2caa58_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2caa58_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1bd2a9a8c:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _11068_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2cc84b, jule::Ptr<__jule_anon_1bd2cc84b_ctx>::make(__jule_anon_1bd2cc84b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2cc84b_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_11068_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1bd2a9b14:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _11138_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2ce63e, jule::Ptr<__jule_anon_1bd2ce63e_ctx>::make(__jule_anon_1bd2ce63e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2ce63e_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_11138_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1bd2a9b8b:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _11208_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd2d1432, jule::Ptr<__jule_anon_1bd2d1432_ctx>::make(__jule_anon_1bd2d1432_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd2d1432_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_11208_method));;
			}
		}
		else {
			_case_begin_1bd2a8c78:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd2a8d55:;
	};
}








inline jule::Bool _1aaad7564_comptimeValue_eq(_1aaad7564_comptimeValue *_self_, _1aaad7564_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1aaad791b_Str(_1aaad7564_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1aaad7c5c_Equal(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabecdb6_Type> _113918_other) {
	return false;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad82bd__Unwrap(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _114329_e, jule::Ptr<_1aa106875_FnCallExpr>* _114344_fc) {
	if (((*((*(_114344_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_114329_e)).ptr(), (*((*((*(_114344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad86b9__Type(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _115127_e, jule::Ptr<_1aa106875_FnCallExpr>* _115142_fc) {
	if (((*((*(_115142_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_115127_e)).ptr(), (*((*((*(_115142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_115127_e))))._field_s), &((*((*(_self_))._field_data))._field_Type));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad8ab5__Lvalue(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _115929_e, jule::Ptr<_1aa106875_FnCallExpr>* _115944_fc) {
	if (((*((*(_115944_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_115929_e)).ptr(), (*((*((*(_115944_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _11647_constant = static__1aaa2324c_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11647_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11647_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad8eb1__Mutable(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _117230_e, jule::Ptr<_1aa106875_FnCallExpr>* _117245_fc) {
	if (((*((*(_117245_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_117230_e)).ptr(), (*((*((*(_117245_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _11777_constant = static__1aaa2324c_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11777_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11777_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad93ac__Const(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _118528_e, jule::Ptr<_1aa106875_FnCallExpr>* _118543_fc) {
	if (((*((*(_118543_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_118528_e)).ptr(), (*((*((*(_118543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _11907_constant = static__1aaa2324c_NewBool(_1aabb9800_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11907_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11907_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad97a8__Field(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _119828_e, jule::Ptr<_1aa106875_FnCallExpr>* _119843_fc) {
	if (((*((*(_119843_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr((*(_119828_e)).ptr(), (*((*((*(_119843_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa969605_StructIns> _12037_s = _1aac0254c_Struct((*((*(_self_))._field_data))._field_Type.ptr());;
	if ((_12037_s == nullptr)) {
		_1aabbb35c_pushErr((*(_119828_e)).ptr(), (*((*(_119843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_data))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa102b4b_Expr> _12087_arg = (*((*(_119843_fc))))._field_Args[0LL];;
	jule::Ptr<_1aabb8db5_Data> _12097_d = _1aabdad3d_evalExpr((*(_119828_e)), _12087_arg);;
	if ((_12097_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aabb9800_IsConst(_12097_d.ptr())))) {
		_1aabbb35c_pushErr((*(_119828_e)).ptr(), (*(_12087_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aac06bc2_Prim> _12173_prim = _1aac00ec9_Prim((*(_12097_d))._field_Type);;
	if (((_12173_prim == nullptr) || (!(_1aac0a18c_IsStr(_12173_prim.ptr()))))) {
		_1aabbb35c_pushErr((*(_119828_e)).ptr(), (*(_12087_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_12097_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12223_ident = _1aaa24902_ReadStr((*(_12097_d))._field_Constant.ptr());;
	jule::Ptr<_1aa9689cd_FieldIns> _12237_f = _1aa96a9ad_FindField(_12037_s.ptr(), _12223_ident);;
	if ((_12237_f == nullptr)) {
		_1aabbb35c_pushErr((*(_119828_e)).ptr(), (*(_12087_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_12037_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12223_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_12097_d=jule::new_ptr<_1aabb8db5_Data>((*(*(_self_))._field_data.alloc));
	_12097_d=_1aabd3176_evalStructSubIdentField((*(_119828_e)).ptr(), &(_12097_d), &(_12037_s), &((*(_12087_arg))._field_Token), &(_12237_f));
	return _1aaae5a17_buildComptimeValue(&(_12097_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad9ba4__Method(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Ptr<_1aabbad84_eval>* _123329_e, jule::Ptr<_1aa106875_FnCallExpr>* _123344_fc) {
	if (((*((*(_123344_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr((*(_123329_e)).ptr(), (*((*((*(_123344_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12387_ref = false;;
	jule::Ptr<_1aa969605_StructIns> _12397_s = static_cast<jule::Ptr<_1aa969605_StructIns>>(nullptr);;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_data))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)) {
			_case_begin_1bd2ecc78:;
			{
				_12397_s=_1aac027d3_softStruct((*((*((*((*(_self_))._field_data))._field_Type))._field_Kind.cast_ptr<_1aac0a6ed_Sptr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)))._field_Elem.ptr());
				_12387_ref=true;
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
			_case_begin_1bd2ebeca:;
			{
				_12397_s=(*((*((*(_self_))._field_data))._field_Type))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);
			}
		}
		_match_end_1bd2ecbe0:;
	};
	if ((_12397_s == nullptr)) {
		_1aabbb35c_pushErr((*(_123329_e)).ptr(), (*((*(_123344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_data))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa102b4b_Expr> _12517_arg = (*((*(_123344_fc))))._field_Args[0LL];;
	jule::Ptr<_1aabb8db5_Data> _12527_d = _1aabdad3d_evalExpr((*(_123329_e)), _12517_arg);;
	if ((_12527_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aabb9800_IsConst(_12527_d.ptr())))) {
		_1aabbb35c_pushErr((*(_123329_e)).ptr(), (*(_12517_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aac06bc2_Prim> _12603_prim = _1aac00ec9_Prim((*(_12527_d))._field_Type.ptr());;
	if (((_12603_prim == nullptr) || (!(_1aac0a18c_IsStr(_12603_prim.ptr()))))) {
		_1aabbb35c_pushErr((*(_123329_e)).ptr(), (*(_12517_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("str", 3), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_12527_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12653_ident = _1aaa24902_ReadStr((*_12527_d.alloc)._field_Constant.ptr());;
	;
	jule::Ptr<_1aaa3b221_Fn> _12677_m = _1aa96a66c_FindMethod(_12397_s.ptr(), _12653_ident, false);;
	if ((_12677_m == nullptr)) {
		_1aabbb35c_pushErr((*(_123329_e)).ptr(), (*(_12517_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_12397_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12653_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_12527_d=jule::new_ptr<_1aabb8db5_Data>((*((*(_self_))._field_data)));
	if (_12387_ref) {
		_1aabe98a7_makeImplicitDeref(&(_12527_d), (*((*(_123344_fc))))._field_Token);
	};
	_12527_d=_1aabd3c48_evalStructSubIdentMethod((*(_123329_e)).ptr(), &(_12527_d), &(_12397_s), &((*(_12517_arg))._field_Token), &(_12677_m), _12387_ref);
	return _1aaae5a17_buildComptimeValue(&(_12527_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaad9ee5_subIdent(jule::Ptr<_1aaad7564_comptimeValue> _self_, jule::Str* _128026_ident) {
	{
		auto &_match_expr{ (*(_128026_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1bd308e2c:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _12838_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd30a3c3, jule::Ptr<__jule_anon_1bd30a3c3_ctx>::make(__jule_anon_1bd30a3c3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd30a3c3_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_12838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1bd308e93:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _12908_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd30c1b6, jule::Ptr<__jule_anon_1bd30c1b6_ctx>::make(__jule_anon_1bd30c1b6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd30c1b6_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_12908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1bd309009:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _12978_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd30dea9, jule::Ptr<__jule_anon_1bd30dea9_ctx>::make(__jule_anon_1bd30dea9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd30dea9_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_12978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bd309070:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _13048_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd310c9c, jule::Ptr<__jule_anon_1bd310c9c_ctx>::make(__jule_anon_1bd310c9c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd310c9c_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_13048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1bd3090e7:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _13118_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd312a90, jule::Ptr<__jule_anon_1bd312a90_ctx>::make(__jule_anon_1bd312a90_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd312a90_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_13118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1bd30927e:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _13188_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd3196e0, jule::Ptr<__jule_anon_1bd3196e0_ctx>::make(__jule_anon_1bd3196e0_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd3196e0_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_13188_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1bd309306:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _13258_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd31b4d3, jule::Ptr<__jule_anon_1bd31b4d3_ctx>::make(__jule_anon_1bd31b4d3_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd31b4d3_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_13258_method));;
			}
		}
		else {
			_case_begin_1bd308b74:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd308cd9:;
	};
}







inline jule::Str _1aaada677_Str(_1aaada2c0_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1aaada9b8_Equal(jule::Ptr<_1aaada2c0_comptimeFiles> _self_, jule::Ptr<_1aabecdb6_Type> _134418_other) {
	return false;;
}



inline void _1aaadae4c_ready(_1aaada2c0_comptimeFiles* _self_, jule::Ptr<_1aab70795_Var>* _134826_keyA, jule::Ptr<_1aab70795_Var>* _134843_keyB) {
	if (((*(_134826_keyA)) != nullptr)) {
		(*((*(_134826_keyA))))._field_Constant=true;
		(*((*(_134826_keyA))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_134826_keyA))))._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_134843_keyB)) != nullptr)) {
		(*((*(_134843_keyB))))._field_Constant=true;
		(*((*(_134843_keyB))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_134843_keyB))))._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaadbc3e_comptimeFile>(_1aaadbc3e_comptimeFile{._field_file=jule::Ptr<_1aaa42524_SymTab>(nullptr)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data18)})});
	};
}



inline void _1aaadb2b0_index(_1aaada2c0_comptimeFiles* _self_, jule::Ptr<_1aabb8db5_Data>* _136926_d, jule::I32 _136936_i) {
	(*((*(_136926_d))))._field_Decl=false;
	(*((*(_136926_d))))._field_untyped=false;
	(*((*(_136926_d))))._field_Constant=nullptr;
	(*((*(_136926_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaadbc3e_comptimeFile>(_1aaadbc3e_comptimeFile{._field_file=(*(_self_))._field_files[_136936_i]}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data18)});
}



inline void _1aaadb6cd_step(_1aaada2c0_comptimeFiles* _self_, jule::I32 _138020_i, jule::Ptr<_1aab70795_Var>* _138033_keyA, jule::Ptr<_1aab70795_Var>* _138050_keyB) {
	if (((*(_138033_keyA)) != nullptr)) {
		(*((*((*((*(_138033_keyA))))._field_Value))._field_Data))._field_Constant=static__1aaa22c30_NewI64(static_cast<jule::I64>(_138020_i));
		(*(*((*((*(_138033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_138033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_138050_keyB)) != nullptr)) {
		(*((*((*((*((*(_138050_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1aaadbc3e_comptimeFile>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_138020_i];
	};
}



inline jule::I32 _1aaadb964_len(_1aaada2c0_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1aaadbc3e_comptimeFile_eq(_1aaadbc3e_comptimeFile *_self_, _1aaadbc3e_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1aaadc0e6_Str(_1aaadbc3e_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1aaadc437_Equal(jule::Ptr<_1aaadbc3e_comptimeFile> _self_, jule::Ptr<_1aabecdb6_Type> _140418_other) {
	return false;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaadc954__Path(jule::Ptr<_1aaadbc3e_comptimeFile> _self_, jule::Ptr<_1aabbad84_eval>* _140827_e, jule::Ptr<_1aa106875_FnCallExpr>* _140842_fc) {
	if (((*((*(_140842_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_140827_e)).ptr(), (*((*((*(_140842_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _14137_constant = static__1aaa23516_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac76deb_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14137_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14137_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaadcd50__Name(jule::Ptr<_1aaadbc3e_comptimeFile> _self_, jule::Ptr<_1aabbad84_eval>* _142127_e, jule::Ptr<_1aa106875_FnCallExpr>* _142142_fc) {
	if (((*((*(_142142_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_142127_e)).ptr(), (*((*((*(_142142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _14267_constant = static__1aaa23516_NewStr(_1aa0de7b4_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac76deb_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14267_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14267_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaadd24b__Dir(jule::Ptr<_1aaadbc3e_comptimeFile> _self_, jule::Ptr<_1aabbad84_eval>* _143426_e, jule::Ptr<_1aa106875_FnCallExpr>* _143441_fc) {
	if (((*((*(_143441_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_143426_e)).ptr(), (*((*((*(_143441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa9b96cc_Const> _14397_constant = static__1aaa23516_NewStr(_1aa0de52d_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac76deb_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14397_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14397_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaadd58c_subIdent(jule::Ptr<_1aaadbc3e_comptimeFile> _self_, jule::Str* _144726_ident) {
	{
		auto &_match_expr{ (*(_144726_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1bd32e65b:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _14508_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd33096a, jule::Ptr<__jule_anon_1bd33096a_ctx>::make(__jule_anon_1bd33096a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd33096a_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_14508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bd32e925:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _14578_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd33275d, jule::Ptr<__jule_anon_1bd33275d_ctx>::make(__jule_anon_1bd33275d_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd33275d_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_14578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1bd32e6e4:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _14648_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd334551, jule::Ptr<__jule_anon_1bd334551_ctx>::make(__jule_anon_1bd334551_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd334551_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_14648_method));;
			}
		}
		else {
			_case_begin_1bd32e4a2:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd32e57e:;
	};
}







inline jule::Str _1aaadde50_Str(_1aaadd867_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1aaade291_Equal(jule::Ptr<_1aaadd867_comptimeDecls> _self_, jule::Ptr<_1aabecdb6_Type> _148318_other) {
	return false;;
}



inline void _1aaade615_ready(_1aaadd867_comptimeDecls* _self_, jule::Ptr<_1aab70795_Var>* _148726_keyA, jule::Ptr<_1aab70795_Var>* _148743_keyB) {
	if (((*(_148726_keyA)) != nullptr)) {
		(*((*(_148726_keyA))))._field_Constant=true;
		(*((*(_148726_keyA))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_148726_keyA))))._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_148743_keyB)) != nullptr)) {
		(*((*(_148743_keyB))))._field_Constant=true;
		(*((*(_148743_keyB))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		(*((*(_148743_keyB))))._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaae0b55_comptimeDecl>(_1aaae0b55_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data20)})});
	};
}



inline void _1aaade978_index(_1aaadd867_comptimeDecls* _self_, jule::Ptr<_1aabb8db5_Data>* _150826_d, jule::I32 _150836_i) {
	(*((*(_150826_d))))._field_Decl=false;
	(*((*(_150826_d))))._field_untyped=false;
	(*((*(_150826_d))))._field_Constant=nullptr;
	(*((*(_150826_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_150836_i], (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data20)});
}



inline void _1aaaded96_step(_1aaadd867_comptimeDecls* _self_, jule::I32 _151720_i, jule::Ptr<_1aab70795_Var>* _151733_keyA, jule::Ptr<_1aab70795_Var>* _151750_keyB) {
	if (((*(_151733_keyA)) != nullptr)) {
		(*((*((*((*(_151733_keyA))))._field_Value))._field_Data))._field_Constant=static__1aaa22c30_NewI64(static_cast<jule::I64>(_151720_i));
		(*(*((*((*(_151733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_151733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_151750_keyB)) != nullptr)) {
		(*((*((*((*((*(_151750_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1aaae0b55_comptimeDecl>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_151720_i]))._field_decl;
	};
}



inline jule::I32 _1aaae012c_len(_1aaadd867_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1aaae0b55_comptimeDecl_eq(_1aaae0b55_comptimeDecl *_self_, _1aaae0b55_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1aaae100c_Str(_1aaae0b55_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1aaae134d_Equal(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabecdb6_Type> _155618_other) {
	return false;;
}



inline jule::Str _1aaae179e_declAsStr(_1aaae0b55_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd33dd96:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd33e3a2:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bd33e25e:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bd33e2c5:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bd33e0c7:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bd33e13d:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd33e605:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd33e66b:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bd33e6d2:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bd33e748:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1bd33de95:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1583:4"));;
			}
		}
		_match_end_1bd33dc31:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae1b9a__Name(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _158727_e, jule::Ptr<_1aa106875_FnCallExpr>* _158742_fc) {
	if (((*((*(_158742_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_158727_e)).ptr(), (*((*((*(_158742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15927_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd34255e:;
			{
				_15927_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa966767_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd344198:;
			{
				_15927_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa3b221_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bd343e45:;
			{
				_15927_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa490db_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bd343eab:;
			{
				_15927_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa4a7e6_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bd344022:;
			{
				_15927_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa46935_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bd344088:;
			{
				_15927_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa965447_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd3443eb:;
			{
				_15927_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aabec1a1_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd344462:;
			{
				_15927_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aab70795_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1bd3444c8:;
			{
				_15927_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa48580_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bd34453e:;
			{
				_15927_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa3974c_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1bd343d13:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1615:4"));;
			}
		}
		_match_end_1bd343c9c:;
	};
	jule::Ptr<_1aa9b96cc_Const> _16177_constant = static__1aaa23516_NewStr(_15927_name);;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac76deb_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16177_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16177_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae2096__Public(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _162529_e, jule::Ptr<_1aa106875_FnCallExpr>* _162544_fc) {
	if (((*((*(_162544_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_162529_e)).ptr(), (*((*((*(_162544_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16307_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1bd34beb4:;
			{
				_1aabbb35c_pushErr((*(_162529_e)).ptr(), (*((*(_162544_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aaae179e_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd34ce0a:;
			{
				_16307_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa966767_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd34cb96:;
			{
				_16307_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa3b221_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bd34cc0c:;
			{
				_16307_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa490db_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bd34cc73:;
			{
				_16307_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa4a7e6_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bd34ccd9:;
			{
				_16307_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa46935_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bd34d15d:;
			{
				_16307_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa965447_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd34d1c4:;
			{
				_16307_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aabec1a1_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd34d23a:;
			{
				_16307_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aab70795_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1bd34ca75:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1653:4"));;
			}
		}
		_match_end_1bd34ca0e:;
	};
	jule::Ptr<_1aa9b96cc_Const> _16557_constant = static__1aaa2324c_NewBool(_16307_public);;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16557_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16557_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae2492__Binded(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _166329_e, jule::Ptr<_1aa106875_FnCallExpr>* _166344_fc) {
	if (((*((*(_166344_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_166329_e)).ptr(), (*((*((*(_166344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16687_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1bd356b06:;
			{
				_1aabbb35c_pushErr((*(_166329_e)).ptr(), (*((*(_166344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aaae179e_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd3567d7:;
			{
				_16687_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa966767_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd35684d:;
			{
				_16687_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa3b221_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bd3568b4:;
			{
				_16687_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aabec1a1_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd35692a:;
			{
				_16687_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aab70795_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1bd356771:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1687:4"));;
			}
		}
		_match_end_1bd35670a:;
	};
	jule::Ptr<_1aa9b96cc_Const> _16897_constant = static__1aaa2324c_NewBool(_16687_binded);;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16897_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16897_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae288d__Exceptional(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _169734_e, jule::Ptr<_1aa106875_FnCallExpr>* _169749_fc) {
	if (((*((*(_169749_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_169734_e)).ptr(), (*((*((*(_169749_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd35c7ee:;
			{
				goto _match_end_1bd35ce81;
			}
		}
		else {
			_case_begin_1bd35cee7:;
			{
				_1aabbb35c_pushErr((*(_169734_e)).ptr(), (*((*(_169749_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aaae179e_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bd35ce81:;
	};
	jule::Ptr<_1aaa3b221_Fn> _17097_f = (*(_self_))._field_decl.cast_ptr<_1aaa3b221_Fn>(&__jule_any_type10);;
	jule::Ptr<_1aa9b96cc_Const> _17107_constant = static__1aaa2324c_NewBool((*(_17097_f))._field_Exceptional);;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17107_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17107_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae2c89__Mutable(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _171830_e, jule::Ptr<_1aa106875_FnCallExpr>* _171845_fc) {
	if (((*((*(_171845_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_171830_e)).ptr(), (*((*((*(_171845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17237_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16) {
			_case_begin_1bd362d32:;
			{
				_1aabbb35c_pushErr((*(_171830_e)).ptr(), (*((*(_171845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aaae179e_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bd362a13:;
			{
				_17237_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa3974c_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1bd362a79:;
			{
				_17237_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aa965447_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd362ae0:;
			{
				_17237_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aab70795_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1bd36299c:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1741:4"));;
			}
		}
		_match_end_1bd362936:;
	};
	jule::Ptr<_1aa9b96cc_Const> _17437_constant = static__1aaa2324c_NewBool(_17237_mutable);;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17437_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17437_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae3185__Variadic(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _175131_e, jule::Ptr<_1aa106875_FnCallExpr>* _175146_fc) {
	if (((*((*(_175146_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_175131_e)).ptr(), (*((*((*(_175146_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17567_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7) {
			_case_begin_1bd3691bd:;
			{
				_1aabbb35c_pushErr((*(_175131_e)).ptr(), (*((*(_175146_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aaae179e_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bd368d9e:;
			{
				_17567_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa3974c_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1bd368d38:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1772:4"));;
			}
		}
		_match_end_1bd368cc2:;
	};
	jule::Ptr<_1aa9b96cc_Const> _17747_constant = static__1aaa2324c_NewBool(_17567_variadic);;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17747_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17747_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae3581__Reference(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _178232_e, jule::Ptr<_1aa106875_FnCallExpr>* _178247_fc) {
	if (((*((*(_178247_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_178232_e)).ptr(), (*((*((*(_178247_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17877_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14) {
			_case_begin_1bd36e503:;
			{
				_1aabbb35c_pushErr((*(_178232_e)).ptr(), (*((*(_178247_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aaae179e_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd36e1d4:;
			{
				_17877_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aab70795_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1bd36e24a:;
			{
				_17877_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1aaa3974c_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1bd36e16d:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1804:4"));;
			}
		}
		_match_end_1bd36e107:;
	};
	jule::Ptr<_1aa9b96cc_Const> _18067_constant = static__1aaa2324c_NewBool(_17877_ref);;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_18067_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_18067_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae397c__Params(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _181429_e, jule::Ptr<_1aa106875_FnCallExpr>* _181444_fc) {
	if (((*((*(_181444_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_181429_e)).ptr(), (*((*((*(_181444_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1bd374195:;
			{
				_1aabbb35c_pushErr((*(_181429_e)).ptr(), (*((*(_181444_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aaae179e_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd374904:;
			{
				jule::Ptr<_1aaa3b221_Fn> _18328_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1aaa3b221_Fn>();;
				jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>> _18338_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>>::alloc((*(_18328_f))._field_Params.len(), (*(_18328_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaae0b55_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18328_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd377dd0:;
					if (it != expr_end) {
						jule::I32 _18349_i = it - expr->begin();
						jule::Ptr<_1aaa3974c_Param> _183416_param = *it;
						{
							_18338_params[_18349_i]=jule::new_ptr<_1aaae0b55_comptimeDecl>(_1aaae0b55_comptimeDecl{._field_decl=jule::Any(_183416_param, &__jule_any_type17)});
						}
						_iter_next_1bd377dd0:;
						++it;
						_18349_i++;
						goto _iter_begin_1bd377dd0;
					}
					_iter_end_1bd377dd0:;
				};
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaadd867_comptimeDecls>(_1aaadd867_comptimeDecls{._field_decls=_18338_params}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1bd37488d:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1845:4"));;
			}
		}
		_match_end_1bd374827:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae3d78__Fields(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _184929_e, jule::Ptr<_1aa106875_FnCallExpr>* _184944_fc) {
	if (((*((*(_184944_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_184929_e)).ptr(), (*((*((*(_184944_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>> _18547_fields = static_cast<jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10) {
			_case_begin_1bd37b6db:;
			{
				_1aabbb35c_pushErr((*(_184929_e)).ptr(), (*((*(_184944_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aaae179e_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bd37b3bc:;
			{
				jule::Ptr<_1aaa490db_Enum> _18678_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1aaa490db_Enum>();;
				_18547_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>>::alloc((*(_18678_enm))._field_Items.len(), (*(_18678_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaae0b55_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18678_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd37e568:;
					if (it != expr_end) {
						jule::I32 _18699_i = it - expr->begin();
						jule::Ptr<_1aaa48580_EnumItem> _186916_item = *it;
						{
							_18547_fields[_18699_i]=jule::new_ptr<_1aaae0b55_comptimeDecl>(_1aaae0b55_comptimeDecl{._field_decl=jule::Any(_186916_item, &__jule_any_type16)});
						}
						_iter_next_1bd37e568:;
						++it;
						_18699_i++;
						goto _iter_begin_1bd37e568;
					}
					_iter_end_1bd37e568:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd37b433:;
			{
				jule::Ptr<_1aa966767_Struct> _18738_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1aa966767_Struct>();;
				_18547_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>>::alloc((*(_18738_s))._field_Fields.len(), (*(_18738_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaae0b55_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18738_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd381339:;
					if (it != expr_end) {
						jule::I32 _18759_i = it - expr->begin();
						jule::Ptr<_1aa965447_Field> _187516_field = *it;
						{
							_18547_fields[_18759_i]=jule::new_ptr<_1aaae0b55_comptimeDecl>(_1aaae0b55_comptimeDecl{._field_decl=jule::Any(_187516_field, &__jule_any_type14)});
						}
						_iter_next_1bd381339:;
						++it;
						_18759_i++;
						goto _iter_begin_1bd381339;
					}
					_iter_end_1bd381339:;
				};
			}
		}
		else {
			_case_begin_1bd37b356:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1879:4"));;
			}
		}
		_match_end_1bd37b2e0:;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaadd867_comptimeDecls>(_1aaadd867_comptimeDecls{._field_decls=_18547_fields}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae4274__Statics(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _189030_e, jule::Ptr<_1aa106875_FnCallExpr>* _189045_fc) {
	if (((*((*(_189045_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_189030_e)).ptr(), (*((*((*(_189045_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>> _18957_fields = static_cast<jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1bd384bab:;
			{
				_1aabbb35c_pushErr((*(_189030_e)).ptr(), (*((*(_189045_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aaae179e_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd38488c:;
			{
				jule::Ptr<_1aa966767_Struct> _19098_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1aa966767_Struct>();;
				_18957_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>>::alloc((*(_19098_s))._field_Statics.len(), (*(_19098_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaae0b55_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19098_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd387ad2:;
					if (it != expr_end) {
						jule::I32 _19119_i = it - expr->begin();
						jule::Ptr<_1aab70795_Var> _191116_field = *it;
						{
							_18957_fields[_19119_i]=jule::new_ptr<_1aaae0b55_comptimeDecl>(_1aaae0b55_comptimeDecl{._field_decl=jule::Any(_191116_field, &__jule_any_type7)});
						}
						_iter_next_1bd387ad2:;
						++it;
						_19119_i++;
						goto _iter_begin_1bd387ad2;
					}
					_iter_end_1bd387ad2:;
				};
			}
		}
		else {
			_case_begin_1bd384826:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1915:4"));;
			}
		}
		_match_end_1bd3847b0:;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaadd867_comptimeDecls>(_1aaadd867_comptimeDecls{._field_decls=_18957_fields}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae4670__Methods(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Ptr<_1aabbad84_eval>* _192630_e, jule::Ptr<_1aa106875_FnCallExpr>* _192645_fc) {
	if (((*((*(_192645_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_192630_e)).ptr(), (*((*((*(_192645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>> _19317_methods = static_cast<jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1bd38b454:;
			{
				_1aabbb35c_pushErr((*(_192630_e)).ptr(), (*((*(_192645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aaae179e_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bd38b135:;
			{
				jule::Ptr<_1aaa46935_Trait> _19448_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1aaa46935_Trait>();;
				_19317_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>>::alloc((*(_19448_t))._field_Methods.len(), (*(_19448_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaae0b55_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19448_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd38e2d1:;
					if (it != expr_end) {
						jule::I32 _19469_i = it - expr->begin();
						jule::Ptr<_1aaa3b221_Fn> _194616_method = *it;
						{
							_19317_methods[_19469_i]=jule::new_ptr<_1aaae0b55_comptimeDecl>(_1aaae0b55_comptimeDecl{._field_decl=jule::Any(_194616_method, &__jule_any_type10)});
						}
						_iter_next_1bd38e2d1:;
						++it;
						_19469_i++;
						goto _iter_begin_1bd38e2d1;
					}
					_iter_end_1bd38e2d1:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd38b19b:;
			{
				jule::Ptr<_1aa966767_Struct> _19508_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1aa966767_Struct>();;
				_19317_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaae0b55_comptimeDecl>>::alloc((*(_19508_s))._field_Methods.len(), (*(_19508_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaae0b55_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19508_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd3910a2:;
					if (it != expr_end) {
						jule::I32 _19529_i = it - expr->begin();
						jule::Ptr<_1aaa3b221_Fn> _195216_method = *it;
						{
							_19317_methods[_19529_i]=jule::new_ptr<_1aaae0b55_comptimeDecl>(_1aaae0b55_comptimeDecl{._field_decl=jule::Any(_195216_method, &__jule_any_type10)});
						}
						_iter_next_1bd3910a2:;
						++it;
						_19529_i++;
						goto _iter_begin_1bd3910a2;
					}
					_iter_end_1bd3910a2:;
				};
			}
		}
		else {
			_case_begin_1bd38b0be:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1956:4"));;
			}
		}
		_match_end_1bd38b058:;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaadd867_comptimeDecls>(_1aaadd867_comptimeDecls{._field_decls=_19317_methods}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae49b1_subIdent(jule::Ptr<_1aaae0b55_comptimeDecl> _self_, jule::Str* _196726_ident) {
	{
		auto &_match_expr{ (*(_196726_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1bd392735:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _19708_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd393deb, jule::Ptr<__jule_anon_1bd393deb_ctx>::make(__jule_anon_1bd393deb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd393deb_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_19708_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1bd39279b:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _19778_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd395bde, jule::Ptr<__jule_anon_1bd395bde_ctx>::make(__jule_anon_1bd395bde_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd395bde_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_19778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1bd392812:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _19848_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd3979d2, jule::Ptr<__jule_anon_1bd3979d2_ctx>::make(__jule_anon_1bd3979d2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd3979d2_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_19848_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1bd392889:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _19918_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd3997c5, jule::Ptr<__jule_anon_1bd3997c5_ctx>::make(__jule_anon_1bd3997c5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd3997c5_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_19918_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bd392a54:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _19988_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd39b5b8, jule::Ptr<__jule_anon_1bd39b5b8_ctx>::make(__jule_anon_1bd39b5b8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd39b5b8_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_19988_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1bd392aba:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _20058_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd39d3ab, jule::Ptr<__jule_anon_1bd39d3ab_ctx>::make(__jule_anon_1bd39d3ab_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd39d3ab_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_20058_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1bd392b31:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _20128_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd3a019e, jule::Ptr<__jule_anon_1bd3a019e_ctx>::make(__jule_anon_1bd3a019e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd3a019e_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_20128_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1bd392ba8:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _20198_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd3a1e92, jule::Ptr<__jule_anon_1bd3a1e92_ctx>::make(__jule_anon_1bd3a1e92_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd3a1e92_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_20198_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1bd392c30:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _20268_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd3a3dc8, jule::Ptr<__jule_anon_1bd3a3dc8_ctx>::make(__jule_anon_1bd3a3dc8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd3a3dc8_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_20268_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1bd392d1d:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _20338_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd3a5bbb, jule::Ptr<__jule_anon_1bd3a5bbb_ctx>::make(__jule_anon_1bd3a5bbb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd3a5bbb_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_20338_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1bd392d95:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _20408_method = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>((void*)__jule_anon_1bd3a79ae, jule::Ptr<__jule_anon_1bd3a79ae_ctx>::make(__jule_anon_1bd3a79ae_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd3a79ae_ctx_handler), ._field_reloaded=false});;
				return _1aaae5143_buildAsComptimeMethodData(&(_20408_method));;
			}
		}
		else {
			_case_begin_1bd39249e:;
			{
				return nullptr;;
			}
		}
		_match_end_1bd39257b:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1aab4c62e_sema>*,jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>*> _1aaae7970_readyFn(jule::Ptr<_1aaae7541_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1aab4c62e_sema>*,jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>*>((void*)__jule_anon_1bd3b3976, jule::Ptr<__jule_anon_1bd3b3976_ctx>::make(__jule_anon_1bd3b3976_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd3b3976_ctx_handler);;
}



inline jule::Bool _1aaae7c06_readyFi(jule::Ptr<_1aaae7541_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1aab5ac9c_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1aaae7970_readyFn(_self_)));;
}



inline jule::Bool _1aaae7e8c_readySi(jule::Ptr<_1aaae7541_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1aaae7970_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1aaae8223_ready(jule::Ptr<_1aaae7541_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1aaae7c06_readyFi(_self_);;
	};
	return _1aaae7e8c_readySi(_self_);;
}



inline jule::Bool _1aaae84a9_check(jule::Ptr<_1aaae7541_constraintChecker> _self_) {
	if ((!(_1aaae8223_ready(_self_)))) {
		return false;;
	};
	_julec_label_1bd3c4305:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd3c47ab:;
		if (it != expr_end) {
			jule::I32 _1208_i = it - expr->begin();
			jule::Ptr<_1aabeb4d0_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1bd3c47ab;
				};
				{
					auto expr = &((*(_12015_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd3c5a54:;
					if (it != expr_end) {
						jule::Ptr<_1aabecdb6_Type> _12416_c2 = *it;
						{
							jule::Ptr<_1aac06bc2_Prim> _1259_prim = _1aac00ec9_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1aac0782c_IsConstraint(_1259_prim))) {
								if (_1aaae8c07_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*(_12015_g))._field_Type))) {
									goto _iter_next_1bd3c47ab;
								};
								goto _iter_next_1bd3c5a54;
							};
							if (_1aabed603_Equal(_12416_c2, (*(_12015_g))._field_Type)) {
								goto _iter_next_1bd3c47ab;
							};
						}
						_iter_next_1bd3c5a54:;
						++it;
						goto _iter_begin_1bd3c5a54;
					}
					_iter_end_1bd3c5a54:;
				};
				_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*_12015_g.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1aaae883e_toStrConstraints(_12015_g), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
			_iter_next_1bd3c47ab:;
			++it;
			_1208_i++;
			goto _iter_begin_1bd3c47ab;
		}
		_iter_end_1bd3c47ab:;
	};
	return true;;
}







inline jule::Bool _1aaae9c3b_IsTraitImpl(_1aaae9840_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1aaae9ec2_IsStructImpl(_1aaae9840_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}








inline jule::Bool _1aaaec0a1_exprPart_eq(_1aaaec0a1_exprPart *_self_, _1aaaec0a1_exprPart _other_) {
	return 
		(_self_->_field_data == _other_._field_data) &&
		(_self_->_field_expr == _self_->_field_expr);
}










inline jule::Bool _1aaaecc0b_If_eq(_1aaaecc0b_If *_self_, _1aaaecc0b_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1aaaed080_Else_eq(_1aaaed080_Else *_self_, _1aaaed080_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1aaaed723_InfIter_eq(_1aaaed723_InfIter *_self_, _1aaaed723_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1aaaedbc9_WhileIter_eq(_1aaaedbc9_WhileIter *_self_, _1aaaedbc9_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1aaaee180_IsWhileNext(_1aaaedbc9_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1aaaee6ad_RangeIter_eq(_1aaaee6ad_RangeIter *_self_, _1aaaee6ad_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1aaaee9aa_ContSt_eq(_1aaaee9aa_ContSt *_self_, _1aaaee9aa_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1aaaeed84_BreakSt_eq(_1aaaeed84_BreakSt *_self_, _1aaaeed84_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1aab0033a_Label_eq(_1aab0033a_Label *_self_, _1aab0033a_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1aab0099a_GotoSt_eq(_1aab0099a_GotoSt *_self_, _1aab0099a_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1aab00d74_Postfix_eq(_1aab00d74_Postfix *_self_, _1aab00d74_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1aab0132a_Assign_eq(_1aab0132a_Assign *_self_, _1aab0132a_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1aab0331b_FallSt_eq(_1aab0331b_FallSt *_self_, _1aab0331b_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1aab036b2_RetSt_eq(_1aab036b2_RetSt *_self_, _1aab036b2_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1aab03b68_scopeLabel_eq(_1aab03b68_scopeLabel *_self_, _1aab03b68_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1aab04042_result_eq(_1aab04042_result *_self_, _1aab04042_result _other_) {
	return 
		(_self_->_field_func == _other_._field_func) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _1aab05032_scopeChecker_eq(_1aab05032_scopeChecker *_self_, _1aab05032_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab0550a_SelectPackage(_1aab05032_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> _24029_selector) {
	return _1aab4cb07_SelectPackage((*(_self_))._field_s.ptr(), _24029_selector);;
}



inline jule::Ptr<_1aab70795_Var> _1aab05906_FindVar(_1aab05032_scopeChecker* _self_, jule::Str _25123_ident, jule::Bool _25135_binded) {
	if ((!(_25135_binded))) {
		jule::Ptr<_1aab70795_Var> _2538_v = _1aab08c6c_findVar(_self_, _25123_ident);;
		if ((_2538_v != nullptr)) {
			return _2538_v;;
		};
	};
	return _1aab4d003_FindVar((*(_self_))._field_s.ptr(), _25123_ident, _25135_binded);;
}



inline jule::Ptr<_1aabec1a1_TypeAlias> _1aab05d02_FindTypeAlias(_1aab05032_scopeChecker* _self_, jule::Str _26829_ident, jule::Bool _26841_binded) {
	;
	jule::Ptr<_1aabec1a1_TypeAlias> _2717_ta = _1aaa45527_findTypeAlias((*(_self_))._field_table.ptr(), &(_26829_ident), _26841_binded, true);;
	if ((_2717_ta != nullptr)) {
		return _2717_ta;;
	};
	jule::Ptr<_1aab05032_scopeChecker> _2767_parent = (*(_self_))._field_parent;;
	while ((_2767_parent != nullptr)) {
		{
			_2717_ta=_1aaa45527_findTypeAlias((*(_2767_parent))._field_table, &(_26829_ident), _26841_binded, true);
			if ((_2717_ta != nullptr)) {
				return _2717_ta;;
			};
			_2767_parent=(*(_2767_parent))._field_parent;
		}
	_iter_next_1bd4194b0:;
	}
	_iter_end_1bd4194b0:;;
	return _1aab4d3ee_FindTypeAlias((*(_self_))._field_s.ptr(), _26829_ident, _26841_binded);;
}



inline jule::Ptr<_1aa966767_Struct> _1aab061ed_FindStruct(_1aab05032_scopeChecker* _self_, jule::Str _29326_ident, jule::Bool _29338_binded) {
	return _1aab4d7ea_FindStruct((*(_self_))._field_s.ptr(), _29326_ident, _29338_binded);;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aab065e9_FindFn(_1aab05032_scopeChecker* _self_, jule::Str _30222_ident, jule::Bool _30234_binded) {
	return _1aab4dbe6_FindFn((*(_self_))._field_s.ptr(), _30222_ident, _30234_binded);;
}



inline jule::Ptr<_1aaa46935_Trait> _1aab0693a_FindTrait(_1aab05032_scopeChecker* _self_, jule::Str _31125_ident) {
	return _1aab4e037_FindTrait((*(_self_))._field_s.ptr(), _31125_ident);;
}



inline jule::Ptr<_1aaa490db_Enum> _1aab06c7b_FindEnum(_1aab05032_scopeChecker* _self_, jule::Str _32024_ident) {
	return _1aab4e378_FindEnum((*(_self_))._field_s.ptr(), _32024_ident);;
}



inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aab070bc_FindTypeEnum(_1aab05032_scopeChecker* _self_, jule::Str _32928_ident) {
	return _1aab4e6b9_FindTypeEnum((*(_self_))._field_s.ptr(), _32928_ident);;
}



inline jule::Bool _1aab0741e_isUnsafe(jule::Ptr<_1aab05032_scopeChecker> _self_) {
	jule::Ptr<_1aab05032_scopeChecker> _3377_scope = _self_;;
	_julec_label_1bd41e691:;
	if ((*((*(_3377_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_3377_scope))._field_parent != nullptr)) {
		_3377_scope=(*_3377_scope.alloc)._field_parent;
		goto _julec_label_1bd41e691;
	};
	return false;;
}



inline jule::Bool _1aab076a5_isRoot(_1aab05032_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1aab078a3_stop(_1aab05032_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1aab07b39_stopped(_1aab05032_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1aab07dc0_isDeferred(jule::Ptr<_1aab05032_scopeChecker> _self_) {
	jule::Ptr<_1aab05032_scopeChecker> _3707_scope = _self_;;
	_julec_label_1bd422166:;
	if ((*((*(_3707_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_3707_scope))._field_parent != nullptr)) {
		_3707_scope=(*_3707_scope.alloc)._field_parent;
		goto _julec_label_1bd422166;
	};
	return false;;
}



inline void _1aab08178_pushCaptured(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aab70795_Var>* _39134_v) {
	jule::Ptr<_1aab05032_scopeChecker> _3927_sc = _self_;;
	for (;;) {
		{
			if (((*(_3927_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_3927_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd424751:;
					if (it != expr_end) {
						jule::Ptr<_1aab70795_Var> _39512_cv = *it;
						{
							if ((_39512_cv == (*(_39134_v)))) {
								goto _julec_label_1bd425675;
							};
						}
						_iter_next_1bd424751:;
						++it;
						goto _iter_begin_1bd424751;
					}
					_iter_end_1bd424751:;
				};
				(*(*(_3927_sc))._field_captured.alloc)=jule::append((*(*(_3927_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_39134_v)); __jule_collection; }));
				_julec_label_1bd425675:;
			};
			if (((*(_3927_sc))._field_parent == nullptr)) {
				goto _iter_end_1bd4239e7;
			};
			_3927_sc=(*(_3927_sc))._field_parent;
			if ((!(_1aabea468_isVarCaptured(_3927_sc, _3927_sc, (*(_39134_v)))))) {
				goto _iter_end_1bd4239e7;
			};
		}
	_iter_next_1bd4239e7:;
	}
	_iter_end_1bd4239e7:;;
}



inline jule::Ptr<_1aab05032_scopeChecker> _1aab0840e_getRoot(jule::Ptr<_1aab05032_scopeChecker> _self_) {
	jule::Ptr<_1aab05032_scopeChecker> _4167_root = _self_;;
	while ((((*(_4167_root))._field_parent != nullptr) && ((*_4167_root.alloc)._field_owner == nullptr))) {
		{
			_4167_root=(*(_4167_root))._field_parent;
		}
	_iter_next_1bd426335:;
	}
	_iter_end_1bd426335:;;
	return _4167_root;;
}



inline jule::Ptr<_1aab05032_scopeChecker> _1aab08695_getHardRoot(jule::Ptr<_1aab05032_scopeChecker> _self_) {
	jule::Ptr<_1aab05032_scopeChecker> _4267_root = _self_;;
	while (((*(_4267_root))._field_parent != nullptr)) {
		{
			_4267_root=(*(_4267_root))._field_parent;
		}
	_iter_next_1bd4278ca:;
	}
	_iter_end_1bd4278ca:;;
	return _4267_root;;
}



inline jule::Ptr<_1aab1cd80_ReferenceStack> _1aab0892b_getOwnerRefers(jule::Ptr<_1aab05032_scopeChecker> _self_) {
	return (*((*(_1aab08695_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1aab70795_Var> _1aab08c6c_findVar(_1aab05032_scopeChecker* _self_, jule::Str _43823_ident) {
	;
	;
	jule::Ptr<_1aab70795_Var> _4417_v = _1aaa45071_findVar((*(_self_))._field_table.ptr(), &(_43823_ident), false, true);;
	if ((_4417_v != nullptr)) {
		return _4417_v;;
	};
	jule::Ptr<_1aab05032_scopeChecker> _4457_parent = (*(_self_))._field_parent;;
	while ((_4457_parent != nullptr)) {
		{
			_4417_v=_1aaa45071_findVar((*(_4457_parent))._field_table, &(_43823_ident), false, true);
			if ((_4417_v != nullptr)) {
				return _4417_v;;
			};
			_4457_parent=(*(_4457_parent))._field_parent;
		}
	_iter_next_1bd42a8ab:;
	}
	_iter_end_1bd42a8ab:;;
	return nullptr;;
}



inline jule::Ptr<_1aab0033a_Label> _1aab090ad_findLabel(_1aab05032_scopeChecker* _self_, jule::Str* _45926_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd42c4b2:;
		if (it != expr_end) {
			jule::Any _46015_st = *it;
			{
				{
					auto &_match_expr{ _46015_st };
					
					if (_match_expr.type == &__jule_any_type18) {
						_case_begin_1bd42cd31:;
						{
							jule::Ptr<_1aab0033a_Label> _4639_label = _46015_st.unsafe_cast_ptr<_1aab0033a_Label>();;
							if (((*(_4639_label))._field_Ident == (*(_45926_ident)))) {
								return _4639_label;;
							};
						}
					}
					_match_end_1bd42ccba:;
				};
			}
			_iter_next_1bd42c4b2:;
			++it;
			goto _iter_begin_1bd42c4b2;
		}
		_iter_end_1bd42c4b2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aab03b68_scopeLabel> _1aab093ee_findLabelScope(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Str* _47532_ident) {
	jule::Ptr<_1aab03b68_scopeLabel> _4767_label = _1aab09740_findLabelAll(_self_.ptr(), _47532_ident);;
	if (((_4767_label != nullptr) && ((*((*_4767_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _4767_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1aab03b68_scopeLabel> _1aab09740_findLabelAll(_1aab05032_scopeChecker* _self_, jule::Str* _48629_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd431c7a:;
		if (it != expr_end) {
			jule::Ptr<_1aab03b68_scopeLabel> _48715_lbl = *it;
			{
				if (((*((*(_48715_lbl))._field_node))._field_Ident == (*(_48629_ident)))) {
					return _48715_lbl;;
				};
			}
			_iter_next_1bd431c7a:;
			++it;
			goto _iter_begin_1bd431c7a;
		}
		_iter_end_1bd431c7a:;
	};
	return nullptr;;
}



inline jule::Bool _1aab09b3b_isDuplicatedIdent(_1aab05032_scopeChecker* _self_, jule::Uintptr _49833_itself, jule::Str* _49851_ident) {
	jule::Ptr<_1aab70795_Var> _4993_v = _1aab05906_FindVar(_self_, (*(_49851_ident)), false);;
	if (((_4993_v != nullptr) && (static_cast<jule::Uintptr>(_4993_v) != _49833_itself))) {
		if (((*_4993_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_4993_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1aab4eac6_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1aabec1a1_TypeAlias> _5073_ta = _1aab05d02_FindTypeAlias(_self_, (*(_49851_ident)), false);;
	if (((_5073_ta != nullptr) && (static_cast<jule::Uintptr>(_5073_ta) != _49833_itself))) {
		if (((*_5073_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_5073_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1aab4eac6_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1aab09de4_checkVarDecl(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95a7c2_VarDecl> _51833_decl) {
	jule::Ptr<_1aab70795_Var> _5197_v = _1aab2323c_buildVar(_51833_decl);;
	(*(_5197_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5197_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5197_v, &__jule_any_type7); __jule_collection; }));
	});;
	if (_1aab09b3b_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_5197_v), &((*_5197_v.alloc)._field_Ident))) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_5197_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_5197_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1aab078a3_stop(_self_);
		return;;
	};
	_1aab63a1e_checkVarDecl((*_self_.alloc)._field_s, &(_5197_v), jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));
	if (((!(_1aab70e38_IsTypeInferred(_5197_v))) && (((*_5197_v.alloc)._field_TypeSym == nullptr) || ((*((*_5197_v.alloc)._field_TypeSym))._field_Type == nullptr)))) {
		return;;
	};
	_1aab672b4_evalVarValue((*(_self_))._field_s, &(_5197_v), jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));
	if (((!(_1aab70ba2_IsInitialized(_5197_v))) || ((*((*_5197_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1aab1115e_removeInteriorMutRisk(_self_, &((*((*_5197_v.alloc)._field_Value))._field_Data));
	_1aab66e51_checkVarValue((*(_self_))._field_s, &(_5197_v));
}



inline void _1aab0a19c_checkTypeAlias(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aabec1a1_TypeAlias>* _54936_ta) {
	if (_1aab09b3b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_54936_ta))), &((*((*(_54936_ta))))._field_Ident))) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_54936_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_54936_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1aab078a3_stop(_self_);
		return;;
	};
	_1aab5caa1_checkTypeAliasDecl((*(_self_))._field_s, _54936_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_54936_ta)); __jule_collection; }));
	if (((*((*((*(_54936_ta))))._field_TypeSym))._field_Type == nullptr)) {
		_1aab078a3_stop(_self_);
	};
}



inline void _1aab0a455_checkTypeAliasDecl(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95e551_TypeAliasDecl> _56539_decl) {
	jule::Ptr<_1aabec1a1_TypeAlias> _5667_ta = _1aab1ed1b_buildTypeAlias(_56539_decl);;
	_1aab0a19c_checkTypeAlias(_self_, &(_5667_ta));
}



inline jule::Ptr<_1aaaec832_Scope> _1aab0a6db_getChild(_1aab05032_scopeChecker* _self_) {
	return jule::new_ptr<_1aaaec832_Scope>(_1aaaec832_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1aab0ab09_checkChildSsc(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa957978_ScopeTree>* _57635_tree, jule::Ptr<_1aaaec832_Scope>* _57663_s, jule::Ptr<_1aab05032_scopeChecker>* _57679_ssc) {
	(*((*(_57663_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_57663_s))))._field_ChildIndex=(*((*(_57679_ssc))))._field_childIndex;
	(*((*(_57679_ssc))))._field_parent=_self_;
	_1aab170ee_check((*(_57679_ssc)), _57635_tree, _57663_s);
}



inline jule::Ptr<_1aaaec832_Scope> _1aab0b005_checkChildSc(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa957978_ScopeTree>* _58334_tree, jule::Ptr<_1aab05032_scopeChecker>* _58362_ssc) {
	jule::Ptr<_1aaaec832_Scope> _5847_s = _1aab0a6db_getChild(_self_.ptr());;
	_1aab0ab09_checkChildSsc(_self_, _58334_tree, &(_5847_s), _58362_ssc);
	return _5847_s;;
}



inline jule::Ptr<_1aaaec832_Scope> _1aab0b346_checkChild(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa957978_ScopeTree>* _58932_tree) {
	jule::Ptr<_1aab05032_scopeChecker> _5907_ssc = _1aab17385_newChildChecker(_self_);;
	return _1aab0b005_checkChildSc(_self_, _58932_tree, &(_5907_ssc));;
}



inline void _1aab0b5ee_checkAnonScope(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa957978_ScopeTree> _59435_tree) {
	jule::Ptr<_1aaaec832_Scope> _5957_s = _1aab0b346_checkChild(_self_, &(_59435_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5957_s, &__jule_any_type19); __jule_collection; }));
}



inline void _1aab0b962_processErrorCall(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aaa37096_BuiltinErrorCallExpr>* _59938_m, jule::Ptr<_1aa0d7ceb_Token> _59964_err) {
	if (_1aab07dc0_isDeferred(_self_)) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), _59964_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aab05032_scopeChecker> _6047_root = _1aab0840e_getRoot(_self_);;
	if ((!((*((*((*(_6047_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), _59964_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_59938_m))))._field_Func=(*(_6047_root))._field_owner;
}



inline void _1aab0bc1a_checkExpr(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa102b4b_Expr> _61230_expr) {
	jule::Ptr<_1aabbad84_eval> _6137_eval = _1aab57408_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));;
	(*(_6137_eval))._field_target._field_ignored=true;
	jule::Ptr<_1aabb8db5_Data> _6157_d = _1aabdad3d_evalExpr(_6137_eval, _61230_expr);;
	if (((_6157_d == nullptr) || ((*(_6157_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_6157_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1bd454000:;
			{
				jule::Ptr<_1aaa37096_BuiltinErrorCallExpr> _6248_m = (*(_6157_d))._field_Model.unsafe_cast_ptr<_1aaa37096_BuiltinErrorCallExpr>();;
				_1aab0b962_processErrorCall(_self_, &(_6248_m), (*(_61230_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6157_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type22 || _match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30) {
			_case_begin_1bd45461b:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6157_d, &__jule_any_type21); __jule_collection; }));
			}
		}
		else {
			_case_begin_1bd4545a5:;
			{
				_1aab50533_pushErr((*(_self_))._field_s, (*(_61230_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bd45453e:;
	};
}



inline jule::Ptr<_1aaaecc0b_If> _1aab0c05b_checkIf(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95d3a7_If> _64228_i) {
	jule::Ptr<_1aaaec832_Scope> _6437_s = _1aab0b346_checkChild(_self_, &((*(_64228_i))._field_Scope));;
	jule::Ptr<_1aabb8db5_Data> _6457_d = _1aabdad3d_evalExpr(_1aab57408_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)), (*_64228_i.alloc)._field_Expr);;
	if ((_6457_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aac06bc2_Prim> _6507_prim = _1aac00ec9_Prim((*(_6457_d))._field_Type.ptr());;
	if (((_6507_prim == nullptr) || (!(_1aac09e06_IsBool(_6507_prim.ptr()))))) {
		_1aab50533_pushErr((*(_self_))._field_s, (*((*_64228_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aaaecc0b_If>(_1aaaecc0b_If{._field_Expr=(*_6457_d.alloc)._field_Model, ._field_Scope=_6437_s});;
}



inline jule::Ptr<_1aaaed080_Else> _1aab0c39c_checkElse(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95d781_Else> _66230_e) {
	return jule::new_ptr<_1aaaed080_Else>(_1aaaed080_Else{._field_Scope=_1aab0b346_checkChild(_self_, &((*(_66230_e))._field_Scope))});;
}



inline void _1aab0c655_checkConditional(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95dc37_Conditional> _66837_conditional) {
	jule::Ptr<_1aaaed426_Conditional> _6697_c = jule::new_ptr<_1aaaed426_Conditional>(_1aaaed426_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1aaaecc0b_If>>(nullptr), ._field_Default=jule::Ptr<_1aaaed080_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6697_c, &__jule_any_type31); __jule_collection; }));
	(*_6697_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaaecc0b_If>>::alloc(0LL, ((*(_66837_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaaecc0b_If>(nullptr); __jule_collection; });
	(*_6697_c.alloc)._field_Elifs=jule::append((*_6697_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaaecc0b_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aab0c05b_checkIf(_self_, (*_66837_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_66837_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd47ddc6:;
		if (it != expr_end) {
			jule::Ptr<_1aa95d3a7_If> _67515_elif = *it;
			{
				(*_6697_c.alloc)._field_Elifs=jule::append((*_6697_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaaecc0b_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aab0c05b_checkIf(_self_, _67515_elif); __jule_collection; }));
			}
			_iter_next_1bd47ddc6:;
			++it;
			goto _iter_begin_1bd47ddc6;
		}
		_iter_end_1bd47ddc6:;
	};
	if (((*_66837_conditional.alloc)._field_Default != nullptr)) {
		(*_6697_c.alloc)._field_Default=_1aab0c39c_checkElse(_self_, (*_66837_conditional.alloc)._field_Default);
	};
}



inline void _1aab0cb2d_checkIterScopeSsc(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Uintptr _68434_it, jule::Ptr<_1aa957978_ScopeTree> _68451_tree, jule::Ptr<_1aaaec832_Scope>* _68479_s, jule::Ptr<_1aab05032_scopeChecker> _68494_ssc) {
	(*(_68494_ssc))._field_it=_68434_it;
	_1aab0ab09_checkChildSsc(_self_, &(_68451_tree), _68479_s, &(_68494_ssc));
}



inline jule::Ptr<_1aaaec832_Scope> _1aab0d0d4_checkIterScopeSc(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Uintptr _68933_it, jule::Ptr<_1aa957978_ScopeTree> _68950_tree, jule::Ptr<_1aab05032_scopeChecker> _68977_ssc) {
	jule::Ptr<_1aaaec832_Scope> _6907_scope = _1aab0a6db_getChild(_self_.ptr());;
	_1aab0cb2d_checkIterScopeSsc(_self_, _68933_it, _68950_tree, &(_6907_scope), _68977_ssc);
	return _6907_scope;;
}



inline jule::Ptr<_1aaaec832_Scope> _1aab0d4d0_checkIterScope(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Uintptr _69531_it, jule::Ptr<_1aa957978_ScopeTree>* _69549_tree) {
	jule::Ptr<_1aab05032_scopeChecker> _6967_ssc = _1aab17385_newChildChecker(_self_);;
	return _1aab0d0d4_checkIterScopeSc(_self_, _69531_it, (*(_69549_tree)), _6967_ssc);;
}



inline void _1aab0d788_checkInfIter(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95b41b_Iter>* _70034_it) {
	jule::Ptr<_1aaaed723_InfIter> _7017_kind = jule::new_ptr<_1aaaed723_InfIter>(_1aaaed723_InfIter{._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7017_kind, &__jule_any_type32); __jule_collection; }));
	(*_7017_kind.alloc)._field_Scope=_1aab0d4d0_checkIterScope(_self_, static_cast<jule::Uintptr>(_7017_kind), &((*((*(_70034_it))))._field_Scope));
}



inline void _1aab0da41_checkWhileIter(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95b41b_Iter>* _70636_it) {
	jule::Ptr<_1aa95bc46_WhileKind> _7077_wh = (*((*(_70636_it))))._field_Kind.cast_ptr<_1aa95bc46_WhileKind>(&__jule_any_type33);;
	if ((((*(_7077_wh))._field_Expr == nullptr) && ((*_7077_wh.alloc)._field_Next == nullptr))) {
		_1aab0d788_checkInfIter(_self_, _70636_it);
		return;;
	};
	jule::Ptr<_1aaaedbc9_WhileIter> _7137_kind = jule::new_ptr<_1aaaedbc9_WhileIter>(_1aaaedbc9_WhileIter{._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7137_kind, &__jule_any_type34); __jule_collection; }));
	(*_7137_kind.alloc)._field_Scope=_1aab0d4d0_checkIterScope(_self_, static_cast<jule::Uintptr>(_7137_kind), &((*((*(_70636_it))))._field_Scope));
	if (((*(_7077_wh))._field_Expr != nullptr)) {
		jule::Ptr<_1aabb8db5_Data> _7188_d = _1aabdad3d_evalExpr(_1aab57408_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)), (*_7077_wh.alloc)._field_Expr);;
		if ((_7188_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1aac06bc2_Prim> _7234_prim = _1aac00ec9_Prim((*(_7188_d))._field_Type.ptr());;
		if ((_7234_prim == nullptr)) {
			_1aab50533_pushErr((*(_self_))._field_s, (*((*(_70636_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1aac09e06_IsBool(_7234_prim.ptr())))) {
			_1aab50533_pushErr((*(_self_))._field_s, (*((*(_70636_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_7137_kind.alloc)._field_Expr=(*_7188_d.alloc)._field_Model;
	};
	if (_1aa95c0dc_IsWhileNext(_7077_wh.ptr())) {
		if ((!(_1aab197b6_isValidAstStForNextSt(&((*_7077_wh.alloc)._field_Next))))) {
			_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_7077_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _7434_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1aab15c35_checkNode(_self_, &((*_7077_wh.alloc)._field_Next));
		if ((_7434_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _7469_st = (*((*(_self_))._field_scope))._field_Stmts[_7434_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _7434_n);;
			if ((!(_1aab19a80_isValidStForNextSt(&(_7469_st))))) {
				_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_7077_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_7137_kind.alloc)._field_Next=_7469_st;
		};
	};
}



inline void _1aab0de5e_checkComptimeRangeIter(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95b41b_Iter>* _75644_it, jule::Ptr<_1aaaee6ad_RangeIter>* _75665_kind, jule::Ptr<_1aabb8db5_Data>* _75688_d) {
	if (((*((*(_75665_kind))))._field_KeyA != nullptr)) {
		if (((!(_1aab4eac6_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1aab09b3b_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_75665_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1aab50533_pushErr((*(_self_))._field_s, (*(*((*(_75665_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_75665_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_75665_kind))))._field_KeyB != nullptr)) {
		if (((!(_1aab4eac6_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1aab09b3b_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_75665_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1aab50533_pushErr((*(_self_))._field_s, (*(*((*(_75665_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_75665_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1aa95c64d_RangeKind> _7707_rang = (*((*(_75644_it))))._field_Kind.cast_ptr<_1aa95c64d_RangeKind>(&__jule_any_type35);;
	_1aab1797e_makeComptimeRange(_75688_d);
	if ((*((*(_75688_d))))._field_Decl) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_7707_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_75688_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1aabb31de_rangeChecker _7777_rc = _1aabb31de_rangeChecker{._field_sc=_self_, ._field_rang=_7707_rang, ._field_Kind=(*(_75665_kind)), ._field_d=(*(_75688_d))};;
	jule::Bool _7833_ok = _1aabb5235_check(&_7777_rc);;
	if ((!(_7833_ok))) {
		return;;
	};
	jule::Ptr<_1aaac1152_comptimeRange> _7887_comptime = _1aac04609_comptimeRange((*((*(_75688_d))))._field_Type.ptr());;
	((_1aaac0e32_comptimeRangeKindMptrData*)(*(_7887_comptime))._field_kind.safe_type())->_1aaac0629_ready((*(_7887_comptime))._field_kind.data, &((*((*(_75665_kind))))._field_KeyA), &((*((*(_75665_kind))))._field_KeyB));
	jule::I32 _7907_i = 0LL;;
	jule::I32 _7913_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_7907_i < ((_1aaac0e32_comptimeRangeKindMptrData*)(*_7887_comptime.alloc)._field_kind.safe_type())->_1aaac0ccd_len((*_7887_comptime.alloc)._field_kind.data)); (_7907_i)++) {
		{
			jule::Ptr<_1aab05032_scopeChecker> _7938_ssc = _1aab17385_newChildChecker(_self_);;
			jule::Ptr<_1aaaec832_Scope> _7948_scope = _1aab0a6db_getChild(_self_);;
			if (((*((*(_75665_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_75665_kind))))._field_KeyA.alloc)._field_Scope=_7948_scope;
				(*((*(_7938_ssc))._field_table))._field_Vars=jule::append((*(*(_7938_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_75665_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_75665_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_75665_kind))))._field_KeyB.alloc)._field_Scope=_7948_scope;
				(*((*(_7938_ssc))._field_table))._field_Vars=jule::append((*(*(_7938_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_75665_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1aaac0e32_comptimeRangeKindMptrData*)(*_7887_comptime.alloc)._field_kind.safe_type())->_1aaac0a47_step((*_7887_comptime.alloc)._field_kind.data, _7907_i, &((*((*(_75665_kind))))._field_KeyA), &((*((*(_75665_kind))))._field_KeyB));
			_1aab0ab09_checkChildSsc(_self_, &((*((*(_75644_it))))._field_Scope), &(_7948_scope), &(_7938_ssc));
			if ((_7913_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1bd4aa8d6;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7948_scope, &__jule_any_type19); __jule_collection; }));
		}
	_iter_next_1bd4aa8d6:;
	}
	_iter_end_1bd4aa8d6:;;
}



inline void _1aab0e217_checkRangeIter(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95b41b_Iter>* _81336_it) {
	jule::Ptr<_1aa95c64d_RangeKind> _8147_rang = (*((*(_81336_it))))._field_Kind.cast_ptr<_1aa95c64d_RangeKind>(&__jule_any_type35);;
	jule::Ptr<_1aabbad84_eval> _8207_eval = _1aab57408_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));;
	(*(_8207_eval))._field_target._field_mutable=true;
	jule::Ptr<_1aabb8db5_Data> _8237_d = _1aabda9ec_evalExpr1(_8207_eval, (*(_8147_rang))._field_Expr);;
	if ((_8237_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1aaaee6ad_RangeIter> _8287_kind = jule::new_ptr<_1aaaee6ad_RangeIter>(_1aaaee6ad_RangeIter{._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Expr=_8237_d, ._field_KeyA=jule::Ptr<_1aab70795_Var>(nullptr), ._field_KeyB=jule::Ptr<_1aab70795_Var>(nullptr)});;
	if ((*((*(_81336_it))))._field_Comptime) {
		_1aab0de5e_checkComptimeRangeIter(_self_, _81336_it, &(_8287_kind), &(_8237_d));
		return;;
	};
	if (_1aac0331c_comptime((*(_8237_d))._field_Type.ptr())) {
		_1aab50533_pushErr((*(_self_))._field_s, (*((*_8147_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1aabb31de_rangeChecker _8427_rc = _1aabb31de_rangeChecker{._field_sc=_self_, ._field_rang=_8147_rang, ._field_Kind=_8287_kind, ._field_d=_8237_d};;
	jule::Bool _8483_ok = _1aabb5235_check(&_8427_rc);;
	if ((!(_8483_ok))) {
		return;;
	};
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8287_kind, &__jule_any_type36); __jule_collection; }));
	jule::Ptr<_1aab05032_scopeChecker> _8557_ssc = _1aab17385_newChildChecker(_self_);;
	jule::Ptr<_1aaaec832_Scope> _8567_scope = _1aab0a6db_getChild(_self_);;
	if (((*(_8287_kind))._field_KeyA != nullptr)) {
		if (((!(_1aab4eac6_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1aab09b3b_isDuplicatedIdent(_self_, 0LLU, &((*(*(_8287_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1aab50533_pushErr((*(_self_))._field_s, (*(*(_8287_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_8287_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_8287_kind))._field_KeyA.alloc)._field_Scope=_8567_scope;
		(*((*(_8557_ssc))._field_table))._field_Vars=jule::append((*(*(_8557_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8287_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*(_8287_kind))._field_KeyB != nullptr)) {
		if (((!(_1aab4eac6_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1aab09b3b_isDuplicatedIdent(_self_, 0LLU, &((*(*(_8287_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1aab50533_pushErr((*(_self_))._field_s, (*(*(_8287_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_8287_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_8287_kind))._field_KeyB.alloc)._field_Scope=_8567_scope;
		(*((*(_8557_ssc))._field_table))._field_Vars=jule::append((*(*(_8557_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_8287_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1aab0cb2d_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_8287_kind), (*((*(_81336_it))))._field_Scope, &(_8567_scope), _8557_ssc);
	(*(_8287_kind))._field_Scope=_8567_scope;
}



inline void _1aab0e4c0_checkIter(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95b41b_Iter> _88030_it) {
	if (_1aa95b7b2_IsInf(_88030_it.ptr())) {
		if ((*_88030_it.alloc)._field_Comptime) {
			_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*_88030_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1aab0d788_checkInfIter(_self_, &(_88030_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_88030_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1bd4c6d42:;
			{
				if ((*(_88030_it))._field_Comptime) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*_88030_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1aab0da41_checkWhileIter(_self_, &(_88030_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1bd4c801e:;
			{
				_1aab0e217_checkRangeIter(_self_, &(_88030_it));
			}
		}
		else {
			_case_begin_1bd4c7e86:;
			{
				jule::println(_1acbbe47e_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1bd4c7e20:;
	};
}



inline jule::Bool _1aab0e811_checkValidContLabel(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Uintptr _90436_it) {
	jule::Ptr<_1aab05032_scopeChecker> _9057_scope = _self_;;
	_julec_label_1bd4ccbb1:;
	if (((*(_9057_scope))._field_it == _90436_it)) {
		return true;;
	};
	if (((*(_9057_scope))._field_parent != nullptr)) {
		_9057_scope=(*_9057_scope.alloc)._field_parent;
		goto _julec_label_1bd4ccbb1;
	};
	return false;;
}



inline jule::Bool _1aab0eb52_checkValidBreakLabel(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Uintptr _92037_ptr) {
	jule::Ptr<_1aab05032_scopeChecker> _9217_scope = _self_;;
	_julec_label_1bd4d0d3a:;
	if (((*(_9217_scope))._field_it == _92037_ptr)) {
		return true;;
	};
	if (((*(_9217_scope))._field_cse != 0LLU)) {
		jule::Uintptr _9294_mtch = static_cast<jule::Uintptr>((*(((_1aab02b23_Case*)((*_9217_scope.alloc)._field_cse))))._field_Owner);;
		if ((_9294_mtch == _92037_ptr)) {
			return true;;
		};
	};
	if (((*(_9217_scope))._field_parent != nullptr)) {
		_9217_scope=(*_9217_scope.alloc)._field_parent;
		goto _julec_label_1bd4d0d3a;
	};
	return false;;
}



inline jule::Ptr<_1aaaee9aa_ContSt> _1aab0ee93_checkContValidScope(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95ce01_ContSt> _94336_c) {
	if (_1aab07dc0_isDeferred(_self_)) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*(_94336_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_94336_c))._field_Label != nullptr)) {
		return jule::new_ptr<_1aaaee9aa_ContSt>(_1aaaee9aa_ContSt{._field_It=0});;
	};
	jule::Ptr<_1aab05032_scopeChecker> _9537_scope = _self_;;
	_julec_label_1bd4d0e28:;
	{
		
		if (((((*(_9537_scope))._field_it == 0LLU) && ((*_9537_scope.alloc)._field_parent != nullptr)) && ((*_9537_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1bd4d63e5:;
			{
				_9537_scope=(*_9537_scope.alloc)._field_parent;
				goto _julec_label_1bd4d0e28;
			}
		}
		else if (((*(_9537_scope))._field_it != 0LLU)) {
			_case_begin_1bd4d647d:;
			{
				return jule::new_ptr<_1aaaee9aa_ContSt>(_1aaaee9aa_ContSt{._field_It=(*_9537_scope.alloc)._field_it});;
			}
		}
		_match_end_1bd4d633a:;
	};
	_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*(_94336_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1aab1024b_checkCont(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95ce01_ContSt> _96726_c) {
	jule::Ptr<_1aaaee9aa_ContSt> _9687_cont = _1aab0ee93_checkContValidScope(_self_, _96726_c);;
	if ((_9687_cont == nullptr)) {
		return;;
	};
	if (((*(_96726_c))._field_Label != nullptr)) {
		jule::Ptr<_1aab03b68_scopeLabel> _9748_label = _1aab187d7_findLabelParent(&((*(*(_96726_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_9748_label == nullptr)) {
			_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_96726_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_96726_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		(*(_9748_label))._field_used=true;
		if ((((*((*_9748_label.alloc)._field_node))._field_Index + 1LL) >= (*((*(*(_9748_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_96726_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_96726_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		jule::I32 _9874_i = ((*((*_9748_label.alloc)._field_node))._field_Index + 1LL);;
		if ((_9874_i >= (*((*(*(_9748_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_96726_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _9919_st = (*((*(*(_9748_label))._field_node.alloc)._field_Scope))._field_Stmts[_9874_i];;
			{
				auto &_match_expr{ _9919_st };
				
				if (_match_expr.type == &__jule_any_type32) {
					_case_begin_1bd4e2e5c:;
					{
						(*(_9687_cont))._field_It=static_cast<jule::Uintptr>(_9919_st.unsafe_cast_ptr<_1aaaed723_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type36) {
					_case_begin_1bd4e1b3c:;
					{
						(*(_9687_cont))._field_It=static_cast<jule::Uintptr>(_9919_st.unsafe_cast_ptr<_1aaaee6ad_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type34) {
					_case_begin_1bd4e1d29:;
					{
						(*_9687_cont.alloc)._field_It=static_cast<jule::Uintptr>(_9919_st.unsafe_cast_ptr<_1aaaedbc9_WhileIter>());
					}
				}
				else {
					_case_begin_1bd4e1cb3:;
					{
						_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_96726_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_96726_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					}
				}
				_match_end_1bd4e1c4c:;
			};
		};
	};
	if (((*(_9687_cont))._field_It != 0LLU)) {
		if ((!(_1aab0e811_checkValidContLabel(_self_, (*_9687_cont.alloc)._field_It)))) {
			_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*(_96726_c))._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_96726_c.alloc)._field_Label))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9687_cont, &__jule_any_type37); __jule_collection; }));
}



inline void _1aab10504_checkLabel(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10adeb_LabelSt> _101431_l) {
	if ((_1aab090ad_findLabel(_self_.ptr(), &((*(_101431_l))._field_Ident)) != nullptr)) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_101431_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_101431_l.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1aab0033a_Label> _10207_label = jule::new_ptr<_1aab0033a_Label>(_1aab0033a_Label{._field_Ident=(*(_101431_l))._field_Ident, ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10207_label, &__jule_any_type18); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab03b68_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aab03b68_scopeLabel>(_1aab03b68_scopeLabel{._field_token=(*_101431_l.alloc)._field_Token, ._field_node=_10207_label, ._field_used=false}); __jule_collection; }));
}



inline void _1aab107ac_pushGoto(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10b2c5_GotoSt> _103329_gt) {
	jule::Ptr<_1aab0099a_GotoSt> _10347_st = jule::new_ptr<_1aab0099a_GotoSt>(_1aab0099a_GotoSt{._field_Ident=(*((*_103329_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_103329_gt))._field_Label, ._field_Label=jule::Ptr<_1aab0033a_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10347_st, &__jule_any_type38); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab0099a_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _10347_st; __jule_collection; }));
}



inline void _1aab10a65_checkPostfix(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10c2b5_AssignSt> _104433_a) {
	if (((*(_104433_a))._field_Left.len() > 1LL)) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*_104433_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aabbad84_eval> _10507_eval = _1aab57408_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));;
	(*(_10507_eval))._field_target._field_mutable=true;
	jule::Ptr<_1aa102b4b_Expr> _10537_expr = (*((*(_104433_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1aabb8db5_Data> _10547_d = _1aabdad3d_evalExpr(_10507_eval, _10537_expr);;
	if ((_10547_d == nullptr)) {
		return;;
	};
	_1aab194ec_checkAssign(&((*_self_.alloc)._field_s), &(_10547_d), nullptr, (*_104433_a.alloc)._field_Setter);
	if ((_1aac014e6_Ptr((*(_10547_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1aac0deb5_Ptr> _10628_ptr = _1aac014e6_Ptr((*(_10547_d))._field_Type);;
		if (_1aac0ea32_IsUnsafe(_10628_ptr.ptr())) {
			_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_104433_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_104433_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_10547_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1aac00ec9_Prim((*(_10547_d))._field_Type.ptr()) == nullptr) || (!(_1aaabebcd_IsNum((*(_1aac00ec9_Prim((*(_10547_d))._field_Type.ptr())))._field_Kind))))) {
			_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_104433_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_104433_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_10547_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1aab00d74_Postfix>(_1aab00d74_Postfix{._field_Expr=(*(_10547_d))._field_Model, ._field_Op=(*((*_104433_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type39); __jule_collection; }));
}



inline jule::Bool _1aab10da6_isNewAssignIdent(_1aab05032_scopeChecker* _self_, jule::Str _108032_ident) {
	if ((_1aa0da6d3_IsIgnoreIdent(_108032_ident) || (_108032_ident).empty())) {
		return false;;
	};
	return (_1aaa45923_defByIdent((*(_self_))._field_table.ptr(), &(_108032_ident), false) == nullptr);;
}



inline void _1aab1115e_removeInteriorMutRisk(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aabb8db5_Data>* _109343_d) {
	jule::Ptr<_1aa969605_StructIns> _10943_s = _1aac0254c_Struct((*((*(_109343_d))))._field_Type.ptr());;
	if ((_10943_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1aab05032_scopeChecker> _10983_root = _1aab08695_getHardRoot(_self_);;
	if (((*((*(_10983_root))._field_owner))._field_Owner != _10943_s)) {
		return;;
	};
	(*((*(_109343_d))))._field_Mutable=true;
}



inline void _1aab11417_checkSingleAssign(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10c2b5_AssignSt>* _110739_a) {
	jule::Ptr<_1aabb8db5_Data> _110811_l = nullptr;;
	if ((!(_1aa0da6d3_IsIgnoreIdent((*((*((*(_110739_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1aa102b4b_Expr> _11118_expr = (*((*((*(_110739_a))))._field_Left[0LL]))._field_Expr;;
		jule::Ptr<_1aabbad84_eval> _11128_eval = _1aab57408_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));;
		(*(_11128_eval))._field_target._field_mutable=true;
		_110811_l=_1aabdad3d_evalExpr(_11128_eval, _11118_expr);
		if ((_110811_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1aabbad84_eval> _11207_eval = static_cast<jule::Ptr<_1aabbad84_eval>>(nullptr);;
	if ((_110811_l != nullptr)) {
		_11207_eval=_1aab570b7_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1), (*_110811_l.alloc)._field_Type);
	} else {
		_11207_eval=_1aab57408_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));
	};
	(*(_11207_eval))._field_target._field_mutable=true;
	(*_11207_eval.alloc)._field_unsafety=_1aab0741e_isUnsafe(_self_);
	jule::Ptr<_1aabb8db5_Data> _11287_r = _1aabdad3d_evalExpr(_11207_eval, (*((*(_110739_a))))._field_Right);;
	if ((_11287_r == nullptr)) {
		return;;
	};
	_1aab1115e_removeInteriorMutRisk(_self_, &(_11287_r));
	if ((_110811_l == nullptr)) {
		if (_1aabee2c4_Void((*(_11287_r))._field_Type.ptr())) {
			_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*((*((*(_110739_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_110739_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_110739_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11287_r, &__jule_any_type21); __jule_collection; }));
		return;;
	};
	if ((!(_1aab194ec_checkAssign(&((*_self_.alloc)._field_s), &(_110811_l), _11287_r, (*((*(_110739_a))))._field_Setter)))) {
		return;;
	};
	if ((_1aac03086_Tup((*(_11287_r))._field_Type.ptr()) != nullptr)) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_110739_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aaa2dad7_OperandExpr> _11557_lm = jule::new_ptr<_1aaa2dad7_OperandExpr>(_1aaa2dad7_OperandExpr{._field_Type=(*(_110811_l))._field_Type, ._field_Model=(*_110811_l.alloc)._field_Model});;
	jule::Ptr<_1aaa2dad7_OperandExpr> _11597_rm = jule::new_ptr<_1aaa2dad7_OperandExpr>(_1aaa2dad7_OperandExpr{._field_Type=(*(_11287_r))._field_Type, ._field_Model=(*_11287_r.alloc)._field_Model});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1aab0132a_Assign>(_1aab0132a_Assign{._field_Left=_11557_lm, ._field_Right=_11597_rm, ._field_Op=(*((*(_110739_a))))._field_Setter}), &__jule_any_type40); __jule_collection; }));
	if (((*((*((*(_110739_a))))._field_Setter))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1aaba6c93_assignTypeChecker _11668_checker = _1aaba6c93_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_110811_l.alloc)._field_Type, ._field_d=_11287_r, ._field_errorToken=(*((*(_110739_a))))._field_Setter, ._field_refers=_1aab0892b_getOwnerRefers(_self_)};;
		if (_1aaba7c94_check(&_11668_checker)) {
			(*(_11597_rm))._field_Model=(*(_11287_r))._field_Model;
			(*(_11557_lm))._field_Model=(*_110811_l.alloc)._field_Model;
		};
		return;;
	};
	jule::U32 _11793_id = (*((*((*(_110739_a))))._field_Setter))._field_Id;;
	(*(*((*(_110739_a))))._field_Setter.alloc)._field_Id=_1aab176c6_removeEqFromOp((*(*((*(_110739_a))))._field_Setter.alloc)._field_Id);
	_1aabdd25d_binaryEval _11817_solver = static__1aabddbba_new(_11207_eval, (*((*(_110739_a))))._field_Setter);;
	({
		jule::Ptr<_1aabb8db5_Data> ___jule_assign_arg = _110811_l;
		jule::Ptr<_1aabb8db5_Data> _1___jule_assign_arg = _11287_r;
		_11817_solver._field_l = ___jule_assign_arg;
		_11817_solver._field_r = _1___jule_assign_arg;
	});
	_1aabe2c35_evalOp(&_11817_solver);
	(*(*((*(_110739_a))))._field_Setter.alloc)._field_Id=_11793_id;
}



inline void _1aab11a55_processEndPartOfMultiAssign(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _118749_st, jule::Ptr<_1aa10c2b5_AssignSt>* _118772_a, jule::Ptr<_1aa10bc32_AssignLeft>* _11888_lexpr, jule::Ptr<_1aabb8db5_Data>* _118838_l, _1aaaec0a1_exprPart* _118853_r, jule::Bool _118866_strict) {
	if (((!((*((*(_11888_lexpr))))._field_Reference)) && _1aa0da6d3_IsIgnoreIdent((*((*(_11888_lexpr))))._field_Ident))) {
		if (_1aabee2c4_Void((*((*(_118853_r))._field_data))._field_Type.ptr())) {
			_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_118772_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1aabb8db5_Data>> &__jule_push_dest = (*((*(_118749_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_118772_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_11888_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1bd537d5e:;
				{
					if ((!(_1aab10da6_isNewAssignIdent(_self_.ptr(), (*((*(_11888_lexpr))))._field_Ident)))) {
						goto _julec_label_1bd542110;
					};
				}
			}
			else {
				_case_begin_1bd537578:;
				{
					if (((*((*(_11888_lexpr))))._field_Mutable || (*((*(_11888_lexpr))))._field_Reference)) {
						_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_11888_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1bd542110;
				}
			}
			_match_end_1bd537512:;
		};
		if (_1aab09b3b_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_11888_lexpr))))._field_Ident))) {
			_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_11888_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11888_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1aab078a3_stop(_self_);
			return;;
		};
		if (_1aa0da6d3_IsIgnoreIdent((*((*(_11888_lexpr))))._field_Ident)) {
			_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_11888_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1aab70795_Var> _12208_v = jule::new_ptr<_1aab70795_Var>(_1aab70795_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_11888_lexpr))))._field_Token, ._field_Ident=(*((*(_11888_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_11888_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_11888_lexpr))))._field_Reference, ._field_Checked=false, ._field_TypeSym=jule::Ptr<_1aac062ba_TypeSym>(nullptr), ._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=(*(_118853_r))._field_expr, ._field_Data=(*(_118853_r))._field_data}), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr)});;
		_1aab66e51_checkVarValue((*_self_.alloc)._field_s, &(_12208_v));
		{ jule::Slice<jule::Ptr<_1aabb8db5_Data>> &__jule_push_dest = (*((*(_118749_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=(*((*_12208_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_12208_v.alloc)._field_Mutable, ._field_Reference=(*_12208_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_12208_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_12208_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1aab70795_Var>> &__jule_push_dest = (*((*(_118749_st))))._field_Decls; __jule_push_dest.push(_12208_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _12208_v; __jule_collection; }));
		return;;
	};
	_julec_label_1bd542110:;
	if (((*((*(_11888_lexpr))))._field_Mutable || (*((*(_11888_lexpr))))._field_Reference)) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_11888_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_11888_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1aab194ec_checkAssign(&((*(_self_))._field_s), _118838_l, (*(_118853_r))._field_data, (*((*(_11888_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _12557_reference = false;;
	if (_1aab5c2a9_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_118838_l))))._field_Mutable, _12557_reference, &((*((*(_118838_l))))._field_Type), &((*(_118853_r))._field_data), &((*((*(_118853_r))._field_expr))._field_Token))) {
		_12557_reference=_118866_strict;
		_1aab57a24_checkAssignType((*(_self_))._field_s, _12557_reference, &((*((*(_118838_l))))._field_Type), &((*(_118853_r))._field_data), (*(*(_118853_r))._field_expr.alloc)._field_Token, _1aab0892b_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1aabb8db5_Data>> &__jule_push_dest = (*((*(_118749_st))))._field_Left; __jule_push_dest.push((*(_118838_l))); };
}



inline __jule_tuple_s_1aaaec0a1_exprPart__jule_tuple_x_1aabb8db5_Data__jule_tuple_bool _1aab11e51_getRightExprsOfMultiAssign(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10c2b5_AssignSt> _126347_a, jule::Ptr<_1aabbad84_eval> _12647_eval) {
	__jule_tuple_s_1aaaec0a1_exprPart__jule_tuple_x_1aabb8db5_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg2 = false;
	jule::Fn<void,jule::I32> _12653_updateMut = jule::__new_closure<void,jule::I32>((void*)__jule_anon_1bd54a3d2, jule::Ptr<__jule_anon_1bd54a3d2_ctx>::make(__jule_anon_1bd54a3d2_ctx{._126347_a=_126347_a,._12647_eval=_12647_eval,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd54a3d2_ctx_handler);;
	{
		auto &_match_expr{ (*((*(_126347_a))._field_Right))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bd551a7b:;
			{
				jule::Ptr<_1aa103740_TupleExpr> _12918_tup = (*((*(_126347_a))._field_Right))._field_Kind.unsafe_cast_ptr<_1aa103740_TupleExpr>();;
				__jule_func_result.__jule_result_arg0=({ auto __jule_collection = jule::Slice<_1aaaec0a1_exprPart>::alloc(0LL, (*(_12918_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1aaaec0a1_exprPart{._field_data=jule::Ptr<_1aabb8db5_Data>(nullptr), ._field_expr=jule::Ptr<_1aa102b4b_Expr>(nullptr)}; __jule_collection; });
				jule::I32 _12934_i = 0LL;;
				jule::Ptr<jule::I32> _12948__i = ((jule::Ptr<jule::I32>)((&(_12934_i))));;
				jule::Ptr<jule::Slice<_1aaaec0a1_exprPart>> _12958__parts = ((jule::Ptr<jule::Slice<_1aaaec0a1_exprPart>>)((&(__jule_func_result.__jule_result_arg0))));;
				__jule_func_result.__jule_result_arg1=_1aabd89c8_evalTupleFunc(_12647_eval, _12918_tup, jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aa102b4b_Expr>*>((void*)__jule_anon_1bd5566a7, jule::Ptr<__jule_anon_1bd5566a7_ctx>::make(__jule_anon_1bd5566a7_ctx{._12948__i=_12948__i,._126347_a=_126347_a,._12653_updateMut=_12653_updateMut,._12647_eval=_12647_eval,._12958__parts=_12958__parts}).as<jule::Uintptr>(), __jule_anon_1bd5566a7_ctx_handler));
			}
		}
		else {
			_case_begin_1bd54e11c:;
			{
				_12653_updateMut(0LL);
				__jule_func_result.__jule_result_arg1=_1aabdad3d_evalExpr(_12647_eval, (*(_126347_a))._field_Right);
				if ((__jule_func_result.__jule_result_arg1 == nullptr)) {
					return __jule_func_result;;
				};
				if ((_1aac03086_Tup((*(__jule_func_result.__jule_result_arg1))._field_Type.ptr()) != nullptr)) {
					jule::Ptr<_1aac0bcb5_Tuple> _13189_t = _1aac03086_Tup((*(__jule_func_result.__jule_result_arg1))._field_Type);;
					__jule_func_result.__jule_result_arg0=({ auto __jule_collection = jule::Slice<_1aaaec0a1_exprPart>::alloc(0LL, (*(_13189_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1aaaec0a1_exprPart{._field_data=jule::Ptr<_1aabb8db5_Data>(nullptr), ._field_expr=jule::Ptr<_1aa102b4b_Expr>(nullptr)}; __jule_collection; });
					{
						auto expr = &((*_13189_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd5520ba:;
						if (it != expr_end) {
							jule::Ptr<_1aabecdb6_Type> _132017_kind = *it;
							{
								{ jule::Slice<_1aaaec0a1_exprPart> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push(_1aaaec0a1_exprPart{._field_data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_132017_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)}), ._field_expr=(*_126347_a.alloc)._field_Right}); };
							}
							_iter_next_1bd5520ba:;
							++it;
							goto _iter_begin_1bd5520ba;
						}
						_iter_end_1bd5520ba:;
					};
				} else {
					__jule_func_result.__jule_result_arg0=({ auto __jule_collection = jule::Slice<_1aaaec0a1_exprPart>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aaaec0a1_exprPart{._field_data=__jule_func_result.__jule_result_arg1, ._field_expr=(*_126347_a.alloc)._field_Right}; __jule_collection; });
				};
			}
		}
		_match_end_1bd54e0a6:;
	};
	__jule_func_result.__jule_result_arg2=true;
	return __jule_func_result;;
}



inline void _1aab12209_checkMultiAssign(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10c2b5_AssignSt>* _133738_a) {
	if ((((*((*((*(_133738_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU)) && ((*(*((*(_133738_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_133738_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aabbad84_eval> _13437_eval = _1aab57408_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));;
	jule::Slice<_1aaaec0a1_exprPart> _13447_right;
	jule::Ptr<_1aabb8db5_Data> _134414_rightData;
	jule::Bool _134425_ok;
	({
		__jule_tuple_s_1aaaec0a1_exprPart__jule_tuple_x_1aabb8db5_Data__jule_tuple_bool __jule_assign_result = _1aab11e51_getRightExprsOfMultiAssign(_self_, (*(_133738_a)), _13437_eval);
		_13447_right = __jule_assign_result.__jule_result_arg0;
		_134414_rightData = __jule_assign_result.__jule_result_arg1;
		_134425_ok = __jule_assign_result.__jule_result_arg2;
	});
	if ((!(_134425_ok))) {
		return;;
	};
	jule::Bool _13497_strict = false;;
	if ((_13447_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_13447_right[0LL]._field_data))._field_Model };
			
			if (_match_expr.type == &__jule_any_type43) {
				_case_begin_1bd55ca10:;
				{
					jule::Ptr<_1aaa31865_IndexingExpr> _13539_iem = (*(_13447_right[0LL]._field_data))._field_Model.unsafe_cast_ptr<_1aaa31865_IndexingExpr>();;
					if ((_1aac02d00_Map((*((*(_13539_iem))._field_Expr))._field_Type.ptr()) != nullptr)) {
						_13497_strict=true;
						_13447_right=({ auto __jule_collection = jule::Slice<_1aaaec0a1_exprPart>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1aaaec0a1_exprPart{._field_data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=(*(_1aac02d00_Map((*((*(_13539_iem))._field_Expr))._field_Type)))._field_Val, ._field_Mutable=(*(_13447_right[0LL]._field_data))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)}), ._field_expr=_13447_right[0LL]._field_expr}; (*it++) = _1aaaec0a1_exprPart{._field_data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)}), ._field_expr=_13447_right[0LL]._field_expr}; __jule_collection; });
					};
				}
			}
			_match_end_1bd55c988:;
		};
	};
	{
		
		if (((*((*(_133738_a))))._field_Left.len() > _13447_right.len())) {
			_case_begin_1bd55c306:;
			{
				_1aab50533_pushErr((*(_self_))._field_s, (*((*(_133738_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_133738_a))))._field_Left.len() < _13447_right.len())) {
			_case_begin_1bd55c36c:;
			{
				_1aab50533_pushErr((*(_self_))._field_s, (*((*(_133738_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1bd55caa9:;
	};
	(*(_13437_eval))._field_target._field_mutable=true;
	jule::Ptr<_1aab018ad_MultiAssign> _13767_st = jule::new_ptr<_1aab018ad_MultiAssign>(_1aab018ad_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1aabb8db5_Data>>(nullptr), ._field_Right=(*(_134414_rightData))._field_Model, ._field_Op=(*((*(_133738_a))))._field_Setter});;
	{
		auto expr = &((*((*(_133738_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd56708b:;
		if (it != expr_end) {
			jule::I32 _13807_i = it - expr->begin();
			{
				jule::Ptr<_1aa10bc32_AssignLeft> _13818_lexpr = (*((*(_133738_a))))._field_Left[_13807_i];;
				jule::Ptr<_1aabb8db5_Data> _138212_l = nullptr;;
				if ((!(_1aa0da6d3_IsIgnoreIdent((*(_13818_lexpr))._field_Ident)))) {
					if ((!((*((*(_133738_a))))._field_Declarative))) {
						goto _julec_label_1bd568862;
					};
					if (((*_13818_lexpr.alloc)._field_Mutable && (*_13818_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1bd56b029;
					};
					{
						auto &_match_expr{ (*((*(_13818_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type41) {
							_case_begin_1bd569a72:;
							{
								if (_1aab10da6_isNewAssignIdent(_self_, (*_13818_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1bd56b029;
								};
							}
						}
						_match_end_1bd5699ea:;
					};
					_julec_label_1bd568862:;
					_138212_l=_1aabdad3d_evalExpr(_13437_eval, (*_13818_lexpr.alloc)._field_Expr);
					if ((_138212_l == nullptr)) {
						goto _iter_next_1bd56708b;
					};
					_julec_label_1bd56b029:;
				};
				_1aaaec0a1_exprPart _14038_r = _13447_right[_13807_i];;
				_1aab1115e_removeInteriorMutRisk(_self_, &(_14038_r._field_data));
				_1aab11a55_processEndPartOfMultiAssign(_self_, &(_13767_st), _133738_a, &(_13818_lexpr), &(_138212_l), &(_14038_r), _13497_strict);
			}
			_iter_next_1bd56708b:;
			++it;
			_13807_i++;
			goto _iter_begin_1bd56708b;
		}
		_iter_end_1bd56708b:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_13767_st, &__jule_any_type44); __jule_collection; }));
}



inline void _1aab124b2_checkAssignSt(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10c2b5_AssignSt> _141034_a) {
	{
		
		if (_1aa0dcb47_IsPostfixOp((*((*(_141034_a))._field_Setter))._field_Id)) {
			_case_begin_1bd56cd94:;
			{
				_1aab10a65_checkPostfix(_self_, _141034_a);
			}
		}
		else if (((*(_141034_a))._field_Left.len() == 1LL)) {
			_case_begin_1bd56ca42:;
			{
				_1aab11417_checkSingleAssign(_self_, &(_141034_a));
			}
		}
		else {
			_case_begin_1bd56c9cb:;
			{
				_1aab12209_checkMultiAssign(_self_, &(_141034_a));
			}
		}
		_match_end_1bd56c921:;
	};
}



inline jule::Ptr<_1aaaec832_Scope> _1aab128ad_checkCaseScope(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aab02b23_Case>* _142132_c, jule::Ptr<_1aa957978_ScopeTree>* _142147_tree) {
	jule::Ptr<_1aab05032_scopeChecker> _14227_ssc = _1aab17385_newChildChecker(_self_);;
	(*(_14227_ssc))._field_cse=static_cast<jule::Uintptr>((*(_142132_c)));
	return _1aab0b005_checkChildSc(_self_, _142147_tree, &(_14227_ssc));;
}



inline jule::Ptr<_1aab02b23_Case> _1aab12e1e_checkCase(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aab0232b_Match> _142730_m, jule::I32 _142741_i, jule::Ptr<_1aa95ea07_Case> _142753_c, jule::Ptr<_1aabb8db5_Data> _142772_expr) {
	jule::Ptr<_1aab02b23_Case> _14287_case = (*(_142730_m))._field_Cases[_142741_i];;
	(*(_14287_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabb8db5_Data>>::alloc(0LL, (*(_142753_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aabb8db5_Data>(nullptr); __jule_collection; });
	jule::Bool _14307_constMatched = false;;
	jule::Ptr<_1aabbad84_eval> _14317_eval = _1aab57408_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));;
	{
		auto expr = &((*_142753_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd573509:;
		if (it != expr_end) {
			jule::Ptr<_1aa102b4b_Expr> _143215_e = *it;
			{
				jule::Ptr<_1aabb8db5_Data> _14338_d = _1aabda029_evalExprKind(_14317_eval, (*(_143215_e))._field_Kind);;
				if ((_14338_d == nullptr)) {
					goto _iter_next_1bd573509;
				};
				if ((*_142730_m.alloc)._field_TypeMatch) {
					(*_14287_case.alloc)._field_Exprs=jule::append((*_14287_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabb8db5_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14338_d; __jule_collection; }));
					if ((_1aab18353_countMatchType(&(_142730_m), &((*(_14338_d))._field_Type)) > 1LL)) {
						_1aab50533_pushErr((*(_self_))._field_s, (*_143215_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*_14338_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					};
					if ((*_142730_m.alloc)._field_Comptime) {
						_14307_constMatched=(_14307_constMatched || _1aabed603_Equal((*(_142772_expr))._field_Type, (*(_14338_d))._field_Type));
					} else {
						if ((_1aac01a13_TypeEnum((*(_142772_expr))._field_Type.ptr()) != nullptr)) {
							_1aab58481_checkTypeCompatibility((*(_self_))._field_s, &((*_142772_expr.alloc)._field_Type), &((*(_14338_d))._field_Type), &((*_143215_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1aaa46935_Trait> _14527_trt = _1aac02a69_Trait((*(_142772_expr))._field_Type.ptr());;
							if ((_14527_trt != nullptr)) {
								_1aab58481_checkTypeCompatibility((*(_self_))._field_s, &((*_142772_expr.alloc)._field_Type), &((*(_14338_d))._field_Type), &((*_143215_e.alloc)._field_Token));
							};
						};
					};
					_1aabe670b_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_14338_d))._field_Type), &((*((*_142730_m.alloc)._field_Expr))._field_Type), &((*_143215_e.alloc)._field_Token), _1aab0892b_getOwnerRefers(_self_));
					goto _iter_next_1bd573509;
				};
				if ((*(_14338_d))._field_Decl) {
					_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_143215_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1bd573509;
				};
				if ((*_142730_m.alloc)._field_Comptime) {
					if (((!(_1aabb9800_IsConst(_14338_d.ptr()))) && (_1aac04b26_comptimeTypeInfo((*_14338_d.alloc)._field_Type.ptr()) == nullptr))) {
						_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_143215_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1bd573509;
					};
					if ((!(_14307_constMatched))) {
						if (_1aabb9800_IsConst(_14338_d.ptr())) {
							_14307_constMatched=(_1aabb9800_IsConst(_142772_expr.ptr()) && _1aaa2832e_Eq((*_14338_d.alloc)._field_Constant.ptr(), (*(*(_142772_expr))._field_Constant.alloc)));
						} else {
							jule::Ptr<_1aaad1052_comptimeTypeInfo> _14787_exprCti = _1aac04b26_comptimeTypeInfo((*(_142772_expr))._field_Type.ptr());;
							_14307_constMatched=((_14787_exprCti != nullptr) && _1aabed603_Equal((*(_1aac04b26_comptimeTypeInfo((*(_14338_d))._field_Type)))._field_base, (*(_14787_exprCti))._field_base));
						};
					};
				};
				(*_14287_case.alloc)._field_Exprs=jule::append((*_14287_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabb8db5_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _14338_d; __jule_collection; }));
				if ((((!((*_142730_m.alloc)._field_Comptime)) || (_1aac04b26_comptimeTypeInfo((*(_142772_expr))._field_Type.ptr()) == nullptr)) || (_1aac04b26_comptimeTypeInfo((*(_14338_d))._field_Type.ptr()) == nullptr))) {
					_1aaba6c93_assignTypeChecker _14889_checker = _1aaba6c93_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*(_142772_expr))._field_Type, ._field_d=_14338_d, ._field_errorToken=(*_143215_e.alloc)._field_Token, ._field_refers=_1aab0892b_getOwnerRefers(_self_)};;
					_1aaba7c94_check(&_14889_checker);
				};
			}
			_iter_next_1bd573509:;
			++it;
			goto _iter_begin_1bd573509;
		}
		_iter_end_1bd573509:;
	};
	if (((!((*_142730_m.alloc)._field_Comptime)) || _14307_constMatched)) {
		(*_14287_case.alloc)._field_Scope=_1aab128ad_checkCaseScope(_self_, &(_14287_case), &((*_142753_c.alloc)._field_Scope));
	};
	return _14287_case;;
}



inline void _1aab1333c_checkCases(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa960321_MatchCase>* _150432_m, jule::Ptr<_1aab0232b_Match> _150456_rm, jule::Ptr<_1aabb8db5_Data> _150472_expr) {
	(*(_150456_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab02b23_Case>>::alloc(0LL, (*((*(_150432_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aab02b23_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_150432_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd587133:;
		if (it != expr_end) {
			jule::I32 _15067_i = it - expr->begin();
			{
				jule::Ptr<_1aab02b23_Case> _15078_case = jule::new_ptr<_1aab02b23_Case>(_1aab02b23_Case{._field_Owner=_150456_rm, ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1aabb8db5_Data>>(nullptr), ._field_Next=jule::Ptr<_1aab02b23_Case>(nullptr)});;
				if ((_15067_i > 0LL)) {
					(*((*_150456_rm.alloc)._field_Cases[(_15067_i - 1LL)]))._field_Next=_15078_case;
				};
				(*_150456_rm.alloc)._field_Cases=jule::append((*_150456_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab02b23_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15078_case; __jule_collection; }));
			}
			_iter_next_1bd587133:;
			++it;
			_15067_i++;
			goto _iter_begin_1bd587133;
		}
		_iter_end_1bd587133:;
	};
	if ((((*_150456_rm.alloc)._field_Default != nullptr) && ((*((*(_150432_m))))._field_Cases.len() > 0LL))) {
		(*((*_150456_rm.alloc)._field_Cases[((*_150456_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_150456_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_150432_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd58a5ed:;
		if (it != expr_end) {
			jule::I32 _15208_i = it - expr->begin();
			jule::Ptr<_1aa95ea07_Case> _152015_c = *it;
			{
				_1aab12e1e_checkCase(_self_, _150456_rm, _15208_i, _152015_c, _150472_expr);
			}
			_iter_next_1bd58a5ed:;
			++it;
			_15208_i++;
			goto _iter_begin_1bd58a5ed;
		}
		_iter_end_1bd58a5ed:;
	};
}



inline jule::Ptr<_1aab02b23_Case> _1aab13738_checkDefault(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aab0232b_Match> _152533_m, jule::Ptr<_1aa95d781_Else> _152548_d) {
	jule::Ptr<_1aab02b23_Case> _15267_def = jule::new_ptr<_1aab02b23_Case>(_1aab02b23_Case{._field_Owner=_152533_m, ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1aabb8db5_Data>>(nullptr), ._field_Next=jule::Ptr<_1aab02b23_Case>(nullptr)});;
	(*(_15267_def))._field_Scope=_1aab128ad_checkCaseScope(_self_, &(_15267_def), &((*(_152548_d))._field_Scope));
	return _15267_def;;
}



inline void _1aab13a9b_checkComptimePanic(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa0d7ceb_Token> _153339_callToken, jule::Ptr<_1aaaec832_Scope>* _153366_s) {
	if (((*((*(_153366_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _15373_stmt = (*((*(_153366_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _15373_stmt };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bd58dbea:;
			{
				jule::Ptr<_1aabb8db5_Data> _15404_d = _15373_stmt.unsafe_cast_ptr<_1aabb8db5_Data>();;
				{
					auto &_match_expr{ (*(_15404_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type26) {
						_case_begin_1bd58eb41:;
						{
							jule::Ptr<_1aaa35490_BuiltinPanicCallExpr> _15439_m = (*(_15404_d))._field_Model.unsafe_cast_ptr<_1aaa35490_BuiltinPanicCallExpr>();;
							{
								auto &_match_expr{ (*(_15439_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_1bd590c74:;
									{
										jule::Ptr<_1aa9b96cc_Const> _15466_c = (*(_15439_m))._field_Expr.unsafe_cast_ptr<_1aa9b96cc_Const>();;
										if ((!(_1aaa26eed_IsStr(_15466_c.ptr())))) {
											goto _match_end_1bd590bec;
										};
										if ((_153339_callToken == nullptr)) {
											jule::Ptr<_1aab05032_scopeChecker> _155111_root = _1aab08695_getHardRoot(_self_);;
											if (((*(_155111_root))._field_calledFrom == nullptr)) {
												_153339_callToken=(*(_15439_m))._field_Token;
											} else {
												_153339_callToken=(*(_155111_root))._field_calledFrom;
											};
										};
										_1aab50533_pushErr((*(_self_))._field_s.ptr(), _153339_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aaa24902_ReadStr(_15466_c.ptr()), &__jule_any_type5); __jule_collection; }));
										_1aab078a3_stop(_self_);
									}
								}
								_match_end_1bd590bec:;
							};
						}
					}
					_match_end_1bd58eab9:;
				};
			}
		}
		_match_end_1bd58d326:;
	};
}



inline void _1aab13e0e_processConstMatch(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aab0232b_Match>* _156539_tm, jule::Ptr<_1aa960321_MatchCase>* _156556_m) {
	{
		auto expr = &((*((*(_156539_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5911d6:;
		if (it != expr_end) {
			jule::I32 _15668_i = it - expr->begin();
			jule::Ptr<_1aab02b23_Case> _156615_c = *it;
			{
				if (((*(_156615_c))._field_Scope != nullptr)) {
					jule::Ptr<_1aa0d7ceb_Token> _156813_token = nullptr;;
					if (((!((*((*(_156539_tm))))._field_TypeMatch)) && ((*(*(_156615_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_156813_token=(*((*((*((*(_156556_m))))._field_Cases[_15668_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1aab13a9b_checkComptimePanic(_self_, _156813_token, &((*_156615_c.alloc)._field_Scope));
					(*((*(_156539_tm))))._field_Default=_156615_c;
					(*((*(_156539_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1bd5911d6:;
			++it;
			_15668_i++;
			goto _iter_begin_1bd5911d6;
		}
		_iter_end_1bd5911d6:;
	};
	if (((*((*(_156556_m))))._field_Default != nullptr)) {
		(*((*(_156539_tm))))._field_Cases=nullptr;
		(*((*(_156539_tm))))._field_Default=_1aab13738_checkDefault(_self_, (*(_156539_tm)), (*((*(_156556_m))))._field_Default);
		if (((*((*(_156539_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1aa0d7ceb_Token> _158213_token = nullptr;;
			if ((!((*((*(_156539_tm))))._field_TypeMatch))) {
				_158213_token=(*((*(*((*(_156556_m))))._field_Default.alloc)._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1aab13a9b_checkComptimePanic(_self_, _158213_token, &((*(*((*(_156539_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_156539_tm))))._field_Cases=nullptr;
	};
}



inline void _1aab141b7_checkTypeMatch(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa960321_MatchCase>* _159436_m) {
	jule::Ptr<_1aabb8db5_Data> _15957_d = _1aabda36a_eval1(_1aab57408_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)), (*((*(_159436_m))))._field_Expr);;
	if ((_15957_d == nullptr)) {
		return;;
	};
	if ((*((*(_159436_m))))._field_Comptime) {
		jule::Ptr<_1aaad1052_comptimeTypeInfo> _16018_cti = _1aac04b26_comptimeTypeInfo((*(_15957_d))._field_Type.ptr());;
		if ((_16018_cti == nullptr)) {
			if ((!((*_15957_d.alloc)._field_Decl))) {
				_1aab50533_pushErr((*(_self_))._field_s, (*((*((*(_159436_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*_15957_d.alloc)._field_Type=(*(_16018_cti))._field_base;
		};
	} else if (((*(_15957_d))._field_Decl || (!(((((_1aac00ec9_Prim((*(_15957_d))._field_Type.ptr()) != nullptr) && _1aac0a423_IsAny(_1aac00ec9_Prim((*(_15957_d))._field_Type).ptr())) || (_1aac02a69_Trait((*(_15957_d))._field_Type.ptr()) != nullptr)) || (_1aac01a13_TypeEnum((*(_15957_d))._field_Type.ptr()) != nullptr)))))) {
		_1aab50533_pushErr((*(_self_))._field_s, (*((*((*(_159436_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aab0232b_Match> _16157_tm = jule::new_ptr<_1aab0232b_Match>(_1aab0232b_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_15957_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_159436_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1aab02b23_Case>>(nullptr), ._field_Default=jule::Ptr<_1aab02b23_Case>(nullptr)});;
	if (((!((*(_16157_tm))._field_Comptime)) && ((*((*(_159436_m))))._field_Default != nullptr))) {
		(*_16157_tm.alloc)._field_Default=_1aab13738_checkDefault(_self_, _16157_tm, (*((*(_159436_m))))._field_Default);
	};
	_1aab1333c_checkCases(_self_, _159436_m, _16157_tm, _15957_d);
	if ((*(_16157_tm))._field_Comptime) {
		_1aab13e0e_processConstMatch(_self_, &(_16157_tm), _159436_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16157_tm, &__jule_any_type45); __jule_collection; }));
}



inline void _1aab14470_checkCommonMatch(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa960321_MatchCase>* _163738_m) {
	jule::Ptr<_1aabb8db5_Data> _163811_d = nullptr;;
	if (((*((*(_163738_m))))._field_Expr == nullptr)) {
		_163811_d=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aaa2324c_NewBool(true)});
		(*(_163811_d))._field_Model=jule::Any((*_163811_d.alloc)._field_Constant, &__jule_any_type15);
	} else {
		_163811_d=_1aabda9ec_evalExpr1(_1aab57408_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)), (*((*(_163738_m))))._field_Expr);
		if ((_163811_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_163738_m))))._field_Comptime) {
		if ((!(_1aab17c15_canComptimeMatch(&(_163811_d))))) {
			_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_163738_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1aac0331c_comptime((*(_163811_d))._field_Type.ptr())) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_163738_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aab0232b_Match> _16647_mc = jule::new_ptr<_1aab0232b_Match>(_1aab0232b_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_163811_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_163738_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1aab02b23_Case>>(nullptr), ._field_Default=jule::Ptr<_1aab02b23_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16647_mc, &__jule_any_type45); __jule_collection; }));
	if (((!((*(_16647_mc))._field_Comptime)) && ((*((*(_163738_m))))._field_Default != nullptr))) {
		(*_16647_mc.alloc)._field_Default=_1aab13738_checkDefault(_self_, _16647_mc, (*((*(_163738_m))))._field_Default);
	};
	_1aab1333c_checkCases(_self_, _163738_m, _16647_mc, _163811_d);
	if ((*(_16647_mc))._field_Comptime) {
		_1aab13e0e_processConstMatch(_self_, &(_16647_mc), _163738_m);
	};
}



inline void _1aab14728_checkMatch(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa960321_MatchCase> _168831_m) {
	if ((*(_168831_m))._field_TypeMatch) {
		_1aab141b7_checkTypeMatch(_self_, &(_168831_m));
		return;;
	};
	_1aab14470_checkCommonMatch(_self_, &(_168831_m));
}



inline void _1aab149d1_checkFall(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa10b5c2_FallSt> _169626_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*(_self_))._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1aab07dc0_isDeferred(_self_))) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*(_169626_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1aab02b23_Case* _17047_case = ((_1aab02b23_Case*)((*(_self_))._field_cse));;
	if ((*((*(_17047_case))._field_Owner))._field_Comptime) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*(_169626_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17047_case))._field_Next == nullptr)) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*(_169626_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1aab0331b_FallSt>(_1aab0331b_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17047_case))._field_Next)}), &__jule_any_type46); __jule_collection; }));
}



inline jule::Ptr<_1aaaeed84_BreakSt> _1aab14d22_checkBreakWithLabel(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95ca27_BreakSt> _171936_b) {
	jule::Ptr<_1aaaeed84_BreakSt> _17207_brk = _1aab15163_checkPlainBreak(_self_, _171936_b);;
	if ((_17207_brk == nullptr)) {
		return nullptr;;
	};
	(*(_17207_brk))._field_It=0LLU;
	(*_17207_brk.alloc)._field_Mtch=0LLU;
	jule::Ptr<_1aab03b68_scopeLabel> _17307_label = _1aab187d7_findLabelParent(&((*((*(_171936_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_17307_label == nullptr)) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*(_17307_label))._field_used=true;
	if ((((*((*_17307_label.alloc)._field_node))._field_Index + 1LL) >= (*((*(*(_17307_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _17433_i = ((*((*_17307_label.alloc)._field_node))._field_Index + 1LL);;
	if ((_17433_i >= (*((*(*(_17307_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	} else {
		jule::Any _17478_st = (*((*(*(_17307_label))._field_node.alloc)._field_Scope))._field_Stmts[_17433_i];;
		{
			auto &_match_expr{ _17478_st };
			
			if (_match_expr.type == &__jule_any_type32) {
				_case_begin_1bd5c7508:;
				{
					(*_17207_brk.alloc)._field_It=static_cast<jule::Uintptr>(_17478_st.unsafe_cast_ptr<_1aaaed723_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type36) {
				_case_begin_1bd5c61d8:;
				{
					(*_17207_brk.alloc)._field_It=static_cast<jule::Uintptr>(_17478_st.unsafe_cast_ptr<_1aaaee6ad_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type34) {
				_case_begin_1bd5c63c5:;
				{
					(*_17207_brk.alloc)._field_It=static_cast<jule::Uintptr>(_17478_st.unsafe_cast_ptr<_1aaaedbc9_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1bd5c643b:;
				{
					(*_17207_brk.alloc)._field_Mtch=static_cast<jule::Uintptr>(_17478_st.unsafe_cast_ptr<_1aab0232b_Match>());
				}
			}
			else {
				_case_begin_1bd5c635e:;
				{
					_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				}
			}
			_match_end_1bd5c62e8:;
		};
	};
	if (((*_17207_brk.alloc)._field_It != 0LLU)) {
		if ((!(_1aab0eb52_checkValidBreakLabel(_self_, (*_17207_brk.alloc)._field_It)))) {
			_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	if (((*_17207_brk.alloc)._field_Mtch != 0LLU)) {
		if ((!(_1aab0eb52_checkValidBreakLabel(_self_, (*_17207_brk.alloc)._field_Mtch)))) {
			_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_171936_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_171936_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return _17207_brk;;
}



inline jule::Ptr<_1aaaeed84_BreakSt> _1aab15163_checkPlainBreak(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95ca27_BreakSt> _177732_b) {
	if (_1aab07dc0_isDeferred(_self_)) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*(_177732_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aab05032_scopeChecker> _17837_scope = _self_;;
	_julec_label_1bd5d3426:;
	{
		
		if ((((((*(_17837_scope))._field_it == 0LLU) && ((*_17837_scope.alloc)._field_cse == 0LLU)) && ((*_17837_scope.alloc)._field_parent != nullptr)) && ((*_17837_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1bd5d4713:;
			{
				_17837_scope=(*_17837_scope.alloc)._field_parent;
				goto _julec_label_1bd5d3426;
			}
		}
		else if (((*(_17837_scope))._field_it != 0LLU)) {
			_case_begin_1bd5d479b:;
			{
				return jule::new_ptr<_1aaaeed84_BreakSt>(_1aaaeed84_BreakSt{._field_It=(*_17837_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_17837_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1bd5d4812:;
			{
				return jule::new_ptr<_1aaaeed84_BreakSt>(_1aaaeed84_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1aab02b23_Case*)((*_17837_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1bd5d4614:;
	};
	_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*(_177732_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1aab1541b_checkBreak(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95ca27_BreakSt> _179927_b) {
	if (((*(_179927_b))._field_Label != nullptr)) {
		jule::Ptr<_1aaaeed84_BreakSt> _18018_brk = _1aab14d22_checkBreakWithLabel(_self_, _179927_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18018_brk, &__jule_any_type47); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1aaaeed84_BreakSt> _18067_brk = _1aab15163_checkPlainBreak(_self_, _179927_b);;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18067_brk, &__jule_any_type47); __jule_collection; }));
}



inline void _1aab156c4_checkRet(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa95ab9b_RetSt> _181029_r) {
	if (_1aab07dc0_isDeferred(_self_)) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*(_181029_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aab036b2_RetSt> _18157_rt = jule::new_ptr<_1aab036b2_RetSt>(_1aab036b2_RetSt{._field_Func=(*(_1aab0840e_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18157_rt, &__jule_any_type48); __jule_collection; }));
	jule::Ptr<_1aabb5b09_retTypeChecker> _18207_rtc = jule::new_ptr<_1aabb5b09_retTypeChecker>(_1aabb5b09_retTypeChecker{._field_sc=_self_, ._field_f=(*(_18157_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1aabb8db5_Data>>(nullptr), ._field_exprDecls=jule::Slice<jule::Ptr<_1aa102b4b_Expr>>(nullptr), ._field_errorToken=(*(_181029_r))._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=true});;
	jule::Bool _18263_ok = _1aabb6c81_check(_18207_rtc.ptr(), &((*_181029_r.alloc)._field_Expr));;
	if ((!(_18263_ok))) {
		return;;
	};
	if (((*_181029_r.alloc)._field_Expr != nullptr)) {
		(*_18157_rt.alloc)._field_Expr=(*_18207_rtc.alloc)._field_model;
	};
}



inline void _1aab1597c_checkUseExpr(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa103520_UseExpr> _183629_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183629_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1aab07dc0_isDeferred(_self_)) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183629_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*(_183629_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1aab15c35_checkNode(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Any* _185231_node) {
	{
		auto &_match_expr{ (*(_185231_node)) };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1bd5ebdce:;
			{
				_1aab0b5ee_checkAnonScope(_self_, (*(_185231_node)).cast_ptr<_1aa957978_ScopeTree>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bd5ec242:;
			{
				_1aab09de4_checkVarDecl(_self_, (*(_185231_node)).cast_ptr<_1aa95a7c2_VarDecl>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1bd5ec2a8:;
			{
				_1aab0a455_checkTypeAliasDecl(_self_, (*(_185231_node)).cast_ptr<_1aa95e551_TypeAliasDecl>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bd5ec31e:;
			{
				_1aab0bc1a_checkExpr(_self_, (*(_185231_node)).cast_ptr<_1aa102b4b_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1bd5ec63d:;
			{
				_1aab0c655_checkConditional(_self_, (*(_185231_node)).cast_ptr<_1aa95dc37_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1bd5ec6a4:;
			{
				_1aab0e4c0_checkIter(_self_, (*(_185231_node)).cast_ptr<_1aa95b41b_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1bd5ec71a:;
			{
				_1aab1024b_checkCont(_self_, (*(_185231_node)).cast_ptr<_1aa95ce01_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1bd5ec781:;
			{
				_1aab10504_checkLabel(_self_, (*(_185231_node)).cast_ptr<_1aa10adeb_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1bd5ec7e7:;
			{
				_1aab107ac_pushGoto(_self_, (*(_185231_node)).cast_ptr<_1aa10b2c5_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1bd5ec86e:;
			{
				_1aab124b2_checkAssignSt(_self_, (*(_185231_node)).cast_ptr<_1aa10c2b5_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1bd5ec8e6:;
			{
				_1aab14728_checkMatch(_self_, (*(_185231_node)).cast_ptr<_1aa960321_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1bd5ec96d:;
			{
				_1aab149d1_checkFall(_self_, (*(_185231_node)).cast_ptr<_1aa10b5c2_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1bd5ec9e5:;
			{
				_1aab1541b_checkBreak(_self_, (*(_185231_node)).cast_ptr<_1aa95ca27_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1bd5eca6c:;
			{
				_1aab156c4_checkRet(_self_, (*(_185231_node)).cast_ptr<_1aa95ab9b_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1bd5ecae4:;
			{
				_1aab1597c_checkUseExpr(_self_, (*(_185231_node)).cast_ptr<_1aa103520_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1bd5ec0aa:;
			{
				jule::println(_1acbbe47e_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1bd5ec044:;
	};
}



inline void _1aab15e33_checkResult(jule::Ptr<_1aab05032_scopeChecker> _self_) {
	_1aa957318_Stmt _18907_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _18907_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1bd62615b:;
			{
				jule::Ptr<_1aa103520_UseExpr> _18938_ue = _18907_stmt._field_Data.unsafe_cast_ptr<_1aa103520_UseExpr>();;
				jule::Ptr<_1aabb8db5_Data> _18948_d = _1aabdad3d_evalExpr(_1aab57408_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)), (*(_18938_ue))._field_Expr);;
				if ((_18948_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18948_d, &__jule_any_type21); __jule_collection; }));
				jule::Ptr<_1aabb5b09_retTypeChecker> _18998_rtc = jule::new_ptr<_1aabb5b09_retTypeChecker>(_1aabb5b09_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_types=_1aaa40511_Types((*((*_self_.alloc)._field_result))._field_func.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1aabb8db5_Data>>(nullptr), ._field_exprDecls=jule::Slice<jule::Ptr<_1aa102b4b_Expr>>(nullptr), ._field_errorToken=(*((*_18938_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=(*(*(_self_))._field_result.alloc)._field_mutable});;
				_1aabb6c81_check(_18998_rtc.ptr(), &((*_18938_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bd6263d1:;
			{
				jule::Ptr<_1aa102b4b_Expr> _19078_expr = _18907_stmt._field_Data.unsafe_cast_ptr<_1aa102b4b_Expr>();;
				jule::Ptr<_1aabb8db5_Data> _19088_d = _1aabdad3d_evalExpr(_1aab57408_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)), _19078_expr);;
				if ((_19088_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19088_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1bd6307e7:;
						{
							jule::Ptr<_1aaa37096_BuiltinErrorCallExpr> _19149_m = (*(_19088_d))._field_Model.unsafe_cast_ptr<_1aaa37096_BuiltinErrorCallExpr>();;
							_1aab0b962_processErrorCall(_self_, &(_19149_m), (*(_19078_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19088_d, &__jule_any_type21); __jule_collection; }));
						}
					}
					else {
						_case_begin_1bd6309a1:;
						{
							return;;
						}
					}
					_match_end_1bd63093a:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1bd626447:;
			{
				_1aab15c35_checkNode(_self_, &(_18907_stmt._field_Data));
			}
		}
		else {
			_case_begin_1bd62636a:;
			{
				_1aab15c35_checkNode(_self_, &(_18907_stmt._field_Data));
				return;;
			}
		}
		_match_end_1bd626304:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1aab16131_checkTree(jule::Ptr<_1aab05032_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I32 _19367_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_19367_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _19367_n); ((*_self_.alloc)._field_i)++) {
		{
			_1aa957318_Stmt _19448_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1aab15c35_checkNode(_self_, &(_19448_stmt._field_Data));
			if (_1aab07b39_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1bd634411:;
	}
	_iter_end_1bd634411:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1aab15e33_checkResult(_self_);
	};
}



inline void _1aab16494_checkGoto(_1aab05032_scopeChecker* _self_, jule::Ptr<_1aab0099a_GotoSt>* _195530_gt, jule::Ptr<_1aab03b68_scopeLabel>* _195548_label) {
	jule::I32 _19567_n = 0LL;;
	if (((*((*(_195530_gt))))._field_Scope == (*((*((*(_195548_label))))._field_node))._field_Scope)) {
		if (((*((*(_195530_gt))))._field_Index > (*(*((*(_195548_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_19567_n=(*((*(_195530_gt))))._field_Index;
	} else if (((*((*((*(_195530_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_195548_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1aaaec832_Scope> _19698_gtsc = (*((*(_195530_gt))))._field_Scope;;
		while ((((*_19698_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_195548_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_19698_gtsc=(*(_19698_gtsc))._field_Parent;
			}
		_iter_next_1bd639834:;
		}
		_iter_end_1bd639834:;;
		if (((*_19698_gtsc.alloc)._field_StmtIndex > (*(*((*(_195548_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_19567_n=(*_19698_gtsc.alloc)._field_StmtIndex;
	} else {
		_19567_n=0LL;
	};
	jule::Ptr<_1aaaec832_Scope> _19917_s = (*((*((*(_195548_label))))._field_node))._field_Scope;;
	jule::I32 _19927_i = ((*(*((*(_195548_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_19927_i >= _19567_n); (_19927_i)--) {
				{
					jule::Any _19959_stmt = (*(_19917_s))._field_Stmts[_19927_i];;
					if (_1aab17ece_stmtIsDef(&(_19959_stmt))) {
						_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_195530_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_195530_gt))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1bd63d31b:;
			}
			_iter_end_1bd63d31b:;;
			if (((*(_19917_s))._field_ChildIndex > (*((*((*(_195530_gt))))._field_Scope))._field_ChildIndex)) {
				_19917_s=(*(_19917_s))._field_Parent;
				_19927_i=((*_19917_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1bd63d041;
			};
			goto _iter_end_1bd63d041;
		}
	_iter_next_1bd63d041:;
	}
	_iter_end_1bd63d041:;;
}



inline void _1aab16692_checkGotos(_1aab05032_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd640e89:;
		if (it != expr_end) {
			jule::Ptr<_1aab0099a_GotoSt> _201315_gt = *it;
			{
				jule::Ptr<_1aab03b68_scopeLabel> _20148_label = _1aab09740_findLabelAll(_self_, &((*(_201315_gt))._field_Ident));;
				if ((_20148_label == nullptr)) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*_201315_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_201315_gt.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					goto _iter_next_1bd640e89;
				};
				(*_201315_gt.alloc)._field_Label=(*(_20148_label))._field_node;
				(*_20148_label.alloc)._field_used=true;
				_1aab16494_checkGoto(_self_, &(_201315_gt), &(_20148_label));
			}
			_iter_next_1bd640e89:;
			++it;
			goto _iter_begin_1bd640e89;
		}
		_iter_end_1bd640e89:;
	};
}



inline void _1aab16890_checkLabels(_1aab05032_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd641583:;
		if (it != expr_end) {
			jule::Ptr<_1aab03b68_scopeLabel> _202610_l = *it;
			{
				if ((!((*(_202610_l))._field_used))) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*_202610_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_202610_l.alloc)._field_node))._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1bd641583:;
			++it;
			goto _iter_begin_1bd641583;
		}
		_iter_end_1bd641583:;
	};
}



inline void _1aab16a8d_checkVars(_1aab05032_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd645730:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _203410_v = *it;
			{
				if (((((!((*(_203410_v))._field_Used)) && (!((*_203410_v.alloc)._field_Constant))) && (!(_1aa0da6d3_IsIgnoreIdent((*_203410_v.alloc)._field_Ident)))) && (!(_1aa0da99c_IsAnonIdent((*_203410_v.alloc)._field_Ident))))) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*_203410_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_203410_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1bd645730:;
			++it;
			goto _iter_begin_1bd645730;
		}
		_iter_end_1bd645730:;
	};
}



inline void _1aab16c8b_checkAliases(_1aab05032_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd647ee6:;
		if (it != expr_end) {
			jule::Ptr<_1aabec1a1_TypeAlias> _204210_a = *it;
			{
				if ((((!((*(_204210_a))._field_Used)) && (!(_1aa0da6d3_IsIgnoreIdent((*_204210_a.alloc)._field_Ident)))) && (!(_1aa0da99c_IsAnonIdent((*_204210_a.alloc)._field_Ident))))) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*_204210_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_204210_a.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1bd647ee6:;
			++it;
			goto _iter_begin_1bd647ee6;
		}
		_iter_end_1bd647ee6:;
	};
}



inline void _1aab170ee_check(jule::Ptr<_1aab05032_scopeChecker> _self_, jule::Ptr<_1aa957978_ScopeTree>* _205027_tree, jule::Ptr<_1aaaec832_Scope>* _205055_s) {
	(*((*(_205055_s))))._field_Deferred=(*((*(_205027_tree))))._field_Deferred;
	(*((*(_205055_s))))._field_Unsafety=(*((*(_205027_tree))))._field_Unsafety;
	jule::I32 _20543_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_205027_tree));
	(*_self_.alloc)._field_scope=(*(_205055_s));
	_1aab16131_checkTree(_self_);
	if ((_20543_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1aab16a8d_checkVars(_self_);
		_1aab16c8b_checkAliases(_self_);
		if (_1aab076a5_isRoot(_self_)) {
			_1aab16692_checkGotos(_self_);
			_1aab16890_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1aab05032_scopeChecker> _1aab17385_newChildChecker(jule::Ptr<_1aab05032_scopeChecker> _self_) {
	jule::Ptr<_1aab05032_scopeChecker> _20747_base = _1aaaeb8a8_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_20747_base))._field_parent=_self_;
	(*_20747_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_20747_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_20747_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _20747_base;;
}








inline jule::Bool _1aab1a575_directiveChecker_eq(_1aab1a575_directiveChecker *_self_, _1aab1a575_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1aab1a9c6_checkCdef(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd655146:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1aaa3b221_Fn>()))._field_Binded) {
					goto _match_end_1bd654013;
				};
				goto _case_begin_1bd654079;
			}
		}
		else {
			_case_begin_1bd654079:;
			{
				_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1bd654013:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1aab1ac7e_checkTypedef(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd658204:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1aa966767_Struct>()))._field_Binded) {
					goto _match_end_1bd6570c1;
				};
				goto _case_begin_1bd657137;
			}
		}
		else {
			_case_begin_1bd657137:;
			{
				_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1bd6570c1:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1aab1b037_checkNamespace(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd65b2b2:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1aa966767_Struct>()))._field_Binded))) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd659e4d:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1aaa3b221_Fn>()))._field_Binded))) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd65a25b:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1aab70795_Var>()))._field_Binded))) {
					_1aab50533_pushErr((*(_self_))._field_s, (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_4835_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1bd65a1e5:;
			{
				_1aab50533_pushErr((*(_self_))._field_s, (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_4835_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1bd65a17e:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aa0d7ceb_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_733_arg))._field_Kind[0LL] != '\"')) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*(_733_arg))._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd666498:;
			{
				if ((_1aabe463d_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1aa0ecc34_Directive> _919_typedef = jule::new_ptr<_1aa0ecc34_Directive>(_1aa0ecc34_Directive{._field_Tag=jule::new_ptr<_1aa0d7ceb_Token>((*((*((*(_4835_d))))._field_Tag))), ._field_Args=jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>(nullptr)});;
					(*(*(_919_typedef))._field_Tag.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1bd666421:;
	};
}



inline void _1aab1b2e0_checkDeprecated(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bd669bd8:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1aa966767_Struct>()))._field_Binded) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd66792d:;
			{
				jule::Ptr<_1aaa3b221_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1aaa3b221_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1aaa3bbe4_IsEntryPoint(_1078_f.ptr())) || _1aaa3be7a_IsInit(_1078_f.ptr()))) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd668b82:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1aab70795_Var>()))._field_Binded) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1bd668b1b:;
			{
				_1aab50533_pushErr((*(_self_))._field_s, (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_10036_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1bd668aa5:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aa0d7ceb_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1263_arg))._field_Kind[0LL] != '\"')) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*(_1263_arg))._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1aab1b598_checkTest(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd6764a8:;
			{
				jule::Ptr<_1aaa3b221_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1aaa3b221_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1aaa3be7a_IsInit(_1444_f)))) && (!(_1aaa3bbe4_IsEntryPoint(_1444_f))))) {
					goto _match_end_1bd675375;
				};
				if (_1aaa3b95d_IsMethod(_1444_f.ptr())) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1bd675375;
				};
				goto _case_begin_1bd6753db;
			}
		}
		else {
			_case_begin_1bd6753db:;
			{
				_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1bd675375:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1aab1b851_checkExport(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bd67b090:;
			{
				jule::Ptr<_1aaa3b221_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1aaa3b221_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1aaa3be7a_IsInit(_1654_f.ptr())) || _1aaa3bbe4_IsEntryPoint(_1654_f.ptr())) || _1aaa3b95d_IsMethod(_1654_f.ptr())) || ((*(_1654_f))._field_Generics.len() > 0LL))) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd679c2b:;
			{
				jule::Ptr<_1aab70795_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1aab70795_Var>();;
				if (((*(_1714_v))._field_Binded || (*(_1714_v))._field_Constant)) {
					_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1bd679ec3:;
			{
				_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return;;
			}
		}
		_match_end_1bd679e5c:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa0d7ceb_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1873_arg))._field_Kind[0LL] != '\"')) {
		_1aab50533_pushErr((*(_self_))._field_s.ptr(), _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*(_1873_arg))._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1aab1bb09_checkDirective(_1aab1a575_directiveChecker* _self_, jule::Ptr<_1aa0ecc34_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1bd687d38:;
			{
				_1aab1a9c6_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1bd686c49:;
			{
				_1aab1ac7e_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1bd686cb0:;
			{
				_1aab1b037_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1bd686d26:;
			{
				_1aab1b2e0_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1bd686d8c:;
			{
				_1aab1b598_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1bd686e03:;
			{
				_1aab1b851_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1bd686e69:;
			{
				_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1bd68232c:;
			{
				_1aab50533_pushErr((*(_self_))._field_s, (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_20035_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1bd686b6c:;
	};
}



inline void _1aab1bd07_check(_1aab1a575_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd68a9c8:;
		if (it != expr_end) {
			jule::Ptr<_1aa0ecc34_Directive> _22315_d = *it;
			{
				_1aab1bb09_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1bd68a9c8:;
			++it;
			goto _iter_begin_1bd68a9c8;
		}
		_iter_end_1bd68a9c8:;
	};
}







inline jule::Ptr<_1aab1cd80_ReferenceStack> static__1aab1d1e3_new(void) {
	return jule::new_ptr<_1aab1cd80_ReferenceStack>(_1aab1cd80_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I32 _1aab1d5de_Len(_1aab1cd80_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1aab1d930_At(_1aab1cd80_ReferenceStack* _self_, jule::I32 _4318_i) {
	return (*(_self_))._field_buffer[_4318_i];;
}



inline void _1aab1dbd8_Push(_1aab1cd80_ReferenceStack* _self_, jule::Any _4824_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_4824_ref); };
}



inline jule::Bool _1bdbc8dc3_Exist(_1aab1cd80_ReferenceStack* _self_, jule::Ptr<_1aa969605_StructIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdbca16b:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type64) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1bdbca16b:;
			++it;
			goto _iter_begin_1bdbca16b;
		}
		_iter_end_1bdbca16b:;
	};
	return false;;
}

inline jule::Bool _1bdbd4b15_Exist(_1aab1cd80_ReferenceStack* _self_, jule::Ptr<_1aaa3e2ce_FnIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdbd5d69:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type65) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1bdbd5d69:;
			++it;
			goto _iter_begin_1bdbd5d69;
		}
		_iter_end_1bdbd5d69:;
	};
	return false;;
}

inline jule::Bool _1bdbead07_Exist(_1aab1cd80_ReferenceStack* _self_, jule::Ptr<_1aab70795_Var> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdbec0a0:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type7) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1bdbec0a0:;
			++it;
			goto _iter_begin_1bdbec0a0;
		}
		_iter_end_1bdbec0a0:;
	};
	return false;;
}

inline jule::Bool _1be0aaa35_Exist(_1aab1cd80_ReferenceStack* _self_, jule::Ptr<_1aaa46935_Trait> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be0abc34:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type11) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1be0abc34:;
			++it;
			goto _iter_begin_1be0abc34;
		}
		_iter_end_1be0abc34:;
	};
	return false;;
}








inline jule::Bool _1aab1e3d1_Pass_eq(_1aab1e3d1_Pass *_self_, _1aab1e3d1_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1aab2488c_pushErr(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aa0d7ceb_Token>* _30824_token, jule::Str _30846_fmt, jule::Slice<jule::Any> _30866_args) {
	{ jule::Slice<_1ace263b7_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1aab4a0aa_compilerErr(_30824_token, true, _30846_fmt, _30866_args)); };
}



inline void _1aab2511d_pushSuggestion(_1aab23d86_symBuilder* _self_, jule::Str _31730_fmt, jule::Slice<jule::Any> _31750_args) {
	{
		_1aab4b1cc_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _31730_fmt, _31750_args);
	};
}



inline jule::Bool _1aab25519_checkCppUseDeclPath(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aa9608a4_UseDecl>* _32136_decl, jule::Str* _32158_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3223_ext = _1bb091975_Ext((*(_32158_path)));;
	if (((!(_1c6e367dc_IsValidHeaderExt(_3223_ext))) && (!(_1c6e36aa6_IsValidCppExt(_3223_ext))))) {
		_1aab2488c_pushErr(_self_, &((*((*(_32136_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3223_ext, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1ad133ecb_Stat _3293_info = ({
		auto except = static__1ad0a5a41_Of((*(_32158_path)));
		(except.ok()) ? (except.result) : ({{
			_1aab2488c_pushErr(_self_, &((*((*(_32136_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_32136_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} _1ad133ecb_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if (_1ad1343d8_IsDir(&_3293_info)) {
		_1aab2488c_pushErr(_self_, &((*((*(_32136_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_32136_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab25827_buildCppHeaderImport(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aa9608a4_UseDecl>* _34141_decl) {
	jule::Str _3427_path = (*((*((*(_34141_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_34141_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if ((!(_1c6e36512_IsStdHeaderPath(_3427_path)))) {
		_3427_path=_1bb0916de_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1aa0de52d_Dir((*((*((*(_34141_decl))))._field_Token))._field_File.ptr()); (*it++) = _3427_path; __jule_collection; }));
		jule::Bool _3468_ok = _1aab25519_checkCppUseDeclPath(_self_, _34141_decl, &(_3427_path));;
		if ((!(_3468_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bb091c3e_Abs(_3427_path);
			_3427_path = __jule_assign_result.__jule_result_arg0;
			_3468_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3468_ok))) {
			_1aab2488c_pushErr(_self_, &((*((*(_34141_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_34141_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1aab2ee08_ImportInfo>(_1aab2ee08_ImportInfo{._field_Decl=(*(_34141_decl)), ._field_Path=_3427_path, ._field_LinkPath=(*(*((*(_34141_decl))))._field_Path.alloc)._field_Kind, ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Str _1aab25c23_checkAbsPath(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Str _37133_filepath, jule::Ptr<_1aa9608a4_UseDecl>* _37153_decl) {
	jule::Str _3723_modPath = ((_1aab2be05_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1aab2ae6a_GetModPath((*(_self_))._field_importer.data);;
	if ((_3723_modPath.len() == 0LL)) {
		_1aab2488c_pushErr(_self_, &((*((*(_37153_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1aab2511d_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	_37133_filepath=_1bb0916de_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _3723_modPath; (*it++) = _37133_filepath; __jule_collection; }));
	jule::Bool _38013_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bb091c3e_Abs(_37133_filepath);
		_37133_filepath = __jule_assign_result.__jule_result_arg0;
		_38013_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_38013_ok))) {
		_1aab2488c_pushErr(_self_, &((*((*(_37153_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37153_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1ad133ecb_Stat _3873_info = ({
		auto except = static__1ad0a5a41_Of(_37133_filepath);
		(except.ok()) ? (except.result) : ({{
			_1aab2488c_pushErr(_self_, &((*((*(_37153_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37153_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1ad133ecb_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1ad1343d8_IsDir(&_3873_info)))) {
		_1aab2488c_pushErr(_self_, &((*((*(_37153_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37153_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _37133_filepath;;
}



inline jule::Str _1aab2611e_checkStdAbsPath(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Str _40036_filepath, jule::Ptr<_1aa9608a4_UseDecl>* _40056_decl) {
	(_40036_filepath).mut_slice(4LL);;
	_40036_filepath=_1bb0916de_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1bb095209_PathStdlib; (*it++) = _40036_filepath; __jule_collection; }));
	jule::Bool _40313_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bb091c3e_Abs(_40036_filepath);
		_40036_filepath = __jule_assign_result.__jule_result_arg0;
		_40313_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_40313_ok))) {
		_1aab2488c_pushErr(_self_.ptr(), &((*((*(_40056_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_40056_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1ad133ecb_Stat _4103_info = ({
		auto except = static__1ad0a5a41_Of(_40036_filepath);
		(except.ok()) ? (except.result) : ({{
			_1aab2488c_pushErr(_self_.ptr(), &((*((*(_40056_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_40056_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1ad133ecb_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1ad1343d8_IsDir(&_4103_info)))) {
		_1aab2488c_pushErr(_self_.ptr(), &((*((*(_40056_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_40056_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _40036_filepath;;
}



inline __jule_tuple_bool__jule_tuple_str _1aab26460_checkImpPath(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aa9608a4_UseDecl>* _42334_decl) {
	__jule_tuple_bool__jule_tuple_str __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	jule::Str _4243_path = (*((*((*(_42334_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_42334_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if (_1bb0858e2_HasSuffix(_4243_path, jule::Str::lit("/", 1))) {
		_1aab2488c_pushErr(_self_.ptr(), &((*((*(_42334_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42334_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	jule::Slice<jule::Str> _4293_parts = _1bb089a39_SplitAll(_4243_path, jule::Str::lit("/", 1));;
	if ((_4293_parts.len() == 0LL)) {
		_1aab2488c_pushErr(_self_.ptr(), &((*((*(_42334_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42334_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=_4293_parts[0LL].equal("std", 3);
	{
		auto expr = &(_4293_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6c72d9:;
		if (it != expr_end) {
			jule::Str *_43510_part = it;
			{
				if ((((*(_43510_part))).empty() || _1aa0da6d3_IsIgnoreIdent((*(_43510_part))))) {
					_1aab2488c_pushErr(_self_.ptr(), &((*((*(_42334_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42334_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg1=_1bb0916de_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = __jule_func_result.__jule_result_arg1; (*it++) = (*(_43510_part)); __jule_collection; }));
			}
			_iter_next_1bd6c72d9:;
			++it;
			goto _iter_begin_1bd6c72d9;
		}
		_iter_end_1bd6c72d9:;
	};
	if (__jule_func_result.__jule_result_arg0) {
		__jule_func_result.__jule_result_arg1=_1aab2611e_checkStdAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42334_decl);
	} else {
		__jule_func_result.__jule_result_arg1=_1aab25c23_checkAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42334_decl);
	};
	return __jule_func_result;;
}



inline void _1aab26718_assignAlias(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _45333_imp) {
	jule::I32 _4547_i = _1bb08698c_FindLast((*((*(_45333_imp))))._field_LinkPath, jule::Str::lit("/", 1));;
	(_4547_i)++;
	jule::Str _4563_path = (*((*(_45333_imp))))._field_LinkPath.slice(_4547_i);;
	(*((*(_45333_imp))))._field_Alias=_4563_path;
}



inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab26a59_buildImport(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aa9608a4_UseDecl>* _46033_decl) {
	if ((*((*(_46033_decl))))._field_Binded) {
		return _1aab25827_buildCppHeaderImport(_self_.ptr(), _46033_decl);;
	};
	jule::Bool _4643_std;
	jule::Str _4648_filepath;
	({
		__jule_tuple_bool__jule_tuple_str __jule_assign_result = _1aab26460_checkImpPath(_self_, _46033_decl);
		_4643_std = __jule_assign_result.__jule_result_arg0;
		_4648_filepath = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4648_filepath).empty()) {
		return nullptr;;
	};
	jule::Ptr<_1aab2ee08_ImportInfo> _4697_imp = jule::new_ptr<_1aab2ee08_ImportInfo>(_1aab2ee08_ImportInfo{._field_Decl=(*(_46033_decl)), ._field_Path=_4648_filepath, ._field_LinkPath=(*((*((*(_46033_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_46033_decl))))._field_Path.alloc)._field_Kind.len() - 1LL)), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=false, ._field_Std=_4643_std, ._field_Package=jule::new_ptr<_1aab3267a_Package>(_1aab3267a_Package{._field_Files=nullptr}), ._field_ModId=0});;
	if (((*((*(_46033_decl))))._field_Alias != nullptr)) {
		(*(_4697_imp))._field_Alias=(*(*((*(_46033_decl))))._field_Alias.alloc)._field_Kind;
	} else if ((!(_1aab2a0e0_isImplicitImport(_4697_imp)))) {
		_1aab26718_assignAlias(_self_, &(_4697_imp));
	};
	return _4697_imp;;
}



inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab26d9a_findUseDecl(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _48728_pkg) {
	return _1aaa42a41_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>>((void*)__jule_anon_1bd6d2921, jule::Ptr<__jule_anon_1bd6d2921_ctx>::make(__jule_anon_1bd6d2921_ctx{._48728_pkg=_48728_pkg}).as<jule::Uintptr>(), __jule_anon_1bd6d2921_ctx_handler));;
}



inline jule::Bool _1aab271db_checkDuplicateUseDecl(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _49542_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aab2ee08_ImportInfo> _4967_lpkg = _1aab26d9a_findUseDecl(_self_, _49542_pkg);;
	if ((_4967_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1aab2488c_pushErr(_self_, &((*((*((*(_49542_pkg))))._field_Decl))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49542_pkg))))._field_LinkPath, &__jule_any_type5); __jule_collection; }));
	_1aab2511d_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Str _1aab2752c_getAsLinkPath(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Str _50534_path) {
	_1ace17078_Builder _5067_sb = static__1ace178c5_New(_50534_path.len());;
	if (_1bb08556d_HasPrefix(_50534_path, _1bb095209_PathStdlib)) {
		(_50534_path).mut_slice(_1bb095209_PathStdlib.len());;
		({
			auto except = _1ace18057_WriteStr(&_5067_sb, jule::Str::lit("\"std", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:509:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&_5067_sb, _1bb08b6b7_ReplaceAll(_50534_path, jule::Str::lit("/", 1), jule::Str::lit("/", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:510:4"));
			(except.result);
		});
		({
			auto except = _1ace18310_WriteByte(&_5067_sb, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:511:4"));
		});
		return _1ace188d7_Str(&_5067_sb);;
	};
	jule::Str _5153_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bb091c3e_Abs(((_1aab2be05_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1aab2ae6a_GetModPath((*(_self_))._field_importer.data));
		_5153_root = __jule_assign_result.__jule_result_arg0;
	});
	(_50534_path).mut_slice(_5153_root.len());;
	if ((_50534_path[0LL] == 47LLU)) {
		(_50534_path).mut_slice(1LL);;
	};
	({
		auto except = _1ace18310_WriteByte(&_5067_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:520:3"));
	});
	({
		auto except = _1ace18057_WriteStr(&_5067_sb, _1bb08b6b7_ReplaceAll(_50534_path, jule::Str::lit("/", 1), jule::Str::lit("/", 1)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:521:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(&_5067_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:522:3"));
	});
	return _1ace188d7_Str(&_5067_sb);;
}



inline void _1aab2794a_pushCycleError(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aab23d86_symBuilder>* _52632_sb, jule::Str _52649_path, _1ace17078_Builder* _52665_message) {
	;
	jule::Str _5283_refersTo = _1ace26829_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aab2752c_getAsLinkPath(_self_, _1aa0de52d_Dir((*((*((*(_52632_sb))))._field_table))._field_File.ptr())), &__jule_any_type5); (*it++) = jule::Any(_1aab2752c_getAsLinkPath(_self_, _52649_path), &__jule_any_type5); __jule_collection; }));;
	jule::Str _5323_m = _1ace188d7_Str(_52665_message);;
	({
		auto except = _1ace18057_WriteStr(_52665_message, _1bb0851a5_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:533:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_52665_message, _5283_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:534:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(_52665_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:535:3"));
	});
	({
		auto except = _1ace18057_WriteStr(_52665_message, _5323_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:536:3"));
		(except.result);
	});
}



inline void _1aab27d68_pushCrossCycleError(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aab23d86_symBuilder>* _53937_target, jule::Ptr<_1aab2ee08_ImportInfo>* _53959_imp, jule::Ptr<_1aa0d7ceb_Token>* _53978_errorToken) {
	_1ace17078_Builder _5407_message = static__1ace178c5_New(32LL);;
	_1aab2794a_pushCycleError(_self_, &(_self_), (*((*(_53959_imp))))._field_Path, &(_5407_message));
	jule::Ptr<_1aab23d86_symBuilder> _5447_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1aab23d86_symBuilder> _5457_old = _self_;;
	while (((*(_5447_owner))._field_owner != nullptr)) {
		{
			_1aab2794a_pushCycleError(_self_, &((*_5457_old.alloc)._field_owner), _1aa0de52d_Dir((*((*_5457_old.alloc)._field_table))._field_File.ptr()), &(_5407_message));
			if (((*_5447_owner.alloc)._field_owner == (*(_53937_target)))) {
				_1aab2794a_pushCycleError(_self_, _53937_target, _1aa0de52d_Dir((*((*(_5447_owner))._field_table))._field_File), &(_5407_message));
				goto _iter_end_1bd6dd421;
			};
			_5457_old=_5447_owner;
			_5447_owner=(*(_5447_owner))._field_owner;
		}
	_iter_next_1bd6dd421:;
	}
	_iter_end_1bd6dd421:;;
	_1aab2488c_pushErr(_self_, _53978_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ace188d7_Str(&_5407_message), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1aab28264_checkImportCycles(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aab2ee08_ImportInfo> _56234_imp, jule::Ptr<_1aa9608a4_UseDecl>* _56253_decl) {
	if (((*(_56234_imp))._field_Path == _1aa0de52d_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1aab2488c_pushErr(_self_, &((*((*(_56253_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aab2752c_getAsLinkPath(_self_, (*_56234_imp.alloc)._field_Path), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1aab23d86_symBuilder> _5727_owner = (*(_self_))._field_owner;;
	_julec_label_1bd6e2b2e:;
	if ((_1aa0de52d_Dir((*((*(_5727_owner))._field_table))._field_File.ptr()) == (*(_56234_imp))._field_Path)) {
		_1aab27d68_pushCrossCycleError(_self_, &(_5727_owner), &(_56234_imp), &((*((*(_56253_decl))))._field_Token));
		return false;;
	};
	if (((*(_5727_owner))._field_owner != nullptr)) {
		_5727_owner=(*_5727_owner.alloc)._field_owner;
		goto _julec_label_1bd6e2b2e;
	};
	return true;;
}



inline void _1aab28682_checkPackageAccessibility(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aa9608a4_UseDecl>* _59342_decl, jule::Str* _59364_mod, jule::Str* _59375_path) {
	if ((((_1aab2be05_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1aab2ae6a_GetModPath((*(_self_))._field_importer.data) == (*(_59364_mod)))) {
		return;;
	};
	;
	jule::I32 _5983_i = _1bb0861d9_Find((*(_59375_path)), jule::Str::lit("internal", 8));;
	if ((_5983_i == -1LL)) {
		return;;
	};
	if ((_5983_i == 0LL)) {
		if (((((*(_59375_path)).len() - 8LL) == 0LL) || _1bb08556d_HasPrefix((*(_59375_path)), jule::Str::lit("internal/", 9)))) {
			_1aab2488c_pushErr(_self_, &((*((*(_59342_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((*(_59375_path)).slice((_5983_i - 1LL)).equal("/internal", 9)) {
		_1aab2488c_pushErr(_self_, &((*((*(_59342_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I32 _6163_n = ((_5983_i + 8LL) + 1LL);;
	if (((_6163_n < (*(_59375_path)).len()) && (*(_59375_path)).slice((_5983_i - 1LL), _6163_n).equal("/internal/", 10))) {
		_1aab2488c_pushErr(_self_, &((*((*(_59342_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Bool _1aab28a7d_importPackage(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _62335_imp, jule::Ptr<_1aa9608a4_UseDecl>* _62358_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62335_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aab2ee08_ImportInfo> _6287_port = ((_1aab2be05_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1aab2b5ec_GetImport((*(_self_))._field_importer.data, (*((*(_62335_imp))))._field_Path);;
	if ((_6287_port != nullptr)) {
		(*((*(_62335_imp))))._field_Package=(*_6287_port.alloc)._field_Package;
		(*((*(_62335_imp))))._field_Duplicate=true;
		jule::Str _6334_oldMod = ((_1aab2be05_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aab2ae6a_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1aab2be05_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aab2ac7d_SetModPath((*_self_.alloc)._field_importer.data, ((_1aab2be05_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aab2b2ab_ModById((*_self_.alloc)._field_importer.data, (*((*(_62335_imp))))._field_ModId));
		_1aab28682_checkPackageAccessibility(_self_, _62358_decl, &(_6334_oldMod), &((*_6287_port.alloc)._field_Path));
		((_1aab2be05_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aab2ac7d_SetModPath((*_self_.alloc)._field_importer.data, _6334_oldMod);
	} else {
		if ((!(_1aab28264_checkImportCycles(_self_, (*(_62335_imp)), _62358_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6424_oldMod = ((_1aab2be05_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aab2ae6a_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1aab2be05_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aab2ac7d_SetModPath((*_self_.alloc)._field_importer.data, _6424_oldMod);
		});;
		if ((*((*(_62335_imp))))._field_Std) {
			((_1aab2be05_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aab2ac7d_SetModPath((*_self_.alloc)._field_importer.data, _1bb095209_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1aa0eb8ae_AST>> _6478_asts;
		jule::Slice<_1ace263b7_Log> _64718_errors;
		({
			__jule_tuple_sx_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log __jule_assign_result = ((_1aab2be05_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aab2b9e8_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62335_imp))))._field_Path, (!((*((*(_62335_imp))))._field_Std)));
			_6478_asts = __jule_assign_result.__jule_result_arg0;
			_64718_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64718_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64718_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1aab28682_checkPackageAccessibility(_self_, _62358_decl, &(_6424_oldMod), &((*((*(_62335_imp))))._field_Path));
		{
			auto expr = &(_6478_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd7047ab:;
			if (it != expr_end) {
				jule::Ptr<_1aa0eb8ae_AST> _65516_ast = *it;
				{
					jule::Ptr<_1aaa42524_SymTab> _6569_table = static_cast<jule::Ptr<_1aaa42524_SymTab>>(nullptr);;
					({
						__jule_tuple_x_1aaa42524_SymTab__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1aac247c2_buildSymbols(&(_65516_ast), &((*_self_.alloc)._field_importer), _self_);
						_6569_table = __jule_assign_result.__jule_result_arg0;
						_64718_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64718_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64718_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62335_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62335_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa42524_SymTab>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6569_table; __jule_collection; }));
				}
				_iter_next_1bd7047ab:;
				++it;
				goto _iter_begin_1bd7047ab;
			}
			_iter_end_1bd7047ab:;
		};
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab28dbe_importUseDecl(jule::Ptr<_1aab23d86_symBuilder> _self_, jule::Ptr<_1aa9608a4_UseDecl>* _66935_decl) {
	jule::Ptr<_1aab2ee08_ImportInfo> _6707_imp = _1aab26a59_buildImport(_self_, _66935_decl);;
	if ((_6707_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6757_ok = _1aab271db_checkDuplicateUseDecl(_self_, &(_6707_imp));;
	if ((!(_6757_ok))) {
		return nullptr;;
	};
	_6757_ok=_1aab28a7d_importPackage(_self_, &(_6707_imp), _66935_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6707_imp; __jule_collection; }));
	if (_6757_ok) {
		((_1aab2be05_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1aab2bca1_Imported((*_self_.alloc)._field_importer.data, _6707_imp);
		return _6707_imp;;
	};
	return nullptr;;
}



inline void _1aab290bc_importUseDecls(jule::Ptr<_1aab23d86_symBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd70a20c:;
		if (it != expr_end) {
			jule::Ptr<_1aa9608a4_UseDecl> _68915_decl = *it;
			{
				_1aab28dbe_importUseDecl(_self_, &(_68915_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1bd70a20c;
				};
			}
			_iter_next_1bd70a20c:;
			++it;
			goto _iter_begin_1bd70a20c;
		}
		_iter_end_1bd70a20c:;
	};
}



inline void _1aab29375_appendNode(_1aab23d86_symBuilder* _self_, _1aa0ec816_Node* _69831_node) {
	{
		auto &_match_expr{ (*(_69831_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1bd70a718:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaae9840_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aab237c0_buildImpl((*(_69831_node))._field_Data.unsafe_cast_ptr<_1aa964413_Impl>()); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1bd70b75d:;
			{
				jule::Ptr<_1aabec1a1_TypeAlias> _7038_ta = _1aab1ed1b_buildTypeAlias((*(_69831_node))._field_Data.unsafe_cast_ptr<_1aa95e551_TypeAliasDecl>());;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7038_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1bd70b7c4:;
			{
				jule::Ptr<_1aa966767_Struct> _7068_srct = _1aab206ac_buildStruct((*(_69831_node))._field_Data.unsafe_cast_ptr<_1aa963566_StructDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa966767_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7068_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bd70b83a:;
			{
				jule::Ptr<_1aaa3b221_Fn> _7098_f = _1aab2135b_buildFunc((*(_69831_node))._field_Data.unsafe_cast_ptr<_1aa959617_FnDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa3b221_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7098_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1bd70b8a1:;
			{
				jule::Ptr<_1aaa46935_Trait> _7128_t = _1aab21ba8_buildTrait((*(_69831_node))._field_Data.unsafe_cast_ptr<_1aa963ca3_TraitDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa46935_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7128_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1bd70b917:;
			{
				jule::Ptr<_1aab70795_Var> _7158_v = _1aab2323c_buildVar((*(_69831_node))._field_Data.unsafe_cast_ptr<_1aa95a7c2_VarDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7158_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1bd70c187:;
			{
				jule::Ptr<_1aaa490db_Enum> _7188_e = _1aab22736_buildEnum((*(_69831_node))._field_Data.unsafe_cast_ptr<_1aa96191b_EnumDecl>());;
				(*(*(_self_))._field_table.alloc)._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa490db_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7188_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1bd70c1ed:;
			{
				jule::Ptr<_1aaa4a7e6_TypeEnum> _7218_e = _1aab22e73_buildTypeEnum((*(_69831_node))._field_Data.unsafe_cast_ptr<_1aa9628a6_TypeEnumDecl>());;
				(*(*(_self_))._field_table.alloc)._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa4a7e6_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7218_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1bd70b64d:;
			{
				_1aab2488c_pushErr(_self_, &((*(_69831_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bd70b5d7:;
	};
}



inline void _1aab29573_appendNodes(_1aab23d86_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd723c1a:;
		if (it != expr_end) {
			_1aa0ec816_Node _72915_node = *it;
			{
				_1aab29375_appendNode(_self_, &(_72915_node));
			}
			_iter_next_1bd723c1a:;
			++it;
			goto _iter_begin_1bd723c1a;
		}
		_iter_end_1bd723c1a:;
	};
}



inline void _1aab2982b_pushDirectivePass(_1aab23d86_symBuilder* _self_, jule::Ptr<_1aa0ecc34_Directive>* _73438_d) {
	if (((*((*(_73438_d))))._field_Args.len() == 0LL)) {
		_1aab2488c_pushErr(_self_, &((*((*(_73438_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73438_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1aa0d7ceb_Token> _7394_arg = (*((*(_73438_d))))._field_Args[1LL];;
		_1aab2488c_pushErr(_self_, &(_7394_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73438_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aa0d7ceb_Token> _7433_arg = (*((*(_73438_d))))._field_Args[0LL];;
	if (((*(_7433_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1aab2488c_pushErr(_self_, &(_7433_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7433_arg))._field_Kind[0LL] != '\"')) {
		_1aab2488c_pushErr(_self_, &(_7433_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1aab1e3d1_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aab1e3d1_Pass{._field_Token=(*((*(_73438_d))))._field_Tag, ._field_Text=(*(_7433_arg))._field_Kind.slice(1LL, ((*_7433_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1aab29a29_appendTopDirectives(_1aab23d86_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd72bb02:;
		if (it != expr_end) {
			jule::Ptr<_1aa0ecc34_Directive> _76115_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_76115_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1bd72d5c6:;
						{
							_1aab2982b_pushDirectivePass(_self_, &(_76115_d));
						}
					}
					_match_end_1bd72d4e9:;
				};
			}
			_iter_next_1bd72bb02:;
			++it;
			goto _iter_begin_1bd72bb02;
		}
		_iter_end_1bd72bb02:;
	};
}



inline void _1aab29c27_build(jule::Ptr<_1aab23d86_symBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1aaa42524_SymTab>(_1aaa42524_SymTab{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1aab1e3d1_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1aa966767_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1aaa3b221_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1aaa46935_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1aaa490db_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1aaa4a7e6_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1aaae9840_Impl>>(nullptr)});
	_1aab29a29_appendTopDirectives(_self_);
	_1aab290bc_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1aab29573_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}








inline jule::Bool _1aab2ee08_ImportInfo_eq(_1aab2ee08_ImportInfo *_self_, _1aab2ee08_ImportInfo _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_LinkPath == _self_->_field_LinkPath) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Duplicate == _self_->_field_Duplicate) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Std == _self_->_field_Std) &&
		(_self_->_field_Package == _self_->_field_Package) &&
		(_self_->_field_ModId == _self_->_field_ModId);
}

inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab30425_SelectPackage(_1aab2ee08_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1aab70795_Var> _1aab30821_FindVar(_1aab2ee08_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1aab323a0_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1aab2c6b9_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1aabec1a1_TypeAlias> _1aab30c1c_FindTypeAlias(_1aab2ee08_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1aab323a0_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1aab2cae8_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1aa966767_Struct> _1aab31118_FindStruct(_1aab2ee08_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1aab323a0_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1aab2d09e_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aab31514_FindFn(_1aab2ee08_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1aab323a0_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1aab2d49a_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1aaa46935_Trait> _1aab31855_FindTrait(_1aab2ee08_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1aab323a0_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1aab2d81e_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1aaa490db_Enum> _1aab31b96_FindEnum(_1aab2ee08_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1aab323a0_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1aab2db93_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aab31ed7_FindTypeEnum(_1aab2ee08_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1aab323a0_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1aab2e127_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1aab323a0_isLookupable(_1aab2ee08_ImportInfo* _self_) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	return true;;
}







inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab32b53_SelectPackage(_1aab3267a_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1aab70795_Var> _1aab3304e_FindVar(_1aab3267a_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded) {
	return _1aab2c6b9_findVarInPackage(&((*(_self_))._field_Files), &(_28723_ident), _28735_binded);;
}



inline jule::Ptr<_1aabec1a1_TypeAlias> _1aab3344a_FindTypeAlias(_1aab3267a_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded) {
	return _1aab2cae8_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_29329_ident), _29341_binded);;
}



inline jule::Ptr<_1aa966767_Struct> _1aab33846_FindStruct(_1aab3267a_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded) {
	return _1aab2d09e_findStructInPackage(&((*(_self_))._field_Files), &(_29926_ident), _29938_binded);;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aab33c42_FindFn(_1aab3267a_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded) {
	return _1aab2d49a_findFnInPackage(&((*(_self_))._field_Files), &(_30522_ident), _30534_binded);;
}



inline jule::Ptr<_1aaa46935_Trait> _1aab34083_FindTrait(_1aab3267a_Package* _self_, jule::Str _31125_ident) {
	return _1aab2d81e_findTraitInPackage(&((*(_self_))._field_Files), &(_31125_ident));;
}



inline jule::Ptr<_1aaa490db_Enum> _1aab343c4_FindEnum(_1aab3267a_Package* _self_, jule::Str _31724_ident) {
	return _1aab2db93_findEnumInPackage(&((*(_self_))._field_Files), &(_31724_ident));;
}



inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aab34715_FindTypeEnum(_1aab3267a_Package* _self_, jule::Str _32328_ident) {
	return _1aab2e127_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_32328_ident));;
}







inline jule::Ptr<_1aaad1052_comptimeTypeInfo> _1aab4ba3a_pushComptimeTypeInfo(_1aab4b595_commonSemaMeta* _self_, jule::Ptr<_1aabecdb6_Type>* _21141_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7850cd:;
		if (it != expr_end) {
			jule::Ptr<_1aaad1052_comptimeTypeInfo> _21215_t2 = *it;
			{
				if (_1aabed603_Equal((*(_21215_t2))._field_base, (*(_21141_t)))) {
					return _21215_t2;;
				};
			}
			_iter_next_1bd7850cd:;
			++it;
			goto _iter_begin_1bd7850cd;
		}
		_iter_end_1bd7850cd:;
	};
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _2177_t1 = jule::new_ptr<_1aaad1052_comptimeTypeInfo>(_1aaad1052_comptimeTypeInfo{._field_base=(*(_21141_t))});;
	{ jule::Slice<jule::Ptr<_1aaad1052_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2177_t1); };
	return _2177_t1;;
}







inline jule::Ptr<_1aab2ee08_ImportInfo> _1aab4cb07_SelectPackage(_1aab4c62e_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>> _24829_selector) {
	return _1aaa42a41_SelectPackage((*(_self_))._field_file.ptr(), _24829_selector);;
}



inline jule::Ptr<_1aab70795_Var> _1aab4d003_FindVar(_1aab4c62e_sema* _self_, jule::Str _25823_ident, jule::Bool _25835_binded) {
	jule::Ptr<_1aab70795_Var> _2607_v = _1aab2c6b9_findVarInPackage(&((*(_self_))._field_files), &(_25823_ident), _25835_binded);;
	if ((_2607_v != nullptr)) {
		return _2607_v;;
	};
	return nullptr;;
}



inline jule::Ptr<_1aabec1a1_TypeAlias> _1aab4d3ee_FindTypeAlias(_1aab4c62e_sema* _self_, jule::Str _27329_ident, jule::Bool _27341_binded) {
	jule::Ptr<_1aabec1a1_TypeAlias> _2757_ta = _1aab2cae8_findTypeAliasInPackage(&((*(_self_))._field_files), &(_27329_ident), _27341_binded);;
	if ((_2757_ta != nullptr)) {
		return _2757_ta;;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa966767_Struct> _1aab4d7ea_FindStruct(_1aab4c62e_sema* _self_, jule::Str _28826_ident, jule::Bool _28838_binded) {
	jule::Ptr<_1aa966767_Struct> _2907_s = _1aab2d09e_findStructInPackage(&((*(_self_))._field_files), &(_28826_ident), _28838_binded);;
	if ((_2907_s != nullptr)) {
		return _2907_s;;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aab4dbe6_FindFn(_1aab4c62e_sema* _self_, jule::Str _30322_ident, jule::Bool _30334_binded) {
	jule::Ptr<_1aaa3b221_Fn> _3057_f = _1aab2d49a_findFnInPackage(&((*(_self_))._field_files), &(_30322_ident), _30334_binded);;
	if ((_3057_f != nullptr)) {
		return _3057_f;;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa46935_Trait> _1aab4e037_FindTrait(_1aab4c62e_sema* _self_, jule::Str _31825_ident) {
	jule::Ptr<_1aaa46935_Trait> _3207_t = _1aab2d81e_findTraitInPackage(&((*(_self_))._field_files), &(_31825_ident));;
	if ((_3207_t != nullptr)) {
		return _3207_t;;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa490db_Enum> _1aab4e378_FindEnum(_1aab4c62e_sema* _self_, jule::Str _33324_ident) {
	jule::Ptr<_1aaa490db_Enum> _3357_e = _1aab2db93_findEnumInPackage(&((*(_self_))._field_files), &(_33324_ident));;
	if ((_3357_e != nullptr)) {
		return _3357_e;;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aab4e6b9_FindTypeEnum(_1aab4c62e_sema* _self_, jule::Str _34828_ident) {
	jule::Ptr<_1aaa4a7e6_TypeEnum> _3507_e = _1aab2e127_findTypeEnumInPackage(&((*(_self_))._field_files), &(_34828_ident));;
	if ((_3507_e != nullptr)) {
		return _3507_e;;
	};
	return nullptr;;
}



inline jule::Bool _1aab4eac6_isFlag(_1aab4c62e_sema* _self_, jule::I32 _36018_flags) {
	return (((*(_self_))._field_flags & _36018_flags) == _36018_flags);;
}



inline jule::Ptr<_1aaa42524_SymTab> _1aab4ed5c_getCurrentFile(_1aab4c62e_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1aab50115_setCurrentFile(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa42524_SymTab> _36334_f) {
	(*(_self_))._field_file=_36334_f;
}



inline void _1aab50533_pushErr(_1aab4c62e_sema* _self_, jule::Ptr<_1aa0d7ceb_Token> _36523_token, jule::Str _36545_fmt, jule::Slice<jule::Any> _36565_args) {
	{ jule::Slice<_1ace263b7_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1aab4a0aa_compilerErr(&(_36523_token), true, _36545_fmt, _36565_args)); };
}



inline void _1aab50896_pushSuggestion(_1aab4c62e_sema* _self_, jule::Str _37030_fmt, jule::Slice<jule::Any> _37050_args) {
	{
		_1aab4b1cc_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _37030_fmt, _37050_args);
	};
}



inline jule::Bool _1aab50c92_isAccessibleDefine(_1aab4c62e_sema* _self_, jule::Bool _37630_public, jule::Ptr<_1aa0d7ceb_Token> _37644_token) {
	if ((_37630_public || ((*(_37644_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _3813_selfDir = _1aa0de52d_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _3823_tokenDir = _1aa0de52d_Dir((*(_37644_token))._field_File.ptr());;
	if ((_3813_selfDir == _3823_tokenDir)) {
		return true;;
	};
	if ((_1aab34b55_isStdPackage(&(_3823_tokenDir), jule::Str::lit("runtime", 7)) && _1aab34b55_isStdPackage(&(_3813_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1aab51248_isDuplicatedIdent(_1aab4c62e_sema* _self_, jule::Uintptr _39929_itself, jule::Str* _39947_ident, jule::Bool _39959_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd79670a:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> *_40010_f = it;
			{
				if (_1aaa45dc9_isDuplicatedIdent((*(_40010_f)).ptr(), _39929_itself, _39947_ident, _39959_binded)) {
					return true;;
				};
			}
			_iter_next_1bd79670a:;
			++it;
			goto _iter_begin_1bd79670a;
		}
		_iter_end_1bd79670a:;
	};
	return false;;
}



inline void _1aab515ab_checkDirectives(jule::Ptr<_1aab4c62e_sema> _self_, jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>* _40837_d, jule::Any _40863_o) {
	_1aab1a575_directiveChecker _4097_dc = _1aab1a575_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>>)(_40837_d)), ._field_o=_40863_o};;
	_1aab1bd07_check(&_4097_dc);
}



inline jule::Bool _1aab51a62_checkGenericQuantity(_1aab4c62e_sema* _self_, jule::I32 _41736_required, jule::I32 _41751_given, jule::Ptr<_1aa0d7ceb_Token> _41763_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_41736_required == 0LL) && (_41751_given > 0LL))) {
			_case_begin_1bd79929b:;
			{
				_1aab50533_pushErr(_self_, _41763_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_41736_required > 0LL) && (_41751_given == 0LL))) {
			_case_begin_1bd799312:;
			{
				_1aab50533_pushErr(_self_, _41763_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41736_required < _41751_given)) {
			_case_begin_1bd799389:;
			{
				_1aab50533_pushErr(_self_, _41763_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41736_required > _41751_given)) {
			_case_begin_1bd799411:;
			{
				_1aab50533_pushErr(_self_, _41763_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bd7991d0:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bd799103:;
	};
}



inline jule::Bool _1aab52a96_isUseAliasDuplication(_1aab4c62e_sema* _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _47538_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd79d327:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _47615_imp2 = *it;
			{
				if ((_47615_imp2 == (*(_47538_imp)))) {
					goto _iter_end_1bd79d327;
				};
				if (((*(_47615_imp2))._field_Alias == (*((*(_47538_imp))))._field_Alias)) {
					return true;;
				};
			}
			_iter_next_1bd79d327:;
			++it;
			goto _iter_begin_1bd79d327;
		}
		_iter_end_1bd79d327:;
	};
	return false;;
}



inline jule::Bool _1aab52dd7_checkAutoAlias(_1aab4c62e_sema* _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _48735_imp) {
	if ((*((*(_48735_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
		return true;;
	};
	jule::Bool _4923_valid = _1aab6e123_isValidImpAlias((*((*(_48735_imp))))._field_Alias);;
	if (_4923_valid) {
		if (_1aab52a96_isUseAliasDuplication(_self_, _48735_imp)) {
			_1aab50533_pushErr(_self_, (*((*((*(_48735_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_48735_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48735_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	} else {
		_1aab50533_pushErr(_self_, (*((*((*(_48735_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("import path is not suitable for auto-aliasing: @", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48735_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*((*(_48735_imp))))._field_Decl))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _4923_valid;;
}



inline jule::Bool _1aab53228_checkImport(_1aab4c62e_sema* _self_, jule::Ptr<_1aab2ee08_ImportInfo>* _50532_imp) {
	if ((*((*(_50532_imp))))._field_Binded) {
		return true;;
	};
	if (((*((*((*(_50532_imp))))._field_Decl))._field_Alias != nullptr)) {
		if (_1aa0da6d3_IsIgnoreIdent((*((*(_50532_imp))))._field_Alias)) {
			_1aab50533_pushErr(_self_, (*(*((*(_50532_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1aab52a96_isUseAliasDuplication(_self_, _50532_imp)) {
			_1aab50533_pushErr(_self_, (*(*((*(_50532_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_50532_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
		if ((*((*(_50532_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
			_1aab50533_pushErr(_self_, (*(*((*(_50532_imp))))._field_Decl.alloc)._field_Alias, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use \"std/unsafe\"", 16), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else if (((!(_1aab2a0e0_isImplicitImport((*(_50532_imp))))) && (!(_1aab52dd7_checkAutoAlias(_self_, _50532_imp))))) {
		return false;;
	};
	if (((*((*((*(_50532_imp))))._field_Package))._field_Files.len() == 0LL)) {
		return true;;
	};
	if ((!((*((*(_50532_imp))))._field_Duplicate))) {
		jule::Ptr<_1aab4c62e_sema> _5328_sema = jule::new_ptr<_1aab4c62e_sema>(_1aab4c62e_sema{._field_errors=jule::Slice<_1ace263b7_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1aaa42524_SymTab>>(nullptr), ._field_file=jule::Ptr<_1aaa42524_SymTab>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta, ._field_step=0LL});;
		_1aab6b7d5_check(_5328_sema, &((*((*((*(_50532_imp))))._field_Package))._field_Files));
		if (((*_5328_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_5328_sema.alloc)._field_errors);;
			(*_5328_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return true;;
}



inline void _1aab53426_checkImports(_1aab4c62e_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7ad26b:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _54715_file = *it;
			{
				_1aab50115_setCurrentFile(_self_, _54715_file);
				{
					auto expr = &((*(_54715_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd7aded6:;
					if (it != expr_end) {
						jule::Ptr<_1aab2ee08_ImportInfo> _54916_imp = *it;
						{
							jule::Bool _5505_ok = _1aab53228_checkImport(_self_, &(_54916_imp));;
							if ((!(_5505_ok))) {
								return;;
							};
						}
						_iter_next_1bd7aded6:;
						++it;
						goto _iter_begin_1bd7aded6;
					}
					_iter_end_1bd7aded6:;
				};
			}
			_iter_next_1bd7ad26b:;
			++it;
			goto _iter_begin_1bd7ad26b;
		}
		_iter_end_1bd7ad26b:;
	};
}



inline void _1aab53624_implFileImpls(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7ad887:;
		if (it != expr_end) {
			jule::Ptr<_1aaae9840_Impl> _56015_imp = *it;
			{
				_1aab636ab_implImpl(_self_, &(_56015_imp));
			}
			_iter_next_1bd7ad887:;
			++it;
			goto _iter_begin_1bd7ad887;
		}
		_iter_end_1bd7ad887:;
	};
}



inline void _1aab53822_implImpls(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7b0c1e:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _56615_file = *it;
			{
				_1aab50115_setCurrentFile(_self_.ptr(), _56615_file);
				_1aab53624_implFileImpls(_self_);
			}
			_iter_next_1bd7b0c1e:;
			++it;
			goto _iter_begin_1bd7b0c1e;
		}
		_iter_end_1bd7b0c1e:;
	};
}



inline void _1aab53a20_checkEnums(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7b1c97:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _57315_file = *it;
			{
				_1aab50115_setCurrentFile(_self_.ptr(), _57315_file);
				{
					
					if ((!(_1aab5eae7_checkEnumDecls(_self_)))) {
						_case_begin_1bd7b246d:;
					}
					else if ((!(_1aab5ed7d_checkTypeEnumDecls(_self_)))) {
						_case_begin_1bd7b2a45:;
					}
					_match_end_1bd7b298a:;
				};
			}
			_iter_next_1bd7b1c97:;
			++it;
			goto _iter_begin_1bd7b1c97;
		}
		_iter_end_1bd7b1c97:;
	};
}



inline void _1aab53c1d_checkFileInherits(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7b3826:;
		if (it != expr_end) {
			jule::Ptr<_1aaa46935_Trait> _58315_t = *it;
			{
				jule::Bool _5844_ok = _1aab61742__checkTraitDeclInherits(_self_, &(_58315_t));;
				if ((!(_5844_ok))) {
					return;;
				};
			}
			_iter_next_1bd7b3826:;
			++it;
			goto _iter_begin_1bd7b3826;
		}
		_iter_end_1bd7b3826:;
	};
}



inline void _1aab53e1b_checkInherits(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7b3d21:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _59215_file = *it;
			{
				_1aab50115_setCurrentFile(_self_.ptr(), _59215_file);
				_1aab53c1d_checkFileInherits(_self_);
			}
			_iter_next_1bd7b3d21:;
			++it;
			goto _iter_begin_1bd7b3d21;
		}
		_iter_end_1bd7b3d21:;
	};
}



inline _1aac10ea6_typeChecker _1aab543c2_typeChecker(jule::Ptr<_1aab4c62e_sema> _self_, jule::Trait _59832_l, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _59847_generics, jule::Ptr<_1aac0eeb6_referencer> _5997_referencer) {
	_1aac10ea6_typeChecker _6007_tc = _1aac10ea6_typeChecker{._field_s=_self_, ._field_rootLookup=_59832_l, ._field_lookup=_59832_l, ._field_referencer=_5997_referencer, ._field_refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_59847_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1aabec1a1_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _59832_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)) {
			_case_begin_1bd7b698e:;
			{
				jule::Ptr<_1aab05032_scopeChecker> _6098_hard = _1aab08695_getHardRoot(_59832_l.cast_ptr<_1aab05032_scopeChecker>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));;
				_6007_tc._field_refers=(*((*(_6098_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1bd7b6928:;
	};
	if (((_5997_referencer != nullptr) && ((*_5997_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_5997_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1bd7b8276:;
				{
					_6007_tc._field_ownerAlias=(*(_5997_referencer))._field_owner.unsafe_cast_ptr<_1aabec1a1_TypeAlias>();
				}
			}
			_match_end_1bd7b8210:;
		};
	};
	return _6007_tc;;
}



inline jule::Ptr<_1aabecdb6_Type> _1aab54933_buildTypeWithRefers(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa0ed817_TypeDecl>* _62541_t, jule::Trait _62564_l, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _6267_generics, jule::Ptr<_1aac0eeb6_referencer> _62635_referencer) {
	return ({ _1aac10ea6_typeChecker _wrap_copy = _1aab543c2_typeChecker(_self_, _62564_l, _6267_generics, _62635_referencer); _1aac1d8ed_checkDecl(&_wrap_copy, _62541_t); });;
}



inline jule::Bool _1aab54e94_checkTypeSymWithRefers(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aac062ba_TypeSym>* _63244_t, jule::Trait _63261_l, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _6337_generics, jule::Ptr<_1aac0eeb6_referencer> _63335_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1aac06672_checked((*(_63244_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_63244_t))))._field_Type=_1aab54933_buildTypeWithRefers(_self_, &((*((*(_63244_t))))._field_Decl), _63261_l, _6337_generics, _63335_referencer);
	__jule_func_result = _1aac06672_checked((*(_63244_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1aaae7541_constraintChecker> _1aab5522a_constraintChecker(jule::Ptr<_1aab4c62e_sema> _self_) {
	return jule::new_ptr<_1aaae7541_constraintChecker>(_1aaae7541_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_si=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_et=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1aab55626_checkTypeSym(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aac062ba_TypeSym>* _64734_t, jule::Trait _64751_l) {
	return _1aab54e94_checkTypeSymWithRefers(_self_, _64734_t, _64751_l, nullptr, nullptr);;
}



inline jule::Ptr<_1aabecdb6_Type> _1aab55acc_checkTypeSymRefers(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa0ed817_TypeDecl>* _65240_t, jule::Trait _65263_l, jule::Ptr<_1aab1cd80_ReferenceStack> _65278_refers) {
	jule::Ptr<_1aac10ea6_typeChecker> _6537_tc = jule::new_ptr<_1aac10ea6_typeChecker>(_1aac10ea6_typeChecker{._field_s=_self_, ._field_rootLookup=_65263_l, ._field_lookup=_65263_l, ._field_referencer=jule::Ptr<_1aac0eeb6_referencer>(nullptr), ._field_refers=_65278_refers, ._field_errorToken=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1aabec1a1_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1aac1d8ed_checkDecl(_6537_tc.ptr(), _65240_t);;
}



inline jule::Ptr<_1aabecdb6_Type> _1aab56083_buildTypeWithGenerics(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa0ed817_TypeDecl>* _66443_t, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _6657_generics, jule::Ptr<_1aab1cd80_ReferenceStack> _66535_refers) {
	jule::Ptr<_1aac10ea6_typeChecker> _6667_tc = jule::new_ptr<_1aac10ea6_typeChecker>(_1aac10ea6_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1aac0eeb6_referencer>(nullptr), ._field_refers=_66535_refers, ._field_errorToken=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_6657_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1aabec1a1_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1aac1d8ed_checkDecl(_6667_tc.ptr(), _66443_t);;
}



inline jule::Ptr<_1aabecdb6_Type> _1aab56715_selectType(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa0ed817_TypeDecl>* _68232_t) {
	jule::Ptr<_1aac10ea6_typeChecker> _6837_tc = jule::new_ptr<_1aac10ea6_typeChecker>(_1aac10ea6_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1aac0eeb6_referencer>(nullptr), ._field_refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1aabec1a1_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1aac1d8ed_checkDecl(_6837_tc.ptr(), _68232_t);;
}



inline jule::Ptr<_1aabbad84_eval> _1aab56bbb_evalpd(jule::Ptr<_1aab4c62e_sema> _self_, jule::Trait _69427_l, jule::Ptr<_1aabecdb6_Type> _69442_p, jule::Ptr<_1aab70795_Var> _69456_owner) {
	jule::Ptr<_1aabbad84_eval> _6957_e = jule::new_ptr<_1aabbad84_eval>(_1aabbad84_eval{._field_s=_self_, ._field_lookup=_69427_l, ._field_prefix=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_unsafety=false, ._field_disBuiltin=false, ._field_owner=_69456_owner, ._field_field=jule::Ptr<_1aa9689cd_FieldIns>(nullptr), ._field_target=_1aabba416_target{._field_ignored=false, ._field_mutable=false}});;
	{
		auto &_match_expr{ _69427_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)) {
			_case_begin_1bd7c369e:;
			{
				(*(_6957_e))._field_unsafety=_1aab0741e_isUnsafe(_69427_l.cast_ptr<_1aab05032_scopeChecker>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));
			}
		}
		_match_end_1bd7c3638:;
	};
	(*(_6957_e))._field_prefix=_69442_p;
	return _6957_e;;
}



inline jule::Ptr<_1aabbad84_eval> _1aab570b7_evalp(jule::Ptr<_1aab4c62e_sema> _self_, jule::Trait _70926_l, jule::Ptr<_1aabecdb6_Type> _70941_p) {
	return _1aab56bbb_evalpd(_self_, _70926_l, _70941_p, nullptr);;
}



inline jule::Ptr<_1aabbad84_eval> _1aab57408_eval(jule::Ptr<_1aab4c62e_sema> _self_, jule::Trait _71425_l) {
	return _1aab570b7_evalp(_self_, _71425_l, nullptr);;
}



inline jule::Bool _1aab57a24_checkAssignType(jule::Ptr<_1aab4c62e_sema> _self_, jule::Bool _71932_destIsRef, jule::Ptr<_1aabecdb6_Type>* _71954_dest, jule::Ptr<_1aabb8db5_Data>* _7208_d, jule::Ptr<_1aa0d7ceb_Token> _72022_errorToken, jule::Ptr<_1aab1cd80_ReferenceStack> _72053_refers) {
	if ((*((*(_7208_d))))._field_Decl) {
		_1aab50533_pushErr(_self_.ptr(), _72022_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_71932_destIsRef) {
		if ((!(_1aabed603_Equal((*(_71954_dest)), (*((*(_7208_d))))._field_Type)))) {
			_1aab50533_pushErr(_self_.ptr(), _72022_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_71954_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_7208_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1aaba6c93_assignTypeChecker> _7318_atc = jule::new_ptr<_1aaba6c93_assignTypeChecker>(_1aaba6c93_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_71954_dest)), ._field_d=(*(_7208_d)), ._field_errorToken=_72022_errorToken, ._field_refers=_72053_refers});;
		jule::Bool _7384_ok = _1aaba7c94_check(_7318_atc.ptr());;
		if ((!(_7384_ok))) {
			return false;;
		};
	};
	if (((!(_1aabb9800_IsConst((*(_7208_d)).ptr()))) || (_1aac00ec9_Prim((*(_71954_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _7487_kind = (*(_1aac00ec9_Prim((*(_71954_dest)).ptr())))._field_Kind;;
	{
		
		if (_1aaabe02e_IsSigInt(_7487_kind)) {
			_case_begin_1bd7cb4cb:;
			{
				_1aaa256e4_SetI64((*((*(_7208_d))))._field_Constant.ptr(), _1aaa24e1e_AsI64((*((*(_7208_d))))._field_Constant));
			}
		}
		else if (_1aaabe33c_IsUnsigInt(_7487_kind)) {
			_case_begin_1bd7cb564:;
			{
				_1aaa2599c_SetU64((*((*(_7208_d))))._field_Constant.ptr(), _1aaa251a5_AsU64((*((*(_7208_d))))._field_Constant));
			}
		}
		else if (_1aaabe947_IsFloat(_7487_kind)) {
			_case_begin_1bd7cb5ca:;
			{
				_1aaa262b6_SetF64((*((*(_7208_d))))._field_Constant, _1aaa2543b_AsF64((*((*(_7208_d))))._field_Constant));
			}
		}
		_match_end_1bd7cb421:;
	};
	return true;;
}



inline jule::Bool _1aab57eca__checkTypeCompatibility(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabecdb6_Type>* _76245_dest, jule::Ptr<_1aabecdb6_Type>* _76263_src, jule::Ptr<_1aa0d7ceb_Token> _7637_errorToken) {
	if (((*(_76263_src)) == nullptr)) {
		return false;;
	};
	if ((_1aac03086_Tup((*(_76263_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1aaba4e17_typeCompatibilityChecker _7717_tcc = _1aaba4e17_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_76245_dest)), ._field_src=(*(_76263_src)), ._field_errorToken=_7637_errorToken};;
	return _1aaba6611_check(&_7717_tcc);;
}



inline jule::Bool _1aab58481_checkTypeCompatibility(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabecdb6_Type>* _78044_dest, jule::Ptr<_1aabecdb6_Type>* _7818_src, jule::Ptr<_1aa0d7ceb_Token>* _78125_errorToken) {
	if (_1aab57eca__checkTypeCompatibility(_self_, _78044_dest, _7818_src, (*(_78125_errorToken)))) {
		return true;;
	};
	_1aab50533_pushErr(_self_.ptr(), (*(_78125_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_78044_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_7818_src)).ptr()), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline void _1aab5889e_pushCompatiblityError(_1aab4c62e_sema* _self_, jule::Ptr<_1aabecdb6_Type>* _78942_dest, jule::Ptr<_1aabb8db5_Data>* _78960_src, jule::Ptr<_1aa0d7ceb_Token>* _7908_errorToken) {
	if (((*((*(_78960_src))))._field_untyped && _1aabb9800_IsConst((*(_78960_src)).ptr()))) {
		{
			
			if (_1aaa2674a_IsI64((*((*(_78960_src))))._field_Constant.ptr())) {
				_case_begin_1bd7d634e:;
				{
					_1aab50533_pushErr(_self_, (*(_7908_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_78942_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1aaa269d1_IsU64((*((*(_78960_src))))._field_Constant.ptr())) {
				_case_begin_1bd7d63e8:;
				{
					_1aab50533_pushErr(_self_, (*(_7908_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_78942_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1aaa27284_IsF64((*((*(_78960_src))))._field_Constant)) {
				_case_begin_1bd7d645e:;
				{
					_1aab50533_pushErr(_self_, (*(_7908_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_78942_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			_match_end_1bd7d621c:;
		};
	};
	_1aab50533_pushErr(_self_, (*(_7908_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_78942_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_78960_src))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1aab58d55_checkTypeCompatibility1(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabecdb6_Type>* _80745_dest, jule::Ptr<_1aabb8db5_Data>* _80763_src, jule::Ptr<_1aa0d7ceb_Token>* _8088_errorToken) {
	if (_1aab57eca__checkTypeCompatibility(_self_, _80745_dest, &((*((*(_80763_src))))._field_Type), (*(_8088_errorToken)))) {
		return true;;
	};
	_1aab5889e_pushCompatiblityError(_self_.ptr(), _80745_dest, _80763_src, _8088_errorToken);
	return false;;
}



inline jule::Ptr<_1aabecdb6_Type> _1aab5930b_buildNonGenericType(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa0ed817_TypeDecl>* _82241_ast, jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>* _8238_generics, jule::Slice<jule::Ptr<_1aabecdb6_Type>>* _82344_ignored) {
	jule::Ptr<_1aac10ea6_typeChecker> _8247_tc = jule::new_ptr<_1aac10ea6_typeChecker>(_1aac10ea6_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1aac0eeb6_referencer>(nullptr), ._field_refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_ignoreGenerics=(*(_8238_generics)), ._field_ignoredGenerics=_82344_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1aabec1a1_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1aac1d8ed_checkDecl(_8247_tc.ptr(), _82241_ast);;
}



inline jule::Bool _1aab59707_buildFnNonGenericTypes(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _83443_f, jule::Slice<jule::Ptr<_1aabecdb6_Type>>* _83459_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>> _83511_generics = nullptr;;
	if (_1aaa3b95d_IsMethod((*(_83443_f))._field_Decl.ptr())) {
		_83511_generics=jule::append((*(*(_83443_f))._field_Decl.alloc)._field_Generics,(*((*(*(_83443_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_83511_generics=(*((*(_83443_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1aab5a8a1_basicFnEnvironment(_self_, &(_83443_f), jule::__new_closure<jule::Bool,jule::Ptr<_1aab4c62e_sema>*>((void*)__jule_anon_1bd7e1a0d, jule::Ptr<__jule_anon_1bd7e1a0d_ctx>::make(__jule_anon_1bd7e1a0d_ctx{._83443_f=_83443_f,._83511_generics=_83511_generics,._83459_ignored=_83459_ignored}).as<jule::Uintptr>(), __jule_anon_1bd7e1a0d_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1aaa3e2ce_FnIns> _1aab59a48_getTraitCheckFnKind(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _85741_f) {
	if (((*((*(_85741_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_85741_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _8617_ins = _1aaa3c72d_instanceForce((*(_85741_f)));;
	jule::Ptr<_1aac10ea6_typeChecker> _8637_tc = jule::new_ptr<_1aac10ea6_typeChecker>(_1aac10ea6_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1aac0eeb6_referencer>(nullptr), ._field_refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1aabec1a1_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_8617_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7e7d22:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3d179_ParamIns> _86815_p = *it;
			{
				if ((!(_1aaa39d9b_IsSelf((*(_86815_p))._field_Decl.ptr())))) {
					(*_86815_p.alloc)._field_Type=_1aac1d8ed_checkDecl(_8637_tc.ptr(), &((*((*(*(_86815_p))._field_Decl.alloc)._field_TypeSym))._field_Decl));
					if (((*_86815_p.alloc)._field_Type == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1bd7e7d22:;
			++it;
			goto _iter_begin_1bd7e7d22;
		}
		_iter_end_1bd7e7d22:;
	};
	if ((!(_1aaa3b6c7_IsVoid((*(_85741_f)).ptr())))) {
		(*_8617_ins.alloc)._field_Result=_1aac1d8ed_checkDecl(_8637_tc.ptr(), &((*((*((*((*(_85741_f))))._field_Result))._field_TypeSym))._field_Decl));
		if (((*_8617_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _8617_ins;;
}



inline jule::Bool _1aab59eee_checkConstraintsFn(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _88640_f, jule::Ptr<_1aa0d7ceb_Token>* _88656_et, jule::Ptr<_1aaa3e2ce_FnIns> _88679_exist) {
	jule::Ptr<_1aaae7541_constraintChecker> _8877_cc = _1aab5522a_constraintChecker(_self_);;
	(*(_8877_cc))._field_et=(*(_88656_et));
	(*_8877_cc.alloc)._field_fi=(*(_88640_f));
	if ((_88679_exist != nullptr)) {
		{
			auto expr = &((*_88679_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd7ece59:;
			if (it != expr_end) {
				jule::I32 _8919_i = it - expr->begin();
				jule::Ptr<_1aabeb4d0_InsGeneric> _89116_g = *it;
				{
					(*((*((*(_88640_f))))._field_Generics[_8919_i]))._field_Constraint=(*(_89116_g))._field_Constraint;
				}
				_iter_next_1bd7ece59:;
				++it;
				_8919_i++;
				goto _iter_begin_1bd7ece59;
			}
			_iter_end_1bd7ece59:;
		};
	} else {
		(*_8877_cc.alloc)._field_uniq=true;
	};
	return _1aaae84a9_check(_8877_cc);;
}



inline jule::Bool _1aab5a4a5_checkConstraintsStruct(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa969605_StructIns>* _90044_s, jule::Ptr<_1aa0d7ceb_Token>* _90064_et, jule::Ptr<_1aa969605_StructIns> _90087_exist) {
	jule::Ptr<_1aaae7541_constraintChecker> _9017_cc = _1aab5522a_constraintChecker(_self_);;
	(*(_9017_cc))._field_et=(*(_90064_et));
	(*_9017_cc.alloc)._field_si=(*(_90044_s));
	if ((_90087_exist != nullptr)) {
		{
			auto expr = &((*_90087_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd8010d3:;
			if (it != expr_end) {
				jule::I32 _9059_i = it - expr->begin();
				jule::Ptr<_1aabeb4d0_InsGeneric> _90516_g = *it;
				{
					(*((*((*(_90044_s))))._field_Generics[_9059_i]))._field_Constraint=(*(_90516_g))._field_Constraint;
				}
				_iter_next_1bd8010d3:;
				++it;
				_9059_i++;
				goto _iter_begin_1bd8010d3;
			}
			_iter_end_1bd8010d3:;
		};
	} else {
		(*_9017_cc.alloc)._field_uniq=true;
	};
	return _1aaae84a9_check(_9017_cc);;
}



inline jule::Bool _1aab5a8a1_basicFnEnvironment(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _91740_f, jule::Fn<jule::Bool,jule::Ptr<_1aab4c62e_sema>*> _91751_algo) {
	jule::Ptr<_1aab4c62e_sema> _9187_sema = (*((*((*(_91740_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1aaa42524_SymTab> _9197_old = _1aab4ed5c_getCurrentFile(_9187_sema.ptr());;
	jule::Ptr<_1aaa42524_SymTab> _9207_file = _1aab4ad36_findFile(&((*_9187_sema.alloc)._field_files), &((*((*(*((*(_91740_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_9207_file != nullptr)) {
		_1aab50115_setCurrentFile(_9187_sema, _9207_file);
	};
	jule::Bool _9253_ok = _91751_algo(&(_9187_sema));;
	if ((_9187_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_9187_sema))._field_errors);
		(*_9187_sema.alloc)._field_errors=nullptr;
	};
	_1aab50115_setCurrentFile(_9187_sema.ptr(), _9197_old);
	return _9253_ok;;
}



inline jule::Bool _1aab5ac9c_fnEnvironment(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _93735_f, jule::Fn<jule::Bool,jule::Ptr<_1aab4c62e_sema>*,jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>*> _93746_algo) {
	jule::I32 _9387_size = (*((*(_93735_f))))._field_Generics.len();;
	if ((((*((*(_93735_f))))._field_Decl != nullptr) && ((*(*((*(_93735_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_9387_size+=(*(*((*((*(_93735_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _9427_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>::alloc(0LL, _9387_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aabec1a1_TypeAlias>(nullptr); __jule_collection; });;
	_1aab4a9b2_appendGenericTypeAliases(&(_9427_generics), _93735_f);
	return _1aab5a8a1_basicFnEnvironment(_self_, _93735_f, jule::__new_closure<jule::Bool,jule::Ptr<_1aab4c62e_sema>*>((void*)__jule_anon_1bd809729, jule::Ptr<__jule_anon_1bd809729_ctx>::make(__jule_anon_1bd809729_ctx{._93746_algo=_93746_algo,._9427_generics=_9427_generics}).as<jule::Uintptr>(), __jule_anon_1bd809729_ctx_handler));;
}



inline void _1aab5b055_checkFnParamKind(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3d179_ParamIns>* _94938_p) {
	(*((*((*(_94938_p))))._field_Type))._field_Variadic=(*((*((*(_94938_p))))._field_Decl))._field_Variadic;
}



inline jule::Bool _1aab5b396_reloadFnInsTypes(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _95337_f) {
	if ((_1aaa40797_IsBuiltin(_95337_f.ptr()) || _1aaa40a2d_IsAnon(_95337_f.ptr()))) {
		return true;;
	};
	return _1aab5ac9c_fnEnvironment(_self_, &(_95337_f), jule::__new_closure<jule::Bool,jule::Ptr<_1aab4c62e_sema>*,jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>*>((void*)__jule_anon_1bd80c111, jule::Ptr<__jule_anon_1bd80c111_ctx>::make(__jule_anon_1bd80c111_ctx{._95337_f=_95337_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd80c111_ctx_handler));;
}



inline jule::Bool _1aab5b84c_checkRefValidityForInitExpr(jule::Ptr<_1aab4c62e_sema> _self_, jule::Bool _99344_leftMut, jule::Ptr<_1aabb8db5_Data>* _99364_d, jule::Ptr<_1aa0d7ceb_Token>* _99379_errorToken) {
	if ((!(_1aab49a7c_isValidModelForRef(&((*((*(_99364_d))))._field_Model))))) {
		_1aab50533_pushErr(_self_.ptr(), (*(_99379_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_99344_leftMut && (!((*((*(_99364_d))))._field_Mutable)))) {
		_1aab50533_pushErr(_self_.ptr(), (*(_99379_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1aab5bb8d_isMutRiskyStruct(_1aab4c62e_sema* _self_, jule::Ptr<_1aa969605_StructIns>* _101029_s) {
	{
		auto expr = &((*((*(_101029_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd816e84:;
		if (it != expr_end) {
			jule::Ptr<_1aa9689cd_FieldIns> *_101110_f = it;
			{
				if ((((*((*((*(_101110_f))))._field_Decl))._field_Mutable && _1aac00209_Mutable((*(*(_101110_f)).alloc)._field_Type.ptr())) && _1aab50c92_isAccessibleDefine(_self_, (*(*((*(_101110_f))))._field_Decl.alloc)._field_Public, (*(*((*(_101110_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1bd816e84:;
			++it;
			goto _iter_begin_1bd816e84;
		}
		_iter_end_1bd816e84:;
	};
	return false;;
}



inline jule::Bool _1aab5c2a9_checkValidityForInitExpr(jule::Ptr<_1aab4c62e_sema> _self_, jule::Bool _103741_leftMut, jule::Bool _103756_leftRef, jule::Ptr<_1aabecdb6_Type>* _10384_leftKind, jule::Ptr<_1aabb8db5_Data>* _103826_d, jule::Ptr<_1aa0d7ceb_Token>* _103841_errorToken) {
	if ((_103741_leftMut && (!((*((*(_103826_d))))._field_Mutable)))) {
		if ((_1aac00209_Mutable((*((*(_103826_d))))._field_Type.ptr()) || (*((*((*(_103826_d))))._field_Type))._field_Variadic)) {
			_1aab50533_pushErr(_self_.ptr(), (*(_103841_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_103826_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1aa969605_StructIns> _10464_s = _1aac0254c_Struct((*((*(_103826_d))))._field_Type.ptr());;
		if (((_10464_s != nullptr) && _1aab5bb8d_isMutRiskyStruct(_self_.ptr(), &(_10464_s)))) {
			_1aab50533_pushErr(_self_, (*(_103841_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_103826_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	};
	if (_103756_leftRef) {
		if ((!(_1aab5b84c_checkRefValidityForInitExpr(_self_, _103741_leftMut, _103826_d, _103841_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1aaba6c93_assignTypeChecker> _10577_atc = jule::new_ptr<_1aaba6c93_assignTypeChecker>(_1aaba6c93_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_d=(*(_103826_d)), ._field_errorToken=(*(_103841_errorToken)), ._field_refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr)});;
	return _1aaba74e1_checkValidity(_10577_atc.ptr());;
}



inline jule::Bool _1aab5c6a5_checkTypeAliasDeclKind(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabec1a1_TypeAlias>* _106544_ta, jule::Trait _106564_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aaa42524_SymTab> _10667_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1aab50115_setCurrentFile(_self_, _10667_old);
	});;
	if (((*((*(_106544_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1aaa42524_SymTab> _10718_file = _1aab4ad36_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_106544_ta))))._field_Token.alloc)._field_File));;
		if ((_10718_file != nullptr)) {
			_1aab50115_setCurrentFile(_self_, _10718_file);
		};
	};
	__jule_func_result=_1aab54e94_checkTypeSymWithRefers(_self_, &((*((*(_106544_ta))))._field_TypeSym), _106564_l, nullptr, jule::new_ptr<_1aac0eeb6_referencer>(_1aac0eeb6_referencer{._field_ident=(*((*(_106544_ta))))._field_Ident, ._field_owner=jule::Any((*(_106544_ta)), &__jule_any_type8), ._field_refs=(&((*((*(_106544_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1aac01c99_Arr((*((*((*(_106544_ta))))._field_TypeSym))._field_Type.ptr()) != nullptr)) && (*(_1aac01c99_Arr((*((*((*(_106544_ta))))._field_TypeSym))._field_Type)))._field_Auto)) {
		_1aab50533_pushErr(_self_, (*((*(*((*(_106544_ta))))._field_TypeSym.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab5caa1_checkTypeAliasDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabec1a1_TypeAlias>* _108840_ta, jule::Trait _108860_l) {
	jule::Bool __jule_func_result = false;
	if (_1aa0da6d3_IsIgnoreIdent((*((*(_108840_ta))))._field_Ident)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_108840_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_108840_ta))))._field_TypeSym))._field_Type != nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result=_1aab5c6a5_checkTypeAliasDeclKind(_self_, _108840_ta, _108860_l);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((!((*((*(_108840_ta))))._field_Strict))) {
		if ((*((*(_108840_ta))))._field_Binded) {
			_1aab50533_pushErr(_self_, (*((*(_108840_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded type aliases cannot be soft type alias", 45)), jule::Slice<jule::Any>());
			_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("define as strict type alias with colon sign, like: type @: <type>", 65)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_108840_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		};
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa969605_StructIns> _11097_s = _1aac217be_initNewStructType((*((*(_108840_ta))))._field_Ident, (*((*((*(_108840_ta))))._field_TypeSym))._field_Type);;
	(*((*(_11097_s))._field_Decl))._field_sema=_self_;
	(*(*(_11097_s))._field_Decl.alloc)._field_Binded=(*((*(_108840_ta))))._field_Binded;
	(*(*(_11097_s))._field_Decl.alloc)._field_Token=(*((*(_108840_ta))))._field_Token;
	(*(*(_11097_s))._field_Decl.alloc)._field_Public=(*((*(_108840_ta))))._field_Public;
	(*(*((*(_108840_ta))))._field_TypeSym.alloc)._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_11097_s, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)});
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aab5cd59_checkTypeAliasDeclDup(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabec1a1_TypeAlias>* _111943_ta) {
	if (_1aab51248_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_111943_ta))), &((*((*(_111943_ta))))._field_Ident), (*((*(_111943_ta))))._field_Binded)) {
		_1aab50533_pushErr(_self_, (*((*(_111943_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_111943_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1aab5caa1_checkTypeAliasDecl(_self_, _111943_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4));
}



inline jule::Bool _1aab5d0e0_checkTypeAliasDecls(jule::Ptr<_1aab4c62e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd82ee47:;
		if (it != expr_end) {
			jule::Ptr<_1aabec1a1_TypeAlias> _112915_ta = *it;
			{
				_1aab5cd59_checkTypeAliasDeclDup(_self_, &(_112915_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bd82ee47:;
			++it;
			goto _iter_begin_1bd82ee47;
		}
		_iter_end_1bd82ee47:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bd85cc66_checkEnumItemsDup(_1aab4c62e_sema* _self_, jule::Slice<jule::Ptr<_1aaa48580_EnumItem>> _114036_items) {
	{
		auto expr = &(_114036_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd85d470:;
		if (it != expr_end) {
			jule::Ptr<_1aaa48580_EnumItem> *_114110_item = it;
			{
				if (((*((*(_114110_item))))._field_Ident).empty()) {
					goto _iter_next_1bd85d470;
				} else if (_1aa0da6d3_IsIgnoreIdent((*((*(_114110_item))))._field_Ident)) {
					_1aab50533_pushErr(_self_, (*(*(_114110_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_114036_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd860c9c:;
						if (it != expr_end) {
							jule::Ptr<_1aaa48580_EnumItem> *_114712_citem = it;
							{
								if (((*(_114110_item)) == (*(_114712_citem)))) {
									goto _iter_end_1bd860c9c;
								} else if (((*(*(_114110_item)).alloc)._field_Ident == (*((*(_114712_citem))))._field_Ident)) {
									_1aab50533_pushErr(_self_, (*(*(_114110_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_114110_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1bd860c9c;
								};
							}
							_iter_next_1bd860c9c:;
							++it;
							goto _iter_begin_1bd860c9c;
						}
						_iter_end_1bd860c9c:;
					};
				};
			}
			_iter_next_1bd85d470:;
			++it;
			goto _iter_begin_1bd85d470;
		}
		_iter_end_1bd85d470:;
	};
}

inline void _1bd86a966_checkEnumItemsDup(_1aab4c62e_sema* _self_, jule::Slice<jule::Ptr<_1aaa4a21e_TypeEnumItem>> _114036_items) {
	{
		auto expr = &(_114036_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd86b170:;
		if (it != expr_end) {
			jule::Ptr<_1aaa4a21e_TypeEnumItem> *_114110_item = it;
			{
				if (((*((*(_114110_item))))._field_Ident).empty()) {
					goto _iter_next_1bd86b170;
				} else if (_1aa0da6d3_IsIgnoreIdent((*((*(_114110_item))))._field_Ident)) {
					_1aab50533_pushErr(_self_, (*(*(_114110_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_114036_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd86d958:;
						if (it != expr_end) {
							jule::Ptr<_1aaa4a21e_TypeEnumItem> *_114712_citem = it;
							{
								if (((*(_114110_item)) == (*(_114712_citem)))) {
									goto _iter_end_1bd86d958;
								} else if (((*(*(_114110_item)).alloc)._field_Ident == (*((*(_114712_citem))))._field_Ident)) {
									_1aab50533_pushErr(_self_, (*(*(_114110_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_114110_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1bd86d958;
								};
							}
							_iter_next_1bd86d958:;
							++it;
							goto _iter_begin_1bd86d958;
						}
						_iter_end_1bd86d958:;
					};
				};
			}
			_iter_next_1bd86b170:;
			++it;
			goto _iter_begin_1bd86b170;
		}
		_iter_end_1bd86b170:;
	};
}



inline void _1aab5d651_checkEnumItemsStr(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa490db_Enum>* _116039_e) {
	jule::Ptr<_1aabbad84_eval> _11617_eval = _1aab57408_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4));;
	{
		auto expr = &((*((*(_116039_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd831b6e:;
		if (it != expr_end) {
			jule::Ptr<_1aaa48580_EnumItem> _116215_item = *it;
			{
				if (_1aaa48959_AutoExpr(_116215_item.ptr())) {
					(*_116215_item.alloc)._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aaa23516_NewStr((*_116215_item.alloc)._field_Ident)})});
					(*((*((*_116215_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_116215_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
				} else {
					jule::Ptr<_1aabb8db5_Data> _11719_d = _1aabdad3d_evalExpr(_11617_eval, (*((*(_116215_item))._field_Value))._field_Expr);;
					if ((_11719_d == nullptr)) {
						goto _iter_next_1bd831b6e;
					};
					if ((!(_1aabb9800_IsConst(_11719_d.ptr())))) {
						_1aab50533_pushErr(_self_, (*((*(*(_116215_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1aab1cd80_ReferenceStack> _11809_refers = static_cast<jule::Ptr<_1aab1cd80_ReferenceStack>>(nullptr);;
					_1aab57a24_checkAssignType(_self_, false, &((*((*((*(_116039_e))))._field_TypeSym))._field_Type), &(_11719_d), (*_116215_item.alloc)._field_Token, _11809_refers);
					(*(*(_116215_item))._field_Value.alloc)._field_Data=_11719_d;
				};
			}
			_iter_next_1bd831b6e:;
			++it;
			goto _iter_begin_1bd831b6e;
		}
		_iter_end_1bd831b6e:;
	};
}



inline void _1bd83c938_checkEnumItemInt(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabbad84_eval>* _118743_eval, jule::Ptr<_1aaa490db_Enum>* _118761_e, jule::Ptr<_1aac06bc2_Prim>* _118772_prim, jule::Ptr<_1aaa48580_EnumItem>* _118790_item, jule::U64* _1187112_n) {
	if (_1aaa48959_AutoExpr((*(_118790_item)).ptr())) {
		(*((*(_118790_item))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		{
			
{
				_case_begin_1bd83eb05:;
				{
					(*((*((*((*(_118790_item))))._field_Value))._field_Data))._field_Constant=static__1aaa22e83_NewU64((*(_1187112_n)));
				}
			}
			_match_end_1bd8403ca:;
		};
		(*((*((*((*(_118790_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_118790_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1aabb8db5_Data> _12028_d = _1aabdad3d_evalExpr((*(_118743_eval)), (*((*((*(_118790_item))))._field_Value))._field_Expr);;
		if ((_12028_d == nullptr)) {
			return;;
		};
		if ((!(_1aabb9800_IsConst(_12028_d.ptr())))) {
			_1aab50533_pushErr(_self_.ptr(), (*((*(*((*(_118790_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1aab1cd80_ReferenceStack> _12098_refers = static_cast<jule::Ptr<_1aab1cd80_ReferenceStack>>(nullptr);;
		_1aab57a24_checkAssignType(_self_, false, &((*((*((*(_118761_e))))._field_TypeSym))._field_Type), &(_12028_d), (*((*(_118790_item))))._field_Token, _12098_refers);
		(*(*((*(_118790_item))))._field_Value.alloc)._field_Data=_12028_d;
		{
			
{
				_case_begin_1bd844577:;
				{
					(*(_1187112_n))=_1aaa243d5_ReadU64((*((*(*((*(_118790_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1bd845853:;
		};
	};
}

inline void _1bd84cd77_checkEnumItemInt(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aabbad84_eval>* _118743_eval, jule::Ptr<_1aaa490db_Enum>* _118761_e, jule::Ptr<_1aac06bc2_Prim>* _118772_prim, jule::Ptr<_1aaa48580_EnumItem>* _118790_item, jule::I64* _1187112_n) {
	if (_1aaa48959_AutoExpr((*(_118790_item)).ptr())) {
		(*((*(_118790_item))))._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})});
		{
			
{
				_case_begin_1bd85083b:;
				{
					(*((*((*((*(_118790_item))))._field_Value))._field_Data))._field_Constant=static__1aaa22c30_NewI64((*(_1187112_n)));
				}
			}
			_match_end_1bd8507c5:;
		};
		(*((*((*((*(_118790_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_118790_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1aabb8db5_Data> _12028_d = _1aabdad3d_evalExpr((*(_118743_eval)), (*((*((*(_118790_item))))._field_Value))._field_Expr);;
		if ((_12028_d == nullptr)) {
			return;;
		};
		if ((!(_1aabb9800_IsConst(_12028_d.ptr())))) {
			_1aab50533_pushErr(_self_.ptr(), (*((*(*((*(_118790_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1aab1cd80_ReferenceStack> _12098_refers = static_cast<jule::Ptr<_1aab1cd80_ReferenceStack>>(nullptr);;
		_1aab57a24_checkAssignType(_self_, false, &((*((*((*(_118761_e))))._field_TypeSym))._field_Type), &(_12028_d), (*((*(_118790_item))))._field_Token, _12098_refers);
		(*(*((*(_118790_item))))._field_Value.alloc)._field_Data=_12028_d;
		{
			
{
				_case_begin_1bd855e29:;
				{
					(*(_1187112_n))=_1aaa2414e_ReadI64((*((*(*((*(_118790_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1bd855db3:;
		};
	};
}



inline void _1bd838cb9_checkEnumItemsInt1(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aac06bc2_Prim>* _122341_prim, jule::Ptr<_1aaa490db_Enum>* _122359_e) {
	jule::U64 _12247_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1bd83a837:;
			{
				_12247_max=_1aaabc835_MaxU(_1aac07046_Str((*(_122341_prim)).ptr()));
			}
		}
		_match_end_1bd83a914:;
	};
	jule::Ptr<_1aabbad84_eval> _12347_eval = _1aab57408_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4));;
	jule::U64 _12357_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1aaa48580_EnumItem> _12367_first = (*((*(_122359_e))))._field_Items[0LL];;
	_1bd83c938_checkEnumItemInt(_self_, &(_12347_eval), _122359_e, _122341_prim, &(_12367_first), &(_12357_n));
	if (((*((*(_12367_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1bd83a161:;
				{
					_12357_n=_1aaa251a5_AsU64((*(*((*(_12367_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1bd83b8b0:;
		};
	};
	{
		auto expr = (*((*(_122359_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bd8473d2:;
		if (it != expr_end) {
			jule::Ptr<_1aaa48580_EnumItem> _124815_item = *it;
			{
				if (((_1aaa48959_AutoExpr(_124815_item.ptr()) && (_12357_n > 0LLU)) && ((jule::U64)(_12247_max - _12357_n) <= 0LLU))) {
					_1aab50533_pushErr(_self_, (*_124815_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1bd8473d2;
				};
				(_12357_n)++;
				_1bd83c938_checkEnumItemInt(_self_, &(_12347_eval), _122359_e, _122341_prim, &(_124815_item), &(_12357_n));
			}
			_iter_next_1bd8473d2:;
			++it;
			goto _iter_begin_1bd8473d2;
		}
		_iter_end_1bd8473d2:;
	};
}

inline void _1bd839094_checkEnumItemsInt1(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aac06bc2_Prim>* _122341_prim, jule::Ptr<_1aaa490db_Enum>* _122359_e) {
	jule::I64 _12247_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1bd84ac54:;
			{
				_12247_max=_1aaabc56b_MaxI(_1aac07046_Str((*(_122341_prim)).ptr()));
			}
		}
		_match_end_1bd84abdd:;
	};
	jule::Ptr<_1aabbad84_eval> _12347_eval = _1aab57408_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4));;
	jule::I64 _12357_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1aaa48580_EnumItem> _12367_first = (*((*(_122359_e))))._field_Items[0LL];;
	_1bd84cd77_checkEnumItemInt(_self_, &(_12347_eval), _122359_e, _122341_prim, &(_12367_first), &(_12357_n));
	if (((*((*(_12367_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1bd853564:;
				{
					_12357_n=_1aaa24e1e_AsI64((*(*((*(_12367_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1bd84d729:;
		};
	};
	{
		auto expr = (*((*(_122359_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bd857bd9:;
		if (it != expr_end) {
			jule::Ptr<_1aaa48580_EnumItem> _124815_item = *it;
			{
				if (((_1aaa48959_AutoExpr(_124815_item.ptr()) && (_12357_n > 0LL)) && ((_12247_max - _12357_n) <= 0LL))) {
					_1aab50533_pushErr(_self_, (*_124815_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1bd857bd9;
				};
				(_12357_n)++;
				_1bd84cd77_checkEnumItemInt(_self_, &(_12347_eval), _122359_e, _122341_prim, &(_124815_item), &(_12357_n));
			}
			_iter_next_1bd857bd9:;
			++it;
			goto _iter_begin_1bd857bd9;
		}
		_iter_end_1bd857bd9:;
	};
}



inline void _1aab5e300_checkEnumItemsInt(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa490db_Enum>* _125839_e) {
	jule::Ptr<_1aac06bc2_Prim> _12593_prim = _1aac00ec9_Prim((*((*((*(_125839_e))))._field_TypeSym))._field_Type.ptr());;
	{
		
		if (_1aaabe02e_IsSigInt((*(_12593_prim))._field_Kind)) {
			_case_begin_1bd845a73:;
			{
				_1bd839094_checkEnumItemsInt1(_self_, &(_12593_prim), _125839_e);
			}
		}
		else {
			_case_begin_1bd838516:;
			{
				_1bd838cb9_checkEnumItemsInt1(_self_, &(_12593_prim), _125839_e);
			}
		}
		_match_end_1bd83848e:;
	};
}



inline void _1aab5e5a8_checkEnumDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa490db_Enum>* _126835_e) {
	if (_1aa0da6d3_IsIgnoreIdent((*((*(_126835_e))))._field_Ident)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_126835_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1aab51248_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_126835_e))), &((*((*(_126835_e))))._field_Ident), false)) {
		_1aab50533_pushErr(_self_, (*((*(_126835_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_126835_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_126835_e))))._field_Items.len() == 0LL)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_126835_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_126835_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1bd85cc66_checkEnumItemsDup(_self_.ptr(), (*((*(_126835_e))))._field_Items);
	if (((*((*(_126835_e))))._field_TypeSym != nullptr)) {
		if ((!(_1aab55626_checkTypeSym(_self_, &((*((*(_126835_e))))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4))))) {
			return;;
		};
	} else {
		(*((*(_126835_e))))._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	jule::Ptr<_1aac06bc2_Prim> _12927_t = _1aac00ec9_Prim((*((*((*(_126835_e))))._field_TypeSym))._field_Type.ptr());;
	if ((_12927_t == nullptr)) {
		_1aab50533_pushErr(_self_, (*((*(_126835_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1aac0a18c_IsStr(_12927_t.ptr())) {
			_case_begin_1bd865268:;
			{
				_1aab5d651_checkEnumItemsStr(_self_, _126835_e);
			}
		}
		else if (_1aaabe606_IsInt(_1aac07046_Str(_12927_t.ptr()))) {
			_case_begin_1bd864e9e:;
			{
				_1aab5e300_checkEnumItemsInt(_self_, _126835_e);
			}
		}
		else {
			_case_begin_1bd864e38:;
			{
				_1aab50533_pushErr(_self_, (*((*(_126835_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bd864421:;
	};
}



inline void _1aab5e861_checkTypeEnumDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa4a7e6_TypeEnum>* _130939_e) {
	if (_1aa0da6d3_IsIgnoreIdent((*((*(_130939_e))))._field_Ident)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_130939_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1aab51248_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_130939_e))), &((*((*(_130939_e))))._field_Ident), false)) {
		_1aab50533_pushErr(_self_, (*((*(_130939_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_130939_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_130939_e))))._field_Items.len() == 0LL)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_130939_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_130939_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1bd86a966_checkEnumItemsDup(_self_.ptr(), (*((*(_130939_e))))._field_Items);
	{
		auto expr = &((*((*(_130939_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd866d19:;
		if (it != expr_end) {
			jule::Ptr<_1aaa4a21e_TypeEnumItem> _132315_item = *it;
			{
				if (((*(_132315_item))._field_TypeSym == nullptr)) {
					_1aab50533_pushErr(_self_, (*_132315_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1bd866d19;
				};
				jule::Bool _13284_ok = _1aab55626_checkTypeSym(_self_, &((*(_132315_item))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4));;
				if ((!(_13284_ok))) {
					goto _iter_next_1bd866d19;
				};
				jule::Ptr<_1aac06bc2_Prim> _13324_p = _1aac00ec9_Prim((*((*_132315_item.alloc)._field_TypeSym))._field_Type.ptr());;
				if (((_13324_p != nullptr) && _1aac0a423_IsAny(_13324_p))) {
					_1aab50533_pushErr(_self_, (*_132315_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1bd866d19:;
			++it;
			goto _iter_begin_1bd866d19;
		}
		_iter_end_1bd866d19:;
	};
	if (((*((*(_130939_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1aaa4a21e_TypeEnumItem> _13388_item = (*((*(_130939_e))))._field_Items[0LL];;
		_1aabecdb6_Type _13394_tk = _1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_130939_e)), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4)};;
		if ((((*((*(_13388_item))._field_TypeSym))._field_Type != nullptr) && _1aabed603_Equal((*((*(_13388_item))._field_TypeSym))._field_Type, ((jule::Ptr<_1aabecdb6_Type>)((&(_13394_tk))))))) {
			_1aab50533_pushErr(_self_, (*_13388_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aaa4ab6a_Str((*(_130939_e)).ptr()), &__jule_any_type5); __jule_collection; }));
		};
	};
}



inline jule::Bool _1aab5eae7_checkEnumDecls(jule::Ptr<_1aab4c62e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd8770e3:;
		if (it != expr_end) {
			jule::Ptr<_1aaa490db_Enum> _135015_e = *it;
			{
				_1aab5e5a8_checkEnumDecl(_self_, &(_135015_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bd8770e3:;
			++it;
			goto _iter_begin_1bd8770e3;
		}
		_iter_end_1bd8770e3:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aab5ed7d_checkTypeEnumDecls(jule::Ptr<_1aab4c62e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd878754:;
		if (it != expr_end) {
			jule::Ptr<_1aaa4a7e6_TypeEnum> _136215_e = *it;
			{
				_1aab5e861_checkTypeEnumDecl(_self_, &(_136215_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bd878754:;
			++it;
			goto _iter_begin_1bd878754;
		}
		_iter_end_1bd878754:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aab601be_checkDeclGenerics(_1aab4c62e_sema* _self_, jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>* _137234_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _137234_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd878d81:;
		if (it != expr_end) {
			jule::I32 _13747_i = it - expr->begin();
			jule::Ptr<_1aa10aa22_GenericDecl> *_137410_g = it;
			{
				if (_1aa0da6d3_IsIgnoreIdent((*((*(_137410_g))))._field_Ident)) {
					_1aab50533_pushErr(_self_, (*(*(_137410_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1bd878d81;
				};
				_julec_label_1bd87b229:;
				{
					auto expr = _137234_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd87b779:;
					if (it != expr_end) {
						jule::I32 _13838_j = it - expr->begin();
						jule::Ptr<_1aa10aa22_GenericDecl> *_138311_ct = it;
						{
							{
								
								if ((_13838_j >= _13747_i)) {
									_case_begin_1bd87c3d4:;
									{
										goto _iter_end_1bd87b779;
									}
								}
								else if (((*((*(_137410_g))))._field_Ident == (*((*(_138311_ct))))._field_Ident)) {
									_case_begin_1bd87c46c:;
									{
										_1aab50533_pushErr(_self_, (*(*(_137410_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137410_g)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1bd87b779;
									}
								}
								_match_end_1bd87c2c4:;
							};
						}
						_iter_next_1bd87b779:;
						++it;
						_13838_j++;
						goto _iter_begin_1bd87b779;
					}
					_iter_end_1bd87b779:;
				};
			}
			_iter_next_1bd878d81:;
			++it;
			_13747_i++;
			goto _iter_begin_1bd878d81;
		}
		_iter_end_1bd878d81:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab60510_checkFnDeclParamsDup(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa3b221_Fn>* _139937_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1bd87a59c:;
	{
		auto expr = &((*((*(_139937_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd87d10a:;
		if (it != expr_end) {
			jule::I32 _14027_i = it - expr->begin();
			jule::Ptr<_1aaa3974c_Param> *_140210_p = it;
			{
				{
					auto expr = &((*((*(_139937_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd880074:;
					if (it != expr_end) {
						jule::Ptr<_1aa10aa22_GenericDecl> *_140411_g = it;
						{
							if (((*((*(_140210_p))))._field_Ident == (*((*(_140411_g))))._field_Ident)) {
								__jule_func_result=false;
								_1aab50533_pushErr(_self_, (*(*(_140210_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_140210_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1bd87d10a;
							};
						}
						_iter_next_1bd880074:;
						++it;
						goto _iter_begin_1bd880074;
					}
					_iter_end_1bd880074:;
				};
				_julec_label_1bd882054:;
				{
					auto expr = &((*((*(_139937_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd88054c:;
					if (it != expr_end) {
						jule::I32 _14148_j = it - expr->begin();
						jule::Ptr<_1aaa3974c_Param> *_141411_jp = it;
						{
							{
								
								if ((_14148_j >= _14027_i)) {
									_case_begin_1bd882b59:;
									{
										goto _iter_end_1bd88054c;
									}
								}
								else if (_1aa0da6d3_IsIgnoreIdent((*((*(_140210_p))))._field_Ident) || _1aa0da6d3_IsIgnoreIdent((*((*(_141411_jp))))._field_Ident) || _1aa0da99c_IsAnonIdent((*(*(_140210_p)).alloc)._field_Ident) || _1aa0da99c_IsAnonIdent((*(*(_141411_jp)).alloc)._field_Ident)) {
									_case_begin_1bd882be2:;
									{
										goto _iter_end_1bd88054c;
									}
								}
								else if (((*(*(_140210_p)).alloc)._field_Ident == (*(*(_141411_jp)).alloc)._field_Ident)) {
									_case_begin_1bd882c58:;
									{
										__jule_func_result=false;
										_1aab50533_pushErr(_self_, (*(*(_140210_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_140210_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1bd87d10a;
									}
								}
								_match_end_1bd882a05:;
							};
						}
						_iter_next_1bd88054c:;
						++it;
						_14148_j++;
						goto _iter_begin_1bd88054c;
					}
					_iter_end_1bd88054c:;
				};
			}
			_iter_next_1bd87d10a:;
			++it;
			_14027_i++;
			goto _iter_begin_1bd87d10a;
		}
		_iter_end_1bd87d10a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab60851_checkFnDeclResultDup(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa3b221_Fn>* _143641_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1aaa3b6c7_IsVoid((*(_143641_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_143641_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd886036:;
		if (it != expr_end) {
			jule::I32 _14437_i = it - expr->begin();
			jule::Ptr<_1aa0d7ceb_Token> _144310_v = *it;
			{
				if ((_1aa0da6d3_IsIgnoreIdent((*(_144310_v))._field_Kind) || _1aa0da99c_IsAnonIdent((*(_144310_v))._field_Kind))) {
					goto _iter_next_1bd886036;
				};
				{
					auto expr = &((*((*(_143641_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd8876a8:;
					if (it != expr_end) {
						jule::Ptr<_1aa10aa22_GenericDecl> _144811_g = *it;
						{
							if (((*(_144310_v))._field_Kind == (*(_144811_g))._field_Ident)) {
								goto _julec_label_1bd886ac5;
							};
						}
						_iter_next_1bd8876a8:;
						++it;
						goto _iter_begin_1bd8876a8;
					}
					_iter_end_1bd8876a8:;
				};
				{
					auto expr = &((*((*(_143641_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd887a71:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3974c_Param> _145411_p = *it;
						{
							if (((*(_144310_v))._field_Kind == (*(_145411_p))._field_Ident)) {
								goto _julec_label_1bd886ac5;
							};
						}
						_iter_next_1bd887a71:;
						++it;
						goto _iter_begin_1bd887a71;
					}
					_iter_end_1bd887a71:;
				};
				_julec_label_1bd88929d:;
				{
					auto expr = &((*((*((*(_143641_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd889622:;
					if (it != expr_end) {
						jule::I32 _14628_j = it - expr->begin();
						jule::Ptr<_1aa0d7ceb_Token> _146211_jv = *it;
						{
							{
								
								if ((_14628_j >= _14437_i)) {
									_case_begin_1bd88a238:;
									{
										goto _iter_end_1bd889622;
									}
								}
								else if (((*(_146211_jv))._field_Kind == (*(_144310_v))._field_Kind)) {
									_case_begin_1bd88a2c1:;
									{
										goto _julec_label_1bd886ac5;
									}
								}
								_match_end_1bd88a128:;
							};
						}
						_iter_next_1bd889622:;
						++it;
						_14628_j++;
						goto _iter_begin_1bd889622;
					}
					_iter_end_1bd889622:;
				};
				goto _iter_next_1bd886036;
				_julec_label_1bd886ac5:;
				_1aab50533_pushErr(_self_, _144310_v, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_144310_v))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1bd886036:;
			++it;
			_14437_i++;
			goto _iter_begin_1bd886036;
		}
		_iter_end_1bd886036:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab60b92_checkFnVariadicParam(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _148142_f) {
	if (((*((*(_148142_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1aaa3974c_Param> _14857_param = (*((*(_148142_f))))._field_Params[((*((*(_148142_f))))._field_Params.len() - 1LL)];;
	if (((*(_14857_param))._field_Variadic && (*_14857_param.alloc)._field_Reference)) {
		_1aab50533_pushErr(_self_.ptr(), (*_14857_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1aab60e4a_checkFnDeclPrototype(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _149442_f) {
	if (((*((*(_149442_f))))._field_Exceptional && (*((*(_149442_f))))._field_Binded)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_149442_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_149442_f))))._field_Exceptional) {
		if (_1aaa3bbe4_IsEntryPoint((*(_149442_f)).ptr())) {
			_1aab50533_pushErr(_self_.ptr(), (*((*(_149442_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1aaa3be7a_IsInit((*(_149442_f)).ptr())) {
			_1aab50533_pushErr(_self_.ptr(), (*((*(_149442_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1aab601be_checkDeclGenerics(_self_.ptr(), &((*((*(_149442_f))))._field_Generics))))) {
			_case_begin_1bd896b3a:;
		}
		else if ((!(_1aab60510_checkFnDeclParamsDup(_self_.ptr(), _149442_f)))) {
			_case_begin_1bd896ba1:;
		}
		else if ((!(_1aab60851_checkFnDeclResultDup(_self_, _149442_f)))) {
			_case_begin_1bd896c17:;
		}
		else if ((!(_1aab60b92_checkFnVariadicParam(_self_, _149442_f)))) {
			_case_begin_1bd896c7d:;
		}
		_match_end_1bd89010b:;
	};
}



inline jule::Bool _1aab61401_catchTraitInheritCycle(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa46935_Trait> _151639_t1, jule::Ptr<_1aaa46935_Trait> _151655_t2, _1ace17078_Builder* _151672_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_151655_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd8992ad:;
		if (it != expr_end) {
			jule::Ptr<_1aac062ba_TypeSym> _151815_i = *it;
			{
				if (((*(_151815_i))._field_Type == nullptr)) {
					goto _iter_next_1bd8992ad;
				};
				jule::Ptr<_1aaa46935_Trait> _15228_t3 = _1aac02a69_Trait((*(_151815_i))._field_Type.ptr());;
				if ((_151639_t1 == _15228_t3)) {
					_1aab66181_pushCycleError(_self_.ptr(), &((*(_151655_t2))._field_Ident), &((*(_15228_t3))._field_Ident), _151672_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1aab61401_catchTraitInheritCycle(_self_, _151639_t1, _15228_t3, _151672_message)))) {
					_1aab66181_pushCycleError(_self_, &((*(_151655_t2))._field_Ident), &((*(_15228_t3))._field_Ident), _151672_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bd8992ad:;
			++it;
			goto _iter_begin_1bd8992ad;
		}
		_iter_end_1bd8992ad:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab61742__checkTraitDeclInherits(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa46935_Trait>* _153545_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_153545_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd89ca31:;
		if (it != expr_end) {
			jule::I32 _15378_i = it - expr->begin();
			jule::Ptr<_1aac062ba_TypeSym> _153715_it = *it;
			{
				if ((!(_1aab55626_checkTypeSym(_self_, &(_153715_it), jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4))))) {
					__jule_func_result=false;
					goto _iter_next_1bd89ca31;
				};
				jule::Ptr<_1aaa46935_Trait> _15428_t2 = _1aac02a69_Trait((*(_153715_it))._field_Type.ptr());;
				if ((_15428_t2 == nullptr)) {
					_1aab50533_pushErr(_self_.ptr(), (*((*_153715_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_153545_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_153715_it))._field_Type), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1bd89ca31;
				};
				{
					auto expr = &((*((*(_153545_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd8a1161:;
					if (it != expr_end) {
						jule::I32 _15488_j = it - expr->begin();
						jule::Ptr<_1aac062ba_TypeSym> _154811_it2 = *it;
						{
							if ((_15488_j >= _15378_i)) {
								goto _iter_end_1bd8a1161;
							};
							if ((((*(_154811_it2))._field_Type != nullptr) && _1aabed603_Equal((*(_153715_it))._field_Type, (*_154811_it2.alloc)._field_Type))) {
								_1aab50533_pushErr(_self_.ptr(), (*((*_153715_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_15428_t2))._field_Ident, &__jule_any_type5); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1bd8a1161;
							};
						}
						_iter_next_1bd8a1161:;
						++it;
						_15488_j++;
						goto _iter_begin_1bd8a1161;
					}
					_iter_end_1bd8a1161:;
				};
				if (((*(_153545_t)) == _15428_t2)) {
					_1aab50533_pushErr(_self_.ptr(), (*((*_153715_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_153545_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_1ace17078_Builder _15629_message = static__1ace178c5_New(64LL);;
					__jule_func_result=(__jule_func_result && _1aab61401_catchTraitInheritCycle(_self_, (*(_153545_t)), _15428_t2, &(_15629_message)));
					if ((_1ace18d6b_Len(&_15629_message) > 0LL)) {
						jule::Str _156510_errMsg = _1ace188d7_Str(&_15629_message);;
						_1ace18ad5_Clear(&_15629_message);
						_1aab66181_pushCycleError(_self_, &((*((*(_153545_t))))._field_Ident), &((*(_15428_t2))._field_Ident), &(_15629_message));
						_156510_errMsg+=_1ace188d7_Str(&_15629_message);
						_1aab50533_pushErr(_self_, (*((*_153715_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_156510_errMsg, &__jule_any_type5); __jule_collection; }));
					};
				};
			}
			_iter_next_1bd89ca31:;
			++it;
			_15378_i++;
			goto _iter_begin_1bd89ca31;
		}
		_iter_end_1bd89ca31:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1aab619ea_checkTraitDeclInherits(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa46935_Trait>* _157644_t) {
	{
		auto expr = &((*((*(_157644_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd89d2a1:;
		if (it != expr_end) {
			jule::I32 _15778_i = it - expr->begin();
			jule::Ptr<_1aac062ba_TypeSym> _157715_it = *it;
			{
				jule::Ptr<_1aaa46935_Trait> _15788_t1 = _1aac02a69_Trait((*(_157715_it))._field_Type.ptr());;
				{
					auto expr = &((*((*(_157644_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd8a9301:;
					if (it != expr_end) {
						jule::I32 _15799_j = it - expr->begin();
						jule::Ptr<_1aac062ba_TypeSym> _157916_it2 = *it;
						{
							if ((_15799_j == _15778_i)) {
								goto _iter_next_1bd8a9301;
							};
							jule::Ptr<_1aaa46935_Trait> _15839_t2 = _1aac02a69_Trait((*(_157916_it2))._field_Type);;
							{
								auto expr = &((*(_15788_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bd8aab2c:;
								if (it != expr_end) {
									jule::Ptr<_1aaa3b221_Fn> _158417_t1m = *it;
									{
										jule::Ptr<_1aaa3b221_Fn> _158510_t2m = _1aaa47617_FindMethod(_15839_t2.ptr(), (*(_158417_t1m))._field_Ident);;
										if ((_158510_t2m == nullptr)) {
											goto _iter_next_1bd8aab2c;
										};
										jule::Ptr<_1aaa3e2ce_FnIns> _15896_t1f = _1aab59a48_getTraitCheckFnKind(_self_, &(_158417_t1m));;
										jule::Ptr<_1aaa3e2ce_FnIns> _15906_t2f = _1aab59a48_getTraitCheckFnKind(_self_, &(_158510_t2m));;
										if ((!(_1aaa4027a_equalTrait(_15896_t1f, &(_15906_t2f))))) {
											_1aab50533_pushErr(_self_, (*((*_157715_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_157644_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_15839_t2.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1aaa411b0_GetKindStr(_15896_t1f, true), &__jule_any_type5); (*it++) = jule::Any(_1aaa411b0_GetKindStr(_15906_t2f.ptr(), true), &__jule_any_type5); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1bd8aab2c:;
									++it;
									goto _iter_begin_1bd8aab2c;
								}
								_iter_end_1bd8aab2c:;
							};
						}
						_iter_next_1bd8a9301:;
						++it;
						_15799_j++;
						goto _iter_begin_1bd8a9301;
					}
					_iter_end_1bd8a9301:;
				};
			}
			_iter_next_1bd89d2a1:;
			++it;
			_15778_i++;
			goto _iter_begin_1bd89d2a1;
		}
		_iter_end_1bd89d2a1:;
	};
}



inline void _1aab61ca3_checkTraitDeclMethod(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _160142_f) {
	if (_1aa0da6d3_IsIgnoreIdent((*((*(_160142_f))))._field_Ident)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_160142_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1aa0da99c_IsAnonIdent((*((*(_160142_f))))._field_Ident)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_160142_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_160142_f))))._field_sema=_self_;
	_1aab60e4a_checkFnDeclPrototype(_self_, _160142_f);
	jule::Ptr<_1aaa3e2ce_FnIns> _16097_ins = _1aaa3c9b4_instance((*(_160142_f)));;
	_1aab5b396_reloadFnInsTypes(_self_, _16097_ins);
	(*(_16097_ins))._field_reloaded=true;
	_1aaa3ccc2_appendInstance((*(_160142_f)).ptr(), &(_16097_ins));
}



inline void _1aab6205b_checkTraitDeclMethods(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa46935_Trait>* _161543_t) {
	{
		auto expr = &((*((*(_161543_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd8b3052:;
		if (it != expr_end) {
			jule::I32 _16168_i = it - expr->begin();
			jule::Ptr<_1aaa3b221_Fn> _161615_f = *it;
			{
				_1aab61ca3_checkTraitDeclMethod(_self_, &(_161615_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1aaa47c99_findMethodInherit((*(_161543_t)).ptr(), &((*(_161615_f))._field_Ident)) != nullptr)) {
					_1aab50533_pushErr(_self_, (*_161615_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_161615_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1bd8b3052;
				};
				_julec_label_1bd8b5d9b:;
				{
					auto expr = &((*((*(_161543_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd8b630d:;
					if (it != expr_end) {
						jule::I32 _16328_j = it - expr->begin();
						jule::Ptr<_1aaa3b221_Fn> _163211_jf = *it;
						{
							{
								
								if ((_16328_j >= _16168_i)) {
									_case_begin_1bd8b6e24:;
									{
										goto _iter_end_1bd8b630d;
									}
								}
								else if (((*(_161615_f))._field_Ident == (*(_163211_jf))._field_Ident)) {
									_case_begin_1bd8b6eac:;
									{
										_1aab50533_pushErr(_self_, (*_161615_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_161615_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1bd8b630d;
									}
								}
								_match_end_1bd8b6d14:;
							};
						}
						_iter_next_1bd8b630d:;
						++it;
						_16328_j++;
						goto _iter_begin_1bd8b630d;
					}
					_iter_end_1bd8b630d:;
				};
			}
			_iter_next_1bd8b3052:;
			++it;
			_16168_i++;
			goto _iter_begin_1bd8b3052;
		}
		_iter_end_1bd8b3052:;
	};
}



inline void _1aab62314_checkTraitDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa46935_Trait>* _165136_t) {
	if (_1aa0da6d3_IsIgnoreIdent((*((*(_165136_t))))._field_Ident)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_165136_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1aab51248_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_165136_t))), &((*((*(_165136_t))))._field_Ident), false)) {
		_1aab50533_pushErr(_self_, (*((*(_165136_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165136_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1aab619ea_checkTraitDeclInherits(_self_, _165136_t);
	_1aab6205b_checkTraitDeclMethods(_self_, _165136_t);
}



inline jule::Bool _1aab6259a_checkTraitDecls(jule::Ptr<_1aab4c62e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd8bbe18:;
		if (it != expr_end) {
			jule::Ptr<_1aaa46935_Trait> _166515_t = *it;
			{
				_1aab62314_checkTraitDecl(_self_, &(_166515_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bd8bbe18:;
			++it;
			goto _iter_begin_1bd8bbe18;
		}
		_iter_end_1bd8bbe18:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aab62996_checkTraitImplMethods(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa46935_Trait>* _167542_base, jule::Ptr<_1aaae9840_Impl>* _167557_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_167557_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd8bd8a9:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> *_167710_f = it;
			{
				if ((_1aaa47617_FindMethod((*(_167542_base)).ptr(), (*((*(_167710_f))))._field_Ident) == nullptr)) {
					_1aab50533_pushErr(_self_, (*(*(_167710_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_167542_base))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_167710_f)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1bd8bd8a9:;
			++it;
			goto _iter_begin_1bd8bd8a9;
		}
		_iter_end_1bd8bd8a9:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab62d92_implToStruct(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa966767_Struct>* _168634_dest, jule::Ptr<_1aaae9840_Impl>* _168654_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_168654_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd8c1192:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _169015_f = *it;
			{
				if (((_1aa9673c2_FindMethod((*(_168634_dest)).ptr(), (*(_169015_f))._field_Ident, (*_169015_f.alloc)._field_Statically) != nullptr) || (_1aa967a54_FindField((*(_168634_dest)).ptr(), (*(_169015_f))._field_Ident) != nullptr))) {
					_1aab50533_pushErr(_self_.ptr(), (*(_169015_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_168634_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_169015_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1bd8c1192;
				};
				if ((((*((*(_168634_dest))))._field_Generics.len() > 0LL) && ((*(_169015_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_169015_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bd8c4272:;
						if (it != expr_end) {
							jule::Ptr<_1aa10aa22_GenericDecl> _169812_fg = *it;
							{
								{
									auto expr = &((*((*(_168634_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bd8c4c67:;
									if (it != expr_end) {
										jule::Ptr<_1aa10aa22_GenericDecl> _169913_dg = *it;
										{
											if (((*(_169812_fg))._field_Ident == (*(_169913_dg))._field_Ident)) {
												_1aab50533_pushErr(_self_.ptr(), (*_169812_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1bd8c4c67:;
										++it;
										goto _iter_begin_1bd8c4c67;
									}
									_iter_end_1bd8c4c67:;
								};
							}
							_iter_next_1bd8c4272:;
							++it;
							goto _iter_begin_1bd8c4272;
						}
						_iter_end_1bd8c4272:;
					};
				};
				_1aab515ab_checkDirectives(_self_, &((*(_169015_f))._field_Directives), jule::Any(_169015_f, &__jule_any_type10));
				(*_169015_f.alloc)._field_sema=_self_;
				(*_169015_f.alloc)._field_Owner=(*(_168634_dest));
				{ jule::Slice<jule::Ptr<_1aaa3b221_Fn>> &__jule_push_dest = (*((*(_168634_dest))))._field_Methods; __jule_push_dest.push(_169015_f); };
			}
			_iter_next_1bd8c1192:;
			++it;
			goto _iter_begin_1bd8c1192;
		}
		_iter_end_1bd8c1192:;
	};
	{
		auto expr = &((*((*(_168654_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd8c1527:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _171515_v = *it;
			{
				;
				if (((_1aa9673c2_FindMethod((*(_168634_dest)).ptr(), (*(_171515_v))._field_Ident, true) != nullptr) || (_1aa967713_FindStatic((*(_168634_dest)).ptr(), (*(_171515_v))._field_Ident) != nullptr))) {
					_1aab50533_pushErr(_self_.ptr(), (*(_171515_v))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_168634_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_171515_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1bd8c1527;
				};
				{ jule::Slice<jule::Ptr<_1aab70795_Var>> &__jule_push_dest = (*((*(_168634_dest))))._field_Statics; __jule_push_dest.push(_171515_v); };
			}
			_iter_next_1bd8c1527:;
			++it;
			goto _iter_begin_1bd8c1527;
		}
		_iter_end_1bd8c1527:;
	};
	if (((*((*(_168634_dest))))._field_Instances.len() == 1LL)) {
		jule::Ptr<_1aa969605_StructIns> _17288_s = (*((*(_168634_dest))))._field_Instances[0LL];;
		if (((*(_17288_s))._field_Source != nullptr)) {
			(*_17288_s.alloc)._field_Methods=(*((*(_168634_dest))))._field_Methods;
			(*_17288_s.alloc)._field_Statics=(*((*(_168634_dest))))._field_Statics;
		};
	};
	return __jule_func_result;;
}



inline void _1aab6314a_implTrait(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaae9840_Impl>* _173931_decl) {
	jule::Ptr<_1aabecdb6_Type> _17407_baseT = _1aab56715_selectType(_self_, &((*((*(_173931_decl))))._field_Base));;
	if ((_17407_baseT == nullptr)) {
		return;;
	};
	jule::Ptr<_1aaa46935_Trait> _17447_base = _1aac02a69_Trait(_17407_baseT.ptr());;
	if ((_17447_base == nullptr)) {
		_1aab50533_pushErr(_self_, (*((*((*(_173931_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str(_17407_baseT), &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aabecdb6_Type> _17517_destT = _1aab56715_selectType(_self_, &((*((*(_173931_decl))))._field_Dest));;
	if ((_17517_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa969605_StructIns> _17557_destS = _1aac027d3_softStruct(_17517_destT.ptr());;
	if ((_17557_destS == nullptr)) {
		_1aab50533_pushErr(_self_, (*((*((*(_173931_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str(_17517_destT), &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa966767_Struct> _17627_dest = (*(_17557_destS))._field_Decl;;
	if ((_1aa0de52d_Dir((*((*(_17627_dest))._field_Token))._field_File.ptr()) != _1aa0de52d_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1aab50533_pushErr(_self_, (*((*((*(_173931_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1aab6d61c_pushImplemented(_17447_base, &(_17627_dest));
	_1aab6d908_pushImplements(&(_17627_dest), _17447_base);
	if (((*((*(_173931_decl))))._field_Statics.len() > 0LL)) {
		_1aab50533_pushErr(_self_, (*((*((*(_173931_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1aab62996_checkTraitImplMethods(_self_, &(_17447_base), _173931_decl)))) {
			_case_begin_1bd8d654d:;
		}
		else if ((!(_1aab62d92_implToStruct(_self_, &(_17627_dest), _173931_decl)))) {
			_case_begin_1bd8d65b4:;
		}
		_match_end_1bd8d5607:;
	};
}



inline void _1aab63403_implStruct(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaae9840_Impl>* _178232_decl) {
	jule::Ptr<_1aabecdb6_Type> _17837_destT = _1aab56715_selectType(_self_, &((*((*(_178232_decl))))._field_Dest));;
	if ((_17837_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1aa969605_StructIns> _17877_destS = _1aac027d3_softStruct(_17837_destT.ptr());;
	if ((_17877_destS == nullptr)) {
		_1aab50533_pushErr(_self_, (*((*((*(_178232_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str(_17837_destT), &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa966767_Struct> _17947_dest = (*(_17877_destS))._field_Decl;;
	if ((_1aa0de52d_Dir((*((*(_17947_dest))._field_Token))._field_File.ptr()) != _1aa0de52d_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1aab50533_pushErr(_self_, (*((*((*(_178232_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1aab62d92_implToStruct(_self_, &(_17947_dest), _178232_decl)))) {
			_case_begin_1bd8dc2e0:;
		}
		_match_end_1bd8da8c6:;
	};
}



inline void _1aab636ab_implImpl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaae9840_Impl>* _180630_decl) {
	{
		
		if (_1aaae9c3b_IsTraitImpl((*(_180630_decl)).ptr())) {
			_case_begin_1bd8dcd3a:;
			{
				_1aab6314a_implTrait(_self_, _180630_decl);
			}
		}
		else if (_1aaae9ec2_IsStructImpl((*(_180630_decl)).ptr())) {
			_case_begin_1bd8dcdd4:;
			{
				_1aab63403_implStruct(_self_, _180630_decl);
			}
		}
		_match_end_1bd8dcc19:;
	};
}



inline void _1aab63a1e_checkVarDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aab70795_Var>* _181734_decl, jule::Trait _181750_l) {
	if (_1aa0da6d3_IsIgnoreIdent((*((*(_181734_decl))))._field_Ident)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1aab70e38_IsTypeInferred((*(_181734_decl)).ptr())) {
		if ((!(_1aab70ba2_IsInitialized((*(_181734_decl)).ptr())))) {
			_1aab50533_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1aab1cd80_ReferenceStack> _18278_refers = static_cast<jule::Ptr<_1aab1cd80_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _181750_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4)) {
				_case_begin_1bd8e1e2c:;
				{
					_18278_refers=(*((*(_181734_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)) {
				_case_begin_1bd8e2081:;
				{
					_18278_refers=_1aab0892b_getOwnerRefers(_181750_l.cast_ptr<_1aab05032_scopeChecker>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));
				}
			}
			else {
				_case_begin_1bd8e201a:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:1834:5"));;
				}
			}
			_match_end_1bd8e1ea4:;
		};
		(*((*((*(_181734_decl))))._field_TypeSym))._field_Type=_1aab55acc_checkTypeSymRefers(_self_, &((*(*((*(_181734_decl))))._field_TypeSym.alloc)._field_Decl), _181750_l, _18278_refers);
	};
	if ((*((*(_181734_decl))))._field_Reference) {
		if ((*((*(_181734_decl))))._field_Constant) {
			_1aab50533_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_181734_decl))))._field_Statically) {
			_1aab50533_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1aab70ba2_IsInitialized((*(_181734_decl)).ptr())))) {
		if ((*((*(_181734_decl))))._field_Constant) {
			_1aab50533_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_181734_decl))))._field_Statically) {
			_1aab50533_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_181734_decl))))._field_Reference) {
			_1aab50533_pushErr(_self_.ptr(), (*((*(_181734_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1aab63cc7_checkGlobalVarDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aab70795_Var>* _186340_decl) {
	if (_1aab51248_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_186340_decl))), &((*((*(_186340_decl))))._field_Ident), (*((*(_186340_decl))))._field_Binded)) {
		_1aab50533_pushErr(_self_, (*((*(_186340_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_186340_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_186340_decl))))._field_Binded && (*((*(_186340_decl))))._field_Constant)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_186340_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_186340_decl))))._field_Binded)) && (!((*((*(_186340_decl))))._field_Constant))) && (!((*((*(_186340_decl))))._field_Statically)))) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_186340_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1aab515ab_checkDirectives(_self_, &((*((*(_186340_decl))))._field_Directives), jule::Any((*(_186340_decl)), &__jule_any_type7));
	_1aab63a1e_checkVarDecl(_self_, _186340_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4));
}



inline jule::Bool _1aab6405d_checkGlobalDecls(jule::Ptr<_1aab4c62e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd8edcc4:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _188115_decl = *it;
			{
				_1aab63cc7_checkGlobalVarDecl(_self_, &(_188115_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bd8edcc4:;
			++it;
			goto _iter_begin_1bd8edcc4;
		}
		_iter_end_1bd8edcc4:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aab64459_checkStructTraitImpl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa966767_Struct>* _189142_strct, jule::Ptr<_1aaa46935_Trait>* _189163_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_189163_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd900644:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _189215_tf = *it;
			{
				jule::Bool _18938_exist = false;;
				jule::Ptr<_1aaa3b221_Fn> _18948_sf = _1aa9673c2_FindMethod((*(_189142_strct)).ptr(), (*(_189215_tf))._field_Ident, (*_189215_tf.alloc)._field_Statically);;
				jule::Ptr<_1aaa3e2ce_FnIns> _18954_tfK = _1aab59a48_getTraitCheckFnKind(_self_, &(_189215_tf));;
				if ((_18948_sf != nullptr)) {
					jule::Ptr<_1aaa3e2ce_FnIns> _18979_sfK = _1aab59a48_getTraitCheckFnKind(_self_, &(_18948_sf));;
					if ((_18979_sfK != nullptr)) {
						_18938_exist=_1aaa4027a_equalTrait(_18954_tfK, &(_18979_sfK));
					};
				};
				if (_18938_exist) {
					jule::Ptr<_1aa0ecc34_Directive> _19035_d = _1aabe463d_findDirective(&((*(_18948_sf))._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_19035_d != nullptr)) {
						_1aab50533_pushErr(_self_, (*_19035_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1aab50533_pushErr(_self_, (*((*(_189142_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_189163_trt))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1aaa411b0_GetKindStr(_18954_tfK.ptr(), true), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1bd900644:;
			++it;
			goto _iter_begin_1bd900644;
		}
		_iter_end_1bd900644:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab6479a_checkStructImpls(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa966767_Struct>* _191738_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_191738_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd90697a:;
		if (it != expr_end) {
			jule::Ptr<_1aaa46935_Trait> _191915_trt = *it;
			{
				__jule_func_result=(_1aab64459_checkStructTraitImpl(_self_, _191738_s, &(_191915_trt)) && __jule_func_result);
			}
			_iter_next_1bd90697a:;
			++it;
			goto _iter_begin_1bd90697a;
		}
		_iter_end_1bd90697a:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aab64adb_checkStructFields(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa966767_Struct>* _192539_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_192539_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd907dcc:;
		if (it != expr_end) {
			jule::Ptr<_1aa965447_Field> _192715_f = *it;
			{
				(*(_192715_f))._field_Owner=(*(_192539_st));
				{
					auto expr = &((*((*(_192539_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd908b8b:;
					if (it != expr_end) {
						jule::Ptr<_1aa965447_Field> _192911_cf = *it;
						{
							if ((_192715_f == _192911_cf)) {
								goto _iter_end_1bd908b8b;
							} else if (((*_192715_f.alloc)._field_Ident == (*(_192911_cf))._field_Ident)) {
								_1aab50533_pushErr(_self_.ptr(), (*_192715_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_192715_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1bd908b8b:;
						++it;
						goto _iter_begin_1bd908b8b;
					}
					_iter_end_1bd908b8b:;
				};
			}
			_iter_next_1bd907dcc:;
			++it;
			goto _iter_begin_1bd907dcc;
		}
		_iter_end_1bd907dcc:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1aab64d94_checkStructDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa966767_Struct>* _194237_s) {
	if (_1aa0da6d3_IsIgnoreIdent((*((*(_194237_s))))._field_Ident)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_194237_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1aab51248_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_194237_s))), &((*((*(_194237_s))))._field_Ident), (*((*(_194237_s))))._field_Binded)) {
		_1aab50533_pushErr(_self_, (*((*(_194237_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_194237_s))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1aab515ab_checkDirectives(_self_, &((*((*(_194237_s))))._field_Directives), jule::Any((*(_194237_s)), &__jule_any_type9));
	{
		
		if ((!(_1aab601be_checkDeclGenerics(_self_, &((*((*(_194237_s))))._field_Generics))))) {
			_case_begin_1bd90dd5b:;
		}
		else if ((!(_1aab64adb_checkStructFields(_self_, _194237_s)))) {
			_case_begin_1bd90ddc2:;
		}
		else if ((!(_1aab6479a_checkStructImpls(_self_, _194237_s)))) {
			_case_begin_1bd90de38:;
		}
		else if ((!(_1aab659cc_checkFuncDeclsBy(_self_, &((*((*(_194237_s))))._field_Methods))))) {
			_case_begin_1bd90de9e:;
		}
		_match_end_1bd90dc07:;
	};
}



inline jule::Bool _1aab6512a_checkStructDecls(jule::Ptr<_1aab4c62e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9112c0:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _196215_s = *it;
			{
				_1aab64d94_checkStructDecl(_self_, &(_196215_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bd9112c0:;
			++it;
			goto _iter_begin_1bd9112c0;
		}
		_iter_end_1bd9112c0:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9118ca:;
		if (it != expr_end) {
			jule::Ptr<_1aabec1a1_TypeAlias> _196915_ta = *it;
			{
				if ((!((*(_196915_ta))._field_Strict))) {
					goto _iter_next_1bd9118ca;
				};
				jule::Ptr<_1aa966767_Struct> _19738_s = (*((*((*((*(_196915_ta))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)))._field_Decl;;
				{
					
					if ((!(_1aab6479a_checkStructImpls(_self_, &(_19738_s))))) {
						_case_begin_1bd914218:;
					}
					else if ((!(_1aab659cc_checkFuncDeclsBy(_self_, &((*(_19738_s))._field_Methods))))) {
						_case_begin_1bd9142b2:;
					}
					_match_end_1bd9140d6:;
				};
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bd9118ca:;
			++it;
			goto _iter_begin_1bd9118ca;
		}
		_iter_end_1bd9118ca:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aab653d3_checkAnonFuncDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _198639_f) {
	(*((*(_198639_f))))._field_sema=_self_;
	_1aab60e4a_checkFnDeclPrototype(_self_, _198639_f);
}



inline void _1aab6568b_checkFuncDecl(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _199135_f) {
	if (_1aa0da6d3_IsIgnoreIdent((*((*(_199135_f))))._field_Ident)) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_199135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1aaa3c211_IsAnon((*(_199135_f)).ptr())) {
		_1aab50533_pushErr(_self_.ptr(), (*((*(_199135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1aab515ab_checkDirectives(_self_, &((*((*(_199135_f))))._field_Directives), jule::Any((*(_199135_f)), &__jule_any_type10));
	_1aab653d3_checkAnonFuncDecl(_self_, _199135_f);
	if ((((*((*(_199135_f))))._field_Owner == nullptr) && _1aab51248_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_199135_f))), &((*((*(_199135_f))))._field_Ident), (*((*(_199135_f))))._field_Binded))) {
		if ((*((*(_199135_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1aaa3b221_Fn> _20035_init = _1aab4dbe6_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_20035_init != nullptr)) {
				return;;
			};
		};
		_1aab50533_pushErr(_self_, (*((*(_199135_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_199135_f))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1aab659cc_checkFuncDeclsBy(jule::Ptr<_1aab4c62e_sema> _self_, jule::Slice<jule::Ptr<_1aaa3b221_Fn>>* _201338_funcs) {
	{
		auto expr = _201338_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd91bb9e:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _201415_f = *it;
			{
				_1aab6568b_checkFuncDecl(_self_, &(_201415_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1bd91bb9e:;
			++it;
			goto _iter_begin_1bd91bb9e;
		}
		_iter_end_1bd91bb9e:;
	};
	return true;;
}



inline jule::Bool _1aab65c63_checkFuncDecls(jule::Ptr<_1aab4c62e_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1aab659cc_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1aab66181_pushCycleError(_1aab4c62e_sema* _self_, jule::Str* _202927_st1, jule::Str* _202938_st2, _1ace17078_Builder* _202953_message) {
	;
	jule::Str _20313_refersTo = _1ace26829_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_202927_st1)), &__jule_any_type5); (*it++) = jule::Any((*(_202938_st2)), &__jule_any_type5); __jule_collection; }));;
	jule::Str _20323_m = _1ace188d7_Str(_202953_message);;
	({
		auto except = _1ace18057_WriteStr(_202953_message, _1bb0851a5_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:2033:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_202953_message, _20313_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:2034:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(_202953_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:2035:3"));
	});
	({
		auto except = _1ace18057_WriteStr(_202953_message, _20323_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:2036:3"));
		(except.result);
	});
}



inline void _1aab66835_checkPackageDecls(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd921d08:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _205615_f = *it;
			{
				_1aab50115_setCurrentFile(_self_.ptr(), _205615_f);
				if ((!(_1aab5d0e0_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bd921d08:;
			++it;
			goto _iter_begin_1bd921d08;
		}
		_iter_end_1bd921d08:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd923c72:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _206315_f = *it;
			{
				_1aab50115_setCurrentFile(_self_, _206315_f);
				if ((!(_1aab6259a_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bd923c72:;
			++it;
			goto _iter_begin_1bd923c72;
		}
		_iter_end_1bd923c72:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd924c0c:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _207015_f = *it;
			{
				_1aab50115_setCurrentFile(_self_, _207015_f);
				if ((!(_1aab6405d_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1bd924c0c:;
			++it;
			goto _iter_begin_1bd924c0c;
		}
		_iter_end_1bd924c0c:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd925c85:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _207715_f = *it;
			{
				_1aab50115_setCurrentFile(_self_, _207715_f);
				{
					
					if ((!(_1aab65c63_checkFuncDecls(_self_)))) {
						_case_begin_1bd9274a1:;
					}
					else if ((!(_1aab6512a_checkStructDecls(_self_)))) {
						_case_begin_1bd92754a:;
					}
					else {
						_case_begin_1bd926deb:;
						{
							goto _iter_next_1bd925c85;
						}
					}
					_match_end_1bd927429:;
				};
				return;;
			}
			_iter_next_1bd925c85:;
			++it;
			goto _iter_begin_1bd925c85;
		}
		_iter_end_1bd925c85:;
	};
}



inline void _1aab66b98_checkDataForTypeInference(_1aab4c62e_sema* _self_, jule::Ptr<_1aabb8db5_Data>* _208942_d, jule::Ptr<_1aa0d7ceb_Token>* _208953_errToken) {
	{
		
		if (_1aabb92d3_IsNil((*(_208942_d)).ptr())) {
			_case_begin_1bd928590:;
			{
				_1aab50533_pushErr(_self_, (*(_208953_errToken)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1aabb9569_IsVoid((*(_208942_d)).ptr())) {
			_case_begin_1bd928639:;
			{
				_1aab50533_pushErr(_self_, (*(_208953_errToken)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_208942_d))))._field_Type))._field_Variadic) {
			_case_begin_1bd9286a0:;
			{
				_1aab50533_pushErr(_self_, (*(_208953_errToken)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bd92846e:;
	};
}



inline void _1aab66e51_checkVarValue(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aab70795_Var>* _210135_v) {
	if (_1aab70e38_IsTypeInferred((*(_210135_v)).ptr())) {
		(*((*(_210135_v))))._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=(*((*((*((*(_210135_v))))._field_Value))._field_Data))._field_Type});
		_1aab66b98_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_210135_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_210135_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1aab5c2a9_checkValidityForInitExpr(_self_, (*((*(_210135_v))))._field_Mutable, (*((*(_210135_v))))._field_Reference, &((*((*((*(_210135_v))))._field_TypeSym))._field_Type), &((*(*((*(_210135_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_210135_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1aac0d4e2_Arr> _21148_arr = _1aac01c99_Arr((*((*((*(_210135_v))))._field_TypeSym))._field_Type.ptr());;
		if ((_21148_arr != nullptr)) {
			if ((*_21148_arr.alloc)._field_Auto) {
				jule::Ptr<_1aac0d4e2_Arr> _21176_dataArr = _1aac01c99_Arr((*((*((*((*(_210135_v))))._field_Value))._field_Data))._field_Type.ptr());;
				if ((_21176_dataArr != nullptr)) {
					(*_21148_arr.alloc)._field_N=(*_21176_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1aab57a24_checkAssignType(_self_, (*((*(_210135_v))))._field_Reference, &((*(*((*(_210135_v))))._field_TypeSym.alloc)._field_Type), &((*((*((*(_210135_v))))._field_Value))._field_Data), (*((*(*((*(_210135_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_210135_v))))._field_Refers)) {
			_1aab5c2a9_checkValidityForInitExpr(_self_, (*((*(_210135_v))))._field_Mutable, (*((*(_210135_v))))._field_Reference, &((*(*((*(_210135_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_210135_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_210135_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if ((*((*(_210135_v))))._field_Constant) {
		if (((!(_1aabb9800_IsConst((*((*((*(_210135_v))))._field_Value))._field_Data.ptr()))) && (!(_1aac0331c_comptime((*(*((*((*(_210135_v))))._field_Value))._field_Data.alloc)._field_Type.ptr()))))) {
			_1aab50533_pushErr(_self_.ptr(), (*((*(*((*(_210135_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_210135_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_210135_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1aac03086_Tup((*((*((*(_210135_v))))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
		(*(*((*(_210135_v))))._field_TypeSym.alloc)._field_Type=nullptr;
	};
}



inline void _1aab672b4_evalVarValue(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aab70795_Var>* _215034_decl, jule::Trait _215050_l) {
	if ((!(_1aab70ba2_IsInitialized((*(_215034_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1aabbad84_eval> _21557_eval = static_cast<jule::Ptr<_1aabbad84_eval>>(nullptr);;
	if (((*((*(_215034_decl))))._field_TypeSym != nullptr)) {
		_21557_eval=_1aab56bbb_evalpd(_self_, _215050_l, (*(*((*(_215034_decl))))._field_TypeSym.alloc)._field_Type, (*(_215034_decl)));
	} else {
		_21557_eval=_1aab56bbb_evalpd(_self_, _215050_l, nullptr, (*(_215034_decl)));
	};
	(*(_21557_eval))._field_target._field_mutable=(*((*(_215034_decl))))._field_Mutable;
	(*((*((*(_215034_decl))))._field_Value))._field_Data=_1aabdad3d_evalExpr(_21557_eval, (*(*((*(_215034_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1aab67627_checkVar(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aab70795_Var>* _216730_decl, jule::Trait _216746_l) {
	(*((*(_216730_decl))))._field_Checked=true;
	_1aab672b4_evalVarValue(_self_, _216730_decl, _216746_l);
	if (((*((*((*(_216730_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1aab66e51_checkVarValue(_self_, _216730_decl);
}



inline void _1aab67825_checkGlobals(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd93e09a:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _217815_decl = *it;
			{
				if (((*(_217815_decl))._field_Binded || (*(_217815_decl))._field_Used)) {
					goto _iter_next_1bd93e09a;
				};
				_1aab67627_checkVar(_self_, &(_217815_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4));
			}
			_iter_next_1bd93e09a:;
			++it;
			goto _iter_begin_1bd93e09a;
		}
		_iter_end_1bd93e09a:;
	};
}



inline jule::Ptr<_1aaa3e2ce_FnIns> _1aab67c21_readyToCheckFn(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa969605_StructIns>* _219136_s, jule::Ptr<_1aaa3b221_Fn>* _219156_f) {
	jule::Ptr<_1aaa3e2ce_FnIns> _21927_ins = _1aaa3c9b4_instance((*(_219156_f)));;
	if (((*((*(_219156_f))))._field_Instances.len() != 0LL)) {
		return _21927_ins;;
	};
	(*(_21927_ins))._field_Owner=(*(_219136_s));
	_1aaa3ccc2_appendInstance((*(_219156_f)).ptr(), &(_21927_ins));
	(*_21927_ins.alloc)._field_reloaded=true;
	if (_1aab5b396_reloadFnInsTypes(_self_, _21927_ins)) {
		return _21927_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1aab6811c_checkGenericFn(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _220736_f, jule::Ptr<_1aa0d7ceb_Token>* _220752_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1aab5b396_reloadFnInsTypes(_self_, (*(_220736_f)));
	(*((*(_220736_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _22137_existInstance = _1aaa3ccc2_appendInstance((*((*(_220736_f))))._field_Decl.ptr(), _220736_f);;
	if ((!(_1aab59eee_checkConstraintsFn(_self_, _220736_f, _220752_et, _22137_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_22137_existInstance != nullptr)) {
		(*(_220736_f))=_22137_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1aab69e65_checkFnInsCaller(_self_, _220736_f, (*(_220752_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1aab68480_checkTypeMethod(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa969605_StructIns>* _223037_s, jule::Ptr<_1aaa3b221_Fn>* _223057_f) {
	if (((*((*(_223057_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _22357_ins = (*((*(_223057_f))))._field_Instances[0LL];;
	if (((*((*(_22357_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1aab6a21d_checkFnIns(_self_, &(_22357_ins));
}



inline jule::Bool _1aab6887b_checkStructEnv(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa969605_StructIns>* _224636_s, jule::Ptr<_1aa0d7ceb_Token> _224655_errorToken) {
	jule::Bool __jule_func_result = false;
	_1aac10ea6_typeChecker _22477_tc = _1aac10ea6_typeChecker{._field_s=(*((*((*(_224636_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_224636_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4), ._field_lookup=jule::Trait((*(*((*(_224636_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4), ._field_referencer=jule::new_ptr<_1aac0eeb6_referencer>(_1aac0eeb6_referencer{._field_ident=(*(*((*(_224636_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_224636_s))))._field_Decl, &__jule_any_type9), ._field_refs=nullptr}), ._field_refers=(*((*(_224636_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1aabec1a1_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_224636_s))))._field_Generics.len() > 0LL)) {
		_22477_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>::alloc(0LL, (*((*(_224636_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aabec1a1_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_224636_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd94b3c6:;
			if (it != expr_end) {
				jule::I32 _22609_i = it - expr->begin();
				jule::Ptr<_1aabeb4d0_InsGeneric> _226016_g = *it;
				{
					jule::Ptr<_1aa10aa22_GenericDecl> _22619_decl = (*(*((*(_224636_s))))._field_Decl.alloc)._field_Generics[_22609_i];;
					{ jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> &__jule_push_dest = _22477_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1aabec1a1_TypeAlias>(_1aabec1a1_TypeAlias{._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_Strict=false, ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_22619_decl.alloc)._field_Token, ._field_Ident=(*(_22619_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=(*(_226016_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1bd94b3c6:;
				++it;
				_22609_i++;
				goto _iter_begin_1bd94b3c6;
			}
			_iter_end_1bd94b3c6:;
		};
	};
	jule::Ptr<_1aaa42524_SymTab> _22707_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1aab50115_setCurrentFile(_self_, _22707_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_224636_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1aaa42524_SymTab> _22748_file = _1aab4ad36_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_224636_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_22748_file != nullptr)) {
			_1aab50115_setCurrentFile(_self_, _22748_file);
		};
	};
	if (((*((*(_224636_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1aaae7541_constraintChecker> _22818_cc = _1aab5522a_constraintChecker(_self_);;
		(*(_22818_cc))._field_et=_224655_errorToken;
		(*_22818_cc.alloc)._field_si=(*(_224636_s));
		(*_22818_cc.alloc)._field_genericsA=_22477_tc._field_useGenerics;
		(*_22818_cc.alloc)._field_uniq=true;
		if ((!(_1aaae84a9_check(_22818_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_224636_s))))._field_Statics.len() > 0LL)) {
		jule::I32 _22948_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_22477_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_224636_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd954d3b:;
			if (it != expr_end) {
				jule::Ptr<_1aab70795_Var> _229616_v = *it;
				{
					_1aab63a1e_checkVarDecl(_self_, &(_229616_v), jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4));
					_1aab67627_checkVar(_self_, &(_229616_v), jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _22948_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1bd954d3b:;
				++it;
				goto _iter_begin_1bd954d3b;
			}
			_iter_end_1bd954d3b:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_22477_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1aabbad84_eval> _23077_eval = _1aab57408_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4));;
	(*((*(_224636_s))))._field_Comparable=(!((*(*((*(_224636_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_224636_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9587ac:;
		if (it != expr_end) {
			jule::Ptr<_1aa9689cd_FieldIns> _230915_f = *it;
			{
				jule::Ptr<_1aabecdb6_Type> _23108_kind = _1aac1d8ed_checkDecl(&_22477_tc, &((*((*((*(_230915_f))._field_Decl))._field_TypeSym))._field_Decl));;
				__jule_func_result=((_23108_kind != nullptr) && __jule_func_result);
				if ((_23108_kind == nullptr)) {
					if (((_self_ != (*(*((*(_224636_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_224636_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_224636_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_224636_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1bd9587ac;
				};
				(*_230915_f.alloc)._field_Type=_23108_kind;
				(*((*(_224636_s))))._field_Mutable=((*((*(_224636_s))))._field_Mutable || ((!((*(*(_230915_f))._field_Decl.alloc)._field_Mutable)) && _1aac00209_Mutable((*_230915_f.alloc)._field_Type.ptr())));
				(*((*(_224636_s))))._field_Comparable=((*((*(_224636_s))))._field_Comparable && _1aabeee73_Comparable((*_230915_f.alloc)._field_Type.ptr()));
				if (((*(*(_230915_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1bd9587ac;
				};
				(*(_23077_eval))._field_prefix=(*_230915_f.alloc)._field_Type;
				(*_23077_eval.alloc)._field_field=_230915_f;
				(*_23077_eval.alloc)._field_target._field_mutable=true;
				(*_230915_f.alloc)._field_Default=_1aabdad3d_evalExpr(_23077_eval, (*(*(_230915_f))._field_Decl.alloc)._field_Default);
				if (((*_230915_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1bd9587ac;
				};
				;
				_1aab57a24_checkAssignType(_self_, false, &((*_230915_f.alloc)._field_Type), &((*_230915_f.alloc)._field_Default), (*((*(*(_230915_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_224636_s))))._field_Refers);
			}
			_iter_next_1bd9587ac:;
			++it;
			goto _iter_begin_1bd9587ac;
		}
		_iter_end_1bd9587ac:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab68c77_precheckStructIns(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa969605_StructIns>* _234439_s, jule::Ptr<_1aa0d7ceb_Token> _234458_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1aab6887b_checkStructEnv(_self_, _234439_s, _234458_errorToken);
	if (__jule_func_result) {
		if (((*((*(_234439_s))))._field_Comparable && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
			jule::Ptr<_1aaa3b221_Fn> _23529_decl = _1aa5ce776_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
			{
				auto expr = &((*((*(_234439_s))))._field_Fields);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bd964b09:;
				if (it != expr_end) {
					jule::Ptr<_1aa9689cd_FieldIns> _235317_field = *it;
					{
						jule::Ptr<_1aac0d4e2_Arr> _235410_arr = _1aac01c99_Arr((*(_235317_field))._field_Type.ptr());;
						if ((_235410_arr == nullptr)) {
							goto _iter_next_1bd964b09;
						};
						jule::Ptr<_1aaa3e2ce_FnIns> _235810_f = _1aaa3c72d_instanceForce(_23529_decl);;
						(*(_235810_f))._field_Generics=jule::append((*_235810_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aabeb4d0_InsGeneric>(_1aabeb4d0_InsGeneric{._field_Type=(*(_235410_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr)}); __jule_collection; }));
						jule::Bool _23606_gok;
						({
							__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aab6811c_checkGenericFn(_self_, &(_235810_f), &((*((*_235317_field.alloc)._field_Decl))._field_Token));
							_23606_gok = __jule_assign_result.__jule_result_arg0;
						});
						if ((!(_23606_gok))) {
							__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/sema.jule:2362:7"));;
						};
						_1aab1dbd8_Push((*((*(_234439_s))))._field_Refers.ptr(), jule::Any(_235810_f, &__jule_any_type65));
					}
					_iter_next_1bd964b09:;
					++it;
					goto _iter_begin_1bd964b09;
				}
				_iter_end_1bd964b09:;
			};
		};
	};
	{
		auto expr = &((*((*(_234439_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9636eb:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _237215_f = *it;
			{
				if (((*(_237215_f))._field_Generics.len() == 0LL)) {
					if ((_1aab67c21_readyToCheckFn(_self_, _234439_s, &(_237215_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1bd9636eb:;
			++it;
			goto _iter_begin_1bd9636eb;
		}
		_iter_end_1bd9636eb:;
	};
	return __jule_func_result;;
}



inline void _1aab69030_checkStructIns(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa969605_StructIns>* _238236_s) {
	{
		auto expr = &((*((*(_238236_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd96a03d:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _238315_f = *it;
			{
				_1aab68480_checkTypeMethod(_self_, _238236_s, &(_238315_f));
			}
			_iter_next_1bd96a03d:;
			++it;
			goto _iter_begin_1bd96a03d;
		}
		_iter_end_1bd96a03d:;
	};
}



inline void _1aab692d8_checkTypeStruct(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aa966767_Struct>* _238837_s) {
	if ((*((*(_238837_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_238837_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_238837_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1aa969605_StructIns> _23998_ins = _1aa966b85_instance((*(_238837_s)));;
		(*(_23998_ins))._field_Checked=true;
		_1aa966ec6_appendInstance((*(_238837_s)).ptr(), &(_23998_ins));
		jule::Bool _24024_ok = _1aab68c77_precheckStructIns(_self_, &(_23998_ins), nullptr);;
		if ((!(_24024_ok))) {
			return;;
		};
	};
	{
		auto expr = &((*((*(_238837_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd96bb88:;
		if (it != expr_end) {
			jule::Ptr<_1aa969605_StructIns> _240815_ins = *it;
			{
				_1aab69030_checkStructIns(_self_, &(_240815_ins));
			}
			_iter_next_1bd96bb88:;
			++it;
			goto _iter_begin_1bd96bb88;
		}
		_iter_end_1bd96bb88:;
	};
}



inline void _1aab694d6_checkStructTypes(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd96e6e6:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _241415_s = *it;
			{
				_1aab692d8_checkTypeStruct(_self_, &(_241415_s));
			}
			_iter_next_1bd96e6e6:;
			++it;
			goto _iter_begin_1bd96e6e6;
		}
		_iter_end_1bd96e6e6:;
	};
}



inline void _1aab6978e_checkRets(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _241930_f) {
	if (_1aaa3b6c7_IsVoid((*((*(_241930_f))))._field_Decl.ptr())) {
		return;;
	};
	_1aab6bbd1_missingRetChecker _24233_mrc = static__1aab6c0cc_new();;
	jule::Bool _24243_ok = _1aab6d2a9_check(&_24233_mrc, (*((*(_241930_f))))._field_Scope);;
	if ((!(_24243_ok))) {
		_1aab50533_pushErr(_self_, (*((*((*(_241930_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1aab69b02_checkFnInsSc(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _243033_f, jule::Ptr<_1aab05032_scopeChecker>* _243049_sc) {
	_1aab4a396_appendRetVars(&((*((*((*(_243049_sc))))._field_table))._field_Vars), _243033_f);
	_1aab4a6c6_appendParamVars(&((*(*((*(_243049_sc))))._field_table.alloc)._field_Vars), _243033_f);
	_1aab4a9b2_appendGenericTypeAliases(&((*(*((*(_243049_sc))))._field_table.alloc)._field_TypeAliases), _243033_f);
	_1aab170ee_check((*(_243049_sc)), &((*((*((*(_243033_f))))._field_Decl))._field_Scope), &((*((*(_243033_f))))._field_Scope));
	if ((!(_1aab07b39_stopped((*(_243049_sc)).ptr())))) {
		_1aab6978e_checkRets(_self_, _243033_f);
	};
}



inline void _1aab69e65_checkFnInsCaller(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _244338_f, jule::Ptr<_1aa0d7ceb_Token> _244353_caller) {
	if ((*((*((*(_244338_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1aaa42524_SymTab> _24487_old = (*((*((*((*(_244338_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1aab50115_setCurrentFile((*((*((*(_244338_f))))._field_Decl))._field_sema, _24487_old);
	});;
	jule::Ptr<_1aaa42524_SymTab> _24507_file = _1aab4ad36_findFile(&((*(*((*((*(_244338_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_244338_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_24507_file != nullptr)) {
		_1aab50115_setCurrentFile((*((*((*(_244338_f))))._field_Decl))._field_sema, _24507_file);
	};
	jule::Ptr<_1aab05032_scopeChecker> _24557_sc = _1aaaebc71_newScopeChecker(&((*(*((*(_244338_f))))._field_Decl.alloc)._field_sema), (*(_244338_f)));;
	(*(_24557_sc))._field_calledFrom=_244353_caller;
	_1aab69b02_checkFnInsSc(_self_.ptr(), _244338_f, &(_24557_sc));
	if (((*(*((*(_244338_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*((*(*((*(_244338_f))))._field_Decl.alloc)._field_sema))._field_errors);
		(*(*((*((*(_244338_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1aab6a21d_checkFnIns(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _246532_f) {
	_1aab69e65_checkFnInsCaller(_self_, _246532_f, nullptr);
}



inline void _1aab6a4c6_checkFunc(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _246931_f) {
	if ((*((*(_246931_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_246931_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_246931_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9801eb:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3e2ce_FnIns> _247915_ins = *it;
			{
				_1aab6a21d_checkFnIns(_self_, &(_247915_ins));
			}
			_iter_next_1bd9801eb:;
			++it;
			goto _iter_begin_1bd9801eb;
		}
		_iter_end_1bd9801eb:;
	};
}



inline void _1aab6a77e_checkTestFn(_1aab4c62e_sema* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _248432_f) {
	if ((*((*((*(_248432_f))))._field_Decl))._field_Public) {
		_1aab50533_pushErr(_self_, (*(*((*(_248432_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_248432_f))))._field_Decl))._field_Unsafety || (!(_1aaa3b6c7_IsVoid((*((*(_248432_f))))._field_Decl.ptr())))) || ((*((*((*(_248432_f))))._field_Decl))._field_Generics.len() != 0LL)) || ((*((*(_248432_f))))._field_Params.len() != 1LL)) || (*((*((*((*(_248432_f))))._field_Decl))._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_248432_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1aab50533_pushErr(_self_, (*((*((*(_248432_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aac0a6ed_Sptr> _25027_sptr = _1aac01260_Sptr((*((*((*(_248432_f))))._field_Params[0LL]))._field_Type.ptr());;
	if ((_25027_sptr == nullptr)) {
		_1aab50533_pushErr(_self_, (*((*((*(_248432_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	{
		auto &_match_expr{ (*((*(_25027_sptr))._field_Elem))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
			_case_begin_1bd987d19:;
			{
				jule::Ptr<_1aa969605_StructIns> _25114_s = (*((*(_25027_sptr))._field_Elem))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);;
				if ((((*(_25114_s))._field_Source == nullptr) && _1aab34b55_isStdPackage(&((*((*((*((*_25114_s.alloc)._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))) {
					return;;
				};
			}
		}
		_match_end_1bd987c92:;
	};
	_1aab50533_pushErr(_self_, (*((*((*(_248432_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
	_1aab50896_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
}



inline void _1aab6aa37_precheckFunc(jule::Ptr<_1aab4c62e_sema> _self_, jule::Ptr<_1aaa3b221_Fn>* _252034_f) {
	if ((*((*(_252034_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_252034_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_252034_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1aaa3e2ce_FnIns> _25318_ins = _1aaa3c72d_instanceForce((*(_252034_f)));;
		{ jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>> &__jule_push_dest = (*((*(_252034_f))))._field_Instances; __jule_push_dest.push(_25318_ins); };
		jule::Bool _25334_ok = _1aab5b396_reloadFnInsTypes(_self_, _25318_ins);;
		(*(_25318_ins))._field_reloaded=true;
		if ((_25334_ok && _1aac1ee82_hasDirective(&((*((*(_252034_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1aab6a77e_checkTestFn(_self_, &(_25318_ins));
		};
	};
}



inline void _1aab6ac35_precheckFuncs(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd98e6e4:;
		if (it != expr_end) {
			jule::Ptr<_1aaa46935_Trait> _254415_decl = *it;
			{
				{
					auto expr = &((*(_254415_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd9901d9:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3b221_Fn> _254516_m = *it;
						{
							_1aab6aa37_precheckFunc(_self_, &(_254516_m));
						}
						_iter_next_1bd9901d9:;
						++it;
						goto _iter_begin_1bd9901d9;
					}
					_iter_end_1bd9901d9:;
				};
			}
			_iter_next_1bd98e6e4:;
			++it;
			goto _iter_begin_1bd98e6e4;
		}
		_iter_end_1bd98e6e4:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd98ec77:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _254915_decl = *it;
			{
				_1aab6aa37_precheckFunc(_self_, &(_254915_decl));
			}
			_iter_next_1bd98ec77:;
			++it;
			goto _iter_begin_1bd98ec77;
		}
		_iter_end_1bd98ec77:;
	};
}



inline void _1aab6ae33_checkFuncs(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9918e4:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _255615_decl = *it;
			{
				_1aab6a4c6_checkFunc(_self_, &(_255615_decl));
			}
			_iter_next_1bd9918e4:;
			++it;
			goto _iter_begin_1bd9918e4;
		}
		_iter_end_1bd9918e4:;
	};
}



inline void _1aab6b131_checkPackageTypes(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd992681:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _256415_f = *it;
			{
				_1aab50115_setCurrentFile(_self_.ptr(), _256415_f);
				_1aab67825_checkGlobals(_self_);
				_1aab6ac35_precheckFuncs(_self_);
			}
			_iter_next_1bd992681:;
			++it;
			goto _iter_begin_1bd992681;
		}
		_iter_end_1bd992681:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd993de1:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _257415_f = *it;
			{
				_1aab50115_setCurrentFile(_self_, _257415_f);
				{
					auto expr = &((*((*_self_.alloc)._field_file))._field_TypeAliases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd994e58:;
					if (it != expr_end) {
						jule::Ptr<_1aabec1a1_TypeAlias> _257616_ta = *it;
						{
							if ((*(_257616_ta))._field_Strict) {
								jule::Ptr<_1aa969605_StructIns> _257810_s = (*((*((*_257616_ta.alloc)._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);;
								(*(_257810_s))._field_Checked=true;
								jule::Bool _25806_ok = _1aab68c77_precheckStructIns(_self_, &(_257810_s), nullptr);;
								if (_25806_ok) {
									_1aab692d8_checkTypeStruct(_self_, &((*_257810_s.alloc)._field_Decl));
								};
							};
						}
						_iter_next_1bd994e58:;
						++it;
						goto _iter_begin_1bd994e58;
					}
					_iter_end_1bd994e58:;
				};
			}
			_iter_next_1bd993de1:;
			++it;
			goto _iter_begin_1bd993de1;
		}
		_iter_end_1bd993de1:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9959b4:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _258815_f = *it;
			{
				_1aab50115_setCurrentFile(_self_, _258815_f);
				_1aab6ae33_checkFuncs(_self_);
				_1aab694d6_checkStructTypes(_self_);
			}
			_iter_next_1bd9959b4:;
			++it;
			goto _iter_begin_1bd9959b4;
		}
		_iter_end_1bd9959b4:;
	};
}



inline void _1aab6b32e_setFileSemaFields(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd998863:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _259615_f = *it;
			{
				(*(_259615_f))._field_sema=_self_;
			}
			_iter_next_1bd998863:;
			++it;
			goto _iter_begin_1bd998863;
		}
		_iter_end_1bd998863:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd998e90:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _259915_st = *it;
			{
				(*(_259915_st))._field_sema=_self_;
			}
			_iter_next_1bd998e90:;
			++it;
			goto _iter_begin_1bd998e90;
		}
		_iter_end_1bd998e90:;
	};
}



inline void _1aab6b52c_setSemaFields(jule::Ptr<_1aab4c62e_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd99a139:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _260515_file = *it;
			{
				_1aab50115_setCurrentFile(_self_.ptr(), _260515_file);
				_1aab6b32e_setFileSemaFields(_self_);
			}
			_iter_next_1bd99a139:;
			++it;
			goto _iter_begin_1bd99a139;
		}
		_iter_end_1bd99a139:;
	};
}



inline void _1aab6b7d5_check(jule::Ptr<_1aab4c62e_sema> _self_, jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _261127_files) {
	(*(_self_))._field_files=(*(_261127_files));
	_1aab6b52c_setSemaFields(_self_);
	_1aab53426_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1aab53e1b_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1aab53822_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	(*_self_.alloc)._field_step|=static_cast<jule::I32>(1LL);
	_1aab53a20_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1aab66835_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	(*_self_.alloc)._field_step|=static_cast<jule::I32>(2LL);
	_1aab6b131_checkPackageTypes(_self_);
	(*_self_.alloc)._field_step|=static_cast<jule::I32>(4LL);
}







inline _1aab6bbd1_missingRetChecker static__1aab6c0cc_new(void) {
	return _1aab6bbd1_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1aab6c3da_checkConditional(_1aab6bbd1_missingRetChecker* _self_, jule::Ptr<_1aaaed426_Conditional> _266232_c) {
	{
		auto expr = &((*(_266232_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9a15c4:;
		if (it != expr_end) {
			jule::Ptr<_1aaaecc0b_If> _266315_elif = *it;
			{
				if ((_266315_elif == nullptr)) {
					return false;;
				};
				if ((!(_1aab6ce68_checkScope(_self_, (*(_266315_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1bd9a15c4:;
			++it;
			goto _iter_begin_1bd9a15c4;
		}
		_iter_end_1bd9a15c4:;
	};
	return (((*_266232_c.alloc)._field_Default != nullptr) && _1aab6ce68_checkScope(_self_, (*((*_266232_c.alloc)._field_Default))._field_Scope));;
}



inline jule::Bool _1aab6c72b_checkMatch(_1aab6bbd1_missingRetChecker* _self_, jule::Ptr<_1aab0232b_Match> _267426_m) {
	{
		auto expr = &((*(_267426_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9a3670:;
		if (it != expr_end) {
			jule::Ptr<_1aab02b23_Case> _267515_c = *it;
			{
				if ((_267515_c == nullptr)) {
					return false;;
				};
				jule::I32 _26794_n = (*(_self_))._field_breaked.len();;
				jule::Bool _26804_ok = _1aab6ce68_checkScope(_self_, (*(_267515_c))._field_Scope);;
				{
					
					if ((_26794_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1bd9a51aa:;
						{
							return false;;
						}
					}
					else if ((!(_26804_ok))) {
						_case_begin_1bd9a5254:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1bd9a52ba;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1bd9a52ba:;
						{
							(*(_self_))._field_falled=false;
							if (((*_267515_c.alloc)._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1bd9a3670;
						}
					}
					_match_end_1bd9a5133:;
				};
			}
			_iter_next_1bd9a3670:;
			++it;
			goto _iter_begin_1bd9a3670;
		}
		_iter_end_1bd9a3670:;
	};
	return (((*_267426_m.alloc)._field_Default != nullptr) && _1aab6ce68_checkScope(_self_, (*((*_267426_m.alloc)._field_Default))._field_Scope));;
}



inline jule::Bool _1aab6cb27_checkInfIter(_1aab6bbd1_missingRetChecker* _self_, jule::Uintptr _270024_it, jule::Ptr<_1aaaec832_Scope>* _270042_s) {
	jule::I32 _27013_n = (*(_self_))._field_breaked.len();;
	if (_1aab6ce68_checkScope(_self_, (*(_270042_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _27013_n);;
		return true;;
	};
	if ((_27013_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_27013_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1bd9a7b3b:;
			if (it != expr_end) {
				jule::Uintptr _270711_addr = *it;
				{
					if ((_270024_it == _270711_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _27013_n);;
						return false;;
					};
				}
				_iter_next_1bd9a7b3b:;
				++it;
				goto _iter_begin_1bd9a7b3b;
			}
			_iter_end_1bd9a7b3b:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _27013_n);;
	};
	return true;;
}



inline jule::Bool _1aab6ce68_checkScope(_1aab6bbd1_missingRetChecker* _self_, jule::Ptr<_1aaaec832_Scope> _271826_s) {
	if ((_271826_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_271826_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9aa105:;
		if (it != expr_end) {
			jule::Any _272215_st = *it;
			{
				{
					auto &_match_expr{ _272215_st };
					
					if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1bd9aadc5:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1bd9aab83:;
						{
							jule::Uintptr _27285_addr = (*(_272215_st.unsafe_cast_ptr<_1aaaeed84_BreakSt>()))._field_It;;
							if ((_27285_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_27285_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1bd9aae4c:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type32) {
						_case_begin_1bd9aaec4:;
						{
							jule::Ptr<_1aaaed723_InfIter> _27369_ii = _272215_st.unsafe_cast_ptr<_1aaaed723_InfIter>();;
							if (_1aab6cb27_checkInfIter(_self_, static_cast<jule::Uintptr>(_27369_ii), &((*(_27369_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type34) {
						_case_begin_1bd9ab04b:;
						{
							jule::Ptr<_1aaaedbc9_WhileIter> _27419_wn = _272215_st.unsafe_cast_ptr<_1aaaedbc9_WhileIter>();;
							if ((_1aaaee180_IsWhileNext(_27419_wn.ptr()) && ((*_27419_wn.alloc)._field_Expr == nullptr))) {
								if (_1aab6cb27_checkInfIter(_self_, static_cast<jule::Uintptr>(_27419_wn), &((*_27419_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1bd9ab0c3:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1bd9ab14a:;
						{
							if (_1aab6ce68_checkScope(_self_, _272215_st.unsafe_cast_ptr<_1aaaec832_Scope>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1bd9ab1c2:;
						{
							{
								auto &_match_expr{ (*(_272215_st.cast_ptr<_1aabb8db5_Data>(&__jule_any_type21)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type20) {
									_case_begin_1bd9b1ae0:;
									{
										return true;;
									}
								}
								_match_end_1bd9b1a46:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1bd9ab249:;
						{
							if (_1aab6c3da_checkConditional(_self_, _272215_st.unsafe_cast_ptr<_1aaaed426_Conditional>())) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type45) {
						_case_begin_1bd9ab2c1:;
						{
							if (_1aab6c72b_checkMatch(_self_, _272215_st.unsafe_cast_ptr<_1aab0232b_Match>())) {
								return true;;
							};
						}
					}
					_match_end_1bd9aac93:;
				};
			}
			_iter_next_1bd9aa105:;
			++it;
			goto _iter_begin_1bd9aa105;
		}
		_iter_end_1bd9aa105:;
	};
	return false;;
}



inline jule::Bool _1aab6d2a9_check(_1aab6bbd1_missingRetChecker* _self_, jule::Ptr<_1aaaec832_Scope> _277321_s) {
	return _1aab6ce68_checkScope(_self_, _277321_s);;
}







inline jule::Bool _1aab70ba2_IsInitialized(_1aab70795_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1aab70e38_IsTypeInferred(_1aab70795_Var* _self_) {
	return (((*(_self_))._field_TypeSym == nullptr) || ((*((*(_self_))._field_TypeSym))._field_Decl == nullptr));;
}



inline jule::Bool _1aab711be_untypedConstant(_1aab70795_Var* _self_) {
	return (_1aab70e38_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}








inline jule::Bool _1aab71620_FuncPattern_eq(_1aab71620_FuncPattern *_self_, _1aab71620_FuncPattern _other_) { return true; }

inline jule::Bool static__1aab71a1b_Str(jule::Ptr<_1aaa3b221_Fn> _1016_f) {
	if (((((((((((_1016_f == nullptr) || ((*(_1016_f))._field_Owner == nullptr)) || (!(*(_1016_f))._field_Ident.equal("Str", 3))) || (*(_1016_f))._field_Statically) || (*(_1016_f))._field_Unsafety) || _1aaa3b6c7_IsVoid(_1016_f.ptr())) || ((*(_1016_f))._field_Generics.len() != 0LL)) || ((*(_1016_f))._field_Params.len() != 1LL)) || (*((*(_1016_f))._field_Params[0LL]))._field_Mutable) || _1aaa3a132_IsRef((*(_1016_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _247_ins = (*(_1016_f))._field_Instances[0LL];;
	jule::Ptr<_1aac06bc2_Prim> _253_prim = _1aac00ec9_Prim((*(_247_ins))._field_Result.ptr());;
	if ((_253_prim == nullptr)) {
		return false;;
	};
	return _1aac0a18c_IsStr(_253_prim.ptr());;
}








inline jule::Bool _1aaba4e17_typeCompatibilityChecker_eq(_1aaba4e17_typeCompatibilityChecker *_self_, _1aaba4e17_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1aaba5445_pushErr(_1aaba4e17_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args) {
	_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _10723_fmt, _10743_args);
}



inline jule::Bool _1aaba56cb_checkTrait(_1aaba4e17_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1aabee03d_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aaa46935_Trait> _1157_trt = _1aac02a69_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1167_ref = false;;
	{
		
		if ((_1aac027d3_softStruct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1bd9d0c0d:;
			{
				_julec_label_1bd9d17ad:;
				jule::Ptr<_1aa969605_StructIns> _1204_s = _1aac027d3_softStruct((*(_self_))._field_src);;
				if ((!(_1aa967d95_IsImplements((*(_1204_s))._field_Decl.ptr(), _1157_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1167_ref)) && _1aaba39a4_traitHasReferenceReceiver(&(_1157_trt)))) {
					_1aaba5445_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aac01260_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1bd9d0ca7:;
			{
				_1167_ref=true;
				(*(_self_))._field_src=(*(_1aac01260_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_1aac027d3_softStruct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _julec_label_1bd9d17ad;
			}
		}
		else if ((_1aac02a69_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1bd9d0d1d:;
			{
				jule::Ptr<_1aaa46935_Trait> _1378_base = _1aac02a69_Trait((*(_self_))._field_src);;
				if ((_1157_trt == _1378_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1bd9d60a9:;
				{
					auto expr = &((*(_1378_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd9d5c13:;
					if (it != expr_end) {
						jule::Ptr<_1aa966767_Struct> _14211_s1 = *it;
						{
							{
								auto expr = &((*(_1157_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bd9d6a8d:;
								if (it != expr_end) {
									jule::Ptr<_1aa966767_Struct> _14312_s2 = *it;
									{
										if ((_14211_s1 == _14312_s2)) {
											goto _iter_next_1bd9d5c13;
										};
									}
									_iter_next_1bd9d6a8d:;
									++it;
									goto _iter_begin_1bd9d6a8d;
								}
								_iter_end_1bd9d6a8d:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1bd9d5c13:;
						++it;
						goto _iter_begin_1bd9d5c13;
					}
					_iter_end_1bd9d5c13:;
				};
				{
					auto expr = &((*(_1157_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd9d74ea:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3b221_Fn> _15016_m1 = *it;
						{
							jule::Ptr<_1aaa3b221_Fn> _1519_m2 = _1aaa47617_FindMethod(_1378_base, (*(_15016_m1))._field_Ident);;
							if ((_1519_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1aaa3e2ce_FnIns> _1555_m1k = _1aab59a48_getTraitCheckFnKind((*(_self_))._field_s, &(_15016_m1));;
							jule::Ptr<_1aaa3e2ce_FnIns> _1565_m2k = _1aab59a48_getTraitCheckFnKind((*(_self_))._field_s, &(_1519_m2));;
							if ((!(_1aaa4027a_equalTrait(_1555_m1k, &(_1565_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1bd9d74ea:;
						++it;
						goto _iter_begin_1bd9d74ea;
					}
					_iter_end_1bd9d74ea:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bd9d0b31:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aaba5962_checkPtr(_1aaba4e17_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1aabee03d_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac0deb5_Ptr> _1707_dest = _1aac014e6_Ptr((*(_self_))._field_dest.ptr());;
	if (_1aac0ea32_IsUnsafe(_1707_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1aabed603_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1aaba5be8_checkPrim(_1aaba4e17_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1aac06bc2_Prim> _1794_prim = _1aac00ec9_Prim((*(_self_))._field_dest);;
		if (((_1794_prim != nullptr) && _1aac0a423_IsAny(_1794_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1aabed603_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1aaba60e4_typeEnum(_1aaba4e17_typeCompatibilityChecker* _self_, jule::Ptr<_1aaa4a7e6_TypeEnum>* _18725_e, jule::Ptr<_1aabecdb6_Type>* _18744_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_18725_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9dd358:;
		if (it != expr_end) {
			jule::Ptr<_1aaa4a21e_TypeEnumItem> _18815_item = *it;
			{
				if (_1aabed603_Equal((*((*(_18815_item))._field_TypeSym))._field_Type, (*(_18744_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1aaa4a7e6_TypeEnum> _1928_ke = _1aac01a13_TypeEnum((*((*(_18815_item))._field_TypeSym))._field_Type.ptr());;
				if ((_1928_ke == nullptr)) {
					goto _iter_next_1bd9dd358;
				};
				if (_1aaba60e4_typeEnum(_self_, &(_1928_ke), _18744_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1bd9dd358:;
			++it;
			goto _iter_begin_1bd9dd358;
		}
		_iter_end_1bd9dd358:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aaba637a_checkTypeEnum(_1aaba4e17_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1aabed603_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aaa4a7e6_TypeEnum> _2077_e = _1aac01a13_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1aaba60e4_typeEnum(_self_, &(_2077_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1aaba6611_check(_1aaba4e17_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((_1aac00726_NilCompatible((*(_self_))._field_dest.ptr()) && _1aabee03d_IsNil((*(_self_))._field_src.ptr()))) {
			_case_begin_1bd9e1c74:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aac01a13_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1bd9e1d1d:;
			{
				__jule_func_result = _1aaba637a_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1aac02a69_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1bd9e1d84:;
			{
				__jule_func_result = _1aaba56cb_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		_match_end_1bd9e1746:;
	};
	jule::Ptr<_1aac06bc2_Prim> _2213_prim = _1aac00ec9_Prim((*(_self_))._field_dest.ptr());;
	if ((((_2213_prim != nullptr) && (!((*(*(_self_))._field_dest.alloc)._field_Variadic))) && _1aac0a423_IsAny(_2213_prim))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((_2213_prim != nullptr)) {
		__jule_func_result = _1aaba5be8_checkPrim(_self_);
		return __jule_func_result;;
	};
	if (((_1aac027d3_softStruct((*(_self_))._field_dest) != nullptr) || (_1aac027d3_softStruct((*(_self_))._field_src.ptr()) != nullptr))) {
		__jule_func_result = _1aabed603_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
		return __jule_func_result;;
	};
	{
		
		if ((_1aac014e6_Ptr((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1bd9e720d:;
			{
				__jule_func_result = _1aaba5962_checkPtr(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bd9e673a:;
			{
				__jule_func_result = _1aabed603_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1bd9e5d00:;
	};
}








inline jule::Bool _1aaba6c93_assignTypeChecker_eq(_1aaba6c93_assignTypeChecker *_self_, _1aaba6c93_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1aaba725a_pushErr(_1aaba6c93_assignTypeChecker* _self_, jule::Str _25523_fmt, jule::Slice<jule::Any> _25543_args) {
	_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25523_fmt, _25543_args);
}



inline jule::Bool _1aaba74e1_checkValidity(_1aaba6c93_assignTypeChecker* _self_) {
	jule::Bool _2607_valid = true;;
	{
		
		if ((_1aac022b6_Fn((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bd9e8990:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _2634_f = _1aac022b6_Fn((*((*(_self_))._field_d))._field_Type);;
				{
					
					if (_1aaa40797_IsBuiltin(_2634_f.ptr())) {
						_case_begin_1bd9ea310:;
						{
							_1aaba725a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((*((*(_2634_f))._field_Decl))._field_Binded) {
						_case_begin_1bd9ea3a9:;
						{
							_1aaba725a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if (((!((*(*(_2634_f))._field_Decl.alloc)._field_Statically)) && _1aaa3b95d_IsMethod((*(_2634_f))._field_Decl))) {
						_case_begin_1bd9ea420:;
						{
							_1aaba725a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					else if ((((*(*(_2634_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_2634_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1bd9ea486:;
						{
							_1aaba725a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1aab50896_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2607_valid=false;
						}
					}
					_match_end_1bd9ea222:;
				};
			}
		}
		else if ((_1aac03086_Tup((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bd9e8a39:;
			{
				_1aaba725a_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2607_valid=false;
			}
		}
		_match_end_1bd9e8907:;
	};
	return _2607_valid;;
}



inline jule::Bool _1aaba7777_checkConst(_1aaba6c93_assignTypeChecker* _self_) {
	if ((!((*((*(_self_))._field_d))._field_untyped))) {
		return false;;
	};
	jule::Ptr<_1aac06bc2_Prim> _2907_prim = _1aac00ec9_Prim((*(_self_))._field_dest.ptr());;
	if ((_2907_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1aac0a18c_IsStr(_2907_prim.ptr())) {
			_case_begin_1bda0641a:;
			{
				_2907_prim=_1aac00ec9_Prim((*((*(_self_))._field_d))._field_Type.ptr());
				return ((_2907_prim != nullptr) && _1aac0a18c_IsStr(_2907_prim.ptr()));;
			}
		}
		else if (_1aac09e06_IsBool(_2907_prim.ptr())) {
			_case_begin_1bda06481:;
			{
				_2907_prim=_1aac00ec9_Prim((*((*(_self_))._field_d))._field_Type.ptr());
				return ((_2907_prim != nullptr) && _1aac09e06_IsBool(_2907_prim.ptr()));;
			}
		}
		_match_end_1bda06096:;
	};
	if ((!(_1aabb9800_IsConst((*(_self_))._field_d.ptr())))) {
		return _1aabee89b_ActualEqual((*(_self_))._field_dest, (*(*(_self_))._field_d.alloc)._field_Type);;
	};
	jule::Str _3063_kind = (*(_2907_prim))._field_Kind;;
	{
		
		if (_1aaabe947_IsFloat(_3063_kind)) {
			_case_begin_1bda05e86:;
			{
				if ((!(_1aaba3d6c_floatAssignable(&(_3063_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_3063_kind;
			}
		}
		else if (_1aaabe606_IsInt(_3063_kind)) {
			_case_begin_1bda0a133:;
			{
				if ((!(_1aaba492d_intAssignable(_3063_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_3063_kind;
			}
		}
		else {
			_case_begin_1bda09bc1:;
			{
				return false;;
			}
		}
		_match_end_1bda099a1:;
	};
	return true;;
}



inline jule::Bool _1aaba7a0d_checkCompatibility(_1aaba6c93_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1bda0be8c:;
			{
				return false;;
			}
		}
		else if ((!(_1aaba74e1_checkValidity(_self_)))) {
			_case_begin_1bda0c003:;
			{
				return false;;
			}
		}
		else if (_1aaba7777_checkConst(_self_)) {
			_case_begin_1bda0c069:;
			{
				return true;;
			}
		}
		else if ((_1aac0177c_Enum((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bda0c0d0:;
			{
				jule::Ptr<_1aabecdb6_Type> _3358_dkind = (*(_self_))._field_dest;;
				if ((_1aac0177c_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3358_dkind=(*((*(_1aac0177c_Enum((*(_self_))._field_dest)))._field_TypeSym))._field_Type;
				};
				jule::Ptr<_1aac06bc2_Prim> _3394_prim = _1aac00ec9_Prim((*(_self_))._field_dest.ptr());;
				if (((_3394_prim == nullptr) || _1aac0a423_IsAny(_3394_prim.ptr()))) {
					goto _match_end_1bda0a386;
				};
				jule::Ptr<_1aabecdb6_Type> _3448_dest = (*((*(_1aac0177c_Enum((*((*(_self_))._field_d))._field_Type)))._field_TypeSym))._field_Type;;
				return _1aab58481_checkTypeCompatibility((*(_self_))._field_s, &(_3448_dest), &(_3358_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1bda0a386:;
	};
	return _1aab58d55_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1aaba7c94_check(_1aaba6c93_assignTypeChecker* _self_) {
	jule::Bool _3513_ok = _1aaba7a0d_checkCompatibility(_self_);;
	if ((_3513_ok && (!((*((*((*(_self_))._field_d))._field_Type))._field_Variadic)))) {
		_1aac210e8_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3513_ok;;
}







inline jule::Bool _1bda338a9_annotateConstraintElem(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _37146_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1bda34e60:;
			{
				jule::Ptr<_1aabecdb6_Type> _3748_elem = static_cast<jule::Ptr<_1aabecdb6_Type>>(nullptr);;
				{
					
{
						_case_begin_1bda35625:;
						{
							_3748_elem=(*(_1aac01c99_Arr((*(_37146_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bda37627:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa100ad3_ArrTypeDecl>()))._field_Elem;
				return _1aaba9da6_annotateConstraint(_self_, &(_3748_elem));;
			}
		}
		_match_end_1bda34dd8:;
	};
	return false;;
}

inline jule::Bool _1bda33b62_annotateConstraintElem(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _37146_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1bda39daa:;
			{
				jule::Ptr<_1aabecdb6_Type> _3748_elem = static_cast<jule::Ptr<_1aabecdb6_Type>>(nullptr);;
				{
					
{
						_case_begin_1bda3b7a2:;
						{
							_3748_elem=(*(_1aac02030_Slc((*(_37146_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bda3b87e:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa0eec47_SlcTypeDecl>()))._field_Elem;
				return _1aaba9da6_annotateConstraint(_self_, &(_3748_elem));;
			}
		}
		_match_end_1bda39d33:;
	};
	return false;;
}

inline jule::Bool _1bda393e8_annotateConstraintElem(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _37146_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1bda41015:;
			{
				jule::Ptr<_1aabecdb6_Type> _3748_elem = static_cast<jule::Ptr<_1aabecdb6_Type>>(nullptr);;
				{
					
{
						_case_begin_1bda44810:;
						{
							_3748_elem=(*(_1aac014e6_Ptr((*(_37146_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bda479ab:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa100341_PtrTypeDecl>()))._field_Elem;
				return _1aaba9da6_annotateConstraint(_self_, &(_3748_elem));;
			}
		}
		_match_end_1bda40e8d:;
	};
	return false;;
}

inline jule::Bool _1bda4050e_annotateConstraintElem(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _37146_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1bda46d73:;
			{
				jule::Ptr<_1aabecdb6_Type> _3748_elem = static_cast<jule::Ptr<_1aabecdb6_Type>>(nullptr);;
				{
					
{
						_case_begin_1bda4767b:;
						{
							_3748_elem=(*(_1aac01260_Sptr((*(_37146_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1bda4a728:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa0ee8b2_SptrTypeDecl>()))._field_Elem;
				return _1aaba9da6_annotateConstraint(_self_, &(_3748_elem));;
			}
		}
		_match_end_1bda46ceb:;
	};
	return false;;
}



inline jule::Bool _1aaba9092_annotateConstraintMap(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _39142_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1bda1b8d6:;
			{
				jule::Ptr<_1aac0c865_Map> _3948_m = _1aac02d00_Map((*(_39142_k)).ptr());;
				jule::Ptr<_1aa101331_MapTypeDecl> _3958_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa101331_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3958_m2))._field_Key;
				if ((!(_1aaba9da6_annotateConstraint(_self_, &((*(_3948_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3958_m2.alloc)._field_Val;
				__jule_func_result = _1aaba9da6_annotateConstraint(_self_, &((*(_3948_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1bda1b85e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aaba93d3_annotateConstraintTup(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _40642_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1bda20d5d:;
			{
				jule::Ptr<_1aa100044_TupleTypeDecl> _4098_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa100044_TupleTypeDecl>();;
				jule::Ptr<_1aac0bcb5_Tuple> _4108_tup2 = _1aac03086_Tup((*(_40642_k)).ptr());;
				{
					auto expr = &((*(_4108_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bda24dc8:;
					if (it != expr_end) {
						jule::Ptr<_1aabecdb6_Type> _41116_t2 = *it;
						{
							{
								auto expr = &((*(_4098_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bda258e0:;
								if (it != expr_end) {
									jule::Ptr<_1aa0ed817_TypeDecl> _41217_t = *it;
									{
										(*(_self_))._field_c=_41217_t;
										if (_1aaba9da6_annotateConstraint(_self_, &(_41116_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1bda258e0:;
									++it;
									goto _iter_begin_1bda258e0;
								}
								_iter_end_1bda258e0:;
							};
						}
						_iter_next_1bda24dc8:;
						++it;
						goto _iter_begin_1bda24dc8;
					}
					_iter_end_1bda24dc8:;
				};
			}
		}
		_match_end_1bda20cd6:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aaba9724_annotateConstraintFn(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _42341_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bda25d96:;
			{
				jule::Ptr<_1aa959617_FnDecl> _4268_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1aa959617_FnDecl>();;
				jule::Ptr<_1aaa3e2ce_FnIns> _4278_f = _1aac022b6_Fn((*(_42341_k)).ptr());;
				{
					auto expr = &((*(_4278_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bda28e76:;
					if (it != expr_end) {
						jule::I32 _4289_i = it - expr->begin();
						jule::Ptr<_1aaa3d179_ParamIns> _42816_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4268_pf))._field_Params[_4289_i]))._field_Kind;
							if (_1aaba9da6_annotateConstraint(_self_, &((*(_42816_fp))._field_Type))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1bda28e76:;
						++it;
						_4289_i++;
						goto _iter_begin_1bda28e76;
					}
					_iter_end_1bda28e76:;
				};
				if (((*(_4268_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4268_pf))._field_Result.alloc)._field_Kind;
					if (_1aaba9da6_annotateConstraint(_self_, &((*_4278_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1bda25d1e:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aaba9a65_annotateConstraintIdent(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _44444_k) {
	jule::Ptr<_1aa0ede22_IdentTypeDecl> _4457_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1aa0ede22_IdentTypeDecl>(&__jule_any_type78);;
	jule::Ptr<_1aa969605_StructIns> _4467_s = _1aac0254c_Struct((*(_44444_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bda2c8a3:;
		if (it != expr_end) {
			jule::I32 _4477_i = it - expr->begin();
			jule::Ptr<_1aa10aa22_GenericDecl> _44710_g = *it;
			{
				if (((*(_44710_g))._field_Ident == (*(_4457_ident))._field_Ident)) {
					jule::Ptr<_1aabeb4d0_InsGeneric> _4499_fg = (*((*(_self_))._field_f))._field_Generics[_4477_i];;
					if ((_4499_fg != nullptr)) {
						return false;;
					};
					_1aabaa219_pushGeneric(_self_, _44444_k, _4477_i);
					return true;;
				};
				if ((_4467_s == nullptr)) {
					goto _iter_next_1bda2c8a3;
				};
				jule::Ptr<_1aa0ed817_TypeDecl> _4598_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_4457_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bda304cc:;
					if (it != expr_end) {
						jule::Ptr<_1aa0ed817_TypeDecl> _46016_ig = *it;
						{
							(*(_self_))._field_c=_46016_ig;
							{
								auto expr = &((*(_4467_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1bda3117b:;
								if (it != expr_end) {
									jule::Ptr<_1aabeb4d0_InsGeneric> _46217_sg = *it;
									{
										if (_1aaba9da6_annotateConstraint(_self_, &((*(_46217_sg))._field_Type))) {
											return true;;
										};
									}
									_iter_next_1bda3117b:;
									++it;
									goto _iter_begin_1bda3117b;
								}
								_iter_end_1bda3117b:;
							};
						}
						_iter_next_1bda304cc:;
						++it;
						goto _iter_begin_1bda304cc;
					}
					_iter_end_1bda304cc:;
				};
				(*(_self_))._field_c=_4598_c;
			}
			_iter_next_1bda2c8a3:;
			++it;
			_4477_i++;
			goto _iter_begin_1bda2c8a3;
		}
		_iter_end_1bda2c8a3:;
	};
	return false;;
}



inline jule::Bool _1aaba9da6_annotateConstraint(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _47339_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1bda31522:;
			{
				return _1aaba9a65_annotateConstraintIdent(_self_, _47339_k);;
			}
		}
		_match_end_1bda314ab:;
	};
	{
		
		if ((_1aac01c99_Arr((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1bda3237a:;
			{
				return _1bda338a9_annotateConstraintElem(_self_, _47339_k);;
			}
		}
		else if ((_1aac02030_Slc((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1bda323e1:;
			{
				return _1bda33b62_annotateConstraintElem(_self_, _47339_k);;
			}
		}
		else if ((_1aac014e6_Ptr((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1bda32457:;
			{
				return _1bda393e8_annotateConstraintElem(_self_, _47339_k);;
			}
		}
		else if ((_1aac01260_Sptr((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1bda324bd:;
			{
				return _1bda4050e_annotateConstraintElem(_self_, _47339_k);;
			}
		}
		else if ((_1aac02d00_Map((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1bda32545:;
			{
				return _1aaba9092_annotateConstraintMap(_self_, _47339_k);;
			}
		}
		else if ((_1aac022b6_Fn((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1bda3290d:;
			{
				return _1aaba9724_annotateConstraintFn(_self_, _47339_k);;
			}
		}
		else if ((_1aac03086_Tup((*(_47339_k)).ptr()) != nullptr)) {
			_case_begin_1bda32985:;
			{
				return _1aaba93d3_annotateConstraintTup(_self_, _47339_k);;
			}
		}
		else {
			_case_begin_1bda3227b:;
			{
				return false;;
			}
		}
		_match_end_1bda32215:;
	};
}



inline void _1aabaa219_pushGeneric(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _49832_k, jule::I32 _49842_i) {
	(*((*(_self_))._field_f))._field_Generics[_49842_i]=jule::new_ptr<_1aabeb4d0_InsGeneric>(_1aabeb4d0_InsGeneric{._field_Type=(*(_49832_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr)});
	jule::Ptr<_1aa10aa22_GenericDecl> _5007_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_49842_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bda4ea5c:;
		if (it != expr_end) {
			jule::Ptr<_1aabecdb6_Type> _50115_ignored = *it;
			{
				if (((*(_5007_gd))._field_Ident == _1aabed2b2_Str(_50115_ignored.ptr()))) {
					(*_50115_ignored.alloc)._field_Kind=(*((*(_49832_k))))._field_Kind;
				};
			}
			_iter_next_1bda4ea5c:;
			++it;
			goto _iter_begin_1bda4ea5c;
		}
		_iter_end_1bda4ea5c:;
	};
	if ((((*(_5007_gd))._field_Constraint == nullptr) || ((*((*(_5007_gd))._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_5007_gd))._field_Constraint))._field_Mask[0LL];
	_1aaba9da6_annotateConstraint(_self_, _49832_k);
}



inline jule::Bool _1aabaa55a_annotatePrim(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _51340_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1aabac57e_annotateAny(_self_, _51340_k);
	return __jule_func_result;;
}



inline jule::Bool _1aabaa89b_annotateArr(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _51739_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aac0d4e2_Arr> _5187_parr = _1aac01c99_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_5187_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac0d4e2_Arr> _5227_arr = _1aac01c99_Arr((*(_51739_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5187_parr))._field_Elem));
	__jule_func_result = _1aabac8c0_annotateKind(_self_, &((*(_5227_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aabaabdc_annotateSlc(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _52739_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aac0b1c1_Slc> _5287_pslc = _1aac02030_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5287_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac0b1c1_Slc> _5327_slc = _1aac02030_Slc((*(_52739_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5287_pslc))._field_Elem));
	__jule_func_result = _1aabac8c0_annotateKind(_self_, &((*(_5327_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aabab0d8_checkMapKey(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _53738_k, jule::Ptr<_1aabecdb6_Type>* _53754_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aabecdb6_Type>* _5387_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_53738_k;
	__jule_func_result=_1aabac8c0_annotateKind(_self_, _53754_ck);
	(*(_self_))._field_k=_5387_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aabab429_annotateMap(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _54539_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aac0c865_Map> _5467_pmap = _1aac02d00_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5467_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac0c865_Map> _5507_m = _1aac02d00_Map((*(_54539_k)).ptr());;
	__jule_func_result = (_1aabab0d8_checkMapKey(_self_, (&((*(_5467_pmap))._field_Key)), &((*(_5507_m))._field_Key)) && _1aabab0d8_checkMapKey(_self_, (&((*_5467_pmap.alloc)._field_Val)), &((*_5507_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1aabab76a_annotateFn(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _55538_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aaa3e2ce_FnIns> _5567_pf = _1aac022b6_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5567_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _5607_f = _1aac022b6_Fn((*(_55538_k)).ptr());;
	{
		
		if (((*(_5567_pf))._field_Params.len() != (*(_5607_f))._field_Params.len())) {
			_case_begin_1bda5be43:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1aaa3b6c7_IsVoid((*(_5567_pf))._field_Decl.ptr()) != _1aaa3b6c7_IsVoid((*(_5607_f))._field_Decl))) {
			_case_begin_1bda5becb:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bda5bd99:;
	};
	__jule_func_result=true;
	jule::Ptr<_1aabecdb6_Type>* _5697_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5607_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bda5dd79:;
		if (it != expr_end) {
			jule::I32 _5708_i = it - expr->begin();
			jule::Ptr<_1aaa3d179_ParamIns> _57015_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5567_pf))._field_Params[_5708_i]))._field_Type));
				__jule_func_result=(_1aabac8c0_annotateKind(_self_, &((*(_57015_fp))._field_Type)) && __jule_func_result);
			}
			_iter_next_1bda5dd79:;
			++it;
			_5708_i++;
			goto _iter_begin_1bda5dd79;
		}
		_iter_end_1bda5dd79:;
	};
	if ((!(_1aaa3b6c7_IsVoid((*(_5567_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*_5567_pf.alloc)._field_Result));
		__jule_func_result=(_1aabac8c0_annotateKind(_self_, &((*_5607_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5697_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aababaab_annotatePtr(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _58439_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aac0deb5_Ptr> _5857_pptr = _1aac014e6_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5857_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac0deb5_Ptr> _5897_ptr = _1aac014e6_Ptr((*(_58439_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5857_pptr))._field_Elem));
	__jule_func_result = _1aabac8c0_annotateKind(_self_, &((*(_5897_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aababdec_annotateSptr(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _59440_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aac0a6ed_Sptr> _5957_ssptr = _1aac01260_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5957_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac0a6ed_Sptr> _5997_sptr = _1aac01260_Sptr((*(_59440_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5957_ssptr))._field_Elem));
	__jule_func_result = _1aabac8c0_annotateKind(_self_, &((*(_5997_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aabac23d_annotateStruct(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _60442_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aa969605_StructIns> _6057_s = _1aac0254c_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_6057_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa969605_StructIns> _6097_s2 = _1aac0254c_Struct((*(_60442_k)).ptr());;
	if (((*(_6057_s))._field_Generics.len() != (*(_6097_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_6057_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bda67c40:;
		if (it != expr_end) {
			jule::I32 _6138_i = it - expr->begin();
			jule::Ptr<_1aabeb4d0_InsGeneric> _61315_g = *it;
			{
				jule::Ptr<_1aabeb4d0_InsGeneric> _6148_g2 = (*(_6097_s2))._field_Generics[_6138_i];;
				if (_1aabed603_Equal((*(_61315_g))._field_Type, (*(_6148_g2))._field_Type)) {
					goto _iter_next_1bda67c40;
				};
				(*(_self_))._field_k=(&((*(_61315_g))._field_Type));
				if ((!(_1aabac8c0_annotateKind(_self_, &((*(_6148_g2))._field_Type))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bda67c40:;
			++it;
			_6138_i++;
			goto _iter_begin_1bda67c40;
		}
		_iter_end_1bda67c40:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aabac57e_annotateAny(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _62639_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6273_kind = _1aabed2b2_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bda6b2c6:;
		if (it != expr_end) {
			jule::I32 _6287_i = it - expr->begin();
			jule::Ptr<_1aa10aa22_GenericDecl> _62810_g = *it;
			{
				if ((_6273_kind != (*(_62810_g))._field_Ident)) {
					goto _iter_next_1bda6b2c6;
				};
				jule::Ptr<_1aabeb4d0_InsGeneric> _6324_t = (*((*(_self_))._field_f))._field_Generics[_6287_i];;
				{
					
					if ((_6324_t == nullptr) || ((*(_6324_t))._field_Type == nullptr)) {
						_case_begin_1bda6cb9b:;
						{
							_1aabaa219_pushGeneric(_self_, _62639_k, _6287_i);
						}
					}
					else if ((!(_1aabed603_Equal((*(_6324_t))._field_Type, (*(_62639_k)))))) {
						_case_begin_1bda6cc45:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1bda6ca58:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_62639_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1bda6b2c6:;
			++it;
			_6287_i++;
			goto _iter_begin_1bda6b2c6;
		}
		_iter_end_1bda6b2c6:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aabac8c0_annotateKind(_1aaba8668_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabecdb6_Type>* _64740_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1aabac57e_annotateAny(_self_, _64740_k)) {
			_case_begin_1bda70231:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aac00ec9_Prim((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1bda70297:;
			{
				__jule_func_result = _1aabaa55a_annotatePrim(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac01c99_Arr((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1bda7030d:;
			{
				__jule_func_result = _1aabaa89b_annotateArr(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac02030_Slc((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1bda70374:;
			{
				__jule_func_result = _1aabaabdc_annotateSlc(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac02d00_Map((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1bda7053e:;
			{
				__jule_func_result = _1aabab429_annotateMap(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac022b6_Fn((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1bda705a5:;
			{
				__jule_func_result = _1aabab76a_annotateFn(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac014e6_Ptr((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1bda7061b:;
			{
				__jule_func_result = _1aababaab_annotatePtr(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac01260_Sptr((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1bda70682:;
			{
				__jule_func_result = _1aababdec_annotateSptr(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac0254c_Struct((*(_64740_k)).ptr()) != nullptr)) {
			_case_begin_1bda706e8:;
			{
				__jule_func_result = _1aabac23d_annotateStruct(_self_, _64740_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bda70110:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bda6eb8c:;
	};
}



inline jule::Bool _1aabacb56_annotate(_1aaba8668_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Type));
	__jule_func_result = _1aabac8c0_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Type));
	return __jule_func_result;;
}







inline void _1aabada69_pushErrToken(_1aabad4c5_fnCallArgChecker* _self_, jule::Ptr<_1aa0d7ceb_Token> _69228_token, jule::Str _69250_fmt, jule::Slice<jule::Any> _69270_args) {
	_1aab50533_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _69228_token, _69250_fmt, _69270_args);
}



inline void _1aabaddcc_pushErr(_1aabad4c5_fnCallArgChecker* _self_, jule::Str _69623_fmt, jule::Slice<jule::Any> _69643_args) {
	_1aabada69_pushErrToken(_self_, (*(_self_))._field_errorToken, _69623_fmt, _69643_args);
}



inline jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>> _1aabae163_getParams(_1aabad4c5_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1aaa39d9b_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _1aabae4a4_checkCounts(_1aabad4c5_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>* _70928_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _7107_n = (*(_70928_params)).len();;
	if (((_7107_n > 0LL) && _1aaa39d9b_IsSelf((*((*(_70928_params))[0LL]))._field_Decl.ptr()))) {
		(_7107_n)--;
	};
	jule::Bool _7143_variadic = ((_7107_n > 0LL) && (*((*((*(_70928_params))[((*(_70928_params)).len() - 1LL)]))._field_Decl))._field_Variadic);;
	if (_7143_variadic) {
		(_7107_n)--;
	};
	jule::I32 _7197_diff = (_7107_n - (*(_self_))._field_args.len());;
	jule::Str _7207_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_7197_diff == 0LL)) {
			_case_begin_1bda828a3:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_7197_diff < 0LL)) {
			_case_begin_1bda8142e:;
			{
				if (_7143_variadic) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				goto _case_begin_1bda82584;
			}
		}
		else if ((_7197_diff > _7107_n)) {
			_case_begin_1bda82584:;
			{
				_7207_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1bda8251d:;
			{
				_7207_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1bda82320:;
	};
	_1ace17078_Builder _7347_err = static__1ace178c5_New(32LL);;
	({
		auto except = _1ace18057_WriteStr(&_7347_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:735:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&_7347_err, jule::Str::lit("\n       want (", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:736:3"));
		(except.result);
	});
	{
		auto expr = _70928_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bda84861:;
		if (it != expr_end) {
			jule::I32 _7377_i = it - expr->begin();
			jule::Ptr<_1aaa3d179_ParamIns> *_73710_p = it;
			{
				({
					auto except = _1ace18057_WriteStr(&_7347_err, _1aabed2b2_Str((*((*(_73710_p))))._field_Type.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:738:4"));
					(except.result);
				});
				if ((((*(_70928_params)).len() - _7377_i) > 1LL)) {
					({
						auto except = _1ace18057_WriteStr(&_7347_err, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:740:5"));
						(except.result);
					});
				};
			}
			_iter_next_1bda84861:;
			++it;
			_7377_i++;
			goto _iter_begin_1bda84861;
		}
		_iter_end_1bda84861:;
	};
	({
		auto except = _1ace18310_WriteByte(&_7347_err, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:743:3"));
	});
	_1aabaddcc_pushErr(_self_, _7207_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ace188d7_Str(&_7347_err), &__jule_any_type5); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aabae95a_checkArg(_1aabad4c5_fnCallArgChecker* _self_, jule::Ptr<_1aaa3d179_ParamIns>* _74829_p, jule::Ptr<_1aabb8db5_Data>* _74848_arg, jule::Ptr<_1aa0d7ceb_Token>* _74865_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1aaa415ab_parameterUsesGenerics(_74829_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_74829_p))))._field_Decl))._field_Variadic)) && _1aabb7479_isGoodValueToInfer(_74848_arg));
		if (__jule_func_result) {
			_1aaba8668_dynamicTypeAnnotation _7539_dta = _1aaba8668_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_74829_p)), ._field_a=(*(_74848_arg)), ._field_errorToken=(*(_74865_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1aabacb56_annotate(&_7539_dta);
		};
		if ((!(__jule_func_result))) {
			_1aabada69_pushErrToken(_self_, (*(_74865_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1aab5c2a9_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_74829_p))))._field_Decl))._field_Mutable, (*(*((*(_74829_p))))._field_Decl.alloc)._field_Reference, &((*((*(_74829_p))))._field_Type), _74848_arg, _74865_errorToken)) {
		__jule_func_result = _1aab57a24_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_74829_p))))._field_Decl.alloc)._field_Reference, &((*((*(_74829_p))))._field_Type), _74848_arg, (*(_74865_errorToken)), _1aabbe393_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aabaed56_push(_1aabad4c5_fnCallArgChecker* _self_, jule::Ptr<_1aaa3d179_ParamIns>* _77725_p, jule::Ptr<_1aa102b4b_Expr> _77743_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aabecdb6_Type> _7787_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7793_oldMut = (*(*(_self_))._field_e.alloc)._field_target._field_mutable;;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=(*((*((*(_77725_p))))._field_Decl))._field_Mutable;
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_77725_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_77725_p))))._field_Type;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1aabb8db5_Data> _7877_d = _1aabdad3d_evalExpr((*(_self_))._field_e, _77743_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7787_old;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=_7793_oldMut;
	if ((_7877_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1aabae95a_checkArg(_self_, _77725_p, &(_7877_d), &((*(_77743_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7877_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1aabb0252_pushVariadic(_1aabad4c5_fnCallArgChecker* _self_, jule::Ptr<_1aaa3d179_ParamIns>* _80133_p, jule::I32 _80151_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _8037_variadiced = false;;
	jule::Bool _8043_more = ((_80151_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1aaa313ae_SliceExpr> _8057_model = jule::new_ptr<_1aaa313ae_SliceExpr>(_1aaa313ae_SliceExpr{._field_ElemType=(*((*(_80133_p))))._field_Type, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1aabecdb6_Type> _8097_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _8113_oldMut = (*(*(_self_))._field_e.alloc)._field_target._field_mutable;;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=(*((*((*(_80133_p))))._field_Decl))._field_Mutable;
	jule::Ptr<_1aabecdb6_Type> _8197_oldKind = (*((*(_80133_p))))._field_Type;;
	(*((*(_80133_p))))._field_Type=jule::new_ptr<_1aabecdb6_Type>((*(*((*(_80133_p))))._field_Type.alloc));
	(*(*((*(_80133_p))))._field_Type.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_80133_p))))._field_Type.alloc)._field_Variadic=false;
		(*((*(_80133_p))))._field_Type=_8197_oldKind;
	});;
	for (; (_80151_i < (*(_self_))._field_args.len()); (_80151_i)++) {
		{
			jule::Ptr<_1aa102b4b_Expr> _8288_arg = (*(_self_))._field_args[_80151_i];;
			{
				auto &_match_expr{ (*(_8288_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type79) {
					_case_begin_1bda98017:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aac0b1c1_Slc>(_1aac0b1c1_Slc{._field_Elem=(*((*(_80133_p))))._field_Type}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1bda98314:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_80133_p))))._field_Type;
					}
				}
				_match_end_1bda9829d:;
			};
			jule::Ptr<_1aabb8db5_Data> _8418_d = _1aabda6ab_eval((*(_self_))._field_e, _8288_arg);;
			if ((_8418_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1bda9749a;
			};
			if ((*((*(_8418_d))._field_Type))._field_Variadic) {
				_8037_variadiced=true;
				(*((*((*(_80133_p))))._field_Type))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1aabae95a_checkArg(_self_, _80133_p, &(_8418_d), &((*(_8288_arg))._field_Token)));
				(*(*((*(_80133_p))))._field_Type.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8418_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1bda9bb64:;
						{
							_8057_model=(*(_8418_d))._field_Model.unsafe_cast_ptr<_1aaa313ae_SliceExpr>();
							(*(_8057_model))._field_ElemType=(*((*(_80133_p))))._field_Type;
						}
					}
					else {
						_case_begin_1bda9d638:;
						{
							_8057_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8418_d))._field_Model); };
						}
					}
					_match_end_1bda9d5c2:;
				};
				(_80151_i)++;
				goto _iter_end_1bda9749a;
			};
			__jule_func_result=(__jule_func_result && _1aabae95a_checkArg(_self_, _80133_p, &(_8418_d), &((*(_8288_arg))._field_Token)));
			(*(_8057_model))._field_Elems=jule::append((*_8057_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8418_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1bda9749a:;
	}
	_iter_end_1bda9749a:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_8097_old;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=_8113_oldMut;
	if ((_8037_variadiced && _8043_more)) {
		_1aabada69_pushErrToken(_self_, (*((*(_self_))._field_args[_80151_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_8057_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_8057_model, &__jule_any_type80)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aabb0593_checkArgs(_1aabad4c5_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>* _88630_params) {
	jule::Bool __jule_func_result = false;
	_1aabba416_target _8873_target = (*((*(_self_))._field_e))._field_target;;
	(*(*(_self_))._field_e.alloc)._field_target._field_ignored=false;
	__jule_func_result=true;
	jule::I32 _8917_i = 0LL;;
	if ((((*(_88630_params)).len() > 0LL) && _1aaa39d9b_IsSelf((*((*(_88630_params))[0LL]))._field_Decl.ptr()))) {
		(_8917_i)++;
	};
	_julec_label_1bdaa8027:;
	while ((_8917_i < (*(_88630_params)).len())) {
		{
			jule::Ptr<_1aaa3d179_ParamIns> _8988_p = (*(_88630_params))[_8917_i];;
			{
				
				if ((*((*(_8988_p))._field_Decl))._field_Variadic) {
					_case_begin_1bdaa99c9:;
					{
						__jule_func_result=(_1aabb0252_pushVariadic(_self_, &(_8988_p), _8917_i) && __jule_func_result);
						goto _iter_end_1bdaa8225;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8917_i)) {
					_case_begin_1bdaa9ab7:;
					{
						__jule_func_result=false;
						goto _iter_end_1bdaa8225;
					}
				}
				else {
					_case_begin_1bdaa9611:;
					{
						__jule_func_result=(_1aabaed56_push(_self_, &(_8988_p), (*(_self_))._field_args[_8917_i]) && __jule_func_result);
					}
				}
				_match_end_1bdaa9589:;
			};
			(_8917_i)++;
		}
	_iter_next_1bdaa8225:;
	}
	_iter_end_1bdaa8225:;;
	(*(*(_self_))._field_e.alloc)._field_target=_8873_target;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aabb0829_checkDynamicTypeAnnotation(_1aabad4c5_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdaab800:;
		if (it != expr_end) {
			jule::Ptr<_1aabeb4d0_InsGeneric> _91810_g = *it;
			{
				if ((_91810_g == nullptr)) {
					_1aabaddcc_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1bdaab800:;
			++it;
			goto _iter_begin_1bdaab800;
		}
		_iter_end_1bdaab800:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aabb0ab0_check(_1aabad4c5_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>> _9287_params = _1aabae163_getParams(_self_);;
	__jule_func_result=_1aabae4a4_checkCounts(_self_, &(_9287_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1aabb0593_checkArgs(_self_, &(_9287_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1aabb0829_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1aabb1990_pushErr(_1aabb140c_structLitChecker* _self_, jule::Ptr<_1aa0d7ceb_Token> _96623_token, jule::Str _96645_fmt, jule::Slice<jule::Any> _96665_args) {
	_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), _96623_token, _96645_fmt, _96665_args);
}



inline void _1aabb1d03_pushSuggestion(_1aabb140c_structLitChecker* _self_, jule::Str _97130_fmt, jule::Slice<jule::Any> _97150_args) {
	_1aabbb6c0_pushSuggestion((*(_self_))._field_e.ptr(), _97130_fmt, _97150_args);
}



inline void _1aabb2221_pushMatch(_1aabb140c_structLitChecker* _self_, jule::Ptr<_1aa9689cd_FieldIns>* _97530_f, jule::Ptr<_1aabb8db5_Data>* _97549_d, jule::Ptr<_1aa0d7ceb_Token>* _97564_errorToken) {
	;
	jule::Bool _9813_mutable = ((*((*(_self_))._field_e))._field_target._field_mutable || ((*((*((*(_97530_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1aab5c2a9_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, _9813_mutable, false, &((*((*(_97530_f))))._field_Type), _97549_d, _97564_errorToken)) {
		_1aab57a24_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_97530_f))))._field_Type), _97549_d, (*(_97564_errorToken)), _1aabbe393_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1aaa2e9d9_StructArgExpr>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1aaa2e9d9_StructArgExpr>(_1aaa2e9d9_StructArgExpr{._field_Token=(*(_97564_errorToken)), ._field_Field=(*(_97530_f)), ._field_Expr=(*(_97549_d))})); };
}



inline void _1aabb2584_checkPair(_1aabb140c_structLitChecker* _self_, jule::Ptr<_1aa10736a_FieldExprPair>* _99430_pair, jule::Slice<jule::Ptr<_1aa102b4b_Expr>>* _99462_exprs) {
	jule::Ptr<_1aa9689cd_FieldIns> _9967_f = _1aa96a9ad_FindField((*(_self_))._field_s.ptr(), (*((*((*(_99430_pair))))._field_Field))._field_Kind);;
	if ((_9967_f == nullptr)) {
		_1aabb1990_pushErr(_self_, (*((*(_99430_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_99430_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_julec_label_1bdab87c9:;
	{
		auto expr = _99462_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdab89a5:;
		if (it != expr_end) {
			jule::Ptr<_1aa102b4b_Expr> _100415_expr = *it;
			{
				{
					auto &_match_expr{ (*(_100415_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1bdaba369:;
						{
							jule::Ptr<_1aa10736a_FieldExprPair> _10079_dpair = (*(_100415_expr))._field_Kind.unsafe_cast_ptr<_1aa10736a_FieldExprPair>();;
							{
								
								if (((*(_99430_pair)) == _10079_dpair)) {
									_case_begin_1bdabab3e:;
									{
										goto _iter_end_1bdab89a5;
									}
								}
								else if (((*(*((*(_99430_pair))))._field_Field.alloc)._field_Kind == (*(*(_10079_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1bdababd8:;
									{
										_1aabb1990_pushErr(_self_, (*((*(_99430_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_99430_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
										return;;
									}
								}
								_match_end_1bdabaaa6:;
							};
						}
					}
					_match_end_1bdaba2e2:;
				};
			}
			_iter_next_1bdab89a5:;
			++it;
			goto _iter_begin_1bdab89a5;
		}
		_iter_end_1bdab89a5:;
	};
	if ((!(_1aab50c92_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9967_f))._field_Decl))._field_Public, (*(*(_9967_f))._field_Decl.alloc)._field_Token)))) {
		_1aabb1990_pushErr(_self_, (*((*(_99430_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_99430_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1aabb1d03_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aabecdb6_Type> _10247_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_10247_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9967_f))._field_Type;
	jule::Ptr<_1aabb8db5_Data> _10287_d = _1aabdad3d_evalExpr((*(_self_))._field_e, (*((*(_99430_pair))))._field_Expr);;
	if ((_10287_d == nullptr)) {
		return;;
	};
	_1aabb2221_pushMatch(_self_, &(_9967_f), &(_10287_d), &((*((*(_99430_pair))))._field_Field));
}



inline jule::Bool _1aabb28c5_readyExprs(_1aabb140c_structLitChecker* _self_, jule::Slice<jule::Ptr<_1aa102b4b_Expr>>* _103531_exprs) {
	jule::Bool _10367_ok = true;;
	{
		auto expr = _103531_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdac4e9a:;
		if (it != expr_end) {
			jule::I32 _10378_i = it - expr->begin();
			jule::Ptr<_1aa102b4b_Expr> _103715_expr = *it;
			{
				{
					auto &_match_expr{ (*(_103715_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1bdac5c26:;
						{
							jule::Ptr<_1aa108976_KeyValPair> _10409_pair = (*(_103715_expr))._field_Kind.unsafe_cast_ptr<_1aa108976_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10409_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type41) {
									_case_begin_1bdac63db:;
									{
										goto _match_end_1bdac7d38;
									}
								}
								else {
									_case_begin_1bdac8630:;
									{
										_1aabb1990_pushErr(_self_, (*(_10409_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_10367_ok=false;
										goto _iter_next_1bdac4e9a;
									}
								}
								_match_end_1bdac7d38:;
							};
							(*((*(_103531_exprs))[_10378_i]))._field_Kind=jule::Any(jule::new_ptr<_1aa10736a_FieldExprPair>(_1aa10736a_FieldExprPair{._field_Field=(*((*(_10409_pair))._field_Key))._field_Token, ._field_Expr=(*_10409_pair.alloc)._field_Val}), &__jule_any_type81);
						}
					}
					_match_end_1bdac5b9e:;
				};
			}
			_iter_next_1bdac4e9a:;
			++it;
			_10378_i++;
			goto _iter_begin_1bdac4e9a;
		}
		_iter_end_1bdac4e9a:;
	};
	return _10367_ok;;
}



inline void _1aabb2b7d_check(_1aabb140c_structLitChecker* _self_, jule::Slice<jule::Ptr<_1aa102b4b_Expr>>* _105926_exprs) {
	if (((*(_105926_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1aabb28c5_readyExprs(_self_, _105926_exprs)))) {
		return;;
	};
	jule::Bool _10667_paired = false;;
	{
		auto expr = _105926_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdacae07:;
		if (it != expr_end) {
			jule::I32 _10678_i = it - expr->begin();
			jule::Ptr<_1aa102b4b_Expr> _106715_expr = *it;
			{
				{
					auto &_match_expr{ (*(_106715_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1bdad2969:;
						{
							jule::Ptr<_1aa10736a_FieldExprPair> _10709_pair = (*(_106715_expr))._field_Kind.unsafe_cast_ptr<_1aa10736a_FieldExprPair>();;
							if (((_10678_i > 0LL) && (!(_10667_paired)))) {
								_1aabb1990_pushErr(_self_, (*(_10709_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10667_paired=true;
							_1aabb2584_checkPair(_self_, &(_10709_pair), _105926_exprs);
						}
					}
					else {
						_case_begin_1bdaccce9:;
						{
							if (_10667_paired) {
								_1aabb1990_pushErr(_self_, (*(_106715_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10678_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1aabb1990_pushErr(_self_, (*(_106715_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1bdacae07;
							};
							jule::Ptr<_1aa9689cd_FieldIns> _10859_field = (*((*(_self_))._field_s))._field_Fields[_10678_i];;
							if ((!(_1aab50c92_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10859_field))._field_Decl))._field_Public, (*(*(_10859_field))._field_Decl.alloc)._field_Token)))) {
								_1aabb1990_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has mixed public and non-public fields", 80)), jule::Slice<jule::Any>());
								_1aabb1d03_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use label-expression pairs to instantiate, such as Struct{x:foo, y:bar}", 71)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1aabecdb6_Type> _10939_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10939_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*(_10859_field))._field_Type;
							jule::Ptr<_1aabb8db5_Data> _10979_d = _1aabdad3d_evalExpr((*(_self_))._field_e, _106715_expr);;
							if ((_10979_d == nullptr)) {
								goto _iter_next_1bdacae07;
							};
							_1aabb2221_pushMatch(_self_, &(_10859_field), &(_10979_d), &((*(_106715_expr))._field_Token));
						}
					}
					_match_end_1bdaccc83:;
				};
			}
			_iter_next_1bdacae07:;
			++it;
			_10678_i++;
			goto _iter_begin_1bdacae07;
		}
		_iter_end_1bdacae07:;
	};
	if ((!(_10667_paired))) {
		jule::I32 _11084_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I32 _11098_diff = (_11084_n - (*(_105926_exprs)).len());;
		{
			
			if ((_11098_diff <= 0LL)) {
				_case_begin_1bdad641d:;
				{
					return;;
				}
			}
			_match_end_1bdad62ec:;
		};
		_1ace17078_Builder _11158_idents = static__1ace178c5_New(32LL);;
		for (; (_11098_diff > 0LL); (_11098_diff)--) {
			{
				({
					auto except = _1ace18057_WriteStr(&_11158_idents, jule::Str::lit(", ", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1117:5"));
					(except.result);
				});
				({
					auto except = _1ace18057_WriteStr(&_11158_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_11084_n - _11098_diff)]))._field_Decl))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1118:5"));
					(except.result);
				});
			}
		_iter_next_1bdad7034:;
		}
		_iter_end_1bdad7034:;;
		_1aabb1990_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_1ace19388_Buf(&_11158_idents).slice(2LL)), &__jule_any_type5); __jule_collection; }));
	};
}








inline jule::Bool _1aabb31de_rangeChecker_eq(_1aabb31de_rangeChecker *_self_, _1aabb31de_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1aab70795_Var> _1aabb370b_buildVar(_1aabb31de_rangeChecker* _self_, jule::Ptr<_1aa95a7c2_VarDecl>* _113525_decl) {
	jule::Ptr<_1aab70795_Var> _11367_v = _1aab2323c_buildVar((*(_113525_decl)));;
	return _11367_v;;
}



inline void _1aabb3909_setSizeKey(_1aabb31de_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1aa0da6d3_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1aabb370b_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
}



inline void _1aabb3d27_checkRangeExprValidity(_1aabb31de_rangeChecker* _self_, jule::Ptr<_1aabb8db5_Data>* _115443_d, jule::Ptr<_1aab70795_Var>* _115454_key, jule::Ptr<_1aabecdb6_Type>* _115470_k) {
	jule::Bool _11557__mut = (*((*(_115454_key))))._field_Mutable;;
	if ((_11557__mut && (!(_1aac00209_Mutable((*(_115470_k)).ptr()))))) {
		_11557__mut=false;
	};
	_1aab5c2a9_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11557__mut, (*((*(_115454_key))))._field_Reference, &((*((*((*(_115454_key))))._field_TypeSym))._field_Type), _115443_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1aabb4025_checkSlice(_1aabb31de_rangeChecker* _self_) {
	_1aabb3909_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1aa0da6d3_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1aac0b1c1_Slc> _11737_slc = _1aac02030_Slc((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1aabb370b_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=(*(_11737_slc))._field_Elem});
	_1aabb3d27_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11737_slc.alloc)._field_Elem));
}



inline void _1aabb4223_checkArray(_1aabb31de_rangeChecker* _self_) {
	_1aabb3909_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1aa0da6d3_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1aac0d4e2_Arr> _11867_arr = _1aac01c99_Arr((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1aabb370b_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=(*(_11867_arr))._field_Elem});
	_1aabb3d27_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11867_arr.alloc)._field_Elem));
}



inline void _1aabb4421_checkMapKeyA(_1aabb31de_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1aa0da6d3_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1aac0c865_Map> _11987_m = _1aac02d00_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1aabb370b_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=(*(_11987_m))._field_Key});
	jule::Ptr<_1aabb8db5_Data> _12027_d = jule::new_ptr<_1aabb8db5_Data>((*(*(_self_))._field_d.alloc));;
	(*_12027_d.alloc)._field_Type=(*_11987_m.alloc)._field_Key;
	_1aabb3d27_checkRangeExprValidity(_self_, &(_12027_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11987_m.alloc)._field_Key));
}



inline void _1aabb461e_checkMapKeyB(_1aabb31de_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1aa0da6d3_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1aac0c865_Map> _12137_m = _1aac02d00_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1aabb370b_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=(*(_12137_m))._field_Val});
	jule::Ptr<_1aabb8db5_Data> _12177_d = jule::new_ptr<_1aabb8db5_Data>((*(*(_self_))._field_d.alloc));;
	(*_12177_d.alloc)._field_Type=(*_12137_m.alloc)._field_Val;
	_1aabb3d27_checkRangeExprValidity(_self_, &(_12177_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_12137_m.alloc)._field_Val));
}



inline void _1aabb481c_checkMap(_1aabb31de_rangeChecker* _self_) {
	_1aabb4421_checkMapKeyA(_self_);
	_1aabb461e_checkMapKeyB(_self_);
}



inline void _1aabb4a1a_checkStr(_1aabb31de_rangeChecker* _self_) {
	_1aabb3909_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1aa0da6d3_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1aabb370b_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(jule::Str::lit("byte", 4))))._field_TypeSym;
}



inline void _1aabb4c18_checkComptime(_1aabb31de_rangeChecker* _self_) {
	_1aabb3909_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1aab50533_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1aab50533_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1aa0da6d3_IsIgnoreIdent((*((*((*(_self_))._field_rang))._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1aabb370b_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _1aabb4e9e_checkComptimeRange(_1aabb31de_rangeChecker* _self_) {
	jule::Ptr<_1aaac1152_comptimeRange> _12527_range = _1aac04609_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr());;
	{
		auto &_match_expr{ (*(_12527_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data6)) {
			_case_begin_1bdb07dce:;
			{
				_1aabb4c18_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1bdb081dc:;
			{
				_1aab50533_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bdb08176:;
	};
}



inline jule::Bool _1aabb5235_check(_1aabb31de_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Type))._field_Variadic) {
			_case_begin_1bdb0b861:;
		}
		else if ((_1aac02030_Slc((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdb0b322:;
			{
				_1aabb4025_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1aac01c99_Arr((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_1bdb09ba0:;
			{
				_1aabb4223_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1aac02d00_Map((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_1bdb09c16:;
			{
				_1aabb481c_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1aac04609_comptimeRange((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_1bdb0a2cc:;
			{
				return _1aabb4e9e_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1bdb09b28:;
			{
				jule::Ptr<_1aac06bc2_Prim> _12854_prim = _1aac00ec9_Prim((*((*(_self_))._field_d))._field_Type);;
				if (((_12854_prim != nullptr) && _1aac0a18c_IsStr(_12854_prim))) {
					_1aabb4a1a_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1bdb09a18:;
	};
	_1aab50533_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1aabb6005_prepareTypes(_1aabb5b09_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1aaa40511_Types((*(_self_))._field_f);
	};
}



inline jule::Bool _1aabb6346_prepareExprs(_1aabb5b09_retTypeChecker* _self_, jule::Ptr<_1aa102b4b_Expr>* _131533_e) {
	jule::Bool __jule_func_result = false;
	if (((*(_131533_e)) == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_131533_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bdb120d6:;
			{
				(*(_self_))._field_exprDecls=(*((*((*(_131533_e))))._field_Kind.unsafe_cast_ptr<_1aa103740_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1bdb11db6:;
			{
				(*(_self_))._field_exprDecls=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa102b4b_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_131533_e)); __jule_collection; });
			}
		}
		_match_end_1bdb11d50:;
	};
	__jule_func_result=true;
	jule::Ptr<_1aabbad84_eval> _13267_eval = _1aab57408_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));;
	(*(_13267_eval))._field_target._field_mutable=(*(_self_))._field_mutable;
	{
		auto expr = &((*(_self_))._field_exprDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb144c3:;
		if (it != expr_end) {
			jule::I32 _13288_i = it - expr->begin();
			jule::Ptr<_1aa102b4b_Expr> _132815_expr = *it;
			{
				if ((_13288_i < (*(_self_))._field_types.len())) {
					(*_13267_eval.alloc)._field_prefix=(*(_self_))._field_types[_13288_i];
				};
				jule::Ptr<_1aabb8db5_Data> _13328_d = _1aabdad3d_evalExpr(_13267_eval, _132815_expr);;
				__jule_func_result=(__jule_func_result && (_13328_d != nullptr));
				if (__jule_func_result) {
					{ jule::Slice<jule::Ptr<_1aabb8db5_Data>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push(_13328_d); };
				};
			}
			_iter_next_1bdb144c3:;
			++it;
			_13288_i++;
			goto _iter_begin_1bdb144c3;
		}
		_iter_end_1bdb144c3:;
	};
	return __jule_func_result;;
}



inline void _1aabb6544_checkExprs(_1aabb5b09_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb16ea9:;
		if (it != expr_end) {
			jule::I32 _13458_i = it - expr->begin();
			jule::Ptr<_1aabb8db5_Data> _134515_d = *it;
			{
				jule::Ptr<_1aa102b4b_Expr> _13468_expr = (*(_self_))._field_exprDecls[_13458_i];;
				if ((((*(_self_))._field_mutable && (!((*(_134515_d))._field_Mutable))) && _1aac00209_Mutable((*_134515_d.alloc)._field_Type.ptr()))) {
					_1aab50533_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_13468_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1aaba6c93_assignTypeChecker _13518_ac = _1aaba6c93_assignTypeChecker{._field_s=(*((*(_self_))._field_sc))._field_s, ._field_dest=(*(_self_))._field_types[_13458_i], ._field_d=_134515_d, ._field_errorToken=(*(_13468_expr))._field_Token, ._field_refers=(*((*(_1aab08695_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1aaba7c94_check(&_13518_ac);
			}
			_iter_next_1bdb16ea9:;
			++it;
			_13458_i++;
			goto _iter_begin_1bdb16ea9;
		}
		_iter_end_1bdb16ea9:;
	};
	if (((*(_self_))._field_exprs.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1aaa345e3_TupleExpr>(_1aaa345e3_TupleExpr{._field_Datas=(*(_self_))._field_exprs}), &__jule_any_type83);
	} else if (((*(_self_))._field_exprs.len() == 1LL)) {
		(*(_self_))._field_model=(*((*(_self_))._field_exprs[0LL]))._field_Model;
	};
}



inline void _1aabb6742_tryFuncMultiRetForward(_1aabb5b09_retTypeChecker* _self_) {
	jule::Ptr<_1aac0bcb5_Tuple> _13717_tup = _1aac03086_Tup((*((*(_self_))._field_exprs[0LL]))._field_Type.ptr());;
	if (((*(_13717_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1bdb1eb4e;
	};
	(*(_self_))._field_model=(*((*(_self_))._field_exprs[0LL]))._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb20556:;
		if (it != expr_end) {
			jule::I32 _13767_i = it - expr->begin();
			{
				jule::Ptr<_1aabecdb6_Type> _13778_t1 = (*(_self_))._field_types[_13767_i];;
				jule::Ptr<_1aabecdb6_Type> _13788_t2 = (*(_13717_tup))._field_Types[_13767_i];;
				if ((!(_1aab57eca__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13778_t1), &(_13788_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1bdb1eb4e;
				};
			}
			_iter_next_1bdb20556:;
			++it;
			_13767_i++;
			goto _iter_begin_1bdb20556;
		}
		_iter_end_1bdb20556:;
	};
	return;;
	_julec_label_1bdb1eb4e:;
	_1aabb6940_notFitVariables(_self_);
}



inline void _1aabb6940_notFitVariables(_1aabb5b09_retTypeChecker* _self_) {
	_1ace17078_Builder _13897_wanted = static__1ace178c5_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb24170:;
		if (it != expr_end) {
			jule::I32 _13907_i = it - expr->begin();
			jule::Ptr<_1aabecdb6_Type> _139010_t = *it;
			{
				({
					auto except = _1ace18057_WriteStr(&_13897_wanted, _1aabed2b2_Str(_139010_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1391:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13907_i) > 1LL)) {
					({
						auto except = _1ace18057_WriteStr(&_13897_wanted, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1393:5"));
						(except.result);
					});
				};
			}
			_iter_next_1bdb24170:;
			++it;
			_13907_i++;
			goto _iter_begin_1bdb24170;
		}
		_iter_end_1bdb24170:;
	};
	_1ace17078_Builder _13967_given = static__1ace178c5_New(32LL);;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb2402c:;
		if (it != expr_end) {
			jule::I32 _13977_i = it - expr->begin();
			jule::Ptr<_1aabb8db5_Data> _139710_d = *it;
			{
				({
					auto except = _1ace18057_WriteStr(&_13967_given, _1aabed2b2_Str((*(_139710_d))._field_Type.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1398:4"));
					(except.result);
				});
				if ((((*(_self_))._field_exprs.len() - _13977_i) > 1LL)) {
					({
						auto except = _1ace18057_WriteStr(&_13967_given, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1400:5"));
						(except.result);
					});
				};
			}
			_iter_next_1bdb2402c:;
			++it;
			_13977_i++;
			goto _iter_begin_1bdb2402c;
		}
		_iter_end_1bdb2402c:;
	};
	if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
		_1aab50533_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("not enough variables for return\n       want (@)\n       have (@)", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ace188d7_Str(&_13897_wanted), &__jule_any_type5); (*it++) = jule::Any(_1ace188d7_Str(&_13967_given), &__jule_any_type5); __jule_collection; }));
	} else {
		_1aab50533_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("too many variables for return\n       want (@)\n       have (@)", 61)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1ace188d7_Str(&_13897_wanted), &__jule_any_type5); (*it++) = jule::Any(_1ace188d7_Str(&_13967_given), &__jule_any_type5); __jule_collection; }));
	};
}



inline jule::Bool _1aabb6c81_check(_1aabb5b09_retTypeChecker* _self_, jule::Ptr<_1aa102b4b_Expr>* _141026_e) {
	_1aabb6005_prepareTypes(_self_);
	jule::Bool _14127_ok = _1aabb6346_prepareExprs(_self_, _141026_e);;
	if ((!(_14127_ok))) {
		return false;;
	};
	{
		
		if (((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL)) && _1aaa3c497_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr()))) {
			_case_begin_1bdb2a918:;
			{
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL)) && (_1aac03086_Tup((*((*(_self_))._field_exprs[0LL]))._field_Type.ptr()) != nullptr))) {
			_case_begin_1bdb2aab1:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1bdb2d894:;
						{
							_1aabb6742_tryFuncMultiRetForward(_self_);
							return true;;
						}
					}
					_match_end_1bdb2d7d9:;
				};
				goto _case_begin_1bdb2ab27;
			}
		}
		else if (((*(_self_))._field_exprs.len() != (*(_self_))._field_types.len())) {
			_case_begin_1bdb2ab27:;
			{
				_1aabb6940_notFitVariables(_self_);
				return false;;
			}
		}
		_match_end_1bdb2a82a:;
	};
	_1aabb6544_checkExprs(_self_);
	return true;;
}








inline jule::Bool _1aabb8db5_Data_eq(_1aabb8db5_Data *_self_, _1aabb8db5_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1aabb92d3_IsNil(_1aabb8db5_Data* _self_) {
	return _1aabee03d_IsNil((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1aabb9569_IsVoid(_1aabb8db5_Data* _self_) {
	return _1aabee2c4_Void((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1aabb9800_IsConst(_1aabb8db5_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1aabb9b41_GoodOperand(_1aabb8db5_Data* _self_, jule::Ptr<_1aabb8db5_Data>* _6228_other) {
	if ((_1aac01a13_TypeEnum((*((*(_6228_other))))._field_Type.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1aac00ec9_Prim((*((*(_6228_other))))._field_Type.ptr()) == nullptr) || (!(_1aac0a423_IsAny(_1aac00ec9_Prim((*((*(_6228_other))))._field_Type.ptr()).ptr())))) && (_1aac02a69_Trait((*((*(_6228_other))))._field_Type.ptr()) == nullptr)) && (!(_1aabee03d_IsNil((*(_self_))._field_Type))));;
}








inline jule::Bool _1aabba03c_Value_eq(_1aabba03c_Value *_self_, _1aabba03c_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1aabba416_target_eq(_1aabba416_target *_self_, _1aabba416_target _other_) {
	return 
		(_self_->_field_ignored == _other_._field_ignored) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _1aabbad84_eval_eq(_1aabbad84_eval *_self_, _1aabbad84_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		_1aabba416_target_eq(&_self_->_field_target, _self_->_field_target);
}

inline void _1aabbb35c_pushErr(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args) {
	_1aab50533_pushErr((*(_self_))._field_s.ptr(), _9723_token, _9745_fmt, _9765_args);
}



inline void _1aabbb6c0_pushSuggestion(_1aabbad84_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args) {
	_1aab50896_pushSuggestion((*(_self_))._field_s.ptr(), _10230_fmt, _10250_args);
}



inline void _1aabbb8bd_allowBuiltin(_1aabbad84_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1aabbbabb_disallowBuiltin(_1aabbad84_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1aabbbd52_isUnsafe(_1aabbad84_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1aabbc0d8_isGlobal(_1aabbad84_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4)) {
			_case_begin_1bdb8c44c:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bdb8c804:;
			{
				return false;;
			}
		}
		_match_end_1bdb8c65b:;
	};
}



inline jule::Bool _1aabbc429_applyNumericPrefix(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _12939_d) {
	if ((((((*(_12939_d)) == nullptr) || (!(_1aabb9800_IsConst((*(_12939_d)).ptr())))) || (_1aac00ec9_Prim((*((*(_12939_d))))._field_Type.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1aac06bc2_Prim> _1363_prim = _1aac00ec9_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1363_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1aaabe947_IsFloat(_1aac07046_Str(_1363_prim.ptr()))) {
			_case_begin_1bdb90252:;
			{
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>((*(*(_self_))._field_prefix.alloc));
				_1aaa262b6_SetF64((*((*(_12939_d))))._field_Constant.ptr(), _1aaa2543b_AsF64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		else if (_1aaabe02e_IsSigInt(_1aac07046_Str(_1363_prim.ptr()))) {
			_case_begin_1bdb902b8:;
			{
				if ((!(_1aaba41e1_sigAssignable(_1aac07046_Str(_1363_prim), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>((*(*(_self_))._field_prefix.alloc));
				_1aaa256e4_SetI64((*((*(_12939_d))))._field_Constant.ptr(), _1aaa24e1e_AsI64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		else if (_1aaabe33c_IsUnsigInt(_1aac07046_Str(_1363_prim))) {
			_case_begin_1bdb9032e:;
			{
				if ((!(_1aaba45a9_unsigAssignable(_1aac07046_Str(_1363_prim), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>((*(*(_self_))._field_prefix.alloc));
				_1aaa2599c_SetU64((*((*(_12939_d))))._field_Constant.ptr(), _1aaa251a5_AsU64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		_match_end_1bdb8edbc:;
	};
	return true;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabbc76a_litStr(_1aabbad84_eval* _self_, jule::Ptr<_1aa103ad6_LitExpr>* _16419_l) {
	jule::Str _1657_s = jule::Str();;
	if (_1aa0d91d7_IsRawStr((*((*(_16419_l))))._field_Value)) {
		_1657_s=_1aaba2563_ToRawStr((*((*(_16419_l))))._field_Value);
	} else {
		_1657_s=_1aaba28a4_ToStr((*((*(_16419_l))))._field_Value);
	};
	jule::Ptr<_1aa9b96cc_Const> _1717_constant = static__1aaa23516_NewStr(_1657_s);;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac76deb_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1717_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1717_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabbcaab_litRune(_1aabbad84_eval* _self_, jule::Ptr<_1aa103ad6_LitExpr>* _18220_l) {
	jule::I32 _1833_r = _1aab8736c_ToRune((*((*(_18220_l))))._field_Value);;
	jule::Ptr<_1aabb8db5_Data> _1847_data = jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aaa22c30_NewI64(static_cast<jule::I64>(_1833_r))});;
	if ((_1833_r <= 255LL)) {
		(*(_1847_data))._field_Type=(*((*(_1aac79e32_findBuiltinTypeAlias(jule::Str::lit("byte", 4))))._field_TypeSym))._field_Type;
	} else {
		(*(_1847_data))._field_Type=(*((*(_1aac79e32_findBuiltinTypeAlias(jule::Str::lit("rune", 4))))._field_TypeSym))._field_Type;
	};
	(*(_1847_data))._field_Model=jule::Any(jule::new_ptr<_1aaa37c34_RuneExpr>(_1aaa37c34_RuneExpr{._field_Code=_1833_r}), &__jule_any_type84);
	(*_1847_data.alloc)._field_Mutable=true;
	(*_1847_data.alloc)._field_IsRune=true;
	(*_1847_data.alloc)._field_untyped=true;
	return _1847_data;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabbcdec_litFloat(_1aabbad84_eval* _self_, jule::Ptr<_1aa103ad6_LitExpr>* _20121_l) {
	jule::F64 _2023_f = ({
		auto except = _1a7924b24_ParseFloat((*((*(_20121_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1aa9b96cc_Const> _2037_constant = static__1aaa237d0_NewF64(_2023_f);;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac7987c_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2037_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_2037_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabbd23d_litInt(_1aabbad84_eval* _self_, jule::Ptr<_1aa103ad6_LitExpr>* _21323_l) {
	;
	jule::Str _2167_lit = (*((*(_21323_l))))._field_Value;;
	jule::I32 _2177_base = 0LL;;
	{
		
		if (_1bb08556d_HasPrefix(_2167_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1bdba1b15:;
			{
				(_2167_lit).mut_slice(2LL);;
				_2177_base=16LLU;
			}
		}
		else if (_1bb08556d_HasPrefix(_2167_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1bdba1b7b:;
			{
				(_2167_lit).mut_slice(2LL);;
				_2177_base=2LLU;
			}
		}
		else if (_1bb08556d_HasPrefix(_2167_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1bdba1a27:;
			{
				(_2167_lit).mut_slice(2LL);;
				_2177_base=8LLU;
			}
		}
		else if (((_2167_lit[0LL] == '0') && (_2167_lit.len() > 1LL))) {
			_case_begin_1bdba1a8d:;
			{
				(_2167_lit).mut_slice(1LL);;
				_2177_base=8LLU;
			}
		}
		else {
			_case_begin_1bdba16b4:;
			{
				_2177_base=10LLU;
			}
		}
		_match_end_1bdba161a:;
	};
	jule::Ptr<_1aabb8db5_Data> _2377_d = jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
	jule::Bool _2397_ok = true;;
	jule::I64 _2403_sig = ({
		auto except = _1a791d469_ParseInt(_2167_lit, _2177_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2397_ok=false;

			0LL;
		});
	});;
	if (_2397_ok) {
		(*_2377_d.alloc)._field_Constant=static__1aaa22c30_NewI64(_2403_sig);
		(*_2377_d.alloc)._field_Type=_1aac77acd_primInt;
	} else {
		jule::U64 _2484_unsig = ({
			auto except = _1a791ceb3_ParseUint(_2167_lit, _2177_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1aabbb35c_pushErr(_self_, (*((*(_21323_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2377_d.alloc)._field_Constant=static__1aaa22e83_NewU64(_2484_unsig);
		(*_2377_d.alloc)._field_Type=_1aac77715_primUint;
	};
	(*_2377_d.alloc)._field_Model=jule::Any((*_2377_d.alloc)._field_Constant, &__jule_any_type15);
	(*_2377_d.alloc)._field_untyped=true;
	if ((!(_1aabbc429_applyNumericPrefix(_self_, &(_2377_d))))) {
		_1aabe4c37_fitBitsize(&(_2377_d));
	};
	return _2377_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabbd57e_litNum(_1aabbad84_eval* _self_, jule::Ptr<_1aa103ad6_LitExpr>* _26823_l) {
	{
		
		if (_1aa0d9d86_IsFloat((*((*(_26823_l))))._field_Value)) {
			_case_begin_1bdba9c3e:;
			{
				return _1aabbcdec_litFloat(_self_, _26823_l);;
			}
		}
		else {
			_case_begin_1bdba9bc8:;
			{
				return _1aabbd23d_litInt(_self_, _26823_l);;
			}
		}
		_match_end_1bdba9ac9:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabbd8c0_evalLit(_1aabbad84_eval* _self_, jule::Ptr<_1aa103ad6_LitExpr> _27723_lit) {
	{
		
		if (_1aa0d8e51_IsStr((*(_27723_lit))._field_Value)) {
			_case_begin_1bdbaada5:;
			{
				return _1aabbc76a_litStr(_self_, &(_27723_lit));;
			}
		}
		else if (_1aa0d94a1_IsRune((*(_27723_lit))._field_Value)) {
			_case_begin_1bdbaae4e:;
			{
				return _1aabbcaab_litRune(_self_, &(_27723_lit));;
			}
		}
		else if (_1aa0da150_IsNum((*_27723_lit.alloc)._field_Value)) {
			_case_begin_1bdbaaec6:;
			{
				return _1aabbd57e_litNum(_self_, &(_27723_lit));;
			}
		}
		else {
			_case_begin_1bdbaa866:;
			{
				return nullptr;;
			}
		}
		_match_end_1bdbaa767:;
	};
}



inline jule::Any _1aabbdc11_findBuiltins(_1aabbad84_eval* _self_, jule::Str* _29029_ident) {
	if (_1aab493b7_IsPub((*(_29029_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data2)) {
				_case_begin_1bdbad281:;
				{
					jule::Any _2949_def = _1aabe4a06_findBuiltinsImport(_29029_ident, (*(_self_))._field_lookup.cast_ptr<_1aab2ee08_ImportInfo>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data2));;
					if ((_2949_def != nullptr)) {
						return _2949_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4)) {
				_case_begin_1bdbacec8:;
				{
					jule::Any _2999_def = _1aabe5760_findBuiltinsSema(_29029_ident, (*(_self_))._field_lookup.cast_ptr<_1aab4c62e_sema>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4));;
					if ((_2999_def != nullptr)) {
						return _2999_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)) {
				_case_begin_1bdbad2e7:;
				{
					jule::Any _3049_def = _1aabe5760_findBuiltinsSema(_29029_ident, (*((*(_self_))._field_lookup.cast_ptr<_1aab05032_scopeChecker>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)))._field_s);;
					if ((_3049_def != nullptr)) {
						return _3049_def;;
					};
				}
			}
			_match_end_1bdbad1c6:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1aac7a1b8_findBuiltinDef(_29029_ident);;
}



inline jule::Any _1aabbe10c_getDef(_1aabbad84_eval* _self_, jule::Str* _31723_ident, jule::Bool _31735_binded) {
	jule::Ptr<_1aab70795_Var> _3227_v = ((_1aac23ae0_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1aac222c5_FindVar((*(_self_))._field_lookup.data, (*(_31723_ident)), _31735_binded);;
	if ((_3227_v != nullptr)) {
		return jule::Any(_3227_v, &__jule_any_type7);;
	};
	jule::Ptr<_1aabec1a1_TypeAlias> _3277_ta = ((_1aac23ae0_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1aac226c1_FindTypeAlias((*(_self_))._field_lookup.data, (*(_31723_ident)), _31735_binded);;
	if ((_3277_ta != nullptr)) {
		return jule::Any(_3277_ta, &__jule_any_type8);;
	};
	if ((!(_31735_binded))) {
		jule::Ptr<_1aaa46935_Trait> _3338_t = ((_1aac23ae0_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1aac23309_FindTrait((*(_self_))._field_lookup.data, (*(_31723_ident)));;
		if ((_3338_t != nullptr)) {
			return jule::Any(_3338_t, &__jule_any_type11);;
		};
		jule::Ptr<_1aaa490db_Enum> _3388_enm = ((_1aac23ae0_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1aac2364a_FindEnum((*(_self_))._field_lookup.data, (*(_31723_ident)));;
		if ((_3388_enm != nullptr)) {
			return jule::Any(_3388_enm, &__jule_any_type12);;
		};
		jule::Ptr<_1aaa4a7e6_TypeEnum> _3438_tenm = ((_1aac23ae0_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1aac2398b_FindTypeEnum((*(_self_))._field_lookup.data, (*(_31723_ident)));;
		if ((_3438_tenm != nullptr)) {
			return jule::Any(_3438_tenm, &__jule_any_type13);;
		};
	};
	jule::Ptr<_1aaa3b221_Fn> _3497_f = ((_1aac23ae0_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1aac22eb8_FindFn((*(_self_))._field_lookup.data, (*(_31723_ident)), _31735_binded);;
	if ((_3497_f != nullptr)) {
		return jule::Any(_3497_f, &__jule_any_type10);;
	};
	jule::Ptr<_1aa966767_Struct> _3547_s = ((_1aac23ae0_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1aac22abc_FindStruct((*(_self_))._field_lookup.data, (*(_31723_ident)), _31735_binded);;
	if ((_3547_s != nullptr)) {
		return jule::Any(_3547_s, &__jule_any_type9);;
	};
	return _1aabbdc11_findBuiltins(_self_, _31723_ident);;
}



inline jule::Ptr<_1aab1cd80_ReferenceStack> _1aabbe393_getOwnerRefers(_1aabbad84_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)) {
			_case_begin_1bdbb8027:;
			{
				return _1aab0892b_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1aab05032_scopeChecker>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));;
			}
		}
		else {
			_case_begin_1bdbb68c7:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1bdbb6861:;
	};
	return nullptr;;
}



inline void _1bdbc6c28_pushReference(_1aabbad84_eval* _self_, jule::Ptr<_1aa969605_StructIns>* _38037_ref) {
	jule::Ptr<_1aab1cd80_ReferenceStack> _3817_refers = _1aabbe393_getOwnerRefers(_self_);;
	if (((_3817_refers != nullptr) && (!(_1bdbc8dc3_Exist(_3817_refers, (*(_38037_ref))))))) {
		_1aab1dbd8_Push(_3817_refers, jule::Any((*(_38037_ref)), &__jule_any_type64));
	};
}

inline void _1bdbd27c2_pushReference(_1aabbad84_eval* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _38037_ref) {
	jule::Ptr<_1aab1cd80_ReferenceStack> _3817_refers = _1aabbe393_getOwnerRefers(_self_);;
	if (((_3817_refers != nullptr) && (!(_1bdbd4b15_Exist(_3817_refers, (*(_38037_ref))))))) {
		_1aab1dbd8_Push(_3817_refers, jule::Any((*(_38037_ref)), &__jule_any_type65));
	};
}

inline void _1bdbe8a5d_pushReference(_1aabbad84_eval* _self_, jule::Ptr<_1aab70795_Var>* _38037_ref) {
	jule::Ptr<_1aab1cd80_ReferenceStack> _3817_refers = _1aabbe393_getOwnerRefers(_self_);;
	if (((_3817_refers != nullptr) && (!(_1bdbead07_Exist(_3817_refers, (*(_38037_ref))))))) {
		_1aab1dbd8_Push(_3817_refers, jule::Any((*(_38037_ref)), &__jule_any_type7));
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabbe98c__evalEnum(_1aabbad84_eval* _self_, jule::Ptr<_1aaa490db_Enum> _38725_enm) {
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_38725_enm, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabbed88_evalEnum(_1aabbad84_eval* _self_, jule::Ptr<_1aaa490db_Enum> _39628_enm, jule::Ptr<_1aa0d7ceb_Token> _39640_errorToken) {
	if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_39628_enm))._field_Public, (*_39628_enm.alloc)._field_Token)))) {
		_1aabbb35c_pushErr(_self_, _39640_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_39628_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1aabbe98c__evalEnum(_self_, _39628_enm);;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc01c9__evalTypeEnum(_1aabbad84_eval* _self_, jule::Ptr<_1aaa4a7e6_TypeEnum> _40529_enm) {
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_40529_enm, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc05c5_evalTypeEnum(_1aabbad84_eval* _self_, jule::Ptr<_1aaa4a7e6_TypeEnum> _41432_enm, jule::Ptr<_1aa0d7ceb_Token> _41448_errorToken) {
	if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_41432_enm))._field_Public, (*_41432_enm.alloc)._field_Token)))) {
		_1aabbb35c_pushErr(_self_, _41448_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_41432_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1aabc01c9__evalTypeEnum(_self_, _41432_enm);;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc0916__evalStruct(_1aabbad84_eval* _self_, jule::Ptr<_1aa969605_StructIns> _42327_s) {
	jule::Ptr<_1aabb8db5_Data> _4247_d = jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_42327_s, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_42327_s, &__jule_any_type64), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
	return _4247_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc0d12_evalStruct(_1aabbad84_eval* _self_, jule::Ptr<_1aa966767_Struct> _43430_s, jule::Ptr<_1aa0d7ceb_Token> _43446_errorToken) {
	if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_43430_s))._field_Public, (*_43430_s.alloc)._field_Token)))) {
		_1aabbb35c_pushErr(_self_, _43446_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_43430_s.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aabc14b6_checkDeprecated(_self_, &((*(_43430_s))._field_Directives), _43446_errorToken);
	jule::Ptr<_1aa969605_StructIns> _4437_ins = _1aa966b85_instance(_43430_s);;
	if (((*_43430_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1aa969605_StructIns> _4508_exist = _1aa966ec6_appendInstance(_43430_s, &(_4437_ins));;
		if ((_4508_exist != nullptr)) {
			_4437_ins=_4508_exist;
		} else {
			if ((!(_1aab68c77_precheckStructIns((*(_self_))._field_s, &(_4437_ins), _43446_errorToken)))) {
				return nullptr;;
			};
		};
	};
	_1bdbc6c28_pushReference(_self_, &(_4437_ins));
	return _1aabc0916__evalStruct(_self_, _4437_ins);;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc1153_evalFnIns(_1aabbad84_eval* _self_, jule::Ptr<_1aaa3e2ce_FnIns> _46425_f) {
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_46425_f, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_46425_f, &__jule_any_type65), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline void _1aabc14b6_checkDeprecated(_1aabbad84_eval* _self_, jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>* _47336_directives, jule::Ptr<_1aa0d7ceb_Token> _47367_tok) {
	if (_1aabbbd52_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1aa0ecc34_Directive> _4783_d = _1aabe463d_findDirective(_47336_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_4783_d != nullptr)) {
		if (((*_4783_d.alloc)._field_Args.len() == 0LL)) {
			_1aabbb35c_pushErr(_self_, _47367_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type5); __jule_collection; }));
		} else {
			_1aabbb35c_pushErr(_self_, _47367_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_4783_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
		_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc18b2_evalFn(_1aabbad84_eval* _self_, jule::Ptr<_1aaa3b221_Fn> _48926_f, jule::Ptr<_1aa0d7ceb_Token> _48934_errorToken) {
	if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_48926_f))._field_Public, (*_48926_f.alloc)._field_Token)))) {
		_1aabbb35c_pushErr(_self_, _48934_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_48926_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aabc14b6_checkDeprecated(_self_, &((*(_48926_f))._field_Directives), _48934_errorToken);
	jule::Ptr<_1aaa3e2ce_FnIns> _4987_ins = _1aaa3c9b4_instance(_48926_f);;
	if (((*_48926_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1aaa3e2ce_FnIns> _5058_exist = _1aaa3ccc2_appendInstance(_48926_f, &(_4987_ins));;
		if ((_5058_exist != nullptr)) {
			_4987_ins=_5058_exist;
		};
	};
	_1bdbd27c2_pushReference(_self_, &(_4987_ins));
	return _1aabc1153_evalFnIns(_self_, _4987_ins);;
}



inline void _1aabc1cd0_pushIllegalCycleError(_1aabbad84_eval* _self_, jule::Ptr<_1aab70795_Var>* _51438_v1, jule::Ptr<_1aab70795_Var>* _51449_v2, _1ace17078_Builder* _51464_message) {
	;
	jule::Str _5163_refersTo = _1ace26829_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_51438_v1))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_51449_v2))))._field_Ident, &__jule_any_type5); __jule_collection; }));;
	jule::Slice<jule::U8> _5173_buf = _1ace19388_Buf(_51464_message);;
	({
		auto except = _1ace18057_WriteStr(_51464_message, _1bb0851a5_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:518:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_51464_message, _5163_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:519:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(_51464_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:520:3"));
	});
	({
		auto except = _1ace17c16_Write(_51464_message, _5173_buf);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:521:3"));
		(except.result);
	});
}



inline jule::Bool _1aabc21cb_checkCrossCycle(_1aabbad84_eval* _self_, jule::Ptr<_1aab70795_Var>* _52432_v, _1ace17078_Builder* _52446_message) {
	{
		auto expr = &((*((*(_52432_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdbd8db1:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> *_52510_d = it;
			{
				if (((*(_52510_d)) == (*(_self_))._field_owner)) {
					_1aabc1cd0_pushIllegalCycleError(_self_, _52432_v, _52510_d, _52446_message);
					return false;;
				};
				if ((!(_1aabc21cb_checkCrossCycle(_self_, _52510_d, _52446_message)))) {
					_1aabc1cd0_pushIllegalCycleError(_self_, _52432_v, _52510_d, _52446_message);
					return false;;
				};
			}
			_iter_next_1bdbd8db1:;
			++it;
			goto _iter_begin_1bdbd8db1;
		}
		_iter_end_1bdbd8db1:;
	};
	return true;;
}



inline jule::Bool _1aabc25c7_checkIllegalCycles(_1aabbad84_eval* _self_, jule::Ptr<_1aab70795_Var>* _54139_v, jule::Ptr<_1aa0d7ceb_Token> _54148_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_54139_v)))) {
		_1aabbb35c_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_owner.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1ace17078_Builder _5547_message = static__1ace178c5_New(32LL);;
	if ((!(_1aabc21cb_checkCrossCycle(_self_, _54139_v, &(_5547_message))))) {
		jule::Str _5578_errMsg = _1ace188d7_Str(&_5547_message);;
		_1ace18ad5_Clear(&_5547_message);
		_1aabc1cd0_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _54139_v, &(_5547_message));
		_5578_errMsg+=_1ace188d7_Str(&_5547_message);
		_1aabbb35c_pushErr(_self_, _54148_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5578_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*((*(_self_))._field_owner))._field_Depends=jule::append((*(*(_self_))._field_owner.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_54139_v)); __jule_collection; }));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc29c3_evalVar(_1aabbad84_eval* _self_, jule::Ptr<_1aab70795_Var> _56927_v, jule::Ptr<_1aa0d7ceb_Token> _56936_errorToken) {
	if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56927_v))._field_Public, (*_56927_v.alloc)._field_Token)))) {
		_1aabbb35c_pushErr(_self_, _56936_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56927_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aabc14b6_checkDeprecated(_self_, &((*(_56927_v))._field_Directives), _56936_errorToken);
	if (((*_56927_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1bdc00aba;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4)) {
			_case_begin_1bdbe26c2:;
			{
				jule::Bool _5864_ok = _1aabc25c7_checkIllegalCycles(_self_, &(_56927_v), _56936_errorToken);;
				if ((!(_5864_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)) {
			_case_begin_1bdbe210b:;
			{
				jule::Ptr<_1aab05032_scopeChecker> _5918_s = (*(_self_))._field_lookup.cast_ptr<_1aab05032_scopeChecker>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1);;
				jule::Ptr<_1aab05032_scopeChecker> _5928_root = _1aab0840e_getRoot(_5918_s);;
				if ((((((*_56927_v.alloc)._field_Scope != nullptr) && (!((*_56927_v.alloc)._field_Constant))) && ((*(_5928_root))._field_captured != nullptr)) && _1aabea468_isVarCaptured(_5928_root, _5918_s, _56927_v))) {
					_1aab08178_pushCaptured(_5928_root, &(_56927_v));
				};
				if (((!((*_56927_v.alloc)._field_Reference)) || _1aabbbd52_isUnsafe(_self_))) {
					goto _match_end_1bdbe24d5;
				};
				while ((((*_5918_s.alloc)._field_owner == nullptr) && ((*_5918_s.alloc)._field_parent != nullptr))) {
					{
						_5918_s=(*(_5918_s))._field_parent;
					}
				_iter_next_1bdbe61ed:;
				}
				_iter_end_1bdbe61ed:;;
				if (((((*_5918_s.alloc)._field_owner != nullptr) && (*(*(_5918_s))._field_owner.alloc)._field_Anon) && ((*_56927_v.alloc)._field_Scope != (*(*(_5918_s))._field_owner.alloc)._field_Scope))) {
					_1aabbb35c_pushErr(_self_, _56936_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56927_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		_match_end_1bdbe24d5:;
	};
	if (((*_56927_v.alloc)._field_Scope == nullptr)) {
		_1bdbe8a5d_pushReference(_self_, &(_56927_v));
	};
	if (((((!((*_56927_v.alloc)._field_Checked)) && (!((*_56927_v.alloc)._field_Binded))) && ((*_56927_v.alloc)._field_Scope == nullptr)) && (((*_56927_v.alloc)._field_Value == nullptr) || ((*((*_56927_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1aaa42524_SymTab> _6258_varfile = _1aab2c246_findVarFileInPackage(&((*((*(_self_))._field_s))._field_files), &(_56927_v));;
		jule::Ptr<_1aaa42524_SymTab> _6268_file = _1aab4ed5c_getCurrentFile((*(_self_))._field_s);;
		_1aab50115_setCurrentFile((*(_self_))._field_s, _6258_varfile);
		_1aab67627_checkVar((*(_self_))._field_s, &(_56927_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4));
		_1aab50115_setCurrentFile((*(_self_))._field_s, _6268_file);
	};
	(*_56927_v.alloc)._field_Used=true;
	if ((((*_56927_v.alloc)._field_TypeSym == nullptr) || ((*((*_56927_v.alloc)._field_TypeSym))._field_Type == nullptr))) {
		return nullptr;;
	};
	_julec_label_1bdc00aba:;
	jule::Ptr<_1aabb8db5_Data> _6457_d = jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=(*((*_56927_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_56927_v.alloc)._field_Mutable, ._field_Reference=(*_56927_v.alloc)._field_Reference, ._field_Lvalue=(!((*_56927_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_56927_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
	if ((((*_56927_v.alloc)._field_Value != nullptr) && ((*(*(_56927_v))._field_Value.alloc)._field_Data != nullptr))) {
		if (((!((*_56927_v.alloc)._field_Binded)) && _1aab70ba2_IsInitialized(_56927_v))) {
			(*(_6457_d))._field_IsRune=(*(*((*(_56927_v))._field_Value))._field_Data.alloc)._field_IsRune;
		};
		if (((*_56927_v.alloc)._field_Constant && ((*(*((*(_56927_v))._field_Value))._field_Data.alloc)._field_Constant != nullptr))) {
			(*(_6457_d))._field_Constant=jule::new_ptr<_1aa9b96cc_Const>((*(*((*((*(_56927_v))._field_Value))._field_Data))._field_Constant.alloc));
			(*_6457_d.alloc)._field_Model=jule::Any((*_6457_d.alloc)._field_Constant, &__jule_any_type15);
			if (_1aab711be_untypedConstant(_56927_v)) {
				_1aabbc429_applyNumericPrefix(_self_, &(_6457_d));
				(*_6457_d.alloc)._field_untyped=true;
			};
		};
	};
	return _6457_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc2dbe_evalTypeAlias(_1aabbad84_eval* _self_, jule::Ptr<_1aabec1a1_TypeAlias> _66933_ta, jule::Ptr<_1aa0d7ceb_Token> _66949_errorToken) {
	if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66933_ta))._field_Public, (*_66933_ta.alloc)._field_Token)))) {
		_1aabbb35c_pushErr(_self_, _66949_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_66933_ta.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66933_ta))._field_Used=true;
	jule::Trait _6787_kind = (*((*((*_66933_ta.alloc)._field_TypeSym))._field_Type))._field_Kind;;
	jule::Ptr<_1aabb8db5_Data> _67911_d = nullptr;;
	{
		auto &_match_expr{ _6787_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
			_case_begin_1bdc09871:;
			{
				_67911_d=_1aabc0916__evalStruct(_self_, _6787_kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data3)) {
			_case_begin_1bdc0c6ba:;
			{
				_67911_d=_1aabbe98c__evalEnum(_self_, _6787_kind.cast_ptr<_1aaa490db_Enum>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4)) {
			_case_begin_1bdc0cc92:;
			{
				_67911_d=_1aabc01c9__evalTypeEnum(_self_, _6787_kind.cast_ptr<_1aaa4a7e6_TypeEnum>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1bdc09ab3:;
			{
				_67911_d=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_66933_ta))._field_TypeSym))._field_Type.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});
				(*(_67911_d))._field_Model=jule::Any((*_67911_d.alloc)._field_Type, &__jule_any_type85);
			}
		}
		_match_end_1bdc0993c:;
	};
	(*((*(_67911_d))._field_Type))._field_Generic=(*_66933_ta.alloc)._field_Generic;
	return _67911_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc3210_evalTrait(_1aabbad84_eval* _self_, jule::Ptr<_1aaa46935_Trait> _72229_t) {
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_72229_t, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data2)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc360b_evalDef(_1aabbad84_eval* _self_, jule::Any* _73128_def, jule::Ptr<_1aa0d7ceb_Token> _73142_ident) {
	{
		auto &_match_expr{ (*(_73128_def)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bdc105e1:;
			{
				return _1aabc29c3_evalVar(_self_, (*(_73128_def)).cast_ptr<_1aab70795_Var>(&__jule_any_type7), _73142_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1bdc10404:;
			{
				return _1aabbed88_evalEnum(_self_, (*(_73128_def)).cast_ptr<_1aaa490db_Enum>(&__jule_any_type12), _73142_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1bdc10657:;
			{
				return _1aabc05c5_evalTypeEnum(_self_, (*(_73128_def)).cast_ptr<_1aaa4a7e6_TypeEnum>(&__jule_any_type13), _73142_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bdc106ce:;
			{
				return _1aabc0d12_evalStruct(_self_, (*(_73128_def)).cast_ptr<_1aa966767_Struct>(&__jule_any_type9), _73142_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bdc10756:;
			{
				jule::Ptr<_1aaa3b221_Fn> _7428_f = (*(_73128_def)).cast_ptr<_1aaa3b221_Fn>(&__jule_any_type10);;
				if ((!(*(_7428_f))._field_Ident.equal("init", 4))) {
					return _1aabc18b2_evalFn(_self_, _7428_f, _73142_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bdc107cd:;
			{
				return _1aabc1153_evalFnIns(_self_, (*(_73128_def)).cast_ptr<_1aaa3e2ce_FnIns>(&__jule_any_type65));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1bdc10855:;
			{
				return _1aabc2dbe_evalTypeAlias(_self_, (*(_73128_def)).cast_ptr<_1aabec1a1_TypeAlias>(&__jule_any_type8), _73142_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1bdc108cc:;
			{
				return _1aabc3210_evalTrait(_self_, (*(_73128_def)).cast_ptr<_1aaa46935_Trait>(&__jule_any_type11));;
			}
		}
		_match_end_1bdc104d1:;
	};
	_1aabbb35c_pushErr(_self_, _73142_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_73142_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc394c_evalIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aa104466_IdentExpr> _75729_ident) {
	jule::Any _7587_def = _1aabbe10c_getDef(_self_, &((*(_75729_ident))._field_Ident), (*_75729_ident.alloc)._field_Binded);;
	return _1aabc360b_evalDef(_self_, &(_7587_def), (*_75729_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc3c8d_evalUnary(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa104c08_UnaryExpr> _76230_u) {
	_1aabdb2c2_unaryEval _7637_unary = static__1aabdb745_new(_self_);;
	return _1aabdcb75_eval(&_7637_unary, _76230_u);;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc40ce_evalVariadic(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa1050d2_VariadicExpr> _76733_v) {
	if (((*(_76733_v))._field_Expr == nullptr)) {
		_1aabbb35c_pushErr(_self_.ptr(), (*_76733_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aabecdb6_Type> _7737_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7737_prefix;
	});;
	jule::Ptr<_1aabb8db5_Data> _7777_d = _1aabdad3d_evalExpr(_self_, (*(_76733_v))._field_Expr);;
	if ((_7777_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aac00c43_Variadicable((*(_7777_d))._field_Type.ptr())))) {
		_1aabbb35c_pushErr(_self_, (*_76733_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_7777_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1aabea039_makeVariadic(&(_7777_d), (*(_1aac02030_Slc((*(_7777_d))._field_Type.ptr())))._field_Elem);
	return _7777_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc4420_evalUnsafe(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa103eb0_UnsafeExpr> _78931_u) {
	jule::Bool _7903_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1aabb8db5_Data> _7927_d = _1aabdad3d_evalExpr(_self_, (*(_78931_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7903_unsafety;
	return _7927_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc4761_evalArr(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa1091a2_SliceExpr> _79728_s) {
	jule::Ptr<_1aac0d4e2_Arr> _7997_pt = _1aac01c99_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1aac0d4e2_Arr> _8017_arr = jule::new_ptr<_1aac0d4e2_Arr>(_1aac0d4e2_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7997_pt))._field_Elem});;
	jule::Bool _8077_filled = false;;
	if (((*(_79728_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_79728_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type79) {
				_case_begin_1bdc250a6:;
				{
					if (((*((*((*(_79728_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1aa1050d2_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1bdc24eeb;
					};
					if ((*_7997_pt.alloc)._field_Auto) {
						_1aabbb35c_pushErr(_self_, (*_79728_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_8077_filled=true;
					((*(_79728_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1bdc24eeb:;
		};
	};
	(*(_8017_arr))._field_N=(*(_79728_s))._field_Exprs.len();
	if ((!((*_7997_pt.alloc)._field_Auto))) {
		if (((*_8017_arr.alloc)._field_N > (*_7997_pt.alloc)._field_N)) {
			_1aabbb35c_pushErr(_self_, (*_79728_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_8017_arr.alloc)._field_N < (*_7997_pt.alloc)._field_N)) {
			(*_8017_arr.alloc)._field_N=(*_7997_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1aaa342e6_ArrayExpr> _8367_model = jule::new_ptr<_1aaa342e6_ArrayExpr>(_1aaa342e6_ArrayExpr{._field_Kind=_8017_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_8077_filled) {
		(*(_8367_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8367_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_79728_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1aabecdb6_Type> _8457_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_8017_arr.alloc)._field_Elem;
	{
		auto expr = &((*_79728_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc2bdd2:;
		if (it != expr_end) {
			jule::Ptr<_1aa102b4b_Expr> _84715_elem = *it;
			{
				jule::Ptr<_1aabb8db5_Data> _8488_d = _1aabdad3d_evalExpr(_self_, _84715_elem);;
				if ((_8488_d == nullptr)) {
					goto _iter_next_1bdc2bdd2;
				};
				;
				if (_1aab5c2a9_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_8017_arr.alloc)._field_Elem), &(_8488_d), &((*(_84715_elem))._field_Token))) {
					_1aab57a24_checkAssignType((*(_self_))._field_s, false, &((*_8017_arr.alloc)._field_Elem), &(_8488_d), (*_84715_elem.alloc)._field_Token, _1aabbe393_getOwnerRefers(_self_));
				};
				(*(_8367_model))._field_Elems=jule::append((*_8367_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8488_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1bdc2bdd2:;
			++it;
			goto _iter_begin_1bdc2bdd2;
		}
		_iter_end_1bdc2bdd2:;
	};
	(*_self_.alloc)._field_prefix=_8457_prefix;
	if (_8077_filled) {
		(*(_8367_model))._field_Elems=jule::append((*_8367_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8017_arr, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8367_model, &__jule_any_type86), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc4c17_evalExpSlc(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa1091a2_SliceExpr> _87431_s, jule::Ptr<_1aabecdb6_Type> _87455_t, jule::Any _87469_first) {
	jule::Ptr<_1aac0b1c1_Slc> _8757_slc = jule::new_ptr<_1aac0b1c1_Slc>(_1aac0b1c1_Slc{._field_Elem=_87455_t});;
	jule::I32 _8797_i = 0LL;;
	jule::Ptr<_1aaa313ae_SliceExpr> _8807_model = jule::new_ptr<_1aaa313ae_SliceExpr>(_1aaa313ae_SliceExpr{._field_ElemType=_87455_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_87431_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_87469_first != nullptr)) {
		(*(_8807_model))._field_Elems=jule::append((*_8807_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _87469_first; __jule_collection; }));
		_8797_i=1LL;
	};
	jule::Ptr<_1aabecdb6_Type> _8897_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8757_slc))._field_Elem;
	{
		auto expr = (*_87431_s.alloc)._field_Exprs.slice(_8797_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bdc36716:;
		if (it != expr_end) {
			jule::Ptr<_1aa102b4b_Expr> _89115_elem = *it;
			{
				jule::Ptr<_1aabb8db5_Data> _8928_d = _1aabdad3d_evalExpr(_self_, _89115_elem);;
				if ((_8928_d != nullptr)) {
					;
					if (_1aab5c2a9_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_8757_slc.alloc)._field_Elem), &(_8928_d), &((*(_89115_elem))._field_Token))) {
						_1aab57a24_checkAssignType((*(_self_))._field_s, false, &((*_8757_slc.alloc)._field_Elem), &(_8928_d), (*_89115_elem.alloc)._field_Token, _1aabbe393_getOwnerRefers(_self_));
					};
					(*(_8807_model))._field_Elems=jule::append((*_8807_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8928_d))._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1bdc36716:;
			++it;
			goto _iter_begin_1bdc36716;
		}
		_iter_end_1bdc36716:;
	};
	(*_self_.alloc)._field_prefix=_8897_prefix;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8757_slc, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_model, &__jule_any_type80), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc5058_evalSliceExpr(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa1091a2_SliceExpr> _91234_s) {
	jule::Ptr<_1aabb8db5_Data> __jule_func_result;
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1aac01c99_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1bdc3c7c7:;
				{
					__jule_func_result=_1aabc4761_evalArr(_self_, _91234_s);
				}
			}
			else if ((_1aac02030_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1bdc3c860:;
				{
					jule::Ptr<_1aac0b1c1_Slc> _9189_pt = _1aac02030_Slc((*(_self_))._field_prefix);;
					__jule_func_result=_1aabc4c17_evalExpSlc(_self_, _91234_s, (*(_9189_pt))._field_Elem, nullptr);
				}
			}
			else {
				_case_begin_1bdc3c72d:;
				{
					goto _julec_label_1bdc3c3cb;
				}
			}
			_match_end_1bdc3c651:;
		};
		if ((__jule_func_result != nullptr)) {
			jule::Ptr<_1aa969605_StructIns> _9249_strct = _1aac027d3_softStruct((*(_self_))._field_prefix);;
			if (((_9249_strct != nullptr) && ((*_9249_strct.alloc)._field_Source != nullptr))) {
				(*__jule_func_result.alloc)._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_9249_strct, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)});
			};
		};
		return __jule_func_result;;
	};
	_julec_label_1bdc3c3cb:;
	jule::Ptr<_1aabecdb6_Type> _9327_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_91234_s))._field_Exprs.len() == 0LL)) {
		_1aabbb35c_pushErr(_self_, (*_91234_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		__jule_func_result = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa102b4b_Expr> _9407_firstExpr = (*(_91234_s))._field_Exprs[0LL];;
	jule::Ptr<_1aabb8db5_Data> _9417_firstElem = _1aabdad3d_evalExpr(_self_, _9407_firstExpr);;
	if ((_9417_firstElem == nullptr)) {
		__jule_func_result = nullptr;
		return __jule_func_result;;
	};
	;
	_1aab5c2a9_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_9417_firstElem))._field_Type), &(_9417_firstElem), &((*(_9407_firstExpr))._field_Token));
	__jule_func_result=_1aabc4c17_evalExpSlc(_self_, _91234_s, (*_9417_firstElem.alloc)._field_Type, (*_9417_firstElem.alloc)._field_Model);
	(*_self_.alloc)._field_prefix=_9327_prefix;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aabc5454_checkIntegerIndexingByData(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _95747_d, jule::Ptr<_1aa0d7ceb_Token> _95761_token) {
	jule::Str _9583_errKey = _1aabe791b_checkDataForIntegerIndexing(&((*(_self_))._field_s), _95747_d, &(_95761_token), _1aabbe393_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9583_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1bdc474d5:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1bdc47408:;
			{
				_1aabbb35c_pushErr(_self_, _95761_token, _9583_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_95747_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1bdc46957:;
			{
				_1aabbb35c_pushErr(_self_, _95761_token, _9583_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1bdc47073:;
	};
	return false;;
}



inline void _1aabc5872_indexingPtr(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _97032_d, jule::Ptr<_1aabb8db5_Data>* _97047_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _97066_i) {
	_1aabc5454_checkIntegerIndexingByData(_self_, _97047_index, (*((*(_97066_i))))._field_Token);
	(*((*(_97032_d))))._field_Lvalue=true;
	jule::Ptr<_1aac0deb5_Ptr> _9747_ptr = _1aac014e6_Ptr((*((*(_97032_d))))._field_Type.ptr());;
	{
		
		if (_1aac0ea32_IsUnsafe(_9747_ptr.ptr())) {
			_case_begin_1bdc4a263:;
			{
				_1aabbb35c_pushErr(_self_, (*((*(_97066_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1aabbbd52_isUnsafe(_self_)))) {
			_case_begin_1bdc4a2eb:;
			{
				_1aabbb35c_pushErr(_self_, (*((*(_97066_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1bdc4a1b9:;
	};
	(*((*(_97032_d))))._field_Type=(*(_9747_ptr))._field_Elem;
}



inline void _1aabc5c90_indexingArr(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _98632_d, jule::Ptr<_1aabb8db5_Data>* _98647_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _98666_i) {
	jule::Ptr<_1aac0d4e2_Arr> _9877_arr = _1aac01c99_Arr((*((*(_98632_d))))._field_Type.ptr());;
	(*((*(_98632_d))))._field_Type=(*(_9877_arr))._field_Elem;
	_1aabc5454_checkIntegerIndexingByData(_self_, _98647_index, (*((*(_98666_i))))._field_Token);
	(*((*(_98632_d))))._field_Lvalue=true;
	if ((_1aabb9800_IsConst((*(_98647_index)).ptr()) && (_1aaa2543b_AsF64((*((*(_98647_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9877_arr.alloc)._field_N)))) {
		_1aabbb35c_pushErr(_self_, (*((*(_98666_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1aabc61ad_indexingSlc(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _99632_d, jule::Ptr<_1aabb8db5_Data>* _99647_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _99666_i) {
	jule::Ptr<_1aac0b1c1_Slc> _9977_slc = _1aac02030_Slc((*((*(_99632_d))))._field_Type.ptr());;
	(*((*(_99632_d))))._field_Type=(*(_9977_slc))._field_Elem;
	_1aabc5454_checkIntegerIndexingByData(_self_, _99647_index, (*((*(_99666_i))))._field_Token);
	(*((*(_99632_d))))._field_Lvalue=true;
	if ((!(_1aabb9800_IsConst((*(_99647_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_99632_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1bdc528a8:;
			{
				jule::Ptr<_1aaa313ae_SliceExpr> _10088_m = (*((*(_99632_d))))._field_Model.unsafe_cast_ptr<_1aaa313ae_SliceExpr>();;
				jule::F64 _10094_indx = _1aaa2543b_AsF64((*((*(_99647_index))))._field_Constant.ptr());;
				if ((_10094_indx >= static_cast<jule::F64>((*(_10088_m))._field_Elems.len()))) {
					_1aabbb35c_pushErr(_self_, (*((*(_99666_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_99632_d))))._field_Model=(*(_10088_m))._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_10094_indx))];
					(*((*(_99632_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1bdc52842:;
	};
}



inline void _1aabc65cb_indexingMap(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _101932_d, jule::Ptr<_1aabb8db5_Data>* _101947_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _101966_i) {
	(*((*(_101932_d))))._field_Lvalue=true;
	if (((*(_101947_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1aac0c865_Map> _10247_m = _1aac02d00_Map((*((*(_101932_d))))._field_Type.ptr());;
	_1aaba6c93_assignTypeChecker _10257_atc = _1aaba6c93_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_10247_m))._field_Key, ._field_d=(*(_101947_index)), ._field_errorToken=(*((*(_101966_i))))._field_Token, ._field_refers=_1aabbe393_getOwnerRefers(_self_)};;
	_1aaba7c94_check(&_10257_atc);
	(*((*(_101932_d))))._field_Type=(*_10247_m.alloc)._field_Val;
}



inline void _1aabc69e9_indexingStr(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _103632_d, jule::Ptr<_1aabb8db5_Data>* _103647_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _103666_i) {
	(*((*(_103632_d))))._field_Type=(*((*(_1aac79e32_findBuiltinTypeAlias(jule::Str::lit("byte", 4))))._field_TypeSym))._field_Type;
	(*((*(_103632_d))))._field_Mutable=false;
	(*((*(_103632_d))))._field_Lvalue=true;
	if (((*(_103647_index)) == nullptr)) {
		return;;
	};
	_1aabc5454_checkIntegerIndexingByData(_self_, _103647_index, (*((*(_103666_i))))._field_Token);
	(*((*(_103632_d))))._field_untyped=_1aabb9800_IsConst((*(_103632_d)).ptr());
	if ((!(_1aabb9800_IsConst((*(_103647_index)).ptr())))) {
		(*((*(_103632_d))))._field_Constant=nullptr;
		return;;
	};
	if ((*((*(_103632_d))))._field_untyped) {
		jule::I64 _10544_j = _1aaa24e1e_AsI64((*((*(_103647_index))))._field_Constant.ptr());;
		jule::Str _10554_s = _1aaa24902_ReadStr((*((*(_103632_d))))._field_Constant);;
		if ((static_cast<jule::I32>(_10544_j) >= _10554_s.len())) {
			_1aabbb35c_pushErr(_self_, (*((*(_103666_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1aaa2599c_SetU64((*((*(_103632_d))))._field_Constant, static_cast<jule::U64>(_10554_s[static_cast<jule::I32>(_10544_j)]));
		};
	};
}



inline void _1aabc6e17_comptimeRange(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _106434_d, jule::Ptr<_1aabb8db5_Data>* _106449_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _106468_i) {
	if (((*(_106449_index)) == nullptr)) {
		(*(_106434_d))=nullptr;
		return;;
	};
	if ((!(_1aabc5454_checkIntegerIndexingByData(_self_, _106449_index, (*((*((*(_106468_i))))._field_Index))._field_Token)))) {
		(*(_106434_d))=nullptr;
		return;;
	};
	if ((!(_1aabb9800_IsConst((*(_106449_index)).ptr())))) {
		(*(_106434_d))=nullptr;
		_1aabbb35c_pushErr(_self_, (*((*((*(_106468_i))))._field_Index))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I32 _10793_j = static_cast<jule::I32>(_1aaa24e1e_AsI64((*((*(_106449_index))))._field_Constant.ptr()));;
	jule::Ptr<_1aaac1152_comptimeRange> _10807_ci = _1aac04609_comptimeRange((*((*(_106434_d))))._field_Type.ptr());;
	if ((_10793_j >= ((_1aaac0e32_comptimeRangeKindMptrData*)(*(_10807_ci))._field_kind.safe_type())->_1aaac0ccd_len((*(_10807_ci))._field_kind.data))) {
		(*(_106434_d))=nullptr;
		_1aabbb35c_pushErr(_self_, (*((*((*(_106468_i))))._field_Index))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1aaac0e32_comptimeRangeKindMptrData*)(*(_10807_ci))._field_kind.safe_type())->_1aaac02b6_index((*(_10807_ci))._field_kind.data, _106434_d, _10793_j);
}



inline void _1aabc7335_toIndexing(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _108931_d, jule::Ptr<_1aabb8db5_Data>* _108946_index, jule::Ptr<_1aa109b0e_IndexingExpr>* _108965_i) {
	{
		
		if ((_1aac014e6_Ptr((*((*(_108931_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdc64711:;
			{
				_1aabc5872_indexingPtr(_self_, _108931_d, _108946_index, _108965_i);
				return;;
			}
		}
		else if ((_1aac01c99_Arr((*((*(_108931_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdc647aa:;
			{
				_1aabc5c90_indexingArr(_self_, _108931_d, _108946_index, _108965_i);
				return;;
			}
		}
		else if ((_1aac02030_Slc((*((*(_108931_d))))._field_Type) != nullptr)) {
			_case_begin_1bdc64821:;
			{
				_1aabc61ad_indexingSlc(_self_, _108931_d, _108946_index, _108965_i);
				return;;
			}
		}
		else if ((_1aac02d00_Map((*((*(_108931_d))))._field_Type) != nullptr)) {
			_case_begin_1bdc64887:;
			{
				_1aabc65cb_indexingMap(_self_, _108931_d, _108946_index, _108965_i);
				return;;
			}
		}
		else if ((_1aac00ec9_Prim((*((*(_108931_d))))._field_Type) != nullptr)) {
			_case_begin_1bdc648ed:;
			{
				jule::Ptr<_1aac06bc2_Prim> _11044_prim = _1aac00ec9_Prim((*((*(_108931_d))))._field_Type);;
				{
					
					if (_1aac0a18c_IsStr(_11044_prim.ptr())) {
						_case_begin_1bdc68c10:;
						{
							_1aabc69e9_indexingStr(_self_, _108931_d, _108946_index, _108965_i);
							return;;
						}
					}
					_match_end_1bdc68b55:;
				};
			}
		}
		else if ((_1aac04609_comptimeRange((*((*(_108931_d))))._field_Type) != nullptr)) {
			_case_begin_1bdc64975:;
			{
				_1aabc6e17_comptimeRange(_self_, _108931_d, _108946_index, _108965_i);
				return;;
			}
		}
		_match_end_1bdc6459b:;
	};
	_1aabbb35c_pushErr(_self_, (*((*(_108965_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_108931_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1aabc77db_pushGenericsFromExprSubIdent(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa105c5e_SubIdentExpr>* _111750_sexpr, jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>* _11188_generics, jule::Ptr<_1aa102b4b_Expr>* _111841_expr) {
	jule::Ptr<_1aa0ee1db_SubIdentTypeDecl> _11197_t = jule::new_ptr<_1aa0ee1db_SubIdentTypeDecl>(_1aa0ee1db_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1aa0ede22_IdentTypeDecl>>(nullptr)});;
	if ((!(_1aabe8994_pushSubIdentFromExpr(jule::Any((*(_111750_sexpr)), &__jule_any_type87), &(_11197_t))))) {
		_1aabbb35c_pushErr(_self_.ptr(), (*((*(_111841_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> &__jule_push_dest = (*(_11188_generics)); __jule_push_dest.push(jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Kind=jule::Any(_11197_t, &__jule_any_type88)})); };
	return true;;
}



inline jule::Bool _1aabc7bd7_pushGenericsFromData(jule::Ptr<_1aabbad84_eval> _self_, jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>* _112842_generics, jule::Ptr<_1aa102b4b_Expr>* _112875_expr) {
	{
		auto &_match_expr{ (*((*(_112875_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bdc70651:;
			{
				jule::Ptr<_1aa104c08_UnaryExpr> _11318_u = (*((*(_112875_expr))))._field_Kind.unsafe_cast_ptr<_1aa104c08_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_11318_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_1bdc7459a:;
						{
							jule::Ptr<_1aa100341_PtrTypeDecl> _11349_kind = jule::new_ptr<_1aa100341_PtrTypeDecl>(_1aa100341_PtrTypeDecl{._field_Elem=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> _11359__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa0ed817_TypeDecl>(nullptr); __jule_collection; });;
							_1aabc7bd7_pushGenericsFromData(_self_, &(_11359__generics), &((*(_11318_u))._field_Expr));
							(*_11349_kind.alloc)._field_Elem=_11359__generics[0LL];
							{ jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> &__jule_push_dest = (*(_112842_generics)); __jule_push_dest.push(jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=(*((*(_112875_expr))))._field_Token, ._field_Kind=jule::Any(_11349_kind, &__jule_any_type74)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_1bdc74ea2:;
						{
							jule::Ptr<_1aa0ee8b2_SptrTypeDecl> _11439_kind = jule::new_ptr<_1aa0ee8b2_SptrTypeDecl>(_1aa0ee8b2_SptrTypeDecl{._field_Elem=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> _11449__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa0ed817_TypeDecl>(nullptr); __jule_collection; });;
							_1aabc7bd7_pushGenericsFromData(_self_, &(_11449__generics), &((*(_11318_u))._field_Expr));
							(*_11439_kind.alloc)._field_Elem=_11449__generics[0LL];
							{ jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> &__jule_push_dest = (*(_112842_generics)); __jule_push_dest.push(jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=(*((*(_112875_expr))))._field_Token, ._field_Kind=jule::Any(_11439_kind, &__jule_any_type75)})); };
						}
					}
					else {
						_case_begin_1bdc725ba:;
						{
							_1aabbb35c_pushErr(_self_, (*_11318_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1bdc7405b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bdc706b7:;
			{
				{ jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> &__jule_push_dest = (*(_112842_generics)); __jule_push_dest.push((*((*(_112875_expr))))._field_Kind.unsafe_cast_ptr<_1aa0ed817_TypeDecl>()); };
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bdc7072d:;
			{
				jule::Ptr<_1aa105c5e_SubIdentExpr> _11588_sexpr = (*((*(_112875_expr))))._field_Kind.unsafe_cast_ptr<_1aa105c5e_SubIdentExpr>();;
				return _1aabc77db_pushGenericsFromExprSubIdent(_self_, &(_11588_sexpr), _112842_generics, _112875_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bdc6cbd1:;
			{
				jule::Ptr<_1aa104466_IdentExpr> _11618_ident = (*((*(_112875_expr))))._field_Kind.unsafe_cast_ptr<_1aa104466_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> &__jule_push_dest = (*(_112842_generics)); __jule_push_dest.push(jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1aa0ede22_IdentTypeDecl>(_1aa0ede22_IdentTypeDecl{._field_Token=(*_11618_ident.alloc)._field_Token, ._field_Ident=(*_11618_ident.alloc)._field_Ident, ._field_Binded=(*(_11618_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>(nullptr)}), &__jule_any_type78)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bdc6e331:;
			{
				{
					auto expr = &((*((*((*(_112875_expr))))._field_Kind.unsafe_cast_ptr<_1aa103740_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bdc7d8e5:;
					if (it != expr_end) {
						jule::Ptr<_1aa102b4b_Expr> _117016_texpr = *it;
						{
							if ((!(_1aabc7bd7_pushGenericsFromData(_self_, _112842_generics, &(_117016_texpr))))) {
								return false;;
							};
						}
						_iter_next_1bdc7d8e5:;
						++it;
						goto _iter_begin_1bdc7d8e5;
					}
					_iter_end_1bdc7d8e5:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bdc6e397:;
			{
				jule::Ptr<_1aa105885_NamespaceExpr> _11768_ns = (*((*(_112875_expr))))._field_Kind.unsafe_cast_ptr<_1aa105885_NamespaceExpr>();;
				jule::Ptr<_1aa0ede22_IdentTypeDecl> _11778_decl = jule::new_ptr<_1aa0ede22_IdentTypeDecl>(_1aa0ede22_IdentTypeDecl{._field_Token=(*(_11768_ns))._field_Ident, ._field_Ident=(*((*_11768_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> &__jule_push_dest = (*(_112842_generics)); __jule_push_dest.push(jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=(*(_11778_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1aa0ee5b5_NamespaceTypeDecl>(_1aa0ee5b5_NamespaceTypeDecl{._field_Namespace=(*_11768_ns.alloc)._field_Namespace, ._field_Kind=jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=(*_11778_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11778_decl, &__jule_any_type78)})}), &__jule_any_type92)})); };
			}
		}
		else {
			_case_begin_1bdc6cb59:;
			{
				_1aabbb35c_pushErr(_self_, (*((*(_112875_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1bdc6cae3:;
	};
	return true;;
}



inline void _1aabc804a_evalIdentDeclFromIndexing(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aabb8db5_Data>* _119847_d, jule::Ptr<_1aa109b0e_IndexingExpr>* _119862_i) {
	jule::Ptr<_1aa969605_StructIns> _11997_s = _1aac0254c_Struct((*((*(_119847_d))))._field_Type.ptr());;
	if ((_11997_s == nullptr)) {
		_1aabbb35c_pushErr(_self_.ptr(), (*((*((*(_119862_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_119847_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
		(*(_119847_d))=nullptr;
		return;;
	};
	jule::Ptr<_1aa0ede22_IdentTypeDecl> _120611_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_119862_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bdc8a65a:;
			{
				jule::Ptr<_1aa104466_IdentExpr> _12098_expr = (*((*((*(_119862_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1aa104466_IdentExpr>();;
				_120611_decl=jule::new_ptr<_1aa0ede22_IdentTypeDecl>(_1aa0ede22_IdentTypeDecl{._field_Token=(*_12098_expr.alloc)._field_Token, ._field_Ident=(*_12098_expr.alloc)._field_Ident, ._field_Binded=(*(_12098_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bdc8ae52:;
			{
				jule::Ptr<_1aa105885_NamespaceExpr> _12168_expr = (*((*((*(_119862_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1aa105885_NamespaceExpr>();;
				_120611_decl=jule::new_ptr<_1aa0ede22_IdentTypeDecl>(_1aa0ede22_IdentTypeDecl{._field_Token=(*(_12168_expr))._field_Ident, ._field_Ident=(*((*_12168_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1bdc8aaab:;
			{
				_1aabbb35c_pushErr(_self_.ptr(), (*((*(_119862_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_119847_d))=nullptr;
				return;;
			}
		}
		_match_end_1bdc8aa45:;
	};
	if ((!(_1aabc7bd7_pushGenericsFromData(_self_, &((*(_120611_decl))._field_Generics), &((*((*(_119862_i))))._field_Index))))) {
		(*(_119847_d))=nullptr;
		return;;
	};
	_11997_s=({ _1aac10ea6_typeChecker _wrap_copy = _1aabd001e_typeChecker(_self_.ptr()); _1aac15340_fromStruct(&_wrap_copy, &(_120611_decl), &((*(_11997_s))._field_Decl)); });
	if ((_11997_s == nullptr)) {
		(*(_119847_d))=nullptr;
		return;;
	};
	(*(*((*(_119847_d))))._field_Type.alloc)._field_Kind=jule::Trait(_11997_s, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1aabc8501_checkGenericFn(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _124136_f, jule::Ptr<_1aa0d7ceb_Token>* _124152_et, jule::Any* _124176_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aaa3e2ce_FnIns> _12427_old = (*(_124136_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aab6811c_checkGenericFn((*(_self_))._field_s, _124136_f, _124152_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1aabe8620_updateModelToGenericIns(_124176_model, _124136_f);
		_1bdc946b9_updateRefer(_1aabbe393_getOwnerRefers(_self_.ptr()), &(_12427_old), _124136_f);
	};
	return __jule_func_result;;
}



inline void _1aabc8864_evalFnGenericFromIndexing(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aabb8db5_Data>* _125747_d, jule::Ptr<_1aa109b0e_IndexingExpr>* _125762_i) {
	jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> _12587_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa0ed817_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1aabc7bd7_pushGenericsFromData(_self_, &(_12587_generics), &((*((*(_125762_i))))._field_Index))))) {
		(*(_125747_d))=nullptr;
		return;;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _12647_f = _1aac022b6_Fn((*((*(_125747_d))))._field_Type.ptr());;
	jule::I32 _12657_genericsLen = 0LL;;
	if (((*(_12647_f))._field_Decl != nullptr)) {
		_12657_genericsLen=(*(*(_12647_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1aab51a62_checkGenericQuantity((*(_self_))._field_s.ptr(), _12657_genericsLen, _12587_generics.len(), (*((*((*(_125762_i))))._field_Expr))._field_Token)))) {
		(*(_125747_d))=nullptr;
		return;;
	};
	(*(_12647_f))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>::alloc(0LL, (*((*_12647_f.alloc)._field_Decl))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aabeb4d0_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12587_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc9989a:;
		if (it != expr_end) {
			jule::Ptr<_1aa0ed817_TypeDecl> _127615_g = *it;
			{
				jule::Ptr<_1aabb8db5_Data> _12778_k = _1aabd0360_evalType(_self_.ptr(), _127615_g);;
				if ((_12778_k == nullptr)) {
					(*(_125747_d))=nullptr;
					return;;
				};
				(*_12647_f.alloc)._field_Generics=jule::append((*_12647_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aabeb4d0_InsGeneric>(_1aabeb4d0_InsGeneric{._field_Type=(*(_12778_k))._field_Type, ._field_Constraint=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1bdc9989a:;
			++it;
			goto _iter_begin_1bdc9989a;
		}
		_iter_end_1bdc9989a:;
	};
	if (_1aaa40797_IsBuiltin(_12647_f)) {
		return;;
	};
	jule::Bool _12893_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aabc8501_checkGenericFn(_self_, &(_12647_f), &((*((*((*(_125762_i))))._field_Expr))._field_Token), &((*((*(_125747_d))))._field_Model));
		_12893_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12893_ok) {
		(*(*((*(_125747_d))))._field_Type.alloc)._field_Kind=jule::Trait(_12647_f, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data1);
	} else {
		(*(_125747_d))=nullptr;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc8ba5_evalIndexing(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa109b0e_IndexingExpr> _129733_i) {
	jule::Ptr<_1aabecdb6_Type> _12987_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12987_prefix;
	});;
	jule::Ptr<_1aabb8db5_Data> _13027_d = _1aabda029_evalExprKind(_self_, (*((*(_129733_i))._field_Expr))._field_Kind);;
	if ((_13027_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_13027_d))._field_Decl) {
		_1aabc804a_evalIdentDeclFromIndexing(_self_, &(_13027_d), &(_129733_i));
		return _13027_d;;
	};
	if ((_1aac022b6_Fn((*(_13027_d))._field_Type.ptr()) != nullptr)) {
		_1aabc8864_evalFnGenericFromIndexing(_self_, &(_13027_d), &(_129733_i));
		return _13027_d;;
	};
	_1aabb8db5_Data _13187_oldData = (*(_13027_d));;
	jule::Ptr<_1aabb8db5_Data> _13207_index = _1aabdad3d_evalExpr(_self_, (*(_129733_i))._field_Index);;
	if ((_13207_index == nullptr)) {
		return nullptr;;
	};
	_1aab1797e_makeComptimeRange(&(_13027_d));
	(*(_13027_d))._field_Decl=false;
	_1aabc7335_toIndexing(_self_, &(_13027_d), &(_13207_index), &(_129733_i));
	if ((_13027_d == nullptr)) {
		return nullptr;;
	};
	if (_1aabb9800_IsConst(_13027_d)) {
		(*_13027_d.alloc)._field_Decl=false;
		(*_13027_d.alloc)._field_Model=jule::Any((*_13027_d.alloc)._field_Constant, &__jule_any_type15);
	} else if ((*_13027_d.alloc)._field_Decl) {
		(*_13027_d.alloc)._field_Decl=false;
	} else {
		(*_13027_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aaa31865_IndexingExpr>(_1aaa31865_IndexingExpr{._field_Token=(*(_129733_i))._field_Token, ._field_Expr=jule::new_ptr<_1aabb8db5_Data>(_13187_oldData), ._field_Index=_13207_index}), &__jule_any_type43);
	};
	return _13027_d;;
}



inline __jule_tuple_x_1aabb8db5_Data__jule_tuple_x_1aabb8db5_Data _1aabc8ee6_evalSlicingExprs(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa10a26e_SlicingExpr>* _135738_s) {
	__jule_tuple_x_1aabb8db5_Data__jule_tuple_x_1aabb8db5_Data __jule_func_result;
	jule::Ptr<_1aabecdb6_Type> _13587_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13587_prefix;
	});;
	jule::Ptr<_1aabb8db5_Data> _136211_l = nullptr;;
	jule::Ptr<_1aabb8db5_Data> _136311_r = nullptr;;
	if (((*((*(_135738_s))))._field_Start != nullptr)) {
		_136211_l=_1aabdad3d_evalExpr(_self_, (*((*(_135738_s))))._field_Start);
		if ((_136211_l != nullptr)) {
			_1aabc5454_checkIntegerIndexingByData(_self_, &(_136211_l), (*((*(_135738_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_136211_l=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac77acd_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aaa22c30_NewI64(0LL)});
		(*((*(_136211_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_136211_l.alloc)._field_Model=jule::Any((*_136211_l.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*((*(_135738_s))))._field_To != nullptr)) {
		_136311_r=_1aabdad3d_evalExpr(_self_, (*((*(_135738_s))))._field_To);
		if ((_136311_r != nullptr)) {
			_1aabc5454_checkIntegerIndexingByData(_self_, &(_136311_r), (*((*(_135738_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _136211_l;
	__jule_func_result.__jule_result_arg1 = _136311_r;
	return __jule_func_result;;
}



inline void _1aabc929e_slicingArr(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _139327_d) {
	jule::Ptr<_1aabecdb6_Type> _13947_elemType = (*(_1aac01c99_Arr((*((*(_139327_d))))._field_Type.ptr())))._field_Elem;;
	(*((*(_139327_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aac0b1c1_Slc>(_1aac0b1c1_Slc{._field_Elem=_13947_elemType}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data24)});
	(*((*(_139327_d))))._field_Lvalue=false;
	(*((*(_139327_d))))._field_Mutable=((*((*(_139327_d))))._field_Mutable || (!(_1aac00209_Mutable(_13947_elemType.ptr()))));
}



inline void _1aabc96bc_slicingStr(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _140827_d, jule::Ptr<_1aabb8db5_Data>* _140838_l, jule::Ptr<_1aabb8db5_Data>* _140849_r) {
	(*((*(_140827_d))))._field_Lvalue=false;
	(*((*(_140827_d))))._field_Mutable=true;
	if ((!(_1aabb9800_IsConst((*(_140827_d)).ptr())))) {
		return;;
	};
	if ((((*(_140838_l)) == nullptr) || ((*(_140849_r)) == nullptr))) {
		(*((*(_140827_d))))._field_Constant=nullptr;
		(*((*(_140827_d))))._field_untyped=false;
		return;;
	};
	if ((_1aabb9800_IsConst((*(_140838_l)).ptr()) && _1aabb9800_IsConst((*(_140849_r)).ptr()))) {
		jule::I64 _14224_left = _1aaa24e1e_AsI64((*((*(_140838_l))))._field_Constant.ptr());;
		if ((_14224_left < 0LL)) {
			return;;
		};
		jule::Str _14274_s = _1aaa24902_ReadStr((*((*(_140827_d))))._field_Constant);;
		jule::I64 _14288_right = static_cast<jule::I64>(0LL);;
		if (((*(_140849_r)) == nullptr)) {
			_14288_right=static_cast<jule::I64>(_14274_s.len());
		} else {
			_14288_right=_1aaa24e1e_AsI64((*((*(_140849_r))))._field_Constant);
		};
		if ((_14224_left > _14288_right)) {
			return;;
		};
		_1aaa2600d_SetStr((*((*(_140827_d))))._field_Constant, _14274_s.slice(static_cast<jule::I32>(_14224_left), static_cast<jule::I32>(_14288_right)));
		(*((*(_140827_d))))._field_Decl=true;
	} else {
		(*((*(_140827_d))))._field_Constant=nullptr;
		(*((*(_140827_d))))._field_untyped=false;
	};
}



inline void _1aabc9b95_checkSlicing(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _144633_d, jule::Ptr<_1aabb8db5_Data>* _144644_l, jule::Ptr<_1aabb8db5_Data>* _144655_r, jule::Ptr<_1aa10a26e_SlicingExpr>* _144666_s) {
	{
		
		if ((_1aac01c99_Arr((*((*(_144633_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdcbbadc:;
			{
				_1aabc929e_slicingArr(_self_, _144633_d);
				return;;
			}
		}
		else if ((_1aac02030_Slc((*((*(_144633_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdcbbb86:;
			{
				return;;
			}
		}
		else if ((_1aac00ec9_Prim((*((*(_144633_d))))._field_Type) != nullptr)) {
			_case_begin_1bdcbbbec:;
			{
				jule::Ptr<_1aac06bc2_Prim> _14544_prim = _1aac00ec9_Prim((*((*(_144633_d))))._field_Type);;
				{
					
					if (_1aac0a18c_IsStr(_14544_prim.ptr())) {
						_case_begin_1bdcbe4c4:;
						{
							_1aabc96bc_slicingStr(_self_, _144633_d, _144644_l, _144655_r);
							return;;
						}
					}
					_match_end_1bdcbe419:;
				};
			}
		}
		_match_end_1bdcbb9aa:;
	};
	_1aabbb35c_pushErr(_self_, (*((*(_144666_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_144633_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Ptr<_1aabb8db5_Data> _1aabc9ed6_evalSlicing(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa10a26e_SlicingExpr> _146532_s) {
	jule::Ptr<_1aabb8db5_Data> _14667_d = _1aabdad3d_evalExpr(_self_, (*(_146532_s))._field_Expr);;
	if ((_14667_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aabb8db5_Data> _14717_l;
	jule::Ptr<_1aabb8db5_Data> _147114_r;
	({
		__jule_tuple_x_1aabb8db5_Data__jule_tuple_x_1aabb8db5_Data __jule_assign_result = _1aabc8ee6_evalSlicingExprs(_self_, &(_146532_s));
		_14717_l = __jule_assign_result.__jule_result_arg0;
		_147114_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14717_l == nullptr)) {
		return _14667_d;;
	};
	(*(_14667_d))._field_Decl=false;
	_1aabc9b95_checkSlicing(_self_, &(_14667_d), &(_14717_l), &(_147114_r), &(_146532_s));
	if (_1aabb9800_IsConst(_14667_d)) {
		(*_14667_d.alloc)._field_Decl=false;
		(*_14667_d.alloc)._field_Model=jule::Any((*_14667_d.alloc)._field_Constant, &__jule_any_type15);
	} else if ((*_14667_d.alloc)._field_Decl) {
		(*_14667_d.alloc)._field_Decl=false;
	} else {
		jule::Ptr<_1aaa32b52_SlicingExpr> _14898_model = jule::new_ptr<_1aaa32b52_SlicingExpr>(_1aaa32b52_SlicingExpr{._field_Token=(*_146532_s.alloc)._field_Token, ._field_Expr=(*_14667_d.alloc)._field_Model, ._field_Left=(*(_14717_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_147114_r != nullptr)) {
			(*(_14898_model))._field_Right=(*_147114_r.alloc)._field_Model;
		};
		(*_14667_d.alloc)._field_Model=jule::Any(_14898_model, &__jule_any_type93);
	};
	return _14667_d;;
}



inline void _1aabca404_castPtr(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _150227_t, jule::Ptr<_1aabb8db5_Data> _150241_d, jule::Ptr<_1aa0d7ceb_Token> _150251_errorToken) {
	(*(_150241_d))._field_Constant=nullptr;
	(*_150241_d.alloc)._field_untyped=false;
	jule::Ptr<_1aac0a6ed_Sptr> _15053_sptr = _1aac01260_Sptr((*_150241_d.alloc)._field_Type.ptr());;
	if ((_15053_sptr != nullptr)) {
		if ((!(_1aabed603_Equal((*(_1aac014e6_Ptr(_150227_t.ptr())))._field_Elem, (*_15053_sptr.alloc)._field_Elem)))) {
			_1aabbb35c_pushErr(_self_, _150251_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_150241_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_150227_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1aabbbd52_isUnsafe(_self_)))) {
		_1aabbb35c_pushErr(_self_, _150251_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aac06bc2_Prim> _15183_prim = _1aac00ec9_Prim((*(_150241_d))._field_Type);;
	if (((_1aac014e6_Ptr((*(_150241_d))._field_Type) == nullptr) && ((_15183_prim == nullptr) || (!(_1aaabe606_IsInt(_1aac07046_Str(_15183_prim.ptr()))))))) {
		_1aabbb35c_pushErr(_self_, _150251_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_150241_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_150227_t.ptr()), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1aabca822_castStruct(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _152430_t, jule::Ptr<_1aabb8db5_Data> _152444_d, jule::Ptr<_1aa0d7ceb_Token> _152454_errorToken) {
	(*(_152444_d))._field_Constant=nullptr;
	(*_152444_d.alloc)._field_untyped=false;
	jule::Ptr<_1aaa46935_Trait> _15277_tr = _1aac02a69_Trait((*_152444_d.alloc)._field_Type.ptr());;
	if ((_15277_tr == nullptr)) {
		_1aabbb35c_pushErr(_self_, _152454_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_152444_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_152430_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1aa969605_StructIns> _15337_s = _1aac0254c_Struct(_152430_t.ptr());;
	_1bdbc6c28_pushReference(_self_, &(_15337_s));
	if ((!(_1aa967d95_IsImplements((*(_15337_s))._field_Decl.ptr(), _15277_tr)))) {
		_1aabbb35c_pushErr(_self_, _152454_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_152444_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_152430_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1aabcac40_castRef(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _154127_t, jule::Ptr<_1aabb8db5_Data> _154141_d, jule::Ptr<_1aa0d7ceb_Token> _154151_errorToken) {
	(*(_154141_d))._field_Constant=nullptr;
	(*_154141_d.alloc)._field_untyped=false;
	jule::Ptr<_1aac0a6ed_Sptr> _15447_sptr = _1aac01260_Sptr(_154127_t.ptr());;
	jule::Ptr<_1aac0deb5_Ptr> _15467_ptr = _1aac014e6_Ptr((*_154141_d.alloc)._field_Type.ptr());;
	if (((_15467_ptr != nullptr) && _1aabed603_Equal((*(_15447_sptr))._field_Elem, (*_15467_ptr.alloc)._field_Elem))) {
		if ((!(_1aabbbd52_isUnsafe(_self_)))) {
			_1aabbb35c_pushErr(_self_, _154151_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1aac0254c_Struct((*(_15447_sptr))._field_Elem.ptr()) != nullptr)) {
		_1aabca822_castStruct(_self_, (*_15447_sptr.alloc)._field_Elem, _154141_d, _154151_errorToken);
		return;;
	};
	_1aabbb35c_pushErr(_self_, _154151_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_154141_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_154127_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1aabcb15d_castSlc(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _156427_t, jule::Ptr<_1aabb8db5_Data> _156441_d, jule::Ptr<_1aa0d7ceb_Token> _156451_errorToken) {
	jule::Ptr<_1aa9b96cc_Const> _15653_c = (*(_156441_d))._field_Constant;;
	(*_156441_d.alloc)._field_Constant=nullptr;
	(*_156441_d.alloc)._field_untyped=false;
	if ((_1aac0177c_Enum((*_156441_d.alloc)._field_Type.ptr()) != nullptr)) {
		if (((_1aac00ec9_Prim((*((*(_1aac0177c_Enum((*(_156441_d))._field_Type)))._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_1aac0a18c_IsStr(_1aac00ec9_Prim((*((*(_1aac0177c_Enum((*(_156441_d))._field_Type)))._field_TypeSym))._field_Type.ptr()).ptr()))))) {
			_1aabbb35c_pushErr(_self_, _156451_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_156441_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_156427_t.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else if (((_1aac00ec9_Prim((*_156441_d.alloc)._field_Type.ptr()) == nullptr) || (!(_1aac0a18c_IsStr(_1aac00ec9_Prim((*_156441_d.alloc)._field_Type.ptr()).ptr()))))) {
		_1aabbb35c_pushErr(_self_, _156451_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*_156441_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_156427_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_156427_t=(*(_1aac02030_Slc(_156427_t.ptr())))._field_Elem;
	jule::Ptr<_1aac06bc2_Prim> _15803_prim = _1aac00ec9_Prim(_156427_t);;
	if (((_15803_prim == nullptr) || ((!(_1aac085ec_IsU8(_15803_prim.ptr()))) && (!(_1aac080d0_IsI32(_15803_prim)))))) {
		_1aabbb35c_pushErr(_self_, _156451_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*_156441_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_156427_t), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((_15653_c != nullptr)) {
		{
			
			if (_1aac085ec_IsU8(_15803_prim.ptr())) {
				_case_begin_1bdce4384:;
				{
					jule::Str _15905_s = _1aaa24902_ReadStr(_15653_c);;
					jule::Ptr<_1aaa313ae_SliceExpr> _15919_model = jule::new_ptr<_1aaa313ae_SliceExpr>(_1aaa313ae_SliceExpr{._field_ElemType=_156427_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15905_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15905_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bdce561b:;
						if (it != expr_end) {
							jule::U8 *_159512_b = it;
							{
								jule::Ptr<_1aa9b96cc_Const> _159610_bc = static__1aaa22e83_NewU64(static_cast<jule::U64>((*(_159512_b))));;
								(*(_159610_bc))._field_Kind=(*_15803_prim.alloc)._field_Kind;
								(*(_15919_model))._field_Elems=jule::append((*_15919_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_159610_bc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1bdce561b:;
							++it;
							goto _iter_begin_1bdce561b;
						}
						_iter_end_1bdce561b:;
					};
					(*_156441_d.alloc)._field_Model=jule::Any(_15919_model, &__jule_any_type80);
					(*_156441_d.alloc)._field_Decl=true;
				}
			}
			else if (_1aac080d0_IsI32(_15803_prim.ptr())) {
				_case_begin_1bdce442d:;
				{
					jule::Slice<jule::I32> _16035_runes = __jule_strToRunes(_1aaa24902_ReadStr(_15653_c));;
					jule::Ptr<_1aaa313ae_SliceExpr> _16049_model = jule::new_ptr<_1aaa313ae_SliceExpr>(_1aaa313ae_SliceExpr{._field_ElemType=_156427_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _16035_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_16035_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bdce86da:;
						if (it != expr_end) {
							jule::I32 *_160812_r = it;
							{
								jule::Ptr<_1aa9b96cc_Const> _160910_rc = static__1aaa22c30_NewI64(static_cast<jule::I64>((*(_160812_r))));;
								(*(_160910_rc))._field_Kind=(*_15803_prim.alloc)._field_Kind;
								(*(_16049_model))._field_Elems=jule::append((*_16049_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_160910_rc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1bdce86da:;
							++it;
							goto _iter_begin_1bdce86da;
						}
						_iter_end_1bdce86da:;
					};
					(*_156441_d.alloc)._field_Model=jule::Any(_16049_model, &__jule_any_type80);
					(*_156441_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1bdce4296:;
		};
	};
}



inline void _1aabcb57b_castBool(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _161928_t, jule::Ptr<_1aabb8db5_Data> _161942_d, jule::Ptr<_1aa0d7ceb_Token> _161952_errorToken) {
	jule::Ptr<_1aac06bc2_Prim> _16203_prim = _1aac00ec9_Prim((*(_161942_d))._field_Type.ptr());;
	if (((_16203_prim == nullptr) || (!(_1aac09e06_IsBool(_16203_prim.ptr()))))) {
		_1aabbb35c_pushErr(_self_, _161952_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str(_161928_t.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_161942_d))._field_Type), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1aabcb999_castStr(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _162627_t, jule::Ptr<_1aabb8db5_Data> _162641_d, jule::Ptr<_1aa0d7ceb_Token> _162651_errorToken) {
	if ((_1aac0177c_Enum((*(_162641_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1aaa490db_Enum> _16288_e = _1aac0177c_Enum((*(_162641_d))._field_Type);;
		if (((_1aac00ec9_Prim((*((*(_16288_e))._field_TypeSym))._field_Type.ptr()) != nullptr) && _1aac0a18c_IsStr(_1aac00ec9_Prim((*((*(_16288_e))._field_TypeSym))._field_Type).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1aa9b96cc_Const> _16343_c = (*(_162641_d))._field_Constant;;
	(*_162641_d.alloc)._field_Constant=nullptr;
	(*_162641_d.alloc)._field_untyped=false;
	jule::Ptr<_1aac06bc2_Prim> _16377_prim = _1aac00ec9_Prim((*_162641_d.alloc)._field_Type.ptr());;
	if ((_16377_prim != nullptr)) {
		if (_1aac0a18c_IsStr(_16377_prim)) {
			return;;
		};
		if (((!(_1aac085ec_IsU8(_16377_prim))) && (!(_1aac080d0_IsI32(_16377_prim))))) {
			_1aabbb35c_pushErr(_self_, _162651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str(_162627_t.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_162641_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
		if ((_16343_c != nullptr)) {
			{
				
				if (_1aac085ec_IsU8(_16377_prim)) {
					_case_begin_1bdd04927:;
					{
						(*_162641_d.alloc)._field_Constant=static__1aaa23516_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1aaa251a5_AsU64(_16343_c))));
						(*_162641_d.alloc)._field_Model=jule::Any((*_162641_d.alloc)._field_Constant, &__jule_any_type15);
						(*_162641_d.alloc)._field_Decl=true;
					}
				}
				else if (_1aac080d0_IsI32(_16377_prim)) {
					_case_begin_1bdd049c1:;
					{
						(*_162641_d.alloc)._field_Constant=static__1aaa23516_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1aaa24e1e_AsI64(_16343_c))));
						(*_162641_d.alloc)._field_Model=jule::Any((*_162641_d.alloc)._field_Constant, &__jule_any_type15);
						(*_162641_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1bdd04817:;
			};
		};
		return;;
	};
	jule::Ptr<_1aac0b1c1_Slc> _16627_s = _1aac02030_Slc((*(_162641_d))._field_Type);;
	if ((_16627_s == nullptr)) {
		_1aabbb35c_pushErr(_self_, _162651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str(_162627_t.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_162641_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_162627_t=(*(_16627_s))._field_Elem;
	_16377_prim=_1aac00ec9_Prim(_162627_t.ptr());
	if (((_16377_prim == nullptr) || ((!(_1aac085ec_IsU8(_16377_prim.ptr()))) && (!(_1aac080d0_IsI32(_16377_prim)))))) {
		_1aabbb35c_pushErr(_self_, _162651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str(_162627_t), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_162641_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
}



inline void _1aabcbdb7_castInt(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _167627_t, jule::Ptr<_1aabb8db5_Data> _167641_d, jule::Ptr<_1aa0d7ceb_Token> _167651_errorToken) {
	if (_1aabb9800_IsConst(_167641_d.ptr())) {
		jule::Ptr<_1aac06bc2_Prim> _16784_prim = _1aac00ec9_Prim(_167627_t.ptr());;
		{
			
			if (_1aaabe02e_IsSigInt((*(_16784_prim))._field_Kind)) {
				_case_begin_1bdd0c578:;
				{
					_1aaa256e4_SetI64((*_167641_d.alloc)._field_Constant.ptr(), _1aaa24e1e_AsI64((*(_167641_d))._field_Constant));
				}
			}
			else if (_1aaabe33c_IsUnsigInt((*(_16784_prim))._field_Kind)) {
				_case_begin_1bdd0c622:;
				{
					_1aaa2599c_SetU64((*_167641_d.alloc)._field_Constant.ptr(), _1aaa251a5_AsU64((*(_167641_d))._field_Constant));
				}
			}
			_match_end_1bdd0c4e0:;
		};
	} else {
		(*(_167641_d))._field_Constant=nullptr;
		(*_167641_d.alloc)._field_untyped=false;
	};
	if ((_1aac0177c_Enum((*(_167641_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1aaa490db_Enum> _16918_e = _1aac0177c_Enum((*(_167641_d))._field_Type);;
		if (_1aaabebcd_IsNum(_1aac07046_Str(_1aac00ec9_Prim((*((*(_16918_e))._field_TypeSym))._field_Type.ptr()).ptr()))) {
			return;;
		};
	};
	if ((_1aac01260_Sptr((*(_167641_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1aac06bc2_Prim> _16984_prim = _1aac00ec9_Prim(_167627_t.ptr());;
		if ((!(_1aac09b70_IsUintptr(_16984_prim.ptr())))) {
			_1aabbb35c_pushErr(_self_, _167651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_167641_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_167627_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((_1aac014e6_Ptr((*(_167641_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1aac06bc2_Prim> _17054_prim = _1aac00ec9_Prim(_167627_t.ptr());;
		if (_1aac09b70_IsUintptr(_17054_prim.ptr())) {
		} else if ((!(_1aabbbd52_isUnsafe(_self_)))) {
			_1aabbb35c_pushErr(_self_, _167651_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1aac06bc2_Prim> _17143_prim = _1aac00ec9_Prim((*(_167641_d))._field_Type.ptr());;
	if (((_17143_prim != nullptr) && _1aaabebcd_IsNum(_1aac07046_Str(_17143_prim)))) {
		return;;
	};
	_1aabbb35c_pushErr(_self_, _167651_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_167641_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_167627_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _1aabcc2d5_castNum(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _172227_t, jule::Ptr<_1aabb8db5_Data> _172241_d, jule::Ptr<_1aa0d7ceb_Token> _172251_errorToken) {
	if (_1aabb9800_IsConst(_172241_d.ptr())) {
		jule::Ptr<_1aac06bc2_Prim> _17244_prim = _1aac00ec9_Prim(_172227_t.ptr());;
		{
			
			if (_1aaabe947_IsFloat((*(_17244_prim))._field_Kind)) {
				_case_begin_1bdd18b39:;
				{
					_1aaa262b6_SetF64((*_172241_d.alloc)._field_Constant.ptr(), _1aaa2543b_AsF64((*(_172241_d))._field_Constant));
				}
			}
			else if (_1aaabe02e_IsSigInt((*(_17244_prim))._field_Kind)) {
				_case_begin_1bdd18bd3:;
				{
					_1aaa256e4_SetI64((*_172241_d.alloc)._field_Constant.ptr(), _1aaa24e1e_AsI64((*(_172241_d))._field_Constant));
				}
			}
			else if (_1aaabe33c_IsUnsigInt((*_17244_prim.alloc)._field_Kind)) {
				_case_begin_1bdd18c49:;
				{
					_1aaa2599c_SetU64((*(_172241_d))._field_Constant, _1aaa251a5_AsU64((*(_172241_d))._field_Constant));
				}
			}
			_match_end_1bdd18a5c:;
		};
	} else {
		(*(_172241_d))._field_Constant=nullptr;
		(*_172241_d.alloc)._field_untyped=false;
	};
	if ((_1aac0177c_Enum((*(_172241_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1aaa490db_Enum> _17398_e = _1aac0177c_Enum((*(_172241_d))._field_Type);;
		if (_1aaabebcd_IsNum(_1aac07046_Str(_1aac00ec9_Prim((*((*(_17398_e))._field_TypeSym))._field_Type.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1aac06bc2_Prim> _17453_prim = _1aac00ec9_Prim((*(_172241_d))._field_Type.ptr());;
	if (((_17453_prim != nullptr) && _1aaabebcd_IsNum(_1aac07046_Str(_17453_prim)))) {
		return;;
	};
	_1aabbb35c_pushErr(_self_, _172251_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_172241_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_172227_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _1aabcc703_castPrim(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _175328_t, jule::Ptr<_1aabb8db5_Data> _175342_d, jule::Ptr<_1aa0d7ceb_Token> _175352_errorToken) {
	jule::Ptr<_1aac06bc2_Prim> _17543_prim = _1aac00ec9_Prim(_175328_t.ptr());;
	{
		
		if (_1aac0a423_IsAny(_17543_prim.ptr())) {
			_case_begin_1bdd2237e:;
			{
				__jule_panic_s(jule::Str::lit("sema: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1757:4"));;
			}
		}
		else if (_1aac0a18c_IsStr(_17543_prim.ptr())) {
			_case_begin_1bdd2202c:;
			{
				_1aabcb999_castStr(_self_, _175328_t, _175342_d, _175352_errorToken);
			}
		}
		else if (_1aac09e06_IsBool(_17543_prim)) {
			_case_begin_1bdd22093:;
			{
				_1aabcb57b_castBool(_self_, _175328_t, _175342_d, _175352_errorToken);
			}
		}
		else if (_1aaabe606_IsInt(_1aac07046_Str(_17543_prim))) {
			_case_begin_1bdd22109:;
			{
				_1aabcbdb7_castInt(_self_, _175328_t, _175342_d, _175352_errorToken);
			}
		}
		else if (_1aaabebcd_IsNum(_1aac07046_Str(_17543_prim))) {
			_case_begin_1bdd22170:;
			{
				_1aabcc2d5_castNum(_self_, _175328_t, _175342_d, _175352_errorToken);
			}
		}
		else {
			_case_begin_1bdd21eb6:;
			{
				_1aabbb35c_pushErr(_self_, _175352_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str(_175328_t), &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1bdd21e3e:;
	};
}



inline void _1aabcca66_castConstant(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type>* _177133_t, jule::Ptr<_1aabb8db5_Data>* _177148_d) {
	if ((((*(_177148_d)) == nullptr) || (!(_1aabb9800_IsConst((*(_177148_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1aac06bc2_Prim> _17753_prim = _1aac00ec9_Prim((*(_177133_t)).ptr());;
	_1aabe8444_castConstByType(&((*(_17753_prim))._field_Kind), _177148_d);
	(*((*(_177148_d))))._field_Model=jule::Any((*((*(_177148_d))))._field_Constant, &__jule_any_type15);
}



inline void _1aabcce84_castTypeEnum(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type>* _178033_t, jule::Ptr<_1aabb8db5_Data>* _178048_d, jule::Ptr<_1aa0d7ceb_Token>* _178063_errorToken) {
	jule::I32 _17813_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1aab58481_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_178048_d))))._field_Type), _178033_t, _178063_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17813_n);;
		_1aabbb35c_pushErr(_self_, (*(_178063_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_178048_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_178033_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_178048_d))))._field_Constant=nullptr;
	(*((*(_178048_d))))._field_untyped=false;
}



inline void _1aabcd3a2_castTypeEnumT(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type>* _179034_t, jule::Ptr<_1aabb8db5_Data>* _179049_d, jule::Ptr<_1aa0d7ceb_Token>* _179064_errorToken) {
	jule::I32 _17913_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1aab58481_checkTypeCompatibility((*(_self_))._field_s, _179034_t, &((*((*(_179049_d))))._field_Type), _179064_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17913_n);;
		_1aabbb35c_pushErr(_self_, (*(_179064_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_179049_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_179034_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_179049_d))))._field_Constant=nullptr;
	(*((*(_179049_d))))._field_untyped=false;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabcd858_evalCastByTypeNData(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _180039_t, jule::Ptr<_1aabb8db5_Data> _180053_d, jule::Ptr<_1aa0d7ceb_Token> _180067_errorToken) {
	if (((_180053_d != nullptr) && (*_180053_d.alloc)._field_Decl)) {
		_1aabbb35c_pushErr(_self_, _180067_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1aabeebdc_deepActualEqual((*(_180053_d))._field_Type, _180039_t)))) {
		{
			
			if (_1aabb92d3_IsNil(_180053_d)) {
				_case_begin_1bdd30964:;
				{
					if ((!(_1aac00726_NilCompatible(_180039_t.ptr())))) {
						_1aabbb35c_pushErr(_self_, _180067_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_180039_t), &__jule_any_type5); __jule_collection; }));
					};
					(*_180053_d.alloc)._field_Constant=nullptr;
					(*_180053_d.alloc)._field_untyped=false;
				}
			}
			else if (((_1aac00ec9_Prim((*(_180053_d))._field_Type) != nullptr) && _1aac0a423_IsAny(_1aac00ec9_Prim((*(_180053_d))._field_Type).ptr()))) {
				_case_begin_1bdd306cd:;
				{
					if ((_1aac01a13_TypeEnum(_180039_t.ptr()) != nullptr)) {
						_1aabbb35c_pushErr(_self_, _180067_errorToken, static_cast<jule::Str>(jule::Str::lit("type enum cannot casted from any type", 37)), jule::Slice<jule::Any>());
					};
					(*_180053_d.alloc)._field_Constant=nullptr;
					(*_180053_d.alloc)._field_untyped=false;
				}
			}
			else if (((_1aac00ec9_Prim(_180039_t) != nullptr) && _1aac0a423_IsAny(_1aac00ec9_Prim(_180039_t).ptr()))) {
				_case_begin_1bdd30744:;
				{
					(*_180053_d.alloc)._field_Constant=nullptr;
					(*_180053_d.alloc)._field_untyped=false;
				}
			}
			else if ((_1aac01a13_TypeEnum((*(_180053_d))._field_Type) != nullptr)) {
				_case_begin_1bdd307aa:;
				{
					_1aabcce84_castTypeEnum(_self_, &(_180039_t), &(_180053_d), &(_180067_errorToken));
				}
			}
			else if ((_1aac01a13_TypeEnum(_180039_t) != nullptr)) {
				_case_begin_1bdd30821:;
				{
					_1aabcd3a2_castTypeEnumT(_self_, &(_180039_t), &(_180053_d), &(_180067_errorToken));
				}
			}
			else if ((_1aac014e6_Ptr(_180039_t) != nullptr)) {
				_case_begin_1bdd30887:;
				{
					_1aabca404_castPtr(_self_, _180039_t, _180053_d, _180067_errorToken);
				}
			}
			else if ((_1aac01260_Sptr(_180039_t) != nullptr)) {
				_case_begin_1bdd315e1:;
				{
					_1aabcac40_castRef(_self_, _180039_t, _180053_d, _180067_errorToken);
				}
			}
			else if ((_1aac02030_Slc(_180039_t) != nullptr)) {
				_case_begin_1bdd31657:;
				{
					_1aabcb15d_castSlc(_self_, _180039_t, _180053_d, _180067_errorToken);
				}
			}
			else if ((_1aac0254c_Struct(_180039_t) != nullptr)) {
				_case_begin_1bdd316bd:;
				{
					_1aabca822_castStruct(_self_, _180039_t, _180053_d, _180067_errorToken);
				}
			}
			else if ((_1aac00ec9_Prim(_180039_t) != nullptr)) {
				_case_begin_1bdd31734:;
				{
					_1aabcc703_castPrim(_self_, _180039_t, _180053_d, _180067_errorToken);
					_1aabcca66_castConstant(_self_, &(_180039_t), &(_180053_d));
				}
			}
			else {
				_case_begin_1bdd3059b:;
				{
					_1aabbb35c_pushErr(_self_, _180067_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str(_180039_t), &__jule_any_type5); __jule_collection; }));
					_180053_d=nullptr;
				}
			}
			_match_end_1bdd304be:;
		};
	};
	if ((_180053_d == nullptr)) {
		return nullptr;;
	};
	if ((_1aabedca7_Binded(_180039_t.ptr()) || _1aabedca7_Binded((*(_180053_d))._field_Type.ptr()))) {
		if ((!(_1aabbbd52_isUnsafe(_self_)))) {
			_1aabbb35c_pushErr(_self_, _180067_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("casting binded types require using Unsafe Jule, use Unsafe Jule with unsafe {} scope", 84)), jule::Slice<jule::Any>());
		};
	};
	(*(_180053_d))._field_Mutable=((*_180053_d.alloc)._field_Mutable || (!(_1aac00209_Mutable((*_180053_d.alloc)._field_Type.ptr()))));
	if (((!((*_180053_d.alloc)._field_Decl)) && ((_1aac0177c_Enum((*_180053_d.alloc)._field_Type.ptr()) == nullptr) || (!(_1aabed603_Equal((*((*(_1aac0177c_Enum((*_180053_d.alloc)._field_Type.ptr())))._field_TypeSym))._field_Type, _180039_t)))))) {
		_1aabe7223_applyCastKind(&((*(_self_))._field_s), &(_180053_d), &(_180039_t), &(_180067_errorToken), _1aabbe393_getOwnerRefers(_self_));
		(*((*(_180053_d))._field_Model.cast_ptr<_1aaa30633_CastingExpr>(&__jule_any_type94)))._field_Token=_180067_errorToken;
	} else {
		(*_180053_d.alloc)._field_Type=_180039_t;
	};
	(*_180053_d.alloc)._field_Decl=false;
	(*_180053_d.alloc)._field_Lvalue=false;
	(*_180053_d.alloc)._field_untyped=false;
	if (_1aabb9800_IsConst(_180053_d)) {
		jule::Ptr<_1aac06bc2_Prim> _18838_prim = _1aac00ec9_Prim(_180039_t.ptr());;
		if ((_18838_prim != nullptr)) {
			(*((*_180053_d.alloc)._field_Constant))._field_Kind=(*_18838_prim.alloc)._field_Kind;
		} else {
			jule::Ptr<_1aaa490db_Enum> _18879_enm = _1aac0177c_Enum(_180039_t);;
			if ((_18879_enm != nullptr)) {
				(*((*_180053_d.alloc)._field_Constant))._field_Kind=(*(_1aac00ec9_Prim((*((*_18879_enm.alloc)._field_TypeSym))._field_Type.ptr())))._field_Kind;
			};
		};
	};
	return _180053_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabcdd0e_evalCastT(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aabecdb6_Type>* _189731_t, jule::Ptr<_1aa102b4b_Expr>* _189746_e, jule::Ptr<_1aa0d7ceb_Token>* _189766_et) {
	jule::Ptr<_1aabecdb6_Type> _18987_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18987_prefix;
	});;
	if ((_1aac02030_Slc((*(_189731_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_189746_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type95) {
				_case_begin_1bdd45ca9:;
				{
					(*_self_.alloc)._field_prefix=(*(_189731_t));
				}
			}
			_match_end_1bdd45c32:;
		};
	};
	jule::Ptr<_1aabb8db5_Data> _19077_d = _1aabdad3d_evalExpr(_self_, (*(_189746_e)));;
	if (((_19077_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _19077_d;;
	};
	return _1aabcd858_evalCastByTypeNData(_self_, (*(_189731_t)), _19077_d, (*(_189766_et)));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabce150_evalCast(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa1054ab_CastExpr> _191429_c) {
	jule::Ptr<_1aac062ba_TypeSym> _19157_t = _1aab1e744_buildType((*(_191429_c))._field_Kind);;
	jule::Bool _19163_ok = _1aab55626_checkTypeSym((*(_self_))._field_s, &(_19157_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19163_ok))) {
		return nullptr;;
	};
	return _1aabcdd0e_evalCastT(_self_, &((*(_19157_t))._field_Type), &((*_191429_c.alloc)._field_Expr), &((*((*_191429_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabce491_evalNamespace(_1aabbad84_eval* _self_, jule::Ptr<_1aa105885_NamespaceExpr> _192333_s) {
	jule::Ptr<_1aab2ee08_ImportInfo> _19247_imp = _1aabea7dc_findNamespace((*(_self_))._field_lookup, (*((*(_192333_s))._field_Namespace))._field_Kind);;
	if ((_19247_imp == nullptr)) {
		_1aabbb35c_pushErr(_self_, (*_192333_s.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_192333_s))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _19307_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_19247_imp, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data2);
	;
	_1aabbbabb_disallowBuiltin(_self_);
	jule::Any _19357_def = _1aabbe10c_getDef(_self_, &((*((*_192333_s.alloc)._field_Ident))._field_Kind), false);;
	_1aabbb8bd_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_19307_lookup;
	jule::Ptr<_1aabb8db5_Data> _19387_d = _1aabc360b_evalDef(_self_, &(_19357_def), (*_192333_s.alloc)._field_Ident);;
	return _19387_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabce947_evalStructLitExplicit(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa969605_StructIns> _194242_s, jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _19437_exprs, jule::Ptr<_1aa0d7ceb_Token> _194332_errorToken) {
	jule::Bool _19443_ok = _1aab51a62_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_194242_s))._field_Decl))._field_Generics.len(), (*_194242_s.alloc)._field_Generics.len(), _194332_errorToken);;
	if ((!(_19443_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_194242_s.alloc)._field_Decl))) {
		_1aabbb35c_pushErr(_self_, _194332_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_194242_s))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	_1bdbc6c28_pushReference(_self_, &(_194242_s));
	_1aabc14b6_checkDeprecated(_self_, &((*(*(_194242_s))._field_Decl.alloc)._field_Directives), _194332_errorToken);
	_1aabb140c_structLitChecker _19577_slc = _1aabb140c_structLitChecker{._field_e=_self_, ._field_errorToken=_194332_errorToken, ._field_s=_194242_s, ._field_args=jule::Slice<jule::Ptr<_1aaa2e9d9_StructArgExpr>>(nullptr)};;
	_1aabb2b7d_check(&_19577_slc, &(_19437_exprs));
	jule::Ptr<_1aabb8db5_Data> _19647_d = jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_194242_s, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)}), ._field_Mutable=(*(_self_))._field_target._field_mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1aaa2ed80_StructLitExpr>(_1aaa2ed80_StructLitExpr{._field_Strct=_194242_s, ._field_Args=_19577_slc._field_args}), &__jule_any_type96), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
	return _19647_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabcec88_evalStructLit(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa107b95_StructLit> _197734_lit) {
	jule::Ptr<_1aac062ba_TypeSym> _19787_t = _1aab1e744_buildType((*(_197734_lit))._field_Kind);;
	jule::Bool _19793_ok = _1aab55626_checkTypeSym((*(_self_))._field_s, &(_19787_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19793_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1aa969605_StructIns> _19847_s = _1aac0254c_Struct((*(_19787_t))._field_Type.ptr());;
	if ((_19847_s == nullptr)) {
		if ((_1aac01260_Sptr((*(_19787_t))._field_Type) != nullptr)) {
			_19847_s=_1aac0254c_Struct((*(_1aac01260_Sptr((*(_19787_t))._field_Type)))._field_Elem.ptr());
			if ((_19847_s != nullptr)) {
				goto _julec_label_1bdd5c50c;
			};
		};
		_1aabbb35c_pushErr(_self_, (*((*_197734_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1bdd5c50c:;
	jule::Ptr<_1aabb8db5_Data> _19977_d = _1aabce947_evalStructLitExplicit(_self_, _19847_s, (*_197734_lit.alloc)._field_Exprs, (*((*_197734_lit.alloc)._field_Kind))._field_Token);;
	{
		auto &_match_expr{ (*((*(_19787_t))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)) {
			_case_begin_1bdd5d5da:;
			{
				jule::Ptr<_1aaa2ed80_StructLitExpr> _20008_model = (*(_19977_d))._field_Model.cast_ptr<_1aaa2ed80_StructLitExpr>(&__jule_any_type96);;
				_1aabe5067_makeStructLitAlloc(&(_19977_d), &(_20008_model));
			}
		}
		_match_end_1bdd5d563:;
	};
	if ((_19977_d != nullptr)) {
		jule::Ptr<_1aa969605_StructIns> _20058_strct = _1aac027d3_softStruct((*(_19787_t))._field_Type);;
		if (((_20058_strct != nullptr) && ((*_20058_strct.alloc)._field_Source != nullptr))) {
			(*((*_19977_d.alloc)._field_Model.cast_ptr<_1aaa2ed80_StructLitExpr>(&__jule_any_type96)))._field_Strct=_20058_strct;
			(*_19977_d.alloc)._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_20058_strct, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)});
		};
	};
	return _19977_d;;
}



inline _1aac10ea6_typeChecker _1aabd001e_typeChecker(_1aabbad84_eval* _self_) {
	return _1aab543c2_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd0360_evalType(_1aabbad84_eval* _self_, jule::Ptr<_1aa0ed817_TypeDecl> _201928_t) {
	jule::Ptr<_1aac062ba_TypeSym> _20207_tk = _1aab1e744_buildType(_201928_t);;
	jule::Bool _20213_ok = _1aab55626_checkTypeSym((*(_self_))._field_s, &(_20207_tk), (*(_self_))._field_lookup);;
	if ((!(_20213_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=(*(_20207_tk))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_20207_tk.alloc)._field_Type, &__jule_any_type85), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline void _1aabd06c3_callTypeFn(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa106875_FnCallExpr>* _203232_fc, jule::Ptr<_1aabb8db5_Data>* _203259_d) {
	if (((*((*(_203232_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr(_self_.ptr(), (*((*(_203232_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
	} else if (((*((*(_203232_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr(_self_.ptr(), (*((*((*(_203232_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_203259_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	} else if ((*((*(_203232_fc))))._field_IsCo) {
		_1aabbb35c_pushErr(_self_, (*((*(_203232_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_203259_d))=nullptr;
		return;;
	} else if (((*((*(_203232_fc))))._field_Exception != nullptr)) {
		_1aabbb35c_pushErr(_self_, (*((*(_203232_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_203259_d))=nullptr;
		return;;
	};
	if (((*((*(_203232_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1aa102b4b_Expr> _20488_arg = (*((*(_203232_fc))))._field_Args[0LL];;
		(*(_203259_d))=_1aabcdd0e_evalCastT(_self_, &((*((*(_203259_d))))._field_Type), &(_20488_arg), &((*(_20488_arg))._field_Token));
		return;;
	};
	if (((*(_203259_d)) != nullptr)) {
		(*((*(_203259_d))))._field_Decl=false;
	};
}



inline void _1aabd0a36_callBuiltinFn(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa106875_FnCallExpr>* _205835_fc, jule::Ptr<_1aabb8db5_Data>* _205862_d) {
	if ((!(_1aa106c2c_Unhandled((*(_205835_fc)).ptr())))) {
		_1aabbb35c_pushErr(_self_.ptr(), (*((*(_205835_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_205862_d))=(*(_1aac022b6_Fn((*((*(_205862_d))))._field_Type.ptr())))._field_caller(&(_self_), _205835_fc, _205862_d);
	if (((*(_205862_d)) == nullptr)) {
		return;;
	};
	(*((*(_205862_d))))._field_Mutable=true;
}



inline void _1aabd0d99_checkFnOfConcurrentCall(_1aabbad84_eval* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _207040_f, jule::Ptr<_1aa0d7ceb_Token> _207051_errorToken) {
	if (_1aabbbd52_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_207040_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdd6d397:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3d179_ParamIns> *_207410_p = it;
			{
				if (_1aaa39d9b_IsSelf((*((*(_207410_p))))._field_Decl.ptr())) {
					if ((!(_1aaa3a132_IsRef((*((*(_207410_p))))._field_Decl)))) {
						_1aabbb35c_pushErr(_self_, _207051_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_207410_p))))._field_Decl))._field_Reference) {
					_1aabbb35c_pushErr(_self_, _207051_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1bdd6d397:;
			++it;
			goto _iter_begin_1bdd6d397;
		}
		_iter_end_1bdd6d397:;
	};
}



inline void _1aabd12b7_processExceptionalHandler(_1aabbad84_eval* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _208946_f, jule::Ptr<_1aa106875_FnCallExpr>* _208962_fc, jule::Ptr<_1aabb8db5_Data>* _208989_d) {
	jule::Bool _20903_resultNeeded = ((!((*(_self_))._field_target._field_ignored)) && (!(_1aaa3b6c7_IsVoid((*((*(_208946_f))))._field_Decl.ptr()))));;
	jule::Ptr<_1aab05032_scopeChecker> _209111_csc = nullptr;;
	jule::Ptr<_1aaaec832_Scope> _209211_ch = nullptr;;
	jule::Ptr<_1aaa30ed5_FnCallExpr> _20947_model = (*((*(_208989_d))))._field_Model.cast_ptr<_1aaa30ed5_FnCallExpr>(&__jule_any_type30);;
	jule::Ptr<_1aab05032_scopeChecker> _20987_sc = (*(_self_))._field_lookup.cast_ptr<_1aab05032_scopeChecker>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1);;
	_209111_csc=_1aab17385_newChildChecker(_20987_sc);
	if (_20903_resultNeeded) {
		(*(_209111_csc))._field_result=jule::new_ptr<_1aab04042_result>(_1aab04042_result{._field_func=(*(_208946_f)), ._field_mutable=(*(_self_))._field_target._field_mutable});
	};
	_209211_ch=_1aab0a6db_getChild(_20987_sc);
	(*((*((*(_208962_fc))))._field_Exception))._field_Parent=(*_20987_sc.alloc)._field_tree;
	(*((*(_209111_csc))._field_table))._field_Vars=jule::append((*(*(_209111_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aabe53db_buildErrorVar(&(_209211_ch), _208962_fc); __jule_collection; }));
	_1aab0ab09_checkChildSsc(_20987_sc, &((*((*(_208962_fc))))._field_Exception), &(_209211_ch), &(_209111_csc));
	(*(_20947_model))._field_Assigned=_20903_resultNeeded;
	(*_20947_model.alloc)._field_Except=_209211_ch;
	if ((_20903_resultNeeded && ((*(_209111_csc))._field_result != nullptr))) {
		_1aabbb35c_pushErr(_self_, (*((*(_208962_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1aabd162a_callFn(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa106875_FnCallExpr>* _211628_fc, jule::Ptr<_1aabb8db5_Data>* _211655_d) {
	jule::Ptr<_1aaa3e2ce_FnIns> _21177_f = _1aac022b6_Fn((*((*(_211655_d))))._field_Type.ptr());;
	if (_1aaa40797_IsBuiltin(_21177_f.ptr())) {
		_1aabd0a36_callBuiltinFn(_self_, _211628_fc, _211655_d);
		return;;
	};
	if (((!(_1aaa3b95d_IsMethod((*(_21177_f))._field_Decl.ptr()))) && _1aac1ee82_hasDirective(&((*(*(_21177_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1aabbb35c_pushErr(_self_.ptr(), (*((*(_211628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_211655_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_211655_d))))._field_Mutable)) && _1aaa3b95d_IsMethod((*(_21177_f))._field_Decl.ptr())) && (!((*(*(_21177_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_21177_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((*(_self_))._field_target._field_mutable) {
			_1aabbb35c_pushErr(_self_, (*((*(_211628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1aaa2ed80_StructLitExpr> _21375_lit = _1aabe95bb_isLitBased(&((*((*(_211655_d))))._field_Model));;
			if ((_21375_lit == nullptr)) {
				_1aabbb35c_pushErr(_self_.ptr(), (*((*(_211628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1aabb0e23_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_21375_lit));
			};
		};
	} else if (((!(_1aabbbd52_isUnsafe(_self_.ptr()))) && (*((*(_21177_f))._field_Decl))._field_Unsafety)) {
		_1aabbb35c_pushErr(_self_, (*((*(_211628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _21497_dynamicAnnotation = ((((*((*(_21177_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_21177_f.alloc)._field_Generics.len() == 0LL)) && ((*_21177_f.alloc)._field_Params.len() > 0LL));;
	if (_21497_dynamicAnnotation) {
		(*_21177_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>::alloc((*(*(_21177_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_21177_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aabeb4d0_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_21177_f.alloc)._field_Generics.len() != (*(*(_21177_f))._field_Decl.alloc)._field_Generics.len())) {
		_1aab51a62_checkGenericQuantity((*(_self_))._field_s.ptr(), (*(*(_21177_f))._field_Decl.alloc)._field_Generics.len(), (*_21177_f.alloc)._field_Generics.len(), (*((*(_211628_fc))))._field_Token);
		(*(_211655_d))=nullptr;
		return;;
	};
	jule::Ptr<_1aab4c62e_sema> _21587_old = (*(_self_))._field_s;;
	if (((*(*(_21177_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_21177_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_21587_old != (*_self_.alloc)._field_s)) {
			(*(_21587_old))._field_errors=jule::append((*_21587_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_21587_old;
	});;
	_1aabad4c5_fnCallArgChecker _21717_fcac = _1aabad4c5_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_211628_fc))))._field_Args, ._field_errorToken=(*((*(_211628_fc))))._field_Token, ._field_f=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_dynamicAnnotation=_21497_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr)};;
	if ((!(_21497_dynamicAnnotation))) {
		if ((!((*_21177_f.alloc)._field_reloaded))) {
			jule::Bool _21805_ok = _1aab5b396_reloadFnInsTypes((*(_self_))._field_s, _21177_f);;
			(*_21177_f.alloc)._field_reloaded=true;
			if ((!(_21805_ok))) {
				(*(_211655_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1aaa3e2ce_FnIns> _21878_existInstance = _1aaa3ccc2_appendInstance((*(_21177_f))._field_Decl, &(_21177_f));;
		if ((_21878_existInstance != nullptr)) {
			_21177_f=_21878_existInstance;
		};
	} else if ((!(_1aab59707_buildFnNonGenericTypes((*(_self_))._field_s, _21177_f, &(_21717_fcac._field_ignored))))) {
		(*(_211655_d))=nullptr;
		return;;
	};
	_21717_fcac._field_f=_21177_f;
	jule::Bool _21987_ok = false;;
	if (((*(*(_21177_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_21587_old, (*(_self_))._field_s);
		_21987_ok=_1aabb0ab0_check(&_21717_fcac);
		std::swap(_21587_old, (*(_self_))._field_s);
	} else {
		_21987_ok=_1aabb0ab0_check(&_21717_fcac);
	};
	if (_21497_dynamicAnnotation) {
		if ((!(_21987_ok))) {
			(*(_211655_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aabc8501_checkGenericFn(_self_, &(_21177_f), &((*((*(_211628_fc))))._field_Token), &((*((*(_211655_d))))._field_Model));
			_21987_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21987_ok))) {
			(*(_211655_d))=nullptr;
			return;;
		};
	};
	jule::Any _22197_callModel = (*((*(_211655_d))))._field_Model;;
	if (_1aaa3b6c7_IsVoid((*(_21177_f))._field_Decl)) {
		(*(_211655_d))=_1aabe7432_buildVoidData();
	} else {
		(*((*(_211655_d))))._field_Type=(*_21177_f.alloc)._field_Result;
		(*((*(_211655_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1aaa30ed5_FnCallExpr> _22287_model = jule::new_ptr<_1aaa30ed5_FnCallExpr>(_1aaa30ed5_FnCallExpr{._field_Token=(*((*(_211628_fc))))._field_Token, ._field_Func=_21177_f, ._field_IsCo=(*((*(_211628_fc))))._field_IsCo, ._field_Expr=_22197_callModel, ._field_Args=_21717_fcac._field_argModels, ._field_Except=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_211655_d))))._field_Model=jule::Any(_22287_model, &__jule_any_type30);
	(*((*(_211655_d))))._field_Mutable=true;
	if ((*(*(_21177_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_211628_fc))))._field_IsCo) {
			_1aab50533_pushErr((*(_self_))._field_s.ptr(), (*((*(_211628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1aab50896_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1aa106c2c_Unhandled((*(_211628_fc)).ptr())) {
				_case_begin_1bdd93c91:;
				{
					_1aabbb35c_pushErr(_self_.ptr(), (*((*(_211628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1aa106eb3_Ignored((*(_211628_fc)).ptr())) {
				_case_begin_1bdd9408d:;
				{
					goto _match_end_1bdd923aa;
				}
			}
			else {
				_case_begin_1bdd92454:;
				{
					_1aabd12b7_processExceptionalHandler(_self_.ptr(), &(_21177_f), _211628_fc, _211655_d);
				}
			}
			_match_end_1bdd923aa:;
		};
	} else if ((!(_1aa106c2c_Unhandled((*(_211628_fc)).ptr())))) {
		_1aabbb35c_pushErr(_self_.ptr(), (*((*(_211628_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_211628_fc))))._field_IsCo) {
		(*((*(_22287_model))._field_Func))._field_AsAnon=true;
		(*(*(_22287_model))._field_Func.alloc)._field_CalledCo=true;
		_1aabd0d99_checkFnOfConcurrentCall(_self_.ptr(), &((*_22287_model.alloc)._field_Func), (*((*(_211628_fc))))._field_Token);
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd196b_evalFnCall(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa106875_FnCallExpr> _226531_fc) {
	jule::Ptr<_1aabecdb6_Type> _22667_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_22667_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_226531_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bdd99181:;
			{
				if (((*((*((*(_226531_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1aac7b296_builtinCallerError(&(_self_), &(_226531_fc));;
				};
			}
		}
		_match_end_1bdd99109:;
	};
	jule::Ptr<_1aabb8db5_Data> _22797_d = _1aabda029_evalExprKind(_self_, (*((*(_226531_fc))._field_Expr))._field_Kind);;
	if ((_22797_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22797_d))._field_Decl) {
		_1aabd06c3_callTypeFn(_self_, &(_226531_fc), &(_22797_d));
		return _22797_d;;
	};
	if ((_1aac022b6_Fn((*(_22797_d))._field_Type.ptr()) == nullptr)) {
		_1aabbb35c_pushErr(_self_, (*_226531_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aabd162a_callFn(_self_, &(_226531_fc), &(_22797_d));
	return _22797_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd1d67_evalEnumStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aaa490db_Enum> _229834_enm, jule::Ptr<_1aa0d7ceb_Token> _229850_ident) {
	jule::Ptr<_1aaa48580_EnumItem> _22997_item = _1aaa49c13_FindItem(_229834_enm.ptr(), (*(_229850_ident))._field_Kind);;
	if ((_22997_item == nullptr)) {
		_1aabbb35c_pushErr(_self_, _229850_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_229834_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_229850_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _1aabe9302_evalEnumStatic(&((*(_self_))._field_s), &(_229834_enm), &(_22997_item), &(_229850_ident), _1aabbe393_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd2263_evalTypeEnumStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aaa4a7e6_TypeEnum> _230638_enm, jule::Ptr<_1aa0d7ceb_Token> _230654_ident) {
	jule::Ptr<_1aaa4a21e_TypeEnumItem> _23077_item = _1aaa4b3da_FindItem(_230638_enm.ptr(), (*(_230654_ident))._field_Kind);;
	if ((_23077_item == nullptr)) {
		_1aabbb35c_pushErr(_self_, _230654_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_230638_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_230654_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1aac0177c_Enum((*((*(_23077_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdda2cb1:;
			{
				return _1aabbe98c__evalEnum(_self_, _1aac0177c_Enum((*((*(_23077_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1aac01a13_TypeEnum((*((*(_23077_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdda2d27:;
			{
				return _1aabc01c9__evalTypeEnum(_self_, _1aac01a13_TypeEnum((*((*(_23077_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1aac0254c_Struct((*((*(_23077_item))._field_TypeSym))._field_Type) != nullptr)) {
			_case_begin_1bdda0e9b:;
			{
				return _1aabc0916__evalStruct(_self_, _1aac0254c_Struct((*((*(_23077_item))._field_TypeSym))._field_Type));;
			}
		}
		else {
			_case_begin_1bdda0e35:;
			{
				jule::Ptr<_1aabb8db5_Data> _23208_d = jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=(*(*(_23077_item))._field_TypeSym.alloc)._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
				(*(_23208_d))._field_Model=jule::Any((*_23208_d.alloc)._field_Type, &__jule_any_type85);
				return _23208_d;;
			}
		}
		_match_end_1bdda1133:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd265e_evalStructStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa969605_StructIns> _232936_s, jule::Ptr<_1aa0d7ceb_Token> _232951_ident) {
	jule::Ptr<_1aabb8db5_Data> _23307_d = jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
	;
	jule::Ptr<_1aaa3b221_Fn> _23347_method = _1aa96a66c_FindMethod(_232936_s.ptr(), (*(_232951_ident))._field_Kind, true);;
	if ((_23347_method != nullptr)) {
		if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_23347_method.alloc)._field_Public, (*_23347_method.alloc)._field_Token)))) {
			_1aabbb35c_pushErr(_self_, _232951_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_232951_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1aaa3e2ce_FnIns> _23418_ins = _1aaa3c9b4_instance(_23347_method);;
		(*(_23418_ins))._field_Owner=_232936_s;
		_1bdbd27c2_pushReference(_self_, &(_23418_ins));
		(*_23307_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aaa33e1c_StructStaticIdentExpr>(_1aaa33e1c_StructStaticIdentExpr{._field_Structure=_232936_s, ._field_Expr=(*_23307_d.alloc)._field_Model, ._field_Method=_23418_ins}), &__jule_any_type97);
		(*_23307_d.alloc)._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23418_ins, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data1)});
		return _23307_d;;
	};
	jule::Ptr<_1aab70795_Var> _23557_sttc = _1aa96acee_FindStatic(_232936_s, (*_232951_ident.alloc)._field_Kind);;
	if ((_23557_sttc != nullptr)) {
		return _1aabc29c3_evalVar(_self_, _23557_sttc, _232951_ident);;
	};
	_1aabbb35c_pushErr(_self_, _232951_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_232936_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_232951_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd2b15_evalTraitSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data> _236437_d, jule::Ptr<_1aaa46935_Trait> _236451_trt, jule::Ptr<_1aa0d7ceb_Token> _236468_ident) {
	jule::Ptr<_1aaa3b221_Fn> _23657_f = _1aaa47617_FindMethod(_236451_trt.ptr(), (*(_236468_ident))._field_Kind);;
	if ((_23657_f == nullptr)) {
		_1aabbb35c_pushErr(_self_, _236468_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_236451_trt.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_236468_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aaa3c9b4_instance(_23657_f), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data1)}), ._field_Mutable=(*(_236437_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1aaa331d5_TraitSubIdentExpr>(_1aaa331d5_TraitSubIdentExpr{._field_Token=_236468_ident, ._field_Expr=(*_236437_d.alloc)._field_Model, ._field_Method=_23657_f, ._field_Trt=_236451_trt}), &__jule_any_type98), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd3176_evalStructSubIdentField(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _238644_d, jule::Ptr<_1aa969605_StructIns>* _238659_s, jule::Ptr<_1aa0d7ceb_Token>* _238679_tok, jule::Ptr<_1aa9689cd_FieldIns>* _2386104_f) {
	jule::Ptr<_1aaa33a76_StructSubIdentExpr> _23877_model = jule::new_ptr<_1aaa33a76_StructSubIdentExpr>(_1aaa33a76_StructSubIdentExpr{._field_Token=(*(_238679_tok)), ._field_Expr=jule::new_ptr<_1aabb8db5_Data>((*((*(_238644_d))))), ._field_Method=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_Field=(*(_2386104_f)), ._field_Owner=(*(_238659_s))});;
	(*((*(_238644_d))))._field_Model=jule::Any(_23877_model, &__jule_any_type99);
	(*((*(_238644_d))))._field_Type=(*((*(_2386104_f))))._field_Type;
	(*((*(_238644_d))))._field_Lvalue=true;
	if (((*((*((*(_2386104_f))))._field_Decl))._field_Mutable && (!((*((*(_238644_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)) {
				_case_begin_1bddb5e6c:;
				{
					jule::Ptr<_1aab05032_scopeChecker> _24025_scope = _1aab08695_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1aab05032_scopeChecker>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1));;
					(*((*(_238644_d))))._field_Mutable=(((*(_24025_scope))._field_owner != nullptr) && ((*((*_24025_scope.alloc)._field_owner))._field_Owner == (*(_238659_s))));
				}
			}
			_match_end_1bddb5de5:;
		};
	};
	return (*(_238644_d));;
}



inline __jule_tuple_x_1aabb8db5_Data__jule_tuple_bool _1aabd362c_evalStructSubIdentFieldOnly(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data> _241047_d, jule::Ptr<_1aa969605_StructIns> _241061_s, jule::Ptr<_1aa105c5e_SubIdentExpr> _241080_si) {
	__jule_tuple_x_1aabb8db5_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa9689cd_FieldIns> _24117_f = _1aa96a9ad_FindField(_241061_s.ptr(), (*((*(_241080_si))._field_Ident))._field_Kind);;
	if ((_24117_f != nullptr)) {
		if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_24117_f.alloc)._field_Decl))._field_Public, (*(*(_24117_f))._field_Decl.alloc)._field_Token)))) {
			_1aabbb35c_pushErr(_self_, (*_241080_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_24117_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		__jule_func_result.__jule_result_arg0 = _1aabd3176_evalStructSubIdentField(_self_, &(_241047_d), &(_241061_s), &((*_241080_si.alloc)._field_Ident), &(_24117_f));
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd3c48_evalStructSubIdentMethod(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _242445_d, jule::Ptr<_1aa969605_StructIns>* _242460_s, jule::Ptr<_1aa0d7ceb_Token>* _242480_tok, jule::Ptr<_1aaa3b221_Fn>* _2424105_m, jule::Bool _2424113_ref) {
	if ((_1aaa3a132_IsRef((*((*(_2424105_m))))._field_Params[0LL].ptr()) && (!(_2424113_ref)))) {
		_1aabbb35c_pushErr(_self_, (*(_242480_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1aabc14b6_checkDeprecated(_self_, &((*((*(_2424105_m))))._field_Directives), (*(_242480_tok)));
	jule::Ptr<_1aaa3e2ce_FnIns> _24317_ins = _1aaa3c9b4_instance((*(_2424105_m)));;
	(*(_24317_ins))._field_Owner=(*(_242460_s));
	_1bdbd27c2_pushReference(_self_, &(_24317_ins));
	jule::Ptr<_1aabb8db5_Data> _24347_model = jule::new_ptr<_1aabb8db5_Data>((*((*(_242445_d)))));;
	(*((*(_242445_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa33a76_StructSubIdentExpr>(_1aaa33a76_StructSubIdentExpr{._field_Token=(*(_242480_tok)), ._field_Expr=_24347_model, ._field_Method=_24317_ins, ._field_Field=jule::Ptr<_1aa9689cd_FieldIns>(nullptr), ._field_Owner=(*(_242460_s))}), &__jule_any_type99);
	(*((*(_242445_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_24317_ins, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data1)});
	return (*(_242445_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd42a9_evalStructSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data> _244538_d, jule::Ptr<_1aa969605_StructIns> _244552_s, jule::Ptr<_1aa105c5e_SubIdentExpr> _244571_si, jule::Bool _244595_ref) {
	{
		jule::Ptr<_1aa969605_StructIns> _24478_tempS = _244552_s;;
		if (((*(_244552_s))._field_Source != nullptr)) {
			_24478_tempS=_1aac0254c_Struct((*(_244552_s))._field_Source);
		};
		if ((_24478_tempS != nullptr)) {
			jule::Ptr<_1aabb8db5_Data> _24529_r;
			jule::Bool _245212_found;
			({
				__jule_tuple_x_1aabb8db5_Data__jule_tuple_bool __jule_assign_result = _1aabd362c_evalStructSubIdentFieldOnly(_self_, _244538_d, _24478_tempS, _244571_si);
				_24529_r = __jule_assign_result.__jule_result_arg0;
				_245212_found = __jule_assign_result.__jule_result_arg1;
			});
			if (_245212_found) {
				return _24529_r;;
			};
		};
	};
	;
	jule::Ptr<_1aaa3b221_Fn> _24607_m = _1aa96a66c_FindMethod(_244552_s.ptr(), (*((*(_244571_si))._field_Ident))._field_Kind, false);;
	if ((_24607_m == nullptr)) {
		_1aabbb35c_pushErr(_self_, (*_244571_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_244552_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_244571_si))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_24607_m))._field_Public, (*_24607_m.alloc)._field_Token)))) {
		_1aabbb35c_pushErr(_self_, (*_244571_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_24607_m.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1aabbb6c0_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1aabd3c48_evalStructSubIdentMethod(_self_, &(_244538_d), &(_244552_s), &((*_244571_si.alloc)._field_Ident), &(_24607_m), _244595_ref);;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd45ea_evalIntTypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _247333_ident) {
	;
	{
		auto &_match_expr{ (*(_247333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bddca5d0:;
			{
				jule::Ptr<_1aa9b96cc_Const> _24778_c = static__1aaa22c30_NewI64(_1aaabc56b_MaxI(jule::Str::lit("int", 3)));;
				(*(_24778_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac77acd_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24778_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24778_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bddc9ca5:;
			{
				jule::Ptr<_1aa9b96cc_Const> _24868_c = static__1aaa22c30_NewI64(static_cast<jule::I64>(_1aaabcb76_Min(jule::Str::lit("int", 3))));;
				(*(_24868_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac77acd_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24868_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24868_c});;
			}
		}
		else {
			_case_begin_1bddc9656:;
			{
				_1aabbb35c_pushErr(_self_, _247333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type5); (*it++) = jule::Any((*(_247333_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bddc98a9:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd493b_evalUintTypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _250034_ident) {
	;
	{
		auto &_match_expr{ (*(_250034_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bddce66c:;
			{
				jule::Ptr<_1aa9b96cc_Const> _25048_c = static__1aaa22e83_NewU64(_1aaabc835_MaxU(jule::Str::lit("uint", 4)));;
				(*(_25048_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac77715_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25048_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25048_c});;
			}
		}
		else {
			_case_begin_1bddcd6e3:;
			{
				_1aabbb35c_pushErr(_self_, _250034_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type5); (*it++) = jule::Any((*(_250034_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bddcd968:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd4c7c_evalI8TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _251832_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_251832_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bddd2a05:;
			{
				jule::Ptr<_1aa9b96cc_Const> _25248_c = static__1aaa22c30_NewI64(127LL);;
				(*(_25248_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac77d20_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25248_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25248_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bddd21ca:;
			{
				jule::Ptr<_1aa9b96cc_Const> _25338_c = static__1aaa22c30_NewI64(-128LL);;
				(*(_25338_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac77d20_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25338_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25338_c});;
			}
		}
		else {
			_case_begin_1bddd1ae2:;
			{
				_1aabbb35c_pushErr(_self_, _251832_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_251832_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bddd1cce:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd50bd_evalI16TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _254733_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_254733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bddd709d:;
			{
				jule::Ptr<_1aa9b96cc_Const> _25538_c = static__1aaa22c30_NewI64(32767LL);;
				(*(_25538_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac780b7_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25538_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25538_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bddd6773:;
			{
				jule::Ptr<_1aa9b96cc_Const> _25628_c = static__1aaa22c30_NewI64(-32768LL);;
				(*(_25628_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac780b7_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25628_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25628_c});;
			}
		}
		else {
			_case_begin_1bddd618a:;
			{
				_1aabbb35c_pushErr(_self_, _254733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_254733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bddd6377:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd540e_evalI32TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _257633_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_257633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bdddb646:;
			{
				jule::Ptr<_1aa9b96cc_Const> _25828_c = static__1aaa22c30_NewI64(2147483647LL);;
				(*(_25828_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac78370_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25828_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25828_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bdddad1b:;
			{
				jule::Ptr<_1aa9b96cc_Const> _25918_c = static__1aaa22c30_NewI64(-2147483648LL);;
				(*(_25918_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac78370_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25918_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25918_c});;
			}
		}
		else {
			_case_begin_1bddda733:;
			{
				_1aabbb35c_pushErr(_self_, _257633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_257633_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bddda920:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd5750_evalI64TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _260533_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_260533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bdde0bde:;
			{
				jule::Ptr<_1aa9b96cc_Const> _26118_c = static__1aaa22c30_NewI64(jule::MAX_I64);;
				(*(_26118_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac78628_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26118_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26118_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bdde03b4:;
			{
				jule::Ptr<_1aa9b96cc_Const> _26208_c = static__1aaa22c30_NewI64(jule::MIN_I64);;
				(*(_26208_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac78628_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26208_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26208_c});;
			}
		}
		else {
			_case_begin_1bdddeccb:;
			{
				_1aabbb35c_pushErr(_self_, _260533_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_260533_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bdddeeb8:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd5a91_evalU8TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _263432_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_263432_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bdde4dd0:;
			{
				jule::Ptr<_1aa9b96cc_Const> _26398_c = static__1aaa22e83_NewU64(255LLU);;
				(*(_26398_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac788d1_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26398_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26398_c});;
			}
		}
		else {
			_case_begin_1bdde3e12:;
			{
				_1aabbb35c_pushErr(_self_, _263432_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_263432_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bdde4143:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd5dd2_evalU16TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _265333_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_265333_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bdde7cd4:;
			{
				jule::Ptr<_1aa9b96cc_Const> _26588_c = static__1aaa22e83_NewU64(65535LLU);;
				(*(_26588_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac78b89_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26588_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26588_c});;
			}
		}
		else {
			_case_begin_1bdde6d16:;
			{
				_1aabbb35c_pushErr(_self_, _265333_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_265333_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bdde7047:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd6223_evalU32TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _267233_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_267233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bddeabd8:;
			{
				jule::Ptr<_1aa9b96cc_Const> _26778_c = static__1aaa22e83_NewU64(4294967295LLU);;
				(*(_26778_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac78e42_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26778_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26778_c});;
			}
		}
		else {
			_case_begin_1bdde9c1a:;
			{
				_1aabbb35c_pushErr(_self_, _267233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_267233_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bdde9e4b:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd6564_evalU64TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _269133_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_269133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bddedadc:;
			{
				jule::Ptr<_1aa9b96cc_Const> _26968_c = static__1aaa22e83_NewU64(jule::MAX_U64);;
				(*(_26968_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac7942b_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26968_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26968_c});;
			}
		}
		else {
			_case_begin_1bddecb1e:;
			{
				_1aabbb35c_pushErr(_self_, _269133_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_269133_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bddecd50:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd68a5_evalF32TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _271033_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_271033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bde02250:;
			{
				jule::Ptr<_1aa9b96cc_Const> _27178_c = static__1aaa237d0_NewF64(340282346638528860000000000000000000000.0);;
				(*(_27178_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac7966d_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27178_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27178_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bde024a3:;
			{
				jule::Ptr<_1aa9b96cc_Const> _27268_c = static__1aaa237d0_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_27268_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac7966d_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27268_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27268_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1bde02519:;
			{
				jule::Ptr<_1aa9b96cc_Const> _27358_c = static__1aaa237d0_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_27358_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac7966d_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27358_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27358_c});;
			}
		}
		else {
			_case_begin_1bde01194:;
			{
				_1aabbb35c_pushErr(_self_, _271033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_271033_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bde01529:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd6be6_evalF64TypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aa0d7ceb_Token> _274933_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_274933_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1bde07d49:;
			{
				jule::Ptr<_1aa9b96cc_Const> _27568_c = static__1aaa237d0_NewF64(jule::MAX_F64);;
				(*(_27568_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac7987c_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27568_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27568_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1bde0809c:;
			{
				jule::Ptr<_1aa9b96cc_Const> _27658_c = static__1aaa237d0_NewF64(jule::MIN_F64);;
				(*(_27658_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac7987c_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27658_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27658_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1bde08113:;
			{
				jule::Ptr<_1aa9b96cc_Const> _27748_c = static__1aaa237d0_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_27748_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=_1aac7987c_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_27748_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_27748_c});;
			}
		}
		else {
			_case_begin_1bde06c8d:;
			{
				_1aabbb35c_pushErr(_self_, _274933_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_274933_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bde07123:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd70e2_evalPrimStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aabecdb6_Type> _278834_t, jule::Ptr<_1aa0d7ceb_Token> _278844_ident) {
	jule::Ptr<_1aabb8db5_Data> __jule_func_result;
	jule::Str _27893_kind = (*(_1aac00ec9_Prim(_278834_t.ptr())))._field_Kind;;
	{
		auto &_match_expr{ _27893_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1bde0d1e5:;
			{
				__jule_func_result=_1aabd45ea_evalIntTypeStatic(_self_, _278844_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1bde0c920:;
			{
				__jule_func_result=_1aabd493b_evalUintTypeStatic(_self_, _278844_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1bde0d448:;
			{
				__jule_func_result=_1aabd4c7c_evalI8TypeStatic(_self_, _278844_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1bde0d4ae:;
			{
				__jule_func_result=_1aabd50bd_evalI16TypeStatic(_self_, _278844_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1bde0d525:;
			{
				__jule_func_result=_1aabd540e_evalI32TypeStatic(_self_, _278844_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1bde0c601:;
			{
				__jule_func_result=_1aabd5750_evalI64TypeStatic(_self_, _278844_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1bde0c678:;
			{
				__jule_func_result=_1aabd5a91_evalU8TypeStatic(_self_, _278844_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1bde0c700:;
			{
				__jule_func_result=_1aabd5dd2_evalU16TypeStatic(_self_, _278844_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1bde0d5e1:;
			{
				__jule_func_result=_1aabd6223_evalU32TypeStatic(_self_, _278844_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1bde0d657:;
			{
				__jule_func_result=_1aabd6564_evalU64TypeStatic(_self_, _278844_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1bde0d6bd:;
			{
				__jule_func_result=_1aabd68a5_evalF32TypeStatic(_self_, _278844_ident);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1bde0d734:;
			{
				__jule_func_result=_1aabd6be6_evalF64TypeStatic(_self_, _278844_ident);
			}
		}
		else {
			_case_begin_1bde0c425:;
			{
				_1aabbb35c_pushErr(_self_, _278844_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_27893_kind, &__jule_any_type5); (*it++) = jule::Any((*(_278844_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				__jule_func_result = nullptr;
				return __jule_func_result;;
			}
		}
		_match_end_1bde0c58a:;
	};
	if (((__jule_func_result != nullptr) && (_1aabee55a_ActualKind(_278834_t) != (*_278834_t.alloc)._field_Kind))) {
		(*__jule_func_result.alloc)._field_Type=_278834_t;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd74dd_evalTypeStatic(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data> _282634_d, jule::Ptr<_1aa105c5e_SubIdentExpr> _282648_si) {
	{
		
		if ((_1aac027d3_softStruct((*(_282634_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bde1496b:;
			{
				return _1aabd265e_evalStructStatic(_self_, _1aac027d3_softStruct((*(_282634_d))._field_Type), (*(_282648_si))._field_Ident);;
			}
		}
		else if ((_1aac00ec9_Prim((*(_282634_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bde15890:;
			{
				return _1aabd70e2_evalPrimStatic(_self_, (*_282634_d.alloc)._field_Type, (*(_282648_si))._field_Ident);;
			}
		}
		else if ((_1aac0177c_Enum((*(_282634_d))._field_Type) != nullptr)) {
			_case_begin_1bde15906:;
			{
				return _1aabd1d67_evalEnumStatic(_self_, _1aac0177c_Enum((*(_282634_d))._field_Type), (*_282648_si.alloc)._field_Ident);;
			}
		}
		else if ((_1aac01a13_TypeEnum((*(_282634_d))._field_Type) != nullptr)) {
			_case_begin_1bde1596c:;
			{
				return _1aabd2263_evalTypeEnumStatic(_self_, _1aac01a13_TypeEnum((*(_282634_d))._field_Type), (*_282648_si.alloc)._field_Ident);;
			}
		}
		else {
			_case_begin_1bde14592:;
			{
				_1aabbb35c_pushErr(_self_, (*_282648_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_282634_d))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1bde144b5:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1bde1c248_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaad1052_comptimeTypeInfo>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si) {
	jule::Ptr<_1aabb8db5_Data> _28457_cd = _1aaad7289_subIdent((*(_284454_ct)), &((*((*((*(_284485_si))))._field_Ident))._field_Kind));;
	if ((_28457_cd == nullptr)) {
		_1aabbb35c_pushErr(_self_, (*((*(_284485_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_284474_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_284485_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28457_cd;;
}

inline jule::Ptr<_1aabb8db5_Data> _1bde266b4_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaac1bad_comptimeStructField>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si) {
	jule::Ptr<_1aabb8db5_Data> _28457_cd = _1aaac30ee_subIdent((*(_284454_ct)), &((*((*((*(_284485_si))))._field_Ident))._field_Kind));;
	if ((_28457_cd == nullptr)) {
		_1aabbb35c_pushErr(_self_, (*((*(_284485_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_284474_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_284485_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28457_cd;;
}

inline jule::Ptr<_1aabb8db5_Data> _1bde2ac7e_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaac8104_comptimeEnumField>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si) {
	jule::Ptr<_1aabb8db5_Data> _28457_cd = _1aaac9138_subIdent((*(_284454_ct)), &((*((*((*(_284485_si))))._field_Ident))._field_Kind));;
	if ((_28457_cd == nullptr)) {
		_1aabbb35c_pushErr(_self_, (*((*(_284485_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_284474_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_284485_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28457_cd;;
}

inline jule::Ptr<_1aabb8db5_Data> _1bde3038d_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaacae1a_comptimeParam>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si) {
	jule::Ptr<_1aabb8db5_Data> _28457_cd = _1aaacc768_subIdent((*(_284454_ct)), &((*((*((*(_284485_si))))._field_Ident))._field_Kind));;
	if ((_28457_cd == nullptr)) {
		_1aabbb35c_pushErr(_self_, (*((*(_284485_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_284474_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_284485_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28457_cd;;
}

inline jule::Ptr<_1aabb8db5_Data> _1bde34a9b_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaac4dd1_comptimeStatic>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si) {
	jule::Ptr<_1aabb8db5_Data> _28457_cd = _1aaac6322_subIdent((*(_284454_ct)), &((*((*((*(_284485_si))))._field_Ident))._field_Kind));;
	if ((_28457_cd == nullptr)) {
		_1aabbb35c_pushErr(_self_, (*((*(_284485_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_284474_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_284485_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28457_cd;;
}

inline jule::Ptr<_1aabb8db5_Data> _1bde39166_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaad7564_comptimeValue>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si) {
	jule::Ptr<_1aabb8db5_Data> _28457_cd = _1aaad9ee5_subIdent((*(_284454_ct)), &((*((*((*(_284485_si))))._field_Ident))._field_Kind));;
	if ((_28457_cd == nullptr)) {
		_1aabbb35c_pushErr(_self_, (*((*(_284485_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_284474_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_284485_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28457_cd;;
}

inline jule::Ptr<_1aabb8db5_Data> _1bde3d731_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaadbc3e_comptimeFile>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si) {
	jule::Ptr<_1aabb8db5_Data> _28457_cd = _1aaadd58c_subIdent((*(_284454_ct)), &((*((*((*(_284485_si))))._field_Ident))._field_Kind));;
	if ((_28457_cd == nullptr)) {
		_1aabbb35c_pushErr(_self_, (*((*(_284485_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_284474_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_284485_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28457_cd;;
}

inline jule::Ptr<_1aabb8db5_Data> _1bde42d84_comptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aaae0b55_comptimeDecl>* _284454_ct, jule::Ptr<_1aabb8db5_Data>* _284474_d, jule::Ptr<_1aa105c5e_SubIdentExpr>* _284485_si) {
	jule::Ptr<_1aabb8db5_Data> _28457_cd = _1aaae49b1_subIdent((*(_284454_ct)), &((*((*((*(_284485_si))))._field_Ident))._field_Kind));;
	if ((_28457_cd == nullptr)) {
		_1aabbb35c_pushErr(_self_, (*((*(_284485_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_284474_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_284485_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _28457_cd;;
}



inline __jule_tuple_x_1aabb8db5_Data__jule_tuple_bool _1aabd7d90_tryComptimeObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data>* _285243_d, jule::Ptr<_1aa105c5e_SubIdentExpr> _285257_si) {
	__jule_tuple_x_1aabb8db5_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1aac04b26_comptimeTypeInfo((*((*(_285243_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bde1a697:;
			{
				jule::Ptr<_1aaad1052_comptimeTypeInfo> _28558_ct = _1aac04b26_comptimeTypeInfo((*((*(_285243_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1bde1c248_comptimeObjSubIdent(_self_, &(_28558_ct), _285243_d, &(_285257_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aac03839_comptimeStructField((*((*(_285243_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bde1a18b:;
			{
				jule::Ptr<_1aaac1bad_comptimeStructField> _28588_ct = _1aac03839_comptimeStructField((*((*(_285243_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1bde266b4_comptimeObjSubIdent(_self_, &(_28588_ct), _285243_d, &(_285257_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aac03d56_comptimeEnumField((*((*(_285243_d))))._field_Type) != nullptr)) {
			_case_begin_1bde1a202:;
			{
				jule::Ptr<_1aaac8104_comptimeEnumField> _28618_ct = _1aac03d56_comptimeEnumField((*((*(_285243_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1bde2ac7e_comptimeObjSubIdent(_self_, &(_28618_ct), _285243_d, &(_285257_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aac04373_comptimeParam((*((*(_285243_d))))._field_Type) != nullptr)) {
			_case_begin_1bde1a279:;
			{
				jule::Ptr<_1aaacae1a_comptimeParam> _28648_ct = _1aac04373_comptimeParam((*((*(_285243_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1bde3038d_comptimeObjSubIdent(_self_, &(_28648_ct), _285243_d, &(_285257_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aac05143_comptimeStatic((*((*(_285243_d))))._field_Type) != nullptr)) {
			_case_begin_1bde1a301:;
			{
				jule::Ptr<_1aaac4dd1_comptimeStatic> _28678_ct = _1aac05143_comptimeStatic((*((*(_285243_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1bde34a9b_comptimeObjSubIdent(_self_, &(_28678_ct), _285243_d, &(_285257_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aac053c9_comptimeValue((*((*(_285243_d))))._field_Type) != nullptr)) {
			_case_begin_1bde1a378:;
			{
				jule::Ptr<_1aaad7564_comptimeValue> _28708_ct = _1aac053c9_comptimeValue((*((*(_285243_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1bde39166_comptimeObjSubIdent(_self_, &(_28708_ct), _285243_d, &(_285257_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aac05b7c_comptimeFile((*((*(_285243_d))))._field_Type) != nullptr)) {
			_case_begin_1bde1a400:;
			{
				jule::Ptr<_1aaadbc3e_comptimeFile> _28738_ct = _1aac05b7c_comptimeFile((*((*(_285243_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1bde3d731_comptimeObjSubIdent(_self_, &(_28738_ct), _285243_d, &(_285257_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aac05660_comptimeDecl((*((*(_285243_d))))._field_Type) != nullptr)) {
			_case_begin_1bde1a8ea:;
			{
				jule::Ptr<_1aaae0b55_comptimeDecl> _28768_ct = _1aac05660_comptimeDecl((*((*(_285243_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1bde42d84_comptimeObjSubIdent(_self_, &(_28768_ct), _285243_d, &(_285257_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bde1a125:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bde1a06a:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd828b_evalObjSubIdent(_1aabbad84_eval* _self_, jule::Ptr<_1aabb8db5_Data> _288335_d, jule::Ptr<_1aa105c5e_SubIdentExpr> _288349_si) {
	if (_1aa0da6d3_IsIgnoreIdent((*((*(_288349_si))._field_Ident))._field_Kind)) {
		_1aabbb35c_pushErr(_self_, (*_288349_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1aabb8db5_Data> _28898_compData;
		jule::Bool _288918_ok;
		({
			__jule_tuple_x_1aabb8db5_Data__jule_tuple_bool __jule_assign_result = _1aabd7d90_tryComptimeObjSubIdent(_self_, &(_288335_d), _288349_si);
			_28898_compData = __jule_assign_result.__jule_result_arg0;
			_288918_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_288918_ok) {
			return _28898_compData;;
		};
	};
	jule::Ptr<_1aabecdb6_Type> _28947_kind = (*(_288335_d))._field_Type;;
	{
		auto &_match_expr{ (*((*(_288335_d))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data28)) {
			_case_begin_1bde48791:;
			{
				jule::Ptr<_1aac0deb5_Ptr> _28978_ptr = (*((*_288335_d.alloc)._field_Type))._field_Kind.cast_ptr<_1aac0deb5_Ptr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data28);;
				if (_1aac0ea32_IsUnsafe(_28978_ptr.ptr())) {
					goto _match_end_1bde48708;
				};
				if ((!(_1aabbbd52_isUnsafe(_self_)))) {
					_1aabbb35c_pushErr(_self_, (*(_288349_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28947_kind=(*(_28978_ptr))._field_Elem;
				_1aabe98a7_makeImplicitDeref(&(_288335_d), (*(_288349_si))._field_Ident);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)) {
			_case_begin_1bde48197:;
			{
				jule::Ptr<_1aac0a6ed_Sptr> _29078_sptr = (*((*_288335_d.alloc)._field_Type))._field_Kind.cast_ptr<_1aac0a6ed_Sptr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23);;
				_28947_kind=(*(_29078_sptr))._field_Elem;
				_1aabe98a7_makeImplicitDeref(&(_288335_d), (*(_288349_si))._field_Ident);
			}
		}
		_match_end_1bde48708:;
	};
	{
		auto &_match_expr{ (*(_28947_kind))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
			_case_begin_1bde48bc0:;
			{
				jule::Ptr<_1aa969605_StructIns> _29148_s = (*(_28947_kind))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);;
				if ((((*(_29148_s))._field_Source != nullptr) || _1aabe5e03_isInstancedStruct(_29148_s))) {
					jule::Bool _29169_usedReferenceElem = false;;
					{
						auto &_match_expr{ (*((*(_288335_d))._field_Type))._field_Kind };
						
						if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)) {
							_case_begin_1bde4ddb2:;
							{
								_29169_usedReferenceElem=true;
							}
						}
						_match_end_1bde4dd3a:;
					};
					return _1aabd42a9_evalStructSubIdent(_self_, _288335_d, _29148_s, _288349_si, _29169_usedReferenceElem);;
				};
			}
		}
		_match_end_1bde48b59:;
	};
	if ((_1aac02a69_Trait((*(_288335_d))._field_Type.ptr()) != nullptr)) {
		return _1aabd2b15_evalTraitSubIdent(_self_, _288335_d, _1aac02a69_Trait((*(_288335_d))._field_Type), (*(_288349_si))._field_Ident);;
	};
	_1aabbb35c_pushErr(_self_, (*(_288349_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_288335_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd85cc_evalSubIdent(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa105c5e_SubIdentExpr> _293133_si) {
	jule::Ptr<_1aabecdb6_Type> _29327_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_29327_prefix;
	});;
	jule::Ptr<_1aabb8db5_Data> _29357_d = _1aabda029_evalExprKind(_self_, (*((*(_293133_si))._field_Expr))._field_Kind);;
	if ((_29357_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_29357_d))._field_Decl) {
		return _1aabd74dd_evalTypeStatic(_self_, _29357_d, _293133_si);;
	};
	return _1aabd828b_evalObjSubIdent(_self_, _29357_d, _293133_si);;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd89c8_evalTupleFunc(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa103740_TupleExpr> _294534_tup, jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aa102b4b_Expr>*> _294556_part) {
	jule::Ptr<_1aac0bcb5_Tuple> _29467_tupT = jule::new_ptr<_1aac0bcb5_Tuple>(_1aac0bcb5_Tuple{._field_Types=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr)});;
	(*_29467_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(0LL, (*(_294534_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aabecdb6_Type>(nullptr); __jule_collection; });
	jule::Ptr<_1aaa345e3_TupleExpr> _29497_model = jule::new_ptr<_1aaa345e3_TupleExpr>(_1aaa345e3_TupleExpr{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabb8db5_Data>>::alloc(0LL, (*_294534_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aabb8db5_Data>(nullptr); __jule_collection; })});;
	jule::Bool _29537_ok = true;;
	{
		auto expr = &((*_294534_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde5653a:;
		if (it != expr_end) {
			jule::Ptr<_1aa102b4b_Expr> _295415_expr = *it;
			{
				jule::Ptr<_1aabb8db5_Data> _29558_d = _294556_part(&(_295415_expr));;
				if ((_29558_d == nullptr)) {
					_29537_ok=false;
					goto _iter_next_1bde5653a;
				};
				(*_29467_tupT.alloc)._field_Types=jule::append((*_29467_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_29558_d))._field_Type; __jule_collection; }));
				(*(_29497_model))._field_Datas=jule::append((*_29497_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabb8db5_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _29558_d; __jule_collection; }));
			}
			_iter_next_1bde5653a:;
			++it;
			goto _iter_begin_1bde5653a;
		}
		_iter_end_1bde5653a:;
	};
	if ((!(_29537_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29467_tupT, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29497_model, &__jule_any_type83), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd8d19_evalTuple(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa103740_TupleExpr> _297430_tup) {
	return _1aabd89c8_evalTupleFunc(_self_, _297430_tup, jule::__new_closure<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aa102b4b_Expr>*>((void*)__jule_anon_1bde59791, jule::Ptr<__jule_anon_1bde59791_ctx>::make(__jule_anon_1bde59791_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bde59791_ctx_handler));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd9215_evalMap(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aac0c865_Map> _298028_m, jule::Ptr<_1aa10814b_BraceLit> _298041_lit) {
	jule::Ptr<_1aaa325be_MapExpr> _29817_model = jule::new_ptr<_1aaa325be_MapExpr>(_1aaa325be_MapExpr{._field_Kind=_298028_m, ._field_Entries=jule::Slice<jule::Ptr<_1aaa321e5_KeyValPairExpr>>(nullptr)});;
	{
		auto expr = &((*(_298041_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bde5b001:;
		if (it != expr_end) {
			jule::Ptr<_1aa102b4b_Expr> _298515_expr = *it;
			{
				{
					auto &_match_expr{ (*(_298515_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1bde5b694:;
						{
							goto _match_end_1bde5b980;
						}
					}
					else {
						_case_begin_1bde5b9e6:;
						{
							_1aabbb35c_pushErr(_self_.ptr(), (*(_298041_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1bde5b980:;
				};
				jule::Ptr<_1aa108976_KeyValPair> _29958_pair = (*(_298515_expr))._field_Kind.cast_ptr<_1aa108976_KeyValPair>(&__jule_any_type82);;
				jule::Ptr<_1aabb8db5_Data> _29978_key = _1aabdad3d_evalExpr(_self_, (*(_29958_pair))._field_Key);;
				if ((_29978_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1aabb8db5_Data> _30028_val = _1aabdad3d_evalExpr(_self_, (*_29958_pair.alloc)._field_Val);;
				if ((_30028_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1aab5c2a9_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_298028_m))._field_Key), &(_29978_key), &((*((*_29958_pair.alloc)._field_Key))._field_Token))) {
					_1aab57a24_checkAssignType((*(_self_))._field_s, false, &((*_298028_m.alloc)._field_Key), &(_29978_key), (*(*(_29958_pair))._field_Key.alloc)._field_Token, _1aabbe393_getOwnerRefers(_self_));
				};
				if (_1aab5c2a9_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_298028_m))._field_Val), &(_30028_val), &((*((*_29958_pair.alloc)._field_Val))._field_Token))) {
					_1aab57a24_checkAssignType((*(_self_))._field_s, false, &((*_298028_m.alloc)._field_Val), &(_30028_val), (*(*(_29958_pair))._field_Val.alloc)._field_Token, _1aabbe393_getOwnerRefers(_self_));
				};
				(*(_29817_model))._field_Entries=jule::append((*_29817_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa321e5_KeyValPairExpr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aaa321e5_KeyValPairExpr>(_1aaa321e5_KeyValPairExpr{._field_Key=(*(_29978_key))._field_Model, ._field_Val=(*(_30028_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1bde5b001:;
			++it;
			goto _iter_begin_1bde5b001;
		}
		_iter_end_1bde5b001:;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_298028_m, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_29817_model, &__jule_any_type100), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd9556_evalBraceLit(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa10814b_BraceLit> _302833_lit) {
	jule::Ptr<_1aabb8db5_Data> __jule_func_result;
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1bde674a2:;
			{
				_1aabbb35c_pushErr(_self_, (*(_302833_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				__jule_func_result = nullptr;
				return __jule_func_result;;
			}
		}
		else if ((_1aac02d00_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1bde6a5e8:;
			{
				__jule_func_result=_1aabd9215_evalMap(_self_, _1aac02d00_Map((*(_self_))._field_prefix), _302833_lit);
			}
		}
		else if ((_1aac0254c_Struct((*(_self_))._field_prefix) != nullptr)) {
			_case_begin_1bde6a65e:;
			{
				__jule_func_result=_1aabce947_evalStructLitExplicit(_self_, _1aac0254c_Struct((*(_self_))._field_prefix), (*(_302833_lit))._field_Exprs, (*_302833_lit.alloc)._field_Token);
			}
		}
		else {
			_case_begin_1bde6a582:;
			{
				_1aabbb35c_pushErr(_self_, (*_302833_lit.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				__jule_func_result = nullptr;
				return __jule_func_result;;
			}
		}
		_match_end_1bde6a83a:;
	};
	if ((__jule_func_result != nullptr)) {
		jule::Ptr<_1aa969605_StructIns> _30428_strct = _1aac027d3_softStruct((*(_self_))._field_prefix.ptr());;
		if (((_30428_strct != nullptr) && ((*_30428_strct.alloc)._field_Source != nullptr))) {
			(*__jule_func_result.alloc)._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_30428_strct, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)});
			{
				auto &_match_expr{ (*(__jule_func_result))._field_Model };
				
				if (_match_expr.type == &__jule_any_type96) {
					_case_begin_1bde6dad5:;
					{
						(*((*(__jule_func_result))._field_Model.unsafe_cast_ptr<_1aaa2ed80_StructLitExpr>()))._field_Strct=_30428_strct;
					}
				}
				_match_end_1bde6da5d:;
			};
		};
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd9897_evalAnonFunc(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa959617_FnDecl> _305433_decl) {
	_1aac10ea6_typeChecker _30557_tc = _1aac10ea6_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1aac0eeb6_referencer>(nullptr), ._field_refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1aabec1a1_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1aaa3e2ce_FnIns> _30607_ins = _1aac180bd_buildFunc(&_30557_tc, _305433_decl);;
	if ((_30607_ins == nullptr)) {
		return nullptr;;
	};
	(*(_30607_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1aab70795_Var>> _30657_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aab70795_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)) {
			_case_begin_1bde710e3:;
			{
				jule::Ptr<_1aab05032_scopeChecker> _30688_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1aab05032_scopeChecker>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1);;
				jule::Ptr<_1aab05032_scopeChecker> _30698_scc = _1aab17385_newChildChecker(_30688_sc);;
				(*(_30698_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1aab03b68_scopeLabel>>>(nullptr);
				(*_30698_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1aab0099a_GotoSt>>>(nullptr);
				(*_30698_scc.alloc)._field_owner=_30607_ins;
				(*_30698_scc.alloc)._field_childIndex=0LL;
				(*_30698_scc.alloc)._field_it=0LLU;
				(*_30698_scc.alloc)._field_cse=0LLU;
				(*_30698_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1aab70795_Var>>>)((&(_30657_captured))));
				_1aab69b02_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_30607_ins), &(_30698_scc));
			}
		}
		else {
			_case_begin_1bde72017:;
			{
				_1aab6a21d_checkFnIns((*_self_.alloc)._field_s, &(_30607_ins));
			}
		}
		_match_end_1bde71ea1:;
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_30607_ins, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1aaa31d1b_AnonFnExpr>(_1aaa31d1b_AnonFnExpr{._field_Captured=_30657_captured, ._field_Func=_30607_ins, ._field_Global=_1aabbc0d8_isGlobal(_self_)}), &__jule_any_type101), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabd9bd8_evalBinary(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa106215_BinaryExpr> _309231_op) {
	_1aabdd25d_binaryEval _30937_bs = static__1aabdd846_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1aac06bc2_Prim> _30964_prim = _1aac00ec9_Prim((*(_self_))._field_prefix);;
		if (((_30964_prim == nullptr) || (!(_1aaabebcd_IsNum(_1aac07046_Str(_30964_prim.ptr())))))) {
			jule::Ptr<_1aabecdb6_Type> _30989_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_30989_prefix;
			});;
			return _1aabe4242_eval(&_30937_bs, &(_309231_op));;
		};
	};
	return _1aabe4242_eval(&_30937_bs, &(_309231_op));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabda029_evalExprKind(jule::Ptr<_1aabbad84_eval> _self_, jule::Any _310733_kind) {
	{
		auto &_match_expr{ _310733_kind };
		
		if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1bde7bdce:;
			{
				jule::Ptr<_1aa102e15_RangeExpr> _31108_e = _310733_kind.unsafe_cast_ptr<_1aa102e15_RangeExpr>();;
				return _1aabda029_evalExprKind(_self_, (*((*(_31108_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1bde7b96c:;
			{
				return _1aabbd8c0_evalLit(_self_.ptr(), _310733_kind.unsafe_cast_ptr<_1aa103ad6_LitExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bde7be45:;
			{
				return _1aabc394c_evalIdent(_self_, _310733_kind.unsafe_cast_ptr<_1aa104466_IdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1bde7beab:;
			{
				return _1aabc3c8d_evalUnary(_self_, _310733_kind.unsafe_cast_ptr<_1aa104c08_UnaryExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1bde7c0bb:;
			{
				return _1aabc40ce_evalVariadic(_self_, _310733_kind.unsafe_cast_ptr<_1aa1050d2_VariadicExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1bde7c132:;
			{
				return _1aabc4420_evalUnsafe(_self_, _310733_kind.unsafe_cast_ptr<_1aa103eb0_UnsafeExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1bde7c198:;
			{
				return _1aabc5058_evalSliceExpr(_self_, _310733_kind.unsafe_cast_ptr<_1aa1091a2_SliceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1bde7c20e:;
			{
				return _1aabc8ba5_evalIndexing(_self_, _310733_kind.unsafe_cast_ptr<_1aa109b0e_IndexingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1bde7d4eb:;
			{
				return _1aabc9ed6_evalSlicing(_self_, _310733_kind.unsafe_cast_ptr<_1aa10a26e_SlicingExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1bde7d562:;
			{
				return _1aabce150_evalCast(_self_, _310733_kind.unsafe_cast_ptr<_1aa1054ab_CastExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1bde7d5c8:;
			{
				return _1aabce491_evalNamespace(_self_, _310733_kind.unsafe_cast_ptr<_1aa105885_NamespaceExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1bde7d650:;
			{
				return _1aabcec88_evalStructLit(_self_, _310733_kind.unsafe_cast_ptr<_1aa107b95_StructLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1bde7d6c7:;
			{
				return _1aabd0360_evalType(_self_, _310733_kind.unsafe_cast_ptr<_1aa0ed817_TypeDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1bde7d74e:;
			{
				return _1aabd196b_evalFnCall(_self_, _310733_kind.unsafe_cast_ptr<_1aa106875_FnCallExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bde7d7c6:;
			{
				return _1aabd85cc_evalSubIdent(_self_, _310733_kind.unsafe_cast_ptr<_1aa105c5e_SubIdentExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1bde7d84d:;
			{
				return _1aabd8d19_evalTuple(_self_, _310733_kind.unsafe_cast_ptr<_1aa103740_TupleExpr>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1bde7d8c5:;
			{
				return _1aabd9556_evalBraceLit(_self_, _310733_kind.unsafe_cast_ptr<_1aa10814b_BraceLit>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1bde7d94c:;
			{
				return _1aabd9897_evalAnonFunc(_self_, _310733_kind.unsafe_cast_ptr<_1aa959617_FnDecl>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1bde7d9c4:;
			{
				return _1aabd9bd8_evalBinary(_self_, _310733_kind.unsafe_cast_ptr<_1aa106215_BinaryExpr>());;
			}
		}
		else {
			_case_begin_1bde7bb04:;
			{
				return nullptr;;
			}
		}
		_match_end_1bde7ba8d:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabda36a_eval1(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa102b4b_Expr> _315526_expr) {
	jule::Ptr<_1aabb8db5_Data> _31567_d = _1aabda029_evalExprKind(_self_, (*(_315526_expr))._field_Kind);;
	if (((_31567_d == nullptr) || ((*(_31567_d))._field_Type == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1aac022b6_Fn((*(_31567_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdea3752:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _31648_f = _1aac022b6_Fn((*(_31567_d))._field_Type);;
				if (_1aaa40797_IsBuiltin(_31648_f.ptr())) {
					_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_315526_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1bdea1b7e;
				};
				jule::I32 _31694_required = (*((*(_31648_f))._field_Decl))._field_Generics.len();;
				jule::I32 _31704_given = (*_31648_f.alloc)._field_Generics.len();;
				if ((!(_1aab51a62_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _31694_required, _31704_given, (*_315526_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_31648_f))._field_Decl.alloc)._field_Statically)) && _1aaa3b95d_IsMethod((*(_31648_f))._field_Decl))) {
					_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_315526_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1aabe463d_findDirective(&((*(*(_31648_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*_315526_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_31648_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				} else {
					(*_31648_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_31567_d))._field_Decl) {
			_case_begin_1bdea37c9:;
			{
				jule::Ptr<_1aa969605_StructIns> _31838_s = _1aac0254c_Struct((*_31567_d.alloc)._field_Type.ptr());;
				if ((_31838_s == nullptr)) {
					goto _match_end_1bdea1b7e;
				};
				jule::I32 _31874_required = (*((*(_31838_s))._field_Decl))._field_Generics.len();;
				jule::I32 _31884_given = (*_31838_s.alloc)._field_Generics.len();;
				if ((!(_1aab51a62_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _31874_required, _31884_given, (*_315526_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1bdea1b7e:;
	};
	return _31567_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabda6ab_eval(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa102b4b_Expr> _320025_expr) {
	jule::Ptr<_1aabb8db5_Data> _32017_d = _1aabda36a_eval1(_self_, _320025_expr);;
	if ((_32017_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1aac0331c_comptime((*(_32017_d))._field_Type.ptr()))) {
		_1aab50533_pushErr((*_self_.alloc)._field_s.ptr(), (*(_320025_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _32017_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabda9ec_evalExpr1(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa102b4b_Expr> _321530_expr) {
	jule::Ptr<_1aabb8db5_Data> _32167_d = _1aabda36a_eval1(_self_, _321530_expr);;
	{
		
		if ((_32167_d == nullptr)) {
			_case_begin_1bdeb295e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_32167_d))._field_Decl) {
			_case_begin_1bdeb2a08:;
			{
				_1aabbb35c_pushErr(_self_, (*(_321530_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1bdeb28d7:;
			{
				return _32167_d;;
			}
		}
		_match_end_1bdeb2871:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabdad3d_evalExpr(jule::Ptr<_1aabbad84_eval> _self_, jule::Ptr<_1aa102b4b_Expr> _323129_expr) {
	jule::Ptr<_1aabb8db5_Data> _32327_d = _1aabda6ab_eval(_self_, _323129_expr);;
	{
		
		if ((_32327_d == nullptr)) {
			_case_begin_1bdeb4961:;
			{
				return nullptr;;
			}
		}
		else if ((*(_32327_d))._field_Decl) {
			_case_begin_1bdeb4a0a:;
			{
				_1aabbb35c_pushErr(_self_, (*(_323129_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1bdeb48d9:;
			{
				return _32327_d;;
			}
		}
		_match_end_1bdeb4873:;
	};
}








inline jule::Bool _1aabdb2c2_unaryEval_eq(_1aabdb2c2_unaryEval *_self_, _1aabdb2c2_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1aabdb2c2_unaryEval static__1aabdb745_new(jule::Ptr<_1aabbad84_eval> _325220_e) {
	return _1aabdb2c2_unaryEval{._field_e=_325220_e, ._field_d=jule::Ptr<_1aabb8db5_Data>(nullptr), ._field_u=jule::Ptr<_1aa104c08_UnaryExpr>(nullptr)};;
}



inline void _1aabdb943_minus(_1aabdb2c2_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1bdeb67a9:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1aac00ec9_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdeb6b94:;
			{
				if ((!(_1aaabebcd_IsNum(_1aac07046_Str(_1aac00ec9_Prim((*((*(_self_))._field_d))._field_Type).ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bdeb63e1:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bdeb62d1:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1aabb9800_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1aaa27284_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bdeb9b20:;
				{
					_1aaa262b6_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1aaa24b88_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aaa2674a_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bdeb97bd:;
				{
					_1aaa256e4_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1aaa2414e_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aaa269d1_IsU64((*((*(_self_))._field_d))._field_Constant)) {
				_case_begin_1bdeb9834:;
				{
					_1aaa256e4_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1aaa24e1e_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1bdeb9757:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.minus, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3285:5"));;
				}
			}
			_match_end_1bdeb967a:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aaa2e4ab_UnaryExpr>(_1aaa2e4ab_UnaryExpr{._field_Expr=jule::new_ptr<_1aabb8db5_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1aabdbb41_plus(_1aabdb2c2_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1bdec00a9:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1aac00ec9_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdec0142:;
			{
				if ((!(_1aaabebcd_IsNum(_1aac07046_Str(_1aac00ec9_Prim((*((*(_self_))._field_d))._field_Type).ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bdebebe1:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bdebead1:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1aabb9800_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1aaa27284_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bdec3420:;
				{
					_1aaa262b6_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1aaa24b88_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aaa2674a_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bdec30bd:;
				{
					_1aaa256e4_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1aaa2414e_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1aaa269d1_IsU64((*((*(_self_))._field_d))._field_Constant)) {
				_case_begin_1bdec3134:;
				{
					_1aaa256e4_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1aaa24e1e_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1bdec3057:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.plus, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3325:5"));;
				}
			}
			_match_end_1bdec2e7a:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aaa2e4ab_UnaryExpr>(_1aaa2e4ab_UnaryExpr{._field_Expr=jule::new_ptr<_1aabb8db5_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1aabdbd3e_caret(_1aabdb2c2_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1bdec88a9:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1aac00ec9_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdec8942:;
			{
				if ((!(_1aaabe606_IsInt(_1aac07046_Str(_1aac00ec9_Prim((*((*(_self_))._field_d))._field_Type).ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1bdec84e1:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bdec83d1:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1aabb9800_IsConst((*(_self_))._field_d)) {
		jule::I32 _33614_sz = _1aaab6587_BitSizeOf((*(_1aac00ec9_Prim((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Kind);;
		{
			
			if (_1aaa2674a_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bdecc902:;
				{
					{
						auto &_match_expr{ _33614_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1bdecd903:;
							{
								_1aaa256e4_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I8>(_1aaa2414e_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1bdecd5b2:;
							{
								_1aaa256e4_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I16>(_1aaa2414e_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1bdecd628:;
							{
								_1aaa256e4_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I32>(_1aaa2414e_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1bdecd68e:;
							{
								_1aaa256e4_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1aaa2414e_ReadI64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1bdecd3d6:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3374:6"));;
							}
						}
						_match_end_1bdecd4e6:;
					};
				}
			}
			else if (_1aaa269d1_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bdecc5a0:;
				{
					{
						auto &_match_expr{ _33614_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1bded3919:;
							{
								_1aaa2599c_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U8>(_1aaa243d5_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1bded35d9:;
							{
								_1aaa2599c_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U16>(_1aaa243d5_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1bded3650:;
							{
								_1aaa2599c_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U32>(_1aaa243d5_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1bded36b6:;
							{
								_1aaa2599c_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1aaa243d5_ReadU64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1bded341e:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3387:6"));;
							}
						}
						_match_end_1bded3496:;
					};
				}
			}
			else {
				_case_begin_1bdecc539:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.caret, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3390:5"));;
				}
			}
			_match_end_1bdecc4c3:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aaa2e4ab_UnaryExpr>(_1aaa2e4ab_UnaryExpr{._field_Expr=jule::new_ptr<_1aabb8db5_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1aabdc03c_excl(_1aabdb2c2_unaryEval* _self_) {
	jule::Ptr<_1aac06bc2_Prim> _34043_t = _1aac00ec9_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
	if (((_34043_t == nullptr) || (!(_1aac09e06_IsBool(_34043_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1aabb9800_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1aaa26c67_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1bdedb290:;
				{
					_1aaa25c55_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1aaa2466b_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1bdedadc7:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.excl, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3418:5"));;
				}
			}
			_match_end_1bdedacea:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aaa2e4ab_UnaryExpr>(_1aaa2e4ab_UnaryExpr{._field_Expr=jule::new_ptr<_1aabb8db5_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
}



inline void _1aabdc23a_star(_1aabdb2c2_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1aaa2e4ab_UnaryExpr>(_1aaa2e4ab_UnaryExpr{._field_Expr=jule::new_ptr<_1aabb8db5_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
	{
		
		if ((_1aac014e6_Ptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdede99c:;
			{
				if ((!(_1aabbbd52_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1aabbb35c_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1aac0deb5_Ptr> _34438_t = _1aac014e6_Ptr((*((*(_self_))._field_d))._field_Type);;
				if (_1aac0ea32_IsUnsafe(_34438_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Type=(*(_34438_t))._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1aac01260_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1bdedea24:;
			{
				(*(*(_self_))._field_d.alloc)._field_Type=(*(_1aac01260_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_1bdede5e5:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bdedd68d:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1aabdc438_amper(_1aabdb2c2_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bdee6421:;
			{
				jule::Ptr<_1aaa2ed80_StructLitExpr> _34658_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1aaa2ed80_StructLitExpr>();;
				_1aabe5067_makeStructLitAlloc(&((*(_self_))._field_d), &(_34658_lit));
			}
		}
		else {
			_case_begin_1bdee5640:;
			{
				{
					
					if (_1aac2024b_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1bdee6036:;
						{
							(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aac0deb5_Ptr>(_1aac0deb5_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Type}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1aaa2e4ab_UnaryExpr>(_1aaa2e4ab_UnaryExpr{._field_Expr=jule::new_ptr<_1aabb8db5_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type112);
						}
					}
					else {
						_case_begin_1bdee5255:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1bdee5ad5:;
				};
			}
		}
		_match_end_1bdee55c9:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1aabdc636_typeDecl(_1aabdb2c2_unaryEval* _self_) {
	_1aac10ea6_typeChecker _34907_tc = _1aac10ea6_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1aac0eeb6_referencer>(nullptr), ._field_refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1aabec1a1_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bdeeba20:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac167d6_buildPtrFromType(&_34907_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type85);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1bdeeb6ce:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac16154_buildSptrFromType(&_34907_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type85);
			}
		}
		else {
			_case_begin_1bdeeb14b:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(*(_self_))._field_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1bdeeb657:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1aabdc834_evalData(_1aabdb2c2_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1be0021da:;
			{
				jule::Ptr<_1aabecdb6_Type> _35158_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1aabda6ab_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_35158_prefix;
			}
		}
		else {
			_case_begin_1bdeeb745:;
			{
				(*(_self_))._field_d=_1aabda6ab_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1be001d00:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabdcb75_eval(_1aabdb2c2_unaryEval* _self_, jule::Ptr<_1aa104c08_UnaryExpr> _352424_u) {
	(*(_self_))._field_u=_352424_u;
	_1aabdc834_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1aabdc636_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1aabecdb6_Type> _35353_kind = (*((*(_self_))._field_d))._field_Type;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1ab41ec58:;
			{
				_1aabdb943_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1ab41ecbe:;
			{
				_1aabdbb41_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ab41ed35:;
			{
				_1aabdbd3e_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1ab41ed9b:;
			{
				_1aabdc03c_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ab4204c8:;
			{
				_1aabdc23a_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ab42053e:;
			{
				_1aabdc438_amper(_self_);
			}
		}
		else {
			_case_begin_1be0062ee:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1be0067b6:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1ab4205a5:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str(_35353_kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1aabb9800_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1ab422541:;
			{
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Constant, &__jule_any_type15);
			}
		}
		_match_end_1ab422068:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1aabdd25d_binaryEval_eq(_1aabdd25d_binaryEval *_self_, _1aabdd25d_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1aabdd25d_binaryEval static__1aabdd846_newPlain(jule::Ptr<_1aabbad84_eval> _357225_e) {
	return _1aabdd25d_binaryEval{._field_e=_357225_e, ._field_l=jule::Ptr<_1aabb8db5_Data>(nullptr), ._field_r=jule::Ptr<_1aabb8db5_Data>(nullptr), ._field_op=jule::Ptr<_1aa0d7ceb_Token>(nullptr)};;
}



inline _1aabdd25d_binaryEval static__1aabddbba_new(jule::Ptr<_1aabbad84_eval> _357820_e, jule::Ptr<_1aa0d7ceb_Token> _357834_op) {
	return _1aabdd25d_binaryEval{._field_e=_357820_e, ._field_l=jule::Ptr<_1aabb8db5_Data>(nullptr), ._field_r=jule::Ptr<_1aabb8db5_Data>(nullptr), ._field_op=_357834_op};;
}



inline jule::Bool _1aabdde51_checkTypeCompatibility(_1aabdd25d_binaryEval* _self_) {
	return _1aab58d55_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1aabde1d7_checkTypeCompatibility1(_1aabdd25d_binaryEval* _self_) {
	if ((_1aabb9800_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		std::swap((*(_self_))._field_l, (*(_self_))._field_r);
	};
	;
	return _1aab57a24_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), (*(_self_))._field_op, nullptr);;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabde46d_evalComptimeTypeInfo(_1aabdd25d_binaryEval* _self_) {
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _36027_r = _1aac04b26_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_36027_r == nullptr)) {
		_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aaad1052_comptimeTypeInfo> _36077_l = _1aac04b26_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1ab42d690:;
			{
				jule::Ptr<_1aa9b96cc_Const> _36108_constant = static__1aaa2324c_NewBool(_1aabed603_Equal((*(_36077_l))._field_base, (*(_36027_r))._field_base));;
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_36108_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_36108_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ab42c4c4:;
			{
				jule::Ptr<_1aa9b96cc_Const> _36178_constant = static__1aaa2324c_NewBool((!(_1aabed603_Equal((*(_36077_l))._field_base, (*(_36027_r))._field_base))));;
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_36178_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_36178_constant});;
			}
		}
		else {
			_case_begin_1ab42bd42:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab42c0d9:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabde704_evalNil(_1aabdd25d_binaryEval* _self_) {
	if ((!(_1aac00726_NilCompatible((*((*(_self_))._field_r))._field_Type.ptr())))) {
		_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ab433552:;
			{
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ab42dccd:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab433178:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabde98a_evalEnum(_1aabdd25d_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ab435037:;
			{
				jule::Ptr<_1aabecdb6_Type> _36518_rkind = (*((*(_self_))._field_r))._field_Type;;
				if ((_1aac0177c_Enum((*(*(_self_))._field_r.alloc)._field_Type.ptr()) != nullptr)) {
					_36518_rkind=(*((*(_1aac0177c_Enum((*((*(_self_))._field_r))._field_Type)))._field_TypeSym))._field_Type;
				};
				jule::Ptr<_1aaa490db_Enum> _36558_enm = _1aac0177c_Enum((*((*(_self_))._field_l))._field_Type.ptr());;
				if ((!(_1aab58481_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_36558_enm))._field_TypeSym))._field_Type), &(_36518_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		_match_end_1ab4348e9:;
	};
	if ((!(_1aabdde51_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ab43a856:;
			{
				if ((!(_1aaabebcd_IsNum(_1aac07046_Str(_1aac00ec9_Prim((*((*(_1aac0177c_Enum((*((*(_self_))._field_l))._field_Type.ptr())))._field_TypeSym))._field_Type.ptr()).ptr()))))) {
					_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ab43aaa9:;
			{
				jule::Ptr<_1aaa48580_EnumItem> _36814_first = (*(_1aac0177c_Enum((*((*(_self_))._field_l))._field_Type.ptr())))._field_Items[0LL];;
				{
					
					if (_1aaa2674a_IsI64((*((*((*(_36814_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ab440691:;
						{
							if ((_1aaa2414e_ReadI64((*((*((*(_36814_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1ab442990;
							};
							goto _julec_label_1ab443a3a;
						}
					}
					else if (_1aaa269d1_IsU64((*((*((*(_36814_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1ab44033e:;
						{
							if ((_1aaa243d5_ReadU64((*((*((*(_36814_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1ab442990;
							};
							goto _julec_label_1ab443a3a;
						}
					}
					else {
						_case_begin_1ab4402c8:;
						{
							__jule_panic_s(jule::Str::lit("sema: unimplemented enum type, this panic call should be unreachable", 68) + jule::Str("\nlocation: std/jule/sema/eval.jule:3694:5"));;
						}
					}
					_match_end_1ab440251:;
				};
				_julec_label_1ab443a3a:;
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1aabbb6c0_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1ab442990:;
				goto _case_begin_1ab43ab20;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ab43ab20:;
			{
				jule::Ptr<_1aaa490db_Enum> _37038_enm = _1aac0177c_Enum((*((*(_self_))._field_l))._field_Type);;
				if (((_1aac00ec9_Prim((*((*(_37038_enm))._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_1aaabe606_IsInt(_1aac07046_Str(_1aac00ec9_Prim((*((*(_37038_enm))._field_TypeSym))._field_Type.ptr()).ptr())))))) {
					_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ab437d3c:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab439228:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabdec21_evalTypeEnum(_1aabdd25d_binaryEval* _self_) {
	if ((!(_1aabdde51_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ab44a569:;
			{
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ab448c0a:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab448ec4:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabdeea7_evalSptr(_1aabdd25d_binaryEval* _self_) {
	if ((!(_1aabdde51_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ab44ccb9:;
			{
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ab44aa0e:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab44b724:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe023d_evalPtr(_1aabdd25d_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1ab4500a7:;
			{
				if ((!(_1aabdde51_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1ab44ddca:;
			{
				if ((_1aac014e6_Ptr((*((*(_self_))._field_l))._field_Type.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1aac0ea32_IsUnsafe(_1aac014e6_Ptr((*((*(_self_))._field_l))._field_Type.ptr()).ptr())) {
					_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
				if ((!(_1aabe6200_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_r))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ab44d01c:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab44d43a:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe04c4_evalArr(_1aabdd25d_binaryEval* _self_) {
	if ((!(_1aabdde51_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ab458104:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1aaa3e2ce_FnIns> _37919_f = _1aaa3c72d_instanceForce(_1aa5ce776_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37919_f))._field_Generics=jule::append((*_37919_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aabeb4d0_InsGeneric>(_1aabeb4d0_InsGeneric{._field_Type=(*(_1aac01c99_Arr((*((*(_self_))._field_l))._field_Type.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr)}); __jule_collection; }));
					jule::Bool _37935_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aab6811c_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37919_f), &((*(_self_))._field_op));
						_37935_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37935_ok))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/eval.jule:3795:6"));;
					};
					_1bdbd27c2_pushReference((*(_self_))._field_e, &(_37919_f));
				};
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ab4566da:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab456a5e:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe075a_evalStruct(_1aabdd25d_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ab45e3a2:;
			{
				if ((!(_1aabdde51_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ab458357:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab4586ed:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe09e1_evalTrait(_1aabdd25d_binaryEval* _self_) {
	if ((!(_1aabdde51_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ab462064:;
			{
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ab45e847:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab4609be:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe0c77_evalAny(_1aabdd25d_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ab464352:;
			{
				_1aac210e8_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op), _1aabbe393_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ab4622b7:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab4626d5:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe100d_evalBool(_1aabdd25d_binaryEval* _self_) {
	if ((!(_1aabde1d7_checkTypeCompatibility1(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1ab46782d:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ab4647e7:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab466288:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe1294_evalStr(_1aabdd25d_binaryEval* _self_) {
	if ((!(_1aabde1d7_checkTypeCompatibility1(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1ab46a3ad:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ab4691d1:;
			{
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ab46818b:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab468d18:;
	};
}



inline void _1aabe1492_setTypeToGreater(_1aabdd25d_binaryEval* _self_) {
	jule::Ptr<_1aac06bc2_Prim> _38963_lp = _1aac00ec9_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	jule::Ptr<_1aac06bc2_Prim> _38973_rp = _1aac00ec9_Prim((*((*(_self_))._field_r))._field_Type);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Type=(*(*(_self_))._field_r.alloc)._field_Type;
		if (_1aabb9800_IsConst((*(_self_))._field_l)) {
			(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38973_rp))._field_Kind;
		};
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		if (_1aabb9800_IsConst((*(_self_))._field_r)) {
			(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38963_lp))._field_Kind;
		};
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		if (_1aabb9800_IsConst((*(_self_))._field_r)) {
			(*(*((*(_self_))._field_r))._field_Constant.alloc)._field_Kind=(*_38963_lp.alloc)._field_Kind;
		};
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1aabe174a_checkModData(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aabb8db5_Data>* _391933_d) {
	if ((!(_1aabb9800_IsConst((*(_391933_d)).ptr())))) {
		if (((_1aac00ec9_Prim((*((*(_391933_d))))._field_Type.ptr()) == nullptr) || (!(_1aaabe606_IsInt((*(_1aac00ec9_Prim((*((*(_391933_d))))._field_Type.ptr())))._field_Kind))))) {
			_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1aaba41e1_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _391933_d)) {
			_case_begin_1ab476e03:;
			{
				_1aaa256e4_SetI64((*((*(_391933_d))))._field_Constant.ptr(), _1aaa24e1e_AsI64((*((*(_391933_d))))._field_Constant));
			}
		}
		else if (_1aaba45a9_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _391933_d)) {
			_case_begin_1ab4769b3:;
			{
				_1aaa2599c_SetU64((*((*(_391933_d))))._field_Constant.ptr(), _1aaa251a5_AsU64((*((*(_391933_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1ab47662d:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab4748b2:;
	};
}



inline void _1aabe1948_mod(_1aabdd25d_binaryEval* _self_) {
	_1aabe174a_checkModData(_self_, &((*(_self_))._field_l));
	_1aabe174a_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1aabe1bce_numbersAreCompatibile(_1aabdd25d_binaryEval* _self_) {
	jule::Str _39423_lk = (*(_1aac00ec9_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _39433_rk = (*(_1aac00ec9_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_1aaabebcd_IsNum(_39433_rk)))) {
		_1aab5889e_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return false;;
	};
	if ((_1aabb9800_IsConst((*(_self_))._field_l) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if ((_39423_lk == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1aabb9800_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			if ((!(_1aaba3d6c_floatAssignable(&(_39423_lk), &((*(_self_))._field_r))))) {
				_1aab5889e_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
				return false;;
			};
			return true;;
		};
		if ((_39433_rk != static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
			_1aab5889e_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
			return false;;
		};
		return true;;
	};
	if ((_39423_lk == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1aabb9800_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			if ((!(_1aaba3d6c_floatAssignable(&(_39423_lk), &((*(_self_))._field_r))))) {
				_1aab5889e_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
				return false;;
			};
			return true;;
		};
		if ((_39433_rk != static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
			_1aab5889e_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
			return false;;
		};
		return true;;
	};
	if ((_1aabb9800_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		if ((!(_1aaba492d_intAssignable(_39423_lk, &((*(_self_))._field_r))))) {
			_1aab5889e_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
			return false;;
		};
		return true;;
	};
	return _1aabdde51_checkTypeCompatibility(_self_);;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe1e65_shift(_1aabdd25d_binaryEval* _self_) {
	jule::Ptr<_1aac06bc2_Prim> _39923_lk = _1aac00ec9_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((_39923_lk == nullptr)) {
		_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aac06bc2_Prim> _39973_rk = _1aac00ec9_Prim((*((*(_self_))._field_r))._field_Type);;
	if ((_39973_rk == nullptr)) {
		_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1aaabebcd_IsNum((*(_39923_lk))._field_Kind))) || (!(_1aaabebcd_IsNum((*(_39973_rk))._field_Kind))))) {
		_1aab5889e_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1aaabe606_IsInt((*(_39923_lk))._field_Kind)))) {
		if (((!(_1aabb9800_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1aaba492d_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1aaa256e4_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1aaa24e1e_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1aac78628_primI64;
		} else if (_1aaba492d_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1aaa2599c_SetU64((*((*(_self_))._field_l))._field_Constant, _1aaa251a5_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1aac7942b_primU64;
		};
	};
	if ((!(_1aaabe606_IsInt((*(_39973_rk))._field_Kind)))) {
		if (((!(_1aabb9800_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(*(_self_))._field_l.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1aaba492d_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1aaa256e4_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1aaa24e1e_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1aac78628_primI64;
		} else if (_1aaba492d_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1aaa2599c_SetU64((*((*(_self_))._field_r))._field_Constant, _1aaa251a5_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1aac7942b_primU64;
		};
	};
	if ((!(_1aabe5a29_isOkForShifting(&((*(_self_))._field_r))))) {
		_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe21eb_evalFloat(_1aabdd25d_binaryEval* _self_) {
	if ((!(_1aabe1bce_numbersAreCompatibile(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ab498023:;
			{
				_1aabe1492_setTypeToGreater(_self_);
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		_match_end_1ab497eac:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1ab4990ce:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4069:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ab498e8b:;
			{
				_1aabe1492_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1ab499002:;
			{
				_1aabe1492_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1ab49a7a6:;
			{
				if ((!(_1aaabe606_IsInt((*(_1aac00ec9_Prim((*((*(_self_))._field_r))._field_Type.ptr())))._field_Kind)))) {
					_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1aabe1948_mod(_self_);
				_1aabe1492_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1ab498111:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab498d6a:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe2482_evalInt(_1aabdd25d_binaryEval* _self_) {
	if ((!(_1aabe1bce_numbersAreCompatibile(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ab4a0635:;
			{
				return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac771a4_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
			}
		}
		_match_end_1ab4a05be:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1ab4a2bcb:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4114:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ab4a2c42:;
			{
				_1aabe1492_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1ab4a2ca8:;
			{
				_1aabe1492_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1ab4a1548:;
			{
				_1aabe1948_mod(_self_);
				_1aabe1492_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1ab4a0723:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab4a1427:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe2718_evalPrim(_1aabdd25d_binaryEval* _self_) {
	jule::Ptr<_1aac06bc2_Prim> _41373_prim = _1aac00ec9_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		
		if (_1aac09e06_IsBool(_41373_prim.ptr())) {
			_case_begin_1ab4a5dcc:;
			{
				return _1aabe100d_evalBool(_self_);;
			}
		}
		else if (_1aac0a18c_IsStr(_41373_prim.ptr())) {
			_case_begin_1ab4a5e76:;
			{
				return _1aabe1294_evalStr(_self_);;
			}
		}
		_match_end_1ab4a5d44:;
	};
	if ((_1aac00ec9_Prim((*((*(_self_))._field_r))._field_Type) == nullptr)) {
		_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aac07046_Str(_41373_prim.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1aaabe947_IsFloat((*(_41373_prim))._field_Kind)) {
			_case_begin_1ab4a8cc0:;
			{
				return _1aabe21eb_evalFloat(_self_);;
			}
		}
		else if (_1aaabe606_IsInt((*(_41373_prim))._field_Kind)) {
			_case_begin_1ab4a8d47:;
			{
				return _1aabe2482_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1ab4a8c59:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab4a84d9:;
	};
}



inline jule::Bool _1aabe299e_checkSpecialCases(_1aabdd25d_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _41623_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(50LLU)) || ((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(51LLU)));;
	if ((!(_41623_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1aabeee73_Comparable((*((*(_self_))._field_l))._field_Type.ptr()))) && (!(_1aabee03d_IsNil((*((*(_self_))._field_r))._field_Type))))) {
		_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1aabeee73_Comparable((*((*(_self_))._field_r))._field_Type.ptr()))) && (!(_1aabee03d_IsNil((*((*(_self_))._field_l))._field_Type))))) {
		_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe2c35_evalOp(_1aabdd25d_binaryEval* _self_) {
	jule::Bool _41773_ok = _1aabe299e_checkSpecialCases(_self_);;
	if ((!(_41773_ok))) {
		return nullptr;;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(56LLU)) || ((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(57LLU)))) {
		return _1aabe1e65_shift(_self_);;
	};
	{
		
		if (_1aabee2c4_Void((*((*(_self_))._field_l))._field_Type.ptr())) {
			_case_begin_1ab4b369d:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1aac04b26_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ab4b24b0:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab4b2339;
			}
		}
		else if ((_1aac04b26_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1ab4b2339:;
			{
				return _1aabde46d_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1aac00ec9_Prim((*((*(_self_))._field_r))._field_Type) != nullptr) && _1aac0a423_IsAny(_1aac00ec9_Prim((*((*(_self_))._field_r))._field_Type).ptr()))) {
			_case_begin_1ab4b23a0:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab4b3901;
			}
		}
		else if (_1aabee03d_IsNil((*((*(_self_))._field_r))._field_Type)) {
			_case_begin_1ab4b3901:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab4b3967;
			}
		}
		else if (_1aabee03d_IsNil((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_1ab4b3967:;
			{
				return _1aabde704_evalNil(_self_);;
			}
		}
		else if (((_1aac00ec9_Prim((*((*(_self_))._field_l))._field_Type) != nullptr) && _1aac0a423_IsAny(_1aac00ec9_Prim((*((*(_self_))._field_l))._field_Type).ptr()))) {
			_case_begin_1ab4b39cd:;
			{
				return _1aabe0c77_evalAny(_self_);;
			}
		}
		else if ((_1aac01a13_TypeEnum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1ab4b3a99:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab4b3b10;
			}
		}
		else if ((_1aac01a13_TypeEnum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1ab4b3b10:;
			{
				return _1aabdec21_evalTypeEnum(_self_);;
			}
		}
		else if ((_1aac0177c_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1ab4b3b76:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab4b3bdc;
			}
		}
		else if ((_1aac0177c_Enum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1ab4b3bdc:;
			{
				return _1aabde98a_evalEnum(_self_);;
			}
		}
		else if ((_1aac01260_Sptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1ab4b3c53:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab4b3cca;
			}
		}
		else if ((_1aac01260_Sptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1ab4b3cca:;
			{
				return _1aabdeea7_evalSptr(_self_);;
			}
		}
		else if ((_1aac014e6_Ptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1ab4b3d52:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab4b3dc9;
			}
		}
		else if ((_1aac014e6_Ptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1ab4b3dc9:;
			{
				return _1aabe023d_evalPtr(_self_);;
			}
		}
		else if ((_1aac01c99_Arr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1ab4b3ea6:;
			{
				return _1aabe04c4_evalArr(_self_);;
			}
		}
		else if ((_1aac02a69_Trait((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1ab4b401c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1ab4b4083;
			}
		}
		else if ((_1aac02a69_Trait((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1ab4b4083:;
			{
				return _1aabe09e1_evalTrait(_self_);;
			}
		}
		else if ((_1aac00ec9_Prim((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1ab4b40e9:;
			{
				return _1aabe2718_evalPrim(_self_);;
			}
		}
		else if ((_1aac0254c_Struct((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1ab4b4160:;
			{
				return _1aabe075a_evalStruct(_self_);;
			}
		}
		else {
			_case_begin_1ab4b212a:;
			{
				_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ab4b1701:;
	};
}



inline void _1aabe2edd_evalConst(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aabb8db5_Data>* _424330_d) {
	{
		
		if (((*(_424330_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1ab4c6d21:;
			{
				return;;
			}
		}
		else if ((!(_1aabb9800_IsConst((*(_self_))._field_l.ptr()))) || (!(_1aabb9800_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1ab4c6d98:;
			{
				(*((*(_424330_d))))._field_Constant=nullptr;
				(*((*(_424330_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1ab4c6749:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1ab4c6e75:;
			{
				(*((*(_424330_d))))._field_Constant=static__1aaa2324c_NewBool(_1aaa2832e_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1ab4c93d9:;
			{
				(*((*(_424330_d))))._field_Constant=static__1aaa2324c_NewBool((!(_1aaa2832e_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1ab4c9450:;
			{
				(*((*(_424330_d))))._field_Constant=static__1aaa2324c_NewBool(_1aaa27edd_Or((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1ab4c94b6:;
			{
				(*((*(_424330_d))))._field_Constant=static__1aaa2324c_NewBool(_1aaa27b9c_And((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1ab4c952c:;
			{
				(*((*(_424330_d))))._field_Constant=static__1aaa2324c_NewBool(_1aaa28d02_Gt((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1ab4c9593:;
			{
				(*((*(_424330_d))))._field_Constant=static__1aaa2324c_NewBool(_1aaa28670_Lt((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1ab4c961a:;
			{
				(*((*(_424330_d))))._field_Constant=static__1aaa2324c_NewBool(_1aaa29143_GtEq((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1ab4c9692:;
			{
				(*((*(_424330_d))))._field_Constant=static__1aaa2324c_NewBool(_1aaa289b1_LtEq((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*(*((*(_self_))._field_r))._field_Constant.alloc)));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1ab4c9719:;
			{
				_1aaa29484_Add((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_424330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1ab4c9791:;
			{
				_1aaa297c5_Sub((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_424330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1ab4c9818:;
			{
				_1aaa29b16_Mul((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_424330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1ab4c9890:;
			{
				jule::Bool _42834_ok = _1aaa29e57_Div((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_42834_ok)) && (_1aaa2543b_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_424330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1aac06bc2_Prim> _42888_prim = _1aac00ec9_Prim((*((*(_424330_d))))._field_Type.ptr());;
				{
					
					if (_1aaabe02e_IsSigInt((*(_42888_prim))._field_Kind)) {
						_case_begin_1ab4da906:;
						{
							_1aaa256e4_SetI64((*((*(_424330_d))))._field_Constant, _1aaa24e1e_AsI64((*((*(_424330_d))))._field_Constant));
						}
					}
					else if (_1aaabe33c_IsUnsigInt((*(_42888_prim))._field_Kind)) {
						_case_begin_1ab4da9a0:;
						{
							_1aaa2599c_SetU64((*((*(_424330_d))))._field_Constant, _1aaa251a5_AsU64((*((*(_424330_d))))._field_Constant));
						}
					}
					_match_end_1ab4da87e:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1ab4c9917:;
			{
				jule::Bool _42964_ok = _1aaa2a298_Mod((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));;
				if (((!(_42964_ok)) && (_1aaa2543b_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1aabbb35c_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_424330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1ab4c998e:;
			{
				_1aaa2a92a_BitwiseOr((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_424330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1ab4c9a16:;
			{
				_1aaa2a5d9_BitwiseAnd((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_424330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1ab4c9a8d:;
			{
				_1aaa2ac6b_Xor((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_424330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1ab4c9b15:;
			{
				_1aaa2b0ac_Lshift((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_424330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1ab4c9b8c:;
			{
				_1aaa2b3ed_Rshift((*((*(_self_))._field_l))._field_Constant, (*(*((*(_self_))._field_r))._field_Constant.alloc));
				(*((*(_424330_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1ab4c86a2:;
	};
	(*((*(_424330_d))))._field_Model=jule::Any((*((*(_424330_d))))._field_Constant, &__jule_any_type15);
	_1aabe7e27_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _424330_d, _1aac0177c_Enum((*((*(_424330_d))))._field_Type.ptr()), &((*(_self_))._field_op), _1aabbe393_getOwnerRefers((*(_self_))._field_e));
}



inline void _1aabe3296_checkData(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aabb8db5_Data>* _432130_d) {
	jule::Ptr<_1aaa3e2ce_FnIns> _43223_f = _1aac022b6_Fn((*((*(_432130_d))))._field_Type.ptr());;
	if ((((_43223_f != nullptr) && ((*_43223_f.alloc)._field_Decl != nullptr)) && _1aaa3b95d_IsMethod((*(_43223_f))._field_Decl))) {
		_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1aabe3494_checkDatas(_1aabdd25d_binaryEval* _self_) {
	_1aabe3296_checkData(_self_, &((*(_self_))._field_l));
	_1aabe3296_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1aabe374c_setModel(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aabb8db5_Data>* _433329_d) {
	if (_1aabb9800_IsConst((*(_433329_d)).ptr())) {
		if (((_1aabb9800_IsConst((*(_self_))._field_l.ptr()) && _1aabb9800_IsConst((*(_self_))._field_r.ptr())) || (((*((*(_self_))._field_l))._field_Model == nullptr) && ((*((*(_self_))._field_r))._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1aabb8db5_Data> _43447_l;
	jule::Ptr<_1aabb8db5_Data> _434414_r;
	({
		jule::Ptr<_1aabb8db5_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1aabb8db5_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_43447_l = ___jule_assign_arg;
		_434414_r = _1___jule_assign_arg;
	});
	if ((!(_1aabb9b41_GoodOperand(_43447_l.ptr(), &(_434414_r))))) {
		std::swap(_43447_l, _434414_r);
	};
	(*((*(_433329_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa2e0d2_BinaryExpr>(_1aaa2e0d2_BinaryExpr{._field_Left=jule::new_ptr<_1aaa2dad7_OperandExpr>(_1aaa2dad7_OperandExpr{._field_Type=(*(_43447_l))._field_Type, ._field_Model=(*_43447_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1aaa2dad7_OperandExpr>(_1aaa2dad7_OperandExpr{._field_Type=(*(_434414_r))._field_Type, ._field_Model=(*_434414_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type113);
}



inline void _1aabe3a05_postEval(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aabb8db5_Data>* _436229_d) {
	(*((*(_436229_d))))._field_Lvalue=false;
	_1aabe374c_setModel(_self_, _436229_d);
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe3e01_solveExplicit(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aabb8db5_Data>* _436734_l, jule::Ptr<_1aabb8db5_Data>* _436749_r) {
	({
		jule::Ptr<_1aabb8db5_Data> ___jule_assign_arg = (*(_436734_l));
		jule::Ptr<_1aabb8db5_Data> _1___jule_assign_arg = (*(_436749_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1aabe3494_checkDatas(_self_);
	jule::Ptr<_1aabb8db5_Data> _43727_d = _1aabe2c35_evalOp(_self_);;
	({
		jule::Ptr<_1aabb8db5_Data> ___jule_assign_arg = (*(_436734_l));
		jule::Ptr<_1aabb8db5_Data> _1___jule_assign_arg = (*(_436749_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1aabe2edd_evalConst(_self_, &(_43727_d));
	if ((_43727_d != nullptr)) {
		(*_43727_d.alloc)._field_Mutable=true;
		_1aabe3a05_postEval(_self_, &(_43727_d));
	};
	return _43727_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe4242_eval(_1aabdd25d_binaryEval* _self_, jule::Ptr<_1aa106215_BinaryExpr>* _438725_op) {
	if (((*((*((*(_438725_op))))._field_Op))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1aabbb35c_pushErr((*(_self_))._field_e.ptr(), (*((*(_438725_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1aabbb6c0_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aabb8db5_Data> _43947_l = _1aabda9ec_evalExpr1((*(_self_))._field_e, (*((*(_438725_op))))._field_Left);;
	if (((_43947_l == nullptr) || ((*(_43947_l))._field_Type == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1aabecdb6_Type> _43997_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43947_l))._field_Type;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43997_prefix;
	});;
	jule::Ptr<_1aabb8db5_Data> _44027_r = _1aabda9ec_evalExpr1((*(_self_))._field_e, (*((*(_438725_op))))._field_Right);;
	if (((_44027_r == nullptr) || ((*(_44027_r))._field_Type == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_438725_op))))._field_Op;
	jule::Ptr<_1aabb8db5_Data> _44097_d = _1aabe3e01_solveExplicit(_self_, &(_43947_l), &(_44027_r));;
	if ((((_44097_d != nullptr) && (*_43947_l.alloc)._field_IsRune) && (*(_44027_r))._field_IsRune)) {
		(*_44097_d.alloc)._field_IsRune=true;
	};
	return _44097_d;;
}
















inline jule::Bool _1aabecdb6_Type_eq(_1aabecdb6_Type *_self_, _1aabecdb6_Type _other_) {
	return 
		(_self_->_field_Generic == _other_._field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1aabed2b2_Str(_1aabecdb6_Type* _self_) {
	if (_1aabee03d_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1ace17078_Builder _567_kind = static__1ace178c5_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		({
			auto except = _1ace18057_WriteStr(&_567_kind, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:59:4"));
			(except.result);
		});
	};
	({
		auto except = _1ace18057_WriteStr(&_567_kind, ((_1aabec9dc_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1aabec547_Str((*(_self_))._field_Kind.data));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:61:3"));
		(except.result);
	});
	return _1ace188d7_Str(&_567_kind);;
}



inline jule::Bool _1aabed603_Equal(jule::Ptr<_1aabecdb6_Type> _self_, jule::Ptr<_1aabecdb6_Type> _6618_other) {
	if (_1aabee03d_IsNil(_self_.ptr())) {
		return _1aabee03d_IsNil(_6618_other.ptr());;
	};
	return ((_1aabec9dc_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1aabec888_Equal((*(_self_))._field_Kind.data, _6618_other);;
}



inline jule::Bool _1aabedca7_Binded(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
			_case_begin_1ab522377:;
			{
				jule::Ptr<_1aa969605_StructIns> _794_s = (*(_self_))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);;
				if ((*((*(_794_s))._field_Decl))._field_Binded) {
					return true;;
				};
				if (((*(_794_s))._field_Source != nullptr)) {
					return _1aabedca7_Binded((*(_794_s))._field_Source);;
				};
			}
		}
		_match_end_1ab522311:;
	};
	return false;;
}



inline jule::Bool _1aabee03d_IsNil(_1aabecdb6_Type* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1aabee2c4_Void(_1aabecdb6_Type* _self_) {
	jule::Ptr<_1aac06bc2_Prim> _953_prim = _1aac00ec9_Prim(_self_);;
	return ((_953_prim != nullptr) && (*(_953_prim))._field_Kind.equal("void", 4));;
}



inline jule::Trait _1aabee55a_ActualKind(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
			_case_begin_1ab5257ba:;
			{
				jule::Ptr<_1aa969605_StructIns> _1068_s = (*(_self_))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);;
				if (((*(_1068_s))._field_Source != nullptr)) {
					return _1aabee55a_ActualKind((*(_1068_s))._field_Source);;
				};
			}
		}
		_match_end_1ab525754:;
	};
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1aabee89b_ActualEqual(jule::Ptr<_1aabecdb6_Type> _self_, jule::Ptr<_1aabecdb6_Type> _11524_other) {
	if (_1aabee03d_IsNil(_self_.ptr())) {
		return _1aabee03d_IsNil(_11524_other.ptr());;
	};
	if ((_1aabedca7_Binded(_self_.ptr()) || _1aabedca7_Binded(_11524_other.ptr()))) {
		return _1aabed603_Equal(_self_, _11524_other);;
	};
	jule::Trait _1223_l = _1aabee55a_ActualKind(_self_.ptr());;
	jule::Trait _1233_r = _1aabee55a_ActualKind(_11524_other.ptr());;
	_1aabecdb6_Type _1243_lt = _1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_1223_l};;
	_1aabecdb6_Type _1253_rt = _1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_1233_r};;
	return _1aabed603_Equal(((jule::Ptr<_1aabecdb6_Type>)((&(_1243_lt)))), ((jule::Ptr<_1aabecdb6_Type>)((&(_1253_rt)))));;
}



inline jule::Bool _1aabeebdc_deepActualEqual(jule::Ptr<_1aabecdb6_Type> _self_, jule::Ptr<_1aabecdb6_Type> _13028_other) {
	if (_1aabee03d_IsNil(_self_.ptr())) {
		return _1aabee03d_IsNil(_13028_other.ptr());;
	};
	jule::Trait _1343_l = _1aabee55a_ActualKind(_self_.ptr());;
	jule::Trait _1353_r = _1aabee55a_ActualKind(_13028_other.ptr());;
	_1aabecdb6_Type _1363_lt = _1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_1343_l};;
	_1aabecdb6_Type _1373_rt = _1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_1353_r};;
	return _1aabed603_Equal(((jule::Ptr<_1aabecdb6_Type>)((&(_1363_lt)))), ((jule::Ptr<_1aabecdb6_Type>)((&(_1373_rt)))));;
}



inline jule::Bool _1aabeee73_Comparable(_1aabecdb6_Type* _self_) {
	{
		_1aabecdb6_Type* _1448__self = _self_;;
		if ((_1aac0254c_Struct(_1448__self) != nullptr)) {
			return (*(_1aac0254c_Struct(_1448__self)))._field_Comparable;;
		};
		if ((_1aac01c99_Arr(_1448__self) != nullptr)) {
			return _1aabeee73_Comparable((*(_1aac01c99_Arr(_1448__self)))._field_Elem.ptr());;
		};
		return (((_1aac02d00_Map(_1448__self) == nullptr) && (_1aac02030_Slc(_1448__self) == nullptr)) && (_1aac022b6_Fn(_1448__self) == nullptr));;
	};
}



inline jule::Bool _1aac00209_Mutable(_1aabecdb6_Type* _self_) {
	{
		_1aabecdb6_Type* _1588__self = _self_;;
		if ((_1aac0254c_Struct(_1588__self) != nullptr)) {
			return (*(_1aac0254c_Struct(_1588__self)))._field_Mutable;;
		};
		if ((_1aac02a69_Trait(_1588__self) != nullptr)) {
			return true;;
		};
		if ((_1aac00ec9_Prim(_1588__self) != nullptr)) {
			jule::Ptr<_1aac06bc2_Prim> _1665_p = _1aac00ec9_Prim(_1588__self);;
			return _1aac0a423_IsAny(_1665_p.ptr());;
		};
		if ((_1aac01c99_Arr(_1588__self) != nullptr)) {
			return _1aac00209_Mutable((*(_1aac01c99_Arr(_1588__self)))._field_Elem.ptr());;
		};
		return (((_1aac02030_Slc(_1588__self) != nullptr) || (_1aac014e6_Ptr(_1588__self) != nullptr)) || (_1aac01260_Sptr(_1588__self) != nullptr));;
	};
}



inline jule::Bool _1aac00490_Ordered(_1aabecdb6_Type* _self_) {
	{
		_1aabecdb6_Type* _1818__self = _self_;;
		jule::Ptr<_1aac06bc2_Prim> _1824_prim = _1aac00ec9_Prim(_1818__self);;
		if ((_1824_prim != nullptr)) {
			return (_1aaabebcd_IsNum((*_1824_prim.alloc)._field_Kind) || _1aac0a18c_IsStr(_1824_prim));;
		};
		if ((_1aac014e6_Ptr(_1818__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1aaa490db_Enum> _1898_enm = _1aac0177c_Enum(_1818__self);;
		if ((_1898_enm != nullptr)) {
			return _1aaabebcd_IsNum(_1aac07046_Str(_1aac00ec9_Prim((*((*_1898_enm.alloc)._field_TypeSym))._field_Type.ptr()).ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1aac00726_NilCompatible(_1aabecdb6_Type* _self_) {
	{
		_1aabecdb6_Type* _2008__self = _self_;;
		jule::Ptr<_1aac06bc2_Prim> _2024_prim = _1aac00ec9_Prim(_2008__self);;
		if (((_2024_prim != nullptr) && _1aac0a423_IsAny(_2024_prim))) {
			return true;;
		};
		return (((((((_1aabee03d_IsNil(_2008__self) || (_1aac022b6_Fn(_2008__self) != nullptr)) || (_1aac01260_Sptr(_2008__self) != nullptr)) || (_1aac014e6_Ptr(_2008__self) != nullptr)) || (_1aac02a69_Trait(_2008__self) != nullptr)) || (_1aac02030_Slc(_2008__self) != nullptr)) || (_1aac02d00_Map(_2008__self) != nullptr)) || (_1aac01a13_TypeEnum(_2008__self) != nullptr));;
	};
}



inline jule::Bool _1aac009ac_GC(_1aabecdb6_Type* _self_) {
	{
		_1aabecdb6_Type* _2218__self = _self_;;
		jule::Ptr<_1aac06bc2_Prim> _2224_prim = _1aac00ec9_Prim(_2218__self);;
		if ((_2224_prim != nullptr)) {
			return (_1aac0a423_IsAny(_2224_prim) || _1aac0a18c_IsStr(_2224_prim));;
		};
		return ((((_1aac01260_Sptr(_2218__self) != nullptr) || (_1aac02030_Slc(_2218__self) != nullptr)) || (_1aac02a69_Trait(_2218__self) != nullptr)) || (_1aac01a13_TypeEnum(_2218__self) != nullptr));;
	};
}



inline jule::Bool _1aac00c43_Variadicable(_1aabecdb6_Type* _self_) {
	_1aabecdb6_Type* _2337__self = _self_;;
	return (_1aac02030_Slc(_2337__self) != nullptr);;
}



inline jule::Ptr<_1aac06bc2_Prim> _1aac00ec9_Prim(_1aabecdb6_Type* _self_) {
	jule::Trait _2397_kind = _1aabee55a_ActualKind(_self_);;
	{
		auto &_match_expr{ _2397_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)) {
			_case_begin_1ab541e79:;
			{
				return _2397_kind.cast_ptr<_1aac06bc2_Prim>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1ab5420bc:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab542056:;
	};
}



inline jule::Ptr<_1aac0a6ed_Sptr> _1aac01260_Sptr(_1aabecdb6_Type* _self_) {
	jule::Trait _2507_kind = _1aabee55a_ActualKind(_self_);;
	{
		auto &_match_expr{ _2507_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)) {
			_case_begin_1ab542e25:;
			{
				return _2507_kind.cast_ptr<_1aac0a6ed_Sptr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1ab54309b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab543035:;
	};
}



inline jule::Ptr<_1aac0deb5_Ptr> _1aac014e6_Ptr(_1aabecdb6_Type* _self_) {
	jule::Trait _2617_kind = _1aabee55a_ActualKind(_self_);;
	{
		auto &_match_expr{ _2617_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data28)) {
			_case_begin_1ab543e15:;
			{
				return _2617_kind.cast_ptr<_1aac0deb5_Ptr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1ab54408b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab544025:;
	};
}



inline jule::Ptr<_1aaa490db_Enum> _1aac0177c_Enum(_1aabecdb6_Type* _self_) {
	jule::Trait _2727_kind = _1aabee55a_ActualKind(_self_);;
	{
		auto &_match_expr{ _2727_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data3)) {
			_case_begin_1ab544e05:;
			{
				return _2727_kind.cast_ptr<_1aaa490db_Enum>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1ab54507b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab545015:;
	};
}



inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aac01a13_TypeEnum(_1aabecdb6_Type* _self_) {
	jule::Trait _2837_kind = _1aabee55a_ActualKind(_self_);;
	{
		auto &_match_expr{ _2837_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4)) {
			_case_begin_1ab545de5:;
			{
				return _2837_kind.cast_ptr<_1aaa4a7e6_TypeEnum>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1ab54606b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab546005:;
	};
}



inline jule::Ptr<_1aac0d4e2_Arr> _1aac01c99_Arr(_1aabecdb6_Type* _self_) {
	jule::Trait _2947_kind = _1aabee55a_ActualKind(_self_);;
	{
		auto &_match_expr{ _2947_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data27)) {
			_case_begin_1ab546dd5:;
			{
				return _2947_kind.cast_ptr<_1aac0d4e2_Arr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1ab54705b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab546ee5:;
	};
}



inline jule::Ptr<_1aac0b1c1_Slc> _1aac02030_Slc(_1aabecdb6_Type* _self_) {
	jule::Trait _3057_kind = _1aabee55a_ActualKind(_self_);;
	{
		auto &_match_expr{ _3057_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data24)) {
			_case_begin_1ab547dc5:;
			{
				return _3057_kind.cast_ptr<_1aac0b1c1_Slc>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1ab54804b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab547ed5:;
	};
}



inline jule::Ptr<_1aaa3e2ce_FnIns> _1aac022b6_Fn(_1aabecdb6_Type* _self_) {
	jule::Trait _3167_kind = _1aabee55a_ActualKind(_self_);;
	{
		auto &_match_expr{ _3167_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data1)) {
			_case_begin_1ab548db5:;
			{
				return _3167_kind.cast_ptr<_1aaa3e2ce_FnIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1ab54903b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab548ec5:;
	};
}



inline jule::Ptr<_1aa969605_StructIns> _1aac0254c_Struct(_1aabecdb6_Type* _self_) {
	jule::Trait _3277_kind = _1aabee55a_ActualKind(_self_);;
	{
		auto &_match_expr{ _3277_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
			_case_begin_1ab549d83:;
			{
				return _3277_kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1ab54a009:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab549e93:;
	};
}



inline jule::Ptr<_1aa969605_StructIns> _1aac027d3_softStruct(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
			_case_begin_1ab54a45a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1ab54a7ce:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab54a2c3:;
	};
}



inline jule::Ptr<_1aaa46935_Trait> _1aac02a69_Trait(_1aabecdb6_Type* _self_) {
	jule::Trait _3477_kind = _1aabee55a_ActualKind(_self_);;
	{
		auto &_match_expr{ _3477_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data2)) {
			_case_begin_1ab54ba00:;
			{
				return _3477_kind.cast_ptr<_1aaa46935_Trait>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1ab54bb76:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab54bb10:;
	};
}



inline jule::Ptr<_1aac0c865_Map> _1aac02d00_Map(_1aabecdb6_Type* _self_) {
	jule::Trait _3587_kind = _1aabee55a_ActualKind(_self_);;
	{
		auto &_match_expr{ _3587_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data26)) {
			_case_begin_1ab54c9e0:;
			{
				return _3587_kind.cast_ptr<_1aac0c865_Map>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1ab54cb66:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab54cb00:;
	};
}



inline jule::Ptr<_1aac0bcb5_Tuple> _1aac03086_Tup(_1aabecdb6_Type* _self_) {
	jule::Trait _3697_kind = _1aabee55a_ActualKind(_self_);;
	{
		auto &_match_expr{ _3697_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data25)) {
			_case_begin_1ab54d9d0:;
			{
				return _3697_kind.cast_ptr<_1aac0bcb5_Tuple>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1ab54db56:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab54dae0:;
	};
}



inline jule::Bool _1aac0331c_comptime(_1aabecdb6_Type* _self_) {
	return (((((((((((((((_1aac04890_comptimeTypeInfos(_self_) != nullptr) || (_1aac04b26_comptimeTypeInfo(_self_) != nullptr)) || (_1aac035a3_comptimeStructFields(_self_) != nullptr)) || (_1aac03839_comptimeStructField(_self_) != nullptr)) || (_1aac03ac0_comptimeEnumFields(_self_) != nullptr)) || (_1aac03d56_comptimeEnumField(_self_) != nullptr)) || (_1aac04dac_comptimeStatics(_self_) != nullptr)) || (_1aac05143_comptimeStatic(_self_) != nullptr)) || (_1aac040dc_comptimeParams(_self_) != nullptr)) || (_1aac04373_comptimeParam(_self_) != nullptr)) || (_1aac053c9_comptimeValue(_self_) != nullptr)) || (_1aac05e13_comptimeFiles(_self_) != nullptr)) || (_1aac05b7c_comptimeFile(_self_) != nullptr)) || (_1aac05660_comptimeDecl(_self_) != nullptr)) || (_1aac058e6_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1aaac3451_comptimeStructFields> _1aac035a3_comptimeStructFields(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data7)) {
			_case_begin_1ab54e3a4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaac3451_comptimeStructFields>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1ab553463:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab5533ec:;
	};
}



inline jule::Ptr<_1aaac1bad_comptimeStructField> _1aac03839_comptimeStructField(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data6)) {
			_case_begin_1ab553b17:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaac1bad_comptimeStructField>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1ab553d26:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab553cb0:;
	};
}



inline jule::Ptr<_1aaac9413_comptimeEnumFields> _1aac03ac0_comptimeEnumFields(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data11)) {
			_case_begin_1ab5547d8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaac9413_comptimeEnumFields>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1ab5549e7:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab554981:;
	};
}



inline jule::Ptr<_1aaac8104_comptimeEnumField> _1aac03d56_comptimeEnumField(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data10)) {
			_case_begin_1ab5554a9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaac8104_comptimeEnumField>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1ab5556b8:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab555652:;
	};
}



inline jule::Ptr<_1aaaccc74_comptimeParams> _1aac040dc_comptimeParams(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data13)) {
			_case_begin_1ab55617a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaaccc74_comptimeParams>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1ab556389:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab556323:;
	};
}



inline jule::Ptr<_1aaacae1a_comptimeParam> _1aac04373_comptimeParam(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data12)) {
			_case_begin_1ab556d4b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaacae1a_comptimeParam>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1ab55705a:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab556ee4:;
	};
}



inline jule::Ptr<_1aaac1152_comptimeRange> _1aac04609_comptimeRange(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data5)) {
			_case_begin_1ab557a1c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaac1152_comptimeRange>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1ab557c2b:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab557bb5:;
	};
}



inline jule::Ptr<_1aaace5d3_comptimeTypeInfos> _1aac04890_comptimeTypeInfos(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data14)) {
			_case_begin_1ab5586dd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaace5d3_comptimeTypeInfos>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1ab5588ec:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab558886:;
	};
}



inline jule::Ptr<_1aaad1052_comptimeTypeInfo> _1aac04b26_comptimeTypeInfo(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data15)) {
			_case_begin_1ab5593ae:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaad1052_comptimeTypeInfo>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1ab5595bd:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab559557:;
	};
}



inline jule::Ptr<_1aaac6685_comptimeStatics> _1aac04dac_comptimeStatics(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data9)) {
			_case_begin_1ab55a080:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaac6685_comptimeStatics>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1ab55a28e:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab55a228:;
	};
}



inline jule::Ptr<_1aaac4dd1_comptimeStatic> _1aac05143_comptimeStatic(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data8)) {
			_case_begin_1ab55ac51:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaac4dd1_comptimeStatic>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1ab55ae60:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab55ade9:;
	};
}



inline jule::Ptr<_1aaad7564_comptimeValue> _1aac053c9_comptimeValue(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data16)) {
			_case_begin_1ab55b922:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaad7564_comptimeValue>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1ab55bb31:;
			{
				return nullptr;;
			}
		}
		_match_end_1ab55baba:;
	};
}



inline jule::Ptr<_1aaae0b55_comptimeDecl> _1aac05660_comptimeDecl(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data20)) {
			_case_begin_1ab55c5e3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaae0b55_comptimeDecl>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1be07eb4c:;
			{
				return nullptr;;
			}
		}
		_match_end_1be07ead6:;
	};
}



inline jule::Ptr<_1aaadd867_comptimeDecls> _1aac058e6_comptimeDecls(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data19)) {
			_case_begin_1be0805ed:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaadd867_comptimeDecls>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1be08080c:;
			{
				return nullptr;;
			}
		}
		_match_end_1be080796:;
	};
}



inline jule::Ptr<_1aaadbc3e_comptimeFile> _1aac05b7c_comptimeFile(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data18)) {
			_case_begin_1be0812be:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaadbc3e_comptimeFile>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1be0814cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1be081467:;
	};
}



inline jule::Ptr<_1aaada2c0_comptimeFiles> _1aac05e13_comptimeFiles(_1aabecdb6_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data17)) {
			_case_begin_1be081e90:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaada2c0_comptimeFiles>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1be08219e:;
			{
				return nullptr;;
			}
		}
		_match_end_1be082138:;
	};
}








inline jule::Bool _1aac062ba_TypeSym_eq(_1aac062ba_TypeSym *_self_, _1aac062ba_TypeSym _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Bool _1aac06672_checked(_1aac062ba_TypeSym* _self_) {
	return ((*(_self_))._field_Type != nullptr);;
}








inline jule::Bool _1aac06bc2_Prim_eq(_1aac06bc2_Prim *_self_, _1aac06bc2_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1aac07046_Str(_1aac06bc2_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1aac07387_Equal(jule::Ptr<_1aac06bc2_Prim> _self_, jule::Ptr<_1aabecdb6_Type> _57118_other) {
	{
		auto &_match_expr{ (*(_57118_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)) {
			_case_begin_1be0842c2:;
			{
				return ((*(_self_))._field_Kind == (*((*(_57118_other))._field_Kind.cast_ptr<_1aac06bc2_Prim>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)))._field_Kind);;
			}
		}
		_match_end_1be08424a:;
	};
	return false;;
}



inline jule::Bool _1aac0782c_IsConstraint(_1aac06bc2_Prim* _self_) {
	return ((((!(_1aac0a18c_IsStr(_self_))) && (!(_1aac0a423_IsAny(_self_)))) && (!(_1aac09e06_IsBool(_self_)))) && (!(_1aaabebcd_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1aac07ab3_IsI8(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1aac07d49_IsI16(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1aac080d0_IsI32(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1aac08366_IsI64(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1aac085ec_IsU8(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1aac08883_IsU16(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1aac08b19_IsU32(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1aac08da0_IsU64(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1aac09136_IsF32(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1aac093bc_IsF64(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1aac09653_IsInt(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1aac098d9_IsUint(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1aac09b70_IsUintptr(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1aac09e06_IsBool(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1aac0a18c_IsStr(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1aac0a423_IsAny(_1aac06bc2_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1aac0a6ed_Sptr_eq(_1aac0a6ed_Sptr *_self_, _1aac0a6ed_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1aac0aaa5_Str(_1aac0a6ed_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1aabed2b2_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1aac0ade6_Equal(jule::Ptr<_1aac0a6ed_Sptr> _self_, jule::Ptr<_1aabecdb6_Type> _64818_other) {
	{
		auto &_match_expr{ (*(_64818_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)) {
			_case_begin_1be08d386:;
			{
				return _1aabed603_Equal((*(_self_))._field_Elem, (*((*(_64818_other))._field_Kind.cast_ptr<_1aac0a6ed_Sptr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)))._field_Elem);;
			}
		}
		_match_end_1be08d30e:;
	};
	return false;;
}








inline jule::Bool _1aac0b1c1_Slc_eq(_1aac0b1c1_Slc *_self_, _1aac0b1c1_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1aac0b688_Str(_1aac0b1c1_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1aabed2b2_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1aac0b9c9_Equal(jule::Ptr<_1aac0b1c1_Slc> _self_, jule::Ptr<_1aabecdb6_Type> _66718_other) {
	{
		auto &_match_expr{ (*(_66718_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data24)) {
			_case_begin_1be0902ab:;
			{
				return _1aabed603_Equal((*(_self_))._field_Elem, (*((*(_66718_other))._field_Kind.cast_ptr<_1aac0b1c1_Slc>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data24)))._field_Elem);;
			}
		}
		_match_end_1be090234:;
	};
	return false;;
}







inline jule::Str _1aac0c16c_Str(_1aac0bcb5_Tuple* _self_) {
	_1ace17078_Builder _6847_s = static__1ace178c5_New(16LL);;
	({
		auto except = _1ace18310_WriteByte(&_6847_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:685:3"));
	});
	({
		auto except = _1ace18057_WriteStr(&_6847_s, _1aabed2b2_Str((*(_self_))._field_Types[0LL].ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:686:3"));
		(except.result);
	});
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1be092786:;
		if (it != expr_end) {
			jule::Ptr<_1aabecdb6_Type> *_68710_t = it;
			{
				({
					auto except = _1ace18310_WriteByte(&_6847_s, ',');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:688:4"));
				});
				({
					auto except = _1ace18057_WriteStr(&_6847_s, _1aabed2b2_Str((*(_68710_t)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:689:4"));
					(except.result);
				});
			}
			_iter_next_1be092786:;
			++it;
			goto _iter_begin_1be092786;
		}
		_iter_end_1be092786:;
	};
	({
		auto except = _1ace18310_WriteByte(&_6847_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:691:3"));
	});
	return _1ace188d7_Str(&_6847_s);;
}



inline jule::Bool _1aac0c4ad_Equal(jule::Ptr<_1aac0bcb5_Tuple> _self_, jule::Ptr<_1aabecdb6_Type> _69618_other) {
	{
		auto &_match_expr{ (*(_69618_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data25)) {
			_case_begin_1be093ea2:;
			{
				jule::Ptr<_1aac0bcb5_Tuple> _6994_tup = (*(_69618_other))._field_Kind.cast_ptr<_1aac0bcb5_Tuple>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data25);;
				if (((*(_self_))._field_Types.len() != (*(_6994_tup))._field_Types.len())) {
					return false;;
				};
				jule::I32 _7038_i = 0LL;;
				for (; (_7038_i < (*(_self_))._field_Types.len()); (_7038_i)++) {
					{
						if ((!(_1aabed603_Equal((*_self_.alloc)._field_Types[_7038_i], (*(_6994_tup))._field_Types[_7038_i])))) {
							return false;;
						};
					}
				_iter_next_1be094c61:;
				}
				_iter_end_1be094c61:;;
				return true;;
			}
		}
		_match_end_1be093e2a:;
	};
	return false;;
}








inline jule::Bool _1aac0c865_Map_eq(_1aac0c865_Map *_self_, _1aac0c865_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1aac0cc1c_Str(_1aac0c865_Map* _self_) {
	_1ace17078_Builder _7247_s = static__1ace178c5_New(16LL);;
	({
		auto except = _1ace18057_WriteStr(&_7247_s, jule::Str::lit("map[", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:725:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&_7247_s, _1aabed2b2_Str((*(_self_))._field_Key.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:726:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(&_7247_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:727:3"));
	});
	({
		auto except = _1ace18057_WriteStr(&_7247_s, _1aabed2b2_Str((*(_self_))._field_Val.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:728:3"));
		(except.result);
	});
	return _1ace188d7_Str(&_7247_s);;
}



inline jule::Bool _1aac0d05d_Equal(jule::Ptr<_1aac0c865_Map> _self_, jule::Ptr<_1aabecdb6_Type> _73318_other) {
	{
		auto &_match_expr{ (*(_73318_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data26)) {
			_case_begin_1be098dca:;
			{
				jule::Ptr<_1aac0c865_Map> _7364_m = (*(_73318_other))._field_Kind.cast_ptr<_1aac0c865_Map>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data26);;
				return (_1aabed603_Equal((*(_self_))._field_Key, (*(_7364_m))._field_Key) && _1aabed603_Equal((*_self_.alloc)._field_Val, (*_7364_m.alloc)._field_Val));;
			}
		}
		_match_end_1be098d53:;
	};
	return false;;
}








inline jule::Bool _1aac0d4e2_Arr_eq(_1aac0d4e2_Arr *_self_, _1aac0d4e2_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1aac0d899_Str(_1aac0d4e2_Arr* _self_) {
	_1ace17078_Builder _7537_s = static__1ace178c5_New(16LL);;
	({
		auto except = _1ace18310_WriteByte(&_7537_s, '[');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:754:3"));
	});
	({
		auto except = _1ace18057_WriteStr(&_7537_s, _1a792ea63_Itoa((*(_self_))._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:755:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(&_7537_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:756:3"));
	});
	({
		auto except = _1ace18057_WriteStr(&_7537_s, _1aabed2b2_Str((*(_self_))._field_Elem.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:757:3"));
		(except.result);
	});
	return _1ace188d7_Str(&_7537_s);;
}



inline jule::Bool _1aac0dbda_Equal(jule::Ptr<_1aac0d4e2_Arr> _self_, jule::Ptr<_1aabecdb6_Type> _76218_other) {
	{
		auto &_match_expr{ (*(_76218_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data27)) {
			_case_begin_1be09cad2:;
			{
				jule::Ptr<_1aac0d4e2_Arr> _7654_arr = (*(_76218_other))._field_Kind.cast_ptr<_1aac0d4e2_Arr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data27);;
				return (((*(_self_))._field_N == (*(_7654_arr))._field_N) && _1aabed603_Equal((*_self_.alloc)._field_Elem, (*_7654_arr.alloc)._field_Elem));;
			}
		}
		_match_end_1be09ca5a:;
	};
	return false;;
}








inline jule::Bool _1aac0deb5_Ptr_eq(_1aac0deb5_Ptr *_self_, _1aac0deb5_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1aac0e36c_Str(_1aac0deb5_Ptr* _self_) {
	if (_1aac0ea32_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1aabed2b2_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1aac0e6ad_Equal(jule::Ptr<_1aac0deb5_Ptr> _self_, jule::Ptr<_1aabecdb6_Type> _78718_other) {
	{
		auto &_match_expr{ (*(_78718_other))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data28)) {
			_case_begin_1be0a07d8:;
			{
				jule::Ptr<_1aac0deb5_Ptr> _7904_ptr = (*(_78718_other))._field_Kind.cast_ptr<_1aac0deb5_Ptr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data28);;
				{
					
					if (_1aac0ea32_IsUnsafe(_self_.ptr())) {
						_case_begin_1be0a1795:;
						{
							return _1aac0ea32_IsUnsafe(_7904_ptr.ptr());;
						}
					}
					else if (_1aac0ea32_IsUnsafe(_7904_ptr.ptr())) {
						_case_begin_1be0a1ba2:;
						{
							return _1aac0ea32_IsUnsafe(_self_.ptr());;
						}
					}
					else {
						_case_begin_1be0a172e:;
						{
							return _1aabed603_Equal((*_self_.alloc)._field_Elem, (*_7904_ptr.alloc)._field_Elem);;
						}
					}
					_match_end_1be0a16a7:;
				};
			}
		}
		_match_end_1be0a0761:;
	};
	return false;;
}



inline jule::Bool _1aac0ea32_IsUnsafe(_1aac0deb5_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1aac0eeb6_referencer_eq(_1aac0eeb6_referencer *_self_, _1aac0eeb6_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1aac11737_pushErr(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0d7ceb_Token> _88123_token, jule::Str _88145_fmt, jule::Slice<jule::Any> _88165_args) {
	_1aab50533_pushErr((*(_self_))._field_s.ptr(), _88123_token, _88145_fmt, _88165_args);
}



inline void _1aac11935_allowBuiltin(_1aac10ea6_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1aac11b33_disallowBuiltin(_1aac10ea6_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1be0a649d_pushReference(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa969605_StructIns>* _89337_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1bdbc8dc3_Exist((*(_self_))._field_refers.ptr(), (*(_89337_t)))) {
		return;;
	};
	_1aab1dbd8_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_89337_t)), &__jule_any_type64));
}

inline void _1be0a8d52_pushReference(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aaa46935_Trait>* _89337_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1be0aaa35_Exist((*(_self_))._field_refers.ptr(), (*(_89337_t)))) {
		return;;
	};
	_1aab1dbd8_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_89337_t)), &__jule_any_type11));
}



inline void _1aac12194_pushReferenceByKind(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aabecdb6_Type>* _90340_k) {
	{
		
		if ((_1aac027d3_softStruct((*(_90340_k)).ptr()) != nullptr)) {
			_case_begin_1be0a50c3:;
			{
				jule::Ptr<_1aa969605_StructIns> _9068_t = _1aac027d3_softStruct((*(_90340_k)).ptr());;
				_1be0a649d_pushReference(_self_, &(_9068_t));
			}
		}
		else if ((_1aac02a69_Trait((*(_90340_k)).ptr()) != nullptr)) {
			_case_begin_1be0a516c:;
			{
				jule::Ptr<_1aaa46935_Trait> _9098_t = _1aac02a69_Trait((*(_90340_k)).ptr());;
				_1be0a8d52_pushReference(_self_, &(_9098_t));
			}
		}
		_match_end_1be0a4ea2:;
	};
}



inline void _1aac125b2_pushCycleError(_1aac10ea6_typeChecker* _self_, jule::Any _91426_def1, jule::Any _91437_def2, _1ace17078_Builder* _91453_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _9163_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1be0acd12, nullptr, nullptr);;
	jule::Str _9263_m = _1ace188d7_Str(_91453_message);;
	jule::Str _9273_def1Ident = _9163_getIdent(&(_91426_def1));;
	jule::Str _9283_def2Ident = _9163_getIdent(&(_91437_def2));;
	jule::Str _9293_refersTo = _1ace26829_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9273_def1Ident, &__jule_any_type5); (*it++) = jule::Any(_9283_def2Ident, &__jule_any_type5); __jule_collection; }));;
	({
		auto except = _1ace18057_WriteStr(_91453_message, _1bb0851a5_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:930:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_91453_message, _9293_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:931:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(_91453_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:932:3"));
	});
	({
		auto except = _1ace18057_WriteStr(_91453_message, _9263_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:933:3"));
		(except.result);
	});
}



inline jule::Bool _1aac129ad_checkCrossCycle(_1aac10ea6_typeChecker* _self_, jule::Any _93627_decl, _1ace17078_Builder* _93643_message) {
	{
		auto &_match_expr{ _93627_decl };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1be0b2223:;
			{
				jule::Ptr<_1aabec1a1_TypeAlias> _9394_ta = _93627_decl.unsafe_cast_ptr<_1aabec1a1_TypeAlias>();;
				{
					auto expr = &((*(_9394_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be0b3158:;
					if (it != expr_end) {
						jule::Any *_94011_d = it;
						{
							{
								
								if (((*(_94011_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1be0b39e9:;
									{
										_1aac125b2_pushCycleError(_self_, jule::Any(_9394_ta, &__jule_any_type8), (*(_94011_d)), _93643_message);
										return false;;
									}
								}
								else if ((!(_1aac129ad_checkCrossCycle(_self_, (*(_94011_d)), _93643_message)))) {
									_case_begin_1be0b3a82:;
									{
										_1aac125b2_pushCycleError(_self_, jule::Any(_9394_ta, &__jule_any_type8), (*(_94011_d)), _93643_message);
										return false;;
									}
								}
								_match_end_1be0b38d9:;
							};
						}
						_iter_next_1be0b3158:;
						++it;
						goto _iter_begin_1be0b3158;
					}
					_iter_end_1be0b3158:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be0b207a:;
			{
				jule::Ptr<_1aa966767_Struct> _9514_s = _93627_decl.unsafe_cast_ptr<_1aa966767_Struct>();;
				{
					auto expr = &((*(_9514_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be0b549b:;
					if (it != expr_end) {
						jule::Ptr<_1aa966767_Struct> *_95211_d = it;
						{
							{
								
								if ((jule::Any((*(_95211_d)), &__jule_any_type9) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1be0b5d09:;
									{
										_1aac125b2_pushCycleError(_self_, jule::Any(_9514_s, &__jule_any_type9), jule::Any((*(_95211_d)), &__jule_any_type9), _93643_message);
										return false;;
									}
								}
								else if ((!(_1aac129ad_checkCrossCycle(_self_, jule::Any((*(_95211_d)), &__jule_any_type9), _93643_message)))) {
									_case_begin_1be0b5d92:;
									{
										_1aac125b2_pushCycleError(_self_, jule::Any(_9514_s, &__jule_any_type9), jule::Any((*(_95211_d)), &__jule_any_type9), _93643_message);
										return false;;
									}
								}
								_match_end_1be0b5be9:;
							};
						}
						_iter_next_1be0b549b:;
						++it;
						goto _iter_begin_1be0b549b;
					}
					_iter_end_1be0b549b:;
				};
			}
		}
		_match_end_1be0b21ac:;
	};
	return true;;
}



inline jule::Bool _1aac12da9_checkIllegalCycles(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _97035_ident, jule::Any _97067_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _97067_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be0b8207:;
			{
				if ((*(_97067_decl.unsafe_cast_ptr<_1aa966767_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1be0b80e7:;
			{
				if ((*(_97067_decl.unsafe_cast_ptr<_1aabec1a1_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1be0b59eb:;
	};
	if ((_97067_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1aac11737_pushErr(_self_, (*((*(_97035_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_referencer.alloc)._field_ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1ace17078_Builder _9937_message = static__1ace178c5_New(32LL);;
	if ((!(_1aac129ad_checkCrossCycle(_self_, _97067_decl, &(_9937_message))))) {
		jule::Str _9968_errMsg = _1ace188d7_Str(&_9937_message);;
		_1ace18ad5_Clear(&_9937_message);
		_1aac125b2_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _97067_decl, &(_9937_message));
		_9968_errMsg+=_1ace188d7_Str(&_9937_message);
		_1aac11737_pushErr(_self_, (*((*(_97035_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9968_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1be0bce76:;
			{
				{
					(*((*((*(_self_))._field_referencer))._field_refs))=jule::append((*((*(*(_self_))._field_referencer.alloc)._field_refs)),({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _97067_decl; __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be0bb529:;
			{
				{
					auto &_match_expr{ _97067_decl };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_1be0bd88e:;
						{
							jule::Ptr<_1aa966767_Struct> _10129_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1aa966767_Struct>();;
							(*(_10129_s))._field_Depends=jule::append((*_10129_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa966767_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _97067_decl.unsafe_cast_ptr<_1aa966767_Struct>(); __jule_collection; }));
						}
					}
					_match_end_1be0bd828:;
				};
			}
		}
		_match_end_1be0bcdee:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1aac132a5_fromTypeAlias(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _102034_decl, jule::Ptr<_1aabec1a1_TypeAlias>* _102066_ta) {
	if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_102066_ta))))._field_Public, (*((*(_102066_ta))))._field_Token)))) {
		_1aac11737_pushErr(_self_, (*((*(_102034_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_102034_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_102066_ta))))._field_Used=true;
	if (((*((*(_102034_decl))))._field_Generics.len() > 0LL)) {
		_1aac11737_pushErr(_self_, (*((*(_102034_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_102034_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be0c3b80:;
			if (it != expr_end) {
				jule::Ptr<_1aabec1a1_TypeAlias> _103711_bg = *it;
				{
					if (((_103711_bg == (*(_102066_ta))) || (((*((*((*(_102066_ta))))._field_TypeSym))._field_Type != nullptr) && _1aabed603_Equal((*(*((*(_102066_ta))))._field_TypeSym.alloc)._field_Type, (*(*(_103711_bg))._field_TypeSym.alloc)._field_Type)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1be0c3b80;
					};
				}
				_iter_next_1be0c3b80:;
				++it;
				goto _iter_begin_1be0c3b80;
			}
			_iter_end_1be0c3b80:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be0c5e7e:;
			if (it != expr_end) {
				jule::Ptr<_1aabec1a1_TypeAlias> _104811_bg = *it;
				{
					if ((_104811_bg == (*(_102066_ta)))) {
						_1aac11737_pushErr(_self_, (*((*(_102034_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_102034_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_102066_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be0c68db:;
						if (it != expr_end) {
							jule::Ptr<_1aabec1a1_TypeAlias> _105312_dg = *it;
							{
								if ((_104811_bg == _105312_dg)) {
									_1aac11737_pushErr(_self_, (*((*(_102034_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_102034_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1be0c68db:;
							++it;
							goto _iter_begin_1be0c68db;
						}
						_iter_end_1be0c68db:;
					};
				}
				_iter_next_1be0c5e7e:;
				++it;
				goto _iter_begin_1be0c5e7e;
			}
			_iter_end_1be0c5e7e:;
		};
	};
	if (((*((*((*(_102066_ta))))._field_TypeSym))._field_Type == nullptr)) {
		jule::Bool _10644_ok = _1aab5caa1_checkTypeAliasDecl((*(_self_))._field_s, _102066_ta, (*(_self_))._field_lookup);;
		if ((!(_10644_ok))) {
			return nullptr;;
		};
	};
	if (((*((*(_102066_ta))))._field_Strict && (((*((*(_self_))._field_s))._field_step & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL)))) {
		jule::Ptr<_1aa969605_StructIns> _10728_s = _1aac027d3_softStruct((*((*((*(_102066_ta))))._field_TypeSym))._field_Type.ptr());;
		if ((!((*(_10728_s))._field_Checked))) {
			jule::Bool _10745_ok = _1aac14394_checkStructIns(_self_, &(_10728_s), &((*((*(_102034_decl))))._field_Token));;
			if ((!(_10745_ok))) {
				return nullptr;;
			};
		};
	};
	{
		jule::Ptr<_1aa969605_StructIns> _10828_s = _1aac0254c_Struct((*((*((*(_102066_ta))))._field_TypeSym))._field_Type.ptr());;
		if ((_10828_s != nullptr)) {
			jule::Bool _10845_ok = _1aac12da9_checkIllegalCycles(_self_, _102034_decl, jule::Any((*_10828_s.alloc)._field_Decl, &__jule_any_type9));;
			if ((!(_10845_ok))) {
				return nullptr;;
			};
		};
	};
	if (((*((*(_102066_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_102066_ta)); __jule_collection; }));
	};
	jule::Ptr<_1aabecdb6_Type> _10977_tk = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=(*((*(_102066_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*((*((*((*(_102066_ta))))._field_TypeSym))._field_Type))._field_Kind});;
	_1aac12194_pushReferenceByKind(_self_, &(_10977_tk));
	return jule::Trait(_10977_tk, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data21);;
}



inline jule::Ptr<_1aaa490db_Enum> _1aac136a1_fromEnum(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _110525_decl, jule::Ptr<_1aaa490db_Enum>* _110557_e) {
	if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_110557_e))))._field_Public, (*((*(_110557_e))))._field_Token)))) {
		_1aac11737_pushErr(_self_, (*((*(_110525_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_110525_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_110525_decl))))._field_Generics.len() > 0LL)) {
		_1aac11737_pushErr(_self_, (*((*(_110525_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_110525_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_110557_e));;
}



inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aac13a9c_fromTypeEnum(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _111729_decl, jule::Ptr<_1aaa4a7e6_TypeEnum>* _111761_e) {
	if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_111761_e))))._field_Public, (*((*(_111761_e))))._field_Token)))) {
		_1aac11737_pushErr(_self_, (*((*(_111729_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_111729_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_111729_decl))))._field_Generics.len() > 0LL)) {
		_1aac11737_pushErr(_self_, (*((*(_111729_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_111729_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_111761_e));;
}



inline jule::Ptr<_1aaa46935_Trait> _1aac13e98_fromTrait(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _112926_decl, jule::Ptr<_1aaa46935_Trait>* _112958_t) {
	if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_112958_t))))._field_Public, (*((*(_112958_t))))._field_Token)))) {
		_1aac11737_pushErr(_self_, (*((*(_112926_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_112926_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_112926_decl))))._field_Generics.len() > 0LL)) {
		_1aac11737_pushErr(_self_, (*((*(_112926_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_112926_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1be0a8d52_pushReference(_self_, _112958_t);
	return (*(_112958_t));;
}



inline jule::Bool _1aac14394_checkStructIns(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa969605_StructIns>* _114235_ins, jule::Ptr<_1aa0d7ceb_Token>* _114257_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_114235_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_114235_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_114235_ins))))._field_Decl, &__jule_any_type9) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1aab68c77_precheckStructIns((*(_self_))._field_s, _114235_ins, (*(_114257_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_114235_ins))))._field_Generics.len() > 0LL)) {
		_1aab69030_checkStructIns((*(_self_))._field_s, _114235_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aac1464c_appendUsedStructReference(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa966767_Struct>* _116246_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be0dd21b:;
			{
				jule::Ptr<_1aa966767_Struct> _11688_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1aa966767_Struct>();;
				if ((!(_1aa9681d6_IsUses(_11688_refS.ptr(), (*(_116246_s)))))) {
					(*_11688_refS.alloc)._field_Uses=jule::append((*_11688_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa966767_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_116246_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1be0dd1a5:;
	};
}



inline jule::Ptr<_1aa969605_StructIns> _1aac14a48_buildStructInstance(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _117540_decl, jule::Ptr<_1aa966767_Struct>* _117572_s) {
	jule::Ptr<_1aac0eeb6_referencer> _11777_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> _11797_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)) {
				_case_begin_1be0e1197:;
				{
					jule::Ptr<_1aab05032_scopeChecker> _11869_sc = (*(_self_))._field_lookup.cast_ptr<_1aab05032_scopeChecker>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1);;
					jule::Ptr<_1aab05032_scopeChecker> _11879_hard = _1aab08695_getHardRoot(_11869_sc);;
					if ((((*((*(_11879_hard))._field_owner))._field_Owner == nullptr) || ((*((*((*(_11879_hard))._field_owner))._field_Owner))._field_Decl != (*(_117572_s))))) {
						goto _match_end_1be0e1131;
					};
					jule::I32 _11915_n = ((*((*(_11879_hard))._field_owner))._field_Generics.len() + (*((*(*(_11879_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11879_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11915_n);
				}
			}
			_match_end_1be0e1131:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _12017_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1aa969605_StructIns> _12057_ins = _1aa966b85_instance((*(_117572_s)));;
	(*(_12057_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>::alloc(0LL, (*((*(_117540_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aabeb4d0_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_117540_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be0e6389:;
		if (it != expr_end) {
			jule::Ptr<_1aa0ed817_TypeDecl> _120715_g = *it;
			{
				jule::Ptr<_1aabecdb6_Type> _12088_kind = _1aac1d5ac_build(_self_, &((*(_120715_g))._field_Kind));;
				if ((_12088_kind == nullptr)) {
					return nullptr;;
				};
				(*_12057_ins.alloc)._field_Generics=jule::append((*_12057_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aabeb4d0_InsGeneric>(_1aabeb4d0_InsGeneric{._field_Type=_12088_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1be0e6389:;
			++it;
			goto _iter_begin_1be0e6389;
		}
		_iter_end_1be0e6389:;
	};
	(*(_self_))._field_lookup=_12017_lookup;
	(*(_self_))._field_bannedGenerics=_11797_bannedGenerics;
	(*(_self_))._field_referencer=_11777_referencer;
	return _12057_ins;;
}



inline jule::Ptr<_1aa969605_StructIns> _1aac14e44_fromStructIns(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa969605_StructIns>* _122334_ins, jule::Ptr<_1aa0d7ceb_Token> _122355_token) {
	jule::Ptr<_1aa969605_StructIns> _12247_existInstance = _1aa966ec6_appendInstance((*((*(_122334_ins))))._field_Decl.ptr(), _122334_ins);;
	if ((_12247_existInstance != nullptr)) {
		if ((!(_1aab5a4a5_checkConstraintsStruct((*(_self_))._field_s, _122334_ins, &(_122355_token), _12247_existInstance)))) {
			return nullptr;;
		};
		_1be0a649d_pushReference(_self_, &(_12247_existInstance));
		return _12247_existInstance;;
	};
	if ((!(_1aac14394_checkStructIns(_self_, _122334_ins, &(_122355_token))))) {
		return nullptr;;
	};
	_1be0a649d_pushReference(_self_, _122334_ins);
	return (*(_122334_ins));;
}



inline jule::Ptr<_1aa969605_StructIns> _1aac15340_fromStruct(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _124131_decl, jule::Ptr<_1aa966767_Struct>* _124163_s) {
	if ((!(_1aab50c92_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_124163_s))))._field_Public, (*((*(_124163_s))))._field_Token)))) {
		_1aac11737_pushErr(_self_, (*((*(_124131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124131_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_124131_decl))))._field_Generics.len() > 0LL)) {
			_1aac11737_pushErr(_self_, (*((*(_124131_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1aa969605_StructIns>(_1aa969605_StructIns{._field_Source=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Checked=false, ._field_Decl=(*(_124163_s)), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1aa9689cd_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1aaa3b221_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr)});;
	};
	jule::Bool _12597_ok = _1aac12da9_checkIllegalCycles(_self_, _124131_decl, jule::Any((*(_124163_s)), &__jule_any_type9));;
	if ((!(_12597_ok))) {
		return nullptr;;
	};
	_1aac1464c_appendUsedStructReference(_self_, _124163_s);
	jule::Ptr<_1aa969605_StructIns> _12657_ins = _1aac14a48_buildStructInstance(_self_, _124131_decl, _124163_s);;
	if ((_12657_ins == nullptr)) {
		return nullptr;;
	};
	_12597_ok=_1aab51a62_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_12657_ins))._field_Decl))._field_Generics.len(), (*_12657_ins.alloc)._field_Generics.len(), (*((*(_124131_decl))))._field_Token);
	if ((!(_12597_ok))) {
		return nullptr;;
	};
	return _1aac14e44_fromStructIns(_self_, &(_12657_ins), (*((*(_124131_decl))))._field_Token);;
}



inline jule::Trait _1aac15681_getDef(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl>* _128527_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be10187d:;
		if (it != expr_end) {
			jule::Ptr<_1aa10aa22_GenericDecl> _128610_g = *it;
			{
				if (((*(_128610_g))._field_Ident == (*((*(_128527_decl))))._field_Ident)) {
					return jule::Trait(_1aac20823_buildPrimType((*_128610_g.alloc)._field_Ident), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22);;
				};
			}
			_iter_next_1be10187d:;
			++it;
			goto _iter_begin_1be10187d;
		}
		_iter_end_1be10187d:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be101c24:;
		if (it != expr_end) {
			jule::Ptr<_1aabec1a1_TypeAlias> _129215_g = *it;
			{
				if (((*(_129215_g))._field_Ident == (*((*(_128527_decl))))._field_Ident)) {
					if (((*((*(_128527_decl))))._field_Generics.len() > 0LL)) {
						_1aac11737_pushErr(_self_, (*((*(_128527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128527_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1aa969605_StructIns> _12989_st = _1aac0254c_Struct((*((*_129215_g.alloc)._field_TypeSym))._field_Type.ptr());;
					if ((_12989_st != nullptr)) {
						jule::Bool _13006_ok = _1aac12da9_checkIllegalCycles(_self_, _128527_decl, jule::Any((*_12989_st.alloc)._field_Decl, &__jule_any_type9));;
						if ((!(_13006_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_129215_g))._field_TypeSym))._field_Type.alloc)._field_Kind;;
				};
			}
			_iter_next_1be101c24:;
			++it;
			goto _iter_begin_1be101c24;
		}
		_iter_end_1be101c24:;
	};
	if ((!((*((*(_128527_decl))))._field_Binded))) {
		jule::Ptr<_1aaa490db_Enum> _13108_e = ((_1aac23ae0_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1aac2364a_FindEnum((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident);;
		if ((_13108_e != nullptr)) {
			return jule::Trait(_1aac136a1_fromEnum(_self_, _128527_decl, &(_13108_e)), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data3);;
		};
		jule::Ptr<_1aaa4a7e6_TypeEnum> _13158_te = ((_1aac23ae0_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1aac2398b_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident);;
		if ((_13158_te != nullptr)) {
			return jule::Trait(_1aac13a9c_fromTypeEnum(_self_, _128527_decl, &(_13158_te)), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4);;
		};
		jule::Ptr<_1aaa46935_Trait> _13208_t = ((_1aac23ae0_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1aac23309_FindTrait((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident);;
		if ((_13208_t != nullptr)) {
			return jule::Trait(_1aac13e98_fromTrait(_self_, _128527_decl, &(_13208_t)), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1aac11737_pushErr(_self_, (*((*(_128527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa966767_Struct> _13297_s = ((_1aac23ae0_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1aac22abc_FindStruct((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident, (*((*(_128527_decl))))._field_Binded);;
	if ((_13297_s != nullptr)) {
		return jule::Trait(_1aac15340_fromStruct(_self_, _128527_decl, &(_13297_s)), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);;
	};
	jule::Ptr<_1aabec1a1_TypeAlias> _13347_ta = ((_1aac23ae0_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1aac226c1_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_128527_decl))))._field_Ident, (*((*(_128527_decl))))._field_Binded);;
	if (((_13347_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_13347_ta=_1aac79e32_findBuiltinTypeAlias((*((*(_128527_decl))))._field_Ident);
	};
	if ((_13347_ta != nullptr)) {
		return _1aac132a5_fromTypeAlias(_self_, _128527_decl, &(_13347_ta));;
	};
	_1aac11737_pushErr(_self_, (*((*(_128527_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128527_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1aac159c2_buildIdent(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ede22_IdentTypeDecl> _134630_decl) {
	return _1aac15681_getDef(_self_, &(_134630_decl));;
}



inline jule::Trait _1aac15d13_buildSubIdent(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ee1db_SubIdentTypeDecl> _135033_decl) {
	jule::Trait _13517_ident = _1aac159c2_buildIdent(_self_, (*(_135033_decl))._field_Idents[0LL]);;
	if ((_13517_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _13517_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4)) {
			_case_begin_1be11067d:;
			{
				goto _match_end_1be1101c7;
			}
		}
		else {
			_case_begin_1be10ebcc:;
			{
				_1aac11737_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be1101c7:;
	};
	jule::Ptr<_1aaa4a7e6_TypeEnum> _13627_t = _13517_ident.cast_ptr<_1aaa4a7e6_TypeEnum>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1aa0ede22_IdentTypeDecl>> _13637_idents = (*_135033_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_13637_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be111849:;
		if (it != expr_end) {
			jule::I32 _13647_i = it - expr->begin();
			jule::Ptr<_1aa0ede22_IdentTypeDecl> _136410_id = *it;
			{
				jule::Ptr<_1aaa4a21e_TypeEnumItem> _13658_item = _1aaa4b3da_FindItem(_13627_t.ptr(), (*(_136410_id))._field_Ident);;
				if ((_13658_item == nullptr)) {
					_1aac11737_pushErr(_self_, (*_136410_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_13627_t.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_136410_id.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				if (((_13637_idents.len() - _13647_i) == 1LL)) {
					_1aac12194_pushReferenceByKind(_self_, &((*((*(_13658_item))._field_TypeSym))._field_Type));
					return jule::Trait((*(*(_13658_item))._field_TypeSym.alloc)._field_Type, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data21);;
				};
				_13627_t=_1aac01a13_TypeEnum((*((*(_13658_item))._field_TypeSym))._field_Type.ptr());
				if ((_13627_t == nullptr)) {
					_1aac11737_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1be111849:;
			++it;
			_13647_i++;
			goto _iter_begin_1be111849;
		}
		_iter_end_1be111849:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aac0a6ed_Sptr> _1aac16154_buildSptrFromType(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aabecdb6_Type>* _138438_elem) {
	{
		
		if (((*(_138438_elem)) == nullptr)) {
			_case_begin_1be115908:;
			{
				return nullptr;;
			}
		}
		else if (((_1aac01c99_Arr((*(_138438_elem)).ptr()) != nullptr) && (*(_1aac01c99_Arr((*(_138438_elem)).ptr())))._field_Auto)) {
			_case_begin_1be1159a2:;
			{
				_1aac11737_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be1157e8:;
	};
	return jule::new_ptr<_1aac0a6ed_Sptr>(_1aac0a6ed_Sptr{._field_Elem=(*(_138438_elem))});;
}



inline jule::Ptr<_1aac0a6ed_Sptr> _1aac16495_buildSptr(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ee8b2_SptrTypeDecl> _139829_decl) {
	jule::Bool _13993_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13993_cycleRisk;
	});;
	jule::Ptr<_1aabecdb6_Type> _14037_elem = _1aac1d8ed_checkDecl(_self_, &((*(_139829_decl))._field_Elem));;
	return _1aac16154_buildSptrFromType(_self_, &(_14037_elem));;
}



inline jule::Ptr<_1aac0deb5_Ptr> _1aac167d6_buildPtrFromType(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aabecdb6_Type>* _140737_elem) {
	{
		
		if (((*(_140737_elem)) == nullptr)) {
			_case_begin_1be119885:;
			{
				return nullptr;;
			}
		}
		else if (((_1aac01c99_Arr((*(_140737_elem)).ptr()) != nullptr) && (*(_1aac01c99_Arr((*(_140737_elem)).ptr())))._field_Auto)) {
			_case_begin_1be11992e:;
			{
				_1aac11737_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1aac0deb5_Ptr>(_1aac0deb5_Ptr{._field_Elem=jule::Ptr<_1aabecdb6_Type>(nullptr)});;
			}
		}
		_match_end_1be119786:;
	};
	return jule::new_ptr<_1aac0deb5_Ptr>(_1aac0deb5_Ptr{._field_Elem=(*(_140737_elem))});;
}



inline jule::Ptr<_1aac0deb5_Ptr> _1aac16b27_buildPtr(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa100341_PtrTypeDecl> _142228_decl) {
	jule::Bool _14233_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14233_cycleRisk;
	});;
	jule::Ptr<_1aabecdb6_Type> _14277_elem = static_cast<jule::Ptr<_1aabecdb6_Type>>(nullptr);;
	if ((!(_1aa1006d7_IsUnsafe(_142228_decl.ptr())))) {
		_14277_elem=_1aac1d8ed_checkDecl(_self_, &((*_142228_decl.alloc)._field_Elem));
		return _1aac167d6_buildPtrFromType(_self_, &(_14277_elem));;
	};
	return jule::new_ptr<_1aac0deb5_Ptr>(_1aac0deb5_Ptr{._field_Elem=_14277_elem});;
}



inline jule::Ptr<_1aac0b1c1_Slc> _1aac16e68_buildSlc(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0eec47_SlcTypeDecl> _143928_decl) {
	jule::Bool _14403_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14403_cycleRisk;
	});;
	jule::Ptr<_1aabecdb6_Type> _14447_elem = _1aac1d8ed_checkDecl(_self_, &((*(_143928_decl))._field_Elem));;
	{
		
		if ((_14447_elem == nullptr)) {
			_case_begin_1be11eb32:;
			{
				return nullptr;;
			}
		}
		else if (((_1aac01c99_Arr(_14447_elem.ptr()) != nullptr) && (*(_1aac01c99_Arr(_14447_elem)))._field_Auto)) {
			_case_begin_1be11eb98:;
			{
				_1aac11737_pushErr(_self_, (*((*_143928_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be11eabb:;
	};
	return jule::new_ptr<_1aac0b1c1_Slc>(_1aac0b1c1_Slc{._field_Elem=_14447_elem});;
}



inline jule::Ptr<_1aac0d4e2_Arr> _1aac172a9_buildArr(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa100ad3_ArrTypeDecl> _146028_decl) {
	jule::I32 _14617_n = 0LL;;
	if ((!(_1aa100e79_AutoSized(_146028_decl.ptr())))) {
		jule::Ptr<_1aabb8db5_Data> _14648_size = _1aabdad3d_evalExpr(_1aab57408_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_146028_decl.alloc)._field_Size);;
		if ((_14648_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1aabb9800_IsConst(_14648_size.ptr())))) {
			_1aac11737_pushErr(_self_, (*((*_146028_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1aac00ec9_Prim((*(_14648_size))._field_Type.ptr()) == nullptr) || (!(_1aaabe606_IsInt((*(_1aac00ec9_Prim((*(_14648_size))._field_Type.ptr())))._field_Kind))))) {
			_1aac11737_pushErr(_self_, (*((*_146028_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_14617_n=static_cast<jule::I32>(_1aaa24e1e_AsI64((*(_14648_size))._field_Constant.ptr()));
		if ((_14617_n < 0LL)) {
			_1aac11737_pushErr(_self_, (*((*_146028_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14825_max = _1aaabc56b_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1aaab5586_BitSize != 64LL) && (static_cast<jule::I64>(_14617_n) > _14825_max))) {
				_1aac11737_pushErr(_self_, (*((*_146028_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabe8c5d_constoa(&((*_14648_size.alloc)._field_Constant)), &__jule_any_type5); (*it++) = jule::Any(_1a792e799_FmtInt(_14825_max, 10LL), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1aabecdb6_Type> _14917_elem = _1aac1d8ed_checkDecl(_self_, &((*(_146028_decl))._field_Elem));;
	{
		
		if ((_14917_elem == nullptr)) {
			_case_begin_1be129d6d:;
			{
				return nullptr;;
			}
		}
		else if (((_1aac01c99_Arr(_14917_elem.ptr()) != nullptr) && (*(_1aac01c99_Arr(_14917_elem)))._field_Auto)) {
			_case_begin_1be129e06:;
			{
				_1aac11737_pushErr(_self_, (*((*_146028_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be128256:;
	};
	return jule::new_ptr<_1aac0d4e2_Arr>(_1aac0d4e2_Arr{._field_Auto=_1aa100e79_AutoSized(_146028_decl), ._field_N=_14617_n, ._field_Elem=_14917_elem});;
}



inline jule::Ptr<_1aac0c865_Map> _1aac175ea_buildMap(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa101331_MapTypeDecl> _150928_decl) {
	jule::Bool _15103_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15103_cycleRisk;
	});;
	jule::Ptr<_1aabecdb6_Type> _15147_key = _1aac1d8ed_checkDecl(_self_, &((*(_150928_decl))._field_Key));;
	if ((_15147_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aabecdb6_Type> _15197_val = _1aac1d8ed_checkDecl(_self_, &((*_150928_decl.alloc)._field_Val));;
	if ((_15197_val == nullptr)) {
		return nullptr;;
	};
	if ((_1aac0177c_Enum(_15197_val.ptr()) != nullptr)) {
		_1aac11737_pushErr(_self_, (*((*_150928_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1aa966767_Struct> _15288_s = _1aa5cebc7_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1aac1464c_appendUsedStructReference(_self_, &(_15288_s));
		jule::Ptr<_1aa969605_StructIns> _15308_ins = _1aa966b85_instance(_15288_s);;
		(*(_15308_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aabeb4d0_InsGeneric>(_1aabeb4d0_InsGeneric{._field_Type=_15147_key, ._field_Constraint=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr)}); (*it++) = jule::new_ptr<_1aabeb4d0_InsGeneric>(_1aabeb4d0_InsGeneric{._field_Type=_15197_val, ._field_Constraint=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr)}); __jule_collection; });
		_1aac14e44_fromStructIns(_self_, &(_15308_ins), (*((*_150928_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1aac0c865_Map>(_1aac0c865_Map{._field_Key=_15147_key, ._field_Val=_15197_val});;
}



inline jule::Ptr<_1aac0bcb5_Tuple> _1aac1793b_buildTuple(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa100044_TupleTypeDecl> _154130_decl) {
	jule::Slice<jule::Ptr<_1aabecdb6_Type>> _15427_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(0LL, (*(_154130_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aabecdb6_Type>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_154130_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be133ecb:;
		if (it != expr_end) {
			jule::Ptr<_1aa0ed817_TypeDecl> _154315_t = *it;
			{
				jule::Ptr<_1aabecdb6_Type> _15448_kind = _1aac1d8ed_checkDecl(_self_, &(_154315_t));;
				if ((_15448_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1aabecdb6_Type>> &__jule_push_dest = _15427_types; __jule_push_dest.push(_15448_kind); };
			}
			_iter_next_1be133ecb:;
			++it;
			goto _iter_begin_1be133ecb;
		}
		_iter_end_1be133ecb:;
	};
	return jule::new_ptr<_1aac0bcb5_Tuple>(_1aac0bcb5_Tuple{._field_Types=_15427_types});;
}



inline jule::Bool _1aac17c7c_checkFuncTypes(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _155435_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_155435_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be1359e4:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3d179_ParamIns> _155515_p = *it;
			{
				(*(_155515_p))._field_Type=_1aac1d5ac_build(_self_, &((*((*((*((*_155515_p.alloc)._field_Decl))._field_TypeSym))._field_Decl))._field_Kind));
				__jule_func_result=((*_155515_p.alloc)._field_Type != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1aab5b055_checkFnParamKind((*(_self_))._field_s, &(_155515_p));
			}
			_iter_next_1be1359e4:;
			++it;
			goto _iter_begin_1be1359e4;
		}
		_iter_end_1be1359e4:;
	};
	if ((!(_1aaa3b6c7_IsVoid((*((*(_155435_f))))._field_Decl.ptr())))) {
		(*((*(_155435_f))))._field_Result=_1aac1d5ac_build(_self_, &((*((*((*((*(*((*(_155435_f))))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_155435_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aaa3e2ce_FnIns> _1aac180bd_buildFunc(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa959617_FnDecl> _157229_decl) {
	jule::Bool _15733_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15733_cycleRisk;
	});;
	if (((*(_157229_decl))._field_Generics.len() > 0LL)) {
		_1aac11737_pushErr(_self_, (*_157229_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aaa3b221_Fn> _15827_f = _1aab2135b_buildFunc(_157229_decl);;
	jule::I32 _15843_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1aab653d3_checkAnonFuncDecl((*(_self_))._field_s, &(_15827_f));
	if ((_15843_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _15907_ins = _1aaa3c72d_instanceForce(_15827_f);;
	(*(_15907_ins))._field_Anon=true;
	(*_15907_ins.alloc)._field_AsAnon=true;
	jule::Bool _15943_ok = _1aac17c7c_checkFuncTypes(_self_, &(_15907_ins));;
	if ((!(_15943_ok))) {
		return nullptr;;
	};
	return _15907_ins;;
}



inline jule::Trait _1aac1840e_buildNamespace(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ee5b5_NamespaceTypeDecl> _160234_ns) {
	jule::Ptr<_1aab2ee08_ImportInfo> _16037_imp = _1aabea7dc_findNamespace((*(_self_))._field_lookup, (*((*(_160234_ns))._field_Namespace))._field_Kind);;
	if (((_16037_imp == nullptr) || (!(_1aab323a0_isLookupable(_16037_imp.ptr()))))) {
		_1aac11737_pushErr(_self_, (*_160234_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_160234_ns))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1aac11b33_disallowBuiltin(_self_);
	jule::Trait _16107_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_16037_imp, (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data2);
	jule::Ptr<_1aabecdb6_Type> _16127_kind = _1aac1d8ed_checkDecl(_self_, &((*_160234_ns.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_16107_lookup;
	_1aac11935_allowBuiltin(_self_);
	return jule::Trait(_16127_kind, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data21);;
}



inline jule::Ptr<_1aabecdb6_Type> _1aac1d5ac_build(_1aac10ea6_typeChecker* _self_, jule::Any* _161826_declKind) {
	jule::Trait _161911_kind = nullptr;;
	{
		auto &_match_expr{ (*(_161826_declKind)) };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1be1436e4:;
			{
				jule::Trait _16228_t = _1aac159c2_buildIdent(_self_, (*(_161826_declKind)).cast_ptr<_1aa0ede22_IdentTypeDecl>(&__jule_any_type78));;
				if ((_16228_t != nullptr)) {
					_161911_kind=_16228_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1be143c66:;
			{
				jule::Trait _16278_t = _1aac15d13_buildSubIdent(_self_, (*(_161826_declKind)).cast_ptr<_1aa0ee1db_SubIdentTypeDecl>(&__jule_any_type88));;
				if ((_16278_t != nullptr)) {
					_161911_kind=_16278_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1be143051:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aac0a6ed_Sptr> _16338_t = _1aac16495_buildSptr(_self_, (*(_161826_declKind)).cast_ptr<_1aa0ee8b2_SptrTypeDecl>(&__jule_any_type75));;
				if ((_16338_t != nullptr)) {
					_161911_kind=jule::Trait(_16338_t, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1be1431a5:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aac0deb5_Ptr> _16398_t = _1aac16b27_buildPtr(_self_, (*(_161826_declKind)).cast_ptr<_1aa100341_PtrTypeDecl>(&__jule_any_type74));;
				if ((_16398_t != nullptr)) {
					_161911_kind=jule::Trait(_16398_t, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1be14321b:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aac0b1c1_Slc> _16458_t = _1aac16e68_buildSlc(_self_, (*(_161826_declKind)).cast_ptr<_1aa0eec47_SlcTypeDecl>(&__jule_any_type73));;
				if ((_16458_t != nullptr)) {
					_161911_kind=jule::Trait(_16458_t, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1be143282:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aac0d4e2_Arr> _16518_t = _1aac172a9_buildArr(_self_, (*(_161826_declKind)).cast_ptr<_1aa100ad3_ArrTypeDecl>(&__jule_any_type72));;
				if ((_16518_t != nullptr)) {
					_161911_kind=jule::Trait(_16518_t, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1be1432e8:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aac0c865_Map> _16578_t = _1aac175ea_buildMap(_self_, (*(_161826_declKind)).cast_ptr<_1aa101331_MapTypeDecl>(&__jule_any_type76));;
				if ((_16578_t != nullptr)) {
					_161911_kind=jule::Trait(_16578_t, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1be14335e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aac0bcb5_Tuple> _16638_t = _1aac1793b_buildTuple(_self_, (*(_161826_declKind)).cast_ptr<_1aa100044_TupleTypeDecl>(&__jule_any_type77));;
				if ((_16638_t != nullptr)) {
					_161911_kind=jule::Trait(_16638_t, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1be1433d6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aaa3e2ce_FnIns> _16698_t = _1aac180bd_buildFunc(_self_, (*(_161826_declKind)).cast_ptr<_1aa959617_FnDecl>(&__jule_any_type68));;
				if ((_16698_t != nullptr)) {
					_161911_kind=jule::Trait(_16698_t, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1be143d54:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16758_t = _1aac1840e_buildNamespace(_self_, (*(_161826_declKind)).cast_ptr<_1aa0ee5b5_NamespaceTypeDecl>(&__jule_any_type92));;
				if ((_16758_t != nullptr)) {
					_161911_kind=_16758_t;
				};
			}
		}
		else {
			_case_begin_1be14313e:;
			{
				_1aac11737_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be1430c8:;
	};
	if ((_161911_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _161911_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data21)) {
			_case_begin_1be1509a9:;
			{
				return _161911_kind.cast_ptr<_1aabecdb6_Type>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1be14e3d1:;
			{
				jule::Ptr<_1aabecdb6_Type> _16908_tk = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=_161911_kind});;
				{
					auto &_match_expr{ _161911_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)) {
						_case_begin_1be15026c:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1aabecdb6_Type>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16908_tk); };
								};
							};
						}
					}
					_match_end_1be150206:;
				};
				return _16908_tk;;
			}
		}
		_match_end_1be14d8db:;
	};
}



inline jule::Ptr<_1aabecdb6_Type> _1aac1d8ed_checkDecl(_1aac10ea6_typeChecker* _self_, jule::Ptr<_1aa0ed817_TypeDecl>* _170130_decl) {
	jule::Ptr<_1aa0d7ceb_Token> _17037_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_170130_decl))))._field_Token;
	jule::Ptr<_1aabecdb6_Type> _17067_kind = _1aac1d5ac_build(_self_, &((*((*(_170130_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_17037_errorToken;
	return _17067_kind;;
}








inline jule::Bool _1aac1ddc6_identTypeLookup_eq(_1aac1ddc6_identTypeLookup *_self_, _1aac1ddc6_identTypeLookup _other_) { return true; }

inline jule::Bool static__1aac1e349_prim(jule::Str* _172818_ident, jule::Ptr<_1aac06bc2_Prim> _172830_t) {
	return ((*(_172830_t))._field_Kind == (*(_172818_ident)));;
}



inline jule::Bool static__1aac1e6bd_exist(jule::Str* _173219_ident, jule::Ptr<_1aabecdb6_Type>* _173236_k) {
	{
		
		if ((_1aac00ec9_Prim((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1be1551c8:;
			{
				return static__1aac1e349_prim(_173219_ident, _1aac00ec9_Prim((*(_173236_k)).ptr()));;
			}
		}
		else if ((_1aac01260_Sptr((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1be15523e:;
			{
				jule::Ptr<_1aac0a6ed_Sptr> _17378_sptr = _1aac01260_Sptr((*(_173236_k)).ptr());;
				return static__1aac1e6bd_exist(_173219_ident, &((*(_17378_sptr))._field_Elem));;
			}
		}
		else if ((_1aac014e6_Ptr((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1be1552b6:;
			{
				jule::Ptr<_1aac0deb5_Ptr> _17408_ptr = _1aac014e6_Ptr((*(_173236_k)).ptr());;
				return static__1aac1e6bd_exist(_173219_ident, &((*(_17408_ptr))._field_Elem));;
			}
		}
		else if ((_1aac02030_Slc((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1be15533d:;
			{
				jule::Ptr<_1aac0b1c1_Slc> _17438_slc = _1aac02030_Slc((*(_173236_k)).ptr());;
				return static__1aac1e6bd_exist(_173219_ident, &((*(_17438_slc))._field_Elem));;
			}
		}
		else if ((_1aac01c99_Arr((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1be15552a:;
			{
				jule::Ptr<_1aac0d4e2_Arr> _17468_arr = _1aac01c99_Arr((*(_173236_k)).ptr());;
				return static__1aac1e6bd_exist(_173219_ident, &((*(_17468_arr))._field_Elem));;
			}
		}
		else if ((_1aac02d00_Map((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1be155591:;
			{
				jule::Ptr<_1aac0c865_Map> _17498_m = _1aac02d00_Map((*(_173236_k)).ptr());;
				return (static__1aac1e6bd_exist(_173219_ident, &((*(_17498_m))._field_Key)) || static__1aac1e6bd_exist(_173219_ident, &((*(_17498_m))._field_Val)));;
			}
		}
		else if ((_1aac0254c_Struct((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1be155607:;
			{
				jule::Ptr<_1aa969605_StructIns> _17538_s = _1aac0254c_Struct((*(_173236_k)).ptr());;
				{
					auto expr = &((*(_17538_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be15c8a6:;
					if (it != expr_end) {
						jule::Ptr<_1aabeb4d0_InsGeneric> _175416_g = *it;
						{
							if (static__1aac1e6bd_exist(_173219_ident, &((*(_175416_g))._field_Type))) {
								return true;;
							};
						}
						_iter_next_1be15c8a6:;
						++it;
						goto _iter_begin_1be15c8a6;
					}
					_iter_end_1be15c8a6:;
				};
				return false;;
			}
		}
		else if ((_1aac022b6_Fn((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1be15566d:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _17618_f = _1aac022b6_Fn((*(_173236_k)).ptr());;
				{
					auto expr = &((*(_17618_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be15e28c:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3d179_ParamIns> _176216_p = *it;
						{
							if (_1aaa39d9b_IsSelf((*(_176216_p))._field_Decl.ptr())) {
								goto _iter_next_1be15e28c;
							};
							if (static__1aac1e6bd_exist(_173219_ident, &((*(_176216_p))._field_Type))) {
								return true;;
							};
						}
						_iter_next_1be15e28c:;
						++it;
						goto _iter_begin_1be15e28c;
					}
					_iter_end_1be15e28c:;
				};
				if (((*_17618_f.alloc)._field_Result != nullptr)) {
					return static__1aac1e6bd_exist(_173219_ident, &((*_17618_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1aac03086_Tup((*(_173236_k)).ptr()) != nullptr)) {
			_case_begin_1be1556d4:;
			{
				jule::Ptr<_1aac0bcb5_Tuple> _17758_tup = _1aac03086_Tup((*(_173236_k)).ptr());;
				{
					auto expr = &((*(_17758_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be161b0d:;
					if (it != expr_end) {
						jule::Ptr<_1aabecdb6_Type> _177616_t = *it;
						{
							if (static__1aac1e6bd_exist(_173219_ident, &(_177616_t))) {
								return true;;
							};
						}
						_iter_next_1be161b0d:;
						++it;
						goto _iter_begin_1be161b0d;
					}
					_iter_end_1be161b0d:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1be1550a7:;
			{
				return false;;
			}
		}
		_match_end_1be154e97:;
	};
}















inline void _1ab5ccbb3_stop(_1ab5cc50e_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1ab5cce49_stopped(_1ab5cc50e_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1ab5cd1d0_finished(_1ab5cc50e_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1ab5cd466_isLastSt(_1ab5cc50e_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1ab5cd7c9_pushErr(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1aa0d7ceb_Token> _15423_token, jule::Str _15445_fmt) {
	_1ab5eacbe_pushErr((*(_self_))._field_p.ptr(), _15423_token, _15445_fmt, jule::Slice<jule::Any>());
}



inline void _1ab5cdb3c_pushSuggestion(_1ab5cc50e_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args) {
	_1ab5eb132_pushSuggestion((*(_self_))._field_p.ptr(), _15930_fmt, _15950_args);
}



inline void _1ab5cdde5_insertAsNext(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _16333_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1ab5cbb6d_stmt>(_1ab5cbb6d_stmt{._field_tokens=(*(_16333_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1ab5cbb6d_stmt> _1ab5ce17b_next(_1ab5cc50e_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1aa957978_ScopeTree> _1ab5ce577_buildScope(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _17331_tokens, jule::Ptr<_1aa0d7ceb_Token> _17360_end) {
	jule::Ptr<_1aa957978_ScopeTree> _1747_s = _1ab5ca8e7_newScope();;
	(*(_1747_s))._field_Parent=(*(_self_))._field_s;
	(*_1747_s.alloc)._field_End=_17360_end;
	_1ab5cc50e_scopeParser _1777_ssp = _1ab5cc50e_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1ab5cbb6d_stmt>>(nullptr), ._field_pos=0};;
	_1ab5d93ea_build(&_1777_ssp, _17331_tokens, &(_1747_s));
	return _1747_s;;
}



inline jule::Ptr<_1aa95a7c2_VarDecl> _1ab5ce8b8_buildVarSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _18431_tokens) {
	jule::Ptr<_1aa95a7c2_VarDecl> _1857_v = _1ab5eda91_buildVar((*(_self_))._field_p, (*(_18431_tokens)));;
	if ((_1857_v != nullptr)) {
		(*_1857_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _1857_v;;
}



inline jule::Ptr<_1aa95ab9b_RetSt> _1ab5cec09_buildRetSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _19230_tokens) {
	jule::Ptr<_1aa95ab9b_RetSt> _1937_st = jule::new_ptr<_1aa95ab9b_RetSt>(_1aa95ab9b_RetSt{._field_Token=_19230_tokens[0LL], ._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
	if ((_19230_tokens.len() > 1LL)) {
		(_19230_tokens).mut_slice(1LL);;
		(*(_1937_st))._field_Expr=_1ab5eb473_buildExpr((*(_self_))._field_p, &(_19230_tokens));
	};
	return _1937_st;;
}



inline jule::Ptr<_1aa95b41b_Iter> _1ab5d004a_buildWhileNextIter(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1ab5cbb6d_stmt>* _20339_s) {
	jule::Ptr<_1aa95b41b_Iter> _2047_it = jule::new_ptr<_1aa95b41b_Iter>(_1aa95b41b_Iter{._field_Comptime=false, ._field_Token=(*((*(_20339_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _2077_tokens = (*((*(_20339_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1aa95bc46_WhileKind> _2087_kind = jule::new_ptr<_1aa95bc46_WhileKind>(_1aa95bc46_WhileKind{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1aa0d7ceb_Token>(nullptr)});;
	if ((_2077_tokens.len() > 0LL)) {
		(*_2087_kind.alloc)._field_Expr=_1ab5eb473_buildExpr((*(_self_))._field_p, &(_2077_tokens));
	};
	if (_1ab5cd466_isLastSt(_self_)) {
		_1ab5cd7c9_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2077_tokens=(*(_1ab5ce17b_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _2207_stTokens = _1ab5e5714_getBlockExpr(&(_2077_tokens));;
	if ((_2207_stTokens.len() > 0LL)) {
		jule::Ptr<_1ab5cbb6d_stmt> _2228_stmt = jule::new_ptr<_1ab5cbb6d_stmt>(_1ab5cbb6d_stmt{._field_tokens=_2207_stTokens, ._field_terminated=(*((*(_20339_s))))._field_terminated});;
		(*_2087_kind.alloc)._field_NextToken=_2207_stTokens[0LL];
		(*_2087_kind.alloc)._field_Next=_1ab5d9087_buildSt(_self_, &(_2228_stmt));
	};
	jule::I32 _2307_i = _2207_stTokens.len();;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _2317_blockTokens = _1ab5e898c_range(&(_2307_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_2077_tokens));;
	if ((_2317_blockTokens == nullptr)) {
		_1ab5ccbb3_stop(_self_);
		_1ab5cd7c9_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ab5cdb3c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2307_i < _2077_tokens.len())) {
		_1ab5cd7c9_pushErr(_self_, _2077_tokens[_2307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_2047_it))._field_Scope=_1ab5ce577_buildScope(_self_, &(_2317_blockTokens), _2077_tokens[(_2307_i - 1LL)]);
	(*_2047_it.alloc)._field_Kind=jule::Any(_2087_kind, &__jule_any_type33);
	return _2047_it;;
}



inline jule::Ptr<_1aa95bc46_WhileKind> _1ab5d038b_buildWhileIterKind(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _24839_tokens) {
	return jule::new_ptr<_1aa95bc46_WhileKind>(_1aa95bc46_WhileKind{._field_Expr=_1ab5eb473_buildExpr((*(_self_))._field_p, _24839_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1aa0d7ceb_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _1ab5d06cc_getRangeKindKeysTokens(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _25443_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _2557_vars;
	jule::Slice<_1ace263b7_Log> _25513_errs;
	({
		__jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab5e920c_parts(_25443_toks, static_cast<jule::U32>(5LLU), true);
		_2557_vars = __jule_assign_result.__jule_result_arg0;
		_25513_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_25513_errs);
	return _2557_vars;;
}



inline jule::Ptr<_1aa95a7c2_VarDecl> _1ab5d0a1d_buildRangeKindKey(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _26038_tokens) {
	if (((*(_26038_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1aa95a7c2_VarDecl> _2647_key = jule::new_ptr<_1aa95a7c2_VarDecl>(_1aa95a7c2_VarDecl{._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_Token=(*(_26038_tokens))[0LL], ._field_Setter=(*(_26038_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
	if (((*((*(_2647_key))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_2647_key.alloc)._field_Mutable=true;
		if (((*(_26038_tokens)).len() == 1LL)) {
			_1ab5cd7c9_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2647_key.alloc)._field_Token=(*(_26038_tokens))[1LL];
	} else if (((*(_26038_tokens)).len() > 1LL)) {
		_1ab5cd7c9_pushErr(_self_, (*(_26038_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2647_key))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab5cd7c9_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ab5cdb3c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_2647_key))._field_Ident=(*((*_2647_key.alloc)._field_Token))._field_Kind;
	return _2647_key;;
}



inline jule::Slice<jule::Ptr<_1aa95a7c2_VarDecl>> _1ab5d0d5e_buildRangeKindKeys(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>>* _28639_parts) {
	jule::Slice<jule::Ptr<_1aa95a7c2_VarDecl>> _28711_keys = nullptr;;
	{
		auto expr = _28639_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be32a535:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _28815_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa95a7c2_VarDecl>> &__jule_push_dest = _28711_keys; __jule_push_dest.push(_1ab5d0a1d_buildRangeKindKey(_self_, &(_28815_tokens))); };
			}
			_iter_next_1be32a535:;
			++it;
			goto _iter_begin_1be32a535;
		}
		_iter_end_1be32a535:;
	};
	return _28711_keys;;
}



inline void _1ab5d11c2_setupRangeKindKeysPlain(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1aa95c64d_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _29471_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _2957_keyTokens = _1ab5d06cc_getRangeKindKeysTokens(_self_, _29471_tokens);;
	if ((_2957_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_2957_keyTokens.len() > 2LL)) {
		_1ab5cd7c9_pushErr(_self_, (*((*(_29444_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1aa95a7c2_VarDecl>> _3027_keys = _1ab5d0d5e_buildRangeKindKeys(_self_, &(_2957_keyTokens));;
	(*((*(_29444_rng))))._field_KeyA=_3027_keys[0LL];
	if ((_3027_keys.len() > 1LL)) {
		(*((*(_29444_rng))))._field_KeyB=_3027_keys[1LL];
	};
}



inline void _1ab5d1535_setupRangeKindKeysExplicit(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1aa95c64d_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _30974_tokens) {
	jule::I32 _3107_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _3117_rang = _1ab5e898c_range(&(_3107_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _30974_tokens);;
	if ((_3107_i < (*(_30974_tokens)).len())) {
		_1ab5cd7c9_pushErr(_self_, (*((*(_30947_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1ab5d11c2_setupRangeKindKeysPlain(_self_, _30947_rng, &(_3117_rang));
}



inline void _1ab5d1898_setupRangeKindKeys(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1aa95c64d_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _31866_tokens) {
	if (((*((*(_31866_tokens))[0LL]))._field_Id == static_cast<jule::U32>(74LLU))) {
		_1ab5d1535_setupRangeKindKeysExplicit(_self_, _31839_rng, _31866_tokens);
		return;;
	};
	_1ab5d11c2_setupRangeKindKeysPlain(_self_, _31839_rng, _31866_tokens);
}



inline jule::Ptr<_1aa95c64d_RangeKind> _1ab5d1d4e_buildRangeIterKind(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _3278_exprTokens, jule::Ptr<_1aa0d7ceb_Token>* _32742_inToken) {
	jule::Ptr<_1aa95c64d_RangeKind> _3287_rng = jule::new_ptr<_1aa95c64d_RangeKind>(_1aa95c64d_RangeKind{._field_InToken=(*(_32742_inToken)), ._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1aa95a7c2_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1aa95a7c2_VarDecl>(nullptr)});;
	if (((*(_3278_exprTokens)).len() == 0LL)) {
		_1ab5cd7c9_pushErr(_self_, (*(_3287_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3287_rng;;
	};
	(*(_3287_rng))._field_Expr=_1ab5eb473_buildExpr((*(_self_))._field_p, _3278_exprTokens);
	if (((*(_32639_varTokens)).len() > 0LL)) {
		_1ab5d1898_setupRangeKindKeys(_self_, &(_3287_rng), _32639_varTokens);
	};
	return _3287_rng;;
}



inline jule::Any _1ab5d224a_buildCommonIterKind(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _34240_tokens, jule::Ptr<_1aa0d7ceb_Token>* _34266_errTok) {
	jule::I32 _3437_braceN = 0LL;;
	{
		auto expr = _34240_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3353db:;
		if (it != expr_end) {
			jule::I32 _3448_i = it - expr->begin();
			jule::Ptr<_1aa0d7ceb_Token> _34415_tok = *it;
			{
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1be335d48:;
						{
							(_3437_braceN)++;
							goto _iter_next_1be3353db;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1be336233:;
						{
							(_3437_braceN)--;
						}
					}
					_match_end_1be336134:;
				};
				if ((_3437_braceN != 0LL)) {
					goto _iter_next_1be3353db;
				};
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_1be337201:;
						{
							jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _3619_declTokens = (*(_34240_tokens)).slice(0LL, _3448_i);;
							jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _3629_exprTokens = (*(_34240_tokens)).slice((_3448_i + 1LL));;
							return jule::Any(_1ab5d1d4e_buildRangeIterKind(_self_, &(_3619_declTokens), &(_3629_exprTokens), &(_34415_tok)), &__jule_any_type35);;
						}
					}
					_match_end_1be337861:;
				};
			}
			_iter_next_1be3353db:;
			++it;
			_3448_i++;
			goto _iter_begin_1be3353db;
		}
		_iter_end_1be3353db:;
	};
	return jule::Any(_1ab5d038b_buildWhileIterKind(_self_, _34240_tokens), &__jule_any_type33);;
}



inline jule::Ptr<_1aa95b41b_Iter> _1ab5d258b_buildCommonIter(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _36935_tokens) {
	jule::Ptr<_1aa95b41b_Iter> _3707_it = jule::new_ptr<_1aa95b41b_Iter>(_1aa95b41b_Iter{._field_Comptime=false, ._field_Token=_36935_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr)});;
	(_36935_tokens).mut_slice(1LL);;
	if ((_36935_tokens.len() == 0LL)) {
		_1ab5ccbb3_stop(_self_);
		_1ab5cd7c9_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ab5cdb3c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _3807_exprTokens = _1ab5e5714_getBlockExpr(&(_36935_tokens));;
	if ((_3807_exprTokens.len() > 0LL)) {
		(*(_3707_it))._field_Kind=_1ab5d224a_buildCommonIterKind(_self_, &(_3807_exprTokens), &((*_3707_it.alloc)._field_Token));
	};
	jule::I32 _3847_i = _3807_exprTokens.len();;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _3857_scopeTokens = _1ab5e898c_range(&(_3847_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_36935_tokens));;
	if ((_3857_scopeTokens == nullptr)) {
		_1ab5ccbb3_stop(_self_);
		_1ab5cd7c9_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ab5cdb3c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_3847_i < _36935_tokens.len())) {
		_1ab5cd7c9_pushErr(_self_, _36935_tokens[_3847_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_3707_it))._field_Scope=_1ab5ce577_buildScope(_self_, &(_3857_scopeTokens), _36935_tokens[(_3847_i - 1LL)]);
	return _3707_it;;
}



inline jule::Ptr<_1aa95b41b_Iter> _1ab5d28cc_buildIterSt(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1ab5cbb6d_stmt>* _39932_st) {
	if ((*((*(_39932_st))))._field_terminated) {
		return _1ab5d004a_buildWhileNextIter(_self_, _39932_st);;
	};
	return _1ab5d258b_buildCommonIter(_self_, (*((*(_39932_st))))._field_tokens);;
}



inline jule::Ptr<_1aa95ca27_BreakSt> _1ab5d2c1d_buildBreakSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _40633_tokens) {
	jule::Ptr<_1aa95ca27_BreakSt> _4077_brk = jule::new_ptr<_1aa95ca27_BreakSt>(_1aa95ca27_BreakSt{._field_Token=(*(_40633_tokens))[0LL], ._field_Label=jule::Ptr<_1aa0d7ceb_Token>(nullptr)});;
	if (((*(_40633_tokens)).len() > 1LL)) {
		if (((*((*(_40633_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ab5cd7c9_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1ab5cdb3c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4077_brk))._field_Label=(*(_40633_tokens))[1LL];
			if (((*(_40633_tokens)).len() > 2LL)) {
				_1ab5cd7c9_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4077_brk;;
}



inline jule::Ptr<_1aa95ce01_ContSt> _1ab5d305e_buildContSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _42432_tokens) {
	jule::Ptr<_1aa95ce01_ContSt> _4257_cont = jule::new_ptr<_1aa95ce01_ContSt>(_1aa95ce01_ContSt{._field_Token=(*(_42432_tokens))[0LL], ._field_Label=jule::Ptr<_1aa0d7ceb_Token>(nullptr)});;
	if (((*(_42432_tokens)).len() > 1LL)) {
		if (((*((*(_42432_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ab5cd7c9_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1ab5cdb3c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4257_cont))._field_Label=(*(_42432_tokens))[1LL];
			if (((*(_42432_tokens)).len() > 2LL)) {
				_1ab5cd7c9_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4257_cont;;
}



inline jule::Ptr<_1aa95d3a7_If> _1ab5d33a0_buildIf(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _44228_tokens) {
	jule::Ptr<_1aa95d3a7_If> _4437_model = jule::new_ptr<_1aa95d3a7_If>(_1aa95d3a7_If{._field_Token=(*(_44228_tokens))[0LL], ._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr)});;
	((*(_44228_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _4477_exprTokens = _1ab5e5714_getBlockExpr(_44228_tokens);;
	jule::I32 _4487_i = 0LL;;
	if ((_4477_exprTokens.len() == 0LL)) {
		_1ab5cd7c9_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4487_i=_4477_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _4547_scopeTokens = _1ab5e898c_range(&(_4487_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _44228_tokens);;
	if ((_4547_scopeTokens == nullptr)) {
		_1ab5ccbb3_stop(_self_);
		_1ab5cd7c9_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ab5cdb3c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa0d7ceb_Token> _4617_end = (*(_44228_tokens))[(_4487_i - 1LL)];;
	if ((_4487_i < (*(_44228_tokens)).len())) {
		if (((*((*(_44228_tokens))[_4487_i]))._field_Id == static_cast<jule::U32>(14LLU))) {
			((*(_44228_tokens))).mut_slice(_4487_i);;
		} else {
			_1ab5cd7c9_pushErr(_self_, (*(_44228_tokens))[_4487_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_44228_tokens))=nullptr;
		};
	};
	(*(_4437_model))._field_Expr=_1ab5eb473_buildExpr((*(_self_))._field_p, &(_4477_exprTokens));
	(*_4437_model.alloc)._field_Scope=_1ab5ce577_buildScope(_self_, &(_4547_scopeTokens), _4617_end);
	return _4437_model;;
}



inline jule::Ptr<_1aa95d781_Else> _1ab5d36e1_buildElse(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _47530_tokens) {
	jule::Ptr<_1aa95d781_Else> _4767_els = jule::new_ptr<_1aa95d781_Else>(_1aa95d781_Else{._field_Token=(*(_47530_tokens))[0LL], ._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr)});;
	((*(_47530_tokens))).mut_slice(1LL);;
	jule::I32 _4807_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _4817_scopeTokens = _1ab5e898c_range(&(_4807_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47530_tokens);;
	if ((_4817_scopeTokens == nullptr)) {
		if ((_4807_i < (*(_47530_tokens)).len())) {
			_1ab5cd7c9_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1ab5ccbb3_stop(_self_);
			_1ab5cd7c9_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1ab5cdb3c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_4807_i < (*(_47530_tokens)).len())) {
		_1ab5cd7c9_pushErr(_self_, (*(_47530_tokens))[_4807_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_4767_els))._field_Scope=_1ab5ce577_buildScope(_self_, &(_4817_scopeTokens), (*(_47530_tokens))[(_4807_i - 1LL)]);
	return _4767_els;;
}



inline jule::Ptr<_1aa95dc37_Conditional> _1ab5d3a32_buildIfElseChain(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _49936_tokens) {
	jule::Ptr<_1aa95dc37_Conditional> _5007_chain = jule::new_ptr<_1aa95dc37_Conditional>(_1aa95dc37_Conditional{._field_Head=_1ab5d33a0_buildIf(_self_, &(_49936_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1aa95d3a7_If>>(nullptr), ._field_Default=jule::Ptr<_1aa95d781_Else>(nullptr)});;
	if (((*(_5007_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_49936_tokens.len() != 0LL)) {
		{
			if (((*(_49936_tokens[0LL]))._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_1be358211;
			};
			if (((_49936_tokens.len() > 1LL) && ((*(_49936_tokens[1LL]))._field_Id == static_cast<jule::U32>(13LLU)))) {
				(_49936_tokens).mut_slice(1LL);;
				jule::Ptr<_1aa95d3a7_If> _5129_elif = _1ab5d33a0_buildIf(_self_, &(_49936_tokens));;
				(*(_5007_chain))._field_Tail=jule::append((*_5007_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa95d3a7_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5129_elif; __jule_collection; }));
				goto _iter_next_1be358211;
			};
			(*(_5007_chain))._field_Default=_1ab5d36e1_buildElse(_self_, &(_49936_tokens));
			goto _iter_end_1be358211;
		}
	_iter_next_1be358211:;
	}
	_iter_end_1be358211:;;
	return _5007_chain;;
}



inline jule::Ptr<_1aa102b4b_Expr> _1ab5d3d73_buildCoCallSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _52233_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _5233_token = _52233_tokens[0LL];;
	(_52233_tokens).mut_slice(1LL);;
	jule::Ptr<_1aa102b4b_Expr> _5257_e = _1ab5eb473_buildExpr((*(_self_))._field_p, &(_52233_tokens));;
	if ((_5257_e == nullptr)) {
		return _5257_e;;
	};
	{
		auto &_match_expr{ (*(_5257_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1be35c666:;
			{
				(*((*(_5257_e))._field_Kind.unsafe_cast_ptr<_1aa106875_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1be35cba5:;
			{
				_1ab5cd7c9_pushErr(_self_, _5233_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1be35cb3e:;
	};
	return _5257_e;;
}



inline jule::Ptr<_1aa10b2c5_GotoSt> _1ab5d41b4_buildGotoSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _53832_tokens) {
	jule::Ptr<_1aa10b2c5_GotoSt> _5397_gt = jule::new_ptr<_1aa10b2c5_GotoSt>(_1aa10b2c5_GotoSt{._field_Token=(*(_53832_tokens))[0LL], ._field_Label=jule::Ptr<_1aa0d7ceb_Token>(nullptr)});;
	if (((*(_53832_tokens)).len() == 1LL)) {
		_1ab5cd7c9_pushErr(_self_, (*(_5397_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_53832_tokens)).len() > 2LL)) {
		_1ab5cd7c9_pushErr(_self_, (*(_53832_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1aa0d7ceb_Token> _5487_identToken = (*(_53832_tokens))[1LL];;
	if (((*(_5487_identToken))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab5cd7c9_pushErr(_self_, _5487_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ab5cdb3c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5397_gt;;
	};
	(*(_5397_gt))._field_Label=_5487_identToken;
	return _5397_gt;;
}



inline jule::Ptr<_1aa10b5c2_FallSt> _1ab5d4505_buildFallSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _55832_tokens) {
	jule::Ptr<_1aa10b5c2_FallSt> _5597_fll = jule::new_ptr<_1aa10b5c2_FallSt>(_1aa10b5c2_FallSt{._field_Token=(*(_55832_tokens))[0LL]});;
	if (((*(_55832_tokens)).len() > 1LL)) {
		_1ab5cd7c9_pushErr(_self_, (*(_55832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5597_fll;;
}



inline jule::Ptr<_1aa95e551_TypeAliasDecl> _1ab5d4846_buildTypeAliasSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _56837_tokens) {
	jule::Ptr<_1aa95e551_TypeAliasDecl> _5697_tad = _1ab5ecc16_buildTypeAliasDecl((*(_self_))._field_p, _56837_tokens);;
	(*(_5697_tad))._field_Scope=(*(_self_))._field_s;
	return _5697_tad;;
}



inline void _1ab5d4d1e_pushCaseExpr(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _57432_tokens, jule::Ptr<_1aa0d7ceb_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1aa102b4b_Expr>>* _57525_exprs) {
	if ((_57432_tokens.len() == 0LL)) {
		return;;
	};
	if (_5753_typeMatch) {
		jule::I32 _5808_i = 0LL;;
		jule::Ptr<_1aa0ed817_TypeDecl> _5818_t;
		jule::Bool _58111_ok;
		({
			__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType((*(_self_))._field_p, &(_57432_tokens), (&(_5808_i)), true);
			_5818_t = __jule_assign_result.__jule_result_arg0;
			_58111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_58111_ok) {
			{ jule::Slice<jule::Ptr<_1aa102b4b_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(jule::new_ptr<_1aa102b4b_Expr>(_1aa102b4b_Expr{._field_Token=_57432_tokens[0LL], ._field_End=_57432_tokens[(_57432_tokens.len() - 1LL)], ._field_Kind=jule::Any(_5818_t, &__jule_any_type90)})); };
			if ((_5808_i < _57432_tokens.len())) {
				_1ab5cd7c9_pushErr(_self_, _57432_tokens[_5808_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1aa102b4b_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(_1ab5eb473_buildExpr((*(_self_))._field_p, &(_57432_tokens))); };
}



inline __jule_tuple_sx_1aa102b4b_Expr__jule_tuple_bool _1ab5d52c5_buildCaseExprs(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _59735_tokens, jule::Ptr<_1aa0d7ceb_Token>* _59765_colon, jule::Bool _59787_typeMatch) {
	__jule_tuple_sx_1aa102b4b_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _5987_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa102b4b_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa102b4b_Expr>(nullptr); __jule_collection; });;
	jule::I32 _5997_braceN = 0LL;;
	jule::I32 _6007_j = 0LL;;
	{
		auto expr = _59735_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be369640:;
		if (it != expr_end) {
			jule::I32 _6018_i = it - expr->begin();
			jule::Ptr<_1aa0d7ceb_Token> _60115_tok = *it;
			{
				{
					auto &_match_expr{ (*(_60115_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1be36a94e:;
						{
							(_5997_braceN)++;
							goto _iter_next_1be369640;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1be36ad39:;
						{
							(_5997_braceN)--;
							goto _iter_next_1be369640;
						}
					}
					_match_end_1be36ac3a:;
				};
				if ((_5997_braceN != 0LL)) {
					goto _iter_next_1be369640;
				};
				{
					
					if (((*(_60115_tok))._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_1be36c401:;
						{
							jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _6205_exprTokens = (*(_59735_tokens)).slice(_6007_j, _6018_i);;
							if ((_6205_exprTokens.len() == 0LL)) {
								_1ab5cd7c9_pushErr(_self_, _60115_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1ab5d4d1e_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							};
							_6007_j=(_6018_i + 1LL);
						}
					}
					else if (((*(_60115_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_1be36c467:;
						{
							(*(_59765_colon))=_60115_tok;
							_1ab5d4d1e_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							((*(_59735_tokens))).mut_slice((_6018_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _5987_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6018_i - _6007_j) == 0LL) || (_5987_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1be36be06:;
				};
			}
			_iter_next_1be369640:;
			++it;
			_6018_i++;
			goto _iter_begin_1be369640;
		}
		_iter_end_1be369640:;
	};
	_1ab5cd7c9_pushErr(_self_, (*(_59735_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_59735_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa957978_ScopeTree> _1ab5d5616_buildCaseScope(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _63935_tokens) {
	jule::I32 _6407_n = 0LL;;
	for (;;) {
		{
			jule::I32 _6428_i = 0LL;;
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _6438_next;
			({
				__jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_bool __jule_assign_result = _1ab5cb83d_skipSt(&(_6428_i), (*(_63935_tokens)).slice(_6407_n));
				_6438_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6438_next.len() == 0LL)) {
				goto _iter_end_1be37103c;
			};
			jule::Ptr<_1aa0d7ceb_Token> _6474_tok = _6438_next[0LL];;
			if (((*(_6474_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_6407_n+=_6428_i;
				goto _iter_next_1be37103c;
			};
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _6528_scopeTokens = (*(_63935_tokens)).slice(0LL, _6407_n);;
			jule::Ptr<_1aa957978_ScopeTree> _6538_scope = _1ab5ce577_buildScope(_self_, &(_6528_scopeTokens), (*(_63935_tokens))[_6407_n]);;
			((*(_63935_tokens))).mut_slice(_6407_n);;
			return _6538_scope;;
		}
	_iter_next_1be37103c:;
	}
	_iter_end_1be37103c:;;
	jule::Ptr<_1aa0d7ceb_Token> _65711_end;;
	if (((*(_63935_tokens)).len() > 0LL)) {
		_65711_end=(*(_63935_tokens))[((*(_63935_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1aa957978_ScopeTree> _6617_scope = _1ab5ce577_buildScope(_self_, _63935_tokens, _65711_end);;
	(*(_63935_tokens))=nullptr;
	return _6617_scope;;
}



inline __jule_tuple_x_1aa95ea07_Case__jule_tuple_bool _1ab5d5a12_buildCase(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _66630_tokens, jule::Bool _66655_typeMatch) {
	__jule_tuple_x_1aa95ea07_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa95ea07_Case> _6677_c = jule::new_ptr<_1aa95ea07_Case>(_1aa95ea07_Case{._field_Token=(*(_66630_tokens))[0LL], ._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1aa102b4b_Expr>>(nullptr)});;
	((*(_66630_tokens))).mut_slice(1LL);;
	jule::Ptr<_1aa0d7ceb_Token> _67111_colon = nullptr;;
	if (((*(_66630_tokens)).len() == 0LL)) {
		_1ab5cd7c9_pushErr(_self_, (*(_6677_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _67612_ok;
	({
		__jule_tuple_sx_1aa102b4b_Expr__jule_tuple_bool __jule_assign_result = _1ab5d52c5_buildCaseExprs(_self_, _66630_tokens, &(_67111_colon), _66655_typeMatch);
		(*(_6677_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_67612_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_6677_c))._field_Scope=_1ab5d5616_buildCaseScope(_self_, _66630_tokens);
	if (((*((*_6677_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_6677_c))._field_Scope.alloc)._field_End=_67111_colon;
	};
	jule::Bool _6813_isDefault = (_67612_ok && ((*_6677_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6677_c;
	__jule_func_result.__jule_result_arg1 = _6813_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1aa95ea07_Case__jule_tuple_x_1aa95d781_Else _1ab5d5e0d_buildCases(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _68530_tokens, jule::Bool _68555_typeMatch) {
	__jule_tuple_sx_1aa95ea07_Case__jule_tuple_x_1aa95d781_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1aa95ea07_Case>> _68611_cases = nullptr;;
	jule::Ptr<_1aa95d781_Else> _68711_def = nullptr;;
	jule::Bool _6887_defNotLast = false;;
	while ((_68530_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _6908_tok = _68530_tokens[0LL];;
			if (((*(_6908_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_1ab5cd7c9_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1be37a299;
			};
			jule::Ptr<_1aa95ea07_Case> _6958_c;
			jule::Bool _69511_isDefault;
			({
				__jule_tuple_x_1aa95ea07_Case__jule_tuple_bool __jule_assign_result = _1ab5d5a12_buildCase(_self_, &(_68530_tokens), _68555_typeMatch);
				_6958_c = __jule_assign_result.__jule_result_arg0;
				_69511_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_69511_isDefault) {
				(*(_6958_c))._field_Token=_6908_tok;
				if ((_68711_def == nullptr)) {
					_68711_def=jule::new_ptr<_1aa95d781_Else>(_1aa95d781_Else{._field_Token=(*_6958_c.alloc)._field_Token, ._field_Scope=(*_6958_c.alloc)._field_Scope});
				} else {
					_1ab5cd7c9_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_6887_defNotLast=(_6887_defNotLast || (_68711_def != nullptr));
				{ jule::Slice<jule::Ptr<_1aa95ea07_Case>> &__jule_push_dest = _68611_cases; __jule_push_dest.push(_6958_c); };
			};
		}
	_iter_next_1be37a299:;
	}
	_iter_end_1be37a299:;;
	if (_6887_defNotLast) {
		_1ab5cd7c9_pushErr(_self_, (*(_68711_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _68611_cases;
	__jule_func_result.__jule_result_arg1 = _68711_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa960321_MatchCase> _1ab5d624e_buildMatchCase(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _71934_tokens) {
	jule::Ptr<_1aa960321_MatchCase> _7207_m = jule::new_ptr<_1aa960321_MatchCase>(_1aa960321_MatchCase{._field_Comptime=false, ._field_Token=_71934_tokens[0LL], ._field_End=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1aa95ea07_Case>>(nullptr), ._field_Default=jule::Ptr<_1aa95d781_Else>(nullptr)});;
	(_71934_tokens).mut_slice(1LL);;
	if (((_71934_tokens.len() > 0LL) && ((*(_71934_tokens[0LL]))._field_Id == static_cast<jule::U32>(7LLU)))) {
		(*(_7207_m))._field_TypeMatch=true;
		(_71934_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _7307_exprTokens = _1ab5e5714_getBlockExpr(&(_71934_tokens));;
	if ((_7307_exprTokens.len() > 0LL)) {
		(*(_7207_m))._field_Expr=_1ab5eb473_buildExpr((*(_self_))._field_p, &(_7307_exprTokens));
	} else if ((*(_7207_m))._field_TypeMatch) {
		_1ab5cd7c9_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I32 _7377_i = _7307_exprTokens.len();;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _7387_blockToks = _1ab5e898c_range(&(_7377_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_71934_tokens));;
	if ((_7387_blockToks == nullptr)) {
		_1ab5ccbb3_stop(_self_);
		_1ab5cd7c9_pushErr(_self_, (*(_7207_m))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1ab5cdb3c_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7377_i < _71934_tokens.len())) {
		_1ab5cd7c9_pushErr(_self_, _71934_tokens[_7377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_7207_m))._field_End=_71934_tokens[(_7377_i - 1LL)];
	({
		__jule_tuple_sx_1aa95ea07_Case__jule_tuple_x_1aa95d781_Else __jule_assign_result = _1ab5d5e0d_buildCases(_self_, _7387_blockToks, (*_7207_m.alloc)._field_TypeMatch);
		(*_7207_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7207_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7207_m;;
}



inline jule::Ptr<_1aa957978_ScopeTree> _1ab5d6590_buildScopeSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _75232_tokens) {
	jule::Bool _7537_isUnsafe = false;;
	jule::Bool _7547_isDeferred = false;;
	jule::Ptr<_1aa0d7ceb_Token> _7557_token = _75232_tokens[0LL];;
	if (((*(_7557_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		_7537_isUnsafe=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1ab5cd7c9_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7557_token=_75232_tokens[0LL];
		if (((*(_7557_token))._field_Id == static_cast<jule::U32>(33LLU))) {
			_7547_isDeferred=true;
			(_75232_tokens).mut_slice(1LL);;
			if ((_75232_tokens.len() == 0LL)) {
				_1ab5cd7c9_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7557_token))._field_Id == static_cast<jule::U32>(33LLU))) {
		_7547_isDeferred=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1ab5cd7c9_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I32 _7817_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _7827_scopeTokens = _1ab5e898c_range(&(_7817_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_75232_tokens));;
	if ((_7827_scopeTokens == nullptr)) {
		_1ab5cd7c9_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_7817_i < _75232_tokens.len())) {
		_1ab5cd7c9_pushErr(_self_, _75232_tokens[_7817_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1aa957978_ScopeTree> _7897_scope = _1ab5ce577_buildScope(_self_, &(_7827_scopeTokens), _75232_tokens[(_7817_i - 1LL)]);;
	(*(_7897_scope))._field_Unsafety=_7537_isUnsafe;
	(*_7897_scope.alloc)._field_Deferred=_7547_isDeferred;
	return _7897_scope;;
}



inline jule::Ptr<_1aa10adeb_LabelSt> _1ab5d68d1_buildLabelSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _79533_tokens) {
	jule::Ptr<_1aa10adeb_LabelSt> _7967_lbl = jule::new_ptr<_1aa10adeb_LabelSt>(_1aa10adeb_LabelSt{._field_Token=(*(_79533_tokens))[0LL], ._field_Ident=(*((*(_79533_tokens))[0LL]))._field_Kind});;
	if (((*(_79533_tokens)).len() > 2LL)) {
		((*(_79533_tokens))).mut_slice(2LL);;
		_1ab5cdde5_insertAsNext(_self_, _79533_tokens);
	};
	return _7967_lbl;;
}



inline __jule_tuple__1aa956ed8_StmtData__jule_tuple_bool _1ab5d6c22_buildIdSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _81030_tokens) {
	__jule_tuple__1aa956ed8_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_81030_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1aa0d7ceb_Token> _8157_token = (*(_81030_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8157_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1be391c3e:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1ab5d68d1_buildLabelSt(_self_, _81030_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1be391e81:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ab5e70ea_assignInfo> _1ab5d7063_buildAssignInfo(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _82436_tokens) {
	jule::Ptr<_1ab5e70ea_assignInfo> _8257_info = jule::new_ptr<_1ab5e70ea_assignInfo>(_1ab5e70ea_assignInfo{._field_l=jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>(nullptr), ._field_setter=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_ok=true});;
	jule::I32 _8287_braceN = 0LL;;
	{
		auto expr = _82436_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3935d1:;
		if (it != expr_end) {
			jule::I32 _8298_i = it - expr->begin();
			jule::Ptr<_1aa0d7ceb_Token> _82915_token = *it;
			{
				{
					auto &_match_expr{ (*(_82915_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1be394181:;
						{
							(_8287_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1be394527:;
						{
							(_8287_braceN)--;
						}
					}
					_match_end_1be394428:;
				};
				{
					
					if ((_8287_braceN > 0LL)) {
						_case_begin_1be394604:;
						{
							goto _iter_next_1be3935d1;
						}
					}
					else if (((!(_1aa0dce11_IsAssignOp((*(_82915_token))._field_Id))) && ((*_82915_token.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_1be3955b1:;
						{
							goto _iter_next_1be3935d1;
						}
					}
					_match_end_1be395528:;
				};
				(*(_8257_info))._field_l=(*(_82436_tokens)).slice(0LL, _8298_i);
				if (((*_8257_info.alloc)._field_l.len() == 0LL)) {
					(*_8257_info.alloc)._field_ok=false;
				};
				(*_8257_info.alloc)._field_setter=_82915_token;
				if (((_8298_i + 1LL) >= (*(_82436_tokens)).len())) {
					(*_8257_info.alloc)._field_r=nullptr;
					(*_8257_info.alloc)._field_ok=_1aa0dcb47_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1be3935d1;
				};
				(*_8257_info.alloc)._field_r=(*(_82436_tokens)).slice((_8298_i + 1LL));
				if (_1aa0dcb47_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id)) {
					if (((*_8257_info.alloc)._field_r.len() > 0LL)) {
						_1ab5cd7c9_pushErr(_self_, (*(_8257_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8257_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1be3935d1;
			}
			_iter_next_1be3935d1:;
			++it;
			_8298_i++;
			goto _iter_begin_1be3935d1;
		}
		_iter_end_1be3935d1:;
	};
	return _8257_info;;
}



inline jule::Ptr<_1aa10bc32_AssignLeft> _1ab5d73a4_buildAssignL(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _86933_tokens) {
	jule::Ptr<_1aa10bc32_AssignLeft> _8707_l = jule::new_ptr<_1aa10bc32_AssignLeft>(_1aa10bc32_AssignLeft{._field_Token=(*(_86933_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
	if (((*((*(_86933_tokens))[0LL]))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*(_8707_l))._field_Ident=(*((*_8707_l.alloc)._field_Token))._field_Kind;
	};
	(*(_8707_l))._field_Expr=_1ab5eb473_buildExpr((*(_self_))._field_p, _86933_tokens);
	return _8707_l;;
}



inline jule::Slice<jule::Ptr<_1aa10bc32_AssignLeft>> _1ab5d76e5_buildAssignLs(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>>* _88034_parts) {
	jule::Slice<jule::Ptr<_1aa10bc32_AssignLeft>> _88111_lefts = nullptr;;
	{
		auto expr = _88034_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be39cc5b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _88215_part = *it;
			{
				jule::Ptr<_1aa10bc32_AssignLeft> _8838_l = _1ab5d73a4_buildAssignL(_self_, &(_88215_part));;
				{ jule::Slice<jule::Ptr<_1aa10bc32_AssignLeft>> &__jule_push_dest = _88111_lefts; __jule_push_dest.push(_8838_l); };
			}
			_iter_next_1be39cc5b:;
			++it;
			goto _iter_begin_1be39cc5b;
		}
		_iter_end_1be39cc5b:;
	};
	return _88111_lefts;;
}



inline __jule_tuple__1aa956ed8_StmtData__jule_tuple_bool _1ab5d7a36_buildPlainAssign(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _88937_tokens) {
	__jule_tuple__1aa956ed8_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab5e70ea_assignInfo> _8907_info = _1ab5d7063_buildAssignInfo(_self_, _88937_tokens);;
	if ((!((*(_8907_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa10c2b5_AssignSt> _8957_assign = jule::new_ptr<_1aa10c2b5_AssignSt>(_1aa10c2b5_AssignSt{._field_Declarative=false, ._field_Setter=(*(_8907_info))._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1aa10bc32_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
	if (((*((*_8907_info.alloc)._field_setter))._field_Id == static_cast<jule::U32>(38LLU))) {
		(*(_8957_assign))._field_Declarative=true;
		(*_8957_assign.alloc)._field_Right=_1ab5eb473_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
		jule::Bool _9034_ok = _1ab5d7e32_buildDeclAssign1(_self_, &((*_8907_info.alloc)._field_l), &(_8957_assign));;
		if ((!(_9034_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*(_8957_assign))._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1aa10bc32_AssignLeft> _9128_left = (*(_8957_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9128_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1be3a3987:;
				{
					jule::Ptr<_1aa95a7c2_VarDecl> _9159_decl = jule::new_ptr<_1aa95a7c2_VarDecl>(_1aa95a7c2_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9128_left))._field_Token, ._field_Setter=(*_8957_assign.alloc)._field_Setter, ._field_Ident=(*_9128_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9128_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9128_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Expr=(*_8957_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9159_decl, &__jule_any_type50);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_1be3a3921:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _9297_parts;
	jule::Slice<_1ace263b7_Log> _92914_errs;
	({
		__jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab5e920c_parts(&((*_8907_info.alloc)._field_l), static_cast<jule::U32>(5LLU), true);
		_9297_parts = __jule_assign_result.__jule_result_arg0;
		_92914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_92914_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_92914_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_8957_assign))._field_Left=_1ab5d76e5_buildAssignLs(_self_, &(_9297_parts));
	if (((*_8907_info.alloc)._field_r != nullptr)) {
		(*_8957_assign.alloc)._field_Right=_1ab5eb473_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab5d7e32_buildDeclAssign1(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _94337_lefts, jule::Ptr<_1aa10c2b5_AssignSt>* _94366_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _9457_parts;
	jule::Slice<_1ace263b7_Log> _94514_errs;
	({
		__jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab5e920c_parts(_94337_lefts, static_cast<jule::U32>(5LLU), true);
		_9457_parts = __jule_assign_result.__jule_result_arg0;
		_94514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_94514_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_94514_errs);
		return false;;
	};
	{
		auto expr = &(_9457_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3aa2da:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _95115_part = *it;
			{
				jule::Bool _9528_isMut = false;;
				jule::Bool _9538_isRef = false;;
				jule::Ptr<_1aa0d7ceb_Token> _9554_token = _95115_part[0LL];;
				if (((*(_9554_token))._field_Id == static_cast<jule::U32>(32LLU))) {
					_9528_isMut=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1ab5cd7c9_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_95115_part[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
					_9538_isRef=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1ab5cd7c9_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_95115_part[0LL]))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(_95115_part[0LL]))._field_Id != static_cast<jule::U32>(74LLU)))) {
					_1ab5cd7c9_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1aa10bc32_AssignLeft> _9798_l = _1ab5d73a4_buildAssignL(_self_, &(_95115_part));;
				if (((*(_9798_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*(_9798_l))._field_Mutable=_9528_isMut;
				(*_9798_l.alloc)._field_Reference=_9538_isRef;
				{ jule::Slice<jule::Ptr<_1aa10bc32_AssignLeft>> &__jule_push_dest = (*((*(_94366_assign))))._field_Left; __jule_push_dest.push(_9798_l); };
			}
			_iter_next_1be3aa2da:;
			++it;
			goto _iter_begin_1be3aa2da;
		}
		_iter_end_1be3aa2da:;
	};
	return true;;
}



inline __jule_tuple_x_1aa10c2b5_AssignSt__jule_tuple_bool _1ab5d8273_buildDeclAssign(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _99135_tokens) {
	__jule_tuple_x_1aa10c2b5_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99135_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99135_tokens).mut_slice(1LL);;
	jule::Ptr<_1aa0d7ceb_Token> _9977_token = _99135_tokens[0LL];;
	if (((*(_9977_token))._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa10c2b5_AssignSt> _10027_assign = jule::new_ptr<_1aa10c2b5_AssignSt>(_1aa10c2b5_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1aa10bc32_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
	jule::I32 _10067_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _10077_rang = _1ab5e898c_range(&(_10067_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_99135_tokens));;
	if ((_10077_rang == nullptr)) {
		_1ab5cd7c9_pushErr(_self_, _9977_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10067_i + 1LL) < _99135_tokens.len())) {
		(*(_10027_assign))._field_Setter=_99135_tokens[_10067_i];
		if (((*((*_10027_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1ab5cd7c9_pushErr(_self_, (*_10027_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10067_i)++;
		jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _10178_exprTokens = _99135_tokens.slice(_10067_i);;
		(*_10027_assign.alloc)._field_Right=_1ab5eb473_buildExpr((*(_self_))._field_p, &(_10178_exprTokens));
	};
	jule::Bool _10213_ok = _1ab5d7e32_buildDeclAssign1(_self_, &(_10077_rang), &(_10027_assign));;
	__jule_func_result.__jule_result_arg0 = _10027_assign;
	__jule_func_result.__jule_result_arg1 = _10213_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1aa956ed8_StmtData__jule_tuple_bool _1ab5d85b4_buildAssignSt(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _102534_tokens) {
	__jule_tuple__1aa956ed8_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1ab5e74a2_checkAssignTokens(_102534_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_102534_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1be3ba042:;
			{
				({
					__jule_tuple_x_1aa10c2b5_AssignSt__jule_tuple_bool __jule_assign_result = _1ab5d8273_buildDeclAssign(_self_, (*(_102534_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1be3b9492:;
			{
				({
					__jule_tuple__1aa956ed8_StmtData__jule_tuple_bool __jule_assign_result = _1ab5d7a36_buildPlainAssign(_self_, _102534_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1be3b98c1:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1aa103520_UseExpr> _1ab5d8905_buildUseExpr(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _103833_tokens) {
	if (((*(_103833_tokens)).len() == 1LL)) {
		_1ab5cd7c9_pushErr(_self_, (*(_103833_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1aa103520_UseExpr> _10437_ue = jule::new_ptr<_1aa103520_UseExpr>(_1aa103520_UseExpr{._field_Token=(*(_103833_tokens))[0LL], ._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
	((*(_103833_tokens))).mut_slice(1LL);;
	(*(_10437_ue))._field_Expr=_1ab5eb473_buildExpr((*(_self_))._field_p, _103833_tokens);
	return _10437_ue;;
}



inline jule::Any _1ab5d8c46_buildConstSt(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1ab5cbb6d_stmt>* _105133_st) {
	if (((*((*(_105133_st))))._field_tokens.len() == 1LL)) {
		_1ab5cd7c9_pushErr(_self_, (*((*(_105133_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_105133_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1be3be5c9:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1aa95b41b_Iter> _10598_iter = _1ab5d28cc_buildIterSt(_self_, _105133_st);;
				if ((_10598_iter != nullptr)) {
					(*_10598_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10598_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1be3be640:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1aa960321_MatchCase> _10668_mt = _1ab5d624e_buildMatchCase(_self_, (*((*(_105133_st))))._field_tokens);;
				if ((_10668_mt != nullptr)) {
					(*_10668_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10668_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1be3bd067:;
			{
				return jule::Any(_1ab5ce8b8_buildVarSt(_self_, &((*((*(_105133_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		_match_end_1be3be123:;
	};
}



inline jule::Any _1ab5d9087_buildSt(_1ab5cc50e_scopeParser* _self_, jule::Ptr<_1ab5cbb6d_stmt>* _107628_st) {
	jule::Ptr<_1aa0d7ceb_Token> _10777_token = (*((*(_107628_st))))._field_tokens[0LL];;
	if (((*(_10777_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _10798_s;
		jule::Bool _107911_ok;
		({
			__jule_tuple__1aa956ed8_StmtData__jule_tuple_bool __jule_assign_result = _1ab5d6c22_buildIdSt(_self_, &((*((*(_107628_st))))._field_tokens));
			_10798_s = __jule_assign_result.__jule_result_arg0;
			_107911_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_107911_ok) {
			return _10798_s;;
		};
	};
	jule::Any _10857_s;
	jule::Bool _108510_ok;
	({
		__jule_tuple__1aa956ed8_StmtData__jule_tuple_bool __jule_assign_result = _1ab5d85b4_buildAssignSt(_self_, &((*((*(_107628_st))))._field_tokens));
		_10857_s = __jule_assign_result.__jule_result_arg0;
		_108510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_108510_ok) {
		return _10857_s;;
	};
	{
		auto &_match_expr{ (*(_10777_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1be3c53b0:;
			{
				return jule::Any(_1ab5d8905_buildUseExpr(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1be3c5888:;
			{
				return _1ab5d8c46_buildConstSt(_self_, _107628_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1be3c58ee:;
			{
				return jule::Any(_1ab5ce8b8_buildVarSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1be3c5965:;
			{
				return jule::Any(_1ab5cec09_buildRetSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1be3c59cb:;
			{
				return jule::Any(_1ab5d28cc_buildIterSt(_self_, _107628_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1be3c5a42:;
			{
				return jule::Any(_1ab5d2c1d_buildBreakSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1be3c5ab9:;
			{
				return jule::Any(_1ab5d305e_buildContSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1be3c5b41:;
			{
				return jule::Any(_1ab5d3a32_buildIfElseChain(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1be3c5bb8:;
			{
				return jule::Any(_1ab5d3d73_buildCoCallSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_1be3c5c40:;
			{
				return jule::Any(_1ab5d41b4_buildGotoSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1be3c5cb7:;
			{
				return jule::Any(_1ab5d4505_buildFallSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1be3c5d3e:;
			{
				return jule::Any(_1ab5d4846_buildTypeAliasSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1be3c5db6:;
			{
				return jule::Any(_1ab5d624e_buildMatchCase(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1be3c5e3d:;
			{
				if (((*((*(_107628_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1be3c56e0;
				};
				if ((((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(33LLU)) || ((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(72LLU)))) {
					return jule::Any(_1ab5d6590_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1be3c5eb5:;
			{
				return jule::Any(_1ab5d6590_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1be3c603c:;
			{
				return jule::Any(_1ab5d6590_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		_match_end_1be3c56e0:;
	};
	jule::Ptr<_1aa102b4b_Expr> _11327_expr = _1ab5eb473_buildExpr((*(_self_))._field_p, &((*((*(_107628_st))))._field_tokens));;
	if ((_11327_expr != nullptr)) {
		return jule::Any(_11327_expr, &__jule_any_type52);;
	};
	_1ab5cd7c9_pushErr(_self_, _10777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1ab5d93ea_build(_1ab5cc50e_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _114026_tokens, jule::Ptr<_1aa957978_ScopeTree>* _114056_s) {
	if (((*(_114056_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1ab5cc025_splitStmts(_114026_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_114056_s));
	while (((!(_1ab5cd466_isLastSt(_self_))) && (!(_1ab5cd1d0_finished(_self_))))) {
		{
			jule::Ptr<_1ab5cbb6d_stmt> _11488_st = _1ab5ce17b_next(_self_);;
			jule::Any _11498_data = _1ab5d9087_buildSt(_self_, &(_11488_st));;
			if ((_11498_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1aa957318_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aa957318_Stmt{._field_Token=(*(_11488_st))._field_tokens[0LL], ._field_End=(*_11488_st.alloc)._field_tokens[((*_11488_st.alloc)._field_tokens.len() - 1LL)], ._field_Data=_11498_data}; __jule_collection; }));
			};
			if (_1ab5cce49_stopped(_self_)) {
				goto _iter_end_1be3d2e28;
			};
		}
	_iter_next_1be3d2e28:;
	}
	_iter_end_1be3d2e28:;;
}








inline jule::Bool _1ab5d9e34_exprBuilder_eq(_1ab5d9e34_exprBuilder *_self_, _1ab5d9e34_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1ab5da62c_pushErr(_1ab5d9e34_exprBuilder* _self_, jule::Ptr<_1aa0d7ceb_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args) {
	_1ab5eacbe_pushErr((*(_self_))._field_p.ptr(), _1423_token, _1445_fmt, _1465_args);
}



inline void _1ab5da990_pushSuggestion(_1ab5d9e34_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args) {
	_1ab5eb132_pushSuggestion((*(_self_))._field_p.ptr(), _1930_fmt, _1950_args);
}



inline jule::Ptr<_1aa103740_TupleExpr> _1ab5dacd1_buildTuple(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>>* _2331_parts) {
	jule::Ptr<_1aa103740_TupleExpr> _247_tuple = jule::new_ptr<_1aa103740_TupleExpr>(_1aa103740_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa102b4b_Expr>>::alloc(0LL, (*(_2331_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa102b4b_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _2331_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be407bd9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _2715_part = *it;
			{
				(*(_247_tuple))._field_Expr=jule::append((*_247_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa102b4b_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab5e4ca7_buildFromTokens(_self_, _2715_part); __jule_collection; }));
			}
			_iter_next_1be407bd9:;
			++it;
			goto _iter_begin_1be407bd9;
		}
		_iter_end_1be407bd9:;
	};
	return _247_tuple;;
}



inline jule::Ptr<_1aa103ad6_LitExpr> _1ab5db122_buildLit(_1ab5d9e34_exprBuilder* _self_, jule::Ptr<_1aa0d7ceb_Token> _3324_token) {
	return jule::new_ptr<_1aa103ad6_LitExpr>(_1aa103ad6_LitExpr{._field_Token=_3324_token, ._field_Value=(*(_3324_token))._field_Kind});;
}



inline jule::Any _1ab5db7a4_buildSingle(_1ab5d9e34_exprBuilder* _self_, jule::Ptr<_1aa0d7ceb_Token> _4431_token) {
	{
		auto &_match_expr{ (*(_4431_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1be409aed:;
			{
				return jule::Any(_1ab5db122_buildLit(_self_, _4431_token), &__jule_any_type103);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1be409b75:;
			{
				return jule::Any(jule::new_ptr<_1aa1050d2_VariadicExpr>(_1aa1050d2_VariadicExpr{._field_Token=_4431_token, ._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr)}), &__jule_any_type79);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1be409bdb:;
			{
				return jule::Any(_1ab5e6160_buildIdentExpr(&(_4431_token)), &__jule_any_type41);;
			}
		}
		_match_end_1be409a32:;
	};
	_1ab5da62c_pushErr(_self_, _4431_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1aa104466_IdentExpr> _1ab5dbae5_buildBindIdent(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _6135_tokens) {
	if (((*((*(_6135_tokens))[0LL]))._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_6135_tokens))[1LL]))._field_Id != static_cast<jule::U32>(17LLU))) {
		_1ab5da62c_pushErr(_self_, (*(_6135_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa0d7ceb_Token> _697_token = (*(_6135_tokens))[2LL];;
	if (((*(_697_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab5da62c_pushErr(_self_, (*(_6135_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa104466_IdentExpr> _757_expr = _1ab5e6160_buildIdentExpr(&(_697_token));;
	(*(_757_expr))._field_Binded=true;
	return _757_expr;;
}



inline jule::Ptr<_1aa104c08_UnaryExpr> _1ab5dbe36_buildUnary(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _8030_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _817_op = _8030_tokens[0LL];;
	if ((_8030_tokens.len() == 1LL)) {
		_1ab5da62c_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1aa0d8538_IsUnaryOp((*(_817_op))._field_Id)))) {
		_1ab5da62c_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_817_op.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(_8030_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1aa104c08_UnaryExpr>(_1aa104c08_UnaryExpr{._field_Op=_817_op, ._field_Expr=_1ab5e4ca7_buildFromTokens(_self_, _8030_tokens)});;
}



inline jule::Ptr<_1aa105c5e_SubIdentExpr> _1ab5dc277_buildObjSubIdent(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _10136_tokens) {
	jule::I32 _1027_i = (_10136_tokens.len() - 1LL);;
	jule::Ptr<_1aa0d7ceb_Token> _1037_identToken = _10136_tokens[_1027_i];;
	(_1027_i)--;
	(_10136_tokens).mut_slice(0LL, _1027_i);;
	if ((_10136_tokens.len() == 0LL)) {
		_1ab5da62c_pushErr(_self_, _1037_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa105c5e_SubIdentExpr>(_1aa105c5e_SubIdentExpr{._field_Expr=_1ab5e4ca7_buildFromTokens(_self_, _10136_tokens), ._field_Ident=_1037_identToken});;
}



inline jule::Ptr<_1aa105885_NamespaceExpr> _1ab5dc5b8_buildNamespace(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _11635_tokens) {
	jule::Ptr<_1aa105885_NamespaceExpr> _1177_ns = jule::new_ptr<_1aa105885_NamespaceExpr>(_1aa105885_NamespaceExpr{._field_Namespace=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Ident=jule::Ptr<_1aa0d7ceb_Token>(nullptr)});;
	if (((*(_11635_tokens)).len() > 3LL)) {
		_1ab5da62c_pushErr(_self_, (*(_11635_tokens))[3LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_1177_ns.alloc)._field_Namespace=(*(_11635_tokens))[0LL];
	if ((((*((*_1177_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_1177_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U32>(31LLU)))) {
		_1ab5da62c_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	if (((*(_11635_tokens)).len() < 2LL)) {
		_1ab5da62c_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_11635_tokens))[1LL]))._field_Id != static_cast<jule::U32>(19LLU))) {
		_1ab5da62c_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_11635_tokens)).len() < 3LL)) {
		_1ab5da62c_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_1177_ns.alloc)._field_Ident=(*(_11635_tokens))[2LL];
	if (((*((*_1177_ns.alloc)._field_Ident))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab5da62c_pushErr(_self_, (*_1177_ns.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1177_ns;;
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab5dc909_buildType(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _15030_tokens) {
	jule::I32 _1517_i = 0LL;;
	jule::Ptr<_1aa0ed817_TypeDecl> _1527_t;
	jule::Bool _15210_ok;
	({
		__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType((*(_self_))._field_p, _15030_tokens, (&(_1517_i)), false);
		_1527_t = __jule_assign_result.__jule_result_arg0;
		_15210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_15210_ok))) {
		_1ab5da62c_pushErr(_self_, (*(_15030_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1517_i < (*(_15030_tokens)).len())) {
		_1ab5da62c_pushErr(_self_, (*(_15030_tokens))[_1517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1527_t;;
}



inline jule::Any _1ab5dcc4a_buildSubIdent(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _16434_tokens) {
	jule::I32 _1653_i = ((*(_16434_tokens)).len() - 2LL);;
	jule::Ptr<_1aa0d7ceb_Token> _1663_token = (*(_16434_tokens))[_1653_i];;
	{
		auto &_match_expr{ (*(_1663_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_1be421a5a:;
			{
				return jule::Any(_1ab5dc277_buildObjSubIdent(_self_, (*(_16434_tokens))), &__jule_any_type87);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1be422187:;
			{
				return jule::Any(_1ab5dc5b8_buildNamespace(_self_, _16434_tokens), &__jule_any_type91);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1be4221ed:;
			{
				return jule::Any(_1ab5dc909_buildType(_self_, _16434_tokens), &__jule_any_type90);;
			}
		}
		_match_end_1be422066:;
	};
	if (_1ab5e6803_isAnonFnHead(_16434_tokens)) {
		return jule::Any(_1ab5dc909_buildType(_self_, _16434_tokens), &__jule_any_type90);;
	};
	_1ab5da62c_pushErr(_self_, _1663_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1aa1050d2_VariadicExpr> _1ab5dd08b_buildVariadic(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _18633_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _1877_token = _18633_tokens[(_18633_tokens.len() - 1LL)];;
	(_18633_tokens).mut_slice(0LL, (_18633_tokens.len() - 1LL));;
	return jule::new_ptr<_1aa1050d2_VariadicExpr>(_1aa1050d2_VariadicExpr{._field_Token=_1877_token, ._field_Expr=_1ab5e4ca7_buildFromTokens(_self_, _18633_tokens)});;
}



inline jule::Ptr<_1aa102e15_RangeExpr> _1ab5dd3cc_buildBetweenParentheses(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _19543_tokens) {
	if ((_19543_tokens.len() == 2LL)) {
		_1ab5da62c_pushErr(_self_, _19543_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_19543_tokens).mut_slice(1LL, (_19543_tokens.len() - 1LL));;
	return jule::new_ptr<_1aa102e15_RangeExpr>(_1aa102e15_RangeExpr{._field_Expr=_1ab5e4ca7_buildFromTokens(_self_, _19543_tokens)});;
}



inline jule::Ptr<_1aa1054ab_CastExpr> _1ab5dd71d_tryBuildCast(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _20733_tokens) {
	jule::I32 _2087_rangeN = 0LL;;
	{
		auto expr = _20733_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be4279b7:;
		if (it != expr_end) {
			jule::I32 _2097_i = it - expr->begin();
			jule::Ptr<_1aa0d7ceb_Token> _20910_token = *it;
			{
				{
					auto &_match_expr{ (*(_20910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1be428545:;
						{
							(_2087_rangeN)++;
							goto _iter_next_1be4279b7;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1be428930:;
						{
							(_2087_rangeN)--;
						}
					}
					_match_end_1be428831:;
				};
				if ((_2087_rangeN > 0LL)) {
					goto _iter_next_1be4279b7;
				} else if (((_2097_i + 1LL) == (*(_20733_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _2288_typeTokens = (*(_20733_tokens)).slice(0LL, (_2097_i + 1LL));;
				jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _2298_exprTokens = (*(_20733_tokens)).slice((_2097_i + 1LL));;
				if ((_2298_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1aa0d7ceb_Token> _2364_tok = _2298_exprTokens[0LL];;
				if (((*(_2364_tok))._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1aa1054ab_CastExpr> _2418_cast = jule::new_ptr<_1aa1054ab_CastExpr>(_1aa1054ab_CastExpr{._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
				if ((_2298_exprTokens.len() == 2LL)) {
					_1ab5da62c_pushErr(_self_, _2298_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2288_typeTokens.len() == 2LL)) {
					_1ab5da62c_pushErr(_self_, _2288_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2288_typeTokens).mut_slice(1LL, (_2288_typeTokens.len() - 1LL));;
					jule::I32 _2559_typeIndex = 0LL;;
					jule::Ptr<_1aa0ed817_TypeDecl> _2569_t;
					jule::Bool _25612_ok;
					({
						__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType((*(_self_))._field_p, &(_2288_typeTokens), (&(_2559_typeIndex)), true);
						_2569_t = __jule_assign_result.__jule_result_arg0;
						_25612_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_25612_ok && (_2559_typeIndex < _2288_typeTokens.len()))) {
						_1ab5da62c_pushErr(_self_, _2288_typeTokens[_2559_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_25612_ok))) {
						return _2418_cast;;
					};
					(*(_2418_cast))._field_Kind=_2569_t;
					if ((_2298_exprTokens.len() > 2LL)) {
						jule::I32 _26610_j = 0LL;;
						jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _26710_exprTokens2 = _1ab5e898c_range(&(_26610_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_2298_exprTokens));;
						if (((_26710_exprTokens2.len() == 0LL) || (_26610_j < _2298_exprTokens.len()))) {
							return nullptr;;
						};
						(*_2418_cast.alloc)._field_Expr=_1ab5e4ca7_buildFromTokens(_self_, _26710_exprTokens2);
					};
				};
				return _2418_cast;;
			}
			_iter_next_1be4279b7:;
			++it;
			_2097_i++;
			goto _iter_begin_1be4279b7;
		}
		_iter_end_1be4279b7:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _1ab5dda5e_buildArgs(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _28029_tokens) {
	if ((_28029_tokens.len() < 2LL)) {
		return nullptr;;
	};
	(_28029_tokens).mut_slice(1LL, (_28029_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _2867_parts;
	jule::Slice<_1ace263b7_Log> _28614_errs;
	({
		__jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab5e920c_parts(&(_28029_tokens), static_cast<jule::U32>(5LLU), true);
		_2867_parts = __jule_assign_result.__jule_result_arg0;
		_28614_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_28614_errs);
	jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _2887_args = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa102b4b_Expr>>::alloc(0LL, _2867_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa102b4b_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_2867_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be435794:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _28915_part = *it;
			{
				if ((_28915_part.len() > 0LL)) {
					{ jule::Slice<jule::Ptr<_1aa102b4b_Expr>> &__jule_push_dest = _2887_args; __jule_push_dest.push(_1ab5e4ca7_buildFromTokens(_self_, _28915_part)); };
				};
			}
			_iter_next_1be435794:;
			++it;
			goto _iter_begin_1be435794;
		}
		_iter_end_1be435794:;
	};
	return _2887_args;;
}



inline jule::Ptr<_1aa106875_FnCallExpr> _1ab5de356_buildFnCall(_1ab5d9e34_exprBuilder* _self_, jule::Ptr<_1aa0d7ceb_Token>* _32232_token, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _32259_expr, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _32287_args) {
	return jule::new_ptr<_1aa106875_FnCallExpr>(_1aa106875_FnCallExpr{._field_Token=(*(_32232_token)), ._field_Expr=_1ab5e4ca7_buildFromTokens(_self_, (*(_32259_expr))), ._field_Args=_1ab5dda5e_buildArgs(_self_, (*(_32287_args))), ._field_Exception=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1ab5de697_buildParenthesesRange(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _33042_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _3317_token = (*(_33042_tokens))[0LL];;
	if (((*(_3317_token))._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_1aa1054ab_CastExpr> _3338_expr = _1ab5dd71d_tryBuildCast(_self_, _33042_tokens);;
		if ((_3338_expr != nullptr)) {
			return jule::Any(_3338_expr, &__jule_any_type107);;
		};
	};
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _3387_exprTokens;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _33823_argsTokens;
	({
		__jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_sx_1aa0d7ceb_Token __jule_assign_result = _1ab5e8c56_rangeLast(_33042_tokens);
		_3387_exprTokens = __jule_assign_result.__jule_result_arg0;
		_33823_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3387_exprTokens.len() == 0LL)) {
		return jule::Any(_1ab5dd3cc_buildBetweenParentheses(_self_, _33823_argsTokens), &__jule_any_type102);;
	};
	if (_1ab5e6803_isAnonFnHead(&(_3387_exprTokens))) {
		return jule::Any(_1ab5dc909_buildType(_self_, _33042_tokens), &__jule_any_type90);;
	};
	return jule::Any(_1ab5de356_buildFnCall(_self_, &(_3317_token), &(_3387_exprTokens), &(_33823_argsTokens)), &__jule_any_type109);;
}



inline jule::Ptr<_1aa103eb0_UnsafeExpr> _1ab5de9d8_buildUnsafeExpr(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _35235_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _3537_token = _35235_tokens[0LL];;
	(_35235_tokens).mut_slice(1LL);;
	jule::I32 _3557_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _3567_rangeTokens = _1ab5e898c_range(&(_3557_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_35235_tokens));;
	if ((_3567_rangeTokens.len() == 0LL)) {
		_1ab5da62c_pushErr(_self_, _35235_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa103eb0_UnsafeExpr>(_1aa103eb0_UnsafeExpr{._field_Token=_3537_token, ._field_Expr=_1ab5e4ca7_buildFromTokens(_self_, _3567_rangeTokens)});;
}



inline jule::Ptr<_1aa959617_FnDecl> _1ab5ded29_buildAnonFn(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _36732_tokens) {
	jule::Ptr<_1aa959617_FnDecl> _3687_f = _1ab601e5c_buildFn((*(_self_))._field_p, _36732_tokens, false, false);;
	if ((!(_1aa9599ad_IsAnon(_3687_f.ptr())))) {
		_1ab5da62c_pushErr(_self_, (*_3687_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _3687_f;;
}



inline jule::Any _1ab5e016a_buildUnsafe(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _37632_tokens) {
	{
		auto &_match_expr{ (*((*(_37632_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1be445551:;
			{
				return jule::Any(_1ab5ded29_buildAnonFn(_self_, _37632_tokens), &__jule_any_type68);;
			}
		}
		else {
			_case_begin_1be444b16:;
			{
				return jule::Any(_1ab5de9d8_buildUnsafeExpr(_self_, (*(_37632_tokens))), &__jule_any_type104);;
			}
		}
		_match_end_1be445045:;
	};
}



inline void _1ab5e0588_pushRangeLitPart(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _38636_part, jule::Ptr<_1aa0d7ceb_Token> _3873_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>>* _38735_parts) {
	if ((_38636_part.len() == 0LL)) {
		_1ab5da62c_pushErr(_self_, _3873_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> &__jule_push_dest = (*(_38735_parts)); __jule_push_dest.push(_38636_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _1ab5e08c9_getBraceRangeLitExprParts(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _39745_tokens) {
	if ((_39745_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _40311_parts = nullptr;;
	jule::I32 _4057_last = 0LL;;
	jule::I32 _4067_rangeN = 0LL;;
	(_39745_tokens).mut_slice(1LL, (_39745_tokens.len() - 1LL));;
	{
		auto expr = &(_39745_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be448d5c:;
		if (it != expr_end) {
			jule::I32 _4087_i = it - expr->begin();
			jule::Ptr<_1aa0d7ceb_Token> _40810_token = *it;
			{
				{
					auto &_match_expr{ (*(_40810_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1be449ac7:;
						{
							(_4067_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1be449eb2:;
						{
							(_4067_rangeN)--;
						}
					}
					_match_end_1be449db3:;
				};
				if (((_4067_rangeN > 0LL) || ((*(_40810_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1be448d5c;
				};
				_1ab5e0588_pushRangeLitPart(_self_, _39745_tokens.slice(_4057_last, _4087_i), _40810_token, &(_40311_parts));
				_4057_last=(_4087_i + 1LL);
			}
			_iter_next_1be448d5c:;
			++it;
			_4087_i++;
			goto _iter_begin_1be448d5c;
		}
		_iter_end_1be448d5c:;
	};
	if ((_4057_last < _39745_tokens.len())) {
		if ((_4057_last == 0LL)) {
			if ((_39745_tokens.len() > 0LL)) {
				_1ab5e0588_pushRangeLitPart(_self_, _39745_tokens.slice(_4057_last), _39745_tokens[_4057_last], &(_40311_parts));
			};
		} else {
			_1ab5e0588_pushRangeLitPart(_self_, _39745_tokens.slice(_4057_last), _39745_tokens[(_4057_last - 1LL)], &(_40311_parts));
		};
	};
	return _40311_parts;;
}



inline jule::Ptr<_1aa10736a_FieldExprPair> _1ab5e0c1a_buildFieldExprPair(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _43938_tokens) {
	if (((_43938_tokens.len() - 2LL) == 0LL)) {
		_1ab5da62c_pushErr(_self_, _43938_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa10736a_FieldExprPair> _4447_pair = jule::new_ptr<_1aa10736a_FieldExprPair>(_1aa10736a_FieldExprPair{._field_Field=_43938_tokens[0LL], ._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
	(_43938_tokens).mut_slice(2LL);;
	(*(_4447_pair))._field_Expr=_1ab5e4ca7_buildFromTokens(_self_, _43938_tokens);
	return _4447_pair;;
}



inline jule::Ptr<_1aa102b4b_Expr> _1ab5e105b_buildStructLitExpr(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _45239_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _4537_token = (*(_45239_tokens))[0LL];;
	if ((((*(_4537_token))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_45239_tokens)).len() > 1LL))) {
		_4537_token=(*(_45239_tokens))[1LL];
		if (((*(_4537_token))._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_1aa102b4b_Expr>(_1aa102b4b_Expr{._field_Token=_4537_token, ._field_End=(*(_45239_tokens))[((*(_45239_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1ab5e0c1a_buildFieldExprPair(_self_, (*(_45239_tokens))), &__jule_any_type81)});;
		};
	};
	return _1ab5e4ca7_buildFromTokens(_self_, (*(_45239_tokens)));;
}



inline jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _1ab5e139c_buildStructLitExprs(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _46740_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _4687_parts = _1ab5e08c9_getBraceRangeLitExprParts(_self_, (*(_46740_tokens)));;
	if ((_4687_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa102b4b_Expr>> _4737_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa102b4b_Expr>>::alloc(0LL, _4687_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa102b4b_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4687_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be453460:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _47415_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa102b4b_Expr>> &__jule_push_dest = _4737_pairs; __jule_push_dest.push(_1ab5e105b_buildStructLitExpr(_self_, &(_47415_part))); };
			}
			_iter_next_1be453460:;
			++it;
			goto _iter_begin_1be453460;
		}
		_iter_end_1be453460:;
	};
	return _4737_pairs;;
}



inline jule::Ptr<_1aa107b95_StructLit> _1ab5e16dd_buildTypedStructLiteral(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _48043_tokens) {
	jule::I32 _4817_i = 0LL;;
	jule::Ptr<_1aa0ed817_TypeDecl> _4827_t;
	jule::Bool _48210_ok;
	({
		__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType((*(_self_))._field_p, &(_48043_tokens), (&(_4817_i)), true);
		_4827_t = __jule_assign_result.__jule_result_arg0;
		_48210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_48210_ok))) {
		return nullptr;;
	} else if ((_4817_i >= _48043_tokens.len())) {
		_1ab5da62c_pushErr(_self_, _48043_tokens[_4817_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_48043_tokens).mut_slice(_4817_i);;
	jule::Ptr<_1aa0d7ceb_Token> _4913_token = _48043_tokens[0LL];;
	if (((*(_4913_token))._field_Id != static_cast<jule::U32>(72LLU))) {
		_1ab5da62c_pushErr(_self_, _4913_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa107b95_StructLit>(_1aa107b95_StructLit{._field_End=_48043_tokens[(_48043_tokens.len() - 1LL)], ._field_Kind=_4827_t, ._field_Exprs=_1ab5e139c_buildStructLitExprs(_self_, &(_48043_tokens))});;
}



inline jule::Ptr<_1aa102b4b_Expr> _1ab5e1a2e_buildBraceLitPart(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _50438_tokens) {
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _5057_l;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _50514_r;
	({
		__jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_sx_1aa0d7ceb_Token __jule_assign_result = _1ab5e5acc_splitDelim(_50438_tokens, static_cast<jule::U32>(8LLU));
		_5057_l = __jule_assign_result.__jule_result_arg0;
		_50514_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5057_l != nullptr)) {
		return jule::new_ptr<_1aa102b4b_Expr>(_1aa102b4b_Expr{._field_Token=(*(_50438_tokens))[0LL], ._field_End=(*(_50438_tokens))[((*(_50438_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1aa108976_KeyValPair>(_1aa108976_KeyValPair{._field_Key=_1ab5e4ca7_buildFromTokens(_self_, _5057_l), ._field_Val=_1ab5e4ca7_buildFromTokens(_self_, _50514_r), ._field_Colon=(*(_50438_tokens))[_5057_l.len()]}), &__jule_any_type82)});;
	};
	return _1ab5e4ca7_buildFromTokens(_self_, (*(_50438_tokens)));;
}



inline jule::Ptr<_1aa10814b_BraceLit> _1ab5e1d70_buildBraceLit(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _52134_tokens) {
	jule::Ptr<_1aa10814b_BraceLit> _5227_lit = jule::new_ptr<_1aa10814b_BraceLit>(_1aa10814b_BraceLit{._field_Token=(*(_52134_tokens))[0LL], ._field_End=(*(_52134_tokens))[((*(_52134_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1aa102b4b_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _5277_parts = _1ab5e08c9_getBraceRangeLitExprParts(_self_, (*(_52134_tokens)));;
	if ((_5277_parts == nullptr)) {
		return _5227_lit;;
	};
	(*(_5227_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa102b4b_Expr>>::alloc(0LL, _5277_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa102b4b_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5277_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be45cb40:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _53315_part = *it;
			{
				(*_5227_lit.alloc)._field_Exprs=jule::append((*_5227_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa102b4b_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab5e1a2e_buildBraceLitPart(_self_, &(_53315_part)); __jule_collection; }));
			}
			_iter_next_1be45cb40:;
			++it;
			goto _iter_begin_1be45cb40;
		}
		_iter_end_1be45cb40:;
	};
	return _5227_lit;;
}



inline jule::Any _1ab5e21b1_buildBraceRange(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _54036_tokens) {
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _5417_exprTokens;
	jule::I32 _54119_rangeN;
	({
		__jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_int __jule_assign_result = _1ab5e6429_getRangeExprTokens(_54036_tokens);
		_5417_exprTokens = __jule_assign_result.__jule_result_arg0;
		_54119_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5417_exprTokens.len() == 0LL)) {
			_case_begin_1be45d624:;
			{
				return jule::Any(_1ab5e1d70_buildBraceLit(_self_, _54036_tokens), &__jule_any_type110);;
			}
		}
		else if ((_54119_rangeN > 0LL)) {
			_case_begin_1be45e8bc:;
			{
				_1ab5da62c_pushErr(_self_, (*(_54036_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be45e834:;
	};
	jule::Ptr<_1aa0d7ceb_Token> _5523_elseToken = _5417_exprTokens[(_5417_exprTokens.len() - 1LL)];;
	if (((*(_5417_exprTokens[(_5417_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U32>(14LLU))) {
		(_5417_exprTokens).mut_slice(0LL, (_5417_exprTokens.len() - 1LL));;
		jule::Any _5558_d = _1ab5e4625_build(_self_, &(_5417_exprTokens));;
		if ((_5558_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _5558_d };
			
			if (_match_expr.type == &__jule_any_type109) {
				_case_begin_1be462e53:;
				{
					((*(_54036_tokens))).mut_slice((_5417_exprTokens.len() + 1LL));;
					jule::I32 _5629_i = 0LL;;
					jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _5639_rangeTokens = _1ab5e898c_range(&(_5629_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _54036_tokens);;
					jule::Ptr<_1aa106875_FnCallExpr> _5649_model = _5558_d.unsafe_cast_ptr<_1aa106875_FnCallExpr>();;
					if (_1aa106eb3_Ignored(_5649_model.ptr())) {
						_1ab5da62c_pushErr(_self_, _5523_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*(_5649_model))._field_Exception=_1ab5ebe68_buildScope((*(_self_))._field_p, &(_5639_rangeTokens), (*(_54036_tokens))[(_5629_i - 1LL)]);
					return _5558_d;;
				}
			}
			else {
				_case_begin_1be46266c:;
				{
					_1ab5da62c_pushErr(_self_, _5417_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1be462408:;
		};
	};
	{
		auto &_match_expr{ (*(_5417_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1be4672ed:;
			{
				return _1ab5e016a_buildUnsafe(_self_, _54036_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1be467661:;
			{
				return jule::Any(_1ab5ded29_buildAnonFn(_self_, _54036_tokens), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1be4676c7:;
			{
				return jule::Any(_1ab5e16dd_buildTypedStructLiteral(_self_, (*(_54036_tokens))), &__jule_any_type108);;
			}
		}
		else {
			_case_begin_1be4622b5:;
			{
				_1ab5da62c_pushErr(_self_, _5417_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be46697e:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _1ab5e2502_getEnumerableParts(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _59238_tokens) {
	(_59238_tokens).mut_slice(1LL, (_59238_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _5947_parts;
	jule::Slice<_1ace263b7_Log> _59414_errors;
	({
		__jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab5e920c_parts(&(_59238_tokens), static_cast<jule::U32>(5LLU), true);
		_5947_parts = __jule_assign_result.__jule_result_arg0;
		_59414_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_59414_errors);
	return _5947_parts;;
}



inline jule::Ptr<_1aa1091a2_SliceExpr> _1ab5e2843_buildSlice(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _59930_tokens) {
	jule::Ptr<_1aa1091a2_SliceExpr> _6007_slc = jule::new_ptr<_1aa1091a2_SliceExpr>(_1aa1091a2_SliceExpr{._field_Token=_59930_tokens[0LL], ._field_End=_59930_tokens[(_59930_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1aa102b4b_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _6057_parts = _1ab5e2502_getEnumerableParts(_self_, _59930_tokens);;
	if ((_6057_parts.len() == 0LL)) {
		return _6007_slc;;
	};
	(*(_6007_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa102b4b_Expr>>::alloc(0LL, _6057_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa102b4b_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6057_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be46c457:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _61115_p = *it;
			{
				if ((_61115_p.len() == 0LL)) {
					goto _iter_next_1be46c457;
				};
				(*_6007_slc.alloc)._field_Exprs=jule::append((*_6007_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa102b4b_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab5e4ca7_buildFromTokens(_self_, _61115_p); __jule_collection; }));
			}
			_iter_next_1be46c457:;
			++it;
			goto _iter_begin_1be46c457;
		}
		_iter_end_1be46c457:;
	};
	return _6007_slc;;
}



inline jule::Ptr<_1aa109b0e_IndexingExpr> _1ab5e2ce9_buildIndexing(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _62133_exprTokens, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _6227_tokens, jule::Ptr<_1aa0d7ceb_Token> _62236_errorToken) {
	jule::Ptr<_1aa0d7ceb_Token> _6237_end = _6227_tokens[(_6227_tokens.len() - 1LL)];;
	(_6227_tokens).mut_slice(1LL, (_6227_tokens.len() - 1LL));;
	if ((_6227_tokens.len() == 0LL)) {
		_1ab5da62c_pushErr(_self_, _62236_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa102b4b_Expr> _6297_expr = _1ab5e4ca7_buildFromTokens(_self_, _62133_exprTokens);;
	if ((_6297_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa102b4b_Expr> _6337_index = _1ab5e4ca7_buildFromTokens(_self_, _6227_tokens);;
	if ((_6337_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa109b0e_IndexingExpr>(_1aa109b0e_IndexingExpr{._field_Token=_62236_errorToken, ._field_End=_6237_end, ._field_Expr=_6297_expr, ._field_Index=_6337_index});;
}



inline jule::Ptr<_1aa10a26e_SlicingExpr> _1ab5e3415_buildSlicing(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _64533_exprTokens, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _64567_start, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _6468_to, jule::Ptr<_1aa0d7ceb_Token>* _64634_errorToken, jule::Ptr<_1aa0d7ceb_Token> _64665_end) {
	jule::Ptr<_1aa10a26e_SlicingExpr> _6477_slc = jule::new_ptr<_1aa10a26e_SlicingExpr>(_1aa10a26e_SlicingExpr{._field_Token=(*(_64634_errorToken)), ._field_End=_64665_end, ._field_Expr=_1ab5e4ca7_buildFromTokens(_self_, (*(_64533_exprTokens))), ._field_Start=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_To=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
	if (((*(_64567_start)).len() > 0LL)) {
		(*(_6477_slc))._field_Start=_1ab5e4ca7_buildFromTokens(_self_, (*(_64567_start)));
	};
	if (((*(_6468_to)).len() > 0LL)) {
		(*(_6477_slc))._field_To=_1ab5e4ca7_buildFromTokens(_self_, (*(_6468_to)));
	};
	return _6477_slc;;
}



inline jule::Any _1ab5e3756_buildBracketRange(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _66137_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _6627_errorToken = _66137_tokens[0LL];;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _6637_exprTokens;
	jule::I32 _66319_rangeN;
	({
		__jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_int __jule_assign_result = _1ab5e6429_getRangeExprTokens(&(_66137_tokens));
		_6637_exprTokens = __jule_assign_result.__jule_result_arg0;
		_66319_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_6637_exprTokens.len() == 0LL)) {
		return jule::Any(_1ab5e2843_buildSlice(_self_, _66137_tokens), &__jule_any_type95);;
	} else if ((_66319_rangeN > 0LL)) {
		_1ab5da62c_pushErr(_self_, _6627_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_66137_tokens).mut_slice(_6637_exprTokens.len());;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _6787_splitTokens = _66137_tokens.slice(1LL, (_66137_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _6797_start;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _67918_to;
	({
		__jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_sx_1aa0d7ceb_Token __jule_assign_result = _1ab5e5acc_splitDelim(&(_6787_splitTokens), static_cast<jule::U32>(8LLU));
		_6797_start = __jule_assign_result.__jule_result_arg0;
		_67918_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_6797_start != nullptr) || (_67918_to != nullptr))) {
		return jule::Any(_1ab5e3415_buildSlicing(_self_, &(_6637_exprTokens), &(_6797_start), &(_67918_to), &(_6627_errorToken), _66137_tokens[(_66137_tokens.len() - 1LL)]), &__jule_any_type106);;
	};
	return jule::Any(_1ab5e2ce9_buildIndexing(_self_, _6637_exprTokens, _66137_tokens, _6627_errorToken), &__jule_any_type105);;
}



inline jule::Any _1ab5e3a97_buildExclRight(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _68635_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _6873_token = (*(_68635_tokens))[((*(_68635_tokens)).len() - 1LL)];;
	((*(_68635_tokens))).mut_slice(0LL, ((*(_68635_tokens)).len() - 1LL));;
	jule::Any _6897_d = _1ab5e4625_build(_self_, _68635_tokens);;
	if ((_6897_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _6897_d };
		
		if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1be47a09c:;
			{
				(*(_6897_d.unsafe_cast_ptr<_1aa106875_FnCallExpr>()))._field_Exception=jule::new_ptr<_1aa957978_ScopeTree>(_1aa957978_ScopeTree{._field_Parent=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1aa957318_Stmt>(nullptr), ._field_End=jule::Ptr<_1aa0d7ceb_Token>(nullptr)});
				return _6897_d;;
			}
		}
		_match_end_1be47a036:;
	};
	_1ab5da62c_pushErr(_self_, _6873_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ab5e3dd8_buildData(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _70430_tokens) {
	{
		auto _match_expr{ (*(_70430_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1be47b6db:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1be47b752:;
			{
				return _1ab5db7a4_buildSingle(_self_, (*(_70430_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1be47b7b8:;
			{
				if (((*((*(_70430_tokens))[0LL]))._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_1ab5dbae5_buildBindIdent(_self_, _70430_tokens), &__jule_any_type41);;
				};
			}
		}
		_match_end_1be47b631:;
	};
	jule::Ptr<_1aa0d7ceb_Token> _7167_token = (*(_70430_tokens))[((*(_70430_tokens)).len() - 1LL)];;
	if (((*(_7167_token))._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_1ab5dd08b_buildVariadic(_self_, (*(_70430_tokens))), &__jule_any_type79);;
	};
	_7167_token=(*(_70430_tokens))[0LL];
	if (_1aa0d8538_IsUnaryOp((*(_7167_token))._field_Id)) {
		if (((*(_70430_tokens)).len() > 1LL)) {
			_7167_token=(*(_70430_tokens))[1LL];
			if (((*(_7167_token))._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_1ab5dc909_buildType(_self_, _70430_tokens), &__jule_any_type90);;
			};
		};
		return jule::Any(_1ab5dbe36_buildUnary(_self_, (*(_70430_tokens))), &__jule_any_type89);;
	};
	if (((*(_70430_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7167_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_1be4813b1:;
				{
					if (((*(_70430_tokens)).len() > 3LL)) {
						jule::Ptr<_1aa0d7ceb_Token> _7426_t = (*(_70430_tokens))[((*(_70430_tokens)).len() - 1LL)];;
						if (((*(_7426_t))._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_1be4812e5;
						};
					};
					jule::Ptr<_1aa0d7ceb_Token> _7485_next = (*(_70430_tokens))[1LL];;
					if (((*(_7485_next))._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_1be4812e5;
					};
					return jule::Any(_1ab5dc909_buildType(_self_, _70430_tokens), &__jule_any_type90);;
				}
			}
			_match_end_1be4812e5:;
		};
	};
	_7167_token=(*(_70430_tokens))[((*(_70430_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7167_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1be4843c5:;
			{
				return _1ab5dcc4a_buildSubIdent(_self_, _70430_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1be48443b:;
			{
				return _1ab5e3a97_buildExclRight(_self_, _70430_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1be4844a2:;
			{
				return _1ab5de697_buildParenthesesRange(_self_, _70430_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1be484518:;
			{
				return _1ab5e21b1_buildBraceRange(_self_, _70430_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1be48457e:;
			{
				return _1ab5e3756_buildBracketRange(_self_, (*(_70430_tokens)));;
			}
		}
		_match_end_1be481d1d:;
	};
	_1ab5da62c_pushErr(_self_, _7167_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ab5e42d4_buildBinary(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _77332_tokens, jule::I32 _77357_i) {
	jule::Ptr<_1aa0d7ceb_Token> _7747_op = (*(_77332_tokens))[_77357_i];;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _7757_leftTokens = (*(_77332_tokens)).slice(0LL, _77357_i);;
	if ((_1ab5e513c_isTypeOp(&((*(_7747_op))._field_Id)) && _1ab5e544a_isTypeRange(&(_7757_leftTokens)))) {
		return jule::Any(_1ab5dc909_buildType(_self_, _77332_tokens), &__jule_any_type90);;
	};
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _7807_rightTokens = (*(_77332_tokens)).slice((_77357_i + 1LL));;
	if ((_7757_leftTokens.len() == 0LL)) {
		_1ab5da62c_pushErr(_self_, (*(_77332_tokens))[_77357_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_7807_rightTokens.len() == 0LL)) {
		_1ab5da62c_pushErr(_self_, (*(_77332_tokens))[_77357_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5da990_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1aa106215_BinaryExpr>(_1aa106215_BinaryExpr{._field_Left=_1ab5e4ca7_buildFromTokens(_self_, _7757_leftTokens), ._field_Right=_1ab5e4ca7_buildFromTokens(_self_, _7807_rightTokens), ._field_Op=_7747_op}), &__jule_any_type111);;
}



inline jule::Any _1ab5e4625_build(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _79826_tokens) {
	if (((*((*(_79826_tokens))[0LL]))._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_1ab5dc909_buildType(_self_, _79826_tokens), &__jule_any_type90);;
	};
	jule::I32 _8023_i = _1ab5e5d96_findLowestPrecOp(_79826_tokens);;
	if ((_8023_i == -1LL)) {
		return _1ab5e3dd8_buildData(_self_, _79826_tokens);;
	};
	return _1ab5e42d4_buildBinary(_self_, _79826_tokens, _8023_i);;
}



inline jule::Any _1ab5e4966_buildKind(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _80930_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _8107_parts;
	jule::Slice<_1ace263b7_Log> _81014_errors;
	({
		__jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab5e920c_parts(_80930_tokens, static_cast<jule::U32>(5LLU), true);
		_8107_parts = __jule_assign_result.__jule_result_arg0;
		_81014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_81014_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_81014_errors);
		return nullptr;;
	} else if ((_8107_parts.len() > 1LL)) {
		return jule::Any(_1ab5dacd1_buildTuple(_self_, &(_8107_parts)), &__jule_any_type42);;
	};
	return _1ab5e4625_build(_self_, _80930_tokens);;
}



inline jule::Ptr<_1aa102b4b_Expr> _1ab5e4ca7_buildFromTokens(_1ab5d9e34_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _82035_tokens) {
	if ((_82035_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8247_kind = _1ab5e4966_buildKind(_self_, &(_82035_tokens));;
	if ((_8247_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa102b4b_Expr>(_1aa102b4b_Expr{._field_Token=_82035_tokens[0LL], ._field_End=_82035_tokens[(_82035_tokens.len() - 1LL)], ._field_Kind=_8247_kind});;
}











inline void _1ab5ea61a_stop(_1ab5ea2da_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1ab5ea8a1_stopped(_1ab5ea2da_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1ab5eacbe_pushErr(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa0d7ceb_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args) {
	{ jule::Slice<_1ace263b7_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab5e98c2_compilerErr(&(_16923_token), &(_16945_fmt), _16965_args)); };
}



inline void _1ab5eb132_pushSuggestion(_1ab5ea2da_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args) {
	{
		_1ab5e9c68_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _17430_fmt, _17450_args);
	};
}



inline jule::Ptr<_1aa102b4b_Expr> _1ab5eb473_buildExpr(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _17831_tokens) {
	return _1ab5e4ca7_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_17831_tokens)));;
}



inline jule::Ptr<_1aa0ecc34_Directive> _1ab5eb7b4_buildDirective(_1ab5ea2da_parser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _18234_tokens) {
	if ((_18234_tokens.len() == 1LL)) {
		_1ab5eacbe_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_18234_tokens[1LL]))._field_Column != ((*(_18234_tokens[0LL]))._field_Column + 1LL))) {
		_1ab5eacbe_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aa0ecc34_Directive>(_1aa0ecc34_Directive{._field_Tag=_18234_tokens[1LL], ._field_Args=_18234_tokens.slice(2LL)});;
}



inline void _1ab5eba6c_pushDirective(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa0ecc34_Directive> _19733_d) {
	if ((_19733_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be4b5b54:;
		if (it != expr_end) {
			jule::Ptr<_1aa0ecc34_Directive> _20210_pd = *it;
			{
				if (((*((*(_19733_d))._field_Tag))._field_Kind == (*(*(_20210_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1be4b5b54:;
			++it;
			goto _iter_begin_1be4b5b54;
		}
		_iter_end_1be4b5b54:;
	};
	{ jule::Slice<jule::Ptr<_1aa0ecc34_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_19733_d); };
}



inline jule::Ptr<_1aa957978_ScopeTree> _1ab5ebe68_buildScope(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _21032_tokens, jule::Ptr<_1aa0d7ceb_Token> _21061_end) {
	jule::Ptr<_1aa957978_ScopeTree> _2117_s = _1ab5ca8e7_newScope();;
	(*(_2117_s))._field_End=_21061_end;
	_1ab5cc50e_scopeParser _2137_sp = _1ab5cc50e_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1ab5cbb6d_stmt>>(nullptr), ._field_pos=0};;
	_1ab5d93ea_build(&_2137_sp, _21032_tokens, &(_2117_s));
	return _2117_s;;
}



inline __jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool _1ab5ec41e__buildType(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _22039_tokens, jule::I32* _2217_i, jule::Bool _22116_err) {
	__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1ab60b494_typeBuilder _2227_tb = _1ab60b494_typeBuilder{._field_p=_self_, ._field_tokens=(*(_22039_tokens)), ._field_i=_2217_i, ._field_err=_22116_err};;
	__jule_func_result = std::move(_1ab60e4a8_build(&_2227_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool _1ab5ec8c5_buildType(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _23238_tokens, jule::I32* _2337_i, jule::Bool _23316_err) {
	__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa0d7ceb_Token> _2343_token = (*(_23238_tokens))[(*(_2337_i))];;
	jule::Ptr<_1aa0ed817_TypeDecl> _2357_t;
	jule::Bool _23510_ok;
	({
		__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec41e__buildType(_self_, _23238_tokens, _2337_i, _23316_err);
		_2357_t = __jule_assign_result.__jule_result_arg0;
		_23510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_23316_err && (!(_23510_ok)))) {
		_1ab5eacbe_pushErr(_self_.ptr(), _2343_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2357_t;
	__jule_func_result.__jule_result_arg1 = _23510_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa95e551_TypeAliasDecl> _1ab5ecc16_buildTypeAliasDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _24240_tokens) {
	jule::I32 _2437_i = 1LL;;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa95e551_TypeAliasDecl> _2487_tad = jule::new_ptr<_1aa95e551_TypeAliasDecl>(_1aa95e551_TypeAliasDecl{._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_24240_tokens))[1LL], ._field_Ident=(*((*(_24240_tokens))[1LL]))._field_Kind, ._field_Strict=false, ._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr)});;
	jule::Ptr<_1aa0d7ceb_Token> _2527_token = (*(_24240_tokens))[_2437_i];;
	if (((*(_2527_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab5eacbe_pushErr(_self_.ptr(), _2527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	_2527_token=(*(_24240_tokens))[_2437_i];
	{
		auto &_match_expr{ (*(_2527_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1be4c823d:;
			{
				(*(_2487_tad))._field_Strict=true;
				goto _match_end_1be4c7737;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1be4c7b00:;
			{
				goto _match_end_1be4c7737;
			}
		}
		else {
			_case_begin_1be4c6835:;
			{
				_1ab5eacbe_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
				return _2487_tad;;
			}
		}
		_match_end_1be4c7737:;
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	jule::Ptr<_1aa0ed817_TypeDecl> _2797_t;
	jule::Bool _27910_ok;
	({
		__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, _24240_tokens, (&(_2437_i)), true);
		_2797_t = __jule_assign_result.__jule_result_arg0;
		_27910_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2487_tad))._field_Kind=_2797_t;
	if ((_27910_ok && (_2437_i < (*(_24240_tokens)).len()))) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_24240_tokens))[_2437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2487_tad.alloc)._field_Public=_1aab493b7_IsPub((*_2487_tad.alloc)._field_Ident);
	return _2487_tad;;
}



inline void _1ab5ed079_buildVarTypeAndExpr(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa95a7c2_VarDecl>* _28841_v, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _28864_tokens) {
	jule::I32 _2897_i = 0LL;;
	jule::Ptr<_1aa0d7ceb_Token> _2907_tok = (*(_28864_tokens))[_2897_i];;
	if (((*(_2907_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_2897_i)++;
		if (((_2897_i >= (*(_28864_tokens)).len()) || ((*((*(_28864_tokens))[_2897_i]))._field_Id == static_cast<jule::U32>(71LLU)))) {
			_1ab5eacbe_pushErr(_self_.ptr(), _2907_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1aa0ed817_TypeDecl> _2978_t;
		jule::Bool _29711_ok;
		({
			__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, _28864_tokens, (&(_2897_i)), true);
			_2978_t = __jule_assign_result.__jule_result_arg0;
			_29711_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_29711_ok) {
			(*((*(_28841_v))))._field_Kind=_2978_t;
			if ((_2897_i >= (*(_28864_tokens)).len())) {
				return;;
			};
			_2907_tok=(*(_28864_tokens))[_2897_i];
		};
	};
	if (((*(_2907_tok))._field_Id != static_cast<jule::U32>(71LLU))) {
		_1ab5eacbe_pushErr(_self_.ptr(), _2907_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28841_v))))._field_Setter=_2907_tok;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _3137_exprTokens = (*(_28864_tokens)).slice((_2897_i + 1LL));;
	if ((_3137_exprTokens.len() == 0LL)) {
		_1ab5eacbe_pushErr(_self_.ptr(), _2907_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28841_v))))._field_Expr=_1ab5eb473_buildExpr(_self_, &(_3137_exprTokens));
}



inline void _1ab5ed3dc_buildVarCommon(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa95a7c2_VarDecl>* _32136_v, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _32158_tokens) {
	(*((*(_32136_v))))._field_Token=_32158_tokens[0LL];
	if (((*((*((*(_32136_v))))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*((*(_32136_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_32136_v))))._field_Ident=(*((*((*(_32136_v))))._field_Token))._field_Kind;
	(*((*(_32136_v))))._field_Public=_1aab493b7_IsPub((*((*(_32136_v))))._field_Ident);
	(*((*(_32136_v))))._field_Kind=nullptr;
	if ((_32158_tokens.len() > 1LL)) {
		(_32158_tokens).mut_slice(1LL);;
		_1ab5ed079_buildVarTypeAndExpr(_self_, _32136_v, &(_32158_tokens));
	};
}



inline void _1ab5ed750_buildVarBegin(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa95a7c2_VarDecl>* _33734_v, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _33757_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _3383_tok = (*(_33757_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3383_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1be4d844b:;
			{
				(*((*(_33734_v))))._field_Statically=true;
				goto _case_begin_1be4d810a;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1be4d810a:;
			{
				if (((*(_33757_tokens)).len() == 1LL)) {
					(*(_33757_tokens))=nullptr;
					_1ab5eacbe_pushErr(_self_, _3383_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_33757_tokens))).mut_slice(1LL);;
				if (((*((*(_33757_tokens))[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
					(*((*(_33734_v))))._field_Mutable=true;
					((*(_33757_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1be4d8171:;
			{
				(*((*(_33734_v))))._field_Constant=true;
				((*(_33757_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1be4d7cec:;
			{
				(*(_33757_tokens))=nullptr;
				_1ab5eacbe_pushErr(_self_, _3383_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1be4d8094:;
	};
}



inline jule::Ptr<_1aa95a7c2_VarDecl> _1ab5eda91_buildVar(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _36529_tokens) {
	jule::Ptr<_1aa95a7c2_VarDecl> _3667_v = jule::new_ptr<_1aa95a7c2_VarDecl>(_1aa95a7c2_VarDecl{._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_Token=_36529_tokens[0LL], ._field_Setter=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
	_1ab5ed750_buildVarBegin(_self_.ptr(), &(_3667_v), &(_36529_tokens));
	if ((_36529_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_36529_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		(*(_3667_v))._field_Reference=true;
		if ((_36529_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_36529_tokens).mut_slice(1LL);;
	};
	_1ab5ed3dc_buildVarCommon(_self_, &(_3667_v), _36529_tokens);
	return _3667_v;;
}



inline jule::Ptr<_1aa10aa22_GenericDecl> _1ab5eddd2_buildGeneric(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _38434_tokens) {
	jule::Ptr<_1aa10aa22_GenericDecl> _3857_g = jule::new_ptr<_1aa10aa22_GenericDecl>(_1aa10aa22_GenericDecl{._field_Token=(*(_38434_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1aa10a56b_Constraint>(nullptr)});;
	if (((*((*(_3857_g))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*_3857_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_3857_g))._field_Ident=(*((*_3857_g.alloc)._field_Token))._field_Kind;
	if (((*(_38434_tokens)).len() > 1LL)) {
		if (((*((*(_38434_tokens))[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
			_1ab5eacbe_pushErr(_self_.ptr(), (*(_38434_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_38434_tokens)).len() == 2LL)) {
			_1ab5eacbe_pushErr(_self_.ptr(), (*(_38434_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _4028_constraintTokens = (*(_38434_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _4038_parts;
		jule::Slice<_1ace263b7_Log> _40315_errors;
		({
			__jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab5e920c_parts(&(_4028_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_4038_parts = __jule_assign_result.__jule_result_arg0;
			_40315_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_40315_errors.len() > 0LL)) {
			(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_40315_errors);
			return nullptr;;
		};
		(*_3857_g.alloc)._field_Constraint=jule::new_ptr<_1aa10a56b_Constraint>(_1aa10a56b_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>::alloc(0LL, _4038_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa0ed817_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_4038_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be4e5d1b:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _40916_part = *it;
				{
					jule::I32 _4109_i = 0LL;;
					jule::Ptr<_1aa0ed817_TypeDecl> _4119_kind;
					({
						__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, &(_40916_part), (&(_4109_i)), true);
						_4119_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_3857_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_3857_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4119_kind; __jule_collection; }));
					if ((_4109_i < _40916_part.len())) {
						_1ab5eacbe_pushErr(_self_.ptr(), _40916_part[_4109_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1be4e5d1b:;
				++it;
				goto _iter_begin_1be4e5d1b;
			}
			_iter_end_1be4e5d1b:;
		};
	};
	return _3857_g;;
}



inline jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>> _1ab5ee2cd_buildGenerics(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _42135_tokens, jule::Ptr<_1aa0d7ceb_Token>* _42161_errorToken) {
	if (((*(_42135_tokens)).len() == 0LL)) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_42161_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _4277_parts;
	jule::Slice<_1ace263b7_Log> _42714_errors;
	({
		__jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab5e920c_parts(_42135_tokens, static_cast<jule::U32>(5LLU), true);
		_4277_parts = __jule_assign_result.__jule_result_arg0;
		_42714_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_42714_errors.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_42714_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>> _4337_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>::alloc(0LL, _4277_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa10aa22_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4277_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be4eb2c7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _43415_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>> &__jule_push_dest = _4337_generics; __jule_push_dest.push(_1ab5eddd2_buildGeneric(_self_, &(_43415_part))); };
			}
			_iter_next_1be4eb2c7:;
			++it;
			goto _iter_begin_1be4eb2c7;
		}
		_iter_end_1be4eb2c7:;
	};
	return _4337_generics;;
}



inline jule::Ptr<_1aa9581b5_ParamDecl> _1ab5ee61e_buildSelfParam(_1ab5ea2da_parser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _44134_tokens) {
	if ((_44134_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1aa9581b5_ParamDecl> _4467_param = jule::new_ptr<_1aa9581b5_ParamDecl>(_1aa9581b5_ParamDecl{._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_44134_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_4467_param.alloc)._field_Mutable=true;
		if ((_44134_tokens.len() == 1LL)) {
			_1ab5eacbe_pushErr(_self_, _44134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_44134_tokens).mut_slice(1LL);;
	};
	_1ace17078_Builder _4587_ident = static__1ace178c5_New(5LL);;
	if (((*(_44134_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		({
			auto except = _1ace18057_WriteStr(&_4587_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:461:4"));
			(except.result);
		});
		if ((_44134_tokens.len() == 1LL)) {
			_1ab5eacbe_pushErr(_self_, _44134_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_44134_tokens).mut_slice(1LL);;
	};
	if (((*(_44134_tokens[0LL]))._field_Id == static_cast<jule::U32>(24LLU))) {
		({
			auto except = _1ace18057_WriteStr(&_4587_ident, static_cast<jule::Str>(jule::Str::lit("self", 4)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:470:4"));
			(except.result);
		});
		(*_4467_param.alloc)._field_Token=_44134_tokens[0LL];
		if ((_44134_tokens.len() != 1LL)) {
			_1ab5eacbe_pushErr(_self_, _44134_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4467_param.alloc)._field_Ident=_1ace188d7_Str(&_4587_ident);
	return _4467_param;;
}



inline void _1ab5eea3c_paramTypeBegin(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa9581b5_ParamDecl>* _48135_param, jule::I32* _48164_i, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _48173_tokens) {
	for (; ((*(_48164_i)) < (*(_48173_tokens)).len()); ((*(_48164_i)))++) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _4834_token = (*(_48173_tokens))[(*(_48164_i))];;
			if (((*(_4834_token))._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*((*(_48135_param))))._field_Variadic) {
				_1ab5eacbe_pushErr(_self_, _4834_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1be503b4d;
			};
			(*((*(_48135_param))))._field_Variadic=true;
		}
	_iter_next_1be503b4d:;
	}
	_iter_end_1be503b4d:;;
}



inline void _1ab5eeda0_buildParamType(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa9581b5_ParamDecl>* _49636_param, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _49665_tokens) {
	jule::I32 _4977_i = 0LL;;
	_1ab5eea3c_paramTypeBegin(_self_.ptr(), _49636_param, &(_4977_i), _49665_tokens);
	if ((_4977_i >= (*(_49665_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, _49665_tokens, (&(_4977_i)), true);
		(*((*(_49636_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_4977_i < (*(_49665_tokens)).len())) {
		_1ab5eacbe_pushErr(_self_, (*(_49665_tokens))[_4977_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1ab600213_buildParamBody(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa9581b5_ParamDecl>* _50936_param, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _50964_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _5107_tok = _50964_tokens[0LL];;
	if ((_50964_tokens.len() == 1LL)) {
		(*((*(_50936_param))))._field_Ident=(*(_5107_tok))._field_Kind;
		return;;
	} else if ((_50964_tokens.len() < 3LL)) {
		_1ab5eacbe_pushErr(_self_.ptr(), _5107_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_50964_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
		(*((*(_50936_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1ab5eeda0_buildParamType(_self_, _50936_param, &(_50964_tokens));
		return;;
	};
	(*((*(_50936_param))))._field_Ident=(*(_5107_tok))._field_Kind;
	(_50964_tokens).mut_slice(2LL);;
	_1ab5eeda0_buildParamType(_self_, _50936_param, &(_50964_tokens));
}



inline jule::Ptr<_1aa9581b5_ParamDecl> _1ab600554_buildParam(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _52931_tokens) {
	jule::Ptr<_1aa9581b5_ParamDecl> _5307_param = jule::new_ptr<_1aa9581b5_ParamDecl>(_1aa9581b5_ParamDecl{._field_Token=_52931_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5307_param))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_5307_param.alloc)._field_Mutable=true;
		if ((_52931_tokens.len() == 1LL)) {
			_1ab5eacbe_pushErr(_self_.ptr(), _52931_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_52931_tokens).mut_slice(1LL);;
		(*_5307_param.alloc)._field_Token=_52931_tokens[0LL];
	};
	if ((_52931_tokens.len() >= 3LL)) {
		if (((*((*(_5307_param))._field_Token))._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_52931_tokens.len() == 1LL)) {
				_1ab5eacbe_pushErr(_self_.ptr(), _52931_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_52931_tokens[1LL]))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_52931_tokens[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
				(*_5307_param.alloc)._field_Reference=true;
				(_52931_tokens).mut_slice(1LL);;
				(*_5307_param.alloc)._field_Token=_52931_tokens[0LL];
			};
		};
	};
	if (((*((*(_5307_param))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		(*_5307_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1ab5eeda0_buildParamType(_self_, &(_5307_param), &(_52931_tokens));
	} else {
		_1ab600213_buildParamBody(_self_, &(_5307_param), _52931_tokens);
	};
	return _5307_param;;
}



inline void _1ab60080c_checkParams(_1ab5ea2da_parser* _self_, jule::Slice<jule::Ptr<_1aa9581b5_ParamDecl>>* _57232_params) {
	{
		auto expr = _57232_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be514103:;
		if (it != expr_end) {
			jule::Ptr<_1aa9581b5_ParamDecl> _57315_param = *it;
			{
				if ((_1aa95856c_IsSelf(_57315_param.ptr()) || ((*(_57315_param))._field_Kind != nullptr))) {
					goto _iter_next_1be514103;
				};
				if (((*(_57315_param))._field_Token == nullptr)) {
					_1ab5eacbe_pushErr(_self_, (*_57315_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*(_57315_param))._field_Kind=jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=(*_57315_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1aa0ede22_IdentTypeDecl>(_1aa0ede22_IdentTypeDecl{._field_Token=(*_57315_param.alloc)._field_Token, ._field_Ident=(*((*_57315_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>(nullptr)}), &__jule_any_type78)});
					(*_57315_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1be514103:;
			++it;
			goto _iter_begin_1be514103;
		}
		_iter_end_1be514103:;
	};
}



inline jule::Slice<jule::Ptr<_1aa9581b5_ParamDecl>> _1ab600c08_buildParams(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _59233_tokens, jule::Bool _59258_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _5937_parts;
	jule::Slice<_1ace263b7_Log> _59314_errs;
	({
		__jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab5e920c_parts(_59233_tokens, static_cast<jule::U32>(5LLU), true);
		_5937_parts = __jule_assign_result.__jule_result_arg0;
		_59314_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_59314_errs);
	if ((_5937_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa9581b5_ParamDecl>> _59911_params = nullptr;;
	if ((_59258_method && (_5937_parts.len() > 0LL))) {
		jule::Ptr<_1aa9581b5_ParamDecl> _6018_param = _1ab5ee61e_buildSelfParam(_self_, _5937_parts[0LL]);;
		if (((_6018_param != nullptr) && _1aa95856c_IsSelf(_6018_param))) {
			{ jule::Slice<jule::Ptr<_1aa9581b5_ParamDecl>> &__jule_push_dest = _59911_params; __jule_push_dest.push(_6018_param); };
			(_5937_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_5937_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be51a0d7:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _60815_part = *it;
			{
				if ((_60815_part.len() == 0LL)) {
					goto _iter_next_1be51a0d7;
				};
				jule::Ptr<_1aa9581b5_ParamDecl> _6128_param = _1ab600554_buildParam(_self_, _60815_part);;
				if ((_6128_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1aa9581b5_ParamDecl>> &__jule_push_dest = _59911_params; __jule_push_dest.push(_6128_param); };
				};
			}
			_iter_next_1be51a0d7:;
			++it;
			goto _iter_begin_1be51a0d7;
		}
		_iter_end_1be51a0d7:;
	};
	_1ab60080c_checkParams(_self_, &(_59911_params));
	return _59911_params;;
}



inline __jule_tuple_x_1aa10170a_RetTypeDecl__jule_tuple_bool _1ab601104_buildMultiRetType(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _62239_tokens, jule::I32* _62269_i) {
	__jule_tuple_x_1aa10170a_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1aa10170a_RetTypeDecl>(_1aa10170a_RetTypeDecl{._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>(nullptr)});
	((*(_62269_i)))++;
	if (((*(_62269_i)) >= (*(_62239_tokens)).len())) {
		((*(_62269_i)))--;
		({
			__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, _62239_tokens, _62269_i, false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_62269_i)))--;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _6327_rangeTokens = _1ab5e898c_range(_62269_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _62239_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _6347_parts;
	jule::Slice<_1ace263b7_Log> _63414_errs;
	({
		__jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab5e920c_parts(&(_6327_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_6347_parts = __jule_assign_result.__jule_result_arg0;
		_63414_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_63414_errs);
	if ((_6347_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> _6407_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>::alloc(0LL, _6347_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa0ed817_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>::alloc(0LL, _6347_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa0d7ceb_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6347_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5215e9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _64215_part = *it;
			{
				if ((_64215_part.len() == 0LL)) {
					goto _iter_next_1be5215e9;
				};
				jule::Ptr<_1aa0d7ceb_Token> _6468_token = _64215_part[0LL];;
				jule::I32 _6478_offset = 0LL;;
				if ((_64215_part.len() > 1LL)) {
					_6468_token=_64215_part[1LL];
					if (((*(_6468_token))._field_Id == static_cast<jule::U32>(8LLU))) {
						_6478_offset=2LL;
						if ((_64215_part.len() < 3LL)) {
							_1ab5eacbe_pushErr(_self_, _6468_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1be5215e9;
						};
					};
				};
				_6468_token=_64215_part[0LL];
				if ((_6478_offset != 2LL)) {
					jule::Ptr<_1aa0d7ceb_Token> _6639_newToken = jule::new_ptr<_1aa0d7ceb_Token>((*(_6468_token)));;
					(*_6639_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6639_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6468_token; __jule_collection; }));
				};
				jule::Ptr<_1aa0ed817_TypeDecl> _6708_tk;
				({
					__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, &(_64215_part), (&(_6478_offset)), true);
					_6708_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6478_offset < _64215_part.len())) {
					_1ab5eacbe_pushErr(_self_, _64215_part[_6478_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> &__jule_push_dest = _6407_types; __jule_push_dest.push(_6708_tk); };
			}
			_iter_next_1be5215e9:;
			++it;
			goto _iter_begin_1be5215e9;
		}
		_iter_end_1be5215e9:;
	};
	if ((_6407_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=(*(_62239_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1aa100044_TupleTypeDecl>(_1aa100044_TupleTypeDecl{._field_Types=_6407_types}), &__jule_any_type77)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6407_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aa10170a_RetTypeDecl__jule_tuple_bool _1ab601500_buildRetType(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _69334_tokens, jule::I32* _69364_i) {
	__jule_tuple_x_1aa10170a_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1aa10170a_RetTypeDecl>(_1aa10170a_RetTypeDecl{._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>(nullptr)});
	if (((*(_69364_i)) >= (*(_69334_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1aa0d7ceb_Token> _6997_token = (*(_69334_tokens))[(*(_69364_i))];;
	{
		auto &_match_expr{ (*(_6997_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1be52a68b:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1be52a702:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1be52a768:;
			{
				if ((((*(_69364_i)) + 1LL) >= (*(_69334_tokens)).len())) {
					_1ab5eacbe_pushErr(_self_.ptr(), _6997_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_69364_i)))++;
				_6997_token=(*(_69334_tokens))[(*(_69364_i))];
				{
					auto &_match_expr{ (*(_6997_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1be52c1b5:;
						{
							({
								__jule_tuple_x_1aa10170a_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ab601104_buildMultiRetType(_self_, _69334_tokens, _69364_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1be52c6d2:;
						{
							_1ab5eacbe_pushErr(_self_.ptr(), _6997_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1be52c638:;
				};
				({
					__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, _69334_tokens, _69364_i, true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1be52a625:;
	};
	((*(_69364_i)))++;
	_1ab5eacbe_pushErr(_self_.ptr(), _6997_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1aa959617_FnDecl> _1ab6019a6_buildFnPrototype(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _73238_tokens, jule::I32* _73268_i, jule::Bool _73276_method) {
	jule::Ptr<_1aa959617_FnDecl> _7337_f = jule::new_ptr<_1aa959617_FnDecl>(_1aa959617_FnDecl{._field_Token=(*(_73238_tokens))[(*(_73268_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1aa10170a_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aa9581b5_ParamDecl>>(nullptr)});;
	if (((*((*(_7337_f))._field_Token))._field_Id == static_cast<jule::U32>(34LLU))) {
		(*_7337_f.alloc)._field_Statically=true;
		((*(_73268_i)))++;
		if (((*(_73268_i)) >= (*(_73238_tokens)).len())) {
			_1ab5eacbe_pushErr(_self_.ptr(), (*_7337_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7337_f.alloc)._field_Token=(*(_73238_tokens))[(*(_73268_i))];
	};
	if (((*((*(_7337_f))._field_Token))._field_Id == static_cast<jule::U32>(31LLU))) {
		(*_7337_f.alloc)._field_Unsafety=true;
		((*(_73268_i)))++;
		if (((*(_73268_i)) >= (*(_73238_tokens)).len())) {
			_1ab5eacbe_pushErr(_self_.ptr(), (*_7337_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7337_f.alloc)._field_Token=(*(_73238_tokens))[(*(_73268_i))];
	};
	((*(_73268_i)))++;
	if (((*(_73268_i)) >= (*(_73238_tokens)).len())) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_7337_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa0d7ceb_Token> _7663_tok = (*(_73238_tokens))[(*(_73268_i))];;
	if (((*(_7663_tok))._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_73268_i)))++;
		if (((*(_73268_i)) >= (*(_73238_tokens)).len())) {
			_1ab5eacbe_pushErr(_self_.ptr(), (*(_7337_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_7337_f))._field_Ident=(*_7663_tok.alloc)._field_Kind;
	} else {
		(*(_7337_f))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1aa0d7ceb_Token> _7783_errorToken = (*(_73238_tokens))[(*(_73268_i))];;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _7797_genericsTokens = _1ab5e898c_range(_73268_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _73238_tokens);;
	if ((_7797_genericsTokens != nullptr)) {
		(*(_7337_f))._field_Generics=_1ab5ee2cd_buildGenerics(_self_, &(_7797_genericsTokens), &(_7783_errorToken));
	};
	if (((*((*(_73238_tokens))[(*(_73268_i))]))._field_Id != static_cast<jule::U32>(74LLU))) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_73238_tokens))[(*(_73268_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _7897_paramsToks = _1ab5e898c_range(_73268_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _73238_tokens);;
	if ((_7897_paramsToks.len() > 0LL)) {
		(*(_7337_f))._field_Params=_1ab600c08_buildParams(_self_, &(_7897_paramsToks), _73276_method);
	};
	if (((*(_73268_i)) < (*(_73238_tokens)).len())) {
		jule::Ptr<_1aa0d7ceb_Token> _7954_token = (*(_73238_tokens))[(*(_73268_i))];;
		if (((*(_7954_token))._field_Id == static_cast<jule::U32>(68LLU))) {
			(*(_7337_f))._field_Exceptional=true;
			((*(_73268_i)))++;
		};
	};
	(*(_7337_f))._field_Public=_1aab493b7_IsPub((*_7337_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1aa10170a_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ab601500_buildRetType(_self_, _73238_tokens, _73268_i);
		(*_7337_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7337_f;;
}



inline jule::Ptr<_1aa959617_FnDecl> _1ab601e5c_buildFn(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _80929_tokens, jule::Bool _80954_method, jule::Bool _80968_prototype) {
	jule::I32 _8107_i = 0LL;;
	jule::Ptr<_1aa959617_FnDecl> _8117_f = _1ab6019a6_buildFnPrototype(_self_, _80929_tokens, &(_8107_i), _80954_method);;
	if (_80968_prototype) {
		if ((_8107_i < (*(_80929_tokens)).len())) {
			_1ab5eacbe_pushErr(_self_, (*(_80929_tokens))[(_8107_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8117_f;;
	} else if ((_8117_f == nullptr)) {
		return _8117_f;;
	};
	if ((_8107_i >= (*(_80929_tokens)).len())) {
		_1ab5ea61a_stop(_self_);
		_1ab5eacbe_pushErr(_self_, (*(_8117_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _8277_blockTokens = _1ab5e898c_range(&(_8107_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _80929_tokens);;
	if ((_8277_blockTokens != nullptr)) {
		(*(_8117_f))._field_Scope=_1ab5ebe68_buildScope(_self_, &(_8277_blockTokens), (*(_80929_tokens))[(_8107_i - 1LL)]);
		(*((*_8117_f.alloc)._field_Scope))._field_Unsafety=(*_8117_f.alloc)._field_Unsafety;
		if ((_8107_i < (*(_80929_tokens)).len())) {
			_1ab5eacbe_pushErr(_self_, (*(_80929_tokens))[_8107_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1ab5ea61a_stop(_self_);
		_1ab5eacbe_pushErr(_self_, (*(_8117_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8117_f;;
}



inline void _1ab6022c0_buildBindUseDecl(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa9608a4_UseDecl>* _84337_decl, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _84363_tokens) {
	if (((*(_84363_tokens)).len() > 1LL)) {
		_1ab5eacbe_pushErr(_self_, (*(_84363_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa0d7ceb_Token> _8477_token = (*(_84363_tokens))[0LL];;
	if (((((*(_8477_token))._field_Id != static_cast<jule::U32>(4LLU)) || (!(_1aa0d8e51_IsStr((*(_8477_token))._field_Kind)))) || _1aa0d91d7_IsRawStr((*(_8477_token))._field_Kind))) {
		_1ab5eacbe_pushErr(_self_, _8477_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_84337_decl))))._field_Binded=true;
	(*((*(_84337_decl))))._field_Path=_8477_token;
}



inline void _1ab602633_parseUseDecl(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa9608a4_UseDecl>* _85633_decl, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _85658_tokens) {
	if ((*((*(_85633_decl))))._field_Binded) {
		_1ab6022c0_buildBindUseDecl(_self_, _85633_decl, &(_85658_tokens));
		return;;
	};
	jule::Ptr<_1aa0d7ceb_Token> _8627_token = _85658_tokens[0LL];;
	if ((((((*(_8627_token))._field_Id != static_cast<jule::U32>(1LLU)) && ((*_8627_token.alloc)._field_Id != static_cast<jule::U32>(4LLU))) && (!(_1aa0d8e51_IsStr((*_8627_token.alloc)._field_Kind)))) || _1aa0d91d7_IsRawStr((*(_8627_token))._field_Kind))) {
		_1ab5eacbe_pushErr(_self_, _8627_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_8627_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*((*(_85633_decl))))._field_Alias=_8627_token;
		(_85658_tokens).mut_slice(1LL);;
		if ((_85658_tokens.len() == 0LL)) {
			_1ab5eacbe_pushErr(_self_, _8627_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
		_8627_token=_85658_tokens[0LL];
		if ((((*(_8627_token))._field_Id != static_cast<jule::U32>(4LLU)) || (!(_1aa0d8e51_IsStr((*(_8627_token))._field_Kind))))) {
			_1ab5eacbe_pushErr(_self_, _8627_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
	};
	(*((*(_85633_decl))))._field_Path=_8627_token;
}



inline jule::Ptr<_1aa9608a4_UseDecl> _1ab602a2e_buildUseDecl(_1ab5ea2da_parser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _88632_tokens, jule::Bool _88657_binded) {
	jule::Ptr<_1aa9608a4_UseDecl> _8877_decl = jule::new_ptr<_1aa9608a4_UseDecl>(_1aa9608a4_UseDecl{._field_Token=_88632_tokens[0LL], ._field_Path=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Alias=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Binded=_88657_binded});;
	if ((_88632_tokens.len() < 2LL)) {
		_1ab5eacbe_pushErr(_self_, (*(_8877_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_88632_tokens).mut_slice(1LL);;
	_1ab602633_parseUseDecl(_self_, &(_8877_decl), _88632_tokens);
	return _8877_decl;;
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab602e2a_buildTypeEnumItemKind(jule::Ptr<_1ab5ea2da_parser> _self_, jule::I32* _90043_i, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _90056_tokens) {
	jule::I32 _9017_braceN = 0LL;;
	jule::I32 _9023_exprStart = (*(_90043_i));;
	for (; ((*(_90043_i)) < (*(_90056_tokens)).len()); ((*(_90043_i)))++) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _9044_t = (*(_90056_tokens))[(*(_90043_i))];;
			{
				auto &_match_expr{ (*(_9044_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1be551c12:;
					{
						(_9017_braceN)++;
						goto _iter_next_1be551195;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1be552042:;
					{
						(_9017_braceN)--;
					}
				}
				_match_end_1be551c89:;
			};
			if ((_9017_braceN > 0LL)) {
				goto _iter_next_1be551195;
			};
			if ((((*(_9044_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_90043_i)) + 1LL) >= (*(_90056_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _92013_kindTokens = nullptr;;
				if (((*(_9044_t))._field_Id == static_cast<jule::U32>(5LLU))) {
					_92013_kindTokens=(*(_90056_tokens)).slice(_9023_exprStart, (*(_90043_i)));
				} else {
					_92013_kindTokens=(*(_90056_tokens)).slice(_9023_exprStart);
				};
				jule::I32 _9269_j = 0LL;;
				jule::Ptr<_1aa0ed817_TypeDecl> _9279_kind;
				({
					__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, &(_92013_kindTokens), (&(_9269_j)), true);
					_9279_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_9269_j < _92013_kindTokens.len())) {
					_1ab5eacbe_pushErr(_self_.ptr(), _92013_kindTokens[_9269_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _9279_kind;;
			};
		}
	_iter_next_1be551195:;
	}
	_iter_end_1be551195:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1aa962246_TypeEnumItemDecl>> _1ab60326b_buildTypeEnumItems(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _93740_tokens) {
	jule::Slice<jule::Ptr<_1aa962246_TypeEnumItemDecl>> _9387_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa962246_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa962246_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _9397_i = 0LL;;
	for (; (_9397_i < (*(_93740_tokens)).len()); (_9397_i)++) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _9418_t = (*(_93740_tokens))[_9397_i];;
			jule::Ptr<_1aa962246_TypeEnumItemDecl> _9428_item = jule::new_ptr<_1aa962246_TypeEnumItemDecl>(_1aa962246_TypeEnumItemDecl{._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr)});;
			(*_9428_item.alloc)._field_Token=_9418_t;
			if ((((*((*_9428_item.alloc)._field_Token))._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_93740_tokens)).len() - _9397_i) > 2LL))) {
				_9418_t=(*(_93740_tokens))[(_9397_i + 1LL)];
				if (((*(_9418_t))._field_Id == static_cast<jule::U32>(8LLU))) {
					(*_9428_item.alloc)._field_Ident=(*(*(_9428_item))._field_Token.alloc)._field_Kind;
					_9397_i+=2LL;
					if (((_9397_i >= (*(_93740_tokens)).len()) || ((*((*(_93740_tokens))[_9397_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
						_1ab5eacbe_pushErr(_self_.ptr(), _9418_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1be556cb1;
					};
				};
			};
			(*_9428_item.alloc)._field_Kind=_1ab602e2a_buildTypeEnumItemKind(_self_, &(_9397_i), _93740_tokens);
			{ jule::Slice<jule::Ptr<_1aa962246_TypeEnumItemDecl>> &__jule_push_dest = _9387_items; __jule_push_dest.push(_9428_item); };
		}
	_iter_next_1be556cb1:;
	}
	_iter_end_1be556cb1:;;
	return _9387_items;;
}



inline jule::Ptr<_1aa9628a6_TypeEnumDecl> _1ab6035ac_buildTypeEnumDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _96139_tokens) {
	jule::I32 _9627_i = 1LL;;
	jule::Ptr<_1aa9628a6_TypeEnumDecl> _9637_e = jule::new_ptr<_1aa9628a6_TypeEnumDecl>(_1aa9628a6_TypeEnumDecl{._field_Token=(*(_96139_tokens))[_9627_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1aa962246_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1aa0d7ceb_Token>(nullptr)});;
	if (((*((*(_9637_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*_9637_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_9637_e))._field_Ident=(*((*_9637_e.alloc)._field_Token))._field_Kind;
	_9627_i+=3LL;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _9737_itemTokens = _1ab5e898c_range(&(_9627_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _96139_tokens);;
	if ((_9737_itemTokens == nullptr)) {
		_1ab5ea61a_stop(_self_.ptr());
		_1ab5eacbe_pushErr(_self_, (*_9637_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _9637_e;;
	} else if ((_9627_i < (*(_96139_tokens)).len())) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_96139_tokens))[_9627_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_9637_e.alloc)._field_Public=_1aab493b7_IsPub((*_9637_e.alloc)._field_Ident);
	(*_9637_e.alloc)._field_End=(*(_96139_tokens))[(_9627_i - 1LL)];
	(*_9637_e.alloc)._field_Items=_1ab60326b_buildTypeEnumItems(_self_, &(_9737_itemTokens));
	return _9637_e;;
}



inline jule::Ptr<_1aa102b4b_Expr> _1ab6039a8_buildEnumItemExpr(jule::Ptr<_1ab5ea2da_parser> _self_, jule::I32* _98839_i, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _98852_tokens) {
	jule::I32 _9897_braceN = 0LL;;
	jule::I32 _9903_exprStart = (*(_98839_i));;
	for (; ((*(_98839_i)) < (*(_98852_tokens)).len()); ((*(_98839_i)))++) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _9924_t = (*(_98852_tokens))[(*(_98839_i))];;
			{
				auto &_match_expr{ (*(_9924_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1be564cd0:;
					{
						(_9897_braceN)++;
						goto _iter_next_1be564263;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1be565110:;
					{
						(_9897_braceN)--;
					}
				}
				_match_end_1be564d57:;
			};
			if ((_9897_braceN > 0LL)) {
				goto _iter_next_1be564263;
			};
			if ((((*(_9924_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_98839_i)) + 1LL) >= (*(_98852_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _100813_exprTokens = nullptr;;
				if (((*(_9924_t))._field_Id == static_cast<jule::U32>(5LLU))) {
					_100813_exprTokens=(*(_98852_tokens)).slice(_9903_exprStart, (*(_98839_i)));
				} else {
					_100813_exprTokens=(*(_98852_tokens)).slice(_9903_exprStart);
				};
				return _1ab5eb473_buildExpr(_self_, &(_100813_exprTokens));;
			};
		}
	_iter_next_1be564263:;
	}
	_iter_end_1be564263:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1aa960d5a_EnumItemDecl>> _1ab603ce9_buildEnumItems(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _102036_tokens) {
	jule::Slice<jule::Ptr<_1aa960d5a_EnumItemDecl>> _10217_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa960d5a_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa960d5a_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _10227_i = 0LL;;
	for (; (_10227_i < (*(_102036_tokens)).len()); (_10227_i)++) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _10248_t = (*(_102036_tokens))[_10227_i];;
			jule::Ptr<_1aa960d5a_EnumItemDecl> _10258_item = jule::new_ptr<_1aa960d5a_EnumItemDecl>(_1aa960d5a_EnumItemDecl{._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
			(*_10258_item.alloc)._field_Token=_10248_t;
			if (((*((*_10258_item.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
				_1ab5eacbe_pushErr(_self_.ptr(), (*_10258_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_10258_item.alloc)._field_Ident=(*((*_10258_item.alloc)._field_Token))._field_Kind;
			if ((((_10227_i + 1LL) >= (*(_102036_tokens)).len()) || ((*((*(_102036_tokens))[(_10227_i + 1LL)]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_10227_i + 1LL) < (*(_102036_tokens)).len())) {
					(_10227_i)++;
				};
				{ jule::Slice<jule::Ptr<_1aa960d5a_EnumItemDecl>> &__jule_push_dest = _10217_items; __jule_push_dest.push(_10258_item); };
				goto _iter_next_1be568993;
			};
			(_10227_i)++;
			_10248_t=(*(_102036_tokens))[_10227_i];
			(_10227_i)++;
			if (((*(_10248_t))._field_Id != static_cast<jule::U32>(8LLU))) {
				_1ab5eacbe_pushErr(_self_.ptr(), _10248_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1be568993;
			};
			if (((_10227_i >= (*(_102036_tokens)).len()) || ((*((*(_102036_tokens))[_10227_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				_1ab5eacbe_pushErr(_self_.ptr(), _10248_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1be568993;
			};
			(*_10258_item.alloc)._field_Expr=_1ab6039a8_buildEnumItemExpr(_self_, &(_10227_i), _102036_tokens);
			{ jule::Slice<jule::Ptr<_1aa960d5a_EnumItemDecl>> &__jule_push_dest = _10217_items; __jule_push_dest.push(_10258_item); };
		}
	_iter_next_1be568993:;
	}
	_iter_end_1be568993:;;
	return _10217_items;;
}



inline jule::Ptr<_1aa96191b_EnumDecl> _1ab60413a_buildEnumDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _105735_tokens) {
	if (((*(_105735_tokens)).len() < 3LL)) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_105735_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa96191b_EnumDecl> _10627_e = jule::new_ptr<_1aa96191b_EnumDecl>(_1aa96191b_EnumDecl{._field_Token=(*(_105735_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1aa960d5a_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1aa0d7ceb_Token>(nullptr)});;
	if (((*((*(_10627_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*_10627_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_10627_e))._field_Ident=(*((*_10627_e.alloc)._field_Token))._field_Kind;
	jule::I32 _10707_i = 2LL;;
	if (((*((*(_105735_tokens))[_10707_i]))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_10707_i)++;
		if ((_10707_i >= (*(_105735_tokens)).len())) {
			_1ab5eacbe_pushErr(_self_.ptr(), (*(_105735_tokens))[(_10707_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _10627_e;;
		};
		({
			__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, _105735_tokens, (&(_10707_i)), true);
			(*_10627_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_10707_i >= (*(_105735_tokens)).len())) {
			_1ab5ea61a_stop(_self_.ptr());
			_1ab5eacbe_pushErr(_self_, (*_10627_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _10627_e;;
		};
	} else {
		(*_10627_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _10877_itemTokens = _1ab5e898c_range(&(_10707_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _105735_tokens);;
	if ((_10877_itemTokens == nullptr)) {
		_1ab5ea61a_stop(_self_.ptr());
		_1ab5eacbe_pushErr(_self_, (*_10627_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _10627_e;;
	} else if ((_10707_i < (*(_105735_tokens)).len())) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_105735_tokens))[_10707_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_10627_e.alloc)._field_Public=_1aab493b7_IsPub((*_10627_e.alloc)._field_Ident);
	(*_10627_e.alloc)._field_End=(*(_105735_tokens))[(_10707_i - 1LL)];
	(*_10627_e.alloc)._field_Items=_1ab603ce9_buildEnumItems(_self_, &(_10877_itemTokens));
	return _10627_e;;
}



inline jule::Any _1ab60447b_buildNodeEnumDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _110239_tokens) {
	if ((((*(_110239_tokens)).len() > 3LL) && ((*((*(_110239_tokens))[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*((*(_110239_tokens))[3LL]))._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_1ab6035ac_buildTypeEnumDecl(_self_, _110239_tokens), &__jule_any_type71);;
		};
	};
	return jule::Any(_1ab60413a_buildEnumDecl(_self_, _110239_tokens), &__jule_any_type70);;
}



inline jule::Ptr<_1aa962b70_FieldDecl> _1ab6047bc_buildField(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _111131_tokens) {
	jule::Ptr<_1aa962b70_FieldDecl> _11127_f = jule::new_ptr<_1aa962b70_FieldDecl>(_1aa962b70_FieldDecl{._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
	(*_11127_f.alloc)._field_Mutable=((*(_111131_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU));
	if ((*_11127_f.alloc)._field_Mutable) {
		if ((_111131_tokens.len() == 1LL)) {
			_1ab5eacbe_pushErr(_self_.ptr(), _111131_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_111131_tokens).mut_slice(1LL);;
	};
	(*_11127_f.alloc)._field_Token=_111131_tokens[0LL];
	if (((*((*_11127_f.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*_11127_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_11127_f.alloc)._field_Ident=(*((*_11127_f.alloc)._field_Token))._field_Kind;
	if ((_111131_tokens.len() == 1LL)) {
		_1ab5eacbe_pushErr(_self_.ptr(), _111131_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_111131_tokens.len() < 3LL) || ((*(_111131_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU)))) {
		_1ab5eacbe_pushErr(_self_.ptr(), _111131_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_111131_tokens).mut_slice(2LL);;
	jule::I32 _11407_i = 0LL;;
	({
		__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, &(_111131_tokens), (&(_11407_i)), true);
		(*_11127_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_11407_i < _111131_tokens.len())) {
		jule::Ptr<_1aa0d7ceb_Token> _11434_token = _111131_tokens[_11407_i];;
		if (((*(_11434_token))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1ab5eacbe_pushErr(_self_.ptr(), _111131_tokens[_11407_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_11407_i)++;
		if ((_11407_i >= _111131_tokens.len())) {
			_1ab5eacbe_pushErr(_self_.ptr(), _11434_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_111131_tokens).mut_slice(_11407_i);;
		(*_11127_f.alloc)._field_Default=_1ab5eb473_buildExpr(_self_, &(_111131_tokens));
	};
	(*_11127_f.alloc)._field_Public=_1aab493b7_IsPub((*_11127_f.alloc)._field_Ident);
	return _11127_f;;
}



inline jule::Slice<jule::Ptr<_1aa962b70_FieldDecl>> _1ab604b0d_buildStructDeclFields(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _116042_tokens) {
	jule::Slice<jule::Ptr<_1aa962b70_FieldDecl>> _116111_fields = nullptr;;
	jule::Slice<jule::Ptr<_1ab5cbb6d_stmt>> _11627_stmts = _1ab5cc025_splitStmts(&(_116042_tokens));;
	{
		auto expr = &(_11627_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be589e59:;
		if (it != expr_end) {
			jule::Ptr<_1ab5cbb6d_stmt> _116315_stmt = *it;
			{
				_116042_tokens=(*(_116315_stmt))._field_tokens;
				jule::Ptr<_1aa962b70_FieldDecl> _11658_f = _1ab6047bc_buildField(_self_, _116042_tokens);;
				{ jule::Slice<jule::Ptr<_1aa962b70_FieldDecl>> &__jule_push_dest = _116111_fields; __jule_push_dest.push(_11658_f); };
			}
			_iter_next_1be589e59:;
			++it;
			goto _iter_begin_1be589e59;
		}
		_iter_end_1be589e59:;
	};
	return _116111_fields;;
}



inline jule::Ptr<_1aa963566_StructDecl> _1ab604e4e_buildStructDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _117137_tokens) {
	if (((*(_117137_tokens)).len() < 3LL)) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_117137_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _11777_i = 1LL;;
	jule::Ptr<_1aa963566_StructDecl> _11787_s = jule::new_ptr<_1aa963566_StructDecl>(_1aa963566_StructDecl{._field_Token=(*(_117137_tokens))[_11777_i], ._field_End=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1aa962b70_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>(nullptr)});;
	if (((*((*(_11787_s))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*_11787_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_11777_i)++;
	if ((_11777_i >= (*(_117137_tokens)).len())) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_117137_tokens))[_11777_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _11787_s;;
	};
	(*(_11787_s))._field_Ident=(*((*_11787_s.alloc)._field_Token))._field_Kind;
	jule::Ptr<_1aa0d7ceb_Token> _11923_errorToken = (*(_117137_tokens))[_11777_i];;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _11937_genericsTokens = _1ab5e898c_range(&(_11777_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _117137_tokens);;
	if ((_11937_genericsTokens != nullptr)) {
		(*_11787_s.alloc)._field_Generics=_1ab5ee2cd_buildGenerics(_self_, &(_11937_genericsTokens), &(_11923_errorToken));
	};
	if ((_11777_i >= (*(_117137_tokens)).len())) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_117137_tokens))[(_11777_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11787_s;;
	};
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _12037_bodyTokens = _1ab5e898c_range(&(_11777_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _117137_tokens);;
	if ((_12037_bodyTokens == nullptr)) {
		_1ab5ea61a_stop(_self_.ptr());
		_1ab5eacbe_pushErr(_self_, (*_11787_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11787_s;;
	};
	if ((_11777_i < (*(_117137_tokens)).len())) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_117137_tokens))[_11777_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11787_s.alloc)._field_Public=_1aab493b7_IsPub((*_11787_s.alloc)._field_Ident);
	(*_11787_s.alloc)._field_Fields=_1ab604b0d_buildStructDeclFields(_self_, _12037_bodyTokens);
	(*_11787_s.alloc)._field_End=(*(_117137_tokens))[(_11777_i - 1LL)];
	return _11787_s;;
}



inline void _1ab605207_checkMethodReceiver(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa959617_FnDecl>* _121936_f) {
	if ((*((*(_121936_f))))._field_Statically) {
		if ((((*((*(_121936_f))))._field_Params.len() > 0LL) && _1aa95856c_IsSelf((*((*(_121936_f))))._field_Params[0LL].ptr()))) {
			_1ab5eacbe_pushErr(_self_, (*((*(_121936_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_121936_f))))._field_Params.len() == 0LL)) {
		_1ab5eacbe_pushErr(_self_, (*((*(_121936_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aa9581b5_ParamDecl> _12313_param = (*((*(_121936_f))))._field_Params[0LL];;
	if ((!(_1aa95856c_IsSelf(_12313_param.ptr())))) {
		_1ab5eacbe_pushErr(_self_, (*((*(_121936_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ab60556a_buildTraitBody(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa963ca3_TraitDecl>* _123836_t, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _123860_tokens) {
	jule::Slice<jule::Ptr<_1ab5cbb6d_stmt>> _12397_stmts = _1ab5cc025_splitStmts(&(_123860_tokens));;
	{
		auto expr = &(_12397_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be59b454:;
		if (it != expr_end) {
			jule::Ptr<_1ab5cbb6d_stmt> _124015_stmt = *it;
			{
				_123860_tokens=(*(_124015_stmt))._field_tokens;
				if ((_123860_tokens.len() == 0LL)) {
					goto _iter_next_1be59b454;
				};
				{
					auto &_match_expr{ (*(_123860_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_1be5a0106:;
						{
							jule::Ptr<_1aa959617_FnDecl> _12479_f = _1ab601e5c_buildFn(_self_, &(_123860_tokens), true, true);;
							if ((_12479_f == nullptr)) {
								goto _match_end_1be59c7a7;
							};
							_1ab605207_checkMethodReceiver(_self_, &(_12479_f));
							if (((*(_12479_f))._field_Generics.len() > 0LL)) {
								_1ab5eacbe_pushErr(_self_, (*_12479_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1aa959617_FnDecl>> &__jule_push_dest = (*((*(_123836_t))))._field_Methods; __jule_push_dest.push(_12479_f); };
						}
					}
					else {
						_case_begin_1be59c0c0:;
						{
							jule::I32 _12579_i = 0LL;;
							jule::Ptr<_1aa0ed817_TypeDecl> _12589_ti;
							jule::Bool _125813_ok;
							({
								__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, &(_123860_tokens), (&(_12579_i)), true);
								_12589_ti = __jule_assign_result.__jule_result_arg0;
								_125813_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_125813_ok))) {
								goto _match_end_1be59c7a7;
							};
							if ((_12579_i < _123860_tokens.len())) {
								_1ab5eacbe_pushErr(_self_.ptr(), _123860_tokens[_12579_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> &__jule_push_dest = (*((*(_123836_t))))._field_Inherits; __jule_push_dest.push(_12589_ti); };
						}
					}
					_match_end_1be59c7a7:;
				};
			}
			_iter_next_1be59b454:;
			++it;
			goto _iter_begin_1be59b454;
		}
		_iter_end_1be59b454:;
	};
}



inline jule::Ptr<_1aa963ca3_TraitDecl> _1ab6058ab_buildTraitDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _127036_tokens) {
	if (((*(_127036_tokens)).len() < 3LL)) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_127036_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa963ca3_TraitDecl> _12757_t = jule::new_ptr<_1aa963ca3_TraitDecl>(_1aa963ca3_TraitDecl{._field_Token=(*(_127036_tokens))[1LL], ._field_End=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1aa959617_FnDecl>>(nullptr)});;
	if (((*((*(_12757_t))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*_12757_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_12757_t))._field_Ident=(*((*_12757_t.alloc)._field_Token))._field_Kind;
	jule::I32 _12837_i = 2LL;;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _12847_bodyTokens = _1ab5e898c_range(&(_12837_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _127036_tokens);;
	if ((_12847_bodyTokens == nullptr)) {
		_1ab5ea61a_stop(_self_.ptr());
		_1ab5eacbe_pushErr(_self_, (*_12757_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_12837_i < (*(_127036_tokens)).len())) {
		_1ab5eacbe_pushErr(_self_.ptr(), (*(_127036_tokens))[_12837_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12757_t.alloc)._field_Public=_1aab493b7_IsPub((*_12757_t.alloc)._field_Ident);
	_1ab60556a_buildTraitBody(_self_, &(_12757_t), _12847_bodyTokens);
	(*_12757_t.alloc)._field_End=(*(_127036_tokens))[(_12837_i - 1LL)];
	return _12757_t;;
}



inline jule::Ptr<_1aa959617_FnDecl> _1ab605bec_buildBindFn(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _130032_tokens) {
	(_130032_tokens).mut_slice(1LL);;
	jule::Ptr<_1aa959617_FnDecl> _13027_f = _1ab601e5c_buildFn(_self_, &(_130032_tokens), false, true);;
	if ((_13027_f != nullptr)) {
		(*_13027_f.alloc)._field_Public=false;
		(*_13027_f.alloc)._field_Binded=true;
	};
	return _13027_f;;
}



inline jule::Ptr<_1aa95a7c2_VarDecl> _1ab60603d_buildBindVar(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _131033_tokens) {
	(_131033_tokens).mut_slice(1LL);;
	jule::Ptr<_1aa95a7c2_VarDecl> _13127_v = _1ab5eda91_buildVar(_self_, _131033_tokens);;
	if ((_13127_v != nullptr)) {
		(*_13127_v.alloc)._field_Public=false;
		(*_13127_v.alloc)._field_Binded=true;
		if (((*_13127_v.alloc)._field_Expr != nullptr)) {
			_1ab5eacbe_pushErr(_self_, (*_13127_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _13127_v;;
}



inline jule::Ptr<_1aa963566_StructDecl> _1ab60637e_buildBindStruct(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _132336_tokens) {
	(_132336_tokens).mut_slice(1LL);;
	jule::Ptr<_1aa963566_StructDecl> _13257_s = _1ab604e4e_buildStructDecl(_self_, &(_132336_tokens));;
	if ((_13257_s != nullptr)) {
		(*_13257_s.alloc)._field_Public=false;
		{
			auto expr = &((*_13257_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be5ae797:;
			if (it != expr_end) {
				jule::Ptr<_1aa962b70_FieldDecl> _132816_f = *it;
				{
					(*(_132816_f))._field_Public=true;
				}
				_iter_next_1be5ae797:;
				++it;
				goto _iter_begin_1be5ae797;
			}
			_iter_end_1be5ae797:;
		};
		(*_13257_s.alloc)._field_Binded=true;
	};
	return _13257_s;;
}



inline jule::Ptr<_1aa95e551_TypeAliasDecl> _1ab6066c0_buildBindTypeAlias(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _133739_tokens) {
	(_133739_tokens).mut_slice(1LL);;
	jule::Ptr<_1aa95e551_TypeAliasDecl> _13397_t = _1ab5ecc16_buildTypeAliasDecl(_self_, &(_133739_tokens));;
	if ((_13397_t != nullptr)) {
		(*_13397_t.alloc)._field_Public=false;
		(*_13397_t.alloc)._field_Binded=true;
	};
	return _13397_t;;
}



inline jule::Ptr<_1aa9608a4_UseDecl> _1ab606a11_buildBindUse(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _134733_tokens) {
	if ((_134733_tokens.len() == 1LL)) {
		_1ab5eacbe_pushErr(_self_.ptr(), _134733_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_134733_tokens).mut_slice(1LL);;
	;
	return _1ab602a2e_buildUseDecl(_self_.ptr(), _134733_tokens, true);;
}



inline jule::Any _1ab606d52_buildBind(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _135831_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _13597_token = (*(_135831_tokens))[0LL];;
	if (((*(_135831_tokens)).len() == 1LL)) {
		_1ab5eacbe_pushErr(_self_.ptr(), _13597_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_13597_token=(*(_135831_tokens))[1LL];
	{
		auto &_match_expr{ (*(_13597_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1be5b56e3:;
			{
				return jule::Any(_1ab605bec_buildBindFn(_self_, (*(_135831_tokens))), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1be5b5759:;
			{
				return jule::Any(_1ab60603d_buildBindVar(_self_, (*(_135831_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1be5b534c:;
			{
				return jule::Any(_1ab60637e_buildBindStruct(_self_, (*(_135831_tokens))), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1be5b53b3:;
			{
				return jule::Any(_1ab6066c0_buildBindTypeAlias(_self_, (*(_135831_tokens))), &__jule_any_type51);;
			}
		}
		else {
			_case_begin_1be5b4626:;
			{
				_1ab5eacbe_pushErr(_self_, _13597_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1be5b52d6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa959617_FnDecl> _1ab607193_getMethod(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _138231_tokens) {
	jule::I32 _13837_i = 0LL;;
	jule::Ptr<_1aa0d7ceb_Token> _13847_token = (*(_138231_tokens))[_13837_i];;
	if (((*(_13847_token))._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_13837_i + 1LL) >= (*(_138231_tokens)).len())) {
			_1ab5eacbe_pushErr(_self_.ptr(), _13847_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13837_i)++;
		_13847_token=(*(_138231_tokens))[_13837_i];
	};
	if (((*(_13847_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_13837_i + 1LL) >= (*(_138231_tokens)).len())) {
			_1ab5eacbe_pushErr(_self_.ptr(), _13847_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13837_i)++;
		_13847_token=(*(_138231_tokens))[_13837_i];
	};
	if (((*(_13847_token))._field_Id != static_cast<jule::U32>(29LLU))) {
		_1ab5eacbe_pushErr(_self_.ptr(), _13847_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ab601e5c_buildFn(_self_, _138231_tokens, true, false);;
}



inline void _1ab607506_parseImplBody(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa964413_Impl>* _141135_ipl, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _141157_tokens) {
	jule::Slice<jule::Ptr<_1ab5cbb6d_stmt>> _14127_stmts = _1ab5cc025_splitStmts(_141157_tokens);;
	{
		auto expr = &(_14127_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be5bd3bb:;
		if (it != expr_end) {
			jule::Ptr<_1ab5cbb6d_stmt> _141315_stmt = *it;
			{
				(*(_141157_tokens))=(*(_141315_stmt))._field_tokens;
				jule::Ptr<_1aa0d7ceb_Token> _14158_token = (*(_141157_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_14158_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1be5be477:;
						{
							_1ab5eba6c_pushDirective(_self_.ptr(), _1ab5eb7b4_buildDirective(_self_, (*(_141157_tokens))));
							goto _iter_next_1be5bd3bb;
						}
					}
					_match_end_1be5be6b9:;
				};
				{
					auto &_match_expr{ (*(_14158_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_1be5bedd4:;
						{
							jule::Ptr<_1aa95a7c2_VarDecl> _14249_v = _1ab5eda91_buildVar(_self_, (*(_141157_tokens)));;
							if ((_14249_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1aa95a7c2_VarDecl>> &__jule_push_dest = (*((*(_141135_ipl))))._field_Statics; __jule_push_dest.push(_14249_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1be5c0951:;
						{
							jule::Ptr<_1aa959617_FnDecl> _14319_f = _1ab607193_getMethod(_self_, _141157_tokens);;
							if ((_14319_f != nullptr)) {
								_1ab605207_checkMethodReceiver(_self_, &(_14319_f));
								_1ab607e41_applyFnMeta(_self_, &(_14319_f));
								{ jule::Slice<jule::Ptr<_1aa959617_FnDecl>> &__jule_push_dest = (*((*(_141135_ipl))))._field_Methods; __jule_push_dest.push(_14319_f); };
							};
						}
					}
					else {
						_case_begin_1be5be81d:;
						{
							_1ab5eacbe_pushErr(_self_, _14158_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1be5bd3bb;
						}
					}
					_match_end_1be5bece6:;
				};
			}
			_iter_next_1be5bd3bb:;
			++it;
			goto _iter_begin_1be5bd3bb;
		}
		_iter_end_1be5bd3bb:;
	};
}



inline jule::Ptr<_1aa964413_Impl> _1ab607847_buildImpl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _144430_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _14457_token = _144430_tokens[0LL];;
	if ((_144430_tokens.len() < 2LL)) {
		_1ab5eacbe_pushErr(_self_.ptr(), _14457_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _14517_i = 1LL;;
	jule::Ptr<_1aa0ed817_TypeDecl> _14537_base;
	jule::Bool _145317_ok;
	({
		__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, &(_144430_tokens), (&(_14517_i)), true);
		_14537_base = __jule_assign_result.__jule_result_arg0;
		_145317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_145317_ok))) {
		return nullptr;;
	};
	if ((_14517_i >= _144430_tokens.len())) {
		_1ab5eacbe_pushErr(_self_.ptr(), _14457_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa964413_Impl> _14627_ipl = jule::new_ptr<_1aa964413_Impl>(_1aa964413_Impl{._field_End=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Base=_14537_base, ._field_Dest=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1aa959617_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1aa95a7c2_VarDecl>>(nullptr)});;
	_14457_token=_144430_tokens[_14517_i];
	if (((*(_14457_token))._field_Id != static_cast<jule::U32>(9LLU))) {
		if (((*_14457_token.alloc)._field_Id == static_cast<jule::U32>(72LLU))) {
			std::swap((*(_14627_ipl))._field_Base, (*_14627_ipl.alloc)._field_Dest);
			goto _julec_label_1be5cd4a8;
		};
		_1ab5ea61a_stop(_self_.ptr());
		_1ab5eacbe_pushErr(_self_, _14457_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_14517_i)++;
	if ((_14517_i >= _144430_tokens.len())) {
		_1ab5ea61a_stop(_self_.ptr());
		_1ab5eacbe_pushErr(_self_, _14457_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType(_self_, &(_144430_tokens), (&(_14517_i)), true);
		(*(_14627_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_145317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_145317_ok))) {
		return nullptr;;
	};
	if ((_14517_i >= _144430_tokens.len())) {
		_1ab5ea61a_stop(_self_.ptr());
		_1ab5eacbe_pushErr(_self_, _14457_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1be5cd4a8:;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _15007_bodyTokens = _1ab5e898c_range(&(_14517_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_144430_tokens));;
	if ((_15007_bodyTokens == nullptr)) {
		_1ab5ea61a_stop(_self_.ptr());
		_1ab5eacbe_pushErr(_self_, _14457_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14517_i < _144430_tokens.len())) {
		_1ab5eacbe_pushErr(_self_.ptr(), _144430_tokens[_14517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*(_14627_ipl))._field_End=_144430_tokens[(_14517_i - 1LL)];
	_1ab607506_parseImplBody(_self_, &(_14627_ipl), &(_15007_bodyTokens));
	return _14627_ipl;;
}



inline jule::Any _1ab607b88_buildNodeData(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _151535_tokens) {
	jule::Ptr<_1aa0d7ceb_Token> _15167_token = (*(_151535_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_15167_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1be5d238b:;
			{
				jule::Ptr<_1aa959617_FnDecl> _15208_f = _1ab601e5c_buildFn(_self_, _151535_tokens, false, false);;
				if ((_15208_f != nullptr)) {
					(*_15208_f.alloc)._field_Global=true;
				};
				return jule::Any(_15208_f, &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1be5d2a2e:;
			{
				return jule::Any(_1ab5eda91_buildVar(_self_, (*(_151535_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1be5d2a95:;
			{
				return jule::Any(_1ab5ecc16_buildTypeAliasDecl(_self_, _151535_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1be5d2b0b:;
			{
				return _1ab60447b_buildNodeEnumDecl(_self_, _151535_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1be5d1ec3:;
			{
				return jule::Any(_1ab604e4e_buildStructDecl(_self_, _151535_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1be5d204a:;
			{
				return jule::Any(_1ab6058ab_buildTraitDecl(_self_, _151535_tokens), &__jule_any_type69);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1be5d20c2:;
			{
				return jule::Any(_1ab607847_buildImpl(_self_, (*(_151535_tokens))), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1be5d2149:;
			{
				return _1ab606d52_buildBind(_self_, _151535_tokens);;
			}
		}
		else {
			_case_begin_1be5d1bb5:;
			{
				_1ab5eacbe_pushErr(_self_, _15167_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be5d1e4b:;
	};
}



inline void _1ab607e41_applyFnMeta(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa959617_FnDecl>* _154832_f) {
	(*((*(_154832_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1ab6081e9_applyMeta(_1ab5ea2da_parser* _self_, _1aa0ec816_Node* _155330_node) {
	{
		auto &_match_expr{ (*(_155330_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1be5d8a46:;
			{
				jule::Ptr<_1aa95a7c2_VarDecl> _15568_v = (*(_155330_node))._field_Data.unsafe_cast_ptr<_1aa95a7c2_VarDecl>();;
				if ((_15568_v == nullptr)) {
					return;;
				};
				(*(_15568_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1be5d879e:;
			{
				jule::Ptr<_1aa959617_FnDecl> _15638_f = (*(_155330_node))._field_Data.unsafe_cast_ptr<_1aa959617_FnDecl>();;
				if ((_15638_f == nullptr)) {
					return;;
				};
				_1ab607e41_applyFnMeta(_self_, &(_15638_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1be5d8ae0:;
			{
				jule::Ptr<_1aa963566_StructDecl> _15698_sd = (*(_155330_node))._field_Data.unsafe_cast_ptr<_1aa963566_StructDecl>();;
				if ((_15698_sd == nullptr)) {
					return;;
				};
				(*(_15698_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1be5d89ad:;
	};
}



inline void _1ab6084a2_pushUseDecl(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa9608a4_UseDecl>* _157833_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa9608a4_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_157833_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1ab5eacbe_pushErr(_self_, (*((*(_157833_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1ab5eb132_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ab6087e3_pushMetaNodes(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _158635_tokens) {
	{
		auto &_match_expr{ (*((*(_158635_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1be5dedd2:;
			{
				;
				jule::Ptr<_1aa9608a4_UseDecl> _15908_decl = _1ab602a2e_buildUseDecl(_self_.ptr(), (*(_158635_tokens)), false);;
				_1ab6084a2_pushUseDecl(_self_, &(_15908_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1be5dee59:;
			{
				if ((((*(_158635_tokens)).len() > 1LL) && ((*((*(_158635_tokens))[1LL]))._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_1aa9608a4_UseDecl> _15959_decl = _1ab606a11_buildBindUse(_self_, (*(_158635_tokens)));;
					_1ab6084a2_pushUseDecl(_self_, &(_15959_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1be5deec0:;
			{
				_1ab5eba6c_pushDirective(_self_, _1ab5eb7b4_buildDirective(_self_, (*(_158635_tokens))));
				return true;;
			}
		}
		_match_end_1be5decc2:;
	};
	return false;;
}



inline _1aa0ec816_Node _1ab608b34_parseNode(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _160631_st) {
	_1aa0ec816_Node _16077_node = _1aa0ec816_Node{._field_Token=(*(_160631_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1ab6087e3_pushMetaNodes(_self_, _160631_st)) {
		return _16077_node;;
	};
	jule::Any _16157_data = _1ab607b88_buildNodeData(_self_, _160631_st);;
	if ((_16157_data == nullptr)) {
		return _16077_node;;
	};
	_16077_node._field_Data=_16157_data;
	_1ab6081e9_applyMeta(_self_, &(_16077_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1ab5eacbe_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _16077_node;;
}



inline void _1ab608ddc_appendNode(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _163032_st) {
	if (((*(_163032_st)).len() == 0LL)) {
		return;;
	};
	_1aa0ec816_Node _16347_node = _1ab608b34_parseNode(_self_, _163032_st);;
	if (((_16347_node._field_Data != nullptr) && (!(_1ab5ea8a1_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1aa0ec816_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16347_node; __jule_collection; }));
	};
}



inline void _1ab6093b5_removeRange(_1ab5ea2da_parser* _self_, jule::I32 _164027_i, jule::U32 _164035_id, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _164051_tokens, jule::Slice<jule::I32>* _164081_ranges) {
	jule::U32 _16413_close = _1ab5e9493_getCloseOfBrace(_164035_id);;
	for (; (_164027_i >= 0LL); (_164027_i)--) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _16434_tok = (*(_164051_tokens))[(*(_164081_ranges))[_164027_i]];;
			if (((*(_16434_tok))._field_Id != _16413_close)) {
				goto _iter_next_1be5e9e64;
			};
			(*(_164081_ranges))=jule::append((*(_164081_ranges)).slice(0LL, _164027_i),(*(_164081_ranges)).slice((_164027_i + 1LL)));
			goto _iter_end_1be5e9e64;
		}
	_iter_next_1be5e9e64:;
	}
	_iter_end_1be5e9e64:;;
}



inline void _1ab6097d3_pushWrongOrderCloseErr(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa0d7ceb_Token>* _165239_t, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _165258_tokens, jule::Slice<jule::I32>* _165284_ranges) {
	{
		auto &_match_expr{ (*((*(_165258_tokens))[(*(_165284_ranges))[((*(_165284_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_1be5ec351:;
			{
				_1ab5eacbe_pushErr(_self_, (*(_165239_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1be5ec3c8:;
			{
				_1ab5eacbe_pushErr(_self_, (*(_165239_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1be5ec43e:;
			{
				_1ab5eacbe_pushErr(_self_, (*(_165239_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1be5ec241:;
	};
}



inline void _1ab609cab_pushRangeClose(_1ab5ea2da_parser* _self_, jule::Ptr<_1aa0d7ceb_Token> _166330_t, jule::U32 _166348_left, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _166366_tokens, jule::Slice<jule::I32>* _166396_ranges) {
	jule::I32 _16643_n = (*(_166396_ranges)).len();;
	if ((_16643_n == 0LL)) {
		{
			auto &_match_expr{ (*(_166330_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_1be600354:;
				{
					_1ab5eacbe_pushErr(_self_, _166330_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_1be6003cb:;
				{
					_1ab5eacbe_pushErr(_self_, _166330_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_1be600442:;
				{
					_1ab5eacbe_pushErr(_self_, _166330_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1be600288:;
		};
		return;;
	} else if (((*((*(_166366_tokens))[(*(_166396_ranges))[(_16643_n - 1LL)]]))._field_Id != _166348_left)) {
		_1ab6097d3_pushWrongOrderCloseErr(_self_, &(_166330_t), _166366_tokens, _166396_ranges);
	};
	_1ab6093b5_removeRange(_self_, (_16643_n - 1LL), (*(_166330_t))._field_Id, _166366_tokens, _166396_ranges);
}



inline void _1ab60a064_checkRanges(_1ab5ea2da_parser* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _168128_tokens) {
	jule::Slice<jule::I32> _168211_ranges = nullptr;;
	{
		auto expr = _168128_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6035aa:;
		if (it != expr_end) {
			jule::I32 _16847_i = it - expr->begin();
			jule::Ptr<_1aa0d7ceb_Token> *_168410_token = it;
			{
				{
					auto &_match_expr{ (*((*(_168410_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1be6044e0:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _168211_ranges; __jule_push_dest.push(_16847_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1be604578:;
						{
							_1ab609cab_pushRangeClose(_self_, (*(_168410_token)), static_cast<jule::U32>(74LLU), _168128_tokens, &(_168211_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_1be6045de:;
						{
							_1ab609cab_pushRangeClose(_self_, (*(_168410_token)), static_cast<jule::U32>(72LLU), _168128_tokens, &(_168211_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1be604655:;
						{
							_1ab609cab_pushRangeClose(_self_, (*(_168410_token)), static_cast<jule::U32>(76LLU), _168128_tokens, &(_168211_ranges));
						}
					}
					_match_end_1be604424:;
				};
			}
			_iter_next_1be6035aa:;
			++it;
			_16847_i++;
			goto _iter_begin_1be6035aa;
		}
		_iter_end_1be6035aa:;
	};
	{
		auto expr = &(_168211_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be604721:;
		if (it != expr_end) {
			jule::I32 _169910_i = *it;
			{
				jule::Ptr<_1aa0d7ceb_Token> _17004_token = (*(_168128_tokens))[_169910_i];;
				{
					auto &_match_expr{ (*(_17004_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1be6073c2:;
						{
							_1ab5eacbe_pushErr(_self_, _17004_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1be607438:;
						{
							_1ab5eacbe_pushErr(_self_, _17004_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1be60749e:;
						{
							_1ab5eacbe_pushErr(_self_, _17004_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1be60713b:;
				};
			}
			_iter_next_1be604721:;
			++it;
			goto _iter_begin_1be604721;
		}
		_iter_end_1be604721:;
	};
}



inline void _1ab60a31c_parse(jule::Ptr<_1ab5ea2da_parser> _self_, jule::Ptr<_1aa0dd8a1_Fileset>* _171227_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1aa0eb8ae_AST>(_1aa0eb8ae_AST{._field_File=(*(_171227_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1aa9608a4_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1aa0ec816_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1ab5d9e34_exprBuilder>(_1ab5d9e34_exprBuilder{._field_p=_self_});
	_1ab60a064_checkRanges(_self_, &((*((*(_171227_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ab5cbb6d_stmt>> _17257_stmts = _1ab5cc025_splitStmts(&((*((*(_171227_f))))._field_Tokens));;
	jule::I32 _17287_i = 0LL;;
	for (; (_17287_i < _17257_stmts.len()); (_17287_i)++) {
		{
			jule::Ptr<_1ab5cbb6d_stmt> _17308_stmt = _17257_stmts[_17287_i];;
			if (((*(_17308_stmt))._field_tokens.len() < 2LL)) {
				goto _iter_end_1be610c38;
			};
			if (((*((*(_17308_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_1be610c38;
			};
			if ((!(_1ace281bb_IsTopDirective((*((*(_17308_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1be610c38;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab5eb7b4_buildDirective(_self_, (*(_17308_stmt))._field_tokens); __jule_collection; }));
		}
	_iter_next_1be610c38:;
	}
	_iter_end_1be610c38:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_17287_i < _17257_stmts.len()) && (!(_1ab5ea8a1_stopped(_self_)))); (_17287_i)++) {
		{
			jule::Ptr<_1ab5cbb6d_stmt> _17478_stmt = _17257_stmts[_17287_i];;
			_1ab608ddc_appendNode(_self_, &((*(_17478_stmt))._field_tokens));
		}
	_iter_next_1be61417b:;
	}
	_iter_end_1be61417b:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1ab5eacbe_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1ab60ba6b_pushErr(_1ab60b494_typeBuilder* _self_, jule::Ptr<_1aa0d7ceb_Token> _3123_token, jule::Str _3145_fmt) {
	if ((*(_self_))._field_err) {
		_1ab5eacbe_pushErr((*(_self_))._field_p.ptr(), _3123_token, _3145_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1ab60bdce_pushSuggestion(_1ab60b494_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args) {
	if ((*(_self_))._field_err) {
		_1ab5eb132_pushSuggestion((*(_self_))._field_p.ptr(), _3830_fmt, _3850_args);
	};
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60c165_buildNamespace(_1ab60b494_typeBuilder* _self_) {
	jule::Ptr<_1aa0ed817_TypeDecl> _457_t = jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1aa0ee5b5_NamespaceTypeDecl> _487_ns = jule::new_ptr<_1aa0ee5b5_NamespaceTypeDecl>(_1aa0ee5b5_NamespaceTypeDecl{._field_Namespace=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Kind=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr)});;
	(*_487_ns.alloc)._field_Namespace=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((((*((*_487_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_487_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U32>(31LLU)))) {
		_1ab60ba6b_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ab60bdce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1ab60ba6b_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ab60bdce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(19LLU))) {
		_1ab60ba6b_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ab60bdce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1ab60ba6b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1ab60bdce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_487_ns.alloc)._field_Kind=_1ab60c918_buildIdent(_self_);
	(*(_457_t))._field_Kind=jule::Any(_487_ns, &__jule_any_type92);
	return _457_t;;
}



inline jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> _1ab60c3eb_buildGenerics(_1ab60b494_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1aa0d7ceb_Token> _803_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_803_token))._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _857_parts = _1ab60c682_identGenerics(_self_);;
	if ((_857_parts.len() == 0LL)) {
		_1ab60ba6b_pushErr(_self_, _803_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> _917_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>::alloc(0LL, _857_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa0ed817_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be624873:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _9215_part = *it;
			{
				jule::I32 _938_j = 0LL;;
				jule::Ptr<_1aa0ed817_TypeDecl> _948_t;
				({
					__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType((*(_self_))._field_p, &(_9215_part), (&(_938_j)), true);
					_948_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_938_j < _9215_part.len())) {
					_1ab60ba6b_pushErr(_self_, _9215_part[_938_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>> &__jule_push_dest = _917_types; __jule_push_dest.push(_948_t); };
			}
			_iter_next_1be624873:;
			++it;
			goto _iter_begin_1be624873;
		}
		_iter_end_1be624873:;
	};
	return _917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _1ab60c682_identGenerics(_1ab60b494_typeBuilder* _self_) {
	jule::I32 _1043_first = (*((*(_self_))._field_i));;
	jule::I32 _1057_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _1074_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1074_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_1be628008:;
					{
						(_1057_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1be628338:;
					{
						(_1057_rangeN)--;
					}
				}
				_match_end_1be628080:;
			};
			if ((_1057_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1be6271a0;
			};
		}
	_iter_next_1be6271a0:;
	}
	_iter_end_1be6271a0:;;
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _1197_tokens = (*(_self_))._field_tokens.slice((_1043_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _1207_parts;
	jule::Slice<_1ace263b7_Log> _12014_errors;
	({
		__jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab5e920c_parts(&(_1197_tokens), static_cast<jule::U32>(5LLU), true);
		_1207_parts = __jule_assign_result.__jule_result_arg0;
		_12014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12014_errors);
	};
	return _1207_parts;;
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60c918_buildIdent(_1ab60b494_typeBuilder* _self_) {
	jule::Bool _1287_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1287_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _1ab60c165_buildNamespace(_self_);;
	};
	jule::Ptr<_1aa0d7ceb_Token> _1327_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1aa0ede22_IdentTypeDecl> _1337_it = jule::new_ptr<_1aa0ede22_IdentTypeDecl>(_1aa0ede22_IdentTypeDecl{._field_Token=_1327_token, ._field_Ident=(*(_1327_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1aa0ed817_TypeDecl> _1397_itd = jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1337_it, &__jule_any_type78)});;
	if (((!(_1287_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		(*(_1337_it))._field_Generics=_1ab60c3eb_buildGenerics(_self_);
		return _1397_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1ab60ba6b_pushErr(_self_, _1327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab60ba6b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	jule::Ptr<_1aa0ee1db_SubIdentTypeDecl> _1567_sit = jule::new_ptr<_1aa0ee1db_SubIdentTypeDecl>(_1aa0ee1db_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1aa0ede22_IdentTypeDecl>>(nullptr)});;
	(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0ede22_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1337_it; __jule_collection; }));
	jule::Ptr<_1aa0ed817_TypeDecl> _1587_ident = _1ab60c918_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1587_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1be633c7d:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0ede22_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1587_ident))._field_Kind.unsafe_cast_ptr<_1aa0ede22_IdentTypeDecl>(); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1be62d2e9:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,(*((*(_1587_ident))._field_Kind.unsafe_cast_ptr<_1aa0ee1db_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1be633c17:;
	};
	return jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1567_sit, &__jule_any_type88)});;
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60cb9e_buildCppLink(_1ab60b494_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		_1ab60ba6b_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1aa0ed817_TypeDecl> _1777_t = _1ab60c918_buildIdent(_self_);;
	(*((*(_1777_t))._field_Kind.cast_ptr<_1aa0ede22_IdentTypeDecl>(&__jule_any_type78)))._field_Binded=true;
	return _1777_t;;
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60ce35_buildFn(_1ab60b494_typeBuilder* _self_) {
	jule::Ptr<_1aa0d7ceb_Token> _1837_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1aa959617_FnDecl> _1847_f = _1ab6019a6_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1847_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aa9599ad_IsAnon(_1847_f.ptr())))) {
		_1ab60ba6b_pushErr(_self_, (*_1847_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=_1837_token, ._field_Kind=jule::Any(_1847_f, &__jule_any_type68)});;
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60d1bb_buildPtr(_1ab60b494_typeBuilder* _self_) {
	jule::Ptr<_1aa0d7ceb_Token> _1987_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ab60ba6b_pushErr(_self_, _1987_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1aa100341_PtrTypeDecl>(_1aa100341_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type74)});;
	};
	jule::Ptr<_1aa0ed817_TypeDecl> _2157_elem = _1ab60e222_step(_self_);;
	if ((_2157_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1aa100341_PtrTypeDecl>(_1aa100341_PtrTypeDecl{._field_Elem=_2157_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60d452_buildSptr(_1ab60b494_typeBuilder* _self_) {
	jule::Ptr<_1aa0d7ceb_Token> _2297_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ab60ba6b_pushErr(_self_, _2297_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1aa0ed817_TypeDecl> _2367_elem = _1ab60e222_step(_self_);;
	if ((_2367_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=_2297_token, ._field_Kind=jule::Any(jule::new_ptr<_1aa0ee8b2_SptrTypeDecl>(_1aa0ee8b2_SptrTypeDecl{._field_Elem=_2367_elem}), &__jule_any_type75)});;
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60d6d8_buildSlc(_1ab60b494_typeBuilder* _self_) {
	jule::Ptr<_1aa0d7ceb_Token> _2507_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1aa0ed817_TypeDecl> _2527_elem = _1ab60e222_step(_self_);;
	if ((_2527_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=_2507_token, ._field_Kind=jule::Any(jule::new_ptr<_1aa0eec47_SlcTypeDecl>(_1aa0eec47_SlcTypeDecl{._field_Elem=_2527_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60d96e_buildArr(_1ab60b494_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _2657_exprTokens = _1ab5e898c_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ab60ba6b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1aa0ed817_TypeDecl> _2717_elem = _1ab60e222_step(_self_);;
	if ((_2717_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa100ad3_ArrTypeDecl> _2767_arrt = jule::new_ptr<_1aa100ad3_ArrTypeDecl>(_1aa100ad3_ArrTypeDecl{._field_Elem=_2717_elem, ._field_Size=jule::Ptr<_1aa102b4b_Expr>(nullptr)});;
	jule::Ptr<_1aa0d7ceb_Token> _2807_token = _2657_exprTokens[0LL];;
	if (((_2657_exprTokens.len() == 1LL) && ((*(_2807_token))._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		(*(_2767_arrt))._field_Size=_1ab5eb473_buildExpr((*(_self_))._field_p, &(_2657_exprTokens));
	};
	return jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=_2807_token, ._field_Kind=jule::Any(_2767_arrt, &__jule_any_type72)});;
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60dc05_buildMap(_1ab60b494_typeBuilder* _self_) {
	jule::Ptr<_1aa0d7ceb_Token> _2947_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ab60ba6b_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _3027_keyTokens = _1ab5e898c_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ab60ba6b_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3027_keyTokens.len() == 0LL)) {
		_1ab60ba6b_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1aa101331_MapTypeDecl> _3117_mapt = jule::new_ptr<_1aa101331_MapTypeDecl>(_1aa101331_MapTypeDecl{._field_Key=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr)});;
	jule::I32 _3127_j = 0LL;;
	jule::Ptr<_1aa0ed817_TypeDecl> _3137_keyt;
	jule::Bool _31317_ok;
	({
		__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType((*(_self_))._field_p, &(_3027_keyTokens), (&(_3127_j)), (*(_self_))._field_err);
		_3137_keyt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	} else if ((_3127_j < _3027_keyTokens.len())) {
		_1ab60ba6b_pushErr(_self_, _3027_keyTokens[_3127_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3117_mapt.alloc)._field_Key=_3137_keyt;
	jule::Ptr<_1aa0ed817_TypeDecl> _3217_valt;
	({
		__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab5ec8c5_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3217_valt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	};
	(*_3117_mapt.alloc)._field_Val=_3217_valt;
	return jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=_2947_mapToken, ._field_Kind=jule::Any(_3117_mapt, &__jule_any_type76)});;
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60de8b_buildEnumerable(_1ab60b494_typeBuilder* _self_) {
	jule::Ptr<_1aa0d7ceb_Token> _3337_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1ab60ba6b_pushErr(_self_, _3337_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3337_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3337_token))._field_Id == static_cast<jule::U32>(77LLU))) {
		return _1ab60d6d8_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1ab60d96e_buildArr(_self_);;
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60e222_step(_1ab60b494_typeBuilder* _self_) {
	jule::Ptr<_1aa0d7ceb_Token> _3483_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3483_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1be653a06:;
			{
				return _1ab60c918_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1be653de1:;
			{
				return _1ab60cb9e_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1be653e57:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1aa0ed817_TypeDecl> _3589_f = _1ab60ce35_buildFn(_self_);;
					if ((_3589_f != nullptr)) {
						(*((*_3589_f.alloc)._field_Kind.cast_ptr<_1aa959617_FnDecl>(&__jule_any_type68)))._field_Unsafety=true;
					};
					return _3589_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1be653ebd:;
			{
				return _1ab60ce35_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1be654034:;
			{
				return _1ab60d1bb_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1be6540ab:;
			{
				return _1ab60d452_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1be654133:;
			{
				return jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1aa0ee8b2_SptrTypeDecl>(_1aa0ee8b2_SptrTypeDecl{._field_Elem=_1ab60d452_buildSptr(_self_)}), &__jule_any_type75)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1be6541aa:;
			{
				return _1ab60de8b_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1be654232:;
			{
				return _1ab60dc05_buildMap(_self_);;
			}
		}
		_match_end_1be653a7d:;
	};
	((*((*(_self_))._field_i)))++;
	_1ab60ba6b_pushErr(_self_, _3483_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool _1ab60e4a8_build(_1ab60b494_typeBuilder* _self_) {
	__jule_tuple_x_1aa0ed817_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa0ed817_TypeDecl> _3897_root = _1ab60e222_step(_self_);;
	if ((_3897_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1ab60abd0_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3897_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1aa8128bb_CompileInfo_eq(_1aa8128bb_CompileInfo *_self_, _1aa8128bb_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1aa81468c_pushErr(_1aa814109_directiveEval* _self_, jule::Ptr<_1aa0d7ceb_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args) {
	{ jule::Slice<_1ace263b7_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1ace263b7_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1ace26829_Logf(_2141_fmt, _2161_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _1aa814a88_splitOperans(_1aa814109_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _3348_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>(nullptr); __jule_collection; });;
	jule::I32 _357_i = 0LL;;
	jule::I32 _367_rangeN = 0LL;;
	jule::I32 _377_last = 0LL;;
	for (; (_357_i < ((*(_3348_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _394_b = (*(_3348_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1be671e0e:;
					{
						(_367_rangeN)++;
						goto _iter_next_1be671480;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1be67223e:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1be671e86:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1be671480;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1be671480:;
	}
	_iter_end_1be671480:;;
	if ((_377_last < (*(_3348_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last)); };
	} else {
		_1aa81468c_pushErr(_self_, (*(_3348_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1aa814dc9_evalDirectiveIdent(_1aa814109_directiveEval* _self_, jule::Str _6430_ident) {
	return (_1aa813614_findVar((*(_self_))._field_vars, _6430_ident) >= 0LL);;
}



inline jule::Bool _1aa81521a_evalDirectivePart(_1aa814109_directiveEval* _self_, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _7037_part) {
	jule::Bool _713_logicalNot = ((*(_7037_part[0LL]))._field_Id == static_cast<jule::U32>(68LLU));;
	if (_713_logicalNot) {
		(_7037_part).mut_slice(1LL);;
	};
	if ((_7037_part.len() > 1LL)) {
		_1aa81468c_pushErr(_self_, _7037_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _817_result = _1aa814dc9_evalDirectiveIdent(_self_, (*(_7037_part[0LL]))._field_Kind);;
	if (_713_logicalNot) {
		_817_result=(!(_817_result));
	};
	return _817_result;;
}



inline jule::Bool _1aa8154a1_eval(_1aa814109_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1aa81468c_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _947_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _967_logicalOrParts = _1aa814a88_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_967_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_967_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be679ba3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _10115_part = *it;
			{
				jule::Bool _1028_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> _1038_logicalAndParts = _1aa814a88_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10115_part));;
				if ((_1038_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1038_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be67b48a:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _10816_andPart = *it;
						{
							jule::Ptr<_1aa0d7ceb_Token> _1095_first = _10816_andPart[0LL];;
							if (((*(_1095_first))._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_1aa0d7ceb_Token> _1116_end = _10816_andPart[(_10816_andPart.len() - 1LL)];;
								if (((*(_1116_end))._field_Id != static_cast<jule::U32>(75LLU))) {
									_1aa81468c_pushErr(_self_, _1095_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_10816_andPart).mut_slice(1LL, (_10816_andPart.len() - 1LL));;
							};
							_1028_and=(_1028_and && _1aa81521a_evalDirectivePart(_self_, _10816_andPart));
						}
						_iter_next_1be67b48a:;
						++it;
						goto _iter_begin_1be67b48a;
					}
					_iter_end_1be67b48a:;
				};
				_947_result=(_947_result || _1028_and);
			}
			_iter_next_1be679ba3:;
			++it;
			goto _iter_begin_1be679ba3;
		}
		_iter_end_1be679ba3:;
	};
	return _947_result;;
}







inline jule::Bool _1aa811931_isPassFileAnnotation(_1ab6106da_Importer* _self_, jule::Str _5136_p) {
	_5136_p=_1bb092008_Base(_5136_p);
	jule::I32 _533_n = _5136_p.len();;
	(_5136_p).mut_slice(0LL, (_533_n - _1bb091975_Ext(_5136_p).len()));;
	if (_1bb0858e2_HasSuffix(_5136_p, jule::Str::lit("_test", 5))) {
		if ((_1aa813614_findVar((*(_self_))._field_vars, jule::Str::lit("test", 4)) == -1LL)) {
			return false;;
		};
		(_5136_p).mut_slice(0LL, (_5136_p.len() - 5LL));;
	};
	jule::Str _687_a1 = jule::Str();;
	jule::Str _717_a2 = jule::Str();;
	jule::I32 _747_i = _1bb088274_FindLastByte(_5136_p, '_');;
	if ((_747_i == -1LL)) {
		jule::Bool _778_ok;
		jule::Bool _7716_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa811348_checkOs(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_7716_exist) {
			return _778_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa811579_checkArch(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_7716_exist)) || _778_ok);;
	};
	if (((_747_i + 1LL) >= _533_n)) {
		return true;;
	};
	_687_a1=_5136_p.slice((_747_i + 1LL));
	(_5136_p).mut_slice(0LL, _747_i);;
	_747_i=_1bb088274_FindLastByte(_5136_p, '_');
	if ((_747_i != -1LL)) {
		_717_a2=_5136_p.slice((_747_i + 1LL));
	};
	if ((_717_a2).empty()) {
		jule::Bool _988_ok;
		jule::Bool _9816_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa811348_checkOs(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_9816_exist) {
			return _988_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa811579_checkArch(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9816_exist)) || _988_ok);;
	};
	jule::Bool _1067_ok;
	jule::Bool _10615_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa811579_checkArch(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_10615_exist) {
		if ((!(_1067_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa811348_checkOs(_717_a2);
			_1067_ok = __jule_assign_result.__jule_result_arg0;
			_10615_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_10615_exist)) || _1067_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aa811348_checkOs(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_10615_exist)) || _1067_ok);;
}



inline jule::Ptr<_1ab6106da_Importer> static__1ab610b19_New(_1aa8128bb_CompileInfo _4516_info) {
	jule::Ptr<_1ab6106da_Importer> _467_imp = jule::new_ptr<_1ab6106da_Importer>(_1ab6106da_Importer{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bb095209_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1aa81324b_initVars(&((*(_467_imp))._field_vars), &(_4516_info));
	return _467_imp;;
}



inline jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>> _1ab610da0_AllPackages(_1ab6106da_Importer* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1ab6112e0_SetModPath(_1ab6106da_Importer* _self_, jule::Str _6226_path) {
	(*(_self_))._field_mod=_6226_path;
}



inline jule::Str _1ab611576_GetModPath(_1ab6106da_Importer* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1ab6118b7_ModById(_1ab6106da_Importer* _self_, jule::I32 _7019_id) {
	return (*(_self_))._field_mods[_7019_id];;
}



inline jule::Ptr<_1aab2ee08_ImportInfo> _1ab611c08_GetImport(_1ab6106da_Importer* _self_, jule::Str _7425_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be68e4c0:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _7515_p = *it;
			{
				if (_1bb08e8c9_EqualFold((*(_7515_p))._field_Path, _7425_path)) {
					return _7515_p;;
				};
			}
			_iter_next_1be68e4c0:;
			++it;
			goto _iter_begin_1be68e4c0;
		}
		_iter_end_1be68e4c0:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log _1ab612104_ImportPackage(_1ab6106da_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod) {
	__jule_tuple_sx_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log __jule_func_result;
	jule::Slice<_1ad0a39ea_Dir> _857_dirents = ({
		auto except = static__1bb0945e3_Read(_8429_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_1ace263b7_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ab610201_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _8429_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<_1ad0a39ea_Dir>(nullptr);});
	});;
	if (_8440_updateMod) {
		jule::Str _904_newMod = _1aab4885b_FindModuleFileDeep(_8429_path);;
		if ((_904_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_904_newMod;
			jule::Slice<_1ace263b7_Log> _939_errs = _1aab48b25_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_939_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _939_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1aa0eb8ae_AST>> _1007_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa0eb8ae_AST>>::alloc(0LL, _857_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa0eb8ae_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be691725:;
		if (it != expr_end) {
			_1ad0a39ea_Dir _10110_dirent = *it;
			{
				if ((_1ad1343d8_IsDir(&_10110_dirent._field_Stat) || (!(_1bb0858e2_HasSuffix(_10110_dirent._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1be691725;
				};
				jule::Str _1074__path = _1bb0916de_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _8429_path; (*it++) = _10110_dirent._field_Name; __jule_collection; }));;
				jule::Ptr<_1aa0dd8a1_Fileset> _1088_file = static__1aa0ddc36_New(_1074__path);;
				{
					_1aa0de297_FillMut(_1088_file.ptr(), _1ab610003_readBuff((*_1088_file.alloc)._field_Path));
				};
				jule::Slice<_1ace263b7_Log> _1108_errors = _1aa0eb3d6_Lex(_1088_file, static_cast<jule::I32>(0LL));;
				if ((_1108_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1108_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1ab57e7e1_FileInfo> _1158_finfo = _1ab5c9990_ParseFile(_1088_file);;
				if (((*(_1158_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1158_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1aa811931_isPassFileAnnotation(_self_, _10110_dirent._field_Name)))) {
					goto _iter_next_1be691725;
				};
				jule::Bool _1254_r;
				jule::Slice<_1ace263b7_Log> _12511_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab6127db_isPassBuildDirectives(_self_, &((*(_1158_finfo))._field_Ast));
					_1254_r = __jule_assign_result.__jule_result_arg0;
					_12511_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_12511_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12511_logs;
					return __jule_func_result;;
				};
				if ((!(_1254_r))) {
					goto _iter_next_1be691725;
				};
				{ jule::Slice<jule::Ptr<_1aa0eb8ae_AST>> &__jule_push_dest = _1007_asts; __jule_push_dest.push((*(_1158_finfo))._field_Ast); };
			}
			_iter_next_1be691725:;
			++it;
			goto _iter_begin_1be691725;
		}
		_iter_end_1be691725:;
	};
	__jule_func_result.__jule_result_arg0 = _1007_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ab6123ac_Imported(_1ab6106da_Importer* _self_, jule::Ptr<_1aab2ee08_ImportInfo> _14128_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be693727:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _14310_p = *it;
			{
				if ((((*(_14310_p))._field_Binded == (*(_14128_imp))._field_Binded) && _1bb08e8c9_EqualFold((*_14310_p.alloc)._field_Path, (*_14128_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_1be693727:;
			++it;
			goto _iter_begin_1be693727;
		}
		_iter_end_1be693727:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be699c06:;
			if (it != expr_end) {
				jule::I32 _1518_i = it - expr->begin();
				jule::Str _15111_mod = *it;
				{
					if (((*(_self_))._field_mod == _15111_mod)) {
						(*(_14128_imp))._field_ModId=_1518_i;
						goto _julec_label_1be69c258;
					};
				}
				_iter_next_1be699c06:;
				++it;
				_1518_i++;
				goto _iter_begin_1be699c06;
			}
			_iter_end_1be699c06:;
		};
		(*(_14128_imp))._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1be69c258:;
	};
	{ jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_14128_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1ace263b7_Log _1ab6127db_isPassBuildDirectives(_1ab6106da_Importer* _self_, jule::Ptr<_1aa0eb8ae_AST>* _16842_file) {
	__jule_tuple_bool__jule_tuple_s_1ace263b7_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_16842_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be69c753:;
		if (it != expr_end) {
			jule::Ptr<_1aa0ecc34_Directive> _16915_td = *it;
			{
				if (((*((*(_16915_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1be69c753;
				};
				_1aa814109_directiveEval _1738_de = _1aa814109_directiveEval{._field_logs=jule::Slice<_1ace263b7_Log>(nullptr), ._field_d=_16915_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1774_result = _1aa8154a1_eval(&_1738_de);;
				if ((_1738_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1738_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1774_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1be69c753:;
			++it;
			goto _iter_begin_1be69c753;
		}
		_iter_end_1be69c753:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}








inline jule::Bool _1aac852c2_anyData_eq(_1aac852c2_anyData *_self_, _1aac852c2_anyData _other_) {
	return 
		(_self_->_field_dataPtr == _other_._field_dataPtr) &&
		(_self_->_field_typePtr == _self_->_field_typePtr);
}





inline jule::Ptr<_1ab616a21_ExprInspector> static__1ab616d62_New(void) {
	return jule::new_ptr<_1ab616a21_ExprInspector>(_1ab616a21_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1ab61711a_args(_1ab616a21_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args) {
	{
		auto expr = &(_2224_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be70c32e:;
		if (it != expr_end) {
			jule::I32 _237_i = it - expr->begin();
			{
				_1ab61767b_inspect(_self_, &(_2224_args[_237_i]));
			}
			_iter_next_1be70c32e:;
			++it;
			_237_i++;
			goto _iter_begin_1be70c32e;
		}
		_iter_end_1be70c32e:;
	};
}



inline void _1ab6173c3_InspectStep(_1ab616a21_ExprInspector* _self_, jule::Any* _3339_m) {
	_1ab61767b_inspect(_self_, _3339_m);
}



inline void _1ab61767b_inspect(_1ab616a21_ExprInspector* _self_, jule::Any* _3728_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_3728_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_3728_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1be70e067:;
			{
				jule::Ptr<_1aaa2e0d2_BinaryExpr> _458_b = (*(_3728_m)).cast_ptr<_1aaa2e0d2_BinaryExpr>(&__jule_any_type113);;
				_1ab61767b_inspect(_self_, &((*((*(_458_b))._field_Left))._field_Model));
				_1ab61767b_inspect(_self_, &((*((*_458_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1be70e243:;
			{
				jule::Ptr<_1aaa2e4ab_UnaryExpr> _498_u = (*(_3728_m)).cast_ptr<_1aaa2e4ab_UnaryExpr>(&__jule_any_type112);;
				_1ab61767b_inspect(_self_, &((*((*(_498_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1be70e0cd:;
			{
				jule::Ptr<_1aaa2ed80_StructLitExpr> _528_lit = (*(_3728_m)).cast_ptr<_1aaa2ed80_StructLitExpr>(&__jule_any_type96);;
				{
					auto expr = &((*(_528_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be7133bd:;
					if (it != expr_end) {
						jule::Ptr<_1aaa2e9d9_StructArgExpr> _5316_arg = *it;
						{
							_1ab61767b_inspect(_self_, &((*((*(_5316_arg))._field_Expr))._field_Model));
						}
						_iter_next_1be7133bd:;
						++it;
						goto _iter_begin_1be7133bd;
					}
					_iter_end_1be7133bd:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1be70e144:;
			{
				jule::Ptr<_1aaa2ed80_StructLitExpr> _578_lit = (*((*(_3728_m)).cast_ptr<_1aaa3017c_AllocStructLitExpr>(&__jule_any_type114)))._field_Lit;;
				{
					auto expr = &((*(_578_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be714a1d:;
					if (it != expr_end) {
						jule::Ptr<_1aaa2e9d9_StructArgExpr> _5816_arg = *it;
						{
							_1ab61767b_inspect(_self_, &((*(*(_5816_arg))._field_Expr.alloc)._field_Model));
						}
						_iter_next_1be714a1d:;
						++it;
						goto _iter_begin_1be714a1d;
					}
					_iter_end_1be714a1d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1be70e540:;
			{
				jule::Ptr<_1aaa30633_CastingExpr> _628_c = (*(_3728_m)).cast_ptr<_1aaa30633_CastingExpr>(&__jule_any_type94);;
				_1ab61767b_inspect(_self_, &((*((*(_628_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1be70e5b7:;
			{
				jule::Ptr<_1aaa30ed5_FnCallExpr> _658_fc = (*(_3728_m)).cast_ptr<_1aaa30ed5_FnCallExpr>(&__jule_any_type30);;
				_1ab61767b_inspect(_self_, &((*(_658_fc))._field_Expr));
				_1ab61711a_args(_self_, (*_658_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1be70e63e:;
			{
				jule::Ptr<_1aaa313ae_SliceExpr> _698_s = (*(_3728_m)).cast_ptr<_1aaa313ae_SliceExpr>(&__jule_any_type80);;
				_1ab61711a_args(_self_, (*(_698_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1be70e6b6:;
			{
				jule::Ptr<_1aaa342e6_ArrayExpr> _728_a = (*(_3728_m)).cast_ptr<_1aaa342e6_ArrayExpr>(&__jule_any_type86);;
				_1ab61711a_args(_self_, (*(_728_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1be70e73d:;
			{
				jule::Ptr<_1aaa31865_IndexingExpr> _758_i = (*(_3728_m)).cast_ptr<_1aaa31865_IndexingExpr>(&__jule_any_type43);;
				_1ab61767b_inspect(_self_, &((*((*(_758_i))._field_Expr))._field_Model));
				_1ab61767b_inspect(_self_, &((*((*_758_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1be70e7b5:;
			{
				jule::Ptr<_1aaa325be_MapExpr> _798_mp = (*(_3728_m)).cast_ptr<_1aaa325be_MapExpr>(&__jule_any_type100);;
				{
					auto expr = &((*(_798_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be71abde:;
					if (it != expr_end) {
						jule::Ptr<_1aaa321e5_KeyValPairExpr> _8016_entry = *it;
						{
							_1ab61767b_inspect(_self_, &((*(_8016_entry))._field_Key));
							_1ab61767b_inspect(_self_, &((*_8016_entry.alloc)._field_Val));
						}
						_iter_next_1be71abde:;
						++it;
						goto _iter_begin_1be71abde;
					}
					_iter_end_1be71abde:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1be70e83c:;
			{
				jule::Ptr<_1aaa32b52_SlicingExpr> _858_s = (*(_3728_m)).cast_ptr<_1aaa32b52_SlicingExpr>(&__jule_any_type93);;
				_1ab61767b_inspect(_self_, &((*(_858_s))._field_Expr));
				_1ab61767b_inspect(_self_, &((*_858_s.alloc)._field_Left));
				if (((*_858_s.alloc)._field_Right != nullptr)) {
					_1ab61767b_inspect(_self_, &((*_858_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1be70e8b4:;
			{
				jule::Ptr<_1aaa331d5_TraitSubIdentExpr> _928_t = (*(_3728_m)).cast_ptr<_1aaa331d5_TraitSubIdentExpr>(&__jule_any_type98);;
				_1ab61767b_inspect(_self_, &((*(_928_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1be70e93b:;
			{
				jule::Ptr<_1aaa33a76_StructSubIdentExpr> _958_s = (*(_3728_m)).cast_ptr<_1aaa33a76_StructSubIdentExpr>(&__jule_any_type99);;
				_1ab61767b_inspect(_self_, &((*((*(_958_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1be70e9b3:;
			{
				jule::Ptr<_1aaa345e3_TupleExpr> _988_t = (*(_3728_m)).cast_ptr<_1aaa345e3_TupleExpr>(&__jule_any_type83);;
				{
					auto expr = &((*(_988_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be720573:;
					if (it != expr_end) {
						jule::Ptr<_1aabb8db5_Data> _9916_d = *it;
						{
							_1ab61767b_inspect(_self_, &((*(_9916_d))._field_Model));
						}
						_iter_next_1be720573:;
						++it;
						goto _iter_begin_1be720573;
					}
					_iter_end_1be720573:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1be70ea3a:;
			{
				jule::Ptr<_1aaa350b6_BuiltinNewCallExpr> _1038_b = (*(_3728_m)).cast_ptr<_1aaa350b6_BuiltinNewCallExpr>(&__jule_any_type115);;
				if (((*(_1038_b))._field_Init != nullptr)) {
					_1ab61767b_inspect(_self_, &((*_1038_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1be70eab2:;
			{
				jule::Ptr<_1aaa348e0_BuiltinPrintCallExpr> _1088_c = (*(_3728_m)).cast_ptr<_1aaa348e0_BuiltinPrintCallExpr>(&__jule_any_type24);;
				_1ab61767b_inspect(_self_, &((*((*(_1088_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1be70eb39:;
			{
				jule::Ptr<_1aaa34bdc_BuiltinPrintlnCallExpr> _1118_c = (*(_3728_m)).cast_ptr<_1aaa34bdc_BuiltinPrintlnCallExpr>(&__jule_any_type25);;
				_1ab61767b_inspect(_self_, &((*((*(_1118_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1be70ebb1:;
			{
				jule::Ptr<_1aaa35490_BuiltinPanicCallExpr> _1148_c = (*(_3728_m)).cast_ptr<_1aaa35490_BuiltinPanicCallExpr>(&__jule_any_type26);;
				_1ab61767b_inspect(_self_, &((*(_1148_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1be70ec38:;
			{
				jule::Ptr<_1aaa37096_BuiltinErrorCallExpr> _1178_c = (*(_3728_m)).cast_ptr<_1aaa37096_BuiltinErrorCallExpr>(&__jule_any_type20);;
				_1ab61767b_inspect(_self_, &((*((*(_1178_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1be70ecb0:;
			{
				jule::Ptr<_1aaa35946_BuiltinMakeCallExpr> _1208_b = (*(_3728_m)).cast_ptr<_1aaa35946_BuiltinMakeCallExpr>(&__jule_any_type116);;
				if (((*(_1208_b))._field_Len != nullptr)) {
					_1ab61767b_inspect(_self_, &((*_1208_b.alloc)._field_Len));
				};
				if (((*(_1208_b))._field_Cap != nullptr)) {
					_1ab61767b_inspect(_self_, &((*_1208_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1be70ed37:;
			{
				jule::Ptr<_1aaa35d20_BuiltinAppendCallExpr> _1288_b = (*(_3728_m)).cast_ptr<_1aaa35d20_BuiltinAppendCallExpr>(&__jule_any_type23);;
				_1ab61767b_inspect(_self_, &((*(_1288_b))._field_Dest));
				_1ab61767b_inspect(_self_, &((*_1288_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1be70edae:;
			{
				jule::Ptr<_1aaa3611c_BuiltinLenCallExpr> _1328_l = (*(_3728_m)).cast_ptr<_1aaa3611c_BuiltinLenCallExpr>(&__jule_any_type117);;
				_1ab61767b_inspect(_self_, &((*((*(_1328_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1be70ee36:;
			{
				jule::Ptr<_1aaa36419_BuiltinCapCallExpr> _1358_c = (*(_3728_m)).cast_ptr<_1aaa36419_BuiltinCapCallExpr>(&__jule_any_type118);;
				_1ab61767b_inspect(_self_, &((*((*(_1358_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1be70eead:;
			{
				jule::Ptr<_1aaa367e3_BuiltinDeleteCallExpr> _1388_b = (*(_3728_m)).cast_ptr<_1aaa367e3_BuiltinDeleteCallExpr>(&__jule_any_type28);;
				_1ab61767b_inspect(_self_, &((*((*(_1388_b))._field_Dest))._field_Model));
				if (((*_1388_b.alloc)._field_Key != nullptr)) {
					_1ab61767b_inspect(_self_, &((*(*(_1388_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1be710035:;
			{
				jule::Ptr<_1aaa37393_SizeofExpr> _1448_s = (*(_3728_m)).cast_ptr<_1aaa37393_SizeofExpr>(&__jule_any_type119);;
				_1ab61767b_inspect(_self_, &((*(_1448_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1be7100ac:;
			{
				jule::Ptr<_1aaa37a47_AlignofExpr> _1478_a = (*(_3728_m)).cast_ptr<_1aaa37a47_AlignofExpr>(&__jule_any_type120);;
				_1ab61767b_inspect(_self_, &((*(_1478_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1be710134:;
			{
				jule::Ptr<_1aaa383a5_FreeExpr> _1508_f = (*(_3728_m)).cast_ptr<_1aaa383a5_FreeExpr>(&__jule_any_type29);;
				_1ab61767b_inspect(_self_, &((*(_1508_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1be7101ab:;
			{
				jule::Ptr<_1aaa380a8_BackendEmitExpr> _1538_e = (*(_3728_m)).cast_ptr<_1aaa380a8_BackendEmitExpr>(&__jule_any_type22);;
				_1ab61711a_args(_self_, (*(_1538_e))._field_Exprs);
			}
		}
		_match_end_1be70e001:;
	};
}



inline void _1ab6179de_Inspect(_1ab616a21_ExprInspector* _self_, jule::Any* _16128_m, jule::Fn<void,jule::Any*> _16143_f) {
	(*(_self_))._field_handler=_16143_f;
	_1ab61767b_inspect(_self_, _16128_m);
}








inline jule::Bool _1ab61e0de_MetaStrBuilder_eq(_1ab61e0de_MetaStrBuilder *_self_, _1ab61e0de_MetaStrBuilder _other_) {
	return 
		(_self_->_field_Write == _other_._field_Write) &&
		(_self_->_field_WriteByte == _self_->_field_WriteByte) &&
		(_self_->_field_WriteRune == _self_->_field_WriteRune) &&
		(_self_->_field_WriteStr == _self_->_field_WriteStr);
}






inline jule::Bool _1ab61ecb0_MetaRuntime_eq(_1ab61ecb0_MetaRuntime *_self_, _1ab61ecb0_MetaRuntime _other_) {
	return 
		(_self_->_field_ToStr == _other_._field_ToStr) &&
		(_self_->_field_ArrayCmp == _self_->_field_ArrayCmp) &&
		(_self_->_field_RCAdd == _self_->_field_RCAdd) &&
		(_self_->_field_RCLoad == _self_->_field_RCLoad) &&
		(_self_->_field_RCDrop == _self_->_field_RCDrop) &&
		(_self_->_field_RCAddAtomic == _self_->_field_RCAddAtomic) &&
		(_self_->_field_RCLoadAtomic == _self_->_field_RCLoadAtomic) &&
		(_self_->_field_RCDropAtomic == _self_->_field_RCDropAtomic) &&
		(_self_->_field_RuneCount == _self_->_field_RuneCount) &&
		(_self_->_field_Map == _self_->_field_Map) &&
		(_self_->_field_MapIterator == _self_->_field_MapIterator);
}






inline jule::Bool _1ab620783_MetaMathCmplx_eq(_1ab620783_MetaMathCmplx *_self_, _1ab620783_MetaMathCmplx _other_) {
	return 
		(_self_->_field_Cmplx == _other_._field_Cmplx) &&
		(_self_->_field_CmplxAdd == _self_->_field_CmplxAdd) &&
		(_self_->_field_CmplxSub == _self_->_field_CmplxSub) &&
		(_self_->_field_CmplxMul == _self_->_field_CmplxMul) &&
		(_self_->_field_CmplxDiv == _self_->_field_CmplxDiv) &&
		(_self_->_field_CmplxAddZ == _self_->_field_CmplxAddZ) &&
		(_self_->_field_CmplxSubZ == _self_->_field_CmplxSubZ) &&
		(_self_->_field_CmplxMulZ == _self_->_field_CmplxMulZ) &&
		(_self_->_field_CmplxDivZ == _self_->_field_CmplxDivZ);
}






inline jule::Bool _1ab620d8d_Meta_eq(_1ab620d8d_Meta *_self_, _1ab620d8d_Meta _other_) {
	return 
		(_self_->_field_Runtime == _other_._field_Runtime) &&
		(_self_->_field_StrBuilder == _self_->_field_StrBuilder) &&
		(_self_->_field_MathCmplx == _self_->_field_MathCmplx) &&
		(_self_->_field_EntryPoint == _self_->_field_EntryPoint);
}

inline jule::Ptr<_1ab620d8d_Meta> static__1ab621267_Collect(jule::Ptr<_1ab61326a_IR> _7124_ir) {
	jule::Ptr<_1ab620d8d_Meta> _727_meta = jule::new_ptr<_1ab620d8d_Meta>(_1ab620d8d_Meta{._field_Runtime=jule::Ptr<_1ab61ecb0_MetaRuntime>(nullptr), ._field_StrBuilder=jule::Ptr<_1ab61e0de_MetaStrBuilder>(nullptr), ._field_MathCmplx=jule::Ptr<_1ab620783_MetaMathCmplx>(nullptr), ._field_EntryPoint=jule::Ptr<_1aaa3b221_Fn>(nullptr)});;
	(*_727_meta.alloc)._field_Runtime=static__1ab621531_CollectRuntime(&(_7124_ir));
	(*_727_meta.alloc)._field_StrBuilder=static__1ab6217ea_CollectStrBuilder(&(_7124_ir));
	(*_727_meta.alloc)._field_MathCmplx=static__1ab621ab4_CollectMathCmplx(&(_7124_ir));
	return _727_meta;;
}



inline jule::Ptr<_1ab61ecb0_MetaRuntime> static__1ab621531_CollectRuntime(jule::Ptr<_1ab61326a_IR>* _8032_ir) {
	jule::Ptr<_1aab2ee08_ImportInfo> _817_p = _1ab61c3ea_SelectImport((*((*(_8032_ir))))._field_Used, jule::Str::lit("std/runtime", 11));;
	if ((_817_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab61ecb0_MetaRuntime> _857_meta = jule::new_ptr<_1ab61ecb0_MetaRuntime>(_1ab61ecb0_MetaRuntime{._field_ToStr=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_ArrayCmp=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_RCAdd=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_RCLoad=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_RCDrop=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_RCAddAtomic=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_RCLoadAtomic=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_RCDropAtomic=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_RuneCount=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_Map=jule::Ptr<_1aa966767_Struct>(nullptr), ._field_MapIterator=jule::Ptr<_1aa966767_Struct>(nullptr)});;
	(*_857_meta.alloc)._field_ToStr=_1aac843c0_RuntimeFindFn(&(_817_p), jule::Str::lit("toStr", 5));
	(*_857_meta.alloc)._field_ArrayCmp=_1aac843c0_RuntimeFindFn(&(_817_p), jule::Str::lit("arrayCmp", 8));
	(*_857_meta.alloc)._field_RCAdd=(*(_1aac843c0_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAdd", 6))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoad=(*(_1aac843c0_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoad", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDrop=(*(_1aac843c0_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDrop", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCAddAtomic=(*(_1aac843c0_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAddAtomic", 12))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoadAtomic=(*(_1aac843c0_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoadAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDropAtomic=(*(_1aac843c0_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDropAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RuneCount=(*(_1aac843c0_RuntimeFindFn(&(_817_p), jule::Str::lit("runeCount", 9))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_Map=_1aac84788_RuntimeFindStruct(&(_817_p), jule::Str::lit("_Map", 4));
	(*_857_meta.alloc)._field_MapIterator=_1aac84788_RuntimeFindStruct(&(_817_p), jule::Str::lit("mapIterator", 11));
	return _857_meta;;
}



inline jule::Ptr<_1ab61e0de_MetaStrBuilder> static__1ab6217ea_CollectStrBuilder(jule::Ptr<_1ab61326a_IR>* _10635_ir) {
	;
	;
	jule::Ptr<_1aab2ee08_ImportInfo> _1097_p = _1ab61c3ea_SelectImport((*((*(_10635_ir))))._field_Used, jule::Str::lit("std/strings", 11));;
	if ((_1097_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa969605_StructIns> _1137_b = _1aac0254c_Struct((*((*(_1aab30c1c_FindTypeAlias(_1097_p.ptr(), jule::Str::lit("Builder", 7), false)))._field_TypeSym))._field_Type.ptr());;
	jule::Ptr<_1ab61e0de_MetaStrBuilder> _1147_meta = jule::new_ptr<_1ab61e0de_MetaStrBuilder>(_1ab61e0de_MetaStrBuilder{._field_Write=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_WriteByte=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_WriteRune=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_WriteStr=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr)});;
	;
	{
		(*_1147_meta.alloc)._field_Write=(*(_1aa96a66c_FindMethod(_1137_b.ptr(), jule::Str::lit("Write", 5), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteByte=(*(_1aa96a66c_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteByte", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteRune=(*(_1aa96a66c_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteRune", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteStr=(*(_1aa96a66c_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteStr", 8), false)))._field_Instances[0LL];
	};
	return _1147_meta;;
}



inline jule::Ptr<_1ab620783_MetaMathCmplx> static__1ab621ab4_CollectMathCmplx(jule::Ptr<_1ab61326a_IR>* _12334_ir) {
	jule::Ptr<_1aab2ee08_ImportInfo> _1247_p = _1ab61c3ea_SelectImport((*((*(_12334_ir))))._field_Used, jule::Str::lit("std/math/cmplx", 14));;
	if ((_1247_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab620783_MetaMathCmplx> _1287_meta = jule::new_ptr<_1ab620783_MetaMathCmplx>(_1ab620783_MetaMathCmplx{._field_Cmplx=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_CmplxAdd=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_CmplxSub=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_CmplxMul=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_CmplxDiv=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_CmplxAddZ=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_CmplxSubZ=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_CmplxMulZ=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_CmplxDivZ=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr)});;
	;
	(*_1287_meta.alloc)._field_Cmplx=(*(_1aac84788_RuntimeFindStruct(&(_1247_p), jule::Str::lit("Cmplx", 5))))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAdd=(*(_1aa96a66c_FindMethod((*_1287_meta.alloc)._field_Cmplx.ptr(), jule::Str::lit("Add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSub=(*(_1aa96a66c_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMul=(*(_1aa96a66c_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDiv=(*(_1aa96a66c_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Div", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAddZ=(*(_1aa96a66c_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSubZ=(*(_1aa96a66c_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMulZ=(*(_1aa96a66c_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDivZ=(*(_1aa96a66c_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("div", 3), false)))._field_Instances[0LL];
	return _1287_meta;;
}















inline jule::Ptr<_1ac7acec4_ObjectDeadCode> static__1ac7ad4be_new(jule::Ptr<_1ab61326a_IR>* _2521_ir) {
	return jule::new_ptr<_1ac7acec4_ObjectDeadCode>(_1ac7acec4_ObjectDeadCode{._field_live=_1ac7acbb6_liveTable{._field_vars=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1aa969605_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1aaa46935_Trait>>(nullptr)}, ._field_ir=(*(_2521_ir))});;
}



inline jule::Bool _1be77707a_isLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aa969605_StructIns>* _3127_t) {
	jule::Slice<jule::Ptr<_1aa969605_StructIns>> _3211_live = nullptr;;
	{
		
{
			_case_begin_1be778ad7:;
			{
				_3211_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1be7789a5:;
	};
	{
		auto expr = &(_3211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be779049:;
		if (it != expr_end) {
			jule::I32 _437_i = it - expr->begin();
			{
				if ((_3211_live[_437_i] == (*(_3127_t)))) {
					return true;;
				};
			}
			_iter_next_1be779049:;
			++it;
			_437_i++;
			goto _iter_begin_1be779049;
		}
		_iter_end_1be779049:;
	};
	return false;;
}

inline jule::Bool _1be77d900_isLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _3127_t) {
	jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>> _3211_live = nullptr;;
	{
		
{
			_case_begin_1be7803a2:;
			{
				_3211_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1be7802d6:;
	};
	{
		auto expr = &(_3211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be780528:;
		if (it != expr_end) {
			jule::I32 _437_i = it - expr->begin();
			{
				if ((_3211_live[_437_i] == (*(_3127_t)))) {
					return true;;
				};
			}
			_iter_next_1be780528:;
			++it;
			_437_i++;
			goto _iter_begin_1be780528;
		}
		_iter_end_1be780528:;
	};
	return false;;
}

inline jule::Bool _1be788bd5_isLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aaa46935_Trait>* _3127_t) {
	jule::Slice<jule::Ptr<_1aaa46935_Trait>> _3211_live = nullptr;;
	{
		
{
			_case_begin_1be78a7a8:;
			{
				_3211_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1be78a610:;
	};
	{
		auto expr = &(_3211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be78b732:;
		if (it != expr_end) {
			jule::I32 _437_i = it - expr->begin();
			{
				if ((_3211_live[_437_i] == (*(_3127_t)))) {
					return true;;
				};
			}
			_iter_next_1be78b732:;
			++it;
			_437_i++;
			goto _iter_begin_1be78b732;
		}
		_iter_end_1be78b732:;
	};
	return false;;
}

inline jule::Bool _1be79399d_isLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aab70795_Var>* _3127_t) {
	jule::Slice<jule::Ptr<_1aab70795_Var>> _3211_live = nullptr;;
	{
		
{
			_case_begin_1be79520d:;
			{
				_3211_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1be795384:;
	};
	{
		auto expr = &(_3211_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7953ea:;
		if (it != expr_end) {
			jule::I32 _437_i = it - expr->begin();
			{
				if ((_3211_live[_437_i] == (*(_3127_t)))) {
					return true;;
				};
			}
			_iter_next_1be7953ea:;
			++it;
			_437_i++;
			goto _iter_begin_1be7953ea;
		}
		_iter_end_1be7953ea:;
	};
	return false;;
}



inline void _1be779489_pushLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aa969605_StructIns> _5132_t) {
	{
		
{
			_case_begin_1be77acb5:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa969605_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5132_t; __jule_collection; }));
			}
		}
		_match_end_1be779b93:;
	};
}

inline void _1be77e99a_pushLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _5132_t) {
	{
		
{
			_case_begin_1be782b79:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5132_t; __jule_collection; }));
			}
		}
		_match_end_1be782151:;
	};
}

inline void _1be78a995_pushLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aaa46935_Trait> _5132_t) {
	{
		
{
			_case_begin_1be78c7aa:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa46935_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5132_t; __jule_collection; }));
			}
		}
		_match_end_1be78b0e4:;
	};
}

inline void _1be796c04_pushLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aab70795_Var> _5132_t) {
	{
		
{
			_case_begin_1be7977b5:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5132_t; __jule_collection; }));
			}
		}
		_match_end_1be796572:;
	};
}



inline void _1ac7add71_pushStructAsLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aa969605_StructIns>* _6438_s) {
	if (_1be77707a_isLive(_self_, _6438_s)) {
		return;;
	};
	_1be779489_pushLive(_self_, (*(_6438_s)));
	_1ac7ae129_setReferencesAsLive(_self_, &((*((*(_6438_s))))._field_Refers));
	jule::Bool _703_allLive = _1ac7b177a_isAllMethodsLive((*((*(_6438_s))))._field_Decl);;
	{
		auto expr = &((*((*(_6438_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be77b0e5:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _7115_m = *it;
			{
				{
					auto expr = &((*(_7115_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be77c855:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3e2ce_FnIns> _7216_ins = *it;
						{
							if (_1be77d900_isLive(_self_, &(_7216_ins))) {
								goto _iter_next_1be77c855;
							};
							if (_703_allLive) {
								_1be77e99a_pushLive(_self_, _7216_ins);
								_1ac7ae129_setReferencesAsLive(_self_, &((*(_7216_ins))._field_Refers));
								goto _iter_next_1be77c855;
							};
							if (_1ab619282_IsTraitMethod(_6438_s, &(_7216_ins))) {
								_1be77e99a_pushLive(_self_, _7216_ins);
								_1ac7ae129_setReferencesAsLive(_self_, &((*(_7216_ins))._field_Refers));
							};
							;
							jule::Ptr<_1aaa3b221_Fn> _989__str = _1aa96a66c_FindMethod((*(_6438_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_989__str != nullptr) && static__1aab71a1b_Str(_989__str))) {
								jule::Ptr<_1aaa3e2ce_FnIns> _10010_fins = (*_989__str.alloc)._field_Instances[0LL];;
								_1be77e99a_pushLive(_self_, _10010_fins);
								_1ac7ae129_setReferencesAsLive(_self_, &((*(_10010_fins))._field_Refers));
							};
						}
						_iter_next_1be77c855:;
						++it;
						goto _iter_begin_1be77c855;
					}
					_iter_end_1be77c855:;
				};
			}
			_iter_next_1be77b0e5:;
			++it;
			goto _iter_begin_1be77b0e5;
		}
		_iter_end_1be77b0e5:;
	};
}



inline void _1ac7ae129_setReferencesAsLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aab1cd80_ReferenceStack>* _10841_rs) {
	if (((*(_10841_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _1127_i = 0LL;;
	for (; (_1127_i < _1aab1d5de_Len((*(_10841_rs)).ptr())); (_1127_i)++) {
		{
			jule::Any _1148_ref = _1aab1d930_At((*(_10841_rs)).ptr(), _1127_i);;
			{
				auto &_match_expr{ _1148_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_1be78793c:;
					{
						jule::Ptr<_1aaa46935_Trait> _1179_t = _1148_ref.unsafe_cast_ptr<_1aaa46935_Trait>();;
						if (_1be788bd5_isLive(_self_, &(_1179_t))) {
							goto _iter_next_1be77c48c;
						};
						_1be78a995_pushLive(_self_, _1179_t);
						{
							auto expr = &((*(_1179_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1be78860d:;
							if (it != expr_end) {
								jule::Ptr<_1aaa3b221_Fn> _12217_ins = *it;
								{
									{
										auto expr = &((*(_12217_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1be78c6de:;
										if (it != expr_end) {
											jule::Ptr<_1aaa3e2ce_FnIns> _12318_mins = *it;
											{
												if (_1be77d900_isLive(_self_, &(_12318_mins))) {
													goto _iter_next_1be78c6de;
												};
												_1be77e99a_pushLive(_self_, _12318_mins);
												_1ac7ae129_setReferencesAsLive(_self_, &((*(_12318_mins))._field_Refers));
											}
											_iter_next_1be78c6de:;
											++it;
											goto _iter_begin_1be78c6de;
										}
										_iter_end_1be78c6de:;
									};
								}
								_iter_next_1be78860d:;
								++it;
								goto _iter_begin_1be78860d;
							}
							_iter_end_1be78860d:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type65) {
					_case_begin_1be787772:;
					{
						jule::Ptr<_1aaa3e2ce_FnIns> _1329_f = _1148_ref.unsafe_cast_ptr<_1aaa3e2ce_FnIns>();;
						if (_1be77d900_isLive(_self_, &(_1329_f))) {
							goto _match_end_1be7877e9;
						};
						if ((((*(_1329_f))._field_Owner != nullptr) && (!((*((*_1329_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1be77707a_isLive(_self_, &((*_1329_f.alloc)._field_Owner))))) {
								_1be779489_pushLive(_self_, (*_1329_f.alloc)._field_Owner);
								_1ac7ae129_setReferencesAsLive(_self_, &((*(*(_1329_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1be77e99a_pushLive(_self_, _1329_f);
						_1ac7ae129_setReferencesAsLive(_self_, &((*(_1329_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1be7879a3:;
					{
						jule::Ptr<_1aab70795_Var> _1459_v = _1148_ref.unsafe_cast_ptr<_1aab70795_Var>();;
						if (_1be79399d_isLive(_self_, &(_1459_v))) {
							goto _match_end_1be7877e9;
						};
						_1be796c04_pushLive(_self_, _1459_v);
						_1ac7ae129_setReferencesAsLive(_self_, &((*(_1459_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type64) {
					_case_begin_1be787a19:;
					{
						jule::Ptr<_1aa969605_StructIns> _1529_s = _1148_ref.unsafe_cast_ptr<_1aa969605_StructIns>();;
						_1ac7add71_pushStructAsLive(_self_, &(_1529_s));
					}
				}
				_match_end_1be7877e9:;
			};
		}
	_iter_next_1be77c48c:;
	}
	_iter_end_1be77c48c:;;
}



inline void _1ac7ae3d2_inits(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aab3267a_Package>* _15827_pkg) {
	{
		auto expr = &((*((*(_15827_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be786d7b:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _15915_file = *it;
			{
				{
					auto expr = &((*(_15915_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be799a1a:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3b221_Fn> _16016_f = *it;
						{
							if ((*(_16016_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1aaa3e2ce_FnIns> _16210_ins = (*(_16016_f))._field_Instances[0LL];;
								if ((!(_1be77d900_isLive(_self_, &(_16210_ins))))) {
									_1be77e99a_pushLive(_self_, _16210_ins);
								};
								_1ac7ae129_setReferencesAsLive(_self_, &((*(_16210_ins))._field_Refers));
							};
						}
						_iter_next_1be799a1a:;
						++it;
						goto _iter_begin_1be799a1a;
					}
					_iter_end_1be799a1a:;
				};
			}
			_iter_next_1be786d7b:;
			++it;
			goto _iter_begin_1be786d7b;
		}
		_iter_end_1be786d7b:;
	};
}



inline void _1ac7ae68a_collectLivePackage(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aab3267a_Package>* _17240_pkg) {
	_1ac7ae3d2_inits(_self_, _17240_pkg);
	_1ab616009_IterFiles(_17240_pkg, jule::__new_closure<void,jule::Ptr<_1aaa42524_SymTab>*>((void*)__jule_anon_1be79c6ee, jule::Ptr<__jule_anon_1be79c6ee_ctx>::make(__jule_anon_1be79c6ee_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1be79c6ee_ctx_handler));
	if (_1bb09ba4b_Test) {
		if ((((*((*(_17240_pkg))))._field_Files.len() > 0LL) && _1ab619606_IsStdPackage((*((*((*((*(_17240_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1aa966767_Struct> _2029_s = _1aab33846_FindStruct((*(_17240_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1aa969605_StructIns> _2039_ins = (*(_2029_s))._field_Instances[0LL];;
			_1ac7add71_pushStructAsLive(_self_, &(_2039_ins));
			{
				auto expr = &((*(_2039_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1be7a3c66:;
				if (it != expr_end) {
					jule::Ptr<_1aaa3b221_Fn> _20517_m = *it;
					{
						{
							auto expr = &((*(_20517_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1be7a47d3:;
							if (it != expr_end) {
								jule::Ptr<_1aaa3e2ce_FnIns> _20618_mins = *it;
								{
									if (_1be77d900_isLive(_self_, &(_20618_mins))) {
										goto _iter_next_1be7a47d3;
									};
									_1be77e99a_pushLive(_self_, _20618_mins);
									_1ac7ae129_setReferencesAsLive(_self_, &((*(_20618_mins))._field_Refers));
								}
								_iter_next_1be7a47d3:;
								++it;
								goto _iter_begin_1be7a47d3;
							}
							_iter_end_1be7a47d3:;
						};
					}
					_iter_next_1be7a3c66:;
					++it;
					goto _iter_begin_1be7a3c66;
				}
				_iter_end_1be7a3c66:;
			};
		};
		{
			auto expr = &((*((*(_17240_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be7a298a:;
			if (it != expr_end) {
				jule::Ptr<_1aaa42524_SymTab> _21516_file = *it;
				{
					{
						auto expr = &((*(_21516_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be7a6e78:;
						if (it != expr_end) {
							jule::Ptr<_1aaa3b221_Fn> _21617_f = *it;
							{
								if (_1ab61a8b0_HasDirective(&((*(_21617_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1aaa3e2ce_FnIns> _21811_ins = (*_21617_f.alloc)._field_Instances[0LL];;
									if ((!(_1be77d900_isLive(_self_, &(_21811_ins))))) {
										_1be77e99a_pushLive(_self_, _21811_ins);
									};
									_1ac7ae129_setReferencesAsLive(_self_, &((*(_21811_ins))._field_Refers));
								};
							}
							_iter_next_1be7a6e78:;
							++it;
							goto _iter_begin_1be7a6e78;
						}
						_iter_end_1be7a6e78:;
					};
				}
				_iter_next_1be7a298a:;
				++it;
				goto _iter_begin_1be7a298a;
			}
			_iter_end_1be7a298a:;
		};
	};
}



inline void _1ac7ae888_collectLive(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7a7c8c:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _23015_used = *it;
			{
				if ((!((*(_23015_used))._field_Binded))) {
					_1ac7ae68a_collectLivePackage(_self_, &((*_23015_used.alloc)._field_Package));
				};
			}
			_iter_next_1be7a7c8c:;
			++it;
			goto _iter_begin_1be7a7c8c;
		}
		_iter_end_1be7a7c8c:;
	};
	_1ac7ae68a_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1aaa3b221_Fn> _2387_main = _1aab33c42_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2387_main != nullptr)) {
		jule::Ptr<_1aaa3e2ce_FnIns> _2408_ins = (*_2387_main.alloc)._field_Instances[0LL];;
		if ((!(_1be77d900_isLive(_self_, &(_2408_ins))))) {
			_1be77e99a_pushLive(_self_, _2408_ins);
		};
		_1ac7ae129_setReferencesAsLive(_self_, &((*(_2408_ins))._field_Refers));
	};
}



inline void _1ac7aeb41_removeDeadGlobals(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aab70795_Var>>* _24839_vars) {
	jule::I32 _2497_i = 0LL;;
	while ((_2497_i < (*(_24839_vars)).len())) {
		{
			jule::Ptr<_1aab70795_Var> _2514_v = (*(_24839_vars))[_2497_i];;
			if (_1be79399d_isLive(_self_, &(_2514_v))) {
				(_2497_i)++;
				goto _iter_next_1be7ad765;
			};
			(*(_24839_vars))=jule::append((*(_24839_vars)).slice(0LL, _2497_i),(*(_24839_vars)).slice((_2497_i + 1LL)));
		}
	_iter_next_1be7ad765:;
	}
	_iter_end_1be7ad765:;;
}



inline void _1ac7aede9_removeDeadFns(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aaa3b221_Fn>>* _26035_funcs) {
	jule::I32 _2617_i = 0LL;;
	while ((_2617_i < (*(_26035_funcs)).len())) {
		{
			jule::Ptr<_1aaa3b221_Fn> _2638_f = (*(_26035_funcs))[_2617_i];;
			jule::I32 _2648_j = 0LL;;
			while ((_2648_j < (*(_2638_f))._field_Instances.len())) {
				{
					jule::Ptr<_1aaa3e2ce_FnIns> _2665_ins = (*_2638_f.alloc)._field_Instances[_2648_j];;
					if (_1be77d900_isLive(_self_, &(_2665_ins))) {
						(_2648_j)++;
						goto _iter_next_1be7b10c5;
					};
					(*_2638_f.alloc)._field_Instances=jule::append((*_2638_f.alloc)._field_Instances.slice(0LL, _2648_j),(*_2638_f.alloc)._field_Instances.slice((_2648_j + 1LL)));
				}
			_iter_next_1be7b10c5:;
			}
			_iter_end_1be7b10c5:;;
			if (((*_2638_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_26035_funcs))=jule::append((*(_26035_funcs)).slice(0LL, _2617_i),(*(_26035_funcs)).slice((_2617_i + 1LL)));
				goto _iter_next_1be7b0129;
			};
			(_2617_i)++;
		}
	_iter_next_1be7b0129:;
	}
	_iter_end_1be7b0129:;;
}



inline void _1ac7b01a2_removeDeadStructs(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aa966767_Struct>>* _28139_structs) {
	jule::I32 _2827_i = 0LL;;
	while ((_2827_i < (*(_28139_structs)).len())) {
		{
			jule::Ptr<_1aa966767_Struct> _2848_s = (*(_28139_structs))[_2827_i];;
			jule::I32 _2858_j = 0LL;;
			while ((_2858_j < (*(_2848_s))._field_Instances.len())) {
				{
					jule::Ptr<_1aa969605_StructIns> _2879_ins = (*_2848_s.alloc)._field_Instances[_2858_j];;
					_1ac7aede9_removeDeadFns(_self_, &((*(_2879_ins))._field_Methods));
					if ((((*_2879_ins.alloc)._field_Methods.len() != 0LL) || _1be77707a_isLive(_self_, &(_2879_ins)))) {
						(_2858_j)++;
						goto _iter_next_1be7b4c11;
					};
					(*_2848_s.alloc)._field_Instances=jule::append((*_2848_s.alloc)._field_Instances.slice(0LL, _2858_j),(*_2848_s.alloc)._field_Instances.slice((_2858_j + 1LL)));
				}
			_iter_next_1be7b4c11:;
			}
			_iter_end_1be7b4c11:;;
			if (((*_2848_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_28139_structs))=jule::append((*(_28139_structs)).slice(0LL, _2827_i),(*(_28139_structs)).slice((_2827_i + 1LL)));
				goto _iter_next_1be7b3db9;
			};
			(_2827_i)++;
		}
	_iter_next_1be7b3db9:;
	}
	_iter_end_1be7b3db9:;;
}



inline void _1ac7b045a_removeDeadTraits(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aaa46935_Trait>>* _30338_traits) {
	jule::I32 _3047_i = 0LL;;
	while ((_3047_i < (*(_30338_traits)).len())) {
		{
			jule::Ptr<_1aaa46935_Trait> _3068_t = (*(_30338_traits))[_3047_i];;
			if ((!(_1be788bd5_isLive(_self_, &(_3068_t))))) {
				(*(_30338_traits))=jule::append((*(_30338_traits)).slice(0LL, _3047_i),(*(_30338_traits)).slice((_3047_i + 1LL)));
				goto _iter_next_1be7b853e;
			};
			jule::I32 _3118_j = 0LL;;
			while ((_3118_j < (*(_3068_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1aa966767_Struct> _3135_s = (*_3068_t.alloc)._field_Implemented[_3118_j];;
					if (((*(_3135_s))._field_Instances.len() > 0LL)) {
						(_3118_j)++;
						goto _iter_next_1be7b8e8a;
					};
					(*_3068_t.alloc)._field_Implemented=jule::append((*_3068_t.alloc)._field_Implemented.slice(0LL, _3118_j),(*_3068_t.alloc)._field_Implemented.slice((_3118_j + 1LL)));
				}
			_iter_next_1be7b8e8a:;
			}
			_iter_end_1be7b8e8a:;;
			(_3047_i)++;
		}
	_iter_next_1be7b853e:;
	}
	_iter_end_1be7b853e:;;
}



inline void _1ac7b0713_removeDeadStrictTypeAliases(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>* _32449_aliases) {
	jule::I32 _3257_i = 0LL;;
	while ((_3257_i < (*(_32449_aliases)).len())) {
		{
			jule::Ptr<_1aabec1a1_TypeAlias> _3278_ta = (*(_32449_aliases))[_3257_i];;
			if ((*(_3278_ta))._field_Strict) {
				jule::Ptr<_1aa966767_Struct> _3299_s = (*((*((*((*_3278_ta.alloc)._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)))._field_Decl;;
				jule::I32 _3309_j = 0LL;;
				while ((_3309_j < (*(_3299_s))._field_Instances.len())) {
					{
						jule::Ptr<_1aa969605_StructIns> _33210_ins = (*_3299_s.alloc)._field_Instances[_3309_j];;
						_1ac7aede9_removeDeadFns(_self_, &((*(_33210_ins))._field_Methods));
						if ((((*_33210_ins.alloc)._field_Methods.len() != 0LL) || _1be77707a_isLive(_self_, &(_33210_ins)))) {
							(_3309_j)++;
							goto _iter_next_1be7be2ae;
						};
						(*_3299_s.alloc)._field_Instances=jule::append((*_3299_s.alloc)._field_Instances.slice(0LL, _3309_j),(*_3299_s.alloc)._field_Instances.slice((_3309_j + 1LL)));
					}
				_iter_next_1be7be2ae:;
				}
				_iter_end_1be7be2ae:;;
				if (((*_3299_s.alloc)._field_Instances.len() == 0LL)) {
					(*(_32449_aliases))=jule::append((*(_32449_aliases)).slice(0LL, _3257_i),(*(_32449_aliases)).slice((_3257_i + 1LL)));
					goto _iter_next_1be7bc224;
				};
			};
			(_3257_i)++;
		}
	_iter_next_1be7bc224:;
	}
	_iter_end_1be7bc224:;;
}



inline void _1ac7b09bb_removeDeadsFile(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aaa42524_SymTab>* _34937_file) {
	_1ac7aede9_removeDeadFns(_self_, &((*((*(_34937_file))))._field_Funcs));
	_1ac7b01a2_removeDeadStructs(_self_, &((*((*(_34937_file))))._field_Structs));
	_1ac7b045a_removeDeadTraits(_self_, &((*((*(_34937_file))))._field_Traits));
	_1ac7aeb41_removeDeadGlobals(_self_, &((*((*(_34937_file))))._field_Vars));
	_1ac7b0713_removeDeadStrictTypeAliases(_self_, &((*((*(_34937_file))))._field_TypeAliases));
}



inline void _1ac7b0c74_removeDeadsPackage(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_, jule::Ptr<_1aab3267a_Package>* _35740_pkg) {
	{
		auto expr = &((*((*(_35740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7c47d1:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _35815_file = *it;
			{
				_1ac7b09bb_removeDeadsFile(_self_, &(_35815_file));
			}
			_iter_next_1be7c47d1:;
			++it;
			goto _iter_begin_1be7c47d1;
		}
		_iter_end_1be7c47d1:;
	};
}



inline void _1ac7b0e72_removeDeads(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7c502e:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _36415_used = *it;
			{
				if ((!((*(_36415_used))._field_Binded))) {
					_1ac7b0c74_removeDeadsPackage(_self_, &((*_36415_used.alloc)._field_Package));
				};
			}
			_iter_next_1be7c502e:;
			++it;
			goto _iter_begin_1be7c502e;
		}
		_iter_end_1be7c502e:;
	};
	_1ac7b0c74_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1ac7b1170_elimanate(jule::Ptr<_1ac7acec4_ObjectDeadCode> _self_) {
	_1ac7ae888_collectLive(_self_);
	_1ac7b0e72_removeDeads(_self_);
}








inline jule::Bool _1ac7b23b3_scopeDeadCode_eq(_1ac7b23b3_scopeDeadCode *_self_, _1ac7b23b3_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1ac7b28d0_optimizeChild(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaec832_Scope>* _1935_s) {
	jule::Ptr<_1ac7b23b3_scopeDeadCode> _207_sdc = jule::new_ptr<_1ac7b23b3_scopeDeadCode>(_1ac7b23b3_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_1935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1ac7b52ea_optimizeStmts(_207_sdc);
	};
}



inline void _1ac7b2b88_optimizeBodyChildExceptional(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaec832_Scope>* _2950_s) {
	jule::Ptr<_1ac7b23b3_scopeDeadCode> _307_sdc = jule::new_ptr<_1ac7b23b3_scopeDeadCode>(_1ac7b23b3_scopeDeadCode{._field_parent=jule::Ptr<_1ac7b23b3_scopeDeadCode>(nullptr), ._field_s=(*(_2950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1ac7b52ea_optimizeStmts(_307_sdc);
	};
}



inline void _1ac7b2e41_optimizeBodyChild(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaec832_Scope>* _3939_s) {
	jule::Ptr<_1ac7b23b3_scopeDeadCode> _407_sdc = jule::new_ptr<_1ac7b23b3_scopeDeadCode>(_1ac7b23b3_scopeDeadCode{._field_parent=jule::Ptr<_1ac7b23b3_scopeDeadCode>(nullptr), ._field_s=(*(_3939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1ac7b52ea_optimizeStmts(_407_sdc);
	};
}



inline void _1ac7b31e9_optimizeExpr(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Any* _4834_model) {
	_1ac7b694a_exprDeadCode _493_edc = static__1ac7b6d68_new(&(_self_));;
	_1ac7b7121_optimize(&_493_edc, _4834_model);
}



inline void _1ac7b33e7_eliminateFollowed(_1ac7b23b3_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1ac7b23b3_scopeDeadCode> _607_parent = (*(_self_))._field_parent;;
	while ((_607_parent != nullptr)) {
		{
			{
				((*((*(_607_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_607_parent))._field_i + 1LL));;
			};
			_607_parent=(*(_607_parent))._field_parent;
		}
	_iter_next_1be7dc266:;
	}
	_iter_end_1be7dc266:;;
}



inline void _1ac7b36a0_pushGoto(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aab0099a_GotoSt> _6929_gt) {
	jule::I32 _707_i = 0LL;;
	for (; (_707_i < (*((*(_self_))._field_labels)).len()); (_707_i)++) {
		{
			if (((*(_6929_gt))._field_Ident == (*((*(*(_self_))._field_labels.alloc)[_707_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1be7e0863:;
	}
	_iter_end_1be7e0863:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab0099a_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6929_gt; __jule_collection; }));
}



inline void _1ac7b3958_pushLabel(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aab0033a_Label> _7930_l) {
	jule::I32 _807_i = 0LL;;
	while ((_807_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_7930_l))._field_Ident == (*((*(*(_self_))._field_gotos.alloc)[_807_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_807_i), (*((*(_self_))._field_gotos)).slice((_807_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1be7e2a1e;
			};
			(_807_i)++;
		}
	_iter_next_1be7e2a1e:;
	}
	_iter_end_1be7e2a1e:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab0033a_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7930_l; __jule_collection; }));
}



inline void _1ac7b3c11_optimizeRangeIter(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaee6ad_RangeIter> _9238_it) {
	_1ac7b31e9_optimizeExpr(_self_, &((*((*(_9238_it))._field_Expr))._field_Model));
	_1ac7b2e41_optimizeBodyChild(_self_, &((*_9238_it.alloc)._field_Scope));
}



inline void _1ac7b3eb9_optimizeWhileIter(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaedbc9_WhileIter> _9738_it) {
	_1ac7b31e9_optimizeExpr(_self_, &((*(_9738_it))._field_Expr));
	if (((*_9738_it.alloc)._field_Next != nullptr)) {
		_1ac7b50ec_optimizeStmt(_self_, (*_9738_it.alloc)._field_Next);
	};
	_1ac7b2e41_optimizeBodyChild(_self_, &((*_9738_it.alloc)._field_Scope));
}



inline void _1ac7b4272_optimizeInfIter(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaed723_InfIter> _10536_it) {
	_1ac7b2e41_optimizeBodyChild(_self_, &((*(_10536_it))._field_Scope));
}



inline void _1ac7b452a_optimizeConditional(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aaaed426_Conditional> _10940_c) {
	{
		auto expr = &((*(_10940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7e96b3:;
		if (it != expr_end) {
			jule::Ptr<_1aaaecc0b_If> _11015_case = *it;
			{
				if ((_11015_case != nullptr)) {
					_1ac7b31e9_optimizeExpr(_self_, &((*_11015_case.alloc)._field_Expr));
					_1ac7b2e41_optimizeBodyChild(_self_, &((*_11015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1be7e96b3:;
			++it;
			goto _iter_begin_1be7e96b3;
		}
		_iter_end_1be7e96b3:;
	};
	if (((*_10940_c.alloc)._field_Default != nullptr)) {
		if (((*_10940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1ac7b28d0_optimizeChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1ac7b2e41_optimizeBodyChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1ac7b47d3_optimizeMatch(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aab0232b_Match> _12734_m) {
	{
		auto expr = &((*(_12734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7ecc05:;
		if (it != expr_end) {
			jule::Ptr<_1aab02b23_Case> _12815_case = *it;
			{
				{
					auto expr = &((*(_12815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be7ed6ea:;
					if (it != expr_end) {
						jule::Ptr<_1aabb8db5_Data> _12916_expr = *it;
						{
							_1ac7b31e9_optimizeExpr(_self_, &((*(_12916_expr))._field_Model));
						}
						_iter_next_1be7ed6ea:;
						++it;
						goto _iter_begin_1be7ed6ea;
					}
					_iter_end_1be7ed6ea:;
				};
				_1ac7b2e41_optimizeBodyChild(_self_, &((*_12815_case.alloc)._field_Scope));
			}
			_iter_next_1be7ecc05:;
			++it;
			goto _iter_begin_1be7ecc05;
		}
		_iter_end_1be7ecc05:;
	};
	if (((*_12734_m.alloc)._field_Default != nullptr)) {
		if (((*_12734_m.alloc)._field_Cases.len() == 0LL)) {
			_1ac7b28d0_optimizeChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1ac7b2e41_optimizeBodyChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1ac7b4a8b_optimizeAssign(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aab0132a_Assign> _14535_assign) {
	_1ac7b31e9_optimizeExpr(_self_, &((*((*(_14535_assign))._field_Left))._field_Model));
	_1ac7b31e9_optimizeExpr(_self_, &((*((*_14535_assign.alloc)._field_Right))._field_Model));
}



inline void _1ac7b4d44_optimizeMultiAssign(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Ptr<_1aab018ad_MultiAssign> _15040_assign) {
	{
		auto expr = &((*(_15040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be802974:;
		if (it != expr_end) {
			jule::Ptr<_1aabb8db5_Data> _15115_l = *it;
			{
				if ((_15115_l != nullptr)) {
					_1ac7b31e9_optimizeExpr(_self_, &((*_15115_l.alloc)._field_Model));
				};
			}
			_iter_next_1be802974:;
			++it;
			goto _iter_begin_1be802974;
		}
		_iter_end_1be802974:;
	};
	_1ac7b31e9_optimizeExpr(_self_, &((*_15040_assign.alloc)._field_Right));
}



inline void _1ac7b50ec_optimizeStmt(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_, jule::Any _15933_st) {
	{
		auto &_match_expr{ _15933_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1be8045d0:;
			{
				jule::Ptr<_1aaaec832_Scope> _1628_scope = _15933_st.unsafe_cast_ptr<_1aaaec832_Scope>();;
				if ((*(_1628_scope))._field_Deferred) {
					_1ac7b55e7_eliminateDeadCodeOfScope(_1628_scope);
				} else {
					_1ac7b28d0_optimizeChild(_self_, &(_1628_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1be804349:;
			{
				_1ac7b3c11_optimizeRangeIter(_self_, _15933_st.unsafe_cast_ptr<_1aaaee6ad_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1be804657:;
			{
				_1ac7b3eb9_optimizeWhileIter(_self_, _15933_st.unsafe_cast_ptr<_1aaaedbc9_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1be8046ce:;
			{
				_1ac7b4272_optimizeInfIter(_self_, _15933_st.unsafe_cast_ptr<_1aaaed723_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1be804756:;
			{
				_1ac7b452a_optimizeConditional(_self_, _15933_st.unsafe_cast_ptr<_1aaaed426_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1be8047cd:;
			{
				_1ac7b47d3_optimizeMatch(_self_, _15933_st.unsafe_cast_ptr<_1aab0232b_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1be804855:;
			{
				_1ac7b4a8b_optimizeAssign(_self_, _15933_st.unsafe_cast_ptr<_1aab0132a_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1be8048cc:;
			{
				_1ac7b4d44_optimizeMultiAssign(_self_, _15933_st.unsafe_cast_ptr<_1aab018ad_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1be804954:;
			{
				jule::Ptr<_1aabb8db5_Data> _1838_d = _15933_st.unsafe_cast_ptr<_1aabb8db5_Data>();;
				if ((*_self_.alloc)._field_except) {
					goto _match_end_1be80447b;
				};
				{
					auto &_match_expr{ (*(_1838_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20 || _match_expr.type == &__jule_any_type26) {
						_case_begin_1be809bac:;
						{
							_1ac7b33e7_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1be80a31c:;
						{
							_1ac7b31e9_optimizeExpr(_self_, &((*(_1838_d))._field_Model));
						}
					}
					_match_end_1be80a2a6:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1be8049cb:;
			{
				_1ac7b33e7_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1be804a53:;
			{
				_1ac7b36a0_pushGoto(_self_, _15933_st.unsafe_cast_ptr<_1aab0099a_GotoSt>());
				_1ac7b33e7_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1be804aca:;
			{
				_1ac7b3958_pushLabel(_self_, _15933_st.unsafe_cast_ptr<_1aab0033a_Label>());
			}
		}
		_match_end_1be80447b:;
	};
}



inline void _1ac7b52ea_optimizeStmts(jule::Ptr<_1ac7b23b3_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1ac7b50ec_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1be80cc48:;
	}
	_iter_end_1be80cc48:;;
}








inline jule::Bool _1ac7b694a_exprDeadCode_eq(_1ac7b694a_exprDeadCode *_self_, _1ac7b694a_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1ac7b694a_exprDeadCode static__1ac7b6d68_new(jule::Ptr<_1ac7b23b3_scopeDeadCode>* _1421_s) {
	return _1ac7b694a_exprDeadCode{._field_s=(*(_1421_s))};;
}



inline void _1ac7b7121_optimize(_1ac7b694a_exprDeadCode* _self_, jule::Any* _2025_model) {
	jule::Ptr<_1ab616a21_ExprInspector> _217_inspector = static__1ab616d62_New();;
	_1ab6179de_Inspect(_217_inspector.ptr(), _2025_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1be810850, jule::Ptr<__jule_anon_1be810850_ctx>::make(__jule_anon_1be810850_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1be810850_ctx_handler));
}








inline jule::Bool _1ac3d4d60_StrFromBytes_eq(_1ac3d4d60_StrFromBytes *_self_, _1ac3d4d60_StrFromBytes _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ac3d513a_ExceptionalForwardingExpr_eq(_1ac3d513a_ExceptionalForwardingExpr *_self_, _1ac3d513a_ExceptionalForwardingExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1ac3d53c1_FnCallIgnoreExceptionalExpr_eq(_1ac3d53c1_FnCallIgnoreExceptionalExpr *_self_, _1ac3d53c1_FnCallIgnoreExceptionalExpr _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}










inline jule::Bool _1ac3d5adb_SwapExpr_eq(_1ac3d5adb_SwapExpr *_self_, _1ac3d5adb_SwapExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1ac3d5eb5_EmptyCompareExpr_eq(_1ac3d5eb5_EmptyCompareExpr *_self_, _1ac3d5eb5_EmptyCompareExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1ac3d62b2_RefExpr_eq(_1ac3d62b2_RefExpr *_self_, _1ac3d62b2_RefExpr _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1ac3d6801_StrCompExpr_eq(_1ac3d6801_StrCompExpr *_self_, _1ac3d6801_StrCompExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1ac3d6d84_MutSlicingExpr_eq(_1ac3d6d84_MutSlicingExpr *_self_, _1ac3d6d84_MutSlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1ac3d7181_UnsafeBinaryExpr_eq(_1ac3d7181_UnsafeBinaryExpr *_self_, _1ac3d7181_UnsafeBinaryExpr _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1ac3d747d_UnsafeIndexingExpr_eq(_1ac3d747d_UnsafeIndexingExpr *_self_, _1ac3d747d_UnsafeIndexingExpr _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1ac3d7857_PushToSliceExpr_eq(_1ac3d7857_PushToSliceExpr *_self_, _1ac3d7857_PushToSliceExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1ac3d7c31_AppendToSliceExpr_eq(_1ac3d7c31_AppendToSliceExpr *_self_, _1ac3d7c31_AppendToSliceExpr _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1ac3d810a_StrRuneIter_eq(_1ac3d810a_StrRuneIter *_self_, _1ac3d810a_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1ac3d8407_UnsafeDerefExpr_eq(_1ac3d8407_UnsafeDerefExpr *_self_, _1ac3d8407_UnsafeDerefExpr _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1ac3d8935_UnsafeCastingExpr_eq(_1ac3d8935_UnsafeCastingExpr *_self_, _1ac3d8935_UnsafeCastingExpr _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1ac3d9491_nilVar_eq(_1ac3d9491_nilVar *_self_, _1ac3d9491_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1ac3d9c77_pushVar(_1ac3d97d2_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe) {
	if (((!(_1ac695c25_Access)) || (_2323_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be831244:;
		if (it != expr_end) {
			jule::I32 _287_i = it - expr->begin();
			{
				_1ac3d9491_nilVar *_299_v = &((*(_self_))._field_vars[_287_i]);;
				if (((*(_299_v))._field_var == _2323_var)) {
					(*(_299_v))._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1be831244:;
			++it;
			_287_i++;
			goto _iter_begin_1be831244;
		}
		_iter_end_1be831244:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be832278:;
		if (it != expr_end) {
			jule::I32 _367_i = it - expr->begin();
			{
				_1ac3d9491_nilVar *_379_v = &((*(_self_))._field_vars[_367_i]);;
				if (((*(_379_v))._field_var == 0LLU)) {
					(*(_379_v))._field_var=_2323_var;
					(*(_379_v))._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1be832278:;
			++it;
			_367_i++;
			goto _iter_begin_1be832278;
		}
		_iter_end_1be832278:;
	};
	{ jule::Slice<_1ac3d9491_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1ac3d9491_nilVar{._field_var=_2323_var, ._field_safe=_2337_safe}); };
}



inline jule::Bool _1ac3da0b8_removeVar(_1ac3d97d2_nils* _self_, jule::Uintptr _4825_var) {
	if ((_4825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be83480d:;
			if (it != expr_end) {
				jule::I32 _508_i = it - expr->begin();
				{
					_1ac3d9491_nilVar *_5110_v = &((*(_self_))._field_vars[_508_i]);;
					if (((*(_5110_v))._field_var == _4825_var)) {
						(*(_5110_v))._field_var=0LLU;
						(*(_5110_v))._field_safe=false;
						return true;;
					};
				}
				_iter_next_1be83480d:;
				++it;
				_508_i++;
				goto _iter_begin_1be83480d;
			}
			_iter_end_1be83480d:;
		};
	};
	return false;;
}



inline jule::Bool _1ac3da409_isSafe(_1ac3d97d2_nils* _self_, jule::Uintptr _6322_var) {
	if ((_6322_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1be836656:;
			if (it != expr_end) {
				_1ac3d9491_nilVar _6511_v = *it;
				{
					if ((_6511_v._field_var == _6322_var)) {
						return _6511_v._field_safe;;
					};
				}
				_iter_next_1be836656:;
				++it;
				goto _iter_begin_1be836656;
			}
			_iter_end_1be836656:;
		};
	};
	return false;;
}








inline jule::Bool _1ac67bd4e_scopeOptimizer_eq(_1ac67bd4e_scopeOptimizer *_self_, _1ac67bd4e_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1ac67bd4e_scopeOptimizer> static__1ac67c448_new(jule::Ptr<_1aaaec832_Scope> _2420_scope) {
	jule::Ptr<_1ac67bd4e_scopeOptimizer> _257_sc = jule::new_ptr<_1ac67bd4e_scopeOptimizer>(_1ac67bd4e_scopeOptimizer{._field_parent=jule::Ptr<_1ac67bd4e_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_2420_scope, ._field_data=jule::new_ptr<_1ac690071_data>(_1ac690071_data{._field_boundary=jule::new_ptr<_1ac69232b_boundary>(_1ac69232b_boundary{._field_vars=jule::Slice<_1ac691eda_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1ac3d97d2_nils>(_1ac3d97d2_nils{._field_vars=jule::Slice<_1ac3d9491_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1ac68c447_dynamic>(_1ac68c447_dynamic{._field_vars=jule::Slice<_1ac68c106_dynamicVar>(nullptr)})})});;
	return _257_sc;;
}



inline void _1ac67c701_setCurrentStmt(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Any _3635_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_3635_stmt))))));
}



inline void _1ac67c8ee_removeCurrent(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1ac67cb85_isLastStmt(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_) {
	jule::Ptr<_1ac67bd4e_scopeOptimizer> _467_r = _self_;;
	for (; (_467_r != nullptr); _467_r=(*(_467_r))._field_parent) {
		{
			if ((((*((*_467_r.alloc)._field_scope))._field_Stmts.len() - (*_467_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1be84d717:;
	}
	_iter_end_1be84d717:;;
	return true;;
}



inline jule::Bool _1ac67ce1b_isIter(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_) {
	jule::Ptr<_1ac67bd4e_scopeOptimizer> _567_r = (*(_self_))._field_parent;;
	for (; (_567_r != nullptr); _567_r=(*(_567_r))._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_567_r))._field_scope))._field_Stmts[(*(_567_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type36 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type32) {
					_case_begin_1be851000:;
					{
						return true;;
					}
				}
				_match_end_1be850e56:;
			};
		}
	_iter_next_1be850373:;
	}
	_iter_end_1be850373:;;
	return false;;
}



inline void _1ac67d1c4_optimizeData(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aabb8db5_Data> _6833_d) {
	{
		auto &_match_expr{ (*(_6833_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1be85209a:;
			{
				jule::Ptr<_1aaa30ed5_FnCallExpr> _718_m = (*(_6833_d))._field_Model.unsafe_cast_ptr<_1aaa30ed5_FnCallExpr>();;
				static__1ac685583_optimizeData(&((*(_6833_d))._field_Model), &((*(_self_))._field_data), _self_);
				if (((((((_1ac697199_Exceptional && (*((*((*(_718_m))._field_Func))._field_Decl))._field_Exceptional) && ((*_718_m.alloc)._field_Except != nullptr)) && ((*(*(_718_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1ab618528_IsForwarded(&((*_718_m.alloc)._field_Except))) && _1ac67cb85_isLastStmt(_self_)) && (!(_1ac67ce1b_isIter(_self_))))) {
					_1ac67c701_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac3d513a_ExceptionalForwardingExpr>(_1ac3d513a_ExceptionalForwardingExpr{._field_Expr=_718_m}), &__jule_any_type121));
				};
				return;;
			}
		}
		_match_end_1be852023:;
	};
	static__1ac685583_optimizeData(&((*(_6833_d))._field_Model), &((*(_self_))._field_data), _self_);
}



inline void _1ac67d47c_optimizeVar(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab70795_Var> _8732_v) {
	if (((*(_8732_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1ac3dae43_isNilValidType((*((*_8732_v.alloc)._field_TypeSym))._field_Type)) && _1ac3dab79_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_8732_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1ac3d9c77_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _1ac3db284_getNilVar(jule::Any(_8732_v, &__jule_any_type7)), true);
		};
		if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
			jule::Ptr<_1aabecdb6_Type> _969_kind = _1ac68dc1d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_8732_v.alloc)._field_TypeSym))._field_Type, (*((*(*(_8732_v))._field_Value.alloc)._field_Data))._field_Model);;
			if ((_969_kind != nullptr)) {
				if (_1ac68d7de_isDynamicValidType((*(*(_8732_v))._field_TypeSym.alloc)._field_Type)) {
					_1ac68c8dc_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _1ac68e05e_getDynamicVar(jule::Any(_8732_v, &__jule_any_type7)), _969_kind);
				};
			};
		};
		static__1ac685583_optimizeData(&((*((*(*(_8732_v))._field_Value.alloc)._field_Data))._field_Model), &((*(_self_))._field_data), _self_);
	};
}



inline void _1ac67d735_optimizeConditional(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aaaed426_Conditional> _10840_c) {
	_1ac690071_data _1127_alive = _1ac690071_data{._field_boundary=jule::Ptr<_1ac69232b_boundary>(nullptr), ._field_nils=jule::Ptr<_1ac3d97d2_nils>(nullptr), ._field_dynamic=jule::Ptr<_1ac68c447_dynamic>(nullptr)};;
	_1ac69112c_loadCheckpoint(&_1127_alive, _1ac690add_getCheckpoint((*(_self_))._field_data.ptr()));
	_1ac68ea76_dataCheckpoint _1167_checkpoint = _1ac690add_getCheckpoint((*(_self_))._field_data);;
	{
		auto expr = &((*(_10840_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be86d050:;
		if (it != expr_end) {
			jule::Ptr<_1aaaecc0b_If> _11815_elif = *it;
			{
				static__1ac685929_optimizeConditionalData(&((*(_11815_elif))._field_Expr), &((*_self_.alloc)._field_data), _self_);
				_1ac681e86_optimizeChild(_self_, (*_11815_elif.alloc)._field_Scope);
				_1ac690857_removeDeads(&_1127_alive, &((*_self_.alloc)._field_data));
				_1ac69112c_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _1167_checkpoint);
			}
			_iter_next_1be86d050:;
			++it;
			goto _iter_begin_1be86d050;
		}
		_iter_end_1be86d050:;
	};
	if (((*_10840_c.alloc)._field_Default != nullptr)) {
		_1ac681e86_optimizeChild(_self_, (*(*(_10840_c))._field_Default.alloc)._field_Scope);
		_1ac690857_removeDeads(&_1127_alive, &((*_self_.alloc)._field_data));
	};
	_1ac69112c_loadCheckpoint((*(_self_))._field_data, _1ac690d74_getMutCheckpoint(&_1127_alive));
	if ((!(_1ac69664e_Cond))) {
		return;;
	};
	jule::Bool _1357_constCase = false;;
	{
		auto expr = &((*_10840_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be871cac:;
		if (it != expr_end) {
			jule::I32 _1388_i = it - expr->begin();
			jule::Ptr<_1aaaecc0b_If> _13815_elif = *it;
			{
				if ((!(_1ac6827c2_isConstantValidConditionalCase(&(_13815_elif))))) {
					goto _iter_next_1be871cac;
				};
				_1357_constCase=true;
				((*(_10840_c))._field_Elifs).mut_slice(0LL, _1388_i);;
				(*_10840_c.alloc)._field_Default=jule::new_ptr<_1aaaed080_Else>(_1aaaed080_Else{._field_Scope=(*(_13815_elif))._field_Scope});
				goto _iter_end_1be871cac;
			}
			_iter_next_1be871cac:;
			++it;
			_1388_i++;
			goto _iter_begin_1be871cac;
		}
		_iter_end_1be871cac:;
	};
	if (((*_10840_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1aaaecc0b_If>* _1557_i = (&((*_10840_c.alloc)._field_Elifs[0LL]));;
	jule::Ptr<_1aaaecc0b_If>* _1563_end = (&((*_10840_c.alloc)._field_Elifs[((*_10840_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1557_i <= _1563_end); (_1557_i)++) {
		{
			{
				if (_1ac6831da_isUnreachableConditionalCase(&((*(_1557_i))))) {
					(*(_1557_i))=nullptr;
				};
			};
		}
	_iter_next_1be875332:;
	}
	_iter_end_1be875332:;;
	if (((*_10840_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1357_constCase))) {
		return;;
	};
	jule::I32 _1747_only = -1LL;;
	{
		auto expr = &((*_10840_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be876dd3:;
		if (it != expr_end) {
			jule::I32 _1757_j = it - expr->begin();
			jule::Ptr<_1aaaecc0b_If> _17510_elif = *it;
			{
				if ((_17510_elif != nullptr)) {
					if ((_1747_only != -1LL)) {
						return;;
					};
					_1747_only=_1757_j;
				};
			}
			_iter_next_1be876dd3:;
			++it;
			_1757_j++;
			goto _iter_begin_1be876dd3;
		}
		_iter_end_1be876dd3:;
	};
	if ((_1747_only != -1LL)) {
		_1ac67c701_setCurrentStmt(_self_, jule::Any((*((*_10840_c.alloc)._field_Elifs[_1747_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _1ac67db53_buildDefaultConstantTrueCase(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab02b23_Case> _19149_case, jule::I32* _19173_i, jule::Ptr<_1aab0232b_Match>* _19186_m) {
	(*(_19149_case))._field_Exprs=nullptr;
	jule::I32 _1933_start = (*(_19173_i));;
	_julec_label_1be879941:;
	for (;;) {
		{
			if (((*((*_19149_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1be8798db;
			};
			jule::Any *_1999_stmt = &((*((*_19149_case.alloc)._field_Scope))._field_Stmts[((*(*(_19149_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_1999_stmt)) };
				
				if (_match_expr.type == &__jule_any_type46) {
					_case_begin_1be87b811:;
					{
						((*(_19173_i)))++;
						if (((*(_19173_i)) >= (*((*(_19186_m))))._field_Cases.len())) {
							(*(_1999_stmt))=jule::Any((*((*((*(_19186_m))))._field_Default))._field_Scope, &__jule_any_type19);
							goto _iter_end_1be8798db;
						};
						_19149_case=(*((*(_19186_m))))._field_Cases[(*(_19173_i))];
						(*(_1999_stmt))=jule::Any((*(_19149_case))._field_Scope, &__jule_any_type19);
					}
				}
				else {
					_case_begin_1be87b8dd:;
					{
						goto _iter_end_1be8798db;
					}
				}
				_match_end_1be87b79a:;
			};
		}
	_iter_next_1be8798db:;
	}
	_iter_end_1be8798db:;;
	(*((*(_19186_m))))._field_Default=(*((*(_19186_m))))._field_Cases[_1933_start];
	((*((*(_19186_m))))._field_Cases).mut_slice(0LL, _1933_start);;
}



inline void _1ac67de0b_optimizeMatch(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab0232b_Match> _21734_m) {
	jule::Uintptr _2187_var = 0LLU;;
	if ((_1ac69770a_Dynamic && (*(_21734_m))._field_TypeMatch)) {
		_2187_var=_1ac68e05e_getDynamicVar((*((*_21734_m.alloc)._field_Expr))._field_Model);
	};
	_1ac690071_data _2267_alive = _1ac690071_data{._field_boundary=jule::Ptr<_1ac69232b_boundary>(nullptr), ._field_nils=jule::Ptr<_1ac3d97d2_nils>(nullptr), ._field_dynamic=jule::Ptr<_1ac68c447_dynamic>(nullptr)};;
	_1ac69112c_loadCheckpoint(&_2267_alive, _1ac690add_getCheckpoint((*(_self_))._field_data.ptr()));
	_1ac68ea76_dataCheckpoint _2307_checkpoint = _1ac690add_getCheckpoint((*(_self_))._field_data);;
	{
		auto expr = &((*(_21734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be8812e9:;
		if (it != expr_end) {
			jule::Ptr<_1aab02b23_Case> _23215_case = *it;
			{
				{
					auto expr = &((*(_23215_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be881c89:;
					if (it != expr_end) {
						jule::Ptr<_1aabb8db5_Data> _23316_expr = *it;
						{
							static__1ac685929_optimizeConditionalData(&((*(_23316_expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
						}
						_iter_next_1be881c89:;
						++it;
						goto _iter_begin_1be881c89;
					}
					_iter_end_1be881c89:;
				};
				if ((((*_23215_case.alloc)._field_Exprs.len() == 1LL) && ((*((*_self_.alloc)._field_data))._field_dynamic != nullptr))) {
					jule::Ptr<_1aabecdb6_Type> _2389_kind = _1ac68dc1d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_23215_case))._field_Exprs[0LL]))._field_Type, nullptr);;
					if ((_2389_kind != nullptr)) {
						_1ac68c8dc_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _2187_var, _2389_kind);
					} else {
						_1ac68cc2d_removeVar((*(*(_self_))._field_data.alloc)._field_dynamic.ptr(), _2187_var);
					};
				};
				_1ac681e86_optimizeChild(_self_, (*_23215_case.alloc)._field_Scope);
				_1ac690857_removeDeads(&_2267_alive, &((*_self_.alloc)._field_data));
				_1ac69112c_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _2307_checkpoint);
			}
			_iter_next_1be8812e9:;
			++it;
			goto _iter_begin_1be8812e9;
		}
		_iter_end_1be8812e9:;
	};
	if (((*_21734_m.alloc)._field_Default != nullptr)) {
		_1ac681e86_optimizeChild(_self_, (*(*(_21734_m))._field_Default.alloc)._field_Scope);
		_1ac690857_removeDeads(&_2267_alive, &((*_self_.alloc)._field_data));
	};
	_1ac69112c_loadCheckpoint((*(_self_))._field_data, _1ac690d74_getMutCheckpoint(&_2267_alive));
	if ((!(_1ac69664e_Cond))) {
		return;;
	};
	jule::Bool _2607_constCase = false;;
	{
		auto expr = &((*(_21734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be88870d:;
		if (it != expr_end) {
			jule::I32 _26312_i = it - expr->begin();
			jule::Ptr<_1aab02b23_Case> _26319_case = *it;
			{
				if ((!(_1ac682d99_isConstantValidMatchCase(&(_26319_case))))) {
					goto _iter_next_1be88870d;
				};
				_2607_constCase=true;
				_1ac67db53_buildDefaultConstantTrueCase(_self_, _26319_case, &(_26312_i), &(_21734_m));
				goto _iter_end_1be88870d;
			}
			_iter_next_1be88870d:;
			++it;
			_26312_i++;
			goto _iter_begin_1be88870d;
		}
		_iter_end_1be88870d:;
	};
	if (((*_21734_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1aab02b23_Case>* _2777_i = (&((*_21734_m.alloc)._field_Cases[0LL]));;
	jule::Ptr<_1aab02b23_Case>* _2783_end = (&((*_21734_m.alloc)._field_Cases[((*_21734_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2777_i <= _2783_end); (_2777_i)++) {
		{
			{
				if (_1ac683471_isUnreachableMatchCase(&((*(_2777_i))))) {
					(*(_2777_i))=nullptr;
				};
			};
		}
	_iter_next_1be88b2d2:;
	}
	_iter_end_1be88b2d2:;;
	if ((!(_2607_constCase))) {
		return;;
	};
	jule::I32 _2927_only = -1LL;;
	{
		auto expr = &((*_21734_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be88c6e0:;
		if (it != expr_end) {
			jule::I32 _2937_j = it - expr->begin();
			jule::Ptr<_1aab02b23_Case> _29310_case = *it;
			{
				if ((_29310_case != nullptr)) {
					if ((_2927_only != -1LL)) {
						return;;
					};
					_2927_only=_2937_j;
				};
			}
			_iter_next_1be88c6e0:;
			++it;
			_2937_j++;
			goto _iter_begin_1be88c6e0;
		}
		_iter_end_1be88c6e0:;
	};
	if ((_2927_only != -1LL)) {
		_1ac67c701_setCurrentStmt(_self_, jule::Any((*((*_21734_m.alloc)._field_Cases[_2927_only]))._field_Scope, &__jule_any_type19));
	};
}



inline void _1ac67e1b4_optimizeRangeIter(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aaaee6ad_RangeIter> _30938_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_30938_it))._field_KeyA != nullptr))) {
		_1ac6927c1_pushVar((*((*(_self_))._field_data))._field_boundary, _1ac69475c_getBoundaryVar((*((*_30938_it.alloc)._field_Expr))._field_Model), jule::Any((*_30938_it.alloc)._field_KeyA, &__jule_any_type7));
	};
	_1ac68223e_optimizeChildHard(_self_, (*(_30938_it))._field_Scope);
	if (_1ac697452_Iter) {
		{
			auto &_match_expr{ (*((*(_30938_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type94) {
				_case_begin_1be8921b7:;
				{
					jule::Ptr<_1aaa30633_CastingExpr> _3219_cem = (*((*(_30938_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1aaa30633_CastingExpr>();;
					jule::Ptr<_1aac06bc2_Prim> _3225_eprim = _1aac00ec9_Prim((*((*(_3219_cem))._field_Expr))._field_Type.ptr());;
					if (((_3225_eprim == nullptr) || (!(_1aac0a18c_IsStr(_3225_eprim.ptr()))))) {
						goto _match_end_1be89212e;
					};
					jule::Ptr<_1aac0b1c1_Slc> _3269_s = _1aac02030_Slc((*_3219_cem.alloc)._field_Type.ptr());;
					if ((_3269_s == nullptr)) {
						goto _match_end_1be89212e;
					};
					jule::Ptr<_1aac06bc2_Prim> _3305_prim = _1aac00ec9_Prim((*(_3269_s))._field_Elem.ptr());;
					if ((_3305_prim == nullptr)) {
						goto _match_end_1be89212e;
					};
					{
						
						if (_1aac085ec_IsU8(_3305_prim.ptr())) {
							_case_begin_1be895c7b:;
							{
								(*_30938_it.alloc)._field_Expr=(*_3219_cem.alloc)._field_Expr;
							}
						}
						else if (_1aac080d0_IsI32(_3305_prim.ptr())) {
							_case_begin_1be895e57:;
							{
								static__1ac685583_optimizeData(&((*(*(_3219_cem))._field_Expr.alloc)._field_Model), &((*_self_.alloc)._field_data), _self_);
								_1ac67c701_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac3d810a_StrRuneIter>(_1ac3d810a_StrRuneIter{._field_Expr=(*_3219_cem.alloc)._field_Expr, ._field_Base=_30938_it}), &__jule_any_type122));
								return;;
							}
						}
						_match_end_1be893c57:;
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type80) {
				_case_begin_1be891bcd:;
				{
					jule::Ptr<_1aaa313ae_SliceExpr> _3519_slc = (*((*(_30938_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1aaa313ae_SliceExpr>();;
					jule::Ptr<_1aac0d4e2_Arr> _3529_arr = jule::new_ptr<_1aac0d4e2_Arr>(_1aac0d4e2_Arr{._field_Auto=false, ._field_N=(*(_3519_slc))._field_Elems.len(), ._field_Elem=(*_3519_slc.alloc)._field_ElemType});;
					(*((*((*_30938_it.alloc)._field_Expr))._field_Type))._field_Kind=jule::Trait(_3529_arr, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data27);
					(*(*(_30938_it))._field_Expr.alloc)._field_Model=jule::Any(jule::new_ptr<_1aaa342e6_ArrayExpr>(_1aaa342e6_ArrayExpr{._field_Kind=_3529_arr, ._field_Elems=(*_3519_slc.alloc)._field_Elems}), &__jule_any_type86);
				}
			}
			_match_end_1be89212e:;
		};
	};
	static__1ac685583_optimizeData(&((*((*_30938_it.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
}



inline void _1ac67e46c_optimizeWhileIter(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aaaedbc9_WhileIter> _36638_it) {
	static__1ac685583_optimizeData(&((*(_36638_it))._field_Expr), &((*(_self_))._field_data), _self_);
	_1ac681bcd_optimizeStmt(_self_, (*_36638_it.alloc)._field_Next);
	_1ac68223e_optimizeChildHard(_self_, (*_36638_it.alloc)._field_Scope);
}



inline jule::Bool _1ac67e7ad_substr(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab0132a_Assign> _37227_a) {
	if (((*((*(_37227_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_37227_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1be8a0d30:;
			{
				jule::Ptr<_1aaa32b52_SlicingExpr> _3788_sem = (*((*(_37227_a))._field_Right))._field_Model.unsafe_cast_ptr<_1aaa32b52_SlicingExpr>();;
				if (_1aac86b31_EqualModels((*((*(_37227_a))._field_Left))._field_Model, (*(_3788_sem))._field_Expr)) {
					_1ac67c701_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac3d6d84_MutSlicingExpr>(_1ac3d6d84_MutSlicingExpr{._field_Token=(*_3788_sem.alloc)._field_Token, ._field_Expr=(*_3788_sem.alloc)._field_Expr, ._field_Left=(*_3788_sem.alloc)._field_Left, ._field_Right=(*_3788_sem.alloc)._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1be8a0ca8:;
	};
	return false;;
}



inline jule::Bool _1ac67eaee_strAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab0132a_Assign> _39230_a) {
	if ((!(_1ac696891_Str))) {
		return false;;
	};
	jule::Ptr<_1aac06bc2_Prim> _3963_lp = _1aac00ec9_Prim((*((*(_39230_a))._field_Left))._field_Type.ptr());;
	if (((_3963_lp == nullptr) || (!(_1aac0a18c_IsStr(_3963_lp.ptr()))))) {
		return false;;
	};
	return _1ac67e7ad_substr(_self_, _39230_a);;
}



inline jule::Bool _1ac67ee40_sliceAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab0132a_Assign> _40332_a) {
	if (((!(_1ac696b38_Slice)) || (_1aac02030_Slc((*((*(_40332_a))._field_Left))._field_Type.ptr()) == nullptr))) {
		return false;;
	};
	return _1ac67e7ad_substr(_self_, _40332_a);;
}



inline void _1ac6801e8_optimizePostfix(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab00d74_Postfix> _41136_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1ac693e10_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_41136_postfix))._field_Expr);
	};
	static__1ac685583_optimizeData(&((*(_41136_postfix))._field_Expr), &((*(_self_))._field_data), _self_);
}



inline jule::Bool _1ac680539_cmplxAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab0132a_Assign>* _41833_assign) {
	if ((((!(_1ac6983ed_StdMathCmplx)) || ((*((*((*(_41833_assign))))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) || ((*(_1ab61db5a_ProgramMeta))._field_MathCmplx == nullptr))) {
		return false;;
	};
	jule::Ptr<_1aa969605_StructIns> _4227_s = _1aac0254c_Struct((*((*((*(_41833_assign))))._field_Left))._field_Type.ptr());;
	if (((_4227_s == nullptr) || (_4227_s != (*((*(_1ab61db5a_ProgramMeta))._field_MathCmplx))._field_Cmplx))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_41833_assign))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1be8acba5:;
			{
				goto _match_end_1be8ad953;
			}
		}
		else {
			_case_begin_1be8ad9b9:;
			{
				return false;;
			}
		}
		_match_end_1be8ad953:;
	};
	jule::Ptr<_1aaa30ed5_FnCallExpr> _4327_fc = (*((*((*(_41833_assign))))._field_Right))._field_Model.cast_ptr<_1aaa30ed5_FnCallExpr>(&__jule_any_type30);;
	{
		auto &_match_expr{ (*(_4327_fc))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1be8adc2d:;
			{
				goto _match_end_1be8aeab9;
			}
		}
		else {
			_case_begin_1be8aeb30:;
			{
				return false;;
			}
		}
		_match_end_1be8aeab9:;
	};
	jule::Ptr<_1aaa33a76_StructSubIdentExpr> _4397_siem = (*(_4327_fc))._field_Expr.cast_ptr<_1aaa33a76_StructSubIdentExpr>(&__jule_any_type99);;
	if ((!(_1aac86b31_EqualModels((*(*((*(_41833_assign))))._field_Left.alloc)._field_Model, (*((*(_4397_siem))._field_Expr))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_4327_fc))._field_Func };
		
		if (_match_expr == (*((*(_1ab61db5a_ProgramMeta))._field_MathCmplx))._field_CmplxAdd) {
			_case_begin_1be8b188a:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_1ab61db5a_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxAddZ;
			}
		}
		else if (_match_expr == (*((*(_1ab61db5a_ProgramMeta))._field_MathCmplx))._field_CmplxSub) {
			_case_begin_1be8b1901:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_1ab61db5a_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxSubZ;
			}
		}
		else if (_match_expr == (*(*(_1ab61db5a_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxMul) {
			_case_begin_1be8b1967:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_1ab61db5a_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxMulZ;
			}
		}
		else if (_match_expr == (*(*(_1ab61db5a_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxDiv) {
			_case_begin_1be8b19de:;
			{
				(*_4327_fc.alloc)._field_Func=(*(*(_1ab61db5a_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxDivZ;
			}
		}
		else {
			_case_begin_1be8b0a10:;
			{
				return false;;
			}
		}
		_match_end_1be8b17ad:;
	};
	(*(_4397_siem))._field_Method=(*_4327_fc.alloc)._field_Func;
	_1ac67c701_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_4327_fc, &__jule_any_type30), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)}), &__jule_any_type21));
	return true;;
}



inline void _1ac6807e2_optimizeAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab0132a_Assign> _46035_assign) {
	if ((((*((*(_46035_assign))._field_Op))._field_Id == static_cast<jule::U32>(71LLU)) && _1aac86b31_EqualModels((*((*_46035_assign.alloc)._field_Left))._field_Model, (*((*_46035_assign.alloc)._field_Right))._field_Model))) {
		_1ac67c8ee_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		if (_1ac6941c9_isBoundaryRiskyType((*((*(_46035_assign))._field_Left))._field_Type)) {
			_1ac693e10_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_46035_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
		if (_1ac3dab79_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_46035_assign))._field_Right))._field_Model)) {
			if (_1ac3dae43_isNilValidType((*((*_46035_assign.alloc)._field_Left))._field_Type)) {
				;
				_1ac3d9c77_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _1ac3db284_getNilVar((*(*(_46035_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1ac3da7b1_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_46035_assign))._field_Left))._field_Model);
		};
	};
	if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
		jule::Ptr<_1aabecdb6_Type> _4848_kind = _1ac68dc1d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_46035_assign))._field_Right))._field_Type, (*(*(_46035_assign))._field_Right.alloc)._field_Model);;
		if ((_4848_kind != nullptr)) {
			if (_1ac68d7de_isDynamicValidType((*((*_46035_assign.alloc)._field_Left))._field_Type)) {
				_1ac68c8dc_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _1ac68e05e_getDynamicVar((*(*(_46035_assign))._field_Left.alloc)._field_Model), _4848_kind);
			};
		} else {
			_1ac68d4d1_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_46035_assign.alloc)._field_Left))._field_Model);
		};
	};
	{
		
		if (_1ac67eaee_strAssign(_self_, _46035_assign) || _1ac67ee40_sliceAssign(_self_, _46035_assign) || _1ac680539_cmplxAssign(_self_, &(_46035_assign))) {
			_case_begin_1be8c644e:;
			{
				return;;
			}
		}
		_match_end_1be8c4eca:;
	};
	static__1ac685583_optimizeData(&((*((*(_46035_assign))._field_Left))._field_Model), &((*(_self_))._field_data), _self_);
	static__1ac685583_optimizeData(&((*((*_46035_assign.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data), _self_);
	{
		auto &_match_expr{ (*((*(_46035_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(47LLU) || _match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU) || _match_expr == static_cast<jule::U32>(45LLU) || _match_expr == static_cast<jule::U32>(46LLU) || _match_expr == static_cast<jule::U32>(40LLU) || _match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1be8c87d6:;
			{
				if ((((!(_1ac69596c_Math)) && (!(_1ac696891_Str))) || (_1aac0254c_Struct((*(*(_46035_assign))._field_Left.alloc)._field_Type.ptr()) != nullptr))) {
					goto _match_end_1be8c875e;
				};
				jule::U32 _5124_oldId;
				jule::Str _51211_oldKind;
				({
					jule::U32 ___jule_assign_arg = (*((*_46035_assign.alloc)._field_Op))._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_46035_assign))._field_Op.alloc)._field_Kind;
					_5124_oldId = ___jule_assign_arg;
					_51211_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_46035_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(40LLU)) {
						_case_begin_1be8cbee3:;
						{
							(*((*_46035_assign.alloc)._field_Op))._field_Id=static_cast<jule::U32>(60LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("+", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(41LLU)) {
						_case_begin_1be8cbb3b:;
						{
							(*((*_46035_assign.alloc)._field_Op))._field_Id=static_cast<jule::U32>(61LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("-", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(43LLU)) {
						_case_begin_1be8cbba2:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(63LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(44LLU)) {
						_case_begin_1be8cbc18:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(64LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(45LLU)) {
						_case_begin_1be8cbc90:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(46LLU)) {
						_case_begin_1be8cbd17:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(47LLU)) {
						_case_begin_1be8cbd8e:;
						{
							(*(*(_46035_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(67LLU);
							(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("^", 1));
						}
					}
					else {
						_case_begin_1be8c9b8e:;
						{
							__jule_panic_s(jule::Str::lit("opt: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/opt/scope.jule:536:5"));;
						}
					}
					_match_end_1be8cb9e8:;
				};
				jule::Ptr<_1aaa2e0d2_BinaryExpr> _5388_b = jule::new_ptr<_1aaa2e0d2_BinaryExpr>(_1aaa2e0d2_BinaryExpr{._field_Left=(*_46035_assign.alloc)._field_Left, ._field_Right=(*_46035_assign.alloc)._field_Right, ._field_Op=(*_46035_assign.alloc)._field_Op});;
				jule::Any _5438_model = jule::Any(_5388_b, &__jule_any_type113);;
				static__1ac685583_optimizeData(&(_5438_model), &((*_self_.alloc)._field_data), _self_);
				if (((!__jule_any_type113_compare(_5438_model, _5388_b)) || ((*(_5388_b))._field_Op != (*_46035_assign.alloc)._field_Op))) {
					if (((*((*_46035_assign.alloc)._field_Op))._field_Id == static_cast<jule::U32>(67LLU))) {
						_1ac67c8ee_removeCurrent(_self_);
						return;;
					};
					(*_46035_assign.alloc)._field_Right=jule::new_ptr<_1aaa2dad7_OperandExpr>((*(*(_46035_assign))._field_Right.alloc));
					(*(_5388_b))._field_Op=jule::new_ptr<_1aa0d7ceb_Token>((*(*(_5388_b))._field_Op.alloc));
					(*((*_46035_assign.alloc)._field_Op))._field_Id=static_cast<jule::U32>(71LLU);
					(*(*(_46035_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_46035_assign))._field_Right.alloc)._field_Model=_5438_model;
					return;;
				};
				(*((*_46035_assign.alloc)._field_Op))._field_Id=_5124_oldId;
				(*(*(_46035_assign))._field_Op.alloc)._field_Kind=_51211_oldKind;
				return;;
			}
		}
		_match_end_1be8c875e:;
	};
	if (_1ac695670_Append) {
		{
			auto &_match_expr{ (*((*(_46035_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type23) {
				_case_begin_1be8da078:;
				{
					jule::Ptr<_1aaa35d20_BuiltinAppendCallExpr> _5699_m = (*((*(_46035_assign))._field_Right))._field_Model.unsafe_cast_ptr<_1aaa35d20_BuiltinAppendCallExpr>();;
					if ((!(_1ac68b424_areSameLvalueExpr(&((*(*(_46035_assign))._field_Left.alloc)._field_Model), &((*(_5699_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5699_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type80) {
							_case_begin_1be8db50d:;
							{
								_1ac67c701_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac3d7857_PushToSliceExpr>(_1ac3d7857_PushToSliceExpr{._field_Dest=(*(_5699_m))._field_Dest, ._field_Elems=(*(_5699_m))._field_Elements.unsafe_cast_ptr<_1aaa313ae_SliceExpr>()}), &__jule_any_type124));
							}
						}
						else {
							_case_begin_1be8dbcd3:;
							{
								_1ac67c701_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac3d7c31_AppendToSliceExpr>(_1ac3d7c31_AppendToSliceExpr{._field_Dest=(*(*(_46035_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*(_5699_m))._field_Elements}), &__jule_any_type125));
							}
						}
						_match_end_1be8dbc6c:;
					};
				}
			}
			_match_end_1be8da001:;
		};
	};
}



inline void _1ac680b55_normalizeAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _59437_assign, jule::Ptr<_1aaa345e3_TupleExpr>* _59470_tup) {
	jule::I32 _5957_i = 0LL;;
	while ((_5957_i < (*((*(_59437_assign))))._field_Left.len())) {
		{
			jule::Ptr<_1aabb8db5_Data> _5978_l = (*((*(_59437_assign))))._field_Left[_5957_i];;
			jule::Ptr<_1aabb8db5_Data> _5988_r = (*((*(_59470_tup))))._field_Datas[_5957_i];;
			if (((_5978_l == nullptr) && (_5988_r != nullptr))) {
				jule::I32 _6065_offset = ((*(_self_))._field_i + 1LL);;
				(*((*_self_.alloc)._field_scope))._field_Stmts=_1be8e568d_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _6065_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5988_r, &__jule_any_type21); __jule_collection; }));
				goto _julec_label_1be9092d9;
			};
			if (((_5978_l != nullptr) && (_5988_r != nullptr))) {
				{
					
					if (_1aabb9800_IsConst(_5988_r)) {
						_case_begin_1be902dd7:;
						{
							jule::I32 _6186_offset = ((*(_self_))._field_i + 1LL);;
							(*((*_self_.alloc)._field_scope))._field_Stmts=_1be8e568d_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _6186_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1aab0132a_Assign>(_1aab0132a_Assign{._field_Left=jule::new_ptr<_1aaa2dad7_OperandExpr>(_1aaa2dad7_OperandExpr{._field_Type=(*_5978_l.alloc)._field_Type, ._field_Model=(*_5978_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1aaa2dad7_OperandExpr>(_1aaa2dad7_OperandExpr{._field_Type=(*_5988_r.alloc)._field_Type, ._field_Model=(*_5988_r.alloc)._field_Model}), ._field_Op=(*((*(_59437_assign))))._field_Op}), &__jule_any_type40); __jule_collection; }));
							goto _julec_label_1be9092d9;
						}
					}
					else if (_1aac86b31_EqualModels((*_5978_l.alloc)._field_Model, (*_5988_r.alloc)._field_Model)) {
						_case_begin_1be902e4d:;
						{
							goto _julec_label_1be9092d9;
						}
					}
					_match_end_1be9007ec:;
				};
				{
					auto &_match_expr{ (*(_5978_l))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_1be900555:;
						{
							jule::Ptr<_1aab70795_Var> _63610_v = (*(_5978_l))._field_Model.unsafe_cast_ptr<_1aab70795_Var>();;
							if ((_1ab61c6e7_FindVar(_63610_v, (*((*(_59437_assign))))._field_Decls) == -1LL)) {
								goto _match_end_1be9004de;
							};
							{
								auto &_match_expr{ (*(_5988_r))._field_Model };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_1be909240:;
									{
										jule::I32 _6497_offset = ((*(_self_))._field_i + 1LL);;
										(*((*_self_.alloc)._field_scope))._field_Stmts=_1be8e568d_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _6497_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_63610_v, &__jule_any_type7); __jule_collection; }));
										goto _julec_label_1be9092d9;
									}
								}
								_match_end_1be9091c9:;
							};
						}
					}
					_match_end_1be9004de:;
				};
			};
			(_5957_i)++;
			goto _iter_next_1be8e712e;
			_julec_label_1be9092d9:;
			(*((*(_59437_assign))))._field_Left=jule::append((*((*(_59437_assign))))._field_Left.slice(0LL, _5957_i),(*((*(_59437_assign))))._field_Left.slice((_5957_i + 1LL)));
			(*((*(_59470_tup))))._field_Datas=jule::append((*((*(_59470_tup))))._field_Datas.slice(0LL, _5957_i),(*((*(_59470_tup))))._field_Datas.slice((_5957_i + 1LL)));
		}
	_iter_next_1be8e712e:;
	}
	_iter_end_1be8e712e:;;
}



inline jule::Bool _1ac681051_tryOptimizeSwap(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _66737_assign, jule::Ptr<_1aaa345e3_TupleExpr>* _66770_tup) {
	jule::Bool __jule_func_result = false;
	if ((((((*((*(_66770_tup))))._field_Datas.len() != 2LL) || ((*((*(_66737_assign))))._field_Left.len() != 2LL)) || ((*((*(_66737_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_66737_assign))))._field_Left[1LL] == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((!(_1aac86b31_EqualModels((*((*((*(_66737_assign))))._field_Left[0LL]))._field_Model, (*((*((*(_66770_tup))))._field_Datas[1LL]))._field_Model))) || (!(_1aac86b31_EqualModels((*((*((*(_66737_assign))))._field_Left[1LL]))._field_Model, (*((*((*(_66770_tup))))._field_Datas[0LL]))._field_Model))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ac3d5adb_SwapExpr> _6777_model = jule::new_ptr<_1ac3d5adb_SwapExpr>(_1ac3d5adb_SwapExpr{._field_Left=(*((*(_66737_assign))))._field_Left[0LL], ._field_Right=(*((*(_66737_assign))))._field_Left[1LL]});;
	_1ac67c701_setCurrentStmt(_self_, jule::Any(_6777_model, &__jule_any_type126));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac6813b4_splitAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _68933_assign, jule::Ptr<_1aaa345e3_TupleExpr>* _68966_tup) {
	{
		auto expr = &((*((*(_68966_tup))))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be9174d4:;
		if (it != expr_end) {
			jule::I32 _6957_i = it - expr->begin();
			{
				jule::Ptr<_1aabb8db5_Data> _6964_r = (*((*(_68966_tup))))._field_Datas[_6957_i];;
				jule::Ptr<_1aabb8db5_Data> _6974_l = (*((*(_68933_assign))))._field_Left[_6957_i];;
				if ((_6974_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6974_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1be915856:;
							{
								goto _match_end_1be915b20;
							}
						}
						else {
							_case_begin_1be915b86:;
							{
								return;;
							}
						}
						_match_end_1be915b20:;
					};
				};
				if ((_6964_r != nullptr)) {
					{
						auto &_match_expr{ (*(_6964_r))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1be915713:;
							{
								goto _match_end_1be916659;
							}
						}
						else {
							_case_begin_1be9166c0:;
							{
								return;;
							}
						}
						_match_end_1be916659:;
					};
				};
			}
			_iter_next_1be9174d4:;
			++it;
			_6957_i++;
			goto _iter_begin_1be9174d4;
		}
		_iter_end_1be9174d4:;
	};
	jule::I32 _7163_z = (*(_self_))._field_i;;
	jule::I32 _7177_i = 0LL;;
	_julec_label_1be91758e:;
	while ((_7177_i < (*((*(_68933_assign))))._field_Left.len())) {
		{
			jule::Ptr<_1aabb8db5_Data> _7208_l = (*((*(_68933_assign))))._field_Left[_7177_i];;
			if ((_7208_l == nullptr)) {
				(_7177_i)++;
				goto _iter_next_1be91712c;
			};
			{
				auto &_match_expr{ (*(_7208_l))._field_Model };
				
				if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1be91997b:;
					{
						goto _match_end_1be9194e7;
					}
				}
				else {
					_case_begin_1be91955d:;
					{
						(_7177_i)++;
						goto _iter_next_1be91712c;
					}
				}
				_match_end_1be9194e7:;
			};
			jule::Ptr<_1aab70795_Var> _7324_v = (*(_7208_l))._field_Model.cast_ptr<_1aab70795_Var>(&__jule_any_type7);;
			{
				auto expr = &((*((*(_68933_assign))))._field_Left);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1be91a4b5:;
				if (it != expr_end) {
					jule::I32 _7358_j = it - expr->begin();
					jule::Ptr<_1aabb8db5_Data> _73511_jl = *it;
					{
						while ((((_7358_j != _7177_i) && (_73511_jl != nullptr)) && (__jule_any_type7_compare((*(_73511_jl))._field_Model, _7324_v)))) {
							{
								(_7177_i)++;
								goto _iter_next_1be91712c;
							}
						_iter_next_1be91adcd:;
						}
						_iter_end_1be91adcd:;;
					}
					_iter_next_1be91a4b5:;
					++it;
					_7358_j++;
					goto _iter_begin_1be91a4b5;
				}
				_iter_end_1be91a4b5:;
			};
			{
				auto expr = &((*((*(_68966_tup))))._field_Datas);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1be91ab25:;
				if (it != expr_end) {
					jule::I32 _7428_j = it - expr->begin();
					jule::Ptr<_1aabb8db5_Data> _74211_jl = *it;
					{
						while ((((_7428_j != _7177_i) && (_74211_jl != nullptr)) && (__jule_any_type7_compare((*(_74211_jl))._field_Model, _7324_v)))) {
							{
								(_7177_i)++;
								goto _iter_next_1be91712c;
							}
						_iter_next_1be91c0aa:;
						}
						_iter_end_1be91c0aa:;;
					}
					_iter_next_1be91ab25:;
					++it;
					_7428_j++;
					goto _iter_begin_1be91ab25;
				}
				_iter_end_1be91ab25:;
			};
			jule::Ptr<_1aabb8db5_Data> _7518_r = (*((*(_68966_tup))))._field_Datas[_7177_i];;
			jule::I32 _7564_offset = ((*_self_.alloc)._field_i + 1LL);;
			(*((*_self_.alloc)._field_scope))._field_Stmts=_1be8e568d_Insert((*(*(_self_))._field_scope.alloc)._field_Stmts, _7564_offset, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1aab0132a_Assign>(_1aab0132a_Assign{._field_Left=jule::new_ptr<_1aaa2dad7_OperandExpr>(_1aaa2dad7_OperandExpr{._field_Type=(*_7208_l.alloc)._field_Type, ._field_Model=(*_7208_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1aaa2dad7_OperandExpr>(_1aaa2dad7_OperandExpr{._field_Type=(*(_7518_r))._field_Type, ._field_Model=(*_7518_r.alloc)._field_Model}), ._field_Op=(*((*(_68933_assign))))._field_Op}), &__jule_any_type40); __jule_collection; }));
			(*((*(_68933_assign))))._field_Left=jule::append((*((*(_68933_assign))))._field_Left.slice(0LL, _7177_i),(*((*(_68933_assign))))._field_Left.slice((_7177_i + 1LL)));
			(*((*(_68966_tup))))._field_Datas=jule::append((*((*(_68966_tup))))._field_Datas.slice(0LL, _7177_i),(*((*(_68966_tup))))._field_Datas.slice((_7177_i + 1LL)));
		}
	_iter_next_1be91712c:;
	}
	_iter_end_1be91712c:;;
	(*_self_.alloc)._field_i=_7163_z;
}



inline void _1ac68166c_optimizeMultiAssign(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab018ad_MultiAssign> _77040_assign) {
	jule::Ptr<_1aaa345e3_TupleExpr> _7757_tup = static_cast<jule::Ptr<_1aaa345e3_TupleExpr>>(nullptr);;
	{
		auto &_match_expr{ (*(_77040_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1be922ad8:;
			{
				_7757_tup=(*(_77040_assign))._field_Right.unsafe_cast_ptr<_1aaa345e3_TupleExpr>();
			}
		}
		_match_end_1be922a61:;
	};
	if ((_1ac696de1_Assign && (_7757_tup != nullptr))) {
		_1ac680b55_normalizeAssign(_self_, &(_77040_assign), &(_7757_tup));
		_1ac6813b4_splitAssign(_self_, &(_77040_assign), &(_7757_tup));
		_1ac681051_tryOptimizeSwap(_self_, &(_77040_assign), &(_7757_tup));
		if (((*(_77040_assign))._field_Left.len() == 0LL)) {
			_1ac67c8ee_removeCurrent(_self_);
			return;;
		};
		if (((*(_77040_assign))._field_Left.len() == 1LL)) {
			jule::Ptr<_1aabb8db5_Data> _8099_l = (*(_77040_assign))._field_Left[0LL];;
			{
				auto &_match_expr{ (*(_8099_l))._field_Model };
				
				if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1be925bda:;
					{
						jule::Ptr<_1aab70795_Var> _81210_v = (*(_8099_l))._field_Model.unsafe_cast_ptr<_1aab70795_Var>();;
						if ((_1ab61c6e7_FindVar(_81210_v, (*_77040_assign.alloc)._field_Decls) >= 0LL)) {
							_1ac67c701_setCurrentStmt(_self_, jule::Any(_81210_v, &__jule_any_type7));
							goto _julec_label_1be925888;
						};
					}
				}
				_match_end_1be925b63:;
			};
			{
				jule::Ptr<_1aabb8db5_Data> _82010_r = (*(_7757_tup))._field_Datas[0LL];;
				_1ac67c701_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aab0132a_Assign>(_1aab0132a_Assign{._field_Left=jule::new_ptr<_1aaa2dad7_OperandExpr>(_1aaa2dad7_OperandExpr{._field_Type=(*(_8099_l))._field_Type, ._field_Model=(*_8099_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1aaa2dad7_OperandExpr>(_1aaa2dad7_OperandExpr{._field_Type=(*(_82010_r))._field_Type, ._field_Model=(*_82010_r.alloc)._field_Model}), ._field_Op=(*_77040_assign.alloc)._field_Op}), &__jule_any_type40));
			};
			_julec_label_1be925888:;
			((*_self_.alloc)._field_i)--;
			return;;
		};
	};
	_1ac68ea76_dataCheckpoint _8547_checkpoint = _1ac690add_getCheckpoint((*(_self_))._field_data.ptr());;
	{
		auto expr = &((*(_77040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be92a45e:;
		if (it != expr_end) {
			jule::I32 _8568_i = it - expr->begin();
			jule::Ptr<_1aabb8db5_Data> _85615_l = *it;
			{
				if ((_85615_l != nullptr)) {
					if (((*(*(_self_))._field_data.alloc)._field_boundary != nullptr)) {
						if (_1ac6941c9_isBoundaryRiskyType((*_85615_l.alloc)._field_Type)) {
							_1ac693e10_possibleBoundaryRemove(&(_8547_checkpoint._field_boundary), (*_85615_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_7757_tup != nullptr) && _1ac3dab79_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_7757_tup.alloc)._field_Datas[_8568_i]))._field_Model))) {
							if (_1ac3dae43_isNilValidType((*_85615_l.alloc)._field_Type)) {
								;
								_1ac3d9c77_pushVar(_8547_checkpoint._field_nils.ptr(), _1ac3db284_getNilVar((*_85615_l.alloc)._field_Model), true);
							};
						} else {
							_1ac3da7b1_possibleNilRemove(&(_8547_checkpoint._field_nils), (*_85615_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_7757_tup != nullptr))) {
						jule::Ptr<_1aabecdb6_Type> _87410_kind = _1ac68dc1d_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_7757_tup.alloc)._field_Datas[_8568_i]))._field_Type, (*((*(_7757_tup))._field_Datas[_8568_i]))._field_Model);;
						if ((_87410_kind != nullptr)) {
							if (_1ac68d7de_isDynamicValidType((*_85615_l.alloc)._field_Type)) {
								_1ac68c8dc_pushVar(_8547_checkpoint._field_dynamic, _1ac68e05e_getDynamicVar((*_85615_l.alloc)._field_Model), _87410_kind);
							};
						} else {
							_1ac68d4d1_possibleDynamicRemove(&(_8547_checkpoint._field_dynamic), (*_85615_l.alloc)._field_Model);
						};
					};
					static__1ac685583_optimizeData(&((*_85615_l.alloc)._field_Model), &((*_self_.alloc)._field_data), _self_);
				};
			}
			_iter_next_1be92a45e:;
			++it;
			_8568_i++;
			goto _iter_begin_1be92a45e;
		}
		_iter_end_1be92a45e:;
	};
	static__1ac685583_optimizeData(&((*_77040_assign.alloc)._field_Right), &((*_self_.alloc)._field_data), _self_);
	_1ac69112c_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _8547_checkpoint);
}



inline void _1ac681925_optimizeRet(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aab036b2_RetSt> _89332_r) {
	static__1ac685583_optimizeData(&((*(_89332_r))._field_Expr), &((*(_self_))._field_data), _self_);
	if ((!(_1ac697199_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_89332_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1be934c0a:;
			{
				goto _match_end_1be934ce8;
			}
		}
		else {
			_case_begin_1be934d5e:;
			{
				return;;
			}
		}
		_match_end_1be934ce8:;
	};
	jule::Ptr<_1aaa30ed5_FnCallExpr> _9077_fc = (*_89332_r.alloc)._field_Expr.cast_ptr<_1aaa30ed5_FnCallExpr>(&__jule_any_type30);;
	if (((((!((*((*((*(_9077_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*(_9077_fc))._field_Except == nullptr)) || ((*((*(_9077_fc))._field_Except))._field_Stmts.len() != 1LL)) || (!(_1ab618528_IsForwarded(&((*(_9077_fc))._field_Except)))))) {
		return;;
	};
	_1ac67c701_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1ac3d513a_ExceptionalForwardingExpr>(_1ac3d513a_ExceptionalForwardingExpr{._field_Expr=_9077_fc}), &__jule_any_type121));
}



inline void _1ac681bcd_optimizeStmt(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Any _91733_stmt) {
	{
		auto &_match_expr{ _91733_stmt };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1be938109:;
			{
				_1ac68223e_optimizeChildHard(_self_, _91733_stmt.unsafe_cast_ptr<_1aaaec832_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1be937d84:;
			{
				_1ac67d1c4_optimizeData(_self_, _91733_stmt.unsafe_cast_ptr<_1aabb8db5_Data>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be938192:;
			{
				_1ac67d47c_optimizeVar(_self_, _91733_stmt.unsafe_cast_ptr<_1aab70795_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1be938219:;
			{
				_1ac67d735_optimizeConditional(_self_, _91733_stmt.unsafe_cast_ptr<_1aaaed426_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1be938291:;
			{
				_1ac67e1b4_optimizeRangeIter(_self_, _91733_stmt.unsafe_cast_ptr<_1aaaee6ad_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1be938318:;
			{
				_1ac67e46c_optimizeWhileIter(_self_, _91733_stmt.unsafe_cast_ptr<_1aaaedbc9_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1be938390:;
			{
				_1ac68223e_optimizeChildHard(_self_, (*(_91733_stmt.unsafe_cast_ptr<_1aaaed723_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1be938417:;
			{
				_1ac6807e2_optimizeAssign(_self_, _91733_stmt.unsafe_cast_ptr<_1aab0132a_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1be93848e:;
			{
				_1ac68166c_optimizeMultiAssign(_self_, _91733_stmt.unsafe_cast_ptr<_1aab018ad_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1be938516:;
			{
				_1ac67de0b_optimizeMatch(_self_, _91733_stmt.unsafe_cast_ptr<_1aab0232b_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1be93858d:;
			{
				_1ac681925_optimizeRet(_self_, _91733_stmt.unsafe_cast_ptr<_1aab036b2_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1be938615:;
			{
				_1ac6801e8_optimizePostfix(_self_, _91733_stmt.unsafe_cast_ptr<_1aab00d74_Postfix>());
			}
		}
		_match_end_1be937ea5:;
	};
}



inline void _1ac681e86_optimizeChild(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aaaec832_Scope> _94734_child) {
	jule::Ptr<_1ac67bd4e_scopeOptimizer> _9487_so = static__1ac67c448_new(_94734_child);;
	(*(_9487_so))._field_parent=_self_;
	(*_9487_so.alloc)._field_data=(*(_self_))._field_data;
	_1ac68243c_optimize(_9487_so);
}



inline void _1ac68223e_optimizeChildHard(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_, jule::Ptr<_1aaaec832_Scope> _98338_child) {
	_1ac690071_data _9867_alive = _1ac690071_data{._field_boundary=jule::Ptr<_1ac69232b_boundary>(nullptr), ._field_nils=jule::Ptr<_1ac3d97d2_nils>(nullptr), ._field_dynamic=jule::Ptr<_1ac68c447_dynamic>(nullptr)};;
	_1ac69112c_loadCheckpoint(&_9867_alive, _1ac690add_getCheckpoint((*(_self_))._field_data.ptr()));
	_1ac681e86_optimizeChild(_self_, _98338_child);
	_1ac690857_removeDeads(&_9867_alive, &((*_self_.alloc)._field_data));
	_1ac69112c_loadCheckpoint((*(_self_))._field_data, _1ac690d74_getMutCheckpoint(&_9867_alive));
}



inline void _1ac68243c_optimize(jule::Ptr<_1ac67bd4e_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1ac681bcd_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1be942de4:;
	}
	_iter_end_1be942de4:;;
}








inline jule::Bool _1ac68474c_exprOptimizer_eq(_1ac68474c_exprOptimizer *_self_, _1ac68474c_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector) &&
		(_self_->_field_scopeOpt == _self_->_field_scopeOpt);
}

inline void static__1ac684cad_optimize(jule::Any* _2326_model) {
	static__1ac685583_optimizeData(_2326_model, &(_1ac68e713_emptyData), nullptr);
}



inline jule::Ptr<_1ac68474c_exprOptimizer> static__1ac6851dc_new(jule::Any* _2721_model, jule::Ptr<_1ac690071_data>* _2745_d, jule::Ptr<_1ac67bd4e_scopeOptimizer> _2759_s) {
	return jule::new_ptr<_1ac68474c_exprOptimizer>(_1ac68474c_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_2721_model)), ._field_data=(*(_2745_d)), ._field_inspector=static__1ab616d62_New(), ._field_scopeOpt=_2759_s});;
}



inline void static__1ac685583_optimizeData(jule::Any* _3630_model, jule::Ptr<_1ac690071_data>* _3654_d, jule::Ptr<_1ac67bd4e_scopeOptimizer> _3668_s) {
	if (_1ac7b76c6_exprEnabled) {
		jule::Ptr<_1ac68474c_exprOptimizer> _398_exop = static__1ac6851dc_new(_3630_model, _3654_d, _3668_s);;
		_1ac68ab1b_do(_398_exop.ptr());
	};
}



inline void static__1ac685929_optimizeConditionalData(jule::Any* _4741_model, jule::Ptr<_1ac690071_data>* _4765_d, jule::Ptr<_1ac67bd4e_scopeOptimizer> _4779_s) {
	if ((!(_1ac7b76c6_exprEnabled))) {
		return;;
	};
	jule::Ptr<_1ac68474c_exprOptimizer> _527_exop = static__1ac6851dc_new(_4741_model, _4765_d, _4779_s);;
	{
		auto &_match_expr{ (*(_4741_model)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1be95319b:;
			{
				goto _match_end_1be953278;
			}
		}
		else {
			_case_begin_1be953553:;
			{
				_1ac68ab1b_do(_527_exop.ptr());
				return;;
			}
		}
		_match_end_1be953278:;
	};
	jule::Bool _677_check = true;;
	jule::Ptr<jule::Bool> _687__check = ((jule::Ptr<jule::Bool>)((&(_677_check))));;
	_1ab6179de_Inspect((*(_527_exop))._field_inspector.ptr(), &((*((*_527_exop.alloc)._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1be955489, jule::Ptr<__jule_anon_1be955489_ctx>::make(__jule_anon_1be955489_ctx{._687__check=_687__check,._527_exop=_527_exop}).as<jule::Uintptr>(), __jule_anon_1be955489_ctx_handler));
}



inline jule::Bool _1ac685c6a_selfCmpCond(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _10128_m) {
	if (((_1aac00ec9_Prim((*((*((*(_10128_m))))._field_Left))._field_Type.ptr()) != nullptr) && _1aaabe947_IsFloat((*(_1aac00ec9_Prim((*((*((*(_10128_m))))._field_Left))._field_Type)))._field_Kind))) {
		return false;;
	};
	if ((!(_1aac86b31_EqualModels((*((*((*(_10128_m))))._field_Left))._field_Model, (*((*((*(_10128_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_10128_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1be95a923:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1aaa2324c_NewBool(true), &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1be95a9ab:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1aaa2324c_NewBool(false), &__jule_any_type15);
				return true;;
			}
		}
		else {
			_case_begin_1be9597e0:;
			{
				return false;;
			}
		}
		_match_end_1be95a7d0:;
	};
}



inline jule::Bool _1ac6860ab_boolCond(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _13025_m) {
	jule::Ptr<_1aac06bc2_Prim> _1313_lp = _1aac00ec9_Prim((*((*((*(_13025_m))))._field_Left))._field_Type.ptr());;
	if (((_1313_lp == nullptr) || (!(_1aac09e06_IsBool(_1313_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_13025_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1be96010e:;
			{
				std::swap((*((*(_13025_m))))._field_Left, (*((*(_13025_m))))._field_Right);
			}
		}
		else {
			_case_begin_1be95e2d9:;
			{
				{
					auto &_match_expr{ (*((*((*(_13025_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1be95d5c4:;
						{
							goto _match_end_1be95eb14;
						}
					}
					else {
						_case_begin_1be95eb7a:;
						{
							return false;;
						}
					}
					_match_end_1be95eb14:;
				};
			}
		}
		_match_end_1be95e273:;
	};
	jule::Ptr<_1aa9b96cc_Const> _1487_c = (*((*((*(_13025_m))))._field_Right))._field_Model.cast_ptr<_1aa9b96cc_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_13025_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1be961b8d:;
			{
				if (_1aaa2466b_ReadBool(_1487_c.ptr())) {
					(*((*(_self_))._field_model))=(*((*((*(_13025_m))))._field_Left))._field_Model;
				} else {
					_1aaa25c55_SetBool(_1487_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_1487_c, &__jule_any_type15);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1be961c37:;
			{
				if (_1aaa2466b_ReadBool(_1487_c.ptr())) {
					_1aaa25c55_SetBool(_1487_c, true);
					(*((*(_self_))._field_model))=jule::Any(_1487_c, &__jule_any_type15);
				} else {
					(*((*(_self_))._field_model))=(*((*((*(_13025_m))))._field_Left))._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1be95ed12:;
		}
		_match_end_1be961b05:;
	};
	return false;;
}



inline jule::Bool _1ac6863ec_arrayCond(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr> _18325_m) {
	jule::Ptr<_1aac0d4e2_Arr> _1847_arr = _1aac01c99_Arr((*((*(_18325_m))._field_Left))._field_Type.ptr());;
	if (((_1847_arr == nullptr) || ((*(_1847_arr))._field_N != 0LL))) {
		return false;;
	};
	(*((*(_self_))._field_model))=jule::Any(static__1aaa2324c_NewBool(true), &__jule_any_type15);
	return true;;
}



inline void _1ac6866a5_strConv(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2dad7_OperandExpr>* _19824_m) {
	jule::Ptr<_1aac06bc2_Prim> _1993_p = _1aac00ec9_Prim((*((*(_19824_m))))._field_Type.ptr());;
	if (((_1993_p == nullptr) || (!(_1aac0a18c_IsStr(_1993_p.ptr()))))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_19824_m))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1be96829e:;
			{
				jule::Ptr<_1aaa30633_CastingExpr> _2068_c = (*((*(_19824_m))))._field_Model.unsafe_cast_ptr<_1aaa30633_CastingExpr>();;
				jule::Ptr<_1aac0b1c1_Slc> _2078_s = _1aac02030_Slc((*((*(_2068_c))._field_Expr))._field_Type.ptr());;
				if ((_2078_s == nullptr)) {
					goto _match_end_1be968227;
				};
				jule::Ptr<_1aac06bc2_Prim> _2114_sp = _1aac00ec9_Prim((*(_2078_s))._field_Elem.ptr());;
				if ((_2114_sp == nullptr)) {
					goto _match_end_1be968227;
				};
				if (_1aac085ec_IsU8(_2114_sp.ptr())) {
					jule::Any _2179_model = jule::Any(jule::new_ptr<_1ac3d4d60_StrFromBytes>(_1ac3d4d60_StrFromBytes{._field_Expr=(*(*(_2068_c))._field_Expr.alloc)._field_Model}), &__jule_any_type127);;
					(*((*(_19824_m))))._field_Model=(*(((jule::Any*)((&(_2179_model))))));
				};
			}
		}
		_match_end_1be968227:;
	};
}



inline jule::Bool _1ac6869e6_strCond(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _22324_m) {
	jule::Ptr<_1aac06bc2_Prim> _2243_lp = _1aac00ec9_Prim((*((*((*(_22324_m))))._field_Left))._field_Type.ptr());;
	if (((_2243_lp == nullptr) || (!(_1aac0a18c_IsStr(_2243_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*((*(_22324_m))))._field_Op))._field_Id != static_cast<jule::U32>(50LLU)) && ((*(*((*(_22324_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_22324_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1be971bc0:;
			{
				std::swap((*((*(_22324_m))))._field_Left, (*((*(_22324_m))))._field_Right);
			}
		}
		else {
			_case_begin_1be970d67:;
			{
				{
					auto &_match_expr{ (*((*((*(_22324_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1be96ee54:;
						{
							goto _match_end_1be971692;
						}
					}
					else {
						_case_begin_1be971708:;
						{
							return false;;
						}
					}
					_match_end_1be971692:;
				};
			}
		}
		_match_end_1be970d01:;
	};
	jule::Ptr<_1aa9b96cc_Const> _2447_c = (*((*((*(_22324_m))))._field_Right))._field_Model.cast_ptr<_1aa9b96cc_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_22324_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1be971939:;
			{
				if ((_1aaa24902_ReadStr(_2447_c.ptr())).empty()) {
					jule::Any _2489_model = jule::Any(jule::new_ptr<_1ac3d5eb5_EmptyCompareExpr>(_1ac3d5eb5_EmptyCompareExpr{._field_Expr=(*((*((*(_22324_m))))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2489_model))))));
					goto _match_end_1be97480a;
				};
				jule::Any _2558_model = jule::Any(jule::new_ptr<_1ac3d6801_StrCompExpr>(_1ac3d6801_StrCompExpr{._field_Left=(*((*((*(_22324_m))))._field_Left))._field_Model, ._field_Right=_2447_c, ._field_NotEq=false}), &__jule_any_type129);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2558_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1be9748b5:;
			{
				if ((_1aaa24902_ReadStr(_2447_c.ptr())).empty()) {
					jule::Any _2639_model = jule::Any(jule::new_ptr<_1ac3d5eb5_EmptyCompareExpr>(_1ac3d5eb5_EmptyCompareExpr{._field_Expr=(*((*((*(_22324_m))))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2639_model))))));
					goto _match_end_1be97480a;
				};
				jule::Any _2708_model = jule::Any(jule::new_ptr<_1ac3d6801_StrCompExpr>(_1ac3d6801_StrCompExpr{._field_Left=(*((*((*(_22324_m))))._field_Left))._field_Model, ._field_Right=_2447_c, ._field_NotEq=true}), &__jule_any_type129);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2708_model))))));
			}
		}
		_match_end_1be97480a:;
	};
	return true;;
}



inline jule::Bool _1ac686d37_strConcat(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _28126_m) {
	jule::Ptr<_1aac06bc2_Prim> _2823_lp = _1aac00ec9_Prim((*((*((*(_28126_m))))._field_Left))._field_Type.ptr());;
	if (((_2823_lp == nullptr) || (!(_1aac0a18c_IsStr(_2823_lp.ptr()))))) {
		return false;;
	};
	if (((*((*((*(_28126_m))))._field_Op))._field_Id != static_cast<jule::U32>(60LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_28126_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1be98263c:;
			{
				goto _match_end_1be9832a8;
			}
		}
		else {
			_case_begin_1be98331e:;
			{
				return false;;
			}
		}
		_match_end_1be9832a8:;
	};
	jule::Ptr<_1ac3d5745_StrConcatExpr> _3057_model = jule::new_ptr<_1ac3d5745_StrConcatExpr>(_1ac3d5745_StrConcatExpr{._field_Parts=jule::Slice<jule::Any>(nullptr)});;
	jule::Fn<void,jule::Any> _30611_step;;
	jule::Fn<void,jule::Any> *_3094__step = &(_30611_step);;
	_30611_step=jule::__new_closure<void,jule::Any>((void*)__jule_anon_1be984ed0, jule::Ptr<__jule_anon_1be984ed0_ctx>::make(__jule_anon_1be984ed0_ctx{._3057_model=_3057_model,._self_=_self_,._3094__step=_3094__step}).as<jule::Uintptr>(), __jule_anon_1be984ed0_ctx_handler);
	_30611_step(jule::Any((*(_28126_m)), &__jule_any_type113));
	jule::Any _3407_anyModel = jule::Any(_3057_model, &__jule_any_type130);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_3407_anyModel))))));
	return true;;
}



inline jule::Bool _1ac6872dd_tryNeutralElement1(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _34535_m, jule::Ptr<_1aa9b96cc_Const> _34561_c, jule::Ptr<_1aaa2dad7_OperandExpr>* _34587_nc) {
	if (_1aaa26eed_IsStr(_34561_c.ptr())) {
		if ((!(_1ac696891_Str))) {
			return false;;
		};
		if (((_1aaa24902_ReadStr(_34561_c.ptr())).empty() && ((*((*((*(_34535_m))))._field_Op))._field_Id == static_cast<jule::U32>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_34587_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1ac69596c_Math)) || (_1aaa2543b_AsF64(_34561_c.ptr()) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_34535_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1be98bec6:;
			{
				if (((*(_34587_nc)) == (*((*(_34535_m))))._field_Left)) {
					(*((*(_self_))._field_model))=(*((*(_34587_nc))))._field_Model;
					return true;;
				};
				(*((*(_self_))._field_model))=jule::Any(_34561_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1be98cb53:;
			{
				if (_1aaabe947_IsFloat((*(_1aac00ec9_Prim((*((*(_34587_nc))))._field_Type.ptr())))._field_Kind)) {
					goto _match_end_1be98ca10;
				};
				_1aaa256e4_SetI64(_34561_c.ptr(), 0LL);
				(*((*(_self_))._field_model))=jule::Any(_34561_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1be98cbb9:;
			{
				(*((*(_self_))._field_model))=(*((*(_34587_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1be98ca10:;
	};
	return false;;
}



inline jule::Bool _1ac68762e_tryNeutralElement(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _39534_m) {
	{
		auto &_match_expr{ (*((*((*(_39534_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1be992ce0:;
			{
				jule::Ptr<_1aa9b96cc_Const> _3998_c = (*((*((*(_39534_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1aa9b96cc_Const>();;
				return _1ac6872dd_tryNeutralElement1(_self_, _39534_m, _3998_c, &((*((*(_39534_m))))._field_Right));;
			}
		}
		_match_end_1be992c68:;
	};
	{
		auto &_match_expr{ (*((*((*(_39534_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1be993373:;
			{
				jule::Ptr<_1aa9b96cc_Const> _4048_c = (*((*((*(_39534_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1aa9b96cc_Const>();;
				return _1ac6872dd_tryNeutralElement1(_self_, _39534_m, _4048_c, &((*((*(_39534_m))))._field_Left));;
			}
		}
		_match_end_1be9932eb:;
	};
	return false;;
}



inline void _1ac6878d7_checkBinaryForBoundary(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _41039_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_41039_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1be99661d:;
			{
				jule::Ptr<_1aaa3611c_BuiltinLenCallExpr> _4168_blc = (*((*((*(_41039_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1aaa3611c_BuiltinLenCallExpr>();;
				if ((!(_1ac694493_isBoundaryValidType((*((*(_4168_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_41039_m))))._field_Op))._field_Id != static_cast<jule::U32>(70LLU)) && ((*(*((*(_41039_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*((*((*(_41039_m))))._field_Op))._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_41039_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1be99981e:;
							{
								jule::Ptr<_1aa9b96cc_Const> _42810_c = jule::new_ptr<_1aa9b96cc_Const>((*((*((*((*(_41039_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1aa9b96cc_Const>())));;
								_1aaa297c5_Sub(_42810_c, (*(static__1aaa22c30_NewI64(1LL))));
								_1ac6927c1_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _1ac69475c_getBoundaryVar((*((*(_4168_blc))._field_Expr))._field_Model), jule::Any(_42810_c, &__jule_any_type15));
							}
						}
						_match_end_1be999797:;
					};
					return;;
				};
				_1ac6927c1_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _1ac69475c_getBoundaryVar((*((*(_4168_blc))._field_Expr))._field_Model), (*((*((*(_41039_m))))._field_Right))._field_Model);
				return;;
			}
		}
		_match_end_1be996596:;
	};
	{
		auto &_match_expr{ (*((*((*(_41039_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1be996c39:;
			{
				jule::Ptr<_1aaa3611c_BuiltinLenCallExpr> _4398_blc = (*((*((*(_41039_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1aaa3611c_BuiltinLenCallExpr>();;
				if ((!(_1ac694493_isBoundaryValidType((*((*(_4398_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_41039_m))))._field_Op))._field_Id != static_cast<jule::U32>(69LLU)) && ((*(*((*(_41039_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*((*((*(_41039_m))))._field_Op))._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_41039_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1be9a1282:;
							{
								jule::Ptr<_1aa9b96cc_Const> _45110_c = jule::new_ptr<_1aa9b96cc_Const>((*((*((*((*(_41039_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1aa9b96cc_Const>())));;
								_1aaa297c5_Sub(_45110_c, (*(static__1aaa22c30_NewI64(1LL))));
								_1ac6927c1_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _1ac69475c_getBoundaryVar((*((*(_4398_blc))._field_Expr))._field_Model), jule::Any(_45110_c, &__jule_any_type15));
							}
						}
						_match_end_1be9a120a:;
					};
					return;;
				};
				_1ac6927c1_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _1ac69475c_getBoundaryVar((*((*(_4398_blc))._field_Expr))._field_Model), (*((*((*(_41039_m))))._field_Left))._field_Model);
				return;;
			}
		}
		_match_end_1be996bb2:;
	};
}



inline void _1ac687b90_checkBinaryForNil(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _46234_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _4667_var = _1ac3db284_getNilVar((*((*((*(_46234_m))))._field_Left))._field_Model);;
	if ((_4667_var != 0LLU)) {
		if ((!(_1ac3dae43_isNilValidType((*(*((*(_46234_m))))._field_Left.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_46234_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1be9a6a18:;
				{
					_1ac3d9c77_pushVar((*((*(_self_))._field_data))._field_nils.ptr(), _4667_var, ((*((*((*(_46234_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1be9a6991:;
		};
		return;;
	};
	_4667_var=_1ac3db284_getNilVar((*((*((*(_46234_m))))._field_Right))._field_Model);
	if ((_4667_var != 0LLU)) {
		if ((!(_1ac3dae43_isNilValidType((*(*((*(_46234_m))))._field_Right.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_46234_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1be9a918b:;
				{
					_1ac3d9c77_pushVar((*((*(_self_))._field_data))._field_nils.ptr(), _4667_var, ((*((*((*(_46234_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1be9a9114:;
		};
		return;;
	};
}



inline void _1ac687e48_shift(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr> _49621_m) {
	jule::I32 _4983_z = _1aaab6587_BitSizeOf((*(_1aac00ec9_Prim((*((*(_49621_m))._field_Left))._field_Type.ptr())))._field_Kind);;
	jule::U64 _4993_s = _1aaa251a5_AsU64((*((*_49621_m.alloc)._field_Right))._field_Model.cast_ptr<_1aa9b96cc_Const>(&__jule_any_type15).ptr());;
	if ((_4993_s >= static_cast<jule::U64>(_4983_z))) {
		(*((*(_self_))._field_model))=jule::Any(static__1aaa22e83_NewU64(0LLU), &__jule_any_type15);
		return;;
	};
	jule::Any _5097_model = jule::Any(jule::new_ptr<_1ac3d7181_UnsafeBinaryExpr>(_1ac3d7181_UnsafeBinaryExpr{._field_Node=_49621_m}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5097_model))))));
}



inline jule::Bool _1ac688289_binaryMath(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _51627_m) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aac06bc2_Prim> _5203_lp = _1aac00ec9_Prim((*((*((*(_51627_m))))._field_Left))._field_Type.ptr());;
	if ((_5203_lp == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac06bc2_Prim> _5243_rp = _1aac00ec9_Prim((*((*((*(_51627_m))))._field_Right))._field_Type);;
	if ((_5243_rp == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*((*(_51627_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1be9b244c:;
			{
				if (((!(_1aaabe606_IsInt((*(_5203_lp))._field_Kind))) || (!(_1aac86b31_EqualModels((*(*((*(_51627_m))))._field_Left.alloc)._field_Model, (*((*((*(_51627_m))))._field_Right))._field_Model))))) {
					goto _match_end_1be9b23d6;
				};
				(*((*(_51627_m))))._field_Op=jule::new_ptr<_1aa0d7ceb_Token>((*(*((*(_51627_m))))._field_Op.alloc));
				(*(*((*(_51627_m))))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
				(*(*((*(_51627_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
				(*((*((*(_51627_m))))._field_Right))._field_Model=jule::Any(static__1aaa22e83_NewU64(1LLU), &__jule_any_type15);
				jule::Any _5438_model = jule::Any(jule::new_ptr<_1ac3d7181_UnsafeBinaryExpr>(_1ac3d7181_UnsafeBinaryExpr{._field_Node=(*(_51627_m))}), &__jule_any_type131);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5438_model))))));
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1be9b24b3:;
			{
				if (((!(_1aaabe606_IsInt((*(_5203_lp))._field_Kind))) || (!(_1aac86b31_EqualModels((*(*((*(_51627_m))))._field_Left.alloc)._field_Model, (*((*((*(_51627_m))))._field_Right))._field_Model))))) {
					goto _match_end_1be9b23d6;
				};
				jule::Ptr<_1aa9b96cc_Const> _5528_c = static__1aaa22e83_NewU64(0LLU);;
				(*(_5528_c))._field_Kind=(*(_5203_lp))._field_Kind;
				(*((*(_self_))._field_model))=jule::Any(_5528_c, &__jule_any_type15);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1be9b23d6:;
	};
	{
		auto &_match_expr{ (*((*((*(_51627_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1be9b2859:;
			{
				goto _match_end_1be9b9be6;
			}
		}
		else {
			_case_begin_1be9b9c5c:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1be9b9be6:;
	};
	{
		auto &_match_expr{ (*((*((*(_51627_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1be9bae8e:;
			{
				jule::Bool _5694_ok;
				jule::U64 _5698_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ac68b05b_checkForBitShiftOpt(&((*((*(_51627_m))))._field_Left), &((*((*(_51627_m))))._field_Right));
					_5694_ok = __jule_assign_result.__jule_result_arg0;
					_5698_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_5694_ok) {
					(*((*(_51627_m))))._field_Op=jule::new_ptr<_1aa0d7ceb_Token>((*(*((*(_51627_m))))._field_Op.alloc));
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1aa9b96cc_Const> _5749_c = (*((*((*(_51627_m))))._field_Right))._field_Model.cast_ptr<_1aa9b96cc_Const>(&__jule_any_type15);;
					_1aaa2599c_SetU64(_5749_c.ptr(), _5698_x);
					_1ac687e48_shift(_self_, (*(_51627_m)));
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1be9bb005:;
			{
				jule::Bool _5804_ok;
				jule::U64 _5808_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1ac68b05b_checkForBitShiftOpt(&((*((*(_51627_m))))._field_Left), &((*((*(_51627_m))))._field_Right));
					_5804_ok = __jule_assign_result.__jule_result_arg0;
					_5808_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_5804_ok) {
					(*((*(_51627_m))))._field_Op=jule::new_ptr<_1aa0d7ceb_Token>((*(*((*(_51627_m))))._field_Op.alloc));
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1aa9b96cc_Const> _5859_c = (*((*((*(_51627_m))))._field_Right))._field_Model.cast_ptr<_1aa9b96cc_Const>(&__jule_any_type15);;
					_1aaa2599c_SetU64(_5859_c.ptr(), _5808_x);
					_1ac687e48_shift(_self_, (*(_51627_m)));
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1be9bb06b:;
			{
				jule::Ptr<_1aa9b96cc_Const> _5918_c = (*((*((*(_51627_m))))._field_Right))._field_Model.cast_ptr<_1aa9b96cc_Const>(&__jule_any_type15);;
				if ((_1aaa2543b_AsF64(_5918_c.ptr()) == 2LL)) {
					(*((*(_51627_m))))._field_Op=jule::new_ptr<_1aa0d7ceb_Token>((*(*((*(_51627_m))))._field_Op.alloc));
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Id=static_cast<jule::U32>(65LLU);
					(*(*((*(_51627_m))))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1aaa256e4_SetI64(_5918_c, 1LL);
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1be9bb0d2:;
			{
				jule::F64 _6034_s = _1aaa2543b_AsF64((*((*((*(_51627_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1aa9b96cc_Const>().ptr());;
				if ((_6034_s == 0LL)) {
					(*((*(_self_))._field_model))=(*((*((*(_51627_m))))._field_Left))._field_Model;
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1be9baad7:;
			{
				_1ac687e48_shift(_self_, (*(_51627_m)));
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1be9ba411:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1be9ba884:;
	};
	jule::Any _6177_model = jule::Any(jule::new_ptr<_1ac3d7181_UnsafeBinaryExpr>(_1ac3d7181_UnsafeBinaryExpr{._field_Node=(*(_51627_m))}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_6177_model))))));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac688542_binaryStrCommon(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr>* _62432_m) {
	_1ac6866a5_strConv(_self_, &((*((*(_62432_m))))._field_Left));
	_1ac6866a5_strConv(_self_, &((*((*(_62432_m))))._field_Right));
}



inline void _1ac6887ea_binary(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr> _62922_m) {
	if (_1ac696891_Str) {
		_1ac688542_binaryStrCommon(_self_, &(_62922_m));
		{
			
			if (_1ac6869e6_strCond(_self_, &(_62922_m)) || _1ac686d37_strConcat(_self_, &(_62922_m))) {
				_case_begin_1be9c9c7d:;
				{
					goto _julec_label_1be9cbc19;
				}
			}
			_match_end_1be9c9c06:;
		};
	};
	if ((_1ac6979b3_Array && _1ac6863ec_arrayCond(_self_, _62922_m))) {
		goto _julec_label_1be9cbc19;
	};
	if (_1ac69664e_Cond) {
		{
			
			if (_1ac6860ab_boolCond(_self_, &(_62922_m)) || _1ac685c6a_selfCmpCond(_self_, &(_62922_m))) {
				_case_begin_1be9caca1:;
				{
					goto _julec_label_1be9cbc19;
				}
			}
			_match_end_1be9cab5d:;
		};
	};
	if (_1ac68762e_tryNeutralElement(_self_, &(_62922_m))) {
		goto _julec_label_1be9cbc19;
	};
	if ((_1ac69596c_Math && _1ac688289_binaryMath(_self_, &(_62922_m)))) {
		goto _julec_label_1be9cbc19;
	};
	_julec_label_1be9cbc19:;
	if (((*((*(_62922_m))._field_Op))._field_Id == static_cast<jule::U32>(55LLU))) {
		_1ac690071_data _6868_checkpoint = _1ac690071_data{._field_boundary=jule::Ptr<_1ac69232b_boundary>(nullptr), ._field_nils=jule::Ptr<_1ac3d97d2_nils>(nullptr), ._field_dynamic=jule::Ptr<_1ac68c447_dynamic>(nullptr)};;
		_1ac69112c_loadCheckpoint(&_6868_checkpoint, _1ac690add_getCheckpoint((*(_self_))._field_data.ptr()));
		{
			_1ab6173c3_InspectStep((*(_self_))._field_inspector.ptr(), &((*((*_62922_m.alloc)._field_Left))._field_Model));
		};
		_1ac69112c_loadCheckpoint((*(_self_))._field_data, _1ac690add_getCheckpoint(&_6868_checkpoint));
		{
			_1ab6173c3_InspectStep((*(_self_))._field_inspector.ptr(), &((*((*_62922_m.alloc)._field_Right))._field_Model));
		};
		_1ac69112c_loadCheckpoint((*(_self_))._field_data, _1ac690d74_getMutCheckpoint(&_6868_checkpoint));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
	};
}



inline void _1ac688aa3_unary(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2e4ab_UnaryExpr> _70621_m) {
	if ((!(_1ac696286_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_70621_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1be9d0d50:;
			{
				{
					auto &_match_expr{ (*((*(_70621_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1be9d1d51:;
						{
							jule::Ptr<_1aaa2e4ab_UnaryExpr> _7149_um = (*((*(_70621_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1aaa2e4ab_UnaryExpr>();;
							if (((*((*(_7149_um))._field_Op))._field_Id == static_cast<jule::U32>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_7149_um.alloc)._field_Expr))._field_Model;
							};
							return;;
						}
					}
					_match_end_1be9d1cc9:;
				};
				if (((_1ac695c25_Access && ((*((*(_self_))._field_data))._field_nils != nullptr)) && _1ac3dae43_isNilValidType((*((*(_70621_m))._field_Expr))._field_Type))) {
					jule::Uintptr _7245_var = _1ac3db284_getNilVar((*(*(_70621_m))._field_Expr.alloc)._field_Model);;
					if (_1ac3da409_isSafe((*((*(_self_))._field_data))._field_nils, _7245_var)) {
						jule::Any _72610_model = jule::Any(jule::new_ptr<_1ac3d8407_UnsafeDerefExpr>(_1ac3d8407_UnsafeDerefExpr{._field_Base=_70621_m}), &__jule_any_type132);;
						(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_72610_model))))));
					} else {
						_1ac3d9c77_pushVar((*((*(_self_))._field_data))._field_nils, _7245_var, true);
					};
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1be9d1180:;
			{
				{
					auto &_match_expr{ (*((*(_70621_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_1be9d8a7d:;
						{
							jule::Ptr<_1aab70795_Var> _7369_v = (*((*(_70621_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1aab70795_Var>();;
							if ((*(_7369_v))._field_Reference) {
								jule::Any _73810_model = jule::Any(jule::new_ptr<_1ac3d62b2_RefExpr>(_1ac3d62b2_RefExpr{._field_Var=_7369_v}), &__jule_any_type133);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_73810_model))))));
							};
						}
					}
					_match_end_1be9d8a06:;
				};
			}
		}
		_match_end_1be9d10c5:;
	};
}



inline void _1ac688d5b_structureLit(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa2ed80_StructLitExpr> _74528_m) {
	{
		auto expr = &((*(_74528_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be9ddeb2:;
		if (it != expr_end) {
			jule::Ptr<_1aaa2e9d9_StructArgExpr> _74615_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1ac6941c9_isBoundaryRiskyType((*((*(_74615_arg))._field_Expr))._field_Type)) {
						_1ac693e10_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_74615_arg, &__jule_any_type134));
					};
				};
				if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
					_1ac3da7b1_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_74615_arg))._field_Expr))._field_Model);
				};
				if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
					_1ac68d4d1_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_74615_arg))._field_Expr))._field_Model);
				};
			}
			_iter_next_1be9ddeb2:;
			++it;
			goto _iter_begin_1be9ddeb2;
		}
		_iter_end_1be9ddeb2:;
	};
}



inline void _1ac689114_casting(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa30633_CastingExpr> _76123_m) {
	jule::Bool _7623_valid = _1ac68d7de_isDynamicValidType((*((*(_76123_m))._field_Expr))._field_Type);;
	jule::Uintptr _7633_var = _1ac68e05e_getDynamicVar((*(*(_76123_m))._field_Expr.alloc)._field_Model);;
	if (((_7623_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1ac68d129_isFits((*((*(_self_))._field_data))._field_dynamic, _7633_var, (*_76123_m.alloc)._field_Type))) {
		jule::Any _7658_model = jule::Any(jule::new_ptr<_1ac3d8935_UnsafeCastingExpr>(_1ac3d8935_UnsafeCastingExpr{._field_Base=_76123_m}), &__jule_any_type135);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_7658_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_dynamic != nullptr) && _7623_valid)) {
		_1ac68c8dc_pushVar((*((*(_self_))._field_data))._field_dynamic, _7633_var, (*_76123_m.alloc)._field_Type);
	};
}



inline void _1ac689477_args(_1ac68474c_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>> _77520_params, jule::Slice<jule::Any>* _77552_args) {
	{
		auto expr = _77552_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be9eb970:;
		if (it != expr_end) {
			jule::I32 _7768_i = it - expr->begin();
			jule::Any _77615_arg = *it;
			{
				if ((_7768_i >= _77520_params.len())) {
					goto _iter_next_1be9eb970;
				};
				jule::Ptr<_1aaa3d179_ParamIns> _7808_p = _77520_params[_7768_i];;
				if (((*((*(_7808_p))._field_Decl))._field_Mutable && (*(*(_7808_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1ac6941c9_isBoundaryRiskyType((*_7808_p.alloc)._field_Type)) {
							_1ac693e10_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _77615_arg);
						};
					};
					if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
						_1ac3da7b1_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _77615_arg);
					};
					if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
						_1ac68d4d1_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _77615_arg);
					};
				};
			}
			_iter_next_1be9eb970:;
			++it;
			_7768_i++;
			goto _iter_begin_1be9eb970;
		}
		_iter_end_1be9eb970:;
	};
}



inline void _1ac6897da_scope(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaaec832_Scope>* _80022_s, jule::Bool _80039_child) {
	if ((_80039_child && ((*(_self_))._field_scopeOpt != nullptr))) {
		_1ac68223e_optimizeChildHard((*(_self_))._field_scopeOpt, (*(_80022_s)));
		return;;
	};
	jule::Ptr<_1ac67bd4e_scopeOptimizer> _8057_scopt = static__1ac67c448_new((*(_80022_s)));;
	if (((*(_self_))._field_data != nullptr)) {
		(*(_8057_scopt))._field_data=jule::new_ptr<_1ac690071_data>(_1ac690071_data{._field_boundary=jule::Ptr<_1ac69232b_boundary>(nullptr), ._field_nils=jule::Ptr<_1ac3d97d2_nils>(nullptr), ._field_dynamic=jule::Ptr<_1ac68c447_dynamic>(nullptr)});
		_1ac69112c_loadCheckpoint((*(_8057_scopt))._field_data, _1ac690add_getCheckpoint((*(_self_))._field_data));
	};
	_1ac68243c_optimize(_8057_scopt);
}



inline void _1ac689a93_optimizeStrBuilderCall(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa30ed5_FnCallExpr>* _81639_m) {
	;
	{
		if (((*((*(_1ab61db5a_ProgramMeta))._field_StrBuilder))._field_Write == (*((*(_81639_m))))._field_Func)) {
			jule::Any _8239_model = jule::Any(jule::new_ptr<_1ac3d53c1_FnCallIgnoreExceptionalExpr>(_1ac3d53c1_FnCallIgnoreExceptionalExpr{._field_Base=(*(_81639_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8239_model))))));
			return;;
		};
	};
	{
		if (((*((*(_1ab61db5a_ProgramMeta))._field_StrBuilder))._field_WriteByte == (*((*(_81639_m))))._field_Func)) {
			jule::Any _8239_model = jule::Any(jule::new_ptr<_1ac3d53c1_FnCallIgnoreExceptionalExpr>(_1ac3d53c1_FnCallIgnoreExceptionalExpr{._field_Base=(*(_81639_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8239_model))))));
			return;;
		};
	};
	{
		if (((*((*(_1ab61db5a_ProgramMeta))._field_StrBuilder))._field_WriteRune == (*((*(_81639_m))))._field_Func)) {
			jule::Any _8239_model = jule::Any(jule::new_ptr<_1ac3d53c1_FnCallIgnoreExceptionalExpr>(_1ac3d53c1_FnCallIgnoreExceptionalExpr{._field_Base=(*(_81639_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8239_model))))));
			return;;
		};
	};
	{
		if (((*((*(_1ab61db5a_ProgramMeta))._field_StrBuilder))._field_WriteStr == (*((*(_81639_m))))._field_Func)) {
			jule::Any _8239_model = jule::Any(jule::new_ptr<_1ac3d53c1_FnCallIgnoreExceptionalExpr>(_1ac3d53c1_FnCallIgnoreExceptionalExpr{._field_Base=(*(_81639_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8239_model))))));
			return;;
		};
	};
}



inline void _1ac689d4b_lenCall(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa3611c_BuiltinLenCallExpr> _83123_m) {
	if ((!(_1ac697e9c_Len))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_83123_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bea051e8:;
			{
				goto _match_end_1bea0587a;
			}
		}
		else {
			_case_begin_1bea058e1:;
			{
				return;;
			}
		}
		_match_end_1bea0587a:;
	};
	jule::Ptr<_1aaa30633_CastingExpr> _8427_c = (*((*(_83123_m))._field_Expr))._field_Model.cast_ptr<_1aaa30633_CastingExpr>(&__jule_any_type94);;
	jule::Ptr<_1aac06bc2_Prim> _8437_prim = _1aac00ec9_Prim((*((*(_8427_c))._field_Expr))._field_Type.ptr());;
	if (((_8437_prim == nullptr) || (!(_1aac0a18c_IsStr(_8437_prim.ptr()))))) {
		return;;
	};
	jule::Ptr<_1aac0b1c1_Slc> _8487_slc = _1aac02030_Slc((*_8427_c.alloc)._field_Type.ptr());;
	if ((_8487_slc == nullptr)) {
		return;;
	};
	_8437_prim=_1aac00ec9_Prim((*(_8487_slc))._field_Elem.ptr());
	if ((_8437_prim == nullptr)) {
		return;;
	};
	{
		
		if (_1aac085ec_IsU8(_8437_prim.ptr())) {
			_case_begin_1bea11ca4:;
			{
				(*_83123_m.alloc)._field_Expr=(*_8427_c.alloc)._field_Expr;
			}
		}
		else if (_1aac080d0_IsI32(_8437_prim.ptr())) {
			_case_begin_1bea11d1a:;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _8658_func = (*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_RuneCount;;
				(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1aaa30ed5_FnCallExpr>(_1aaa30ed5_FnCallExpr{._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Func=_8658_func, ._field_IsCo=false, ._field_Expr=jule::Any(_8658_func, &__jule_any_type65), ._field_Args=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(*(_8427_c))._field_Expr.alloc)._field_Model; __jule_collection; }), ._field_Except=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Assigned=false}), &__jule_any_type30);
			}
		}
		_match_end_1bea11e6e:;
	};
}



inline void _1ac68a104_funcCall(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa30ed5_FnCallExpr> _87424_m) {
	_1ac689477_args(_self_, (*((*(_87424_m))._field_Func))._field_Params, &((*_87424_m.alloc)._field_Args));
	if (((*_87424_m.alloc)._field_Except != nullptr)) {
		;
		_1ac6897da_scope(_self_, &((*_87424_m.alloc)._field_Except), true);
	};
	{
		
		if ((_1ac6981de_StdStrings && ((*(_1ab61db5a_ProgramMeta))._field_StrBuilder != nullptr))) {
			_case_begin_1bea16182:;
			{
				_1ac689a93_optimizeStrBuilderCall(_self_, &(_87424_m));
			}
		}
		_match_end_1bea159cd:;
	};
}



inline void _1ac68a3ac_indexing(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa31865_IndexingExpr> _88824_m) {
	if ((!(_1ac695c25_Access))) {
		return;;
	};
	jule::Bool _8933_array = (_1aac01c99_Arr((*((*(_88824_m))._field_Expr))._field_Type.ptr()) != nullptr);;
	if ((_8933_array && _1aabb9800_IsConst((*_88824_m.alloc)._field_Index.ptr()))) {
		jule::Any _8968_model = jule::Any(jule::new_ptr<_1ac3d747d_UnsafeIndexingExpr>(_1ac3d747d_UnsafeIndexingExpr{._field_Node=_88824_m}), &__jule_any_type137);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_8968_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1ac694493_isBoundaryValidType((*(*(_88824_m))._field_Expr.alloc)._field_Type))) {
		jule::Uintptr _9024_var = _1ac69475c_getBoundaryVar((*(*(_88824_m))._field_Expr.alloc)._field_Model);;
		if (_1ac69300d_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _9024_var, (*((*_88824_m.alloc)._field_Index))._field_Model)) {
			jule::Any _9049_model = jule::Any(jule::new_ptr<_1ac3d747d_UnsafeIndexingExpr>(_1ac3d747d_UnsafeIndexingExpr{._field_Node=_88824_m}), &__jule_any_type137);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9049_model))))));
			return;;
		};
		_1ac6927c1_pushVar((*((*(_self_))._field_data))._field_boundary, _9024_var, (*((*_88824_m.alloc)._field_Index))._field_Model);
	};
}



inline void _1ac68a665_anonFunc(_1ac68474c_exprOptimizer* _self_, jule::Ptr<_1aaa31d1b_AnonFnExpr> _91224_m) {
	;
	_1ac6897da_scope(_self_, &((*((*(_91224_m))._field_Func))._field_Scope), false);
}



inline void _1ac68a91d_inspectStep(_1ac68474c_exprOptimizer* _self_, jule::Any* _92128_m) {
	(*(_self_))._field_model=((jule::Ptr<jule::Any>)(_92128_m));
	{
		auto &_match_expr{ (*(_92128_m)) };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1bea2217c:;
			{
				_1ac6887ea_binary(_self_, (*(_92128_m)).cast_ptr<_1aaa2e0d2_BinaryExpr>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bea218eb:;
			{
				_1ac688aa3_unary(_self_, (*(_92128_m)).cast_ptr<_1aaa2e4ab_UnaryExpr>(&__jule_any_type112));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bea221e3:;
			{
				_1ac688d5b_structureLit(_self_, (*(_92128_m)).cast_ptr<_1aaa2ed80_StructLitExpr>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bea22259:;
			{
				_1ac689114_casting(_self_, (*(_92128_m)).cast_ptr<_1aaa30633_CastingExpr>(&__jule_any_type94));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1bea222c0:;
			{
				_1ac68a104_funcCall(_self_, (*(_92128_m)).cast_ptr<_1aaa30ed5_FnCallExpr>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1bea22336:;
			{
				_1ac689d4b_lenCall(_self_, (*(_92128_m)).cast_ptr<_1aaa3611c_BuiltinLenCallExpr>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bea2239c:;
			{
				_1ac68a3ac_indexing(_self_, (*(_92128_m)).cast_ptr<_1aaa31865_IndexingExpr>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1bea22413:;
			{
				_1ac68a665_anonFunc(_self_, (*(_92128_m)).cast_ptr<_1aaa31d1b_AnonFnExpr>(&__jule_any_type101));
			}
		}
		_match_end_1bea2206c:;
	};
}



inline void _1ac68ab1b_do(_1ac68474c_exprOptimizer* _self_) {
	_1ab6179de_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1bea26280, jule::Ptr<__jule_anon_1bea26280_ctx>::make(__jule_anon_1bea26280_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bea26280_ctx_handler));
}








inline jule::Bool _1ac68c106_dynamicVar_eq(_1ac68c106_dynamicVar *_self_, _1ac68c106_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1ac68c8dc_pushVar(jule::Ptr<_1ac68c447_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1aabecdb6_Type> _2442_kind) {
	if (((!(_1ac69770a_Dynamic)) || (_2424_var == 0LLU))) {
		return;;
	};
	_2442_kind=_1ac68dc1d_isTypeGuaranteedDynamicData(&(_self_), _2442_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea36b86:;
		if (it != expr_end) {
			jule::I32 _307_i = it - expr->begin();
			{
				_1ac68c106_dynamicVar *_319_v = &((*(_self_))._field_vars[_307_i]);;
				if (((*(_319_v))._field_var == _2424_var)) {
					(*(_319_v))._field_kind=_2442_kind;
					return;;
				};
			}
			_iter_next_1bea36b86:;
			++it;
			_307_i++;
			goto _iter_begin_1bea36b86;
		}
		_iter_end_1bea36b86:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea37e62:;
		if (it != expr_end) {
			jule::I32 _387_i = it - expr->begin();
			{
				_1ac68c106_dynamicVar *_399_v = &((*_self_.alloc)._field_vars[_387_i]);;
				if (((*(_399_v))._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _2424_var;
						jule::Ptr<_1aabecdb6_Type> _1___jule_assign_arg = _2442_kind;
						(*(_399_v))._field_var = ___jule_assign_arg;
						(*(_399_v))._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1bea37e62:;
			++it;
			_387_i++;
			goto _iter_begin_1bea37e62;
		}
		_iter_end_1bea37e62:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1ac68c106_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac68c106_dynamicVar{._field_var=_2424_var, ._field_kind=_2442_kind}; __jule_collection; }));
}



inline jule::Bool _1ac68cc2d_removeVar(_1ac68c447_dynamic* _self_, jule::Uintptr _4925_var) {
	if ((_4925_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bea3a926:;
			if (it != expr_end) {
				jule::I32 _518_i = it - expr->begin();
				{
					_1ac68c106_dynamicVar *_5210_v = &((*(_self_))._field_vars[_518_i]);;
					if (((*(_5210_v))._field_var == _4925_var)) {
						(*(_5210_v))._field_var=0LLU;
						(*(_5210_v))._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1bea3a926:;
				++it;
				_518_i++;
				goto _iter_begin_1bea3a926;
			}
			_iter_end_1bea3a926:;
		};
	};
	return false;;
}



inline jule::Bool _1ac68d129_isFits(_1ac68c447_dynamic* _self_, jule::Uintptr _6422_var, jule::Ptr<_1aabecdb6_Type> _6436_kind) {
	if ((_6422_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bea3c98e:;
			if (it != expr_end) {
				_1ac68c106_dynamicVar _6611_v = *it;
				{
					if ((_6611_v._field_var == _6422_var)) {
						return ((_6611_v._field_kind != nullptr) && _1aabed603_Equal(_6611_v._field_kind, _6436_kind));;
					};
				}
				_iter_next_1bea3c98e:;
				++it;
				goto _iter_begin_1bea3c98e;
			}
			_iter_end_1bea3c98e:;
		};
	};
	return false;;
}








inline jule::Bool _1ac68ea76_dataCheckpoint_eq(_1ac68ea76_dataCheckpoint *_self_, _1ac68ea76_dataCheckpoint _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}






inline jule::Bool _1ac690071_data_eq(_1ac690071_data *_self_, _1ac690071_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}

inline void _1ac690857_removeDeads(_1ac690071_data* _self_, jule::Ptr<_1ac690071_data>* _4228_other) {
	if ((((*(_self_))._field_boundary != nullptr) && ((*((*(_4228_other))))._field_boundary != nullptr))) {
		_1bea3e2cb__removeDeads(&((*(_self_))._field_boundary), &((*((*(_4228_other))))._field_boundary), 0LLU);
	};
	if ((((*(_self_))._field_nils != nullptr) && ((*((*(_4228_other))))._field_nils != nullptr))) {
		_1bea411ce__removeDeads(&((*(_self_))._field_nils), &((*((*(_4228_other))))._field_nils), 0LLU);
	};
	if ((((*(_self_))._field_dynamic != nullptr) && ((*((*(_4228_other))))._field_dynamic != nullptr))) {
		_1bea44666__removeDeads(&((*(_self_))._field_dynamic), &((*((*(_4228_other))))._field_dynamic), 0LLU);
	};
}



inline _1ac68ea76_dataCheckpoint _1ac690add_getCheckpoint(_1ac690071_data* _self_) {
	_1ac68ea76_dataCheckpoint _577_c = _1ac68ea76_dataCheckpoint{._field_boundary=jule::Ptr<_1ac69232b_boundary>(nullptr), ._field_nils=jule::Ptr<_1ac3d97d2_nils>(nullptr), ._field_dynamic=jule::Ptr<_1ac68c447_dynamic>(nullptr)};;
	if (((*(_self_))._field_boundary != nullptr)) {
		_577_c._field_boundary=jule::new_ptr<_1ac69232b_boundary>(_1ac69232b_boundary{._field_vars=jule::Slice<_1ac691eda_boundaryVar>(nullptr)});
		(*_577_c._field_boundary.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1ac691eda_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ac691eda_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*(*(_self_))._field_boundary.alloc)._field_vars);
		{
			auto expr = &((*_577_c._field_boundary.alloc)._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bea4a5d4:;
			if (it != expr_end) {
				jule::I32 _618_i = it - expr->begin();
				{
					(*(_577_c._field_boundary))._field_vars[_618_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),(*(_577_c._field_boundary))._field_vars[_618_i]._field_maxSize);
				}
				_iter_next_1bea4a5d4:;
				++it;
				_618_i++;
				goto _iter_begin_1bea4a5d4;
			}
			_iter_end_1bea4a5d4:;
		};
	};
	if (((*(_self_))._field_nils != nullptr)) {
		_577_c._field_nils=jule::new_ptr<_1ac3d97d2_nils>(_1ac3d97d2_nils{._field_vars=jule::Slice<_1ac3d9491_nilVar>(nullptr)});
		(*_577_c._field_nils.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1ac3d9491_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ac3d9491_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*(*(_self_))._field_nils.alloc)._field_vars);
	};
	if (((*(_self_))._field_dynamic != nullptr)) {
		_577_c._field_dynamic=jule::new_ptr<_1ac68c447_dynamic>(_1ac68c447_dynamic{._field_vars=jule::Slice<_1ac68c106_dynamicVar>(nullptr)});
		(*_577_c._field_dynamic.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1ac68c106_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1ac68c106_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1aabecdb6_Type>(nullptr)}; __jule_collection; }),(*(*(_self_))._field_dynamic.alloc)._field_vars);
	};
	return _577_c;;
}



inline _1ac68ea76_dataCheckpoint _1ac690d74_getMutCheckpoint(_1ac690071_data* _self_) {
	return _1ac68ea76_dataCheckpoint{._field_boundary=(*(_self_))._field_boundary, ._field_nils=(*(_self_))._field_nils, ._field_dynamic=(*(_self_))._field_dynamic};;
}



inline void _1ac69112c_loadCheckpoint(_1ac690071_data* _self_, _1ac68ea76_dataCheckpoint _8534_c) {
	(*(_self_))._field_boundary=_8534_c._field_boundary;
	(*(_self_))._field_nils=_8534_c._field_nils;
	(*(_self_))._field_dynamic=_8534_c._field_dynamic;
}











inline void _1ac6927c1_pushVar(_1ac69232b_boundary* _self_, jule::Uintptr _2523_var, jule::Any _2541_maxSize) {
	if (((!(_1ac695c25_Access)) || (_2523_var == 0LLU))) {
		return;;
	};
	if ((!(_1ac693393_isValidBoundaryInfo(_2541_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea6097e:;
		if (it != expr_end) {
			_1ac691eda_boundaryVar _3315_v = *it;
			{
				if ((_3315_v._field_var == _2523_var)) {
					{
						auto expr = &(_3315_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1bea617c6:;
						if (it != expr_end) {
							jule::I32 _359_i = it - expr->begin();
							jule::Any _3512_max = *it;
							{
								if (_1ac693ad0_fitsSize(_2541_maxSize, _3512_max)) {
									_3315_v._field_maxSize[_359_i]=_2541_maxSize;
									return;;
								};
							}
							_iter_next_1bea617c6:;
							++it;
							_359_i++;
							goto _iter_begin_1bea617c6;
						}
						_iter_end_1bea617c6:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3315_v._field_maxSize; __jule_push_dest.push(_2541_maxSize); };
					return;;
				};
			}
			_iter_next_1bea6097e:;
			++it;
			goto _iter_begin_1bea6097e;
		}
		_iter_end_1bea6097e:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea62068:;
		if (it != expr_end) {
			_1ac691eda_boundaryVar _4715_v = *it;
			{
				if ((_4715_v._field_var == 0LLU)) {
					_4715_v._field_var=_2523_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4715_v._field_maxSize; __jule_push_dest.push(_2541_maxSize); };
					return;;
				};
			}
			_iter_next_1bea62068:;
			++it;
			goto _iter_begin_1bea62068;
		}
		_iter_end_1bea62068:;
	};
	{ jule::Slice<_1ac691eda_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1ac691eda_boundaryVar{._field_var=_2523_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2541_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1ac692b12_removeVar(_1ac69232b_boundary* _self_, jule::Uintptr _5825_var) {
	if ((_5825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bea64554:;
			if (it != expr_end) {
				_1ac691eda_boundaryVar _6016_v = *it;
				{
					if ((_6016_v._field_var == _5825_var)) {
						_6016_v._field_var=0LLU;
						(_6016_v._field_maxSize).mut_slice(0LL, 0LL);;
						return true;;
					};
				}
				_iter_next_1bea64554:;
				++it;
				goto _iter_begin_1bea64554;
			}
			_iter_end_1bea64554:;
		};
	};
	return false;;
}



inline jule::Bool _1ac69300d_fitsMaxSize(_1ac69232b_boundary* _self_, jule::Uintptr _7227_var, jule::Any _7241_expr) {
	if ((_7227_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bea660e4:;
			if (it != expr_end) {
				_1ac691eda_boundaryVar _7411_v = *it;
				{
					if ((_7411_v._field_var == _7227_var)) {
						return (_1ac69375b_fitsMaxSize(_7411_v._field_maxSize, _7241_expr) != -1LL);;
					};
				}
				_iter_next_1bea660e4:;
				++it;
				goto _iter_begin_1bea660e4;
			}
			_iter_end_1bea660e4:;
		};
	};
	return false;;
}








inline jule::Bool _1ac7b7a6c_Optimizer_eq(_1ac7b7a6c_Optimizer *_self_, _1ac7b7a6c_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1ac7b7a6c_Optimizer> static__1ac7b8034_New(jule::Ptr<_1ab61326a_IR>* _2121_ir) {
	return jule::new_ptr<_1ac7b7a6c_Optimizer>(_1ac7b7a6c_Optimizer{._field_ir=(*(_2121_ir))});;
}



inline void _1ac7b82dc_optimizeExpr(_1ac7b7a6c_Optimizer* _self_, jule::Any* _2733_model) {
	static__1ac684cad_optimize(_2733_model);
}



inline void _1ac7b8595_optimizeGlobal(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aab70795_Var>* _3135_v) {
	if ((!((*((*(_3135_v))))._field_Binded))) {
		_1ac7b82dc_optimizeExpr(_self_, &((*((*((*((*(_3135_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1ac7b884d_optimizeFunction(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aaa3b221_Fn>* _3737_func) {
	if ((*((*(_3737_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3737_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea70e45:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3e2ce_FnIns> _4115_ins = *it;
			{
				jule::Ptr<_1ac67bd4e_scopeOptimizer> _428_so = static__1ac67c448_new((*(_4115_ins))._field_Scope);;
				_1ac68243c_optimize(_428_so);
			}
			_iter_next_1bea70e45:;
			++it;
			goto _iter_begin_1bea70e45;
		}
		_iter_end_1bea70e45:;
	};
}



inline void _1ac7b8b06_optimizeStruct(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aa966767_Struct> _4734_s) {
	if ((*(_4734_s))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_4734_s))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea7261c:;
		if (it != expr_end) {
			jule::Ptr<_1aa969605_StructIns> _5115_ins = *it;
			{
				{
					auto expr = &((*(_5115_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bea730ac:;
					if (it != expr_end) {
						jule::Ptr<_1aa9689cd_FieldIns> _5216_f = *it;
						{
							if (((*(_5216_f))._field_Default != nullptr)) {
								_1ac7b82dc_optimizeExpr(_self_, &((*(*(_5216_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1bea730ac:;
						++it;
						goto _iter_begin_1bea730ac;
					}
					_iter_end_1bea730ac:;
				};
				{
					auto expr = &((*_5115_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bea73530:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3b221_Fn> _5716_m = *it;
						{
							_1ac7b884d_optimizeFunction(_self_, &(_5716_m));
						}
						_iter_next_1bea73530:;
						++it;
						goto _iter_begin_1bea73530;
					}
					_iter_end_1bea73530:;
				};
			}
			_iter_next_1bea7261c:;
			++it;
			goto _iter_begin_1bea7261c;
		}
		_iter_end_1bea7261c:;
	};
}



inline void _1ac7b8dae_optimizeGlobals(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aab3267a_Package>* _6336_p) {
	{
		auto expr = &((*((*(_6336_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea72a90:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _6415_f = *it;
			{
				{
					auto expr = &((*(_6415_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bea756b9:;
					if (it != expr_end) {
						jule::Ptr<_1aab70795_Var> _6516_v = *it;
						{
							_1ac7b8595_optimizeGlobal(_self_, &(_6516_v));
						}
						_iter_next_1bea756b9:;
						++it;
						goto _iter_begin_1bea756b9;
					}
					_iter_end_1bea756b9:;
				};
			}
			_iter_next_1bea72a90:;
			++it;
			goto _iter_begin_1bea72a90;
		}
		_iter_end_1bea72a90:;
	};
}



inline void _1ac7b9167_optimizeFunctions(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aab3267a_Package>* _7138_p) {
	{
		auto expr = &((*((*(_7138_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea75b92:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _7215_f = *it;
			{
				{
					auto expr = &((*(_7215_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bea76ab6:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3b221_Fn> _7316_func = *it;
						{
							_1ac7b884d_optimizeFunction(_self_, &(_7316_func));
						}
						_iter_next_1bea76ab6:;
						++it;
						goto _iter_begin_1bea76ab6;
					}
					_iter_end_1bea76ab6:;
				};
			}
			_iter_next_1bea75b92:;
			++it;
			goto _iter_begin_1bea75b92;
		}
		_iter_end_1bea75b92:;
	};
}



inline void _1ac7b9420_optimizeStructs(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aab3267a_Package>* _7936_p) {
	{
		auto expr = &((*((*(_7936_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea7708e:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _8015_f = *it;
			{
				{
					auto expr = &((*(_8015_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bea77eb3:;
					if (it != expr_end) {
						jule::Ptr<_1aa966767_Struct> _8116_s = *it;
						{
							_1ac7b8b06_optimizeStruct(_self_, _8116_s);
						}
						_iter_next_1bea77eb3:;
						++it;
						goto _iter_begin_1bea77eb3;
					}
					_iter_end_1bea77eb3:;
				};
				{
					auto expr = &((*_8015_f.alloc)._field_TypeAliases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bea78458:;
					if (it != expr_end) {
						jule::Ptr<_1aabec1a1_TypeAlias> _8416_ta = *it;
						{
							if (((*(_8416_ta))._field_Strict && (!((*_8416_ta.alloc)._field_Binded)))) {
								_1ac7b8b06_optimizeStruct(_self_, (*((*((*((*_8416_ta.alloc)._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)))._field_Decl);
							};
						}
						_iter_next_1bea78458:;
						++it;
						goto _iter_begin_1bea78458;
					}
					_iter_end_1bea78458:;
				};
			}
			_iter_next_1bea7708e:;
			++it;
			goto _iter_begin_1bea7708e;
		}
		_iter_end_1bea7708e:;
	};
}



inline void _1ac7b96c8_optimizePackage(_1ac7b7a6c_Optimizer* _self_, jule::Ptr<_1aab3267a_Package>* _9236_p) {
	_1ac7b8dae_optimizeGlobals(_self_, _9236_p);
	_1ac7b9167_optimizeFunctions(_self_, _9236_p);
	_1ac7b9420_optimizeStructs(_self_, _9236_p);
}



inline void _1ac7b98c6_Optimize(_1ac7b7a6c_Optimizer* _self_) {
	_1ac7b9b3a_detectEnabled();
	if (_1ac6953b7_Deadcode) {
		_1ac7b146c_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1ac7b78d5_scopeEnabled || _1ac7b76c6_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bea7b8ce:;
			if (it != expr_end) {
				jule::Ptr<_1aab2ee08_ImportInfo> _10816_u = *it;
				{
					if ((!((*(_10816_u))._field_Binded))) {
						_1ac7b96c8_optimizePackage(_self_, &((*_10816_u.alloc)._field_Package));
					};
				}
				_iter_next_1bea7b8ce:;
				++it;
				goto _iter_begin_1bea7b8ce;
			}
			_iter_end_1bea7b8ce:;
		};
		_1ac7b96c8_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1ac6953b7_Deadcode) {
		_1ac7b6285_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1ac887510_AbsTime_eq(_1ac887510_AbsTime *_self_, _1ac887510_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1ac887bd6_Time_eq(_1ac887bd6_Time *_self_, _1ac887bd6_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1ac887bd6_Time static__1ac8880c1_Unix(jule::U64 _9117_sec) {
	return _1ac887bd6_Time{._field_sec=_9117_sec};;
}



inline _1ac887bd6_Time static__1ac8882d0_Now(void) {
	return static__1ac8880c1_Unix(_1ac889cc6_unix());;
}



inline _1ac887510_AbsTime _1ac8899b8_Abs(_1ac887bd6_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (static_cast<jule::U64>(_1ac886971_mdays[static_cast<jule::I32>(_1697_months)]) <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=static_cast<jule::U64>(_1ac886971_mdays[static_cast<jule::I32>(_1697_months)]);
		}
	_iter_next_1beaacee8:;
	}
	_iter_end_1beaacee8:;;
	_1ac887510_AbsTime _1747_t = _1ac887510_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LL + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}
















inline jule::Bool _1ac7bba4e_scopeCoder_eq(_1ac7bba4e_scopeCoder *_self_, _1ac7bba4e_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1ac7bba4e_scopeCoder> static__1ac7bc236_new(jule::Ptr<_1ac894d58_ObjectCoder>* _3721_oc) {
	return jule::new_ptr<_1ac7bba4e_scopeCoder>(_1ac7bba4e_scopeCoder{._field_oc=(*(_3721_oc))});;
}



inline void _1bebd6154_iterHead(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaee6ad_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ac6950ba_Copy && _1ac7c498b_isCopyOptimizable(&((*((*(_4429_it))))._field_Expr)))) {
		(*(_4441_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_4429_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1bebd9366:;
				{
					jule::Ptr<_1aab70795_Var> _535_v = (*((*((*(_4429_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1aab70795_Var>();;
					if ((*(_535_v))._field_Reference) {
						_1ac7d6519_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
						goto _match_end_1bebd99d7;
					};
					goto _case_begin_1bebd9a4d;
				}
			}
			else {
				_case_begin_1bebd9a4d:;
				{
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1ac7d6519_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1bebd99d7:;
		};
	} else {
		_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_4441_ref))) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_4441_ref))) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, _4452_begin);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
}



inline void _1ac7bc90c_rangeIndexIter(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaee6ad_RangeIter>* _9336_it) {
	_1ace17078_Builder _947_sb = static__1ace178c5_New(64LL);;
	static__1ac7e0897_iterBegin(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _963_begin = _1ace188d7_Str(&_947_sb);;
	_1ace18ad5_Clear(&_947_sb);
	static__1ac7e0e6e_iterNext(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _993_next = _1ace188d7_Str(&_947_sb);;
	jule::Bool _1017_ref = false;;
	_1bebd6154_iterHead(_self_, _9336_it, &(_1017_ref), _963_begin);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		_1ac89c4ae_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1bebe69b1, jule::Ptr<__jule_anon_1bebe69b1_ctx>::make(__jule_anon_1bebe69b1_ctx{._self_=_self_,._1017_ref=_1017_ref}).as<jule::Uintptr>(), __jule_anon_1bebe69b1_ctx_handler));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ac895e25_indent((*(_self_))._field_oc);
	};
	if (((*((*(_9336_it))))._field_KeyB != nullptr)) {
		(*(*((*(_9336_it))))._field_KeyB.alloc)._field_Reference=(_1ac6950ba_Copy && _1ac7c4d54_isIterCopyOptimizable(&((*((*(_9336_it))))._field_Expr), &((*((*(_9336_it))))._field_KeyB)));
		_1ac89c4ae_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1bebea4ba, jule::Ptr<__jule_anon_1bebea4ba_ctx>::make(__jule_anon_1bebea4ba_ctx{._self_=_self_,._9336_it=_9336_it}).as<jule::Uintptr>(), __jule_anon_1bebea4ba_ctx_handler));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ac895e25_indent((*(_self_))._field_oc);
	};
	_1ac7c3c32_scope(_self_, (*((*(_9336_it))))._field_Scope);
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, _993_next);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1ac895e25_indent((*(_self_))._field_oc);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		static__1ac7e05ab_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_9336_it))))._field_KeyA);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1ac895e25_indent((*(_self_))._field_oc);
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ac895573_write((*(_self_))._field_oc, _963_begin);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ac895e25_indent((*(_self_))._field_oc);
	static__1ac7e0b83_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_9336_it))));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac7bcbb5_rangeHashmapIter(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaee6ad_RangeIter>* _16038_it) {
	_1ace17078_Builder _1617_sb = static__1ace178c5_New(64LL);;
	static__1ac7e0897_iterBegin(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1633_begin = _1ace188d7_Str(&_1617_sb);;
	_1ace18ad5_Clear(&_1617_sb);
	static__1ac7e0e6e_iterNext(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1663_next = _1ace188d7_Str(&_1617_sb);;
	jule::Ptr<_1aac0c865_Map> _1687__map = _1aac02d00_Map((*((*((*(_16038_it))))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1aa969605_StructIns> _1697_ins = _1ab61be66_FindStructGenericInstance(&((*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_1687__map))._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1aaa3e2ce_FnIns> _1717_f = (*(_1aa96a66c_FindMethod(_1697_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1aa969605_StructIns> _1737_iterator = _1ab61be66_FindStructGenericInstance(&((*(*(_1ab61db5a_ProgramMeta))._field_Runtime.alloc)._field_MapIterator), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_1687__map.alloc)._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1aaa3e2ce_FnIns> _1747_nextCall = (*(_1aa96a66c_FindMethod(_1737_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac8a7e48_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1737_iterator);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1ac7de335_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1717_f));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_16038_it))))._field_Expr.alloc)._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, _1633_begin);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac8a9158_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1ac7de335_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	if (((*((*(_16038_it))))._field_KeyA != nullptr)) {
		_1ac89c4ae_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1bec1994b, jule::Ptr<__jule_anon_1bec1994b_ctx>::make(__jule_anon_1bec1994b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bec1994b_ctx_handler));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ac895e25_indent((*(_self_))._field_oc);
	};
	if (((*((*(_16038_it))))._field_KeyB != nullptr)) {
		_1ac89c4ae_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1bec1be37, jule::Ptr<__jule_anon_1bec1be37_ctx>::make(__jule_anon_1bec1be37_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bec1be37_ctx_handler));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ac895e25_indent((*(_self_))._field_oc);
	};
	_1ac7c3c32_scope(_self_, (*((*(_16038_it))))._field_Scope);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, _1663_next);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ac895573_write((*(_self_))._field_oc, _1633_begin);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ac895e25_indent((*(_self_))._field_oc);
	static__1ac7e0b83_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_16038_it))));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac7bce6d_strRuneIter(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1ac3d810a_StrRuneIter> _24132_it) {
	_1ace17078_Builder _2427_sb = static__1ace178c5_New(64LL);;
	static__1ac7e0897_iterBegin(&(_2427_sb), static_cast<jule::Uintptr>((*(_24132_it))._field_Base));
	jule::Str _2443_begin = _1ace188d7_Str(&_2427_sb);;
	_1ace18ad5_Clear(&_2427_sb);
	static__1ac7e0e6e_iterNext(&(_2427_sb), static_cast<jule::Uintptr>((*_24132_it.alloc)._field_Base));
	jule::Str _2473_next = _1ace188d7_Str(&_2427_sb);;
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	jule::Bool _2537_ref = false;;
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1ac6950ba_Copy && _1ac7c498b_isCopyOptimizable(&((*_24132_it.alloc)._field_Expr)))) {
		_2537_ref=true;
		{
			auto &_match_expr{ (*((*(_24132_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1bec28a59:;
				{
					jule::Ptr<_1aab70795_Var> _2595_v = (*((*(_24132_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1aab70795_Var>();;
					if ((*(_2595_v))._field_Reference) {
						_1ac7d6519_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1bec291ca;
					};
					goto _case_begin_1bec29241;
				}
			}
			else {
				_case_begin_1bec29241:;
				{
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1ac7d6519_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1bec291ca:;
		};
	} else {
		_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2537_ref) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2537_ref) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1ac895e25_indent((*(_self_))._field_oc);
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1ac89c4ae_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1bec35a44, jule::Ptr<__jule_anon_1bec35a44_ctx>::make(__jule_anon_1bec35a44_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bec35a44_ctx_handler));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ac895e25_indent((*(_self_))._field_oc);
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1ac895e25_indent((*(_self_))._field_oc);
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyB != nullptr)) {
		_1ac89c4ae_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ac895e25_indent((*(_self_))._field_oc);
	};
	_1ac895573_write((*(_self_))._field_oc, _2443_begin);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyB != nullptr)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1ac7e05ab_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac7c3c32_scope(_self_, (*((*_24132_it.alloc)._field_Base))._field_Scope);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, _2473_next);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1ac895e25_indent((*(_self_))._field_oc);
	if (((*(*(_24132_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1ac7e05ab_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyA);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1ac895e25_indent((*(_self_))._field_oc);
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1ac895573_write((*(_self_))._field_oc, _2443_begin);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac7bd226_ifCase(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaecc0b_If> _35327_i) {
	if (((*(_35327_i))._field_Expr != nullptr)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35327_i.alloc)._field_Expr);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1ac7c3c32_scope(_self_, (*(_35327_i))._field_Scope);
}



inline void _1ac7bd4ce_conditional(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaed426_Conditional> _36232_c) {
	jule::Bool _3637_writed = false;;
	{
		auto expr = &((*(_36232_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bec4acce:;
		if (it != expr_end) {
			jule::Ptr<_1aaaecc0b_If> _36415_elif = *it;
			{
				if ((_36415_elif == nullptr)) {
					goto _iter_next_1bec4acce;
				};
				if (_3637_writed) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3637_writed=true;
				_1ac7bd226_ifCase(_self_, _36415_elif);
			}
			_iter_next_1bec4acce:;
			++it;
			goto _iter_begin_1bec4acce;
		}
		_iter_end_1bec4acce:;
	};
	if (((*_36232_c.alloc)._field_Default != nullptr)) {
		if (_3637_writed) {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1ac7c3c32_scope(_self_, (*(*(_36232_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1ac7bd787_infIter(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaed723_InfIter> _38228_it) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac7c3c32_scope(_self_, (*(_38228_it))._field_Scope);
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac895e25_indent((*(_self_))._field_oc);
	static__1ac7e0e6e_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ac895e25_indent((*(_self_))._field_oc);
	static__1ac7e0b83_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1ac7bda40_whileIter(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaedbc9_WhileIter> _39930_it) {
	if ((((*(_39930_it))._field_Expr != nullptr) && ((*_39930_it.alloc)._field_Next == nullptr))) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39930_it))._field_Expr != nullptr)) {
			_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		};
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_39930_it))._field_Next != nullptr)) {
			_1ac7c36c1_st(_self_, (*_39930_it.alloc)._field_Next);
		};
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39930_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac7c3c32_scope(_self_, (*(_39930_it))._field_Scope);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	static__1ac7e0e6e_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ac895e25_indent((*(_self_))._field_oc);
	static__1ac7e0b83_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1ac7bdce8_rangeIter(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaee6ad_RangeIter> _43830_it) {
	{
		
		if ((_1aac02030_Slc((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bec61685:;
			{
				_1ac7bc90c_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_1aac01c99_Arr((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bec61333:;
			{
				_1ac7bc90c_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_1aac02d00_Map((*((*(_43830_it))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1bec61399:;
			{
				_1ac7bcbb5_rangeHashmapIter(_self_, &(_43830_it));
			}
		}
		else {
			_case_begin_1bec612bc:;
			{
				_1ac7bc90c_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		_match_end_1bec611ac:;
	};
}



inline void _1ac7be0a1_cont(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaee9aa_ContSt> _45121_c) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1ac7e0e6e_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_45121_c))._field_It);
}



inline void _1ac7be359_label(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0033a_Label> _45622_l) {
	static__1ac7e125a_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45622_l));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1ac7be612_gotoSt(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0099a_GotoSt> _46123_gt) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1ac7e125a_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_46123_gt))._field_Label));
}



inline void _1ac7be8ba_postfix(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab00d74_Postfix> _46628_p) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46628_p))._field_Expr);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1ac895573_write((*(_self_))._field_oc, (*_46628_p.alloc)._field_Op);
}



inline void _1ac7beb73_assignLeft(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Any* _47332_model) {
	{
		auto &_match_expr{ (*(_47332_model)) };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bec6a4e6:;
			{
				jule::Ptr<_1aaa31865_IndexingExpr> _4768_iem = (*(_47332_model)).cast_ptr<_1aaa31865_IndexingExpr>(&__jule_any_type43);;
				jule::Ptr<_1aac0c865_Map> _4774__map = _1aac02d00_Map((*((*(_4768_iem))._field_Expr))._field_Type.ptr());;
				if ((_4774__map == nullptr)) {
					goto _match_end_1bec6a480;
				};
				jule::Ptr<_1aa969605_StructIns> _4838_ins = _1ab61be66_FindStructGenericInstance(&((*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4774__map))._field_Key; (*it++) = (*_4774__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1aaa3e2ce_FnIns> _4858_f = (*(_1aa96a66c_FindMethod(_4838_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1ac7de335_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4858_f));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_4768_iem))._field_Expr.alloc)._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_1bb09c40e_Production))) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ac897c07_locInfo((*(_self_))._field_oc, &((*_4768_iem.alloc)._field_Token));
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1ac7cbd4a_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4768_iem.alloc)._field_Index))._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1bec6a480:;
	};
	_1ac7cbd4a_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47332_model)));
}



inline void _1ac7bee2b_shl(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0132a_Assign> _50424_a) {
	_1ac7beb73_assignLeft(_self_, &((*((*(_50424_a))._field_Left))._field_Model));
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1ac7ca5eb_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_50424_a.alloc)._field_Left), &((*_50424_a.alloc)._field_Right));
}



inline void _1ac7c01d4_shr(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0132a_Assign> _51024_a) {
	_1ac7beb73_assignLeft(_self_, &((*((*(_51024_a))._field_Left))._field_Model));
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1ac7ca95e_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51024_a.alloc)._field_Left), &((*_51024_a.alloc)._field_Right));
}



inline void _1ac7c048c_divByZeroAssign(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0132a_Assign> _51636_a) {
	_1ac7beb73_assignLeft(_self_, &((*((*(_51636_a))._field_Left))._field_Model));
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1ac7c97d7_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51636_a.alloc)._field_Op), &((*_51636_a.alloc)._field_Left), &((*_51636_a.alloc)._field_Right));
}



inline void _1ac7c0745_assign(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0132a_Assign> _52227_a) {
	{
		auto &_match_expr{ (*((*(_52227_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1bec7b2c6:;
			{
				if (_1bb09c1bc_Safety) {
					_1ac7c048c_divByZeroAssign(_self_, _52227_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1bec7b34d:;
			{
				_1ac7bee2b_shl(_self_, _52227_a);
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1bec7b3b4:;
			{
				_1ac7c01d4_shr(_self_, _52227_a);
				return;;
			}
		}
		_match_end_1bec7b20a:;
	};
	jule::U32 _5417_op = (*((*(_52227_a))._field_Op))._field_Id;;
	jule::Str _5427_kind = (*(*(_52227_a))._field_Op.alloc)._field_Kind;;
	if (((*(*(_52227_a))._field_Op.alloc)._field_Id == static_cast<jule::U32>(38LLU))) {
		_5417_op=static_cast<jule::U32>(71LLU);
		_5427_kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
	};
	_1ac7beb73_assignLeft(_self_, &((*((*_52227_a.alloc)._field_Left))._field_Model));
	_1ac895573_write((*_self_.alloc)._field_oc, _5427_kind);
	_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_52227_a.alloc)._field_Right))._field_Model);
}



inline void _1ac7c09ed_mapLookupAssign(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _55337_a) {
	jule::Ptr<_1aaa31865_IndexingExpr> _5557_iem = (*((*(_55337_a))))._field_Right.cast_ptr<_1aaa31865_IndexingExpr>(&__jule_any_type43);;
	jule::Ptr<_1aac0c865_Map> _5567__map = _1aac02d00_Map((*((*(_5557_iem))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1aa969605_StructIns> _5587_ins = _1ab61be66_FindStructGenericInstance(&((*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5567__map))._field_Key; (*it++) = (*_5567__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1aaa3e2ce_FnIns> _5607_f = (*(_1aa96a66c_FindMethod(_5587_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1ac7de335_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5607_f));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac7beb73_assignLeft(_self_, &((*(*(_5557_iem))._field_Expr.alloc)._field_Model));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5557_iem.alloc)._field_Index))._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_55337_a))))._field_Left[0LL] != nullptr)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1ac7cbd4a_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_55337_a))))._field_Left[0LL]))._field_Model);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_55337_a))))._field_Left[1LL] != nullptr)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1ac7cbd4a_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_55337_a))))._field_Left[1LL]))._field_Model);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7c0ca6_multiAssignTup(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _58536_a) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1aaa345e3_TupleExpr> _5957_tup = (*((*(_58536_a))))._field_Right.cast_ptr<_1aaa345e3_TupleExpr>(&__jule_any_type83);;
	{
		auto expr = &((*(_5957_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bec8d7e4:;
		if (it != expr_end) {
			jule::I32 _5978_i = it - expr->begin();
			jule::Ptr<_1aabb8db5_Data> _59715_r = *it;
			{
				_1ac895e25_indent((*(_self_))._field_oc);
				jule::Ptr<_1aabb8db5_Data> _5998_l = (*((*(_58536_a))))._field_Left[_5978_i];;
				if ((_5998_l != nullptr)) {
					{
						auto &_match_expr{ (*(_5998_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1bec91781:;
							{
								jule::Ptr<_1aab70795_Var> _60310_v = (*(_5998_l))._field_Model.unsafe_cast_ptr<_1aab70795_Var>();;
								if ((!((*(_60310_v))._field_Reference))) {
									goto _match_end_1bec9171a;
								};
								{
									auto expr = &((*((*(_58536_a))))._field_Decls);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1bec926c7:;
									if (it != expr_end) {
										jule::Ptr<_1aab70795_Var> _61013_dv = *it;
										{
											if ((_60310_v == _61013_dv)) {
												goto _julec_label_1bec9261c;
											};
										}
										_iter_next_1bec926c7:;
										++it;
										goto _iter_begin_1bec926c7;
									}
									_iter_end_1bec926c7:;
								};
								goto _match_end_1bec9171a;
								_julec_label_1bec9261c:;
								static__1ac7e05ab_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _60310_v);
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
								_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_59715_r))._field_Model);
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
								(*((*(_58536_a))))._field_Left[_5978_i]=nullptr;
								goto _iter_next_1bec8d7e4;
							}
						}
						_match_end_1bec9171a:;
					};
					_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_5998_l.alloc)._field_Type);
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1ac7dd80c_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ac7bb2e0_assignArgName, static_cast<jule::Uintptr>(_5978_i));
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_59715_r))._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bec8d7e4:;
			++it;
			_5978_i++;
			goto _iter_begin_1bec8d7e4;
		}
		_iter_end_1bec8d7e4:;
	};
	{
		auto expr = &((*((*(_58536_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bec984be:;
		if (it != expr_end) {
			jule::I32 _6398_i = it - expr->begin();
			jule::Ptr<_1aabb8db5_Data> _63915_l = *it;
			{
				if ((_63915_l == nullptr)) {
					goto _iter_next_1bec984be;
				};
				_1ac895e25_indent((*(_self_))._field_oc);
				_1ac7beb73_assignLeft(_self_, &((*(_63915_l))._field_Model));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1ac7dd80c_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1ac7bb2e0_assignArgName, static_cast<jule::Uintptr>(_6398_i));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bec984be:;
			++it;
			_6398_i++;
			goto _iter_begin_1bec984be;
		}
		_iter_end_1bec984be:;
	};
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ac7c105e_multiAssignFn(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab018ad_MultiAssign>* _65535_a) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	jule::Ptr<_1aaa30ed5_FnCallExpr> _6607_f = (*((*(_65535_a))))._field_Right.cast_ptr<_1aaa30ed5_FnCallExpr>(&__jule_any_type30);;
	_1ac8aeb42_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6607_f))._field_Func))._field_Result));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_65535_a))))._field_Right);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1aac0bcb5_Tuple> _6667_tup = _1aac03086_Tup((*(*(_6607_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_65535_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beca153d:;
		if (it != expr_end) {
			jule::I32 _6678_i = it - expr->begin();
			jule::Ptr<_1aabb8db5_Data> _66715_l = *it;
			{
				if ((_66715_l == nullptr)) {
					goto _iter_next_1beca153d;
				};
				;
				_1ac895e25_indent((*(_self_))._field_oc);
				_1ac7beb73_assignLeft(_self_, &((*(_66715_l))._field_Model));
				{
					
					if (_1aabed603_Equal((*(_6667_tup))._field_Types[_6678_i], (*_66715_l.alloc)._field_Type)) {
						_case_begin_1beca925a:;
						{
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_6678_i));
						}
					}
					else if (_1ab618b00_IsAny(&((*_66715_l.alloc)._field_Type))) {
						_case_begin_1beca4398:;
						{
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_6678_i));
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_1ac89707a_pushAnyType((*(_self_))._field_oc, (*(_6667_tup))._field_Types[_6678_i])));
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1beca34a7:;
						{
							if ((_1aac02a69_Trait((*(_6667_tup))._field_Types[_6678_i].ptr()) != nullptr)) {
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1aaa46935_Trait> _68810_t1 = _1aac02a69_Trait((*_66715_l.alloc)._field_Type.ptr());;
								jule::Ptr<_1aaa46935_Trait> _68910_t2 = _1aac02a69_Trait((*(_6667_tup))._field_Types[_6678_i].ptr());;
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_6678_i));
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1ac89794e_pushAndWriteMaskMapper((*(_self_))._field_oc, _68810_t1, _68910_t2);
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1beca42ee;
							};
							jule::Ptr<_1aaa46935_Trait> _6975_t = _1aac02a69_Trait((*_66715_l.alloc)._field_Type.ptr());;
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_6678_i));
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1ac7de621_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _6975_t);
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_1ab61b76d_FindTraitTypeOffset(_6975_t, (*(_6667_tup))._field_Types[_6678_i])));
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1beca42ee:;
				};
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1beca153d:;
			++it;
			_6678_i++;
			goto _iter_begin_1beca153d;
		}
		_iter_end_1beca153d:;
	};
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ac7c1317_multiAssign(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab018ad_MultiAssign> _71432_a) {
	{
		auto expr = &((*(_71432_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1becb2b9d:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _71715_d = *it;
			{
				_1ac89c4ae_varInitExpr((*(_self_))._field_oc, &(_71715_d), nullptr);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1ac895e25_indent((*(_self_))._field_oc);
			}
			_iter_next_1becb2b9d:;
			++it;
			goto _iter_begin_1becb2b9d;
		}
		_iter_end_1becb2b9d:;
	};
	{
		auto &_match_expr{ (*(_71432_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1becb342e:;
			{
				_1ac7c09ed_mapLookupAssign(_self_, &(_71432_a));
				return;;
			}
		}
		_match_end_1becb33b8:;
	};
	{
		auto &_match_expr{ (*(_71432_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1becb5453:;
			{
				_1ac7c0ca6_multiAssignTup(_self_, &(_71432_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1becb4d9d:;
			{
				_1ac7c105e_multiAssignFn(_self_, &(_71432_a));
			}
		}
		else {
			_case_begin_1becb4d26:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:736:4"));;
			}
		}
		_match_end_1becb4a6d:;
	};
}



inline jule::Fn<void> _1ac7c1658_matchExpr(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0232b_Match> _74030_m) {
	if ((!(_1aabb9800_IsConst((*(_74030_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1becb7334, jule::Ptr<__jule_anon_1becb7334_ctx>::make(__jule_anon_1becb7334_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1becb7334_ctx_handler);;
	};
	if (((!(_1aaa26c67_IsBool((*((*(_74030_m))._field_Expr))._field_Constant.ptr()))) || (!(_1aaa2466b_ReadBool((*((*(_74030_m))._field_Expr))._field_Constant.ptr()))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1becb8665, jule::Ptr<__jule_anon_1becb8665_ctx>::make(__jule_anon_1becb8665_ctx{._self_=_self_,._74030_m=_74030_m}).as<jule::Uintptr>(), __jule_anon_1becb8665_ctx_handler);;
	};
	return nullptr;;
}



inline void _1ac7c19bb_case(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0232b_Match> _75025_m, jule::Ptr<_1aab02b23_Case> _75046_c) {
	if ((((*(_75046_c))._field_Exprs.len() != 0LL) && (!((*(_75025_m))._field_Comptime)))) {
		if ((((*_75025_m.alloc)._field_Cases.len() > 0LL) && ((*(_75025_m))._field_Cases[0LL] == _75046_c))) {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_75046_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1becbc768:;
			if (it != expr_end) {
				jule::I32 _7579_i = it - expr->begin();
				jule::Ptr<_1aabb8db5_Data> _75716_expr = *it;
				{
					{
						
						if ((!((*_75025_m.alloc)._field_TypeMatch))) {
							_case_begin_1becc541e:;
							{
								jule::Fn<void> _7606_caseExpr = _1ac7c1658_matchExpr(_self_, _75025_m);;
								if (_1aabb9b41_GoodOperand((*_75025_m.alloc)._field_Expr.ptr(), &(_75716_expr))) {
									if ((_7606_caseExpr != nullptr)) {
										_7606_caseExpr();
										_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1ac7cbd4a_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_75716_expr))._field_Model);
								} else {
									_1ac7cbd4a_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_75716_expr))._field_Model);
									if ((_7606_caseExpr != nullptr)) {
										_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7606_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1becbd505:;
							{
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1aabecdb6_Type> _77610_tk = (*(_75716_expr))._field_Model.cast_ptr<_1aabecdb6_Type>(&__jule_any_type85);;
								if ((_1aac02a69_Trait((*((*_75025_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
									_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1ac7c8561_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1aac01260_Sptr((*(_75716_expr))._field_Type) != nullptr));
									_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1ac7de621_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1aac02a69_Trait((*((*(_75025_m))._field_Expr))._field_Type));
									_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_1ab61b76d_FindTraitTypeOffset(_1aac02a69_Trait((*((*(_75025_m))._field_Expr))._field_Type), (*_75716_expr.alloc)._field_Type)));
									_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I32 _7867_j = _1ac89707a_pushAnyType((*(_self_))._field_oc, _77610_tk);;
									_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_7867_j));
								};
							}
						}
						_match_end_1becbd3e5:;
					};
					if ((((*_75046_c.alloc)._field_Exprs.len() - _7579_i) > 1LL)) {
						_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1becbc768:;
				++it;
				_7579_i++;
				goto _iter_begin_1becbc768;
			}
			_iter_end_1becbc768:;
		};
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_75025_m))._field_Default == _75046_c) && ((*_75025_m.alloc)._field_Cases.len() != 0LL))) {
		_1ac895e25_indent((*(_self_))._field_oc);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac895e25_indent((*(_self_))._field_oc);
	static__1ac7e1832_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_75046_c));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_75046_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1ac895e25_indent((*(_self_))._field_oc);
		_1ac7c3c32_scope(_self_, (*_75046_c.alloc)._field_Scope);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac7c1c74_matchSt(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0232b_Match> _82028_m) {
	if ((((*(_82028_m))._field_Cases.len() == 0LL) && ((*_82028_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*(_82028_m))._field_Comptime && (((*_82028_m.alloc)._field_Default == nullptr) || ((*((*((*_82028_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	if (((!((*(_82028_m))._field_Comptime)) && (!(_1aabb9800_IsConst((*_82028_m.alloc)._field_Expr.ptr()))))) {
		if ((_1ac6950ba_Copy && _1ac7c498b_isCopyOptimizable(&((*_82028_m.alloc)._field_Expr)))) {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_82028_m))._field_Expr.alloc)._field_Model);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1ac895e25_indent((*(_self_))._field_oc);
	};
	if (((*(_82028_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_82028_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1becd8861:;
			if (it != expr_end) {
				jule::Ptr<_1aab02b23_Case> _84816_c = *it;
				{
					if ((_84816_c == nullptr)) {
						goto _iter_next_1becd8861;
					};
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1ac895e25_indent((*(_self_))._field_oc);
					_1ac7c19bb_case(_self_, _82028_m, _84816_c);
				}
				_iter_next_1becd8861:;
				++it;
				goto _iter_begin_1becd8861;
			}
			_iter_end_1becd8861:;
		};
	};
	if (((*(_82028_m))._field_Default != nullptr)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1ac7c19bb_case(_self_, _82028_m, (*_82028_m.alloc)._field_Default);
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac895e25_indent((*(_self_))._field_oc);
	static__1ac7e1546_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_82028_m));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac7c202c_fallSt(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab0331b_FallSt> _87523_f) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1ac7e1832_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_87523_f))._field_DestCase);
}



inline void _1ac7c22d5_breakSt(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaeed84_BreakSt> _88024_b) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_88024_b))._field_It != 0LLU)) {
		static__1ac7e0b83_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_88024_b.alloc)._field_It);
	} else {
		static__1ac7e1546_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_88024_b))._field_Mtch);
	};
}



inline void _1ac7c258d_setResult(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab036b2_RetSt> _88930_r) {
	if (((*((*((*((*(_88930_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_88930_r.alloc)._field_Expr);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1ac895e25_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_88930_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1bece83ba:;
			{
				jule::Slice<jule::Ptr<_1aabb8db5_Data>> _8998_datas = (*((*(_88930_r))._field_Expr.unsafe_cast_ptr<_1aaa345e3_TupleExpr>()))._field_Datas;;
				{
					auto expr = &(_8998_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1becebee5:;
					if (it != expr_end) {
						jule::I32 _9008_i = it - expr->begin();
						jule::Ptr<_1aabb8db5_Data> _90011_data = *it;
						{
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_9008_i));
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_90011_data))._field_Model);
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1ac895e25_indent((*(_self_))._field_oc);
						}
						_iter_next_1becebee5:;
						++it;
						_9008_i++;
						goto _iter_begin_1becebee5;
					}
					_iter_end_1becebee5:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1beceaba3:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1ac7d6519_model((*(*(_self_))._field_oc.alloc)._field_ec, (*(_88930_r))._field_Expr);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1beceab3c:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:913:4"));;
			}
		}
		_match_end_1beceaac6:;
	};
}



inline void _1ac7c2846_retSt(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab036b2_RetSt> _91726_r) {
	if (_1aaa3b6c7_IsVoid((*((*(_91726_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_91726_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_91726_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_91726_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_91726_r))._field_Func.alloc)._field_Result);
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91726_r.alloc)._field_Expr);
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_91726_r.alloc)._field_Expr);
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_91726_r))._field_Expr != nullptr)) {
		_1ac7c258d_setResult(_self_, _91726_r);
	};
	if ((*((*((*(_91726_r))._field_Func))._field_Decl))._field_Exceptional) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1ac8aeb42_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_91726_r))._field_Func.alloc)._field_Result));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1ac7c2aee_var(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aab70795_Var> _95324_v) {
	if ((!((*(_95324_v))._field_Constant))) {
		_1ac89c767_var((*(_self_))._field_oc, _95324_v);
	};
}



inline void _1ac7c2da7_mutSlicing(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1ac3d6d84_MutSlicingExpr> _95931_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_95931_m))._field_Expr);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1bb09c40e_Production))) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ac897c07_locInfo((*(_self_))._field_oc, &((*_95931_m.alloc)._field_Token));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1ac7cbd4a_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_95931_m.alloc)._field_Left);
	if (((*_95931_m.alloc)._field_Right != nullptr)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ac7cbd4a_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_95931_m.alloc)._field_Right);
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1ac7c3160_swap(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1ac3d5adb_SwapExpr> _97625_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1ac7cbd4a_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_97625_m))._field_Left))._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ac7cbd4a_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_97625_m.alloc)._field_Right))._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7c3418_exceptionalForwarding(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1ac3d513a_ExceptionalForwardingExpr> _98442_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1ac7cd775_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_98442_m))._field_Expr));
}



inline void _1ac7c36c1_st(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Any _99023_st) {
	if ((_99023_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _99023_st };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1bed18eac:;
			{
				_1ac7c3c32_scope(_self_, _99023_st.unsafe_cast_ptr<_1aaaec832_Scope>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bed19265:;
			{
				_1ac7c2aee_var(_self_, _99023_st.unsafe_cast_ptr<_1aab70795_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bed192cb:;
			{
				_1ac7d6519_model((*((*_self_.alloc)._field_oc))._field_ec, (*(_99023_st.unsafe_cast_ptr<_1aabb8db5_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1bed199e6:;
			{
				_1ac7bd4ce_conditional(_self_, _99023_st.unsafe_cast_ptr<_1aaaed426_Conditional>());
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1bed19a5c:;
			{
				_1ac7bd787_infIter(_self_, _99023_st.unsafe_cast_ptr<_1aaaed723_InfIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bed19ac3:;
			{
				_1ac7bda40_whileIter(_self_, _99023_st.unsafe_cast_ptr<_1aaaedbc9_WhileIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bed19b39:;
			{
				_1ac7bdce8_rangeIter(_self_, _99023_st.unsafe_cast_ptr<_1aaaee6ad_RangeIter>());
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1bed19ba0:;
			{
				_1ac7be0a1_cont(_self_, _99023_st.unsafe_cast_ptr<_1aaaee9aa_ContSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1bed19c16:;
			{
				_1ac7be359_label(_self_, _99023_st.unsafe_cast_ptr<_1aab0033a_Label>());
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1bed19c7c:;
			{
				_1ac7be612_gotoSt(_self_, _99023_st.unsafe_cast_ptr<_1aab0099a_GotoSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1bed19ce3:;
			{
				_1ac7be8ba_postfix(_self_, _99023_st.unsafe_cast_ptr<_1aab00d74_Postfix>());
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1bed19d59:;
			{
				_1ac7c0745_assign(_self_, _99023_st.unsafe_cast_ptr<_1aab0132a_Assign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bed19dc0:;
			{
				_1ac7c1317_multiAssign(_self_, _99023_st.unsafe_cast_ptr<_1aab018ad_MultiAssign>());
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1bed19e47:;
			{
				_1ac7c1c74_matchSt(_self_, _99023_st.unsafe_cast_ptr<_1aab0232b_Match>());
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1bed19ebe:;
			{
				_1ac7c202c_fallSt(_self_, _99023_st.unsafe_cast_ptr<_1aab0331b_FallSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1bed1a046:;
			{
				_1ac7c22d5_breakSt(_self_, _99023_st.unsafe_cast_ptr<_1aaaeed84_BreakSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1bed1a0bd:;
			{
				_1ac7c2846_retSt(_self_, _99023_st.unsafe_cast_ptr<_1aab036b2_RetSt>());
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1bed1a145:;
			{
				_1ac7d3989_pushToSlice((*((*(_self_))._field_oc))._field_ec, _99023_st.unsafe_cast_ptr<_1ac3d7857_PushToSliceExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1bed1a1bc:;
			{
				_1ac7d3c42_appendToSlice((*((*(_self_))._field_oc))._field_ec, _99023_st.unsafe_cast_ptr<_1ac3d7c31_AppendToSliceExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1bed1a244:;
			{
				_1ac7c2da7_mutSlicing(_self_, _99023_st.unsafe_cast_ptr<_1ac3d6d84_MutSlicingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1bed1a2bb:;
			{
				_1ac7c3160_swap(_self_, _99023_st.unsafe_cast_ptr<_1ac3d5adb_SwapExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1bed1a343:;
			{
				_1ac7c3418_exceptionalForwarding(_self_, _99023_st.unsafe_cast_ptr<_1ac3d513a_ExceptionalForwardingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1bed1a3ba:;
			{
				_1ac7bce6d_strRuneIter(_self_, _99023_st.unsafe_cast_ptr<_1ac3d810a_StrRuneIter>());
			}
		}
		else {
			_case_begin_1bed18ce2:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1bed18c7b:;
	};
}



inline void _1ac7c3979_scopeStmts(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaec832_Scope>* _104632_s) {
	{
		auto expr = &((*((*(_104632_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bed227e0:;
		if (it != expr_end) {
			jule::Any _104715_st = *it;
			{
				_1ac895e25_indent((*(_self_))._field_oc);
				_1ac7c36c1_st(_self_, _104715_st);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1bed227e0:;
			++it;
			goto _iter_begin_1bed227e0;
		}
		_iter_end_1bed227e0:;
	};
}



inline void _1ac7c3c32_scope(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaaec832_Scope> _105526_s) {
	_1ac895a29_addIndent((*(_self_))._field_oc);
	if ((*(_105526_s))._field_Deferred) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac7c3979_scopeStmts(_self_, &(_105526_s));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_105526_s))._field_Deferred) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1ac7c3eda_commonFuncScope(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _107037_f) {
	if ((!(_1aaa3b6c7_IsVoid((*((*(_107037_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1aac0bcb5_Tuple> _10728_tup = _1aac03086_Tup((*((*(_107037_f))))._field_Result.ptr());;
		if ((_10728_tup != nullptr)) {
			_1ac895e25_indent((*(_self_))._field_oc);
			_1ac8ae46b_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10728_tup);
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_10728_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1bed2d91c:;
				if (it != expr_end) {
					jule::I32 _107710_i = it - expr->begin();
					jule::Ptr<_1aabecdb6_Type> _107717_t = *it;
					{
						if (_1ac8b1d20_shouldInitialized(&(_107717_t))) {
							_1ac895e25_indent((*(_self_))._field_oc);
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_107710_i));
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1ac7d76d5_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _107717_t);
							_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1bed2d91c:;
					++it;
					_107710_i++;
					goto _iter_begin_1bed2d91c;
				}
				_iter_end_1bed2d91c:;
			};
		} else if (((*((*(*((*(_107037_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1ac895e25_indent((*(_self_))._field_oc);
			_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_107037_f))))._field_Result);
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1ac8b1d20_shouldInitialized(&((*((*(_107037_f))))._field_Result))) {
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1ac7d76d5_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_107037_f))))._field_Result);
			};
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1ac7c3979_scopeStmts(_self_, &((*((*(_107037_f))))._field_Scope));
	if (((*((*((*(_107037_f))))._field_Decl))._field_Exceptional && _1aaa3b6c7_IsVoid((*((*(_107037_f))))._field_Decl))) {
		_1ac895e25_indent((*_self_.alloc)._field_oc);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1ac7c434d_anonFuncScope(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaa31d1b_AnonFnExpr> _111034_m, jule::Str _111056_ident) {
	if (((*((*(_111034_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11143_closure = _1ab618e41_IsClosure(&(_111034_m));;
	if (_11143_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1aab70795_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1aab70795_Var>>((void*)__jule_anon_1bed3c552, jule::Ptr<__jule_anon_1bed3c552_ctx>::make(__jule_anon_1bed3c552_ctx{._self_=_self_,._111034_m=_111034_m}).as<jule::Uintptr>(), __jule_anon_1bed3c552_ctx_handler); __jule_collection; }));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	if (_11143_closure) {
		_1ac895e25_indent((*(_self_))._field_oc);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1ac895573_write((*(_self_))._field_oc, _111056_ident);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1ac895573_write((*(_self_))._field_oc, _111056_ident);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1ac7c3eda_commonFuncScope(_self_, &((*(_111034_m))._field_Func));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11143_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1ac7c4606_funcScope(jule::Ptr<_1ac7bba4e_scopeCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _114230_f) {
	if (((*(_114230_f))._field_Scope == nullptr)) {
		return;;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac7c3eda_commonFuncScope(_self_, &(_114230_f));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1ac7c7b04_exprCoder> static__1ac7c8000_new(jule::Ptr<_1ac894d58_ObjectCoder>* _5021_oc) {
	return jule::new_ptr<_1ac7c7b04_exprCoder>(_1ac7c7b04_exprCoder{._field_oc=(*(_5021_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1aab70795_Var>>>(nullptr)});;
}



inline void _1ac7c82a8_string(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa9b96cc_Const>* _5624_c) {
	jule::Str _573_content = _1aaa24902_ReadStr((*(_5624_c)).ptr());;
	if ((_573_content.len() == 0LL)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _623_len = _1a792e799_FmtInt(static_cast<jule::I64>(_573_content.len()), 10LL);;
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1ac7d8494_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _573_content);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ac895573_write((*(_self_))._field_oc, _623_len);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7c8561_boolean(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Bool _7124_b) {
	if (_7124_b) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1ac7c875e_nilLit(jule::Ptr<_1ac7c7b04_exprCoder> _self_) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1ac7c8aa0_ftoaSpecialCases(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::F64* _8334_x) {
	{
		
		if (_1a78d4265_IsNaN((*(_8334_x)))) {
			_case_begin_1bed5e4db:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1a78d48e7_IsInf((*(_8334_x)), 1LL)) {
			_case_begin_1bed5e585:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1a78d48e7_IsInf((*(_8334_x)), -1LL)) {
			_case_begin_1bed5e60c:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1bed5e464:;
			{
				return false;;
			}
		}
		_match_end_1bed5e354:;
	};
	return true;;
}



inline void _1ac7c8d58_float32(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa9b96cc_Const>* _9725_c) {
	jule::F64 _983_x = _1aaa2543b_AsF64((*(_9725_c)).ptr());;
	if (_1ac7c8aa0_ftoaSpecialCases(_self_, &(_983_x))) {
		return;;
	};
	{
		
		if ((_983_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1bed62b60:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_983_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1bed62841:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1bed627ca:;
			{
				_1ac7d883a_ftoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _983_x, 32LL);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1bed62346:;
	};
}



inline void _1ac7c9111_float64(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa9b96cc_Const>* _11625_c) {
	jule::F64 _1173_x = _1aaa2543b_AsF64((*(_11625_c)).ptr());;
	if (_1ac7c8aa0_ftoaSpecialCases(_self_, &(_1173_x))) {
		return;;
	};
	{
		
		if ((_1173_x == jule::MAX_F64)) {
			_case_begin_1bed66779:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1173_x == jule::MIN_F64)) {
			_case_begin_1bed66081:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1bed65beb:;
			{
				_1ac7d883a_ftoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1173_x, 64LL);
			}
		}
		_match_end_1bed65767:;
	};
}



inline void _1ac7c93b9_constant(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa9b96cc_Const> _13429_c) {
	{
		
		if (_1aaa26eed_IsStr(_13429_c.ptr())) {
			_case_begin_1bed67d96:;
			{
				_1ac7c82a8_string(_self_, &(_13429_c));
			}
		}
		else if (_1aaa26c67_IsBool(_13429_c.ptr())) {
			_case_begin_1bed67e0c:;
			{
				_1ac7c8561_boolean(_self_, _1aaa2466b_ReadBool(_13429_c));
			}
		}
		else if (_1aaa27284_IsF64(_13429_c)) {
			_case_begin_1bed67e73:;
			{
				{
					
					if (((*_13429_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1bed6a8b0:;
						{
							_1ac7c8d58_float32(_self_, &(_13429_c));
						}
					}
					else {
						_case_begin_1bed6a519:;
						{
							_1ac7c9111_float64(_self_, &(_13429_c));
						}
					}
					_match_end_1bed6a409:;
				};
			}
		}
		else if (_1aaa2674a_IsI64(_13429_c)) {
			_case_begin_1bed67ed9:;
			{
				_1ac7d8b26_itoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1aaa2414e_ReadI64(_13429_c));
			}
		}
		else if (_1aaa269d1_IsU64(_13429_c)) {
			_case_begin_1bed68050:;
			{
				_1ac7d8e12_utoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1aaa243d5_ReadU64(_13429_c));
			}
		}
		else if (_1aaa2751a_IsNil(_13429_c)) {
			_case_begin_1bed680b6:;
			{
				_1ac7c875e_nilLit(_self_);
			}
		}
		else {
			_case_begin_1bed67d30:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1bed67c20:;
	};
}



inline void _1ac7c97d7_divByZeroBinary(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa0d7ceb_Token>* _15833_op, jule::Ptr<_1aaa2dad7_OperandExpr>* _15857_l, jule::Ptr<_1aaa2dad7_OperandExpr>* _15885_r) {
	;
	;
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_15857_l))))._field_Type);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_15857_l))))._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_15885_r))))._field_Type);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_15885_r))))._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_1bb09c40e_Production))) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_1ac897c07_locInfo((*(_self_))._field_oc, _15833_op);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_15857_l))))._field_Type);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_15833_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1bed7636b:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1bed79abc:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1bed79a23:;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1ac7c9ed0__unsafeBinary(jule::Ptr<_1ac7c7b04_exprCoder> _self_, _1ace17078_Builder* _19735_buf, jule::Str* _19759_l, jule::Str* _19768_r, jule::Ptr<_1aabecdb6_Type>* _1988_lk, jule::Ptr<_1aabecdb6_Type>* _19830_rk, jule::U32 _19847_op, jule::Str _19862_kind) {
	if ((_1aac0254c_Struct((*(_1988_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1aa969605_StructIns> _2008_s = _1aac0254c_Struct((*(_1988_lk)).ptr());;
		_1ac7d9561_structBinary(_19735_buf, &(_2008_s), _19759_l, _19768_r, _19847_op, _19862_kind);
		return;;
	};
	if (((_19847_op == static_cast<jule::U32>(50LLU)) || (_19847_op == static_cast<jule::U32>(51LLU)))) {
		{
			
			if (_1ab618b00_IsAny(_1988_lk)) {
				_case_begin_1bed7e53e:;
				{
					if (((!(_1aabee03d_IsNil((*(_19830_rk)).ptr()))) && (!(_1ab618b00_IsAny(_19830_rk))))) {
						({
							auto except = _1ace18310_WriteByte(_19735_buf, '(');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:212:6"));
						});
						if ((_19847_op == static_cast<jule::U32>(51LLU))) {
							({
								auto except = _1ace18310_WriteByte(_19735_buf, '!');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:214:7"));
							});
						};
						jule::I32 _2166_i = _1ac89707a_pushAnyType((*(_self_))._field_oc, (*(_19830_rk)));;
						({
							auto except = _1ace18057_WriteStr(_19735_buf, jule::Str::lit("__jule_any_type", 15));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:217:6"));
							(except.result);
						});
						({
							auto except = _1ace18057_WriteStr(_19735_buf, _1a792ea63_Itoa(_2166_i));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:218:6"));
							(except.result);
						});
						({
							auto except = _1ace18057_WriteStr(_19735_buf, jule::Str::lit("_compare(", 9));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:219:6"));
							(except.result);
						});
						({
							auto except = _1ace18057_WriteStr(_19735_buf, (*(_19759_l)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:220:6"));
							(except.result);
						});
						({
							auto except = _1ace18057_WriteStr(_19735_buf, jule::Str::lit(", ", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:221:6"));
							(except.result);
						});
						({
							auto except = _1ace18057_WriteStr(_19735_buf, (*(_19768_r)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:222:6"));
							(except.result);
						});
						({
							auto except = _1ace18057_WriteStr(_19735_buf, jule::Str::lit("))", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:223:6"));
							(except.result);
						});
						return;;
					};
				}
			}
			else if ((_1aac01c99_Arr((*(_1988_lk)).ptr()) != nullptr)) {
				_case_begin_1bed7e5d8:;
				{
					jule::Ptr<_1aac0d4e2_Arr> _2295_arr = _1aac01c99_Arr((*(_1988_lk)).ptr());;
					jule::Ptr<_1aaa3e2ce_FnIns> _2309_ins = _1ab61bae2_FindFnGenericInstance(&((*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_ArrayCmp), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2295_arr))._field_Elem; __jule_collection; }));;
					if ((_19847_op == static_cast<jule::U32>(51LLU))) {
						({
							auto except = _1ace18310_WriteByte(_19735_buf, '!');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:232:6"));
						});
					};
					static__1ac7de335_funcIns(_19735_buf, &(_2309_ins));
					({
						auto except = _1ace18310_WriteByte(_19735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:235:5"));
					});
					({
						auto except = _1ace18057_WriteStr(_19735_buf, (*(_19759_l)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:236:5"));
						(except.result);
					});
					({
						auto except = _1ace18057_WriteStr(_19735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:237:5"));
						(except.result);
					});
					({
						auto except = _1ace18057_WriteStr(_19735_buf, (*(_19768_r)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:238:5"));
						(except.result);
					});
					({
						auto except = _1ace18057_WriteStr(_19735_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:239:5"));
						(except.result);
					});
					({
						auto except = _1ace18057_WriteStr(_19735_buf, _1a792ea63_Itoa((*_2295_arr.alloc)._field_N));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:240:5"));
						(except.result);
					});
					({
						auto except = _1ace18310_WriteByte(_19735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:241:5"));
					});
					return;;
				}
			}
			_match_end_1bed7e451:;
		};
	};
	{
		auto &_match_expr{ _19847_op };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1bed7e671:;
			{
				jule::Ptr<_1aac06bc2_Prim> _2494_lp = _1aac00ec9_Prim((*(_1988_lk)).ptr());;
				if (((_2494_lp != nullptr) && _1aaabe33c_IsUnsigInt((*_2494_lp.alloc)._field_Kind))) {
					({
						auto except = _1ace18310_WriteByte(_19735_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:251:5"));
					});
					_1ac8a56b5_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _19735_buf, _2494_lp);
					({
						auto except = _1ace18310_WriteByte(_19735_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:253:5"));
					});
				};
			}
		}
		_match_end_1bed83158:;
	};
	({
		auto except = _1ace18310_WriteByte(_19735_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:257:3"));
	});
	({
		auto except = _1ace18057_WriteStr(_19735_buf, (*(_19759_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:258:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(_19735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:259:3"));
	});
	({
		auto except = _1ace18057_WriteStr(_19735_buf, _19862_kind);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:260:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(_19735_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:261:3"));
	});
	({
		auto except = _1ace18057_WriteStr(_19735_buf, (*(_19768_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:262:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(_19735_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:263:3"));
	});
}



inline void _1ac7ca288_unsafeBinary(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr> _26633_m) {
	jule::I32 _2673_i = _1ace18d6b_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _2687_oldbuf = _1ace19388_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_26633_m))._field_Left))._field_Model);
	jule::Str _2703_l = __jule_bytesToStr(_1ace19388_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2673_i));;
	{
		_1ace19641_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2687_oldbuf);
	};
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*_26633_m.alloc)._field_Right))._field_Model);
	jule::Str _2733_r = __jule_bytesToStr(_1ace19388_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2673_i));;
	{
		_1ace19641_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2687_oldbuf);
	};
	_1ac7c9ed0__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2703_l), &(_2733_r), &((*(*(_26633_m))._field_Left.alloc)._field_Type), &((*(*(_26633_m))._field_Right.alloc)._field_Type), (*((*_26633_m.alloc)._field_Op))._field_Id, (*(*(_26633_m))._field_Op.alloc)._field_Kind);
}



inline void _1ac7ca5eb_shl(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa2dad7_OperandExpr>* _27825_l, jule::Ptr<_1aaa2dad7_OperandExpr>* _27853_r) {
	;
	;
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_27825_l))))._field_Type);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_27825_l))))._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_27853_r))))._field_Type);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_27853_r))))._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_27825_l))))._field_Type);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_1aaab6587_BitSizeOf((*(_1aac00ec9_Prim((*((*(_27825_l))))._field_Type.ptr())))._field_Kind)));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1ac7ca95e_shr(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa2dad7_OperandExpr>* _30625_l, jule::Ptr<_1aaa2dad7_OperandExpr>* _30653_r) {
	;
	;
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_30625_l))))._field_Type);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_30625_l))))._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_30653_r))))._field_Type);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_30653_r))))._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_30625_l))))._field_Type);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_1aaab6587_BitSizeOf((*(_1aac00ec9_Prim((*((*(_30625_l))))._field_Type.ptr())))._field_Kind)));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1ac7cac17_binary(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa2e0d2_BinaryExpr> _33427_m) {
	{
		auto &_match_expr{ (*((*(_33427_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1bedaa955:;
			{
				if (_1bb09c1bc_Safety) {
					_1ac7c97d7_divByZeroBinary(_self_, &((*(_33427_m))._field_Op), &((*_33427_m.alloc)._field_Left), &((*_33427_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1bedaa9cc:;
			{
				_1ac7ca5eb_shl(_self_, &((*(_33427_m))._field_Left), &((*_33427_m.alloc)._field_Right));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1bedaaa43:;
			{
				_1ac7ca95e_shr(_self_, &((*_33427_m.alloc)._field_Left), &((*_33427_m.alloc)._field_Right));
				return;;
			}
		}
		_match_end_1bedaa889:;
	};
	_1ac7ca288_unsafeBinary(_self_, _33427_m);
}



inline void _1ac7caec0_var(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aab70795_Var> _35124_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bedada8a:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1aab70795_Var>> _35210_prefix = *it;
			{
				if (_35210_prefix(_35124_m)) {
					return;;
				};
			}
			_iter_next_1bedada8a:;
			++it;
			goto _iter_begin_1bedada8a;
		}
		_iter_end_1bedada8a:;
	};
	if ((*(_35124_m))._field_Binded) {
		jule::Ptr<_1aa0ecc34_Directive> _3584_d = _1ab61a4e7_FindDirective(&((*_35124_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_3584_d != nullptr)) {
			_1ac89582b_writeBytes((*_self_.alloc)._field_oc, _1ac8a2b57_concatAllParts((*_3584_d.alloc)._field_Args));
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1ac7e05ab_var(&((*((*_self_.alloc)._field_oc))._field_Buf), _35124_m);
}



inline void _1ac7cb278_structureIns(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa969605_StructIns> _36733_m) {
	_1ac8a7e48_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _36733_m);
}



inline void _1ac7cb531_unary(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa2e4ab_UnaryExpr> _37126_m) {
	{
		auto &_match_expr{ (*((*(_37126_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1bedb2e35:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_37126_m))._field_Expr))._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1bedb352e:;
			{
				if ((_1bb09c40e_Production || (_1aac01260_Sptr((*((*(_37126_m))._field_Expr))._field_Type.ptr()) == nullptr))) {
					goto _match_end_1bedb3430;
				};
				_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_37126_m))._field_Expr))._field_Model);
				_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1ac897c07_locInfo((*(_self_))._field_oc, &((*_37126_m.alloc)._field_Op));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1bedb3430:;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac895573_write((*(_self_))._field_oc, (*((*(_37126_m))._field_Op))._field_Kind);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*_37126_m.alloc)._field_Expr))._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1ac7cb7d9_structureLit(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa2ed80_StructLitExpr> _39533_m) {
	jule::Bool _3963_binded = _1ab619c99_IsStructBinded((*(_39533_m))._field_Strct);;
	if (_3963_binded) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1ac7cb278_structureIns(_self_, (*_39533_m.alloc)._field_Strct);
	if (_3963_binded) {
		_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4077_inited = false;;
	_julec_label_1bedbb878:;
	{
		auto expr = &((*((*_39533_m.alloc)._field_Strct))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bedbcb54:;
		if (it != expr_end) {
			jule::Ptr<_1aa9689cd_FieldIns> _40915_f = *it;
			{
				{
					auto expr = &((*_39533_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bedbd79d:;
					if (it != expr_end) {
						jule::Ptr<_1aaa2e9d9_StructArgExpr> _41016_arg = *it;
						{
							if (((*(_41016_arg))._field_Field == _40915_f)) {
								if (_4077_inited) {
									_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1ac7e02c0_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_40915_f))._field_Decl));
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1ac7cbd4a_possibleRefExpr(_self_, (*((*_41016_arg.alloc)._field_Expr))._field_Model);
								_4077_inited=true;
								goto _iter_next_1bedbcb54;
							};
						}
						_iter_next_1bedbd79d:;
						++it;
						goto _iter_begin_1bedbd79d;
					}
					_iter_end_1bedbd79d:;
				};
				if (_3963_binded) {
					_4077_inited=false;
					goto _iter_next_1bedbcb54;
				};
				if (_4077_inited) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4077_inited=_1ac7d685a_handleFieldByDefault(_self_, &(_40915_f));
			}
			_iter_next_1bedbcb54:;
			++it;
			goto _iter_begin_1bedbcb54;
		}
		_iter_end_1bedbcb54:;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac7cba92_allocStructure(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa3017c_AllocStructLitExpr> _43935_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1ac7cb278_structureIns(_self_, (*((*(_43935_m))._field_Lit))._field_Strct);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ac7cb7d9_structureLit(_self_, (*_43935_m.alloc)._field_Lit);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7cbd4a_possibleRefExpr(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Any _44732_expr) {
	{
		auto &_match_expr{ _44732_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bedc5673:;
			{
				jule::Ptr<_1aab70795_Var> _4504_v = _44732_expr.unsafe_cast_ptr<_1aab70795_Var>();;
				if ((*(_4504_v))._field_Reference) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1ac7d6519_model(_self_, _44732_expr);
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1bedc560c:;
	};
	_1ac7d6519_model(_self_, _44732_expr);
}



inline void _1ac7cc268_castTraitFromTrait(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30633_CastingExpr>* _46140_m, jule::Ptr<_1aaa46935_Trait> _46167_t1, jule::Ptr<_1aaa46935_Trait> _46189_t2) {
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*((*(_46140_m))))._field_Expr))._field_Model);
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1ac89794e_pushAndWriteMaskMapper((*(_self_))._field_oc, _46167_t1, _46189_t2);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7cc521_casting(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30633_CastingExpr> _47428_m) {
	if (_1aabee89b_ActualEqual((*(_47428_m))._field_Type, (*((*_47428_m.alloc)._field_Expr))._field_Type)) {
		_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		
		if (_1ab618b00_IsAny(&((*(_47428_m))._field_Type))) {
			_case_begin_1bedcb437:;
			{
				if (_1aabee03d_IsNil((*((*_47428_m.alloc)._field_Expr))._field_Type.ptr())) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1aac01a13_TypeEnum((*((*_47428_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
					_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
					return;;
				};
				jule::I32 _4904_i = _1ac89707a_pushAnyType((*(_self_))._field_oc, (*((*_47428_m.alloc)._field_Expr))._field_Type);;
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_47428_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1bedcd2e6:;
						{
							jule::Ptr<_1aac06bc2_Prim> _4945_prim = _1aac00ec9_Prim((*(*(_47428_m))._field_Expr.alloc)._field_Type.ptr());;
							if (((_4945_prim != nullptr) && _1aaabe606_IsInt((*_4945_prim.alloc)._field_Kind))) {
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1ac8a56b5_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _4945_prim);
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1bedd08e2;
							};
							goto _case_begin_1bedd0958;
						}
					}
					else {
						_case_begin_1bedd0958:;
						{
							_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
						}
					}
					_match_end_1bedd08e2:;
				};
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_4904_i));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1ab618b00_IsAny(&((*((*(_47428_m))._field_Expr))._field_Type))) {
			_case_begin_1bedcb4ae:;
			{
				_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
				_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1aac01260_Sptr((*_47428_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1aac01260_Sptr((*(_47428_m))._field_Type)))._field_Elem);
				} else {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
				};
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1bb09c40e_Production))) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ac897c07_locInfo((*(_self_))._field_oc, &((*_47428_m.alloc)._field_Token));
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_1ac89707a_pushAnyType((*(_self_))._field_oc, (*_47428_m.alloc)._field_Type)));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1aac014e6_Ptr((*(*(_47428_m))._field_Expr.alloc)._field_Type.ptr()) != nullptr) || (_1aac014e6_Ptr((*(_47428_m))._field_Type) != nullptr)) {
			_case_begin_1bedcb525:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1aac02a69_Trait((*((*(_47428_m))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1bedcb58b:;
			{
				if ((_1aac02a69_Trait((*_47428_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1ac7cc268_castTraitFromTrait(_self_, &(_47428_m), _1aac02a69_Trait((*(_47428_m))._field_Type), _1aac02a69_Trait((*((*(_47428_m))._field_Expr))._field_Type));
					return;;
				};
				_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1aac01260_Sptr((*_47428_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1aac01260_Sptr((*(_47428_m))._field_Type)))._field_Elem);
				} else {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
				};
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1bb09c40e_Production))) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ac897c07_locInfo((*(_self_))._field_oc, &((*_47428_m.alloc)._field_Token));
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1ac7de621_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1aac02a69_Trait((*((*(_47428_m))._field_Expr))._field_Type));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_1ab61b76d_FindTraitTypeOffset(_1aac02a69_Trait((*((*(_47428_m))._field_Expr))._field_Type), (*_47428_m.alloc)._field_Type)));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1aac02a69_Trait((*(_47428_m))._field_Type) != nullptr)) {
			_case_begin_1bedcb602:;
			{
				_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1ac7de621_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1aac02a69_Trait((*_47428_m.alloc)._field_Type.ptr()));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_1ab61b76d_FindTraitTypeOffset(_1aac02a69_Trait((*(_47428_m))._field_Type), (*(*(_47428_m))._field_Expr.alloc)._field_Type)));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1bedcad4e:;
	};
	jule::Ptr<_1aac06bc2_Prim> _5767_prim = _1aac00ec9_Prim((*(_47428_m))._field_Type.ptr());;
	if (((_5767_prim != nullptr) && _1aac0a18c_IsStr(_5767_prim))) {
		jule::Ptr<_1aac06bc2_Prim> _5788_eprim = _1aac00ec9_Prim((*((*_47428_m.alloc)._field_Expr))._field_Type.ptr());;
		if (((_5788_eprim != nullptr) && (_5767_prim != nullptr))) {
			if (_1aac085ec_IsU8(_5788_eprim)) {
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
			_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1aac0b1c1_Slc> _5898_slc = _1aac02030_Slc((*((*(_47428_m))._field_Expr))._field_Type);;
		if ((_5898_slc != nullptr)) {
			_5788_eprim=_1aac00ec9_Prim((*_5898_slc.alloc)._field_Elem.ptr());
			if (_1aac080d0_IsI32(_5788_eprim.ptr())) {
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
			_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_5767_prim=_1aac00ec9_Prim((*((*_47428_m.alloc)._field_Expr))._field_Type.ptr());
	if (((_5767_prim != nullptr) && _1aac0a18c_IsStr(_5767_prim))) {
		jule::Ptr<_1aac0b1c1_Slc> _6058_slc = _1aac02030_Slc((*(_47428_m))._field_Type);;
		if ((_6058_slc != nullptr)) {
			_5767_prim=_1aac00ec9_Prim((*_6058_slc.alloc)._field_Elem.ptr());
			if (_1aac080d0_IsI32(_5767_prim.ptr())) {
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
			_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_47428_m.alloc)._field_Type);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_47428_m))._field_Expr.alloc)._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7cc7c9_args(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30ed5_FnCallExpr>* _62626_m) {
	jule::I32 _6277_j = 0LL;;
	if (((((*((*((*(_62626_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_62626_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*((*((*(_62626_m))))._field_Func))._field_Params.len() > 0LL) && _1aaa39d9b_IsSelf((*((*(*((*(_62626_m))))._field_Func.alloc)._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6277_j)++;
	};
	{
		auto expr = &((*((*(_62626_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee13d10:;
		if (it != expr_end) {
			jule::I32 _6327_i = it - expr->begin();
			jule::Any _63210_arg = *it;
			{
				jule::Ptr<_1aaa3d179_ParamIns> _6334_p = (*((*((*(_62626_m))))._field_Func))._field_Params[_6277_j];;
				if ((((*(_6334_p))._field_Decl != nullptr) && (*(*(_6334_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _63210_arg };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1bee1771a:;
							{
								jule::Ptr<_1aab70795_Var> _6376_v = _63210_arg.unsafe_cast_ptr<_1aab70795_Var>();;
								if ((*(_6376_v))._field_Reference) {
									_1ac7d6519_model(_self_, _63210_arg);
									goto _julec_label_1bee1a0e1;
								};
							}
						}
						_match_end_1bee176a4:;
					};
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1ac7d6519_model(_self_, _63210_arg);
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1bee1a0e1;
				};
				_1ac7cbd4a_possibleRefExpr(_self_, _63210_arg);
				_julec_label_1bee1a0e1:;
				if ((((*((*(_62626_m))))._field_Args.len() - _6327_i) > 1LL)) {
					_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
				(_6277_j)++;
			}
			_iter_next_1bee13d10:;
			++it;
			_6327_i++;
			goto _iter_begin_1bee13d10;
		}
		_iter_end_1bee13d10:;
	};
}



inline void _1ac7cca82_modelForCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Any _65733_expr) {
	{
		auto &_match_expr{ _65733_expr };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bee166b4:;
			{
				_1ac7d11b2_funcIns(_self_, _65733_expr.unsafe_cast_ptr<_1aaa3e2ce_FnIns>());
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bee1a6b8:;
			{
				jule::Ptr<_1aaa33a76_StructSubIdentExpr> _6638_ssie = _65733_expr.unsafe_cast_ptr<_1aaa33a76_StructSubIdentExpr>();;
				if (((*(_6638_ssie))._field_Method != nullptr)) {
					_1ac7d11b2_funcIns(_self_, (*_6638_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1bee1664d:;
	};
	_1ac7cbd4a_possibleRefExpr(_self_, _65733_expr);
}



inline void _1ac7ccd3a_pushCallInf(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30ed5_FnCallExpr>* _67229_m) {
	if ((_1bb09c40e_Production || (!((*((*((*(_67229_m))))._field_Func))._field_Anon)))) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_67229_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_67229_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1bee1ea74:;
				{
					if (_1ab619c99_IsStructBinded((*((*((*((*(_67229_m))))._field_Expr.unsafe_cast_ptr<_1aaa33a76_StructSubIdentExpr>()))._field_Field))._field_Owner)) {
						_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1bee1ea0d:;
		};
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1ac897c07_locInfo((*(_self_))._field_oc, &((*((*(_67229_m))))._field_Token));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_67229_m))))._field_Args.len() != 0LL)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1ac7cd17b_isWrapped(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30ed5_FnCallExpr>* _69531_m) {
	if ((((!(_1aaa40797_IsBuiltin((*((*(_69531_m))))._field_Func.ptr()))) && ((*((*(*((*(_69531_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1aaa39d9b_IsSelf((*((*((*((*(_69531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_69531_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1bee2445d:;
				{
					jule::Ptr<_1aaa33a76_StructSubIdentExpr> _6999_ssie = (*((*(_69531_m))))._field_Expr.unsafe_cast_ptr<_1aaa33a76_StructSubIdentExpr>();;
					if ((*((*(_6999_ssie))._field_Expr))._field_Lvalue) {
						return false;;
					};
					{
						
						if (_1aaa3a132_IsRef((*((*((*((*(_69531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1aac01260_Sptr((*((*(_6999_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1bee266d5:;
							{
								return false;;
							}
						}
						else {
							_case_begin_1bee25aad:;
							{
								{
									auto &_match_expr{ (*((*((*(_6999_ssie))._field_Expr))._field_Type))._field_Kind };
									
									if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
										_case_begin_1bee2663b:;
										{
											_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
											_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_6999_ssie))._field_Expr))._field_Type);
											_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" _wrap_copy = ", 14));
											_1ac7d6519_model(_self_, (*(*(_6999_ssie))._field_Expr.alloc)._field_Model);
											_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
											return true;;
										}
									}
									_match_end_1bee265c5:;
								};
							}
						}
						_match_end_1bee2555d:;
					};
				}
			}
			_match_end_1bee243e7:;
		};
	};
	return false;;
}



inline jule::Bool _1ac7cd4bc_writeReceiver(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Any _72434_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _72434_m };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bee2c466:;
			{
				_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_72434_m.unsafe_cast_ptr<_1aaa2e4ab_UnaryExpr>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1bee2cdc3:;
			{
				_1ac7cbd4a_possibleRefExpr(_self_, (*((*((*(_72434_m.unsafe_cast_ptr<_1ac3d8407_UnsafeDerefExpr>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bee2c60e:;
			{
				_1ac7cbd4a_possibleRefExpr(_self_, _72434_m);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bee2c598:;
	};
}



inline void _1ac7cd775_pureFuncCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30ed5_FnCallExpr>* _73834_m) {
	jule::Bool _7393_wrapped = _1ac7cd17b_isWrapped(_self_, _73834_m);;
	_1ac7cca82_modelForCall(_self_, (*((*(_73834_m))))._field_Expr);
	if ((!(_1aaa40797_IsBuiltin((*((*(_73834_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_73834_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_73834_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1ab61a8b0_HasDirective(&((*(*((*((*(_73834_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_73834_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bee319cb:;
					if (it != expr_end) {
						jule::I32 _74511_i = it - expr->begin();
						jule::Ptr<_1aabeb4d0_InsGeneric> _74518_g = *it;
						{
							_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_74518_g))._field_Type);
							if ((((*(*((*(_73834_m))))._field_Func.alloc)._field_Generics.len() - _74511_i) > 1LL)) {
								_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1bee319cb:;
						++it;
						_74511_i++;
						goto _iter_begin_1bee319cb;
					}
					_iter_end_1bee319cb:;
				};
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1ac7ccd3a_pushCallInf(_self_, _73834_m);
	if (((*((*((*(_73834_m))))._field_Func))._field_AsAnon && (!((*(*((*(_73834_m))))._field_Func.alloc)._field_Anon)))) {
		_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_73834_m))))._field_Args.len() > 0LL)) {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1aaa40797_IsBuiltin((*((*(_73834_m))))._field_Func.ptr()))) && ((*((*(*((*(_73834_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1aaa39d9b_IsSelf((*((*((*((*(_73834_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_73834_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1bee38780:;
				{
					jule::Ptr<_1aaa33a76_StructSubIdentExpr> _7699_ssie = (*((*(_73834_m))))._field_Expr.unsafe_cast_ptr<_1aaa33a76_StructSubIdentExpr>();;
					{
						
						if (_1aaa3a132_IsRef((*((*((*((*(_73834_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1bee3a3b9:;
							{
								_1ac7cd4bc_writeReceiver(_self_, (*((*(_7699_ssie))._field_Expr))._field_Model);
							}
						}
						else {
							_case_begin_1bee3974d:;
							{
								{
									auto &_match_expr{ (*((*((*(_7699_ssie))._field_Expr))._field_Type))._field_Kind };
									
									if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)) {
										_case_begin_1bee3dbc5:;
										{
											jule::Bool _7787_safe = _1ac7cd4bc_writeReceiver(_self_, (*((*(_7699_ssie))._field_Expr))._field_Model);;
											if (_7787_safe) {
												_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".ptr(", 5));
												if ((!(_1bb09c40e_Production))) {
													_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
													_1ac897c07_locInfo((*(_self_))._field_oc, &((*((*(_73834_m))))._field_Token));
													_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
												};
												_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
											};
										}
									}
									else {
										_case_begin_1bee3a353:;
										{
											{
												auto &_match_expr{ (*((*((*(_7699_ssie))._field_Expr))._field_Type))._field_Kind };
												
												if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
													_case_begin_1bee3add1:;
													{
														{
															auto &_match_expr{ (*((*(_7699_ssie))._field_Expr))._field_Model };
															
															if (_match_expr.type == &__jule_any_type7) {
																_case_begin_1bee3b585:;
																{
																	jule::Ptr<_1aab70795_Var> _7939_v = (*((*(_7699_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1aab70795_Var>();;
																	if ((*(_7939_v))._field_Reference) {
																		goto _match_end_1bee3ba6e;
																	};
																	goto _case_begin_1bee3bad5;
																}
															}
															else {
																_case_begin_1bee3bad5:;
																{
																	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit("&", 1));
																}
															}
															_match_end_1bee3ba6e:;
														};
													}
												}
												_match_end_1bee3ad6a:;
											};
											if (_7393_wrapped) {
												_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit("_wrap_copy", 10));
											} else if ((_1aac014e6_Ptr((*((*(_7699_ssie))._field_Expr))._field_Type.ptr()) == nullptr)) {
												_1ac7d6519_model(_self_, (*(*(_7699_ssie))._field_Expr.alloc)._field_Model);
											} else {
												_1ac7cbd4a_possibleRefExpr(_self_, (*((*((*(*(_7699_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1aaa2e4ab_UnaryExpr>(&__jule_any_type112)))._field_Expr))._field_Model);
											};
										}
									}
									_match_end_1bee3a2dc:;
								};
							}
						}
						_match_end_1bee396c6:;
					};
					if (((*((*(_73834_m))))._field_Args.len() > 0LL)) {
						_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type98) {
				_case_begin_1bee3842d:;
				{
					_1ac7cbd4a_possibleRefExpr(_self_, (*((*((*(_73834_m))))._field_Expr.unsafe_cast_ptr<_1aaa331d5_TraitSubIdentExpr>()))._field_Expr);
					_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_73834_m))))._field_Args.len() > 0LL)) {
						_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1bee38708:;
		};
	};
	_1ac7cc7c9_args(_self_, _73834_m);
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if (_7393_wrapped) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1ac7cda2d_coFuncCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30ed5_FnCallExpr>* _83232_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _8397_i = jule::Str();;
	if ((((*((*((*(_83232_m))))._field_Func))._field_Params.len() > 0LL) || (*((*((*(_83232_m))))._field_Func))._field_AsAnon)) {
		_8397_i=_1a792ea63_Itoa(_1ac8965a7_pushCoSpawn((*(_self_))._field_oc, (*((*(_83232_m))))._field_Func));
		jule::Str _8424_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _8397_i);;
		_1ac895573_write((*(_self_))._field_oc, _8424_t);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_1ac895573_write((*(_self_))._field_oc, _8424_t);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_1ac895e25_indent((*(_self_))._field_oc);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_1ac7cca82_modelForCall(_self_, (*((*(_83232_m))))._field_Expr);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*((*((*(_83232_m))))._field_Func))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bee59806:;
			if (it != expr_end) {
				jule::I32 _8648_j = it - expr->begin();
				{
					_1ac895e25_indent((*(_self_))._field_oc);
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_8648_j));
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_83232_m))))._field_Args[_8648_j]);
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_1bee59806:;
				++it;
				_8648_j++;
				goto _iter_begin_1bee59806;
			}
			_iter_end_1bee59806:;
		};
		_1ac895e25_indent((*(_self_))._field_oc);
	};
	if (!(_8397_i).empty()) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_8397_i).empty()) {
		static__1ac7de335_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_83232_m))))._field_Func));
	} else {
		_1ac895573_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _8397_i));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_8397_i).empty()) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_8397_i).empty()) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac7cdd91_writeUseExpr(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _91034_f, jule::Ptr<_1aabb8db5_Data> _91055_d) {
	if ((_1aac03086_Tup((*(_91055_d))._field_Type.ptr()) == nullptr)) {
		_1ac7cbd4a_possibleRefExpr(_self_, (*_91055_d.alloc)._field_Model);
		_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1aaa345e3_TupleExpr> _9167_tup = (*(_91055_d))._field_Model.cast_ptr<_1aaa345e3_TupleExpr>(&__jule_any_type83);;
	_1ac8ae46b_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1aac03086_Tup((*((*(_91034_f))))._field_Result.ptr()));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_9167_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee6b4e9:;
		if (it != expr_end) {
			jule::I32 _9197_i = it - expr->begin();
			jule::Ptr<_1aabb8db5_Data> _91910_data = *it;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_9197_i));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1ac7cbd4a_possibleRefExpr(_self_, (*(_91910_data))._field_Model);
				if ((((*(_9167_tup))._field_Datas.len() - _9197_i) > 1LL)) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1bee6b4e9:;
			++it;
			_9197_i++;
			goto _iter_begin_1bee6b4e9;
		}
		_iter_end_1bee6b4e9:;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1ac7ce204_funcCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa30ed5_FnCallExpr> _93129_m, jule::Bool _93151_ignoreExceptional) {
	if ((*(_93129_m))._field_IsCo) {
		_1ac7cda2d_coFuncCall(_self_, &(_93129_m));
		return;;
	};
	if (((_1aaa40797_IsBuiltin((*(_93129_m))._field_Func.ptr()) || (!((*((*((*(_93129_m))._field_Func))._field_Decl))._field_Exceptional))) || (((*(_93129_m))._field_Except != nullptr) && ((*((*_93129_m.alloc)._field_Except))._field_Stmts.len() == 0LL)))) {
		_1ac7cd775_pureFuncCall(_self_, &(_93129_m));
		return;;
	};
	if (_93151_ignoreExceptional) {
		_1ac7cd775_pureFuncCall(_self_, &(_93129_m));
		if (((*((*(_93129_m))._field_Func))._field_Result != nullptr)) {
			_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".result", 7));
		};
		return;;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1ac7cd775_pureFuncCall(_self_, &(_93129_m));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac895e25_indent((*(_self_))._field_oc);
	if (((*(_93129_m))._field_Except != nullptr)) {
		if ((((*((*_93129_m.alloc)._field_Func))._field_Result == nullptr) || (!((*_93129_m.alloc)._field_Assigned)))) {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1ac7c3c32_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_93129_m.alloc)._field_Except);
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _9695_forwarded = _1ab618528_IsForwarded(&((*_93129_m.alloc)._field_Except));;
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_9695_forwarded) {
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9749_stmt = (*(*(_93129_m))._field_Except.alloc)._field_Stmts[((*(*(_93129_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9749_stmt };
				
				if (_match_expr.type == &__jule_any_type21) {
					_case_begin_1bee7b350:;
					{
						((*((*(_93129_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_93129_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1ac895a29_addIndent((*(_self_))._field_oc);
						_1ac7c3979_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_93129_m.alloc)._field_Except));
						_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1ac895e25_indent((*(_self_))._field_oc);
						_1ac7cdd91_writeUseExpr(_self_, &((*_93129_m.alloc)._field_Func), _9749_stmt.unsafe_cast_ptr<_1aabb8db5_Data>());
						_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1ac895c27_doneIndent((*(_self_))._field_oc);
						_1ac895e25_indent((*(_self_))._field_oc);
						_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1bee7b41b:;
					{
						_1ac7c3c32_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_93129_m.alloc)._field_Except);
					}
				}
				_match_end_1bee7b2d9:;
			};
			if (_9695_forwarded) {
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1ac7d76d5_initExpr(_self_, (*((*_93129_m.alloc)._field_Func))._field_Result);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1ac895c27_doneIndent((*(_self_))._field_oc);
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1ac897c07_locInfo((*(_self_))._field_oc, &((*(_93129_m))._field_Token));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1aaa3b6c7_IsVoid((*((*_93129_m.alloc)._field_Func))._field_Decl.ptr())))) {
			_1ac895e25_indent((*(_self_))._field_oc);
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1ac895c27_doneIndent((*(_self_))._field_oc);
	};
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1ac7ce4ac_slice(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa313ae_SliceExpr> _101426_m) {
	if (((*(_101426_m))._field_Elems.len() == 0LL)) {
		_1ac8a709b_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_101426_m.alloc)._field_ElemType);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1ac8a709b_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_101426_m))._field_ElemType);
	jule::Str _10223_size = _1a792ea63_Itoa((*_101426_m.alloc)._field_Elems.len());;
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ac895573_write((*(_self_))._field_oc, _10223_size);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ac895573_write((*(_self_))._field_oc, _10223_size);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_101426_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bee90166:;
		if (it != expr_end) {
			jule::I32 _10327_i = it - expr->begin();
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1ac7cbd4a_possibleRefExpr(_self_, (*(_101426_m))._field_Elems[_10327_i]);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1bee90166:;
			++it;
			_10327_i++;
			goto _iter_begin_1bee90166;
		}
		_iter_end_1bee90166:;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1ac7ce765_indexing(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa31865_IndexingExpr> _104329_m) {
	{
		auto &_match_expr{ (*((*(_104329_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1bee940d2:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1bb09c40e_Production))) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1ac897c07_locInfo((*(_self_))._field_oc, &((*(_104329_m))._field_Token));
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10544_s = _1aaa24902_ReadStr((*((*(_104329_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1aa9b96cc_Const>().ptr());;
				_1ac7d8494_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10544_s);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_10544_s.len()));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_104329_m))._field_Index))._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1bee9406b:;
	};
	{
		
		if ((_1aac02d00_Map((*((*(_104329_m))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bee9a3a2:;
			{
				jule::Ptr<_1aac0c865_Map> _10678__map = _1aac02d00_Map((*((*(_104329_m))._field_Expr))._field_Type);;
				jule::Ptr<_1aa969605_StructIns> _10688_ins = _1ab61be66_FindStructGenericInstance(&((*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_10678__map))._field_Key; (*it++) = (*_10678__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1aaa3e2ce_FnIns> _10708_f = (*(_1aa96a66c_FindMethod(_10688_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1ac7de335_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_10708_f));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_104329_m))._field_Expr.alloc)._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ac7cbd4a_possibleRefExpr(_self_, (*((*_104329_m.alloc)._field_Index))._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_1bb09c40e_Production || (_1aac014e6_Ptr((*((*(_104329_m))._field_Expr))._field_Type.ptr()) != nullptr) || _1ab618836_IsExprComesFromBind(&((*_104329_m.alloc)._field_Expr))) {
			_case_begin_1bee944de:;
			{
				_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_104329_m))._field_Expr.alloc)._field_Model);
				_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1ac7cbd4a_possibleRefExpr(_self_, (*((*_104329_m.alloc)._field_Index))._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1bee9a2b4:;
			{
				_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_104329_m))._field_Expr.alloc)._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1ac897c07_locInfo((*(_self_))._field_oc, &((*_104329_m.alloc)._field_Token));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_104329_m))._field_Index.alloc)._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1bee977de:;
	};
}



inline void _1ac7cea1d_unsafeIndexing(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d747d_UnsafeIndexingExpr> _109435_m) {
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*((*(_109435_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1bb09c40e_Production || (_1aac014e6_Ptr((*(*((*(_109435_m))._field_Node))._field_Expr.alloc)._field_Type.ptr()) != nullptr) || (_1aac02d00_Map((*((*((*(_109435_m))._field_Node))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1beea7535:;
			{
				_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1ac7cbd4a_possibleRefExpr(_self_, (*((*(*(_109435_m))._field_Node.alloc)._field_Index))._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1beea47da:;
			{
				_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1ac7cbd4a_possibleRefExpr(_self_, (*((*(*(_109435_m))._field_Node.alloc)._field_Index))._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1beea714a:;
	};
}



inline void _1ac7cecc6_anonFunc(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa31d1b_AnonFnExpr> _111129_m) {
	jule::Bool _11123_closure = _1ab618e41_IsClosure(&(_111129_m));;
	jule::Str _11133_ident = _1ac896c39_pushAnonFn((*(_self_))._field_oc, &(_111129_m));;
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1ac8a94bb_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_111129_m))._field_Func);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1ac895573_write((*(_self_))._field_oc, _11133_ident);
	if (_11123_closure) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1ac895573_write((*(_self_))._field_oc, _11133_ident);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1ac895573_write((*(_self_))._field_oc, _11133_ident);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_111129_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1beeb2386:;
			if (it != expr_end) {
				jule::I32 _11259_i = it - expr->begin();
				jule::Ptr<_1aab70795_Var> _112516_v = *it;
				{
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1ac7e05ab_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _112516_v);
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1ac7caec0_var(_self_, _112516_v);
					if ((((*_111129_m.alloc)._field_Captured.len() - _11259_i) > 1LL)) {
						_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1beeb2386:;
				++it;
				_11259_i++;
				goto _iter_begin_1beeb2386;
			}
			_iter_end_1beeb2386:;
		};
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1ac895573_write((*(_self_))._field_oc, _11133_ident);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1ac7d007e_mapExpr(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa325be_MapExpr> _114228_m) {
	jule::Ptr<_1aa969605_StructIns> _11437_ins = _1ab61be66_FindStructGenericInstance(&((*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_114228_m))._field_Kind))._field_Key; (*it++) = (*(*(_114228_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1aaa3e2ce_FnIns> _11457_maker = (*(_1aa96a66c_FindMethod(_11437_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_114228_m.alloc)._field_Entries.len() == 0LL)) {
		static__1ac7de335_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_11457_maker));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _11527_f = (*(_1aa96a66c_FindMethod(_11437_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1ac8a7772_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_114228_m.alloc)._field_Kind);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1ac7de335_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11457_maker));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_114228_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beebe706:;
		if (it != expr_end) {
			jule::Ptr<_1aaa321e5_KeyValPairExpr> _116215_pair = *it;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1ac7de335_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11527_f));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1ac7cbd4a_possibleRefExpr(_self_, (*(_116215_pair))._field_Key);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1ac7cbd4a_possibleRefExpr(_self_, (*_116215_pair.alloc)._field_Val);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1beebe706:;
			++it;
			goto _iter_begin_1beebe706;
		}
		_iter_end_1beebe706:;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1ac7d0337_slicing(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa32b52_SlicingExpr> _117728_m) {
	_1ac7cbd4a_possibleRefExpr(_self_, (*(_117728_m))._field_Expr);
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1bb09c40e_Production))) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ac897c07_locInfo((*(_self_))._field_oc, &((*_117728_m.alloc)._field_Token));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1ac7cbd4a_possibleRefExpr(_self_, (*_117728_m.alloc)._field_Left);
	if (((*_117728_m.alloc)._field_Right != nullptr)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ac7cbd4a_possibleRefExpr(_self_, (*_117728_m.alloc)._field_Right);
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7d05e0_traitSub(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa331d5_TraitSubIdentExpr> _119329_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1ac7de621_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_119329_m))._field_Trt);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1ac7cbd4a_possibleRefExpr(_self_, (*_119329_m.alloc)._field_Expr);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_1bb09c40e_Production))) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1ac897c07_locInfo((*(_self_))._field_oc, &((*_119329_m.alloc)._field_Token));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1ac7de049_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_119329_m.alloc)._field_Method));
}



inline void _1ac7d0898_structureSub(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa33a76_StructSubIdentExpr> _120933_m) {
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_120933_m))._field_Expr))._field_Model);
	if (((*_120933_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1ac7e02c0_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_120933_m.alloc)._field_Field))._field_Decl));
}



inline void _1ac7d0b51_array(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa342e6_ArrayExpr> _121826_m) {
	if ((((*((*(_121826_m))._field_Kind))._field_N == 0LL) || (((*(_121826_m))._field_Elems.len() == 0LL) && (!(_1ac8b1a45_ableToInit(&((*((*_121826_m.alloc)._field_Kind))._field_Elem))))))) {
		_1ac8a82ab_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_121826_m))._field_Kind);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_121826_m))._field_Elems.len() == 2LL) && ((*(_121826_m))._field_Elems[1LL] == nullptr))) {
		_1ac8a82ab_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_121826_m.alloc)._field_Kind);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ac7cbd4a_possibleRefExpr(_self_, (*(_121826_m))._field_Elems[0LL]);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1ac8a82ab_array((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_121826_m))._field_Kind);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_121826_m.alloc)._field_Elems.len() != (*((*_121826_m.alloc)._field_Kind))._field_N)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_121826_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beedbbeb:;
		if (it != expr_end) {
			jule::I32 _12517_i = it - expr->begin();
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1ac7cbd4a_possibleRefExpr(_self_, (*(_121826_m))._field_Elems[_12517_i]);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1beedbbeb:;
			++it;
			_12517_i++;
			goto _iter_begin_1beedbbeb;
		}
		_iter_end_1beedbbeb:;
	};
	if ((((*_121826_m.alloc)._field_Elems.len() != (*((*_121826_m.alloc)._field_Kind))._field_N) && _1ac8b1a45_ableToInit(&((*(*(_121826_m))._field_Kind.alloc)._field_Elem)))) {
		_1ac7d6dbb_fillCollectionByDefault(_self_, &((*(*(_121826_m))._field_Kind.alloc)._field_Elem));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1ac7d0e09_funcInsCommon(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _126834_m) {
	_1ac8a982e_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _126834_m);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac7d11b2_funcIns(_self_, _126834_m);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7d11b2_funcIns(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _127528_m) {
	if ((((*(_127528_m))._field_Decl != nullptr) && (*(*(_127528_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1aa0ecc34_Directive> _12774_d = _1ab61a4e7_FindDirective(&((*(*(_127528_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_12774_d != nullptr)) {
			_1ac89582b_writeBytes((*(_self_))._field_oc, _1ac8a2b57_concatAllParts((*_12774_d.alloc)._field_Args));
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1ac7de335_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_127528_m));
}



inline void _1ac7d146a_tuple(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa345e3_TupleExpr> _128626_m) {
	{
		auto expr = &((*(_128626_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1beee7a4d:;
		if (it != expr_end) {
			jule::I32 _12878_i = it - expr->begin();
			jule::Ptr<_1aabb8db5_Data> _128715_d = *it;
			{
				_1ac7cbd4a_possibleRefExpr(_self_, (*(_128715_d))._field_Model);
				_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_128626_m))._field_Datas.len() - _12878_i) > 1LL)) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1ac895e25_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1beee7a4d:;
			++it;
			_12878_i++;
			goto _iter_begin_1beee7a4d;
		}
		_iter_end_1beee7a4d:;
	};
}



inline void _1ac7d1723_newCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa350b6_BuiltinNewCallExpr> _129728_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_129728_m))._field_Type);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_129728_m.alloc)._field_Init != nullptr)) {
		_1ac7cbd4a_possibleRefExpr(_self_, (*_129728_m.alloc)._field_Init);
	} else if (_1ac8b1a45_ableToInit(&((*_129728_m.alloc)._field_Type))) {
		_1ac7d76d5_initExpr(_self_, (*_129728_m.alloc)._field_Type);
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7d19cb_printCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa348e0_BuiltinPrintCallExpr> _130930_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::print(", 12));
	jule::Ptr<_1aaa3e2ce_FnIns> _13117_f = _1ab61bae2_FindFnGenericInstance(&((*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_130930_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1ac7de335_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13117_f));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_130930_m))._field_Expr.alloc)._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1ac7d1c84_printlnCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa34bdc_BuiltinPrintlnCallExpr> _131832_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::println(", 14));
	jule::Ptr<_1aaa3e2ce_FnIns> _13207_f = _1ab61bae2_FindFnGenericInstance(&((*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_131832_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1ac7de335_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13207_f));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_131832_m))._field_Expr.alloc)._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1ac7d203c_panicCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa35490_BuiltinPanicCallExpr> _132730_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1ac7cbd4a_possibleRefExpr(_self_, (*(_132730_m))._field_Expr);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1ac897c07_locInfo((*(_self_))._field_oc, &((*_132730_m.alloc)._field_Token));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1ac7d22e5_errorCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa37096_BuiltinErrorCallExpr> _133530_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1aaa3b6c7_IsVoid((*((*(_133530_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_133530_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c0008eb0:;
				{
					jule::Ptr<_1aab70795_Var> _13405_v = (*((*(_133530_m))._field_Err))._field_Model.unsafe_cast_ptr<_1aab70795_Var>();;
					if (((*(_13405_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1c0008e49:;
		};
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1ac8aeb42_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_133530_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_133530_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c000d448:;
				{
					jule::Ptr<_1aab70795_Var> _13525_v = (*((*(_133530_m))._field_Err))._field_Model.unsafe_cast_ptr<_1aab70795_Var>();;
					if (((*(_13525_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1c000d3d2:;
		};
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_133530_m))._field_Err))._field_Model);
	jule::I32 _13613_i = _1ac89707a_pushAnyType((*(_self_))._field_oc, (*(*(_133530_m))._field_Err.alloc)._field_Type);;
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_13613_i));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1ac7d259d_copyCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa36bbc_BuiltinCopyCallExpr> _136729_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_136729_m))._field_Dest))._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*_136729_m.alloc)._field_Src))._field_Model);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7d2856_lenCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa3611c_BuiltinLenCallExpr> _137528_m) {
	jule::Ptr<_1aac0c865_Map> _13767__map = _1aac02d00_Map((*((*(_137528_m))._field_Expr))._field_Type.ptr());;
	if ((_13767__map != nullptr)) {
		jule::Ptr<_1aa969605_StructIns> _13788_ins = _1ab61be66_FindStructGenericInstance(&((*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_13767__map.alloc)._field_Key; (*it++) = (*_13767__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1aaa3e2ce_FnIns> _13808_f = (*(_1aa96a66c_FindMethod(_13788_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1ac7de335_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_13808_f));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_137528_m))._field_Expr.alloc)._field_Model);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_137528_m))._field_Expr.alloc)._field_Model);
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1ac7d2b0e_capCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa36419_BuiltinCapCallExpr> _139128_m) {
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_139128_m))._field_Expr))._field_Model);
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1ac7d2db7_deleteCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa367e3_BuiltinDeleteCallExpr> _139631_m) {
	jule::Ptr<_1aac0c865_Map> _13977__map = _1aac02d00_Map((*((*(_139631_m))._field_Dest))._field_Type.ptr());;
	if ((_13977__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1399:4"));;
	};
	jule::Ptr<_1aa969605_StructIns> _14017_ins = _1ab61be66_FindStructGenericInstance(&((*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13977__map))._field_Key; (*it++) = (*_13977__map.alloc)._field_Val; __jule_collection; }));;
	;
	if (((*_139631_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1aaa3e2ce_FnIns> _14048_f = (*(_1aa96a66c_FindMethod(_14017_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1ac7de335_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14048_f));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_139631_m))._field_Dest.alloc)._field_Model);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_139631_m))._field_Key.alloc)._field_Model);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1aaa3e2ce_FnIns> _14128_f = (*(_1aa96a66c_FindMethod(_14017_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1ac7de335_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14128_f));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_139631_m))._field_Dest.alloc)._field_Model);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1ac7d3170_makeCallSlice(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa35946_BuiltinMakeCallExpr>* _142035_m) {
	jule::Ptr<_1aac0b1c1_Slc> _14217_slice = _1aac02030_Slc((*((*(_142035_m))))._field_Type.ptr());;
	jule::Bool _14223_init = _1ac8b1a45_ableToInit(&((*(_14217_slice))._field_Elem));;
	if (_14223_init) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_142035_m))))._field_Type);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_142035_m))))._field_Len);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_142035_m))))._field_Cap != nullptr)) {
		_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_142035_m))))._field_Cap);
	} else {
		_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_142035_m))))._field_Len);
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14223_init))) {
		return;;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1ac7d7174_initCollection(_self_, &((*_14217_slice.alloc)._field_Elem));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1ac7d3428_makeCallStr(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa35946_BuiltinMakeCallExpr>* _144433_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_144433_m))))._field_Len);
	if (((*((*(_144433_m))))._field_Cap != nullptr)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_144433_m))))._field_Cap);
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7d36d1_makeCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa35946_BuiltinMakeCallExpr> _145529_m) {
	if ((_1aac02030_Slc((*(_145529_m))._field_Type.ptr()) != nullptr)) {
		_1ac7d3170_makeCallSlice(_self_, &(_145529_m));
		return;;
	};
	_1ac7d3428_makeCallStr(_self_, &(_145529_m));
}



inline void _1ac7d3989_pushToSlice(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d7857_PushToSliceExpr> _146332_m) {
	;
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1ac8a709b_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_146332_m))._field_Elems))._field_ElemType);
	jule::Bool _14717_ptr = false;;
	{
		auto &_match_expr{ (*(_146332_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c0031c74:;
			{
				jule::Ptr<_1aaa2e4ab_UnaryExpr> _14758_u = (*(_146332_m))._field_Dest.unsafe_cast_ptr<_1aaa2e4ab_UnaryExpr>();;
				if ((_1aac014e6_Ptr((*((*(_14758_u))._field_Expr))._field_Type.ptr()) != nullptr)) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1ac7cbd4a_possibleRefExpr(_self_, (*(*(_14758_u))._field_Expr.alloc)._field_Model);
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_14717_ptr=true;
					goto _match_end_1c00339ac;
				};
				goto _case_begin_1c0033a23;
			}
		}
		else {
			_case_begin_1c0033a23:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1ac7cbd4a_possibleRefExpr(_self_, (*_146332_m.alloc)._field_Dest);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1c00339ac:;
	};
	if (((*(*(_146332_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_14717_ptr) {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1ac7cbd4a_possibleRefExpr(_self_, (*((*(_146332_m))._field_Elems))._field_Elems[0LL]);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_14717_ptr) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa((*(*(_146332_m))._field_Elems.alloc)._field_Elems.len()));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_146332_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c003c28a:;
		if (it != expr_end) {
			jule::Any _150915_e = *it;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_14717_ptr) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1ac7cbd4a_possibleRefExpr(_self_, _150915_e);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1c003c28a:;
			++it;
			goto _iter_begin_1c003c28a;
		}
		_iter_end_1c003c28a:;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac7d3c42_appendToSlice(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d7c31_AppendToSliceExpr> _152334_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac7cbd4a_possibleRefExpr(_self_, (*(_152334_m))._field_Dest);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1ac7cbd4a_possibleRefExpr(_self_, (*_152334_m.alloc)._field_Slice);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1ac7d3eea_appendCall(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa35d20_BuiltinAppendCallExpr> _153131_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1ac7cbd4a_possibleRefExpr(_self_, (*(_153131_m))._field_Dest);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1ac7cbd4a_possibleRefExpr(_self_, (*_153131_m.alloc)._field_Elements);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7d42a3_sizeof(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa37393_SizeofExpr> _153927_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1ac7cbd4a_possibleRefExpr(_self_, (*(_153927_m))._field_Expr);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7d455b_alignof(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa37a47_AlignofExpr> _154528_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1ac7cbd4a_possibleRefExpr(_self_, (*(_154528_m))._field_Expr);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7d4814_runeLit(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa37c34_RuneExpr> _155124_m) {
	if (((*(_155124_m))._field_Code <= 127LL)) {
		({
			auto except = _1ace18310_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1553:4"));
		});
		jule::Str _15548_b = _1ac7d7d78_sbtoa(static_cast<jule::U8>((*_155124_m.alloc)._field_Code));;
		if (_15548_b.equal("'", 1)) {
			({
				auto except = _1ace18310_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1556:5"));
			});
		};
		({
			auto except = _1ace18057_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15548_b);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1558:4"));
			(except.result);
		});
		({
			auto except = _1ace18310_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1559:4"));
		});
		return;;
	};
	_1ac7d8b26_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>((*(_155124_m))._field_Code));
}



inline void _1ac7d4abc_structureStatic(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa33e1c_StructStaticIdentExpr> _156536_m) {
	static__1ac7de335_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_156536_m))._field_Method));
}



inline void _1ac7d4d75_backendEmit(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa380a8_BackendEmitExpr> _156932_m) {
	if (((*(_156932_m))._field_Exprs.len() == 0LL)) {
		_1ac895573_write((*(_self_))._field_oc, (*_156932_m.alloc)._field_Code);
		return;;
	};
	jule::I32 _15743_n = _1ace18d6b_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::Any> _15757_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*(_156932_m))._field_Exprs.len(), (*(_156932_m))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_156932_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c004c388:;
		if (it != expr_end) {
			jule::I32 _15768_i = it - expr->begin();
			jule::Any _157615_expr = *it;
			{
				_1ac7cbd4a_possibleRefExpr(_self_, _157615_expr);
				jule::Slice<jule::U8> _15788_buf = _1ace19388_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15757_args[_15768_i]=jule::Any(__jule_bytesToStr(_15788_buf.slice(_15743_n)), &__jule_any_type5);
				{
					_1ace19641_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15788_buf.slice(0LL, _15743_n));
				};
			}
			_iter_next_1c004c388:;
			++it;
			_15768_i++;
			goto _iter_begin_1c004c388;
		}
		_iter_end_1c004c388:;
	};
	_1ac895573_write((*(_self_))._field_oc, _1aac7537d_Format((*_156932_m.alloc)._field_Code, _15757_args));
}



inline void _1ac7d512d_free(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aaa383a5_FreeExpr> _158525_m) {
	_1ac7cbd4a_possibleRefExpr(_self_, (*(_158525_m))._field_Expr);
	if (_1bb09bd04_RC) {
		_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1ac7d53d6_strComp(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d6801_StrCompExpr> _159428_m) {
	if ((*(_159428_m))._field_NotEq) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _15983_s = _1aaa24902_ReadStr((*(_159428_m))._field_Right.ptr());;
	_1ac7cbd4a_possibleRefExpr(_self_, (*_159428_m.alloc)._field_Left);
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".equal(", 7));
	_1ac7d8494_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _15983_s);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_15983_s.len()));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_159428_m.alloc)._field_NotEq) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1ac7d568e_emptyCompare(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d5eb5_EmptyCompareExpr> _161033_m) {
	if ((*(_161033_m))._field_Neg) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1ac7cbd4a_possibleRefExpr(_self_, (*(_161033_m))._field_Expr);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1ac7d5947_unsafeDeref(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d8407_UnsafeDerefExpr> _161932_m) {
	{
		
		if ((_1aac01260_Sptr((*((*((*(_161932_m))._field_Base))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c005ac48:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1ac7cbd4a_possibleRefExpr(_self_, (*(*((*(_161932_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1c005a880:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1626:4"));;
			}
		}
		_match_end_1c005a770:;
	};
}



inline void _1ac7d5c00_unsafeCasting(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d8935_UnsafeCastingExpr> _163034_m) {
	{
		
		if (_1ab618b00_IsAny(&((*((*((*(_163034_m))._field_Base))._field_Expr))._field_Type))) {
			_case_begin_1c005d8d8:;
			{
				_1ac7cbd4a_possibleRefExpr(_self_, (*(*((*(_163034_m))._field_Base))._field_Expr.alloc)._field_Model);
				if ((_1aac01260_Sptr((*(*(_163034_m))._field_Base.alloc)._field_Type.ptr()) != nullptr)) {
					_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1aac01260_Sptr((*((*(_163034_m))._field_Base))._field_Type)))._field_Elem);
				} else {
					_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_163034_m))._field_Base.alloc)._field_Type);
				};
				_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1c005d520:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1643:4"));;
			}
		}
		_match_end_1c005d410:;
	};
}



inline void _1ac7d5ea8_strConcat(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d5745_StrConcatExpr> _164730_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({ jule::Int size = 0; ", 23));
	{
		auto expr = &((*(_164730_m))._field_Parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c00649cc:;
		if (it != expr_end) {
			jule::I32 _16497_i = it - expr->begin();
			jule::Any _164910_p = *it;
			{
				jule::Str _16504_ident = (jule::Str::lit("part", 4) + _1a792ea63_Itoa(_16497_i));;
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Str ", 10));
				_1ac895573_write((*(_self_))._field_oc, _16504_ident);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = std::move(", 13));
				_1ac7cbd4a_possibleRefExpr(_self_, _164910_p);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("); size += ", 11));
				_1ac895573_write((*(_self_))._field_oc, _16504_ident);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".len(); ", 8));
			}
			_iter_next_1c00649cc:;
			++it;
			_16497_i++;
			goto _iter_begin_1c00649cc;
		}
		_iter_end_1c00649cc:;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Slice<jule::U8> buf; buf.alloc_new(0, size); ", 51));
	{
		auto expr = &((*_164730_m.alloc)._field_Parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0064735:;
		if (it != expr_end) {
			jule::I32 _16607_i = it - expr->begin();
			{
				jule::Str _16614_ident = (jule::Str::lit("part", 4) + _1a792ea63_Itoa(_16607_i));;
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("buf.append(", 11));
				_1ac895573_write((*(_self_))._field_oc, _16614_ident);
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1c0064735:;
			++it;
			_16607_i++;
			goto _iter_begin_1c0064735;
		}
		_iter_end_1c0064735:;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); })", 128));
}



inline void _1ac7d6261_strFromBytes(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1ac3d4d60_StrFromBytes> _166933_m) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::unsafe_from_bytes(", 29));
	_1ac7cbd4a_possibleRefExpr(_self_, (*(_166933_m))._field_Expr);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1ac7d6519_model(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Any _167526_m) {
	{
		auto &_match_expr{ _167526_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c006ca7e:;
			{
				_1ac895573_write((*(_self_))._field_oc, _167526_m.unsafe_cast<jule::Str>());
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1c006cc8d:;
			{
				_1ac895573_write((*(_self_))._field_oc, (*(_167526_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c006cd04:;
			{
				_1ac8a9b92_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _167526_m.unsafe_cast_ptr<_1aabecdb6_Type>());
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c006cd6a:;
			{
				_1ac7c93b9_constant(_self_, _167526_m.unsafe_cast_ptr<_1aa9b96cc_Const>());
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c006cdd1:;
			{
				_1ac7caec0_var(_self_, _167526_m.unsafe_cast_ptr<_1aab70795_Var>());
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c006ce47:;
			{
				_1ac7cb278_structureIns(_self_, _167526_m.unsafe_cast_ptr<_1aa969605_StructIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c006cead:;
			{
				_1ac7d0e09_funcInsCommon(_self_, _167526_m.unsafe_cast_ptr<_1aaa3e2ce_FnIns>());
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1c006db29:;
			{
				_1ac7ca288_unsafeBinary(_self_, (*(_167526_m.unsafe_cast_ptr<_1ac3d7181_UnsafeBinaryExpr>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c006db90:;
			{
				_1ac7cac17_binary(_self_, _167526_m.unsafe_cast_ptr<_1aaa2e0d2_BinaryExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c006dc06:;
			{
				_1ac7cb531_unary(_self_, _167526_m.unsafe_cast_ptr<_1aaa2e4ab_UnaryExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c006dc6c:;
			{
				_1ac7cb7d9_structureLit(_self_, _167526_m.unsafe_cast_ptr<_1aaa2ed80_StructLitExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c006dcd3:;
			{
				_1ac7cba92_allocStructure(_self_, _167526_m.unsafe_cast_ptr<_1aaa3017c_AllocStructLitExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c006dd49:;
			{
				_1ac7cc521_casting(_self_, _167526_m.unsafe_cast_ptr<_1aaa30633_CastingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c006ddc1:;
			{
				_1ac7ce204_funcCall(_self_, _167526_m.unsafe_cast_ptr<_1aaa30ed5_FnCallExpr>(), false);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c006de48:;
			{
				_1ac7ce4ac_slice(_self_, _167526_m.unsafe_cast_ptr<_1aaa313ae_SliceExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1c006dec0:;
			{
				_1ac7d0b51_array(_self_, _167526_m.unsafe_cast_ptr<_1aaa342e6_ArrayExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1c006e047:;
			{
				_1ac7cea1d_unsafeIndexing(_self_, _167526_m.unsafe_cast_ptr<_1ac3d747d_UnsafeIndexingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c006e0be:;
			{
				_1ac7ce765_indexing(_self_, _167526_m.unsafe_cast_ptr<_1aaa31865_IndexingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c006e146:;
			{
				_1ac7cecc6_anonFunc(_self_, _167526_m.unsafe_cast_ptr<_1aaa31d1b_AnonFnExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c006e1bd:;
			{
				_1ac7d007e_mapExpr(_self_, _167526_m.unsafe_cast_ptr<_1aaa325be_MapExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c006e245:;
			{
				_1ac7d0337_slicing(_self_, _167526_m.unsafe_cast_ptr<_1aaa32b52_SlicingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c006e2bc:;
			{
				_1ac7d05e0_traitSub(_self_, _167526_m.unsafe_cast_ptr<_1aaa331d5_TraitSubIdentExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c006e344:;
			{
				_1ac7d0898_structureSub(_self_, _167526_m.unsafe_cast_ptr<_1aaa33a76_StructSubIdentExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c006e3bb:;
			{
				_1ac7d146a_tuple(_self_, _167526_m.unsafe_cast_ptr<_1aaa345e3_TupleExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c006e443:;
			{
				_1ac7d19cb_printCall(_self_, _167526_m.unsafe_cast_ptr<_1aaa348e0_BuiltinPrintCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c006e4ba:;
			{
				_1ac7d1c84_printlnCall(_self_, _167526_m.unsafe_cast_ptr<_1aaa34bdc_BuiltinPrintlnCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c006e542:;
			{
				_1ac7d1723_newCall(_self_, _167526_m.unsafe_cast_ptr<_1aaa350b6_BuiltinNewCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c006e5b9:;
			{
				_1ac7d203c_panicCall(_self_, _167526_m.unsafe_cast_ptr<_1aaa35490_BuiltinPanicCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c006e641:;
			{
				_1ac7d22e5_errorCall(_self_, _167526_m.unsafe_cast_ptr<_1aaa37096_BuiltinErrorCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c006e6b8:;
			{
				_1ac7d36d1_makeCall(_self_, _167526_m.unsafe_cast_ptr<_1aaa35946_BuiltinMakeCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c006e740:;
			{
				_1ac7d3eea_appendCall(_self_, _167526_m.unsafe_cast_ptr<_1aaa35d20_BuiltinAppendCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c006e7b7:;
			{
				_1ac7d259d_copyCall(_self_, _167526_m.unsafe_cast_ptr<_1aaa36bbc_BuiltinCopyCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c006e83e:;
			{
				_1ac7d2856_lenCall(_self_, _167526_m.unsafe_cast_ptr<_1aaa3611c_BuiltinLenCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c006e8b6:;
			{
				_1ac7d2b0e_capCall(_self_, _167526_m.unsafe_cast_ptr<_1aaa36419_BuiltinCapCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c006e93d:;
			{
				_1ac7d2db7_deleteCall(_self_, _167526_m.unsafe_cast_ptr<_1aaa367e3_BuiltinDeleteCallExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c006e9b5:;
			{
				_1ac7d42a3_sizeof(_self_, _167526_m.unsafe_cast_ptr<_1aaa37393_SizeofExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1c006ea3c:;
			{
				_1ac7d455b_alignof(_self_, _167526_m.unsafe_cast_ptr<_1aaa37a47_AlignofExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c006eab4:;
			{
				_1ac7d4814_runeLit(_self_, _167526_m.unsafe_cast_ptr<_1aaa37c34_RuneExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c006eb3b:;
			{
				_1ac7d4abc_structureStatic(_self_, _167526_m.unsafe_cast_ptr<_1aaa33e1c_StructStaticIdentExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c006ebb3:;
			{
				_1ac7d4d75_backendEmit(_self_, _167526_m.unsafe_cast_ptr<_1aaa380a8_BackendEmitExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c006ec3a:;
			{
				_1ac7d512d_free(_self_, _167526_m.unsafe_cast_ptr<_1aaa383a5_FreeExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1c006ecb2:;
			{
				_1ac7d53d6_strComp(_self_, _167526_m.unsafe_cast_ptr<_1ac3d6801_StrCompExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1c006ed39:;
			{
				_1ac7caec0_var(_self_, (*(_167526_m.unsafe_cast_ptr<_1ac3d62b2_RefExpr>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1c006edb1:;
			{
				_1ac7d568e_emptyCompare(_self_, _167526_m.unsafe_cast_ptr<_1ac3d5eb5_EmptyCompareExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1c006ee38:;
			{
				_1ac7d5947_unsafeDeref(_self_, _167526_m.unsafe_cast_ptr<_1ac3d8407_UnsafeDerefExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1c006eeb0:;
			{
				_1ac7d5c00_unsafeCasting(_self_, _167526_m.unsafe_cast_ptr<_1ac3d8935_UnsafeCastingExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1c0070037:;
			{
				_1ac7ce204_funcCall(_self_, (*(_167526_m.unsafe_cast_ptr<_1ac3d53c1_FnCallIgnoreExceptionalExpr>()))._field_Base, true);
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1c00700ae:;
			{
				_1ac7d5ea8_strConcat(_self_, _167526_m.unsafe_cast_ptr<_1ac3d5745_StrConcatExpr>());
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1c0070136:;
			{
				_1ac7d6261_strFromBytes(_self_, _167526_m.unsafe_cast_ptr<_1ac3d4d60_StrFromBytes>());
			}
		}
		else {
			_case_begin_1c006cc27:;
			{
				_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1c006cbb1:;
	};
}



inline jule::Bool _1ac7d685a_handleFieldByDefault(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa9689cd_FieldIns>* _178142_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_178142_f))))._field_Default != nullptr)) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1ac7e02c0_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_178142_f))))._field_Decl));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1ac7cbd4a_possibleRefExpr(_self_, (*(*((*(_178142_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1ac8b1a45_ableToInit(&((*((*(_178142_f))))._field_Type))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1ac7e02c0_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_178142_f))))._field_Decl));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1ac7d76d5_initExpr(_self_, (*((*(_178142_f))))._field_Type);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ac7d6b13_initStructLit(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aa969605_StructIns>* _180235_s) {
	if (_1ab619c99_IsStructBinded((*(_180235_s)))) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1ac7cb278_structureIns(_self_, (*(_180235_s)));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1ac7cb278_structureIns(_self_, (*(_180235_s)));
	_1ac895573_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	jule::Bool _18117_inited = false;;
	{
		auto expr = &((*((*(_180235_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0091b80:;
		if (it != expr_end) {
			jule::Ptr<_1aa9689cd_FieldIns> _181215_f = *it;
			{
				if (_18117_inited) {
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_18117_inited=_1ac7d685a_handleFieldByDefault(_self_, &(_181215_f));
			}
			_iter_next_1c0091b80:;
			++it;
			goto _iter_begin_1c0091b80;
		}
		_iter_end_1c0091b80:;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1ac7d6dbb_fillCollectionByDefault(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aabecdb6_Type>* _182445_elem) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ac7d76d5_initExpr(_self_, (*(_182445_elem)));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1ac7d7174_initCollection(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aabecdb6_Type>* _183936_elem) {
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1ac7d6dbb_fillCollectionByDefault(_self_, _183936_elem);
}



inline void _1ac7d742c_initArray(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aac0d4e2_Arr>* _185331_arr) {
	if (((*((*(_185331_arr))))._field_N == 0LL)) {
		_1ac8a82ab_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_185331_arr)));
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1ac8a82ab_array((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_185331_arr)));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1ac7d7174_initCollection(_self_, &((*((*(_185331_arr))))._field_Elem));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1ac7d76d5_initExpr(jule::Ptr<_1ac7c7b04_exprCoder> _self_, jule::Ptr<_1aabecdb6_Type> _186729_t) {
	if (_1aac00726_NilCompatible(_186729_t.ptr())) {
		if ((_1aac02d00_Map(_186729_t) != nullptr)) {
			_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186729_t);
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1aac014e6_Ptr(_186729_t.ptr()) != nullptr)) {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186729_t);
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1aac0bcb5_Tuple> _18827_tup = _1aac03086_Tup(_186729_t.ptr());;
	if ((_18827_tup != nullptr)) {
		_1ac8ae46b_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _18827_tup);
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_18827_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c00adb03:;
			if (it != expr_end) {
				jule::I32 _18869_i = it - expr->begin();
				jule::Ptr<_1aabecdb6_Type> _188616_tt = *it;
				{
					if ((!(_1ac8b1d20_shouldInitialized(&(_188616_tt))))) {
						goto _iter_next_1c00adb03;
					};
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1ac895573_write((*(_self_))._field_oc, _1a792ea63_Itoa(_18869_i));
					_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1ac7d76d5_initExpr(_self_, _188616_tt);
					if ((((*(_18827_tup))._field_Types.len() - _18869_i) > 1LL)) {
						_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1c00adb03:;
				++it;
				_18869_i++;
				goto _iter_begin_1c00adb03;
			}
			_iter_end_1c00adb03:;
		};
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1aaa490db_Enum> _19017_enm = _1aac0177c_Enum(_186729_t);;
	if ((_19017_enm != nullptr)) {
		_1ac7d6519_model(_self_, (*((*((*((*_19017_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1aac06bc2_Prim> _19063_prim = _1aac00ec9_Prim(_186729_t);;
	if ((_19063_prim != nullptr)) {
		if (_1aaabebcd_IsNum((*_19063_prim.alloc)._field_Kind)) {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1aac09e06_IsBool(_19063_prim)) {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1aac0a18c_IsStr(_19063_prim)) {
			_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1aac01c99_Arr(_186729_t) != nullptr)) {
		jule::Ptr<_1aac0d4e2_Arr> _19188_arr = _1aac01c99_Arr(_186729_t);;
		_1ac7d742c_initArray(_self_, &(_19188_arr));
		return;;
	};
	jule::Ptr<_1aa969605_StructIns> _19227_s = _1aac0254c_Struct(_186729_t);;
	if ((_19227_s != nullptr)) {
		_1ac7d6b13_initStructLit(_self_, &(_19227_s));
		return;;
	};
	_1ac8a9b92_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186729_t);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1ac7da2cb_TestCoder_eq(_1ac7da2cb_TestCoder *_self_, _1ac7da2cb_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1ac7da2cb_TestCoder> static__1ac7da782_New(jule::Ptr<_1ac894d58_ObjectCoder>* _2021_oc) {
	return jule::new_ptr<_1ac7da2cb_TestCoder>(_1ac7da2cb_TestCoder{._field_t=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_oc=(*(_2021_oc))});;
}



inline jule::Ptr<_1aab2ee08_ImportInfo> _1ac7daa18_findTestingPackage(jule::Ptr<_1ac7da2cb_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c00bce20:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _2715_imp = *it;
			{
				if ((*(_2715_imp))._field_LinkPath.equal("std/testing", 11)) {
					return _2715_imp;;
				};
			}
			_iter_next_1c00bce20:;
			++it;
			goto _iter_begin_1c00bce20;
		}
		_iter_end_1c00bce20:;
	};
	return nullptr;;
}



inline void _1ac7dacc1_appendTest(jule::Ptr<_1ac7da2cb_TestCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _3531_f) {
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac7db50d_callTmReset(_self_);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_1ac7d8494_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_3531_f))._field_Decl))._field_Ident);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_1ac895e25_indent((*(_self_))._field_oc);
	static__1ac7de335_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3531_f));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1ac7db079_appendPackageTests(jule::Ptr<_1ac7da2cb_TestCoder> _self_, jule::Ptr<_1aab3267a_Package>* _5040_p) {
	{
		auto expr = &((*((*(_5040_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c00c45ec:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _5115_file = *it;
			{
				{
					auto expr = &((*(_5115_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c00c5114:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3b221_Fn> _5216_f = *it;
						{
							if (_1ab61a8b0_HasDirective(&((*(_5216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1ac7dacc1_appendTest(_self_, (*_5216_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1c00c5114:;
						++it;
						goto _iter_begin_1c00c5114;
					}
					_iter_end_1c00c5114:;
				};
			}
			_iter_next_1c00c45ec:;
			++it;
			goto _iter_begin_1c00c45ec;
		}
		_iter_end_1c00c45ec:;
	};
}



inline jule::Bool _1ac7db310_readyTestingPackage(jule::Ptr<_1ac7da2cb_TestCoder> _self_) {
	jule::Ptr<_1aab2ee08_ImportInfo> _617_p = _1ac7daa18_findTestingPackage(_self_);;
	if ((_617_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_1aab31118_FindStruct(_617_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_1aa96a66c_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1aa96a66c_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1aa96a66c_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1ac7db50d_callTmReset(jule::Ptr<_1ac7da2cb_TestCoder> _self_) {
	static__1ac7de049_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ac7db70b_callTmFailed(jule::Ptr<_1ac7da2cb_TestCoder> _self_) {
	static__1ac7de049_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ac7db909_callTmSkipped(jule::Ptr<_1ac7da2cb_TestCoder> _self_) {
	static__1ac7de049_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1ac7dbb07_Serialize(jule::Ptr<_1ac7da2cb_TestCoder> _self_) {
	_1ac8a25c4_serializeHead((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	if ((!(_1ac7db310_readyTestingPackage(_self_)))) {
		_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
		_1ac895c27_doneIndent((*(_self_))._field_oc);
		_1ac8a18ae_end((*(_self_))._field_oc);
		return;;
	};
	_1ace17078_Builder _1097_tb = static__1ace178c5_New(40LL);;
	_1ac8a7e48_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1097_tb), (*_self_.alloc)._field_t);
	_1ac8a5d8b_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _1ace19388_Buf(&_1097_tb));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1ac89582b_writeBytes((*(_self_))._field_oc, _1ace19388_Buf(&_1097_tb));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1ac895a29_addIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1ac7db70b_callTmFailed(_self_);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1ac7db909_callTmSkipped(_self_);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1ac7db079_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1ac895c27_doneIndent((*(_self_))._field_oc);
	_1ac895e25_indent((*(_self_))._field_oc);
	_1ac895573_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1ac8a18ae_end((*(_self_))._field_oc);
}








inline jule::Bool _1ac7dce27_identCoder_eq(_1ac7dce27_identCoder *_self_, _1ac7dce27_identCoder _other_) { return true; }

inline void static__1ac7dd466_writeIdentTo(_1ace17078_Builder* _2630_buf, jule::Str* _2654_ident) {
	{
		auto expr = _2654_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c00e64ba:;
		if (it != expr_end) {
			jule::U8 *_2710_b = it;
			{
				if (((*(_2710_b)) >= 128LLU)) {
					goto _julec_label_1c00e6850;
				};
			}
			_iter_next_1c00e64ba:;
			++it;
			goto _iter_begin_1c00e64ba;
		}
		_iter_end_1c00e64ba:;
	};
	({
		auto except = _1ace18057_WriteStr(_2630_buf, (*(_2654_ident)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:34:3"));
		(except.result);
	});
	return;;
	_julec_label_1c00e6850:;
	{
		auto expr = _2654_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _3710_r;
		_iter_begin_1c00e7400:;
		__jule_runeStep(it, end - it, &_3710_r, &len);
		if (it < end) {
			{
				if ((_3710_r < 128LL)) {
					({
						auto except = _1ace18310_WriteByte(_2630_buf, static_cast<jule::U8>(_3710_r));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:41:5"));
					});
					goto _iter_next_1c00e7400;
				};
				({
					auto except = _1ace18057_WriteStr(_2630_buf, _1a792e799_FmtInt(static_cast<jule::I64>(_3710_r), 15LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:45:4"));
					(except.result);
				});
			}
			_iter_next_1c00e7400:;
			it += len;
			goto _iter_begin_1c00e7400;
		}
	};
}



inline void static__1ac7dd80c_toOut(_1ace17078_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr) {
	({
		auto except = _1ace18310_WriteByte(_5423_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:55:3"));
	});
	if ((_5458_addr != 0LLU)) {
		({
			auto except = _1ace18057_WriteStr(_5423_buf, _1a792e3d1_FmtUint(static_cast<jule::U64>(_5458_addr), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:57:4"));
			(except.result);
		});
		({
			auto except = _1ace18310_WriteByte(_5423_buf, '_');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:58:4"));
		});
	};
	static__1ac7dd466_writeIdentTo(_5423_buf, &(_5446_ident));
}



inline void static__1ac7ddc5d_toLocal(_1ace17078_Builder* _6925_buf, jule::I32 _6948_row, jule::I32 _6958_col, jule::Str* _6969_ident) {
	({
		auto except = _1ace18310_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:70:3"));
	});
	({
		auto except = _1ace18057_WriteStr(_6925_buf, _1a792ea63_Itoa(_6948_row));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:71:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_6925_buf, _1a792ea63_Itoa(_6958_col));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:72:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:73:3"));
	});
	static__1ac7dd466_writeIdentTo(_6925_buf, _6969_ident);
}



inline void static__1ac7de049_func(_1ace17078_Builder* _7722_buf, jule::Ptr<_1aaa3b221_Fn>* _7750_f) {
	{
		
		if ((*((*(_7750_f))))._field_Binded) {
			_case_begin_1c00eb646:;
			{
				({
					auto except = _1ace18057_WriteStr(_7722_buf, (*((*(_7750_f))))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:80:4"));
					(except.result);
				});
				return;;
			}
		}
		else if (_1aaa3b95d_IsMethod((*(_7750_f)).ptr())) {
			_case_begin_1c00eb6e0:;
			{
				if ((*((*(_7750_f))))._field_Statically) {
					({
						auto except = _1ace18057_WriteStr(_7722_buf, jule::Str::lit("static_", 7));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:84:5"));
						(except.result);
					});
				};
			}
		}
		_match_end_1c00eb525:;
	};
	jule::Ptr<_1aa0ecc34_Directive> _873_export = _1ab61a4e7_FindDirective(&((*((*(_7750_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_873_export != nullptr)) {
		({
			auto except = _1ace18057_WriteStr(_7722_buf, (*((*_873_export.alloc)._field_Args[0LL]))._field_Kind);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:89:4"));
			(except.result);
		});
		return;;
	};
	static__1ac7dd80c_toOut(_7722_buf, (*((*(_7750_f))))._field_Ident, static_cast<jule::Uintptr>((*(_7750_f))));
}



inline void static__1ac7de335_funcIns(_1ace17078_Builder* _9525_buf, jule::Ptr<_1aaa3e2ce_FnIns>* _9553_f) {
	if (_1aaa40797_IsBuiltin((*(_9553_f)).ptr())) {
		({
			auto except = _1ace18057_WriteStr(_9525_buf, jule::Str::lit("jule::", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:99:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:100:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*((*(_9553_f))))._field_Decl))._field_Binded || ((*((*(_9553_f))))._field_Generics.len() == 0LL))) {
		static__1ac7de049_func(_9525_buf, &((*((*(_9553_f))))._field_Decl));
		return;;
	};
	static__1ac7dd80c_toOut(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>((*(_9553_f))));
}



inline void static__1ac7de621_traitDecl(_1ace17078_Builder* _11027_buf, jule::Ptr<_1aaa46935_Trait> _11050_t) {
	static__1ac7dd80c_toOut(_11027_buf, (*(_11050_t))._field_Ident, static_cast<jule::Uintptr>(_11050_t));
}



inline void static__1ac7de90c_param(_1ace17078_Builder* _11423_buf, jule::Ptr<_1aaa3974c_Param>* _11447_p) {
	if ((_1aa0da99c_IsAnonIdent((*((*(_11447_p))))._field_Ident) || _1aa0da6d3_IsIgnoreIdent((*((*(_11447_p))))._field_Ident))) {
		return;;
	};
	if (_1aaa39d9b_IsSelf((*(_11447_p)).ptr())) {
		({
			auto except = _1ace18057_WriteStr(_11423_buf, jule::Str::lit("_self_", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:119:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*(_11447_p))))._field_Token == nullptr)) {
		static__1ac7ddc5d_toLocal(_11423_buf, 0LL, 0LL, &((*((*(_11447_p))))._field_Ident));
		return;;
	};
	static__1ac7ddc5d_toLocal(_11423_buf, (*((*((*(_11447_p))))._field_Token))._field_Row, (*(*((*(_11447_p))))._field_Token.alloc)._field_Column, &((*((*(_11447_p))))._field_Ident));
}



inline void static__1ac7debe8_structure(_1ace17078_Builder* _12927_buf, jule::Ptr<_1aa966767_Struct>* _12951_s) {
	if ((*((*(_12951_s))))._field_Binded) {
		if ((!(_1ab61a8b0_HasDirective(&((*((*(_12951_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			({
				auto except = _1ace18057_WriteStr(_12927_buf, jule::Str::lit("struct ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:132:5"));
				(except.result);
			});
		};
		({
			auto except = _1ace18057_WriteStr(_12927_buf, (*((*(_12951_s))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:134:4"));
			(except.result);
		});
		return;;
	};
	static__1ac7dd80c_toOut(_12927_buf, (*((*(_12951_s))))._field_Ident, static_cast<jule::Uintptr>((*(_12951_s))));
}



inline void static__1ac7deed4_structureIns(_1ace17078_Builder* _14030_buf, jule::Ptr<_1aa969605_StructIns>* _14054_s) {
	if (((*((*((*(_14054_s))))._field_Decl))._field_Binded || ((*((*(_14054_s))))._field_Generics.len() == 0LL))) {
		static__1ac7debe8_structure(_14030_buf, &((*((*(_14054_s))))._field_Decl));
		return;;
	};
	static__1ac7dd80c_toOut(_14030_buf, (*((*((*(_14054_s))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>((*(_14054_s))));
}



inline void static__1ac7e02c0_field(_1ace17078_Builder* _14823_buf, jule::Ptr<_1aa965447_Field>* _14847_f) {
	if ((*((*((*(_14847_f))))._field_Owner))._field_Binded) {
		({
			auto except = _1ace18057_WriteStr(_14823_buf, (*((*(_14847_f))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:150:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1ace18057_WriteStr(_14823_buf, jule::Str::lit("_field_", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:153:3"));
		(except.result);
	});
	static__1ac7dd466_writeIdentTo(_14823_buf, &((*((*(_14847_f))))._field_Ident));
}



inline void static__1ac7e05ab_var(_1ace17078_Builder* _15821_buf, jule::Ptr<_1aab70795_Var> _15848_v) {
	{
		
		if ((*(_15848_v))._field_Binded) {
			_case_begin_1c010b1b1:;
			{
				({
					auto except = _1ace18057_WriteStr(_15821_buf, (*_15848_v.alloc)._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:161:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1c010b975:;
			{
				({
					auto except = _1ace18057_WriteStr(_15821_buf, jule::Str::lit("except.error", 12));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:163:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1c010b9db:;
			{
				({
					auto except = _1ace18057_WriteStr(_15821_buf, jule::Str::lit("_self_", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:165:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_RetOrder == -1LL)) {
			_case_begin_1c010aac8:;
			{
				({
					auto except = _1ace18057_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result", 18));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:169:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_RetOrder >= 0LL)) {
			_case_begin_1c010ab3e:;
			{
				({
					auto except = _1ace18057_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:171:4"));
					(except.result);
				});
				({
					auto except = _1ace18057_WriteStr(_15821_buf, _1a792ea63_Itoa((*_15848_v.alloc)._field_RetOrder));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:172:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_Scope != nullptr)) {
			_case_begin_1c010aba5:;
			{
				static__1ac7ddc5d_toLocal(_15821_buf, (*((*_15848_v.alloc)._field_Token))._field_Row, (*(*(_15848_v))._field_Token.alloc)._field_Column, &((*_15848_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1c010aa62:;
			{
				jule::Ptr<_1aa0ecc34_Directive> _1764_export = _1ab61a4e7_FindDirective(&((*_15848_v.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1764_export != nullptr)) {
					({
						auto except = _1ace18057_WriteStr(_15821_buf, (*((*_1764_export.alloc)._field_Args[0LL]))._field_Kind);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:178:5"));
						(except.result);
					});
					return;;
				};
				static__1ac7dd80c_toOut(_15821_buf, (*_15848_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_15848_v));
			}
		}
		_match_end_1c010a952:;
	};
}



inline void static__1ac7e0897_iterBegin(_1ace17078_Builder* _18527_buf, jule::Uintptr _18550_it) {
	({
		auto except = _1ace18057_WriteStr(_18527_buf, jule::Str::lit("_iter_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:186:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_18527_buf, _1a792e3d1_FmtUint(static_cast<jule::U64>(_18550_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:187:3"));
		(except.result);
	});
}



inline void static__1ac7e0b83_iterEnd(_1ace17078_Builder* _19025_buf, jule::Uintptr _19048_it) {
	({
		auto except = _1ace18057_WriteStr(_19025_buf, jule::Str::lit("_iter_end_", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:191:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_19025_buf, _1a792e3d1_FmtUint(static_cast<jule::U64>(_19048_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:192:3"));
		(except.result);
	});
}



inline void static__1ac7e0e6e_iterNext(_1ace17078_Builder* _19526_buf, jule::Uintptr _19549_it) {
	({
		auto except = _1ace18057_WriteStr(_19526_buf, jule::Str::lit("_iter_next_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:196:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_19526_buf, _1a792e3d1_FmtUint(static_cast<jule::U64>(_19549_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:197:3"));
		(except.result);
	});
}



inline void static__1ac7e125a_label(_1ace17078_Builder* _20023_buf, jule::Uintptr _20046_u) {
	({
		auto except = _1ace18057_WriteStr(_20023_buf, jule::Str::lit("_julec_label_", 13));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:201:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_20023_buf, _1a792e3d1_FmtUint(static_cast<jule::U64>(_20046_u), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:202:3"));
		(except.result);
	});
}



inline void static__1ac7e1546_matchEnd(_1ace17078_Builder* _20526_buf, jule::Uintptr _20549_m) {
	({
		auto except = _1ace18057_WriteStr(_20526_buf, jule::Str::lit("_match_end_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:206:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_20526_buf, _1a792e3d1_FmtUint(static_cast<jule::U64>(_20549_m), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:207:3"));
		(except.result);
	});
}



inline void static__1ac7e1832_caseBegin(_1ace17078_Builder* _21027_buf, jule::Uintptr _21050_c) {
	({
		auto except = _1ace18057_WriteStr(_21027_buf, jule::Str::lit("_case_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:211:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_21027_buf, _1a792e3d1_FmtUint(static_cast<jule::U64>(_21050_c), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:212:3"));
		(except.result);
	});
}








inline jule::Bool _1ac8925a3_SerializationInfo_eq(_1ac8925a3_SerializationInfo *_self_, _1ac8925a3_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1ac8929c1_traitCast_eq(_1ac8929c1_traitCast *_self_, _1ac8929c1_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1ac892d9a_anonHash_eq(_1ac892d9a_anonHash *_self_, _1ac892d9a_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}










inline jule::Bool _1ac8935b5_metadata_eq(_1ac8935b5_metadata *_self_, _1ac8935b5_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_1ac894d58_ObjectCoder> static__1ac8952ba_New(jule::Ptr<_1ab61326a_IR>* _11921_ir, _1ac8925a3_SerializationInfo _11935_info) {
	jule::Ptr<_1ac894d58_ObjectCoder> _1207_oc = jule::new_ptr<_1ac894d58_ObjectCoder>(_1ac894d58_ObjectCoder{._field_Buf=_1ace17078_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_1ace17078_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_1ace17078_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_1ace17078_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_1ace17078_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_1ace17078_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_11921_ir)), ._field_info=_11935_info, ._field_anons=jule::Slice<jule::Ptr<_1ac892d9a_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__1beac6a4a_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr), ._field_traitCastMap=jule::Slice<_1ac8929c1_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>>(nullptr), ._field_traitMap=jule::Slice<jule::Ptr<_1ac8932b8_traitHash>>(nullptr), ._field_traitMetMap=static__1beb1e642_make(), ._field_ec=jule::Ptr<_1ac7c7b04_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1ac7bba4e_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1ac8a498e_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_1ac8935b5_metadata{._field_concurrent=false}});;
	(*(_1207_oc))._field_ec=static__1ac7c8000_new(&(_1207_oc));
	(*(_1207_oc))._field_sc=static__1ac7bc236_new(&(_1207_oc));
	(*(_1207_oc))._field_tc=static__1ac8a4ede_new(&(_1207_oc));
	return _1207_oc;;
}



inline void _1ac895573_write(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Str _13222_s) {
	({
		auto except = _1ace18057_WriteStr(&(*(_self_))._field_Buf, _13222_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:133:3"));
		(except.result);
	});
}



inline void _1ac89582b_writeBytes(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Slice<jule::U8> _13627_b) {
	({
		auto except = _1ace17c16_Write(&(*(_self_))._field_Buf, _13627_b);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:137:3"));
		(except.result);
	});
}



inline void _1ac895a29_addIndent(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1ac895c27_doneIndent(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1ac895e25_indent(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	({
		auto except = _1ace17c16_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:152:3"));
		(except.result);
	});
}



inline jule::I32 _1ac896266_findAnyType(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aabecdb6_Type>* _15533_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c011e0b4:;
		if (it != expr_end) {
			jule::I32 _1568_i = it - expr->begin();
			jule::Ptr<_1aabecdb6_Type> _15615_at = *it;
			{
				if (_1aabed603_Equal(_15615_at, (*(_15533_t)))) {
					return _1568_i;;
				};
			}
			_iter_next_1c011e0b4:;
			++it;
			_1568_i++;
			goto _iter_begin_1c011e0b4;
		}
		_iter_end_1c011e0b4:;
	};
	return -1LL;;
}



inline jule::I32 _1ac8965a7_pushCoSpawn(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _16432_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c011eb53:;
		if (it != expr_end) {
			jule::I32 _1657_i = it - expr->begin();
			jule::Ptr<_1aaa3e2ce_FnIns> _16510_sf = *it;
			{
				if (((*(_16510_sf))._field_Params.len() == (*(_16432_f))._field_Params.len())) {
					{
						auto expr = &((*_16510_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c01216e3:;
						if (it != expr_end) {
							jule::I32 _1679_j = it - expr->begin();
							jule::Ptr<_1aaa3d179_ParamIns> *_16712_sp = it;
							{
								if ((!(_1aabed603_Equal((*((*(_16712_sp))))._field_Type, (*((*(_16510_sf))._field_Params[_1679_j]))._field_Type)))) {
									goto _iter_end_1c01216e3;
								};
							}
							_iter_next_1c01216e3:;
							++it;
							_1679_j++;
							goto _iter_begin_1c01216e3;
						}
						_iter_end_1c01216e3:;
					};
					return _1657_i;;
				};
			}
			_iter_next_1c011eb53:;
			++it;
			_1657_i++;
			goto _iter_begin_1c011eb53;
		}
		_iter_end_1c011eb53:;
	};
	jule::I32 _1753_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1763_is = _1a792ea63_Itoa(_1753_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16432_f; __jule_collection; }));
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:178:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:179:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1763_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:180:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:181:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:184:3"));
	});
	_1ac8a982e_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _16432_f);
	({
		auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:186:3"));
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:187:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:188:3"));
	});
	({
		auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:189:3"));
	});
	{
		auto expr = &((*(_16432_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0126b7c:;
		if (it != expr_end) {
			jule::I32 _1928_j = it - expr->begin();
			jule::Ptr<_1aaa3d179_ParamIns> _19215_p = *it;
			{
				({
					auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:193:4"));
				});
				_1ac8a9b92_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_19215_p))._field_Type);
				({
					auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:195:4"));
				});
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:196:4"));
					(except.result);
				});
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1a792ea63_Itoa(_1928_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:197:4"));
					(except.result);
				});
				({
					auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:198:4"));
				});
				({
					auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:199:4"));
				});
			}
			_iter_next_1c0126b7c:;
			++it;
			_1928_j++;
			goto _iter_begin_1c0126b7c;
		}
		_iter_end_1c0126b7c:;
	};
	({
		auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:201:3"));
	});
	({
		auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:202:3"));
	});
	({
		auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:203:3"));
	});
	{
		
		if ((_1bb095ced_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1c012ba83:;
			{
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:207:4"));
					(except.result);
				});
			}
		}
		else if (_1ace2a81c_IsUnix(_1bb095ced_OS)) {
			_case_begin_1c012b753:;
			{
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:209:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1c01235e6:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:211:4"));;
			}
		}
		_match_end_1c012b6dc:;
	};
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:213:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1763_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:214:3"));
		(except.result);
	});
	;
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:216:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:217:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:218:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:219:3"));
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:220:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1763_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:221:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:222:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:223:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:224:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:225:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1763_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:226:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:227:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:228:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:229:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:230:3"));
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:231:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:232:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:233:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:234:3"));
		(except.result);
	});
	{
		auto expr = &((*_16432_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0134508:;
		if (it != expr_end) {
			jule::I32 _2377_j = it - expr->begin();
			{
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:238:4"));
					(except.result);
				});
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:239:4"));
					(except.result);
				});
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:240:4"));
					(except.result);
				});
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1a792ea63_Itoa(_2377_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:241:4"));
					(except.result);
				});
				if ((((*_16432_f.alloc)._field_Params.len() - _2377_j) > 1LL)) {
					({
						auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:243:5"));
						(except.result);
					});
				};
			}
			_iter_next_1c0134508:;
			++it;
			_2377_j++;
			goto _iter_begin_1c0134508;
		}
		_iter_end_1c0134508:;
	};
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:246:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:248:3"));
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:249:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:250:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:251:3"));
		(except.result);
	});
	{
		
		if ((_1bb095ced_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1c0138ac3:;
			{
				({
					auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:254:4"));
				});
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:255:4"));
					(except.result);
				});
			}
		}
		else if (_1ace2a81c_IsUnix(_1bb095ced_OS)) {
			_case_begin_1c0138760:;
			{
				({
					auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:257:4"));
				});
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:258:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1c012d9ec:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:260:4"));;
			}
		}
		_match_end_1c01386e9:;
	};
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:262:3"));
		(except.result);
	});
	return _1753_i;;
}



inline jule::I32 _1ac8968e8_pushDealloc(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aabecdb6_Type> _26732_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c013b0c0:;
		if (it != expr_end) {
			jule::I32 _2687_i = it - expr->begin();
			jule::Ptr<_1aabecdb6_Type> _26810_dt = *it;
			{
				if (_1aabed603_Equal(_26810_dt, _26732_t)) {
					return _2687_i;;
				};
			}
			_iter_next_1c013b0c0:;
			++it;
			_2687_i++;
			goto _iter_begin_1c013b0c0;
		}
		_iter_end_1c013b0c0:;
	};
	jule::I32 _2733_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _26732_t; __jule_collection; }));
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:275:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_deallocObj, _1a792ea63_Itoa(_2733_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:276:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:277:3"));
		(except.result);
	});
	_1ac8a9b92_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _26732_t);
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:279:3"));
		(except.result);
	});
	return _2733_i;;
}



inline jule::Str _1ac896c39_pushAnonFn(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa31d1b_AnonFnExpr>* _28332_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_28332_m))))._field_Func))._field_CalledCo);
	jule::Bool _2863_closure = _1ab618e41_IsClosure(_28332_m);;
	if (_2863_closure) {
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:289:4"));
			(except.result);
		});
		jule::I32 _2904_l = _1ace18d6b_Len(&(*_self_.alloc)._field_anonObj);;
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:291:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anonObj, _1a792e3d1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28332_m))))._field_Func)), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:292:4"));
			(except.result);
		});
		__jule_func_result=__jule_bytesToStr(_1ace19388_Buf(&(*_self_.alloc)._field_anonObj).slice(_2904_l));
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:294:4"));
			(except.result);
		});
		{
			auto expr = &((*((*(_28332_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0143e63:;
			if (it != expr_end) {
				jule::Ptr<_1aab70795_Var> _29516_v = *it;
				{
					({
						auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:296:5"));
					});
					_1ac8a9b92_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_29516_v))._field_TypeSym))._field_Type);
					({
						auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:298:5"));
					});
					if ((*_29516_v.alloc)._field_Reference) {
						({
							auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:300:6"));
						});
					};
					static__1ac7e05ab_var(&((*_self_.alloc)._field_anonObj), _29516_v);
					({
						auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:303:5"));
						(except.result);
					});
				}
				_iter_next_1c0143e63:;
				++it;
				goto _iter_begin_1c0143e63;
			}
			_iter_end_1c0143e63:;
		};
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:305:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:308:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:309:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:310:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:311:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:312:4"));
			(except.result);
		});
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1a792e3d1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28332_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac892d9a_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1ac892d9a_anonHash>(_1ac892d9a_anonHash{._field_expr=(*(_28332_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1ac89caca_anonFuncInsDecl(_self_, _28332_m, __jule_func_result);
	({
		auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:321:3"));
	});
	return __jule_func_result;;
}



inline jule::I32 _1ac89707a_pushAnyType(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aabecdb6_Type> _32532_t) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result=_1ac896266_findAnyType(_self_, &(_32532_t));
	if ((__jule_func_result != -1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32532_t; __jule_collection; }));
	jule::Str _3323_si = _1a792ea63_Itoa(__jule_func_result);;
	if ((_1aac01260_Sptr(_32532_t.ptr()) != nullptr)) {
		_1ace17078_Builder _3348_elemKind = static__1ace178c5_New(40LL);;
		_1ac8a9b92_kind((*_self_.alloc)._field_tc.ptr(), &(_3348_elemKind), (*(_1aac01260_Sptr(_32532_t)))._field_Elem);
		jule::I32 _3384_di = _1ac8968e8_pushDealloc(_self_, (*(_1aac01260_Sptr(_32532_t)))._field_Elem);;
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:341:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:342:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:343:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:344:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _1a792ea63_Itoa(_3384_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:345:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:346:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:349:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:350:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:351:4"));
			(except.result);
		});
		_1ac8a5d8b_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _1ace19388_Buf(&_3348_elemKind));
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:353:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:354:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:355:4"));
			(except.result);
		});
	} else {
		_1ace17078_Builder _3578_kindB = static__1ace178c5_New(40LL);;
		_1ac8a9b92_kind((*_self_.alloc)._field_tc.ptr(), &(_3578_kindB), _32532_t);
		jule::Str _3594_kind = _1ace188d7_Str(&_3578_kindB);;
		jule::I32 _3624_di = _1ac8968e8_pushDealloc(_self_, _32532_t);;
		jule::Str _3678_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
		_3678_lmodel+=_3594_kind;
		_3678_lmodel+=jule::Str::lit("*>(", 3);
		jule::Str _3708_rmodel = _3678_lmodel;;
		_3708_rmodel+=jule::Str::lit("other)", 6);
		_3678_lmodel+=jule::Str::lit("alloc)", 6);
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:374:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:375:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { ", 41));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:376:4"));
			(except.result);
		});
		if (_1aabeee73_Comparable(_32532_t.ptr())) {
			({
				auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("return ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:378:5"));
				(except.result);
			});
			_1ac7c9ed0__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3678_lmodel), &(_3708_rmodel), &(_32532_t), &(_32532_t), static_cast<jule::U32>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			({
				auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:380:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_panic((", 14));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:382:5"));
				(except.result);
			});
			({
				auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::U8", 8));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:383:5"));
				(except.result);
			});
			({
				auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*)\"runtime: comparing uncomparable type \" \"", 43));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:384:5"));
				(except.result);
			});
			jule::I32 _3859_n = _1ace18d6b_Len(&(*_self_.alloc)._field_anyObj);;
			_1ac7d8164_cstrBytes(&((*_self_.alloc)._field_anyObj), _1aabed2b2_Str(_32532_t.ptr()));
			_3859_n=(_1ace18d6b_Len(&(*_self_.alloc)._field_anyObj) - _3859_n);
			_3859_n+=37LL;
			({
				auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("\", ", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:389:5"));
				(except.result);
			});
			({
				auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _1a792ea63_Itoa(_3859_n));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:390:5"));
				(except.result);
			});
			({
				auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("); return false; }\n", 19));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:391:5"));
				(except.result);
			});
		};
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:395:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:396:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:397:4"));
			(except.result);
		});
		jule::Ptr<_1aaa3e2ce_FnIns> _3988_f = _1ab61bae2_FindFnGenericInstance(&((*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32532_t; __jule_collection; }));;
		static__1ac7de335_funcIns(&((*_self_.alloc)._field_anyObj), &(_3988_f));
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:400:4"));
			(except.result);
		});
		if ((_1aac014e6_Ptr(_32532_t.ptr()) == nullptr)) {
			({
				auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:402:5"));
				(except.result);
			});
			({
				auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _3594_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:403:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _3594_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:405:5"));
				(except.result);
			});
			({
				auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:406:5"));
				(except.result);
			});
		};
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:408:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:411:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:412:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:413:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:414:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _1a792ea63_Itoa(_3624_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:415:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_any_type", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:416:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:417:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, .to_str=__jule_any_type", 28));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:418:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _3323_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:419:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:420:4"));
			(except.result);
		});
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1ac897333_pushResultIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _42535_f) {
	jule::Str _4263_s = __jule_bytesToStr(_1ac8aee50_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_42535_f))))._field_Result)));;
	jule::Bool _4276_ok;
	_1beac7210_lookup((*_self_.alloc)._field_resultMap, _4263_s, nullptr, &(_4276_ok));
	if (_4276_ok) {
		return;;
	};
	(*_1beac74b8_set(((*_self_.alloc)._field_resultMap).ptr(), _4263_s))=false;
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:432:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_resultDecls, _4263_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:433:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:434:3"));
		(except.result);
	});
	{
		auto expr = &((*(_1aac03086_Tup((*((*(_42535_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0167d99:;
		if (it != expr_end) {
			jule::I32 _4358_i = it - expr->begin();
			jule::Ptr<_1aabecdb6_Type> _43515_t = *it;
			{
				({
					auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:436:4"));
				});
				_1ac8a9b92_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _43515_t);
				({
					auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:438:4"));
				});
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:439:4"));
					(except.result);
				});
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_resultDecls, _1a792ea63_Itoa(_4358_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:440:4"));
					(except.result);
				});
				({
					auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:441:4"));
					(except.result);
				});
			}
			_iter_next_1c0167d99:;
			++it;
			_4358_i++;
			goto _iter_begin_1c0167d99;
		}
		_iter_end_1c0167d99:;
	};
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:443:3"));
		(except.result);
	});
}



inline void _1ac8975db_pushResult(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3b221_Fn>* _44632_f) {
	if ((_1aaa3b6c7_IsVoid((*(_44632_f)).ptr()) || ((*((*((*(_44632_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _4507_n = (*((*(_44632_f))))._field_Instances.len();;
	if (((*((*(_44632_f))))._field_Generics.len() == 0LL)) {
		_4507_n=1LL;
	};
	{
		auto expr = (*((*(_44632_f))))._field_Instances.slice(0LL, _4507_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c016cde3:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3e2ce_FnIns> _45415_ins = *it;
			{
				_1ac897333_pushResultIns(_self_, &(_45415_ins));
			}
			_iter_next_1c016cde3:;
			++it;
			goto _iter_begin_1c016cde3;
		}
		_iter_end_1c016cde3:;
	};
}



inline void _1ac89794e_pushAndWriteMaskMapper(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa46935_Trait> _45943_t1, jule::Ptr<_1aaa46935_Trait> _45965_t2) {
	_1ace17078_Builder _4607_ident = static__1ace178c5_New(32LL);;
	({
		auto except = _1ace18057_WriteStr(&_4607_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:461:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&_4607_ident, _1a792e3d1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_45965_t2)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:462:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&_4607_ident, jule::Str::lit("_to_", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:463:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&_4607_ident, _1a792e3d1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_45943_t1)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:464:3"));
		(except.result);
	});
	({
		auto except = _1ace17c16_Write(&(*(_self_))._field_Buf, _1ace19388_Buf(&_4607_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:465:3"));
		(except.result);
	});
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0170bc6:;
		if (it != expr_end) {
			_1ac8929c1_traitCast _46810_m = *it;
			{
				if (((_46810_m._field_t1 == _45943_t1) && (_46810_m._field_t2 == _45965_t2))) {
					return;;
				};
			}
			_iter_next_1c0170bc6:;
			++it;
			goto _iter_begin_1c0170bc6;
		}
		_iter_end_1c0170bc6:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1ac8929c1_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ac8929c1_traitCast{._field_t1=_45943_t1, ._field_t2=_45965_t2}; __jule_collection; }));
	;
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:478:3"));
		(except.result);
	});
	({
		auto except = _1ace17c16_Write(&(*_self_.alloc)._field_anyObj, _1ace19388_Buf(&_4607_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:479:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:480:3"));
		(except.result);
	});
	_1ace17078_Builder _4827_t1Ident = static__1ace178c5_New(16LL);;
	_1ace17078_Builder _4837_t2Ident = static__1ace178c5_New(16LL);;
	static__1ac7de621_traitDecl(&(_4827_t1Ident), _45943_t1);
	static__1ac7de621_traitDecl(&(_4837_t2Ident), _45965_t2);
	{
		auto expr = &((*(_45943_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01713d0:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _48715_s1 = *it;
			{
				{
					auto expr = &((*(_45965_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c01752c4:;
					if (it != expr_end) {
						jule::Ptr<_1aa966767_Struct> _48811_s2 = *it;
						{
							if ((_48715_s1 == _48811_s2)) {
								{
									auto expr = &((*(_48715_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c017624d:;
									if (it != expr_end) {
										jule::Ptr<_1aa969605_StructIns> _49018_s1i = *it;
										{
											jule::I32 _4917_i1 = _1ab61b3e9_FindTraitTypeOffsetS(_45943_t1, _49018_s1i);;
											jule::I32 _4927_i2 = _1ab61b3e9_FindTraitTypeOffsetS(_45965_t2, _49018_s1i);;
											({
												auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:493:7"));
												(except.result);
											});
											({
												auto except = _1ace17c16_Write(&(*_self_.alloc)._field_anyObj, _1ace19388_Buf(&_4837_t2Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:494:7"));
												(except.result);
											});
											({
												auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:495:7"));
												(except.result);
											});
											({
												auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _1a792ea63_Itoa(_4927_i2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:496:7"));
												(except.result);
											});
											({
												auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:497:7"));
												(except.result);
											});
											({
												auto except = _1ace17c16_Write(&(*_self_.alloc)._field_anyObj, _1ace19388_Buf(&_4827_t1Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:498:7"));
												(except.result);
											});
											({
												auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:499:7"));
												(except.result);
											});
											({
												auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, _1a792ea63_Itoa(_4917_i1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:500:7"));
												(except.result);
											});
											({
												auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:501:7"));
												(except.result);
											});
										}
										_iter_next_1c017624d:;
										++it;
										goto _iter_begin_1c017624d;
									}
									_iter_end_1c017624d:;
								};
							};
						}
						_iter_next_1c01752c4:;
						++it;
						goto _iter_begin_1c01752c4;
					}
					_iter_end_1c01752c4:;
				};
			}
			_iter_next_1c01713d0:;
			++it;
			goto _iter_begin_1c01713d0;
		}
		_iter_end_1c01713d0:;
	};
	({
		auto except = _1ace18057_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:506:3"));
		(except.result);
	});
}



inline void _1ac897c07_locInfo(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa0d7ceb_Token>* _51025_t) {
	jule::Str *_5114_loc = &((*((*((*(_51025_t))))._field_File))._field_Path);;
	if (_1bb09c40e_Production) {
		{
			
			if (_1bb08556d_HasPrefix((*(_5114_loc)), _1bb095209_PathStdlib)) {
				_case_begin_1c017b71a:;
				{
					_1ac7d8164_cstrBytes(&((*(_self_))._field_Buf), (*(_5114_loc)).slice((_1bb0923d2_Dir(_1bb095209_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1bb08556d_HasPrefix((*(_5114_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1c017b3b8:;
				{
					_1ac7d8164_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5114_loc)).slice((_1bb0923d2_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1c017b352:;
				{
					_1ac7d8164_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5114_loc)));
				}
			}
			_match_end_1c017b275:;
		};
	} else {
		_1ac7d8164_cstrBytes(&((*(_self_))._field_Buf), (*(_5114_loc)));
	};
	_1ac895573_write(_self_, jule::Str::lit(":", 1));
	_1ac895573_write(_self_, _1a792ea63_Itoa((*((*(_51025_t))))._field_Row));
	_1ac895573_write(_self_, jule::Str::lit(":", 1));
	_1ac895573_write(_self_, _1a792ea63_Itoa((*((*(_51025_t))))._field_Column));
}



inline void _1ac897e05_head(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	_1ac887bd6_Time _5373_time = static__1ac8882d0_Now();;
	_1ac887510_AbsTime _5383_abs = _1ac8899b8_Abs(&_5373_time);;
	_1ac895573_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1ac895573_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1ac895573_write(_self_, jule::Str::lit("jule0.1.1 @master", 17));
	_1ac895573_write(_self_, jule::Str::lit("\n", 1));
	_1ac895573_write(_self_, jule::Str::lit("// Date: ", 9));
	_1ac895573_write(_self_, _1a792e3d1_FmtUint(_5383_abs._field_Day, 10LL));
	_1ac895573_write(_self_, jule::Str::lit("/", 1));
	_1ac895573_write(_self_, _1a792e3d1_FmtUint(_5383_abs._field_Month, 10LL));
	_1ac895573_write(_self_, jule::Str::lit("/", 1));
	_1ac895573_write(_self_, _1a792e3d1_FmtUint(_5383_abs._field_Year, 10LL));
	_1ac895573_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1ac895573_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1ac895573_write(_self_, jule::Str::lit(" ", 1));
	_1ac895573_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1ac895573_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1bb09c40e_Production) {
		_1ac895573_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1bb09bd04_RC))) {
		_1ac895573_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1bb09c1bc_Safety))) {
		_1ac895573_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1ac8981ad_links(_self_, true);
	_1ac895573_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1ac895573_write(_self_, _1bb095a45_PathApi);
	_1ac895573_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1ac8981ad_links(_self_, false);
}



inline void _1ac8981ad_links(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Bool _57722_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0188804:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _57810_used = *it;
			{
				{
					
					if ((!((*(_57810_used))._field_Binded))) {
						_case_begin_1c01896c3:;
						{
							goto _iter_next_1c0188804;
						}
					}
					else if (_1c6e36512_IsStdHeaderPath((*(_57810_used))._field_Path)) {
						_case_begin_1c018975b:;
						{
							if ((!(_57722_std))) {
								goto _iter_next_1c0188804;
							};
							_1ac895573_write(_self_, jule::Str::lit("#include ", 9));
							_1ac895573_write(_self_, (*_57810_used.alloc)._field_Path);
							_1ac895573_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1c6e367dc_IsValidHeaderExt(_1bb091975_Ext((*_57810_used.alloc)._field_Path))) {
						_case_begin_1c01897c2:;
						{
							if (_57722_std) {
								goto _iter_next_1c0188804;
							};
							_1ac895573_write(_self_, jule::Str::lit("#include \"", 10));
							_1ac895573_write(_self_, (*_57810_used.alloc)._field_Path);
							_1ac895573_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1c018956e:;
				};
			}
			_iter_next_1c0188804:;
			++it;
			goto _iter_begin_1c0188804;
		}
		_iter_end_1c0188804:;
	};
}



inline void _1ac898466_prepareStructure(_1ac894d58_ObjectCoder* _self_, jule::Ptr<_1aa966767_Struct>* _60037_s) {
	{
		auto expr = &((*((*(_60037_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c018876b:;
		if (it != expr_end) {
			jule::Ptr<_1aa969605_StructIns> _60115_ins = *it;
			{
				{
					auto expr = &((*(_60115_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c018d441:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3b221_Fn> _60216_m = *it;
						{
							if ((*(_60216_m))._field_Statically) {
								goto _iter_next_1c018d441;
							};
							{
								auto expr = &((*(_60216_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c018e08a:;
								if (it != expr_end) {
									jule::Ptr<_1aaa3e2ce_FnIns> _60617_mins = *it;
									{
										jule::Ptr<_1aaa3d179_ParamIns> _60710_p = (*(_60617_mins))._field_Params[0LL];;
										_1ace17078_Builder _60810_kind = static__1ace178c5_New(40LL);;
										_1ac8a9b92_kind((*(_self_))._field_tc.ptr(), &(_60810_kind), (*(_60710_p))._field_Type);
										if ((!(_1aaa3a132_IsRef((*_60710_p.alloc)._field_Decl.ptr())))) {
											({
												auto except = _1ace18057_WriteStr(&_60810_kind, jule::Str::lit("*", 1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:611:7"));
												(except.result);
											});
										};
										(*_60710_p.alloc)._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1ac8a3d78_customType>(_1ac8a3d78_customType{._field_kind=_1ace188d7_Str(&_60810_kind)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data29)});
									}
									_iter_next_1c018e08a:;
									++it;
									goto _iter_begin_1c018e08a;
								}
								_iter_end_1c018e08a:;
							};
						}
						_iter_next_1c018d441:;
						++it;
						goto _iter_begin_1c018d441;
					}
					_iter_end_1c018d441:;
				};
			}
			_iter_next_1c018876b:;
			++it;
			goto _iter_begin_1c018876b;
		}
		_iter_end_1c018876b:;
	};
}



inline void _1ac898664_prepareStructures(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c018cee0:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _62415_s = *it;
			{
				if (((*(_62415_s))._field_Token != nullptr)) {
					_1ac898466_prepareStructure(_self_.ptr(), &(_62415_s));
				};
			}
			_iter_next_1c018cee0:;
			++it;
			goto _iter_begin_1c018cee0;
		}
		_iter_end_1c018cee0:;
	};
}



inline void _1ac89891c_structurePlainDecl(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa966767_Struct>* _63140_s) {
	{
		auto expr = &((*((*(_63140_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0193765:;
		if (it != expr_end) {
			jule::Ptr<_1aa969605_StructIns> _63215_ins = *it;
			{
				_1ac895573_write(_self_, jule::Str::lit("struct ", 7));
				static__1ac7deed4_structureIns(&((*_self_.alloc)._field_Buf), &(_63215_ins));
				_1ac895573_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c0193765:;
			++it;
			goto _iter_begin_1c0193765;
		}
		_iter_end_1c0193765:;
	};
}



inline void _1ac898b1a_structurePlainDecls(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0194c2d:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _64015_s = *it;
			{
				if (((*(_64015_s))._field_Token != nullptr)) {
					_1ac89891c_structurePlainDecl(_self_, &(_64015_s));
				};
			}
			_iter_next_1c0194c2d:;
			++it;
			goto _iter_begin_1c0194c2d;
		}
		_iter_end_1c0194c2d:;
	};
}



inline void _1ac898dc3_fieldDecl(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa9689cd_FieldIns>* _64731_f) {
	_1ac8a9b92_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_64731_f))))._field_Type);
	_1ac895573_write(_self_, jule::Str::lit(" ", 1));
	static__1ac7e02c0_field(&((*_self_.alloc)._field_Buf), &((*((*(_64731_f))))._field_Decl));
	_1ac895573_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ac8992e1_structureOperatorEq(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Str _65436_ident, jule::Ptr<_1aa969605_StructIns>* _65453_s, jule::Bool _65474_decl) {
	if ((!((*((*(_65453_s))))._field_Comparable))) {
		return;;
	};
	_1ac895573_write(_self_, jule::Str::lit("\n", 1));
	if (_1ac695ecd_Inline) {
		_1ac895573_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1ac895573_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1ac895573_write(_self_, _65436_ident);
	_1ac895573_write(_self_, jule::Str::lit("_eq", 3));
	_1ac895573_write(_self_, jule::Str::lit("(", 1));
	_1ac895573_write(_self_, _65436_ident);
	_1ac895573_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1ac895573_write(_self_, _65436_ident);
	_1ac895573_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_65474_decl) {
		_1ac895573_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1ac895573_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_65453_s))))._field_Fields.len() == 0LL)) {
		_1ac895573_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1ac895a29_addIndent(_self_);
	_1ac895573_write(_self_, jule::Str::lit("\n", 1));
	_1ac895e25_indent(_self_);
	_1ac895573_write(_self_, jule::Str::lit("return ", 7));
	_1ac895a29_addIndent(_self_);
	jule::Bool _6857_writed = false;;
	jule::Str _6887_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _6897_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_65453_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01a07b6:;
		if (it != expr_end) {
			jule::Ptr<_1aa9689cd_FieldIns> _69115_f = *it;
			{
				jule::Ptr<_1aa969605_StructIns> _6934_strct = _1aac0254c_Struct((*(_69115_f))._field_Type.ptr());;
				if ((((_6934_strct != nullptr) && ((*_6934_strct.alloc)._field_Decl != nullptr)) && (*(*(_6934_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1c01a07b6;
				};
				if (_6857_writed) {
					_1ac895573_write(_self_, jule::Str::lit(" &&", 3));
				};
				_6857_writed=true;
				_1ac895573_write(_self_, jule::Str::lit("\n", 1));
				_1ac895e25_indent(_self_);
				_1ace17078_Builder _7048_fIdent = static__1ace178c5_New((*((*_69115_f.alloc)._field_Decl))._field_Ident.len());;
				static__1ac7e02c0_field(&(_7048_fIdent), &((*_69115_f.alloc)._field_Decl));
				_6887_lmodel+=jule::Str::unsafe_from_bytes(_1ace19388_Buf(&_7048_fIdent));
				_6897_rmodel+=jule::Str::unsafe_from_bytes(_1ace19388_Buf(&_7048_fIdent));
				_1ac7c9ed0__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_6887_lmodel), &(_6897_rmodel), &((*_69115_f.alloc)._field_Type), &((*_69115_f.alloc)._field_Type), static_cast<jule::U32>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_6887_lmodel).mut_slice(0LL, (_6887_lmodel.len() - _1ace18d6b_Len(&_7048_fIdent)));;
				_6897_rmodel=_6887_lmodel.slice(0LL, (_6897_rmodel.len() - _1ace18d6b_Len(&_7048_fIdent)));
			}
			_iter_next_1c01a07b6:;
			++it;
			goto _iter_begin_1c01a07b6;
		}
		_iter_end_1c01a07b6:;
	};
	_1ac895c27_doneIndent(_self_);
	if ((!(_6857_writed))) {
		_1ac895573_write(_self_, jule::Str::lit("true", 4));
	};
	_1ac895573_write(_self_, jule::Str::lit(";\n", 2));
	_1ac895c27_doneIndent(_self_);
	_1ac895e25_indent(_self_);
	_1ac895573_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1ac899654_structureOperators(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa969605_StructIns>* _72240_s, jule::Bool _72261_decl) {
	_1ace17078_Builder _7237_sb = static__1ace178c5_New(40LL);;
	static__1ac7deed4_structureIns(&(_7237_sb), _72240_s);
	jule::Str _7253_ident = _1ace188d7_Str(&_7237_sb);;
	_1ac8992e1_structureOperatorEq(_self_, _7253_ident, _72240_s, _72261_decl);
}



inline void _1ac89990c_structureInsDecl(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa969605_StructIns>* _73138_s) {
	_1ac895573_write(_self_, jule::Str::lit("struct ", 7));
	static__1ac7deed4_structureIns(&((*_self_.alloc)._field_Buf), _73138_s);
	_1ac895573_write(_self_, jule::Str::lit(" {\n", 3));
	_1ac895a29_addIndent(_self_);
	{
		auto expr = &((*((*(_73138_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01aa936:;
		if (it != expr_end) {
			jule::Ptr<_1aa9689cd_FieldIns> _73715_f = *it;
			{
				_1ac895e25_indent(_self_);
				_1ac898dc3_fieldDecl(_self_, &(_73715_f));
				_1ac895573_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1c01aa936:;
			++it;
			goto _iter_begin_1c01aa936;
		}
		_iter_end_1c01aa936:;
	};
	_1ac895c27_doneIndent(_self_);
	_1ac895e25_indent(_self_);
	_1ac895573_write(_self_, jule::Str::lit("};", 2));
	;
	_1ac899654_structureOperators(_self_, _73138_s, true);
}



inline void _1ac899bb5_structureDecl(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa966767_Struct>* _75135_s) {
	{
		auto expr = &((*((*(_75135_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01ad41c:;
		if (it != expr_end) {
			jule::Ptr<_1aa969605_StructIns> _75215_ins = *it;
			{
				_1ac89990c_structureInsDecl(_self_, &(_75215_ins));
			}
			_iter_next_1c01ad41c:;
			++it;
			goto _iter_begin_1c01ad41c;
		}
		_iter_end_1c01ad41c:;
	};
}



inline void _1ac899db3_structureDecls(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01adb6a:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _75815_s = *it;
			{
				if (((*(_75815_s))._field_Token != nullptr)) {
					_1ac899bb5_structureDecl(_self_, &(_75815_s));
					_1ac895573_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1c01adb6a:;
			++it;
			goto _iter_begin_1c01adb6a;
		}
		_iter_end_1c01adb6a:;
	};
}



inline void _1ac89a16b_structureMethodDecls1(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa966767_Struct>* _76643_s) {
	{
		auto expr = &((*((*(_76643_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01aed14:;
		if (it != expr_end) {
			jule::Ptr<_1aa969605_StructIns> _76715_ins = *it;
			{
				{
					auto expr = &((*(_76715_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c01b1783:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3b221_Fn> _76816_m = *it;
						{
							_1ac8975db_pushResult(_self_, &(_76816_m));
							_1ac89b018_funcDecl(_self_, &(_76816_m), false);
						}
						_iter_next_1c01b1783:;
						++it;
						goto _iter_begin_1c01b1783;
					}
					_iter_end_1c01b1783:;
				};
			}
			_iter_next_1c01aed14:;
			++it;
			goto _iter_begin_1c01aed14;
		}
		_iter_end_1c01aed14:;
	};
}



inline void _1ac89a369_structureMethodDecls(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01b29e8:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _77615_s = *it;
			{
				if (((*(_77615_s))._field_Token != nullptr)) {
					_1ac89a16b_structureMethodDecls1(_self_, &(_77615_s));
				};
			}
			_iter_next_1c01b29e8:;
			++it;
			goto _iter_begin_1c01b29e8;
		}
		_iter_end_1c01b29e8:;
	};
}



inline void _1ac89a842_funcHead(jule::Ptr<_1ac894d58_ObjectCoder> _self_, _1ace17078_Builder* _78630_buf, jule::Ptr<_1aaa3e2ce_FnIns>* _78658_f, jule::Bool _78675_ptr, jule::Str _78686_ident) {
	if ((((!(_78675_ptr)) && _1ac695ecd_Inline) && (!(_1aaa3bbe4_IsEntryPoint((*((*(_78658_f))))._field_Decl.ptr()))))) {
		({
			auto except = _1ace18057_WriteStr(_78630_buf, jule::Str::lit("inline ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:788:4"));
			(except.result);
		});
	};
	_1ac8a9158_funcInsResult((*(_self_))._field_tc.ptr(), _78630_buf, _78658_f);
	if (_78675_ptr) {
		({
			auto except = _1ace18057_WriteStr(_78630_buf, jule::Str::lit("(*", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:792:4"));
			(except.result);
		});
		static__1ac7de335_funcIns(_78630_buf, _78658_f);
		({
			auto except = _1ace18310_WriteByte(_78630_buf, ')');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:794:4"));
		});
	} else {
		({
			auto except = _1ace18310_WriteByte(_78630_buf, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:796:4"));
		});
		if ((_78686_ident).empty()) {
			static__1ac7de335_funcIns(_78630_buf, _78658_f);
		} else {
			({
				auto except = _1ace18057_WriteStr(_78630_buf, _78686_ident);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:800:5"));
				(except.result);
			});
		};
	};
}



inline void _1ac89aba5_funcDeclIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns>* _80533_f, jule::Bool _80550_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_80533_f))))._field_CalledCo);
	_1ac895e25_indent(_self_);
	_1ac89a842_funcHead(_self_, &((*_self_.alloc)._field_Buf), _80533_f, _80550_ptr, jule::Str());
	_1ac89c14b_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _80533_f);
	_1ac895573_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1ac89b018_funcDecl(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3b221_Fn>* _81330_f, jule::Bool _81344_ptr) {
	{
		auto expr = &((*((*(_81330_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01b9725:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3e2ce_FnIns> _81415_c = *it;
			{
				_1ac89aba5_funcDeclIns(_self_, &(_81415_c), _81344_ptr);
			}
			_iter_next_1c01b9725:;
			++it;
			goto _iter_begin_1c01b9725;
		}
		_iter_end_1c01b9725:;
	};
}



inline void _1ac89b2c1_funcDeclTrait(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3b221_Fn>* _81935_f) {
	{
		auto expr = &((*((*(_81935_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01ba0b6:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3e2ce_FnIns> _82015_c = *it;
			{
				jule::Ptr<_1aabecdb6_Type> _8218_k = (*((*(_82015_c))._field_Params[0LL]))._field_Type;;
				(*((*(_82015_c))._field_Params[0LL]))._field_Type=_1ac8922c8_generalGCPtr;
				_1ac89aba5_funcDeclIns(_self_, &(_82015_c), true);
				(*((*(_82015_c))._field_Params[0LL]))._field_Type=_8218_k;
			}
			_iter_next_1c01ba0b6:;
			++it;
			goto _iter_begin_1c01ba0b6;
		}
		_iter_end_1c01ba0b6:;
	};
}



inline void _1ac89b4be_funcDecls(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	_1ab615c84_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1aab3267a_Package>*>((void*)__jule_anon_1c01bd2c8, jule::Ptr<__jule_anon_1c01bd2c8_ctx>::make(__jule_anon_1c01bd2c8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c01bd2c8_ctx_handler));
}



inline void _1ac89b777_traitDataTypeMethods(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1ac8932b8_traitHash>* _84142_hash) {
	{
		auto expr = &((*((*(_84142_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01bdbbe:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _84215_m = *it;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _8438_ins = (*(_84215_m))._field_Instances[0LL];;
				{
					auto expr = (*(_8438_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1c01c25b8:;
					if (it != expr_end) {
						jule::I32 _8449_i = it - expr.begin();
						jule::Ptr<_1aaa3d179_ParamIns> _84416_ip = *it;
						{
							if (_1aa0da99c_IsAnonIdent((*((*(_84416_ip))._field_Decl))._field_Ident)) {
								(*(*(_84416_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1a792ea63_Itoa(_8449_i));
							};
						}
						_iter_next_1c01c25b8:;
						++it;
						_8449_i++;
						goto _iter_begin_1c01c25b8;
					}
					_iter_end_1c01c25b8:;
				};
				_1ac8975db_pushResult(_self_, &(_84215_m));
				_1ac89b2c1_funcDeclTrait(_self_, &(_84215_m));
			}
			_iter_next_1c01bdbbe:;
			++it;
			goto _iter_begin_1c01bdbbe;
		}
		_iter_end_1c01bdbbe:;
	};
}



inline void _1ac89b975_traitDataTypes(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01c0352:;
		if (it != expr_end) {
			jule::Ptr<_1ac8932b8_traitHash> _85515_hash = *it;
			{
				_1ac895573_write(_self_, jule::Str::lit("struct ", 7));
				static__1ac7de621_traitDecl(&((*_self_.alloc)._field_Buf), (*(_85515_hash))._field_traitDecl);
				_1ac895573_write(_self_, jule::Str::lit("MptrData {\n", 11));
				_1ac895a29_addIndent(_self_);
				_1ac895e25_indent(_self_);
				_1ac895573_write(_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1ac89b777_traitDataTypeMethods(_self_, &(_85515_hash));
				_1ac895c27_doneIndent(_self_);
				_1ac895e25_indent(_self_);
				_1ac895573_write(_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1c01c0352:;
			++it;
			goto _iter_begin_1c01c0352;
		}
		_iter_end_1c01c0352:;
	};
}



inline void _1ac89bcd8_paramIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, _1ace17078_Builder* _86930_buf, jule::Ptr<_1aaa3d179_ParamIns>* _86958_p) {
	_1ac8a8982_paramIns((*(_self_))._field_tc.ptr(), _86930_buf, _86958_p);
	({
		auto except = _1ace18310_WriteByte(_86930_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:871:3"));
	});
	static__1ac7de90c_param(_86930_buf, &((*((*(_86958_p))))._field_Decl));
}



inline void _1ac89c14b_paramsIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, _1ace17078_Builder* _87531_buf, jule::Ptr<_1aaa3e2ce_FnIns>* _87559_f) {
	if (((!((*((*(_87559_f))))._field_AsAnon)) && ((*((*(_87559_f))))._field_Params.len() == 0LL))) {
		({
			auto except = _1ace18057_WriteStr(_87531_buf, jule::Str::lit("(void)", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:877:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1ace18310_WriteByte(_87531_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:880:3"));
	});
	if ((*((*(_87559_f))))._field_AsAnon) {
		({
			auto except = _1ace18057_WriteStr(_87531_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:882:4"));
			(except.result);
		});
		if (((*((*(_87559_f))))._field_Params.len() > 0LL)) {
			({
				auto except = _1ace18057_WriteStr(_87531_buf, jule::Str::lit(", ", 2));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:884:5"));
				(except.result);
			});
		};
	};
	{
		auto expr = &((*((*(_87559_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01cac0e:;
		if (it != expr_end) {
			jule::I32 _8878_i = it - expr->begin();
			jule::Ptr<_1aaa3d179_ParamIns> _88715_p = *it;
			{
				_1ac89bcd8_paramIns(_self_, _87531_buf, &(_88715_p));
				if ((((*((*(_87559_f))))._field_Params.len() - _8878_i) > 1LL)) {
					({
						auto except = _1ace18057_WriteStr(_87531_buf, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:890:5"));
						(except.result);
					});
				};
			}
			_iter_next_1c01cac0e:;
			++it;
			_8878_i++;
			goto _iter_begin_1c01cac0e;
		}
		_iter_end_1c01cac0e:;
	};
	({
		auto except = _1ace18310_WriteByte(_87531_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:893:3"));
	});
}



inline void _1ac89c4ae_varInitExpr(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aab70795_Var>* _89633_v, jule::Fn<void> _89648_init) {
	if ((*((*(_89633_v))))._field_Statically) {
		_1ac895573_write(_self_, jule::Str::lit("static ", 7));
	};
	_1ac8a9b92_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_89633_v))))._field_TypeSym))._field_Type);
	_1ac895573_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_89633_v))))._field_Reference) {
		_1ac895573_write(_self_, jule::Str::lit("*", 1));
	};
	static__1ac7e05ab_var(&((*_self_.alloc)._field_Buf), (*(_89633_v)));
	if ((_89648_init != nullptr)) {
		_1ac895573_write(_self_, jule::Str::lit(" = ", 3));
		_89648_init();
	};
	_1ac895573_write(_self_, jule::Str::lit(";", 1));
}



inline void _1ac89c767_var(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aab70795_Var> _91424_v) {
	if (_1aa0da6d3_IsIgnoreIdent((*(_91424_v))._field_Ident)) {
		return;;
	};
	if ((((*(_91424_v))._field_Value != nullptr) && ((*(*(_91424_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_91424_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_91424_v.alloc)._field_Reference) {
				_1ac89c4ae_varInitExpr(_self_, &(_91424_v), jule::__new_closure<void>((void*)__jule_anon_1c01d2d04, jule::Ptr<__jule_anon_1c01d2d04_ctx>::make(__jule_anon_1c01d2d04_ctx{._self_=_self_,._91424_v=_91424_v}).as<jule::Uintptr>(), __jule_anon_1c01d2d04_ctx_handler));
			} else {
				_1ac89c4ae_varInitExpr(_self_, &(_91424_v), jule::__new_closure<void>((void*)__jule_anon_1c01d4de4, jule::Ptr<__jule_anon_1c01d4de4_ctx>::make(__jule_anon_1c01d4de4_ctx{._self_=_self_,._91424_v=_91424_v}).as<jule::Uintptr>(), __jule_anon_1c01d4de4_ctx_handler));
			};
			return;;
		};
		_1ac89c4ae_varInitExpr(_self_, &(_91424_v), nullptr);
		return;;
	};
	if ((*(_91424_v))._field_Reference) {
		_1ac89c4ae_varInitExpr(_self_, &(_91424_v), jule::__new_closure<void>((void*)__jule_anon_1c01d7600, jule::Ptr<__jule_anon_1c01d7600_ctx>::make(__jule_anon_1c01d7600_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c01d7600_ctx_handler));
		return;;
	};
	if (_1ac8b1d20_shouldInitialized(&((*((*(_91424_v))._field_TypeSym))._field_Type))) {
		_1ac89c4ae_varInitExpr(_self_, &(_91424_v), jule::__new_closure<void>((void*)__jule_anon_1c01d8799, jule::Ptr<__jule_anon_1c01d8799_ctx>::make(__jule_anon_1c01d8799_ctx{._self_=_self_,._91424_v=_91424_v}).as<jule::Uintptr>(), __jule_anon_1c01d8799_ctx_handler));
		return;;
	};
	_1ac89c4ae_varInitExpr(_self_, &(_91424_v), nullptr);
}



inline void _1ac89caca_anonFuncInsDecl(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa31d1b_AnonFnExpr>* _94537_m, jule::Str _94559_ident) {
	_1ac89a842_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_94537_m))))._field_Func), false, _94559_ident);
	_1ac89c14b_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_94537_m))))._field_Func));
	({
		auto except = _1ace18310_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:948:3"));
	});
}



inline void _1ac89ce3d_anonFuncIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa31d1b_AnonFnExpr>* _95133_m, jule::Str _95155_ident) {
	_1ac89a842_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95133_m))))._field_Func), false, _95155_ident);
	_1ac89c14b_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95133_m))))._field_Func));
	_1ac895573_write(_self_, jule::Str::lit(" ", 1));
	_1ac7c434d_anonFuncScope((*_self_.alloc)._field_sc, (*(_95133_m)), _95155_ident);
	if (((*((*((*(_95133_m))))._field_Func))._field_Scope != nullptr)) {
		_1ac895573_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1ac89d2a1_funcIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3e2ce_FnIns> _96128_f, jule::Str _96145_ident) {
	_1ac89a842_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_96128_f), false, _96145_ident);
	_1ac89c14b_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_96128_f));
	_1ac895573_write(_self_, jule::Str::lit(" ", 1));
	_1ac7c4606_funcScope((*_self_.alloc)._field_sc, _96128_f);
	if (((*(_96128_f))._field_Scope != nullptr)) {
		_1ac895573_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1ac89d559_func(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3b221_Fn>* _97126_f) {
	{
		auto expr = &((*((*(_97126_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01e1ecd:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3e2ce_FnIns> _97215_ins = *it;
			{
				_1ac89d2a1_funcIns(_self_, _97215_ins, jule::Str());
			}
			_iter_next_1c01e1ecd:;
			++it;
			goto _iter_begin_1c01e1ecd;
		}
		_iter_end_1c01e1ecd:;
	};
}



inline void _1ac89d8bc_funcTrait(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa969605_StructIns>* _97727_s, jule::Ptr<_1aaa3e2ce_FnIns>* _97753_f) {
	(*((*(_97753_f))))._field_Scope=nullptr;
	_1ace17078_Builder _9807_nident = static__1ace178c5_New(30LL);;
	({
		auto except = _1ace18057_WriteStr(&_9807_nident, jule::Str::lit("__jule_trait_method_", 20));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:981:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&_9807_nident, _1a792e3d1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_97753_f)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:982:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&_9807_nident, jule::Str::lit("_", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:983:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(&_9807_nident, _1a792e3d1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_97727_s)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:984:3"));
		(except.result);
	});
	jule::Ptr<_1aabecdb6_Type> _9867_k = (*((*((*(_97753_f))))._field_Params[0LL]))._field_Type;;
	(*((*((*(_97753_f))))._field_Params[0LL]))._field_Type=_1ac8922c8_generalGCPtr;
	_1ac89d2a1_funcIns(_self_, (*(_97753_f)), _1ace188d7_Str(&_9807_nident));
	(*((*((*(_97753_f))))._field_Params[0LL]))._field_Type=_9867_k;
}



inline __jule_tuple_x_1aaa3e2ce_FnIns__jule_tuple_bool _1ac89dc0d_findTraitMetMap(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa3b221_Fn>* _99237_m) {
	__jule_tuple_x_1aaa3e2ce_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aaa3e2ce_FnIns> _9937_mins = (*((*(_99237_m))))._field_Instances[0LL];;
	{
		_1beb27a35_mapIterator it = _1beb20775_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1c01e7687:;
		__jule_tuple_px_1aaa3e2ce_FnIns__jule_tuple_psuintptr __iterator_result = _1beb28030_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1aaa3e2ce_FnIns> _99412_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_99412_f))._field_Decl))._field_Public == (*((*(_99237_m))))._field_Public) && ((*(*(_99412_f))._field_Decl.alloc)._field_Ident == (*((*(_99237_m))))._field_Ident)) && _1aaa3ee39_EqualFn(_99412_f, &(_9937_mins)))) {
					__jule_func_result.__jule_result_arg0 = _99412_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c01e7687:;
			goto _iter_begin_1c01e7687;
		}
		_iter_end_1c01e7687:;
	};
	__jule_func_result.__jule_result_arg0 = _9937_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1ac89e071_traitWrapper(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa46935_Trait>* _100434_t, jule::Ptr<_1aaa3b221_Fn>* _100456_m) {
	_julec_label_1c01e9d71:;
	{
		auto expr = &((*((*(_100434_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01ea02a:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _100615_imp = *it;
			{
				jule::Ptr<_1aaa3e2ce_FnIns> _10078_mepf;
				jule::Bool _100714_exist;
				({
					__jule_tuple_x_1aaa3e2ce_FnIns__jule_tuple_bool __jule_assign_result = _1ac89dc0d_findTraitMetMap(_self_, _100456_m);
					_10078_mepf = __jule_assign_result.__jule_result_arg0;
					_100714_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_100714_exist) {
					jule::Slice<jule::Uintptr> _10109_vals = _1beb1ee5b_get((*(_self_))._field_traitMetMap, _10078_mepf);;
					{
						auto expr = &(_10109_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c01ec0a4:;
						if (it != expr_end) {
							jule::Uintptr _101112_val = *it;
							{
								if ((_101112_val == static_cast<jule::Uintptr>(_100615_imp))) {
									goto _iter_next_1c01ea02a;
								};
							}
							_iter_next_1c01ec0a4:;
							++it;
							goto _iter_begin_1c01ec0a4;
						}
						_iter_end_1c01ec0a4:;
					};
					(*_1beb200b0_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10078_mepf))=jule::append(_10109_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_100615_imp); __jule_collection; }));
				} else {
					(*_1beb200b0_set(((*(_self_))._field_traitMetMap).ptr(), _10078_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_100615_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_100615_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c01ec89b:;
					if (it != expr_end) {
						jule::Ptr<_1aa969605_StructIns> _102116_ins = *it;
						{
							_1ac89d8bc_funcTrait(_self_, &(_102116_ins), &(_10078_mepf));
							;
							jule::Ptr<_1aaa3b221_Fn> _10259_sm = _1aa96a66c_FindMethod(_102116_ins.ptr(), (*((*(_100456_m))))._field_Ident, false);;
							if (((_10259_sm == nullptr) || ((*(_10259_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1ac895a29_addIndent(_self_);
							_1ac895573_write(_self_, jule::Str::lit("{\n", 2));
							_1ac895e25_indent(_self_);
							if (((*((*(_100456_m))))._field_Exceptional || (!(_1aaa3b6c7_IsVoid((*(_100456_m)).ptr()))))) {
								_1ac895573_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1ac7de049_func(&((*_self_.alloc)._field_Buf), &(_10259_sm));
							_1ac895573_write(_self_, jule::Str::lit("(", 1));
							_1ac895573_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1ac8a7e48_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _102116_ins);
							_1ac895573_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10425_ptr = (!(_1aaa3a132_IsRef((*((*(_100456_m))))._field_Params[0LL].ptr())));;
							if (_10425_ptr) {
								_1ac895573_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_100456_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1c0205200:;
								if (it != expr_end) {
									jule::Ptr<_1aaa3974c_Param> _104612_mp = *it;
									{
										_1ac895573_write(_self_, jule::Str::lit(", ", 2));
										static__1ac7de90c_param(&((*_self_.alloc)._field_Buf), &(_104612_mp));
									}
									_iter_next_1c0205200:;
									++it;
									goto _iter_begin_1c0205200;
								}
								_iter_end_1c0205200:;
							};
							_1ac895573_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1ac895c27_doneIndent(_self_);
						}
						_iter_next_1c01ec89b:;
						++it;
						goto _iter_begin_1c01ec89b;
					}
					_iter_end_1c01ec89b:;
				};
			}
			_iter_next_1c01ea02a:;
			++it;
			goto _iter_begin_1c01ea02a;
		}
		_iter_end_1c01ea02a:;
	};
}



inline void _1ac89e26e_traitWrappers(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c020155e:;
		if (it != expr_end) {
			jule::Ptr<_1ac8932b8_traitHash> _105715_hash = *it;
			{
				if (((*((*(_105715_hash))._field_traitDecl))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1c020155e;
				};
				{
					auto expr = &((*(_105715_hash))._field_methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c02071ad:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3b221_Fn> _106116_m = *it;
						{
							_1ac89e071_traitWrapper(_self_, &((*(_105715_hash))._field_traitDecl), &(_106116_m));
						}
						_iter_next_1c02071ad:;
						++it;
						goto _iter_begin_1c02071ad;
					}
					_iter_end_1c02071ad:;
				};
			}
			_iter_next_1c020155e:;
			++it;
			goto _iter_begin_1c020155e;
		}
		_iter_end_1c020155e:;
	};
}



inline void _1ac89e5d2_traitDataMethods(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1ac8932b8_traitHash>* _106838_hash, jule::Ptr<_1aa969605_StructIns> _106856_s) {
	{
		auto expr = &((*((*(_106838_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0206751:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _106915_m = *it;
			{
				_1ac895e25_indent(_self_);
				_1ac895573_write(_self_, jule::Str::lit(".", 1));
				static__1ac7de049_func(&((*_self_.alloc)._field_Buf), &(_106915_m));
				_1ac895573_write(_self_, jule::Str::lit("=__jule_trait_method_", 21));
				jule::Ptr<_1aaa3e2ce_FnIns> _10744_mepf;
				jule::Bool _107410_exist;
				({
					__jule_tuple_x_1aaa3e2ce_FnIns__jule_tuple_bool __jule_assign_result = _1ac89dc0d_findTraitMetMap(_self_, &(_106915_m));
					_10744_mepf = __jule_assign_result.__jule_result_arg0;
					_107410_exist = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_107410_exist))) {
					__jule_panic_s(jule::Str::lit("cxx: implementation mistake, [traitDataMethods] could not found MepMap record", 77) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1076:5"));;
				};
				_1ac895573_write(_self_, _1a792e3d1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10744_mepf)), 15LL));
				_1ac895573_write(_self_, jule::Str::lit("_", 1));
				_1ac895573_write(_self_, _1a792e3d1_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_106856_s)), 15LL));
				_1ac895573_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1c0206751:;
			++it;
			goto _iter_begin_1c0206751;
		}
		_iter_end_1c0206751:;
	};
}



inline void _1ac89ea00_traitData(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1ac8932b8_traitHash>* _108631_hash, jule::I32 _108649_i, jule::Ptr<_1aa969605_StructIns>* _108662_s) {
	_1ace17078_Builder _10877_ident = static__1ace178c5_New((*((*((*(_108631_hash))))._field_traitDecl))._field_Ident.len());;
	static__1ac7de621_traitDecl(&(_10877_ident), (*((*(_108631_hash))))._field_traitDecl);
	_1ac895573_write(_self_, jule::Str::lit("static ", 7));
	_1ac89582b_writeBytes(_self_, _1ace19388_Buf(&_10877_ident));
	_1ac895573_write(_self_, jule::Str::lit("MptrData ", 9));
	_1ac89582b_writeBytes(_self_, _1ace19388_Buf(&_10877_ident));
	_1ac895573_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1ac895573_write(_self_, _1a792ea63_Itoa(_108649_i));
	_1ac895573_write(_self_, jule::Str::lit(" {\n", 3));
	_1ac895a29_addIndent(_self_);
	_1ac895e25_indent(_self_);
	_1ac895573_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1ac895573_write(_self_, _1a792ea63_Itoa(_1ac8968e8_pushDealloc(_self_, jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_108662_s)), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)}))));
	_1ac895573_write(_self_, jule::Str::lit(",\n", 2));
	_1ac89e5d2_traitDataMethods(_self_, _108631_hash, (*(_108662_s)));
	_1ac895c27_doneIndent(_self_);
	_1ac895573_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1ac89ebed_traitDatas(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0212e22:;
		if (it != expr_end) {
			jule::Ptr<_1ac8932b8_traitHash> _110815_hash = *it;
			{
				jule::I32 _11098_i = 0LL;;
				{
					auto expr = &((*((*(_110815_hash))._field_traitDecl))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0218c08:;
					if (it != expr_end) {
						jule::Ptr<_1aa966767_Struct> _111016_s = *it;
						{
							{
								auto expr = &((*(_111016_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c0219830:;
								if (it != expr_end) {
									jule::Ptr<_1aa969605_StructIns> _111117_ins = *it;
									{
										_1ac89ea00_traitData(_self_, &(_110815_hash), _11098_i, &(_111117_ins));
										(_11098_i)++;
									}
									_iter_next_1c0219830:;
									++it;
									goto _iter_begin_1c0219830;
								}
								_iter_end_1c0219830:;
							};
						}
						_iter_next_1c0218c08:;
						++it;
						goto _iter_begin_1c0218c08;
					}
					_iter_end_1c0218c08:;
				};
			}
			_iter_next_1c0212e22:;
			++it;
			goto _iter_begin_1c0212e22;
		}
		_iter_end_1c0212e22:;
	};
}



inline void _1ac89edeb_globalDecls(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0218b81:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _112015_v = *it;
			{
				_1ac8a9b92_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_112015_v))._field_TypeSym))._field_Type);
				_1ac895573_write(_self_, jule::Str::lit(" ", 1));
				static__1ac7e05ab_var(&((*_self_.alloc)._field_Buf), _112015_v);
				_1ac895573_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c0218b81:;
			++it;
			goto _iter_begin_1c0218b81;
		}
		_iter_end_1c0218b81:;
	};
}



inline void _1ac8a00e9_decls(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	_1ac898b1a_structurePlainDecls(_self_);
	_1ac899db3_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1ace18d6b_Len(&(*_self_.alloc)._field_Buf);
	_1ac89a369_structureMethodDecls(_self_);
	_1ac89b4be_funcDecls(_self_);
	_1ac895573_write(_self_, jule::Str::lit("\n\n", 2));
	_1ac89b975_traitDataTypes(_self_);
	_1ac895573_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1ace18d6b_Len(&(*_self_.alloc)._field_Buf);
	_1ac89e26e_traitWrappers(_self_);
	_1ac895573_write(_self_, jule::Str::lit("\n\n", 2));
	_1ac89ebed_traitDatas(_self_);
	_1ac895573_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1ace18d6b_Len(&(*_self_.alloc)._field_Buf);
	_1ac89edeb_globalDecls(_self_);
}



inline void _1ac8a03a2_structureMethods(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa969605_StructIns>* _114638_s) {
	{
		auto expr = &((*((*(_114638_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0221a24:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _114715_f = *it;
			{
				_1ac89d559_func(_self_, &(_114715_f));
				_1ac895573_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c0221a24:;
			++it;
			goto _iter_begin_1c0221a24;
		}
		_iter_end_1c0221a24:;
	};
}



inline void _1ac8a065a_structureIns(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa969605_StructIns>* _115334_s) {
	if (((*((*(_115334_s))))._field_Source == nullptr)) {
		;
		_1ac899654_structureOperators(_self_, _115334_s, false);
	};
	_1ac8a03a2_structureMethods(_self_, _115334_s);
}



inline void _1ac8a0913_structure(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aa966767_Struct>* _116231_s) {
	{
		auto expr = &((*((*(_116231_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02243b7:;
		if (it != expr_end) {
			jule::Ptr<_1aa969605_StructIns> _116315_ins = *it;
			{
				_1ac8a065a_structureIns(_self_, &(_116315_ins));
				_1ac895573_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c02243b7:;
			++it;
			goto _iter_begin_1c02243b7;
		}
		_iter_end_1c02243b7:;
	};
}



inline void _1ac8a0b11_structures(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0224373:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _117015_s = *it;
			{
				if (((*(_117015_s))._field_Token != nullptr)) {
					_1ac8a0913_structure(_self_, &(_117015_s));
					_1ac895573_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1c0224373:;
			++it;
			goto _iter_begin_1c0224373;
		}
		_iter_end_1c0224373:;
	};
}



inline void _1ac8a0d0e_funcs(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	_1ab615c84_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1aab3267a_Package>*>((void*)__jule_anon_1c0227673, jule::Ptr<__jule_anon_1c0227673_ctx>::make(__jule_anon_1c0227673_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0227673_ctx_handler));
}



inline void _1ac8a10b7_pushInit(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aab3267a_Package>* _120130_pkg) {
	_1ab616009_IterFiles(_120130_pkg, jule::__new_closure<void,jule::Ptr<_1aaa42524_SymTab>*>((void*)__jule_anon_1c02289d7, jule::Ptr<__jule_anon_1c02289d7_ctx>::make(__jule_anon_1c02289d7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c02289d7_ctx_handler));
}



inline void _1ac8a12b5_anonHashes(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	_julec_label_1c02296b9:;
	jule::Slice<jule::Ptr<_1ac892d9a_anonHash>> _12187_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12187_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c022d3d2:;
		if (it != expr_end) {
			jule::Ptr<_1ac892d9a_anonHash> _122015_h = *it;
			{
				_1ac89ce3d_anonFuncIns(_self_, &((*(_122015_h))._field_expr), (*_122015_h.alloc)._field_ident);
			}
			_iter_next_1c022d3d2:;
			++it;
			goto _iter_begin_1c022d3d2;
		}
		_iter_end_1c022d3d2:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1c02296b9;
	};
}



inline void _1ac8a14b3_initGlobals(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02310a5:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _122915_v = *it;
			{
				({
					auto except = _1ace18310_WriteByte(&(*(_self_))._field_Buf, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1230:4"));
				});
				static__1ac7e05ab_var(&((*_self_.alloc)._field_Buf), _122915_v);
				_1ac895573_write(_self_, jule::Str::lit(" = ", 3));
				_1ac7d6519_model((*_self_.alloc)._field_ec, (*((*((*(_122915_v))._field_Value))._field_Data))._field_Model);
				_1ac895573_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c02310a5:;
			++it;
			goto _iter_begin_1c02310a5;
		}
		_iter_end_1c02310a5:;
	};
}



inline void _1ac8a16b1_initCaller(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	_1ac895573_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1ac895a29_addIndent(_self_);
	_1ab615c84_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1aab3267a_Package>*>((void*)__jule_anon_1c0234c9b, jule::Ptr<__jule_anon_1c0234c9b_ctx>::make(__jule_anon_1c0234c9b_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0234c9b_ctx_handler));
	_1ac895c27_doneIndent(_self_);
	_1ac895573_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1ac8a18ae_end(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	_1ac895573_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1ac895573_write(_self_, jule::Str::lit("\n\n", 2));
	_1ac8a14b3_initGlobals(_self_);
	_1ac895573_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_1bb09ba4b_Test) {
		_1ac895573_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		static__1ac7de049_func(&((*_self_.alloc)._field_Buf), &((*(_1ab61db5a_ProgramMeta))._field_EntryPoint));
		_1ac895573_write(_self_, jule::Str::lit("();", 3));
	};
	_1ac895573_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1ac8a1b67_buildTraitHash(jule::Ptr<_1ac894d58_ObjectCoder> _self_, jule::Ptr<_1aaa46935_Trait>* _127336_t) {
	jule::Ptr<_1ac8932b8_traitHash> _12747_hash = jule::new_ptr<_1ac8932b8_traitHash>(_1ac8932b8_traitHash{._field_traitDecl=(*(_127336_t)), ._field_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa3b221_Fn>>::alloc(0LL, (*((*(_127336_t))))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaa3b221_Fn>(nullptr); __jule_collection; })});;
	_1ab6162e5_IterTraitMethods(_127336_t, jule::__new_closure<void,jule::Ptr<_1aaa3b221_Fn>*>((void*)__jule_anon_1c0239cd4, jule::Ptr<__jule_anon_1c0239cd4_ctx>::make(__jule_anon_1c0239cd4_ctx{._12747_hash=_12747_hash}).as<jule::Uintptr>(), __jule_anon_1c0239cd4_ctx_handler));
	(*(_self_))._field_traitMap=jule::append((*_self_.alloc)._field_traitMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1ac8932b8_traitHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _12747_hash; __jule_collection; }));
}



inline void _1ac8a1d65_buildTraitHashes(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	_1ab615c84_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1aab3267a_Package>*>((void*)__jule_anon_1c023c336, jule::Ptr<__jule_anon_1c023c336_ctx>::make(__jule_anon_1c023c336_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c023c336_ctx_handler));
}



inline void _1ac8a21c8_insertBuf(jule::Ptr<_1ac894d58_ObjectCoder> _self_, _1ace17078_Builder* _130331_buf, jule::I32 _130354_pos) {
	if ((_1ace18d6b_Len(_130331_buf) > 0LL)) {
		jule::Slice<jule::U8> _13058_ibuf = _1ace19388_Buf(&(*(_self_))._field_Buf);;
		_13058_ibuf=_1c0240999_Insert(_13058_ibuf, _130354_pos, _1ace19388_Buf(_130331_buf));
		{
			_1ace19641_SetBuf(&(*_self_.alloc)._field_Buf, _13058_ibuf);
		};
	};
}



inline void _1ac8a23c6_implementRC(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_1ac89d2a1_funcIns(_self_, (*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_RCAddAtomic, jule::Str::lit("__jule_RCAdd", 12));
		_1ac89d2a1_funcIns(_self_, (*(*(_1ab61db5a_ProgramMeta))._field_Runtime.alloc)._field_RCLoadAtomic, jule::Str::lit("__jule_RCLoad", 13));
		_1ac89d2a1_funcIns(_self_, (*(*(_1ab61db5a_ProgramMeta))._field_Runtime.alloc)._field_RCDropAtomic, jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_1ac89d2a1_funcIns(_self_, (*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_RCAdd, jule::Str());
		_1ac89d2a1_funcIns(_self_, (*(*(_1ab61db5a_ProgramMeta))._field_Runtime.alloc)._field_RCLoad, jule::Str());
		_1ac89d2a1_funcIns(_self_, (*(*(_1ab61db5a_ProgramMeta))._field_Runtime.alloc)._field_RCDrop, jule::Str());
	};
}



inline void _1ac8a25c4_serializeHead(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	_1ac8a1d65_buildTraitHashes(_self_);
	_1ac898664_prepareStructures(_self_);
	_1ac897e05_head(_self_);
	_1ac895573_write(_self_, jule::Str::lit("\n", 1));
	_1ac8a00e9_decls(_self_);
	_1ac8a21c8_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1ace18d6b_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1ace18d6b_Len(&(*_self_.alloc)._field_resultDecls);
	_1ac895573_write(_self_, jule::Str::lit("\n", 1));
	_1ac8a0b11_structures(_self_);
	_1ac8a0d0e_funcs(_self_);
	_1ac8a16b1_initCaller(_self_);
	_1ac895573_write(_self_, jule::Str::lit("\n\n", 2));
	_1ac8a12b5_anonHashes(_self_);
	_1ac8a23c6_implementRC(_self_);
	_1ac8a21c8_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1ace18d6b_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1ace18d6b_Len(&(*_self_.alloc)._field_deallocObj);
	_1ac8a21c8_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1ace18d6b_Len(&(*_self_.alloc)._field_anyObj);
	_1ac8a21c8_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1ace18d6b_Len(&(*_self_.alloc)._field_anonObj);
	_1ac8a21c8_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1ace18d6b_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _1ac8a27c2_Serialize(jule::Ptr<_1ac894d58_ObjectCoder> _self_) {
	_1ac8a25c4_serializeHead(_self_);
	_1ac8a18ae_end(_self_);
}








inline jule::Bool _1ac8a3d78_customType_eq(_1ac8a3d78_customType *_self_, _1ac8a3d78_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1ac8a4252_Str(_1ac8a3d78_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1ac8a4593_Equal(jule::Ptr<_1ac8a3d78_customType> _self_, jule::Ptr<_1aabecdb6_Type> _2518_k) {
	return false;;
}








inline jule::Bool _1ac8a498e_typeCoder_eq(_1ac8a498e_typeCoder *_self_, _1ac8a498e_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1ac8a498e_typeCoder> static__1ac8a4ede_new(jule::Ptr<_1ac894d58_ObjectCoder>* _5021_oc) {
	jule::Ptr<_1ac8a498e_typeCoder> _517_tc = jule::new_ptr<_1ac8a498e_typeCoder>(_1ac8a498e_typeCoder{._field_oc=(*(_5021_oc)), ._field_rc=jule::Ptr<_1ac8ac579_resultCoder>(nullptr)});;
	(*(_517_tc))._field_rc=static__1ac8aca85_new(&(_517_tc));
	return _517_tc;;
}



inline void _1ac8a5352_toType(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _5727_buf, jule::Str _5754_id) {
	if ((_5754_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_5754_id=_1aaab62bd_RealKindOf(_5754_id);
	};
	({
		auto except = _1ace18057_WriteStr(_5727_buf, jule::Str::lit("jule::", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:61:3"));
		(except.result);
	});
	if (((97LL <= _5754_id[0LL]) && (_5754_id[0LL] <= 122LLU))) {
		({
			auto except = _1ace18310_WriteByte(_5727_buf, (jule::U8)(_5754_id[0LL] - 32LLU));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:63:4"));
		});
	} else {
		({
			auto except = _1ace18310_WriteByte(_5727_buf, _5754_id[0LL]);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:65:4"));
		});
	};
	({
		auto except = _1ace18057_WriteStr(_5727_buf, _5754_id.slice(1LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:67:3"));
		(except.result);
	});
}



inline void _1ac8a56b5_prim(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _7125_buf, jule::Ptr<_1aac06bc2_Prim> _7148_p) {
	_1ac8a5352_toType(_self_, _7125_buf, (*(_7148_p))._field_Kind);
}



inline void _1ac8a5a28_tuple(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _7626_buf, jule::Ptr<_1aac0bcb5_Tuple> _7653_t) {
	({
		auto except = _1ace18057_WriteStr(_7626_buf, jule::Str::lit("std::tuple<", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:77:3"));
		(except.result);
	});
	{
		auto expr = &((*(_7653_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02659e1:;
		if (it != expr_end) {
			jule::I32 _788_i = it - expr->begin();
			jule::Ptr<_1aabecdb6_Type> _7815_tk = *it;
			{
				_1ac8a9b92_kind(_self_, _7626_buf, _7815_tk);
				if ((((*(_7653_t))._field_Types.len() - _788_i) > 1LL)) {
					({
						auto except = _1ace18310_WriteByte(_7626_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:81:5"));
					});
				};
			}
			_iter_next_1c02659e1:;
			++it;
			_788_i++;
			goto _iter_begin_1c02659e1;
		}
		_iter_end_1c02659e1:;
	};
	({
		auto except = _1ace18310_WriteByte(_7626_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:84:3"));
	});
}



inline void _1ac8a5d8b_asSptr(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem) {
	({
		auto except = _1ace18057_WriteStr(_8827_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:89:3"));
		(except.result);
	});
	({
		auto except = _1ace17c16_Write(_8827_buf, _8850_elem);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:90:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(_8827_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:91:3"));
	});
}



inline void _1ac8a61ee_sptr(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _9525_buf, jule::Ptr<_1aac0a6ed_Sptr> _9552_sptr) {
	({
		auto except = _1ace18057_WriteStr(_9525_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:96:3"));
		(except.result);
	});
	_1ac8a9b92_kind(_self_, _9525_buf, (*(_9552_sptr))._field_Elem);
	({
		auto except = _1ace18310_WriteByte(_9525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:98:3"));
	});
}



inline void _1ac8a6562_ptr(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _10224_buf, jule::Ptr<_1aac0deb5_Ptr> _10251_p) {
	;
	if (_1aac0ea32_IsUnsafe(_10251_p.ptr())) {
		({
			auto except = _1ace18057_WriteStr(_10224_buf, jule::Str::lit("void*", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:105:4"));
			(except.result);
		});
	} else {
		_1ac8a9b92_kind(_self_, _10224_buf, (*(_10251_p))._field_Elem);
		({
			auto except = _1ace18057_WriteStr(_10224_buf, jule::Str::lit("*", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:108:4"));
			(except.result);
		});
	};
}



inline void _1ac8a68c5_enumDecl(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _11329_buf, jule::Ptr<_1aaa490db_Enum> _11356_e) {
	_1ac8a9b92_kind(_self_, _11329_buf, (*((*(_11356_e))._field_TypeSym))._field_Type);
}



inline void _1ac8a6c38_typeEnumDecl(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _11833_buf, jule::Ptr<_1aaa4a7e6_TypeEnum> _11860_e) {
	({
		auto except = _1ace18057_WriteStr(_11833_buf, jule::Str::lit("jule::Any", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:119:3"));
		(except.result);
	});
}



inline void _1ac8a709b_asSlice(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _12228_buf, jule::Ptr<_1aabecdb6_Type> _12255_elem) {
	({
		auto except = _1ace18057_WriteStr(_12228_buf, jule::Str::lit("jule::Slice<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:123:3"));
		(except.result);
	});
	_1ac8a9b92_kind(_self_, _12228_buf, _12255_elem);
	({
		auto except = _1ace18310_WriteByte(_12228_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:125:3"));
	});
}



inline void _1ac8a740e_slice(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _12926_buf, jule::Ptr<_1aac0b1c1_Slc> _12953_s) {
	_1ac8a709b_asSlice(_self_, _12926_buf, (*(_12953_s))._field_Elem);
}



inline void _1ac8a7772_mapType(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _13428_buf, jule::Ptr<_1aac0c865_Map> _13455_m) {
	jule::Ptr<_1aa969605_StructIns> _1357_ins = _1ab61be66_FindStructGenericInstance(&((*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13455_m))._field_Key; (*it++) = (*_13455_m.alloc)._field_Val; __jule_collection; }));;
	({
		auto except = _1ace18057_WriteStr(_13428_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:136:3"));
		(except.result);
	});
	static__1ac7deed4_structureIns(_13428_buf, &(_1357_ins));
	({
		auto except = _1ace18057_WriteStr(_13428_buf, jule::Str::lit(">", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:138:3"));
		(except.result);
	});
}



inline void _1ac8a7e48_structureIns(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _14733_buf, jule::Ptr<_1aa969605_StructIns> _14760_s) {
	if ((!((*((*(_14760_s))._field_Decl))._field_Binded))) {
		if (((*_14760_s.alloc)._field_Source != nullptr)) {
			_1ac8a9b92_kind(_self_, _14733_buf, (*_14760_s.alloc)._field_Source);
		} else {
			static__1ac7deed4_structureIns(_14733_buf, &(_14760_s));
		};
		return;;
	};
	jule::Ptr<_1aa0ecc34_Directive> _1563_d = _1ab61a4e7_FindDirective(&((*((*(_14760_s))._field_Decl))._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1563_d != nullptr)) {
		({
			auto except = _1ace17c16_Write(_14733_buf, _1ac8a2b57_concatAllParts((*_1563_d.alloc)._field_Args));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:158:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(_14733_buf, jule::Str::lit("::", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:159:4"));
			(except.result);
		});
	};
	static__1ac7deed4_structureIns(_14733_buf, &(_14760_s));
	if (((*_14760_s.alloc)._field_Generics.len() > 0LL)) {
		({
			auto except = _1ace18310_WriteByte(_14733_buf, '<');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:163:4"));
		});
		{
			auto expr = &((*_14760_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0274170:;
			if (it != expr_end) {
				jule::I32 _1649_i = it - expr->begin();
				jule::Ptr<_1aabeb4d0_InsGeneric> _16416_g = *it;
				{
					_1ac8a9b92_kind(_self_, _14733_buf, (*(_16416_g))._field_Type);
					if ((((*_14760_s.alloc)._field_Generics.len() - _1649_i) > 1LL)) {
						({
							auto except = _1ace18310_WriteByte(_14733_buf, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:167:6"));
						});
					};
				}
				_iter_next_1c0274170:;
				++it;
				_1649_i++;
				goto _iter_begin_1c0274170;
			}
			_iter_end_1c0274170:;
		};
		({
			auto except = _1ace18310_WriteByte(_14733_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:170:4"));
		});
	};
}



inline void _1ac8a82ab_array(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _17526_buf, jule::Ptr<_1aac0d4e2_Arr> _17553_a) {
	({
		auto except = _1ace18057_WriteStr(_17526_buf, jule::Str::lit("jule::Array<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:176:3"));
		(except.result);
	});
	_1ac8a9b92_kind(_self_, _17526_buf, (*(_17553_a))._field_Elem);
	({
		auto except = _1ace18310_WriteByte(_17526_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:178:3"));
	});
	({
		auto except = _1ace18057_WriteStr(_17526_buf, _1a792ea63_Itoa((*_17553_a.alloc)._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:179:3"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(_17526_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:180:3"));
	});
}



inline void _1ac8a8982_paramIns(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _19829_buf, jule::Ptr<_1aaa3d179_ParamIns>* _19857_p) {
	if ((*((*((*(_19857_p))))._field_Decl))._field_Variadic) {
		({
			auto except = _1ace18057_WriteStr(_19829_buf, jule::Str::lit("jule::Slice<", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:200:4"));
			(except.result);
		});
		_1ac8a9b92_kind(_self_, _19829_buf, (*((*(_19857_p))))._field_Type);
		({
			auto except = _1ace18310_WriteByte(_19829_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:202:4"));
		});
	} else {
		_1ac8a9b92_kind(_self_, _19829_buf, (*((*(_19857_p))))._field_Type);
	};
	if ((*((*((*(_19857_p))))._field_Decl))._field_Reference) {
		({
			auto except = _1ace18310_WriteByte(_19829_buf, '*');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:207:4"));
		});
	};
}



inline void _1ac8a9158_funcInsResult(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _23034_s, jule::Ptr<_1aaa3e2ce_FnIns>* _23060_f) {
	if (_1aaa3b6c7_IsVoid((*((*(_23060_f))))._field_Decl.ptr())) {
		if ((*(*((*(_23060_f))))._field_Decl.alloc)._field_Exceptional) {
			({
				auto except = _1ace18057_WriteStr(_23034_s, jule::Str::lit("jule::VoidExceptional", 21));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:233:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1ace18057_WriteStr(_23034_s, jule::Str::lit("void", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:235:5"));
				(except.result);
			});
		};
		return;;
	};
	if ((*((*((*(_23060_f))))._field_Decl))._field_Exceptional) {
		({
			auto except = _1ace18057_WriteStr(_23034_s, jule::Str::lit("jule::Exceptional<", 18));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:240:4"));
			(except.result);
		});
		_1ac8aeb42_codeMut1((*(_self_))._field_rc.ptr(), _23034_s, &((*((*(_23060_f))))._field_Result));
		({
			auto except = _1ace18310_WriteByte(_23034_s, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:242:4"));
		});
		return;;
	};
	_1ac8aeb42_codeMut1((*(_self_))._field_rc.ptr(), _23034_s, &((*((*(_23060_f))))._field_Result));
}



inline void _1ac8a94bb_anonFunc(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _24829_buf, jule::Ptr<_1aaa3e2ce_FnIns> _24856_f) {
	if ((((*(_24856_f))._field_Result != nullptr) && (_1aac03086_Tup((*(_24856_f))._field_Result) != nullptr))) {
		_1ac897333_pushResultIns((*(_self_))._field_oc, &(_24856_f));
	};
	_1ac8a9158_funcInsResult(_self_, _24829_buf, &(_24856_f));
	if (((*(_24856_f))._field_Params.len() == 0LL)) {
		return;;
	};
	({
		auto except = _1ace18310_WriteByte(_24829_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:256:3"));
	});
	{
		auto expr = &((*(_24856_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0285725:;
		if (it != expr_end) {
			jule::I32 _2578_i = it - expr->begin();
			jule::Ptr<_1aaa3d179_ParamIns> _25715_param = *it;
			{
				if (_1aaa39d9b_IsSelf((*(_25715_param))._field_Decl.ptr())) {
					goto _iter_next_1c0285725;
				};
				_1ac8a8982_paramIns(_self_, _24829_buf, &(_25715_param));
				if ((((*(_24856_f))._field_Params.len() - _2578_i) > 1LL)) {
					({
						auto except = _1ace18310_WriteByte(_24829_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:263:5"));
					});
				};
			}
			_iter_next_1c0285725:;
			++it;
			_2578_i++;
			goto _iter_begin_1c0285725;
		}
		_iter_end_1c0285725:;
	};
}



inline void _1ac8a982e_func(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _26925_buf, jule::Ptr<_1aaa3e2ce_FnIns> _26952_f) {
	({
		auto except = _1ace18057_WriteStr(_26925_buf, jule::Str::lit("jule::Fn<", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:270:3"));
		(except.result);
	});
	_1ac8a94bb_anonFunc(_self_, _26925_buf, _26952_f);
	({
		auto except = _1ace18310_WriteByte(_26925_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:272:3"));
	});
}



inline void _1ac8a9b92_kind(_1ac8a498e_typeCoder* _self_, _1ace17078_Builder* _27625_buf, jule::Ptr<_1aabecdb6_Type> _27652_k) {
	{
		
		if ((_1aac0254c_Struct(_27652_k.ptr()) != nullptr)) {
			_case_begin_1c0288e76:;
			{
				_1ac8a7e48_structureIns(_self_, _27625_buf, _1aac0254c_Struct(_27652_k));
				return;;
			}
		}
		else if (_1aabedca7_Binded(_27652_k.ptr())) {
			_case_begin_1c0289020:;
			{
				({
					auto except = _1ace18057_WriteStr(_27625_buf, _1ab61c9b1_GetBindIdent(_27652_k));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:285:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1aac00ec9_Prim(_27652_k) != nullptr)) {
			_case_begin_1c0289086:;
			{
				_1ac8a56b5_prim(_self_, _27625_buf, _1aac00ec9_Prim(_27652_k));
				return;;
			}
		}
		else if ((_1aac03086_Tup(_27652_k) != nullptr)) {
			_case_begin_1c02890ec:;
			{
				_1ac8a5a28_tuple(_self_, _27625_buf, _1aac03086_Tup(_27652_k));
				return;;
			}
		}
		else if ((_1aac01260_Sptr(_27652_k) != nullptr)) {
			_case_begin_1c0289163:;
			{
				_1ac8a61ee_sptr(_self_, _27625_buf, _1aac01260_Sptr(_27652_k));
				return;;
			}
		}
		else if ((_1aac014e6_Ptr(_27652_k) != nullptr)) {
			_case_begin_1c02891da:;
			{
				_1ac8a6562_ptr(_self_, _27625_buf, _1aac014e6_Ptr(_27652_k));
				return;;
			}
		}
		else if ((_1aac0177c_Enum(_27652_k) != nullptr)) {
			_case_begin_1c0289262:;
			{
				_1ac8a68c5_enumDecl(_self_, _27625_buf, _1aac0177c_Enum(_27652_k));
				return;;
			}
		}
		else if ((_1aac01a13_TypeEnum(_27652_k) != nullptr)) {
			_case_begin_1c02892d9:;
			{
				_1ac8a6c38_typeEnumDecl(_self_, _27625_buf, _1aac01a13_TypeEnum(_27652_k));
				return;;
			}
		}
		else if ((_1aac02030_Slc(_27652_k) != nullptr)) {
			_case_begin_1c0289361:;
			{
				_1ac8a740e_slice(_self_, _27625_buf, _1aac02030_Slc(_27652_k));
				return;;
			}
		}
		else if ((_1aac02d00_Map(_27652_k) != nullptr)) {
			_case_begin_1c02893d8:;
			{
				_1ac8a7772_mapType(_self_, _27625_buf, _1aac02d00_Map(_27652_k));
				return;;
			}
		}
		else if ((_1aac02a69_Trait(_27652_k) != nullptr)) {
			_case_begin_1c0289460:;
			{
				({
					auto except = _1ace18057_WriteStr(_27625_buf, jule::Str::lit("jule::Trait", 11));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:312:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1aac01c99_Arr(_27652_k) != nullptr)) {
			_case_begin_1c02894d7:;
			{
				_1ac8a82ab_array(_self_, _27625_buf, _1aac01c99_Arr(_27652_k));
				return;;
			}
		}
		else if ((_1aac022b6_Fn(_27652_k) != nullptr)) {
			_case_begin_1c028955e:;
			{
				_1ac8a982e_func(_self_, _27625_buf, _1aac022b6_Fn(_27652_k));
				return;;
			}
		}
		_match_end_1c0288c89:;
	};
	{
		auto &_match_expr{ (*(_27652_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data29)) {
			_case_begin_1c02895e7:;
			{
				({
					auto except = _1ace18057_WriteStr(_27625_buf, (*((*(_27652_k))._field_Kind.cast_ptr<_1ac8a3d78_customType>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data29)))._field_kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:323:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1c0292a40:;
			{
				({
					auto except = _1ace18057_WriteStr(_27625_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:325:4"));
					(except.result);
				});
			}
		}
		_match_end_1c02929c9:;
	};
}








inline jule::Bool _1ac8ac579_resultCoder_eq(_1ac8ac579_resultCoder *_self_, _1ac8ac579_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1ac8ac579_resultCoder> static__1ac8aca85_new(jule::Ptr<_1ac8a498e_typeCoder>* _34421_tc) {
	return jule::new_ptr<_1ac8ac579_resultCoder>(_1ac8ac579_resultCoder{._field_tc=(*(_34421_tc))});;
}



inline void _1ac8acde8_ptr(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _34824_s, jule::Ptr<_1aac0deb5_Ptr> _34849_p) {
	({
		auto except = _1ace18057_WriteStr(_34824_s, jule::Str::lit("p", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:349:3"));
		(except.result);
	});
	_1ac8ae7ce_codeMut(_self_, _34824_s, &((*(_34849_p))._field_Elem));
}



inline void _1ac8ad25b_sptr(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _35325_s, jule::Ptr<_1aac0a6ed_Sptr> _35350_p) {
	({
		auto except = _1ace18057_WriteStr(_35325_s, jule::Str::lit("x", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:354:3"));
		(except.result);
	});
	_1ac8ae7ce_codeMut(_self_, _35325_s, &((*(_35350_p))._field_Elem));
}



inline void _1ac8ad5be_mapType(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _35828_s, jule::Ptr<_1aac0c865_Map> _35853_p) {
	({
		auto except = _1ace18057_WriteStr(_35828_s, jule::Str::lit("m", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:359:3"));
		(except.result);
	});
	_1ac8ae7ce_codeMut(_self_, _35828_s, &((*(_35853_p))._field_Key));
	_1ac8ae7ce_codeMut(_self_, _35828_s, &((*_35853_p.alloc)._field_Val));
}



inline void _1ac8ad932_slice(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _36426_s, jule::Ptr<_1aac0b1c1_Slc> _36451_slc) {
	({
		auto except = _1ace18057_WriteStr(_36426_s, jule::Str::lit("s", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:365:3"));
		(except.result);
	});
	_1ac8ae7ce_codeMut(_self_, _36426_s, &((*(_36451_slc))._field_Elem));
}



inline void _1ac8adc95_arr(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _36924_s, jule::Ptr<_1aac0d4e2_Arr> _36949_arr) {
	({
		auto except = _1ace18057_WriteStr(_36924_s, jule::Str::lit("a", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:370:3"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_36924_s, _1a792e799_FmtInt(static_cast<jule::I64>((*(_36949_arr))._field_N), 16LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:371:3"));
		(except.result);
	});
	_1ac8ae7ce_codeMut(_self_, _36924_s, &((*_36949_arr.alloc)._field_Elem));
}



inline void _1ac8ae108_func(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _37525_s, jule::Ptr<_1aaa3e2ce_FnIns> _37550_f) {
	({
		auto except = _1ace18057_WriteStr(_37525_s, jule::Str::lit("f", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:376:3"));
		(except.result);
	});
	{
		auto expr = &((*(_37550_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c029a1b8:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3d179_ParamIns> _37715_p = *it;
			{
				if ((*((*(_37715_p))._field_Decl))._field_Reference) {
					({
						auto except = _1ace18057_WriteStr(_37525_s, jule::Str::lit("r", 1));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:379:5"));
						(except.result);
					});
				};
				_1ac8ae7ce_codeMut(_self_, _37525_s, &((*(_37715_p))._field_Type));
			}
			_iter_next_1c029a1b8:;
			++it;
			goto _iter_begin_1c029a1b8;
		}
		_iter_end_1c029a1b8:;
	};
	if (((*_37550_f.alloc)._field_Result != nullptr)) {
		_1ac8ae7ce_codeMut(_self_, _37525_s, &((*_37550_f.alloc)._field_Result));
	};
}



inline void _1ac8ae46b_tup(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _38824_s, jule::Ptr<_1aac0bcb5_Tuple> _38849_tup) {
	{
		auto expr = &((*(_38849_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c029c52d:;
		if (it != expr_end) {
			jule::Ptr<_1aabecdb6_Type> _38915_t = *it;
			{
				({
					auto except = _1ace18057_WriteStr(_38824_s, jule::Str::lit("__jule_tuple_", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:390:4"));
					(except.result);
				});
				_1ac8ae7ce_codeMut(_self_, _38824_s, &(_38915_t));
			}
			_iter_next_1c029c52d:;
			++it;
			goto _iter_begin_1c029c52d;
		}
		_iter_end_1c029c52d:;
	};
}



inline void _1ac8ae7ce_codeMut(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _39528_s, jule::Ptr<_1aabecdb6_Type>* _39554_t) {
	if (_1aabedca7_Binded((*(_39554_t)).ptr())) {
		({
			auto except = _1ace18057_WriteStr(_39528_s, jule::Str::lit("b", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:404:4"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(_39528_s, _1ab61c9b1_GetBindIdent((*(_39554_t))));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:405:4"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39554_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data28)) {
			_case_begin_1c029dba0:;
			{
				_1ac8acde8_ptr(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1aac0deb5_Ptr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)) {
			_case_begin_1c029e71c:;
			{
				_1ac8ad25b_sptr(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1aac0a6ed_Sptr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data26)) {
			_case_begin_1c029e783:;
			{
				_1ac8ad5be_mapType(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1aac0c865_Map>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data24)) {
			_case_begin_1c029e7e9:;
			{
				_1ac8ad932_slice(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1aac0b1c1_Slc>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data27)) {
			_case_begin_1c029e860:;
			{
				_1ac8adc95_arr(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1aac0d4e2_Arr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data1)) {
			_case_begin_1c029ecb1:;
			{
				_1ac8ae108_func(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1aaa3e2ce_FnIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data3)) {
			_case_begin_1c029ed27:;
			{
				jule::Ptr<_1aaa490db_Enum> _4224_te = (*((*(_39554_t))))._field_Kind.cast_ptr<_1aaa490db_Enum>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data3);;
				static__1ac7dd80c_toOut(_39528_s, (*(_4224_te))._field_Ident, static_cast<jule::Uintptr>(_4224_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4)) {
			_case_begin_1c029ed8d:;
			{
				jule::Ptr<_1aaa4a7e6_TypeEnum> _4254_te = (*((*(_39554_t))))._field_Kind.cast_ptr<_1aaa4a7e6_TypeEnum>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data4);;
				static__1ac7dd80c_toOut(_39528_s, (*(_4254_te))._field_Ident, static_cast<jule::Uintptr>(_4254_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
			_case_begin_1c029ee04:;
			{
				jule::Ptr<_1aa969605_StructIns> _4288_si = (*((*(_39554_t))))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);;
				static__1ac7deed4_structureIns(_39528_s, &(_4288_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data2)) {
			_case_begin_1c029ee6a:;
			{
				jule::Ptr<_1aaa46935_Trait> _4318_trt = (*((*(_39554_t))))._field_Kind.cast_ptr<_1aaa46935_Trait>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data2);;
				static__1ac7de621_traitDecl(_39528_s, _4318_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)) {
			_case_begin_1c029eed1:;
			{
				({
					auto except = _1ace18057_WriteStr(_39528_s, (*((*((*(_39554_t))))._field_Kind.cast_ptr<_1aac06bc2_Prim>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:434:4"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data25)) {
			_case_begin_1c02a0047:;
			{
				_1ac8ae46b_tup(_self_, _39528_s, (*((*(_39554_t))))._field_Kind.cast_ptr<_1aac0bcb5_Tuple>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1c029e6a6:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/type.jule:438:4"));;
			}
		}
		_match_end_1c029e640:;
	};
}



inline void _1ac8aeb42_codeMut1(_1ac8ac579_resultCoder* _self_, _1ace17078_Builder* _44229_s, jule::Ptr<_1aabecdb6_Type>* _44255_t) {
	jule::Ptr<_1aac0bcb5_Tuple> _4437_tup = _1aac03086_Tup((*(_44255_t)).ptr());;
	if ((_4437_tup != nullptr)) {
		_1ac8ae46b_tup(_self_, _44229_s, _4437_tup);
	} else {
		_1ac8a9b92_kind((*(_self_))._field_tc.ptr(), _44229_s, (*(_44255_t)));
	};
}



inline jule::Slice<jule::U8> _1ac8aee50_code(_1ac8ac579_resultCoder* _self_, jule::Ptr<_1aabecdb6_Type>* _45125_t) {
	_1ace17078_Builder _4527_s = static__1ace178c5_New(20LL);;
	_1ac8ae7ce_codeMut(_self_, &(_4527_s), _45125_t);
	return _1ace19388_Buf(&_4527_s);;
}








inline jule::Bool _1c02aa3c6_Flag_eq(_1c02aa3c6_Flag *_self_, _1c02aa3c6_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c02aa591_Name(_1c02aa3c6_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c02aa6e5_What(_1c02aa3c6_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c02aa849_Reset(_1c02aa3c6_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c02aa99d_Short(_1c02aa3c6_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c02ad50b_Flag_eq(_1c02ad50b_Flag *_self_, _1c02ad50b_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c02ad6b5_Name(_1c02ad50b_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c02ad9c3_What(_1c02ad50b_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c02adb16_Reset(_1c02ad50b_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c02adc59_Short(_1c02ad50b_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c02b1751_Flag_eq(_1c02b1751_Flag *_self_, _1c02b1751_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c02b190a_Name(_1c02b1751_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c02b1c18_What(_1c02b1751_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c02b1d5b_Reset(_1c02b1751_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c02b1e9e_Short(_1c02b1751_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c02b49da_Flag_eq(_1c02b49da_Flag *_self_, _1c02b49da_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c02b4b94_Name(_1c02b49da_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c02b4ea2_What(_1c02b49da_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c02b50e5_Reset(_1c02b49da_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c02b5238_Short(_1c02b49da_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c02b7c30_Flag_eq(_1c02b7c30_Flag *_self_, _1c02b7c30_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c02b7dd9_Name(_1c02b7c30_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c02b81e7_What(_1c02b7c30_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c02b833a_Reset(_1c02b7c30_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c02b847d_Short(_1c02b7c30_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1ac9224bd_FlagSet> static__1ac9227dc_New(void) {
	return jule::new_ptr<_1ac9224bd_FlagSet>(_1ac9224bd_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1ac922c93_FindFlag(_1ac9224bd_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02bee79:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1ac9208ea_CommonFlagMptrData*)_7215_flag.safe_type())->_1ac8de028_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1c02bee79:;
			++it;
			goto _iter_begin_1c02bee79;
		}
		_iter_end_1c02bee79:;
	};
	return nullptr;;
}



inline jule::Trait _1ac9230d4_FindFlagShort(_1ac9224bd_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c02c050c:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1ac9208ea_CommonFlagMptrData*)_8215_flag.safe_type())->_1ac8de16b_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1c02c050c:;
			++it;
			goto _iter_begin_1c02c050c;
		}
		_iter_end_1c02c050c:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1ac9236ab_Parse(_1ac9224bd_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1ac924e82_argParser _1167_ap = _1ac924e82_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1ac9264b1_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1c02b7c30_Flag> _1c0341da8_addFlagCommon(_1ac9224bd_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1ac922c93_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1ac9230d4_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1c02b7c30_Flag> _1407_flag = jule::new_ptr<_1c02b7c30_Flag>(_1c02b7c30_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1ac9208ea_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1c02b49da_Flag> _1c034a587_addFlagCommon(_1ac9224bd_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1ac922c93_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1ac9230d4_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1c02b49da_Flag> _1407_flag = jule::new_ptr<_1c02b49da_Flag>(_1c02b49da_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1ac9208ea_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1c033e878_AddVar(_1ac9224bd_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1c02b7c30_Flag> _1717_flag = _1c0341da8_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1c034809b_AddVar(_1ac9224bd_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1c02b49da_Flag> _1717_flag = _1c034a587_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1c02c9da7_parseInteger(_1ac924e82_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1c02cc66d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1bb08556d_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1c02cc99d:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1bb08556d_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1c02cca14:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1bb08556d_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1c02cc31b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1c02cc382:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c02cc2a5:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c02cc195:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1c02d26a6_parseInteger(_1ac924e82_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1c02d5049:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1bb08556d_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1c02d5379:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1bb08556d_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1c02d53e0:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1bb08556d_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1c02d4be7:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1c02d4c5d:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c02d4b81:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c02d4a71:;
	};
	return __jule_func_result;;
}



inline jule::Str _1ac9257ce_getData(_1ac924e82_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1ac925a54_processFlag(_1ac924e82_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac9208ea_CommonFlag_mptr_data3)) {
			_case_begin_1c02c706e:;
			{
				jule::Ptr<_1c02b49da_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1c02b49da_Flag>((jule::Trait::Type*)&_1ac9208ea_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1c02c6e70:;
	};
	jule::Str _2203_data = _1ac9257ce_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_1ac9208ea_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1ac8de028_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression missing", 20)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac9208ea_CommonFlag_mptr_data0)) {
			_case_begin_1c02c8e61:;
			{
				jule::Ptr<_1c02aa3c6_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1c02aa3c6_Flag>((jule::Trait::Type*)&_1ac9208ea_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1c02c9da7_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1c02cd6d5, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_1ac9208ea_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1ac8de028_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid signed integer", 41)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac9208ea_CommonFlag_mptr_data1)) {
			_case_begin_1c02c878a:;
			{
				jule::Ptr<_1c02ad50b_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1c02ad50b_Flag>((jule::Trait::Type*)&_1ac9208ea_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1c02d26a6_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1c02d60b1, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_1ac9208ea_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1ac8de028_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid unsigned integer", 43)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac9208ea_CommonFlag_mptr_data2)) {
			_case_begin_1c02c8ec7:;
			{
				jule::Ptr<_1c02b1751_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1c02b1751_Flag>((jule::Trait::Type*)&_1ac9208ea_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1a7924b24_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_1ac9208ea_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1ac8de028_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid floating-point", 41)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1ac9208ea_CommonFlag_mptr_data4)) {
			_case_begin_1c02c903d:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1c02b7c30_Flag>((jule::Trait::Type*)&_1ac9208ea_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1c02c8614:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ac925d0c_singleDash(_1ac924e82_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1c02db98a:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1ac9230d4_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move((*(_25227_arg))); size += part0.len(); jule::Str part1 = std::move(jule::Str::lit(": flag is not exist: ", 21)); size += part1.len(); jule::Str part2 = std::move(__jule_strFromRune(_25710_r)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
				({
					auto except = _1ac925a54_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1c02db98a:;
			it += len;
			goto _iter_begin_1c02db98a;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ac9260b5_doubleDash(_1ac924e82_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	jule::Trait _2707_flag = _1ac922c93_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type5)};
	};
	return _1ac925a54_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ac9262b3_tryArg(_1ac924e82_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1ac9260b5_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1ac925d0c_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1ac9264b1_parse(_1ac924e82_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1ac9262b3_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1c02e21ee:;
	}
	_iter_end_1c02e21ee:;;
	return jule::VoidExceptional{};
}








inline jule::Bool _1ad0a39ea_Dir_eq(_1ad0a39ea_Dir *_self_, _1ad0a39ea_Dir _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		_1ad133ecb_Stat_eq(&_self_->_field_Stat, _self_->_field_Stat);
}

inline jule::Exceptional<jule::Slice<_1ad0a39ea_Dir>> static__1bb0945e3_Read(jule::Str _1117_path) {
	jule::Slice<_1ad0a39ea_Dir> __jule_func_result;
	jule::Slice<jule::U8> _123_s = _1c6979c48_StrToBytes(_1117_path);;
	DIR* _137_dir = _1c6c61b01_Opendir((&(_123_s[0LL])));;
	if ((_137_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<_1ad0a39ea_Dir>>{.error=jule::Any(_1ad148b5b_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _184_dirent = _1c6c61ccc_Readdir(_137_dir);;
			if ((_184_dirent == nullptr)) {
				goto _iter_end_1bc6e467b;
			};
			jule::Str _224_name = _1c69799b2_BytePtrToStr(((jule::U8*)((*(_184_dirent)).d_name)));;
			_1ad133ecb_Stat _238_stat = ({
				auto except = static__1ad0a5a41_Of(_1bb0916de_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1117_path; (*it++) = _224_name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<_1ad0a39ea_Dir>>{.error=except.error};
				} _1ad133ecb_Stat{._field_mode=0LL, ._field_size=0};});
			});;
			{ jule::Slice<_1ad0a39ea_Dir> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_1ad0a39ea_Dir{._field_Name=_224_name, ._field_Stat=_238_stat}); };
		}
	_iter_next_1bc6e467b:;
	}
	_iter_end_1bc6e467b:;;
	_1c6c62074_Closedir(_137_dir);
	return jule::Exceptional<jule::Slice<_1ad0a39ea_Dir>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1bb0947e1_Create(jule::Str _3419_path) {
	jule::Slice<jule::U8> _383_s = _1c6979c48_StrToBytes(_3419_path);;
	if ((_1c6c6297b_Mkdir((&(_383_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ad148b5b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1bb094a22_Remove(jule::Str _4519_path) {
	jule::Slice<jule::U8> _463_s = _1c6979c48_StrToBytes(_4519_path);;
	if ((_1c6c62c45_Rmdir((&(_463_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1ad148b5b_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}







inline jule::Ptr<_1ad0a4622_Cmd> static__1ad0a4a73_New(jule::Str _3516_path) {
	return jule::new_ptr<_1ad0a4622_Cmd>(_1ad0a4622_Cmd{._field_attrs=_1ad131d64_cmdAttrs{._field_pid=-1LL}, ._field_path=_3516_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _1ad0a4c71_Spawn(_1ad0a4622_Cmd* _self_) {
	return _1ad132b12_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1ad0a5205_Wait(_1ad0a4622_Cmd* _self_) {
	return _1ad133096_wait(_self_);
}



inline jule::VoidExceptional _1ad132b12_spawn(_1ad0a4622_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		__jule_panic_s(jule::Str::lit("process: command is already spawned", 35) + jule::Str("\nlocation: std/os/cmd_unix.jule:84:4"));;
	};
	jule::Str _863_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _877_pipe;;
	if ((pipe((&(_877_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type139)};
	};
	jule::I32 _913_pipe0 = static_cast<jule::I32>(_877_pipe[0LL]);;
	jule::I32 _923_pipe1 = static_cast<jule::I32>(_877_pipe[1LL]);;
	if ((_1c6c609ce_Fcntl(_923_pipe1, F_SETFD, (fcntl(_923_pipe1, F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_1c6ca10a2_Close(_913_pipe0);
		_1c6ca10a2_Close(_923_pipe1);
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type139)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1bc711ec3:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type139)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1bc711d3b:;
			{
				_1c6ca10a2_Close(_913_pipe0);
				jule::Slice<jule::Str> _1048_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
				_1048_args[0LL]=_863_path;
				(_1048_args).append((*(_self_))._field_Args);;
				({
					auto except = _1ad13287b_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_1ad13264a_execvp(&(_863_path), &(_1048_args));
				jule::Str _1094_code = _1ad1084bc_Itoa(_1c6c329c3_GetLastErrno());;
				{
					_1c6ca1459_Write(_923_pipe1, (&(_1094_code[0LL])), static_cast<jule::U32>(_1094_code.len()));
				};
				_1c6ca10a2_Close(_923_pipe1);
				_1ad142e41_Exit(1LL);
			}
		}
		else {
			_case_begin_1bc70dbb2:;
			{
				_1c6ca10a2_Close(_923_pipe1);
				jule::Array<jule::U8,16> _11512_buf = ({ auto __jule_collection = jule::Array<jule::U8,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
				jule::I32 _1164_n = _1c6ca0bc8_Read(_913_pipe0, (&(_11512_buf[0LL])), static_cast<jule::U32>(16LLU));;
				_1c6ca10a2_Close(_913_pipe0);
				if ((_1164_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I32 _1205_code;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad0eeb67_AtoiBp((&(_11512_buf[0LL])), _1164_n);
						_1205_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_1ad13342b_cmdErrorFromCode(_1205_code), &__jule_any_type139)};
				};
			}
		}
		_match_end_1bc710565:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1ad133096_wait(_1ad0a4622_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		__jule_panic_s(jule::Str::lit("process: command is not spawned", 31) + jule::Str("\nlocation: std/os/cmd_unix.jule:138:4"));;
	};
	jule::I32 _1407_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_1407_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_1ad13363a_getLastCmdError(), &__jule_any_type139)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I32>{.result=WEXITSTATUS(_1407_stat)};;
}







inline __jule_tuple_x_1ab61326a_IR__jule_tuple_s_1ace263b7_Log static__1ab613743_Build(jule::Str _3018_path, jule::I32 _3029_flags) {
	__jule_tuple_x_1ab61326a_IR__jule_tuple_s_1ace263b7_Log __jule_func_result;
	jule::Ptr<_1ab6106da_Importer> _317_importer = static__1ab610b19_New(_1ab6151e5_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1aa0eb8ae_AST>> _337_files;
	jule::Slice<_1ace263b7_Log> _3318_logs;
	({
		__jule_tuple_sx_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab612104_ImportPackage(_317_importer.ptr(), _3018_path, true);
		_337_files = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Str _373_root = _3018_path;;
	if ((_337_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1aa0eb8ae_AST> _457_firstFile = _337_files[0LL];;
	_1ab61549d_pushRuntimeToAST(&(_457_firstFile));
	jule::Ptr<_1aab3267a_Package> _487_pkg;
	({
		__jule_tuple_x_1aab3267a_Package__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1aac254d7_AnalyzePackage(_337_files, jule::Trait(_317_importer, (jule::Trait::Type*)&_1aab2be05_Importer_mptr_data0), _3029_flags);
		_487_pkg = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab61326a_IR> _537_ir = jule::new_ptr<_1ab61326a_IR>(_1ab61326a_IR{._field_Root=_373_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_487_pkg, ._field_Runtime=jule::Ptr<_1aab2ee08_ImportInfo>(nullptr), ._field_Used=_1ab610da0_AllPackages(_317_importer.ptr()), ._field_Ordered=_1ab622367_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1aa966767_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr)}});;
	(*(_537_ir))._field_Passes=_1ab614ed6_getAllUniquePasses(&((*_537_ir.alloc)._field_Main), (*_537_ir.alloc)._field_Used);
	(*_537_ir.alloc)._field_Runtime=(*((*(_487_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _537_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ab613c2c_appendStructs(_1ab61326a_IR* _self_, jule::Ptr<_1aab3267a_Package>* _6830_p, jule::Slice<jule::Ptr<_1aa966767_Struct>>* _6854_buffer) {
	{
		auto expr = &((*((*(_6830_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6e08d9:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _6915_f = *it;
			{
				{
					auto expr = &((*(_6915_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be6e13ce:;
					if (it != expr_end) {
						jule::Ptr<_1aa966767_Struct> _7016_s = *it;
						{
							if ((!((*(_7016_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1aa966767_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push(_7016_s); };
							};
						}
						_iter_next_1be6e13ce:;
						++it;
						goto _iter_begin_1be6e13ce;
					}
					_iter_end_1be6e13ce:;
				};
				{
					auto expr = &((*_6915_f.alloc)._field_TypeAliases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be6e1797:;
					if (it != expr_end) {
						jule::Ptr<_1aabec1a1_TypeAlias> _7516_ta = *it;
						{
							if (((!((*(_7516_ta))._field_Binded)) && (*_7516_ta.alloc)._field_Strict)) {
								{ jule::Slice<jule::Ptr<_1aa966767_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push((*((*((*((*_7516_ta.alloc)._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)))._field_Decl); };
							};
						}
						_iter_next_1be6e1797:;
						++it;
						goto _iter_begin_1be6e1797;
					}
					_iter_end_1be6e1797:;
				};
			}
			_iter_next_1be6e08d9:;
			++it;
			goto _iter_begin_1be6e08d9;
		}
		_iter_end_1be6e08d9:;
	};
}



inline jule::Slice<jule::Ptr<_1aa966767_Struct>> _1ab613eb3_GetAllStructures(_1ab61326a_IR* _self_) {
	jule::Slice<jule::Ptr<_1aa966767_Struct>> _8611_buffer = nullptr;;
	_1ab613c2c_appendStructs(_self_, &((*(_self_))._field_Main), &(_8611_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6e336a:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _8815_u = *it;
			{
				if ((!((*(_8815_u))._field_Binded))) {
					_1ab613c2c_appendStructs(_self_, &((*_8815_u.alloc)._field_Package), &(_8611_buffer));
				};
			}
			_iter_next_1be6e336a:;
			++it;
			goto _iter_begin_1be6e336a;
		}
		_iter_end_1be6e336a:;
	};
	return _8611_buffer;;
}



inline void _1ab614326_appendGlobals(_1ab61326a_IR* _self_, jule::Ptr<_1aab3267a_Package>* _9630_p, jule::Slice<jule::Ptr<_1aab70795_Var>>* _9654_buffer) {
	{
		auto expr = &((*((*(_9630_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6e5515:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _9715_f = *it;
			{
				{
					auto expr = &((*(_9715_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be6e600a:;
					if (it != expr_end) {
						jule::Ptr<_1aab70795_Var> _9816_v = *it;
						{
							if (((((*(_9816_v))._field_Token != nullptr) && (!((*_9816_v.alloc)._field_Binded))) && (!((*_9816_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1aab70795_Var>> &__jule_push_dest = (*(_9654_buffer)); __jule_push_dest.push(_9816_v); };
							};
						}
						_iter_next_1be6e600a:;
						++it;
						goto _iter_begin_1be6e600a;
					}
					_iter_end_1be6e600a:;
				};
			}
			_iter_next_1be6e5515:;
			++it;
			goto _iter_begin_1be6e5515;
		}
		_iter_end_1be6e5515:;
	};
}



inline jule::Slice<jule::Ptr<_1aab70795_Var>> _1ab6145ac_GetAllGlobals(_1ab61326a_IR* _self_) {
	jule::Slice<jule::Ptr<_1aab70795_Var>> _10911_buffer = nullptr;;
	_1ab614326_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10911_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6e7847:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _11115_u = *it;
			{
				if ((!((*(_11115_u))._field_Binded))) {
					_1ab614326_appendGlobals(_self_, &((*_11115_u.alloc)._field_Package), &(_10911_buffer));
				};
			}
			_iter_next_1be6e7847:;
			++it;
			goto _iter_begin_1be6e7847;
		}
		_iter_end_1be6e7847:;
	};
	return _10911_buffer;;
}



inline void _1ab6147aa_Order(_1ab61326a_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1ab6145ac_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1ab613eb3_GetAllStructures(_self_);
	_1be6e93a4_order((*(_self_))._field_Ordered._field_Globals);
	_1be6e9ad0_order((*(_self_))._field_Ordered._field_Structs);
}







inline void _1c694b577_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _1c69799b2_BytePtrToStr(jule::U8* _6524_s) {
	if ((_6524_s == nullptr)) {
		return jule::Str();;
	};
	jule::I32 _696_n = 0LL;;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {};
	};
	if ((_696_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _776_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_696_n, _696_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_696_n=0LL;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {
			{
				_776_buf[_696_n]=_6524_s[_696_n];
			}
		_iter_next_1ac962563:;
		}
		_iter_end_1ac962563:;;
	};
	return __jule_bytesToStr(_776_buf);;
}



inline jule::Slice<jule::U8> _1c6979c48_StrToBytes(jule::Str _9015_s) {
	{
		auto expr = &(_9015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ac962981:;
		if (it != expr_end) {
			jule::I32 _916_i = it - expr->begin();
			jule::U8 *_919_b = it;
			{
				if (((*(_919_b)) == 0LLU)) {
					jule::Slice<jule::U8> _938_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_916_i + 1LL), (_916_i + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
					jule::copy(_938_bytes, _9015_s.slice(0LL, _938_bytes.len()));
					return _938_bytes;;
				};
			}
			_iter_next_1ac962981:;
			++it;
			_916_i++;
			goto _iter_begin_1ac962981;
		}
		_iter_end_1ac962981:;
	};
	jule::Slice<jule::U8> _986_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_9015_s.len() + 1LL), (_9015_s.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_986_bytes, _9015_s);
	return _986_bytes;;
}



inline jule::Str _1c697a5ea_Str(jule::U8* _108_b, jule::I32 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1ac968c1d_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _1c69914ac_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1ac968c1d_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _1c6991743_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1c697a5ea_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _1c6991a0c_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline jule::I32 _1c6c329c3_GetLastErrno(void) {
	return errno;;
}



inline jule::I32 _1c6c609ce_Fcntl(jule::I32 _5510_handle, jule::I32 _5523_cmd, jule::I32 _5533_arg) {
	return fcntl(_5510_handle, _5523_cmd, _5533_arg);;
}



inline jule::I32 _1c6c60d53_Stat(jule::U8* _6016_path, struct stat* _6033_stat) {
	return stat(((char*)(_6016_path)), _6033_stat);;
}



inline jule::I32 _1c6c61282_Open(jule::U8* _6516_path, jule::I32 _6529_flag, jule::I32 _6540_mode) {
	return open(((char*)(_6516_path)), _6529_flag, _6540_mode);;
}



inline jule::U8* _1c6c61606_Getcwd(jule::U8* _7118_buff, jule::U32 _7131_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7118_buff)), _7131_bufflen)));;
}



inline DIR* _1c6c61b01_Opendir(jule::U8* _7619_path) {
	return ((DIR*)(opendir(((char*)(_7619_path)))));;
}



inline struct dirent* _1c6c61ccc_Readdir(DIR* _7923_dir) {
	return ((struct dirent*)(readdir(((DIR*)(_7923_dir)))));;
}



inline jule::I32 _1c6c62074_Closedir(DIR* _8224_dir) {
	return closedir(((DIR*)(_8224_dir)));;
}



inline jule::I32 _1c6c6297b_Mkdir(jule::U8* _9117_path, jule::I32 _9130_mode) {
	return mkdir(((char*)(_9117_path)), _9130_mode);;
}



inline jule::I32 _1c6c62c45_Rmdir(jule::U8* _9617_path) {
	return rmdir(((char*)(_9617_path)));;
}



inline jule::I32 _1c6c6300e_Unlink(jule::U8* _9918_path) {
	return unlink(((char*)(_9918_path)));;
}



inline jule::I32 _1c6ca0bc8_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I32 _1c6ca10a2_Close(jule::I32 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I32 _1c6ca1459_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _1c6ca168a_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline __jule_tuple_i32__jule_tuple_int _1e0edc15e_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _1e0edadc7_first[static_cast<jule::I32>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1952_sz = static_cast<jule::I32>((_1872_x & 7LLU));;
	_1e0edb47c_acceptRange _1962_accept = _1e0edb823_acceptRanges[static_cast<jule::I32>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1e0edc4a0_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _1e0edadc7_first[static_cast<jule::I32>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2422_sz = static_cast<jule::I32>((_2342_x & 7LLU));;
	_1e0edb47c_acceptRange _2432_accept = _1e0edb823_acceptRanges[static_cast<jule::I32>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1e0edca00_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _3212_end = _31722_s.len();;
	jule::I32 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_1e0ede21b_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1aca10e91;
			};
		}
	_iter_next_1aca10e91:;
	}
	_iter_end_1aca10e91:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc4a0_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1e0edd54a_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _1e0edd8be_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1e0edd8be_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1aca1ebe7:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1aca1ec5d:;
			{
				_41242_r=128LL;
				goto _case_begin_1aca1e93e;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1aca1e93e:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1aca1e4bb:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1aca1e444:;
	};
}



inline jule::I32 _1e0edde52_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1aca28d66;
			};
			jule::U8 _4823_x = _1e0edadc7_first[static_cast<jule::I32>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1aca28d66;
			};
			jule::I32 _4877_size = static_cast<jule::I32>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1aca28d66;
			};
			_1e0edb47c_acceptRange _4923_accept = _1e0edb823_acceptRanges[static_cast<jule::I32>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1aca28d66:;
	}
	_iter_end_1aca28d66:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1e0ede21b_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _1c6d924c3_LeadingZeros64(jule::U64 _5919_x) {
	return (64LL - _1c6d99d5a_Len64(_5919_x));;
}



inline jule::I32 _1c6d93419_TrailingZeros(jule::U32 _8118_x) {
	{
		return _1c6d93cee_TrailingZeros32(static_cast<jule::U32>(_8118_x));;
	};
}



inline jule::I32 _1c6d93cee_TrailingZeros32(jule::U32 _10320_x) {
	if ((_10320_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(_1c6d92abc__DE_BRUIJN32_TAB[static_cast<jule::I32>(((jule::U32)((_10320_x & (-(_10320_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I32 _1c6d940b8_TrailingZeros64(jule::U64 _11220_x) {
	if ((_11220_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(_1c6d931a5__DE_BRUIJN64_TAB[static_cast<jule::I32>(((jule::U64)((_11220_x & (-(_11220_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I32 _1c6d99a91_Len32(jule::U32 _35014_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35014_x >= 65536LLU)) {
		_35014_x=(_35014_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35014_x >= 256LLU)) {
		_35014_x=(_35014_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_35014_x))));
	return __jule_func_result;;
}



inline jule::I32 _1c6d99d5a_Len64(jule::U64 _36414_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36414_x >= 4294967296LLU)) {
		_36414_x=(_36414_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36414_x >= 65536LLU)) {
		_36414_x=(_36414_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36414_x >= 256LLU)) {
		_36414_x=(_36414_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_36414_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1c6d9aae7_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41310_x + _41318_y) + _41326_carry);
	__jule_func_result.__jule_result_arg1=(((_41310_x & _41318_y) | ((_41310_x | _41318_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1c6d9c401_Mul64(jule::U64 _49710_x, jule::U64 _49718_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _4992_x0 = (_49710_x & 4294967295LLU);;
	jule::U64 _5002_x1 = (_49710_x >> 32LLU);;
	jule::U64 _5012_y0 = (_49718_y & 4294967295LLU);;
	jule::U64 _5022_y1 = (_49718_y >> 32LLU);;
	jule::U64 _5032_w0 = (jule::U64)(_4992_x0 * _5012_y0);;
	jule::U64 _5042_t = (jule::U64)((jule::U64)(_5002_x1 * _5012_y0) + (_5032_w0 >> 32LLU));;
	jule::U64 _5056_w1 = (_5042_t & 4294967295LLU);;
	jule::U64 _5062_w2 = (_5042_t >> 32LLU);;
	_5056_w1+=(jule::U64)(_4992_x0 * _5022_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5002_x1 * _5022_y1) + _5062_w2) + (_5056_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49710_x * _49718_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _1e0ee3e68__coSpawn(_1319_func, _1334_args);;
}



inline jule::U64 _1c68b9858_f64bits(jule::F64 _612_f) {
	return (*(((jule::U64*)((&(_612_f))))));;
}



inline jule::I32 _1c68ba24e_randInt(jule::U64 _716_seed, jule::I32 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U32 _172_p2 = static_cast<jule::U32>(_162_p1);;
	return ({ jule::I32 __jule_x = static_cast<jule::I32>((({ jule::U32 __jule_x = _172_p2; jule::U32 __jule_y = 1LLU; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I32 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x % __jule_y)); });;
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(100LL, 100LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _176_i = (_166_buf.len() - 1LL);;
	jule::U64 _186_n = static_cast<jule::U64>(((jule::Uintptr)(_1113_p)));;
	for (; (_176_i > 0LL); (_176_i)--) {
		{
			_166_buf[_176_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I32>((_186_n % 16LL)));
			if ((_186_n < 16LLU)) {
				goto _iter_end_1acae6120;
			};
			_186_n=(_186_n >> 4LLU);
		}
	_iter_next_1acae6120:;
	}
	_iter_end_1acae6120:;;
	(_176_i)--;
	_166_buf[_176_i]='x';
	(_176_i)--;
	_166_buf[_176_i]='0';
	return _1c6991a0c_StrFromBytes(_166_buf.slice(_176_i));;
}



inline jule::Str __jule_boolToStr(jule::Bool _3514_b) {
	if (_3514_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4413_x) {
	if ((_4413_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4413_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4413_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5317_x) {
	jule::Slice<jule::U8> _546_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _552_n = _1c6992d60_u64ToBuf(_546_buf, _5317_x);;
	(_546_buf).mut_slice(0LL, _552_n);;
	return _1c6991a0c_StrFromBytes(_546_buf);;
}



inline jule::I32 _1c6992d60_u64ToBuf(jule::Slice<jule::U8> _6217_buf, jule::U64 _6234_x) {
	if ((_6234_x == 0LLU)) {
		_6217_buf[0LL]='0';
		return 1LL;;
	};
	jule::I32 _676_i = 0LL;;
	while ((_6234_x >= 10LLU)) {
		{
			jule::U64 _693_q = (_6234_x / 10LLU);;
			_6217_buf[_676_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _6234_x) - (jule::U64)(_693_q * 10LLU)));
			(_676_i)++;
			_6234_x=_693_q;
		}
	_iter_next_1acaea5ec:;
	}
	_iter_end_1acaea5ec:;;
	jule::I32 _752_n = (_676_i + 1LL);;
	_6217_buf[_676_i]=static_cast<jule::U8>((jule::U64)('0' + _6234_x));
	_676_i=0LL;
	jule::I32 _806_j = (_752_n - 1LL);;
	for (; (_676_i < _806_j); ({
		jule::I32 ___jule_assign_arg = (_676_i + 1LL);
		jule::I32 _1___jule_assign_arg = (_806_j - 1LL);
		_676_i = ___jule_assign_arg;
		_806_j = _1___jule_assign_arg;
	})) {
		{
			std::swap(_6217_buf[_676_i], _6217_buf[_806_j]);
		}
	_iter_next_1acaecdd5:;
	}
	_iter_end_1acaecdd5:;;
	return _752_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _9017_f) {
	;
	;
	jule::U64 _932_bits = _1c68b9858_f64bits(_9017_f);;
	jule::Bool _942_neg = ((_932_bits >> 63LLU) != 0LLU);;
	jule::I32 _952_exp = (static_cast<jule::I32>((_932_bits >> 52LLU)) & 2047LLU);;
	jule::U64 _962_mant = (_932_bits & 4503599627370495LLU);;
	if ((_952_exp == 2047LLU)) {
		{
			
			if ((_962_mant != 0LLU)) {
				_case_begin_1acb02428:;
				{
					return jule::Str::lit("NaN", 3);;
				}
			}
			else if (_942_neg) {
				_case_begin_1acb021a3:;
				{
					return jule::Str::lit("-Inf", 4);;
				}
			}
			else {
				_case_begin_1acb0005d:;
				{
					return jule::Str::lit("+Inf", 4);;
				}
			}
			_match_end_1acb01c0d:;
		};
	};
	;
	jule::I32 _1132_n = 26LL;;
	jule::Slice<jule::U8> _1146_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_1132_n, _1132_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1156_j = 0LL;;
	if (_942_neg) {
		_1146_buf[0LL]='-';
		(_1156_j)++;
		_9017_f=(-(_9017_f));
	};
	jule::U64 _1222_intPart = static_cast<jule::U64>(_9017_f);;
	_1156_j+=_1c6992d60_u64ToBuf(_1146_buf.slice(_1156_j), _1222_intPart);
	_1146_buf[_1156_j]='.';
	jule::F64 _1266_fracPart = (_9017_f - static_cast<jule::F64>(_1222_intPart));;
	jule::I32 _1276_i = 0LL;;
	jule::I32 _1302_prec = (17LL - _1156_j);;
	for (; (_1276_i < _1302_prec); (_1276_i)++) {
		{
			_1266_fracPart*=10LL;
			jule::I32 _1333_digit = static_cast<jule::I32>(_1266_fracPart);;
			if (((_1333_digit < 0LL) || (_1333_digit > 9LL))) {
				goto _iter_end_1acb0556e;
			};
			(_1156_j)++;
			_1146_buf[_1156_j]=static_cast<jule::U8>(('0' + _1333_digit));
			_1266_fracPart-=static_cast<jule::F64>(_1333_digit);
		}
	_iter_next_1acb0556e:;
	}
	_iter_end_1acb0556e:;;
	for (; (_1156_j >= 0LL); (_1156_j)--) {
		{
			if ((_1146_buf[_1156_j] != '0')) {
				goto _iter_end_1acb06dab;
			};
		}
	_iter_next_1acb06dab:;
	}
	_iter_end_1acb06dab:;;
	if ((_1146_buf[_1156_j] != '.')) {
		(_1156_j)++;
	};
	(_1146_buf).mut_slice(0LL, _1156_j);;
	return _1c6991a0c_StrFromBytes(_1146_buf);;
}



inline jule::Str _1c031681c_arrToStr(jule::Slice<jule::U8> _15816_x) {
	jule::Slice<jule::U8> _1596_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1596_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_15816_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0317e39:;
		if (it != expr_end) {
			jule::I32 _1616_i = it - expr->begin();
			jule::U8 *_1619_z = it;
			{
				if ((_1616_i > 0LL)) {
					(_1596_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1596_buf).append(_1bc780aad_toStr((*(_1619_z))));;
			}
			_iter_next_1c0317e39:;
			++it;
			_1616_i++;
			goto _iter_begin_1c0317e39;
		}
		_iter_end_1c0317e39:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1596_buf; __jule_push_dest.push(']'); };
	return _1c6991a0c_StrFromBytes(_1596_buf);;
}



inline jule::Str _1c0309458_structToStr(_1ace17078_Builder _19119_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1c030be72:;
				{
					;
					{
						
{
							_case_begin_1c030d54a:;
							{
								;
								;
							}
						}
						_match_end_1c030d22b:;
					};
				}
			}
			_match_end_1c030c505:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _2126_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _2126_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1c031064b:;
				{
					(_2126_buf).append(_1c0310b79_toStr(_19119_x._field_buf));;
				}
			}
			_match_end_1c031031b:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _2126_buf; __jule_push_dest.push('}'); };
	return _1c6991a0c_StrFromBytes(_2126_buf);;
}



inline jule::Str _1acb72aa3_toStr(jule::Any _23213_x) {
	;
	{
		
{
			_case_begin_1acb73c91:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1acb73b1a:;
	};
	{
		
{
			_case_begin_1acb747a8:;
			{
				return _23213_x.type->to_str(_23213_x.data.alloc);;
			}
		}
		_match_end_1acb73b81:;
	};
}

inline jule::Str _1acbbe47e_toStr(jule::Str _23213_x) {
	;
	;
	{
		
{
			_case_begin_1acbc0705:;
			{
				return _23213_x;;
			}
		}
		_match_end_1acbc0815:;
	};
}

inline jule::Str _1bc6e53d5_toStr(jule::I32 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bc6e70a7:;
			{
				return _1bc6eb5ea_toStr(_23213_x);;
			}
		}
		_match_end_1bc6e65d4:;
	};
}

inline jule::Str _1bc6eb5ea_toStr(jule::I32 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bc6ecd16:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_23213_x));;
			}
		}
		_match_end_1bc6ec93c:;
	};
}

inline jule::Str _1bc70746e_toStr(jule::I32 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bc70de59:;
			{
				return _1bc6eb5ea_toStr(_23213_x);;
			}
		}
		_match_end_1bc70d486:;
	};
}

inline jule::Str _1bc7404a7_toStr(jule::I32 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bc7421ce:;
			{
				return _1bc6eb5ea_toStr(_23213_x);;
			}
		}
		_match_end_1bc74171c:;
	};
}

inline jule::Str _1bc780aad_toStr(jule::U8 _23213_x) {
	;
	{
		
{
			_case_begin_1bc781e22:;
			{
				;
			}
		}
		_match_end_1bc781c35:;
	};
	{
		
{
			_case_begin_1bc78253d:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_23213_x));;
			}
		}
		_match_end_1bc782395:;
	};
}

inline jule::Str _1bc7810ca_toStr(jule::I32 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bc787796:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_23213_x));;
			}
		}
		_match_end_1bc78739a:;
	};
}

inline jule::Str _1bca97c60_toStr(jule::I32 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bca998dd:;
			{
				return _1bc6eb5ea_toStr(_23213_x);;
			}
		}
		_match_end_1bca98e1a:;
	};
}

inline jule::Str _1bcd5d762_toStr(jule::I64 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bcd5ed18:;
			{
				return __jule_i64ToStr(_23213_x);;
			}
		}
		_match_end_1bcd5e91c:;
	};
}

inline jule::Str _1bcd5da3c_toStr(jule::U64 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bcd6568c:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_23213_x));;
			}
		}
		_match_end_1bcd6522a:;
	};
}

inline jule::Str _1bcd644b0_toStr(jule::Bool _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bcd6a53d:;
			{
				return __jule_boolToStr(_23213_x);;
			}
		}
		_match_end_1bcd69eee:;
	};
}

inline jule::Str _1bcd6aa38_toStr(jule::F64 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bcd6c221:;
			{
				return __jule_f64ToStr(_23213_x);;
			}
		}
		_match_end_1bcd6bc6a:;
	};
}

inline jule::Str _1bce1ea65_toStr(jule::F32 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bce21281:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_23213_x));;
			}
		}
		_match_end_1bce20cdb:;
	};
}

inline jule::Str _1bce20093_toStr(jule::I8 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bce26000:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_23213_x));;
			}
		}
		_match_end_1bce25b37:;
	};
}

inline jule::Str _1bc780e87_toStr(jule::I16 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bce2bad8:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_23213_x));;
			}
		}
		_match_end_1bce2b6dc:;
	};
}

inline jule::Str _1bce2aae8_toStr(jule::U8 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bce3379e:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_23213_x));;
			}
		}
		_match_end_1bce3333c:;
	};
}

inline jule::Str _1bce34371_toStr(jule::U16 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bce3884d:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_23213_x));;
			}
		}
		_match_end_1bce383db:;
	};
}

inline jule::Str _1bce39420_toStr(jule::U32 _23213_x) {
	;
	;
	{
		
{
			_case_begin_1bce3d8ec:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_23213_x));;
			}
		}
		_match_end_1bce3d48a:;
	};
}

inline jule::Str _1bd18d6a7_toStr(jule::Ptr<_1aab70795_Var> _23213_x) {
	;
	{
		
{
			_case_begin_1bd18e7c9:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd18e653:;
	};
	{
		
{
			_case_begin_1bd190a1c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd18e6b9:;
	};
}

inline jule::Str _1bd190c81_toStr(jule::Ptr<_1aabec1a1_TypeAlias> _23213_x) {
	;
	{
		
{
			_case_begin_1bd191d09:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd191b94:;
	};
	{
		
{
			_case_begin_1bd19304c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd191c0a:;
	};
}

inline jule::Str _1bd193316_toStr(jule::Ptr<_1aa966767_Struct> _23213_x) {
	;
	{
		
{
			_case_begin_1bd19559e:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd19547d:;
	};
	{
		
{
			_case_begin_1bd1967e2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd195956:;
	};
}

inline jule::Str _1bd196a45_toStr(jule::Ptr<_1aaa3b221_Fn> _23213_x) {
	;
	{
		
{
			_case_begin_1bd198ccd:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd198bac:;
	};
	{
		
{
			_case_begin_1bd19a021:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd199185:;
	};
}

inline jule::Str _1bd19a472_toStr(jule::Ptr<_1aaa46935_Trait> _23213_x) {
	;
	{
		
{
			_case_begin_1bd19c74e:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd19c5d9:;
	};
	{
		
{
			_case_begin_1bd19da19:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd19c650:;
	};
}

inline jule::Str _1bd19d167_toStr(jule::Ptr<_1aaa490db_Enum> _23213_x) {
	;
	{
		
{
			_case_begin_1bd1a0bc5:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd1a0a3d:;
	};
	{
		
{
			_case_begin_1bd1a1e6d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd1a106b:;
	};
}

inline jule::Str _1bd1a1b71_toStr(jule::Ptr<_1aaa4a7e6_TypeEnum> _23213_x) {
	;
	{
		
{
			_case_begin_1bd1a40a2:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd1a2897:;
	};
	{
		
{
			_case_begin_1bd1a5290:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd1a4404:;
	};
}

inline jule::Str _1bd1c6129_toStr(jule::Ptr<_1aa965447_Field> _23213_x) {
	;
	{
		
{
			_case_begin_1bd1c72c3:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd1c714c:;
	};
	{
		
{
			_case_begin_1bd1c8516:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd1c71b3:;
	};
}

inline jule::Str _1bd1d7877_toStr(jule::Ptr<_1aa9b96cc_Const> _23213_x) {
	;
	{
		
{
			_case_begin_1bd1d8a21:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd1d889a:;
	};
	{
		
{
			_case_begin_1bd1d9c64:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd1d8911:;
	};
}

inline jule::Str _1bd200e34_toStr(jule::Ptr<_1aaa48580_EnumItem> _23213_x) {
	;
	{
		
{
			_case_begin_1bd2020bc:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd201e46:;
	};
	{
		
{
			_case_begin_1bd203310:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd201eac:;
	};
}

inline jule::Str _1bd211c7a_toStr(jule::Ptr<_1aaa3974c_Param> _23213_x) {
	;
	{
		
{
			_case_begin_1bd213166:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bce209cd:;
	};
	{
		
{
			_case_begin_1bd2143a9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bce20a44:;
	};
}

inline jule::Str _1bd3b99e3_toStr(jule::Ptr<_1aa0ede22_IdentTypeDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bd3bad9b:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd3bac25:;
	};
	{
		
{
			_case_begin_1bd3bc0de:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd3bac8b:;
	};
}

inline jule::Str _1bd3dc64d_toStr(jule::Ptr<_1aab018ad_MultiAssign> _23213_x) {
	;
	{
		
{
			_case_begin_1bd3dd8c4:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd3dd74d:;
	};
	{
		
{
			_case_begin_1bd3deb17:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd3dd7b4:;
	};
}

inline jule::Str _1bd3e5403_toStr(jule::Ptr<_1aa103740_TupleExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd3e6987:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd3e6811:;
	};
	{
		
{
			_case_begin_1bd3e7bca:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd3e6877:;
	};
}

inline jule::Str _1bd402795_toStr(jule::Ptr<_1aa10c2b5_AssignSt> _23213_x) {
	;
	{
		
{
			_case_begin_1bd4038c8:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd403752:;
	};
	{
		
{
			_case_begin_1bd404b1b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd4037b8:;
	};
}

inline jule::Str _1bd404a2d_toStr(jule::Ptr<_1aa102b4b_Expr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd405633:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd4054bd:;
	};
	{
		
{
			_case_begin_1bd406887:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd405534:;
	};
}

inline jule::Str _1bd40a98a_toStr(jule::Ptr<_1aab00d74_Postfix> _23213_x) {
	;
	{
		
{
			_case_begin_1bd4070b3:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd406e4d:;
	};
	{
		
{
			_case_begin_1bd409abb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd406eb4:;
	};
}

inline jule::Str _1bd40de00_toStr(jule::Ptr<_1aab0132a_Assign> _23213_x) {
	;
	{
		
{
			_case_begin_1bd409ea6:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd409d85:;
	};
	{
		
{
			_case_begin_1bd40c4d6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd40a3d5:;
	};
}

inline jule::Str _1bd41181a_toStr(jule::Ptr<_1aabb8db5_Data> _23213_x) {
	;
	{
		
{
			_case_begin_1bd40cb13:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd40c99d:;
	};
	{
		
{
			_case_begin_1bd4101ba:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd40ca14:;
	};
}

inline jule::Str _1bd40ee78_toStr(jule::Ptr<_1aaa30ed5_FnCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd410be3:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd410a7d:;
	};
	{
		
{
			_case_begin_1bd4136eb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd410ae4:;
	};
}

inline jule::Str _1bd42d23d_toStr(jule::Ptr<_1aab0033a_Label> _23213_x) {
	;
	{
		
{
			_case_begin_1bd42e3a4:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd42e22d:;
	};
	{
		
{
			_case_begin_1bd4305e7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd42e294:;
	};
}

inline jule::Str _1bd44b37c_toStr(jule::Ptr<_1aaaec832_Scope> _23213_x) {
	;
	{
		
{
			_case_begin_1bd44c526:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd44c3a0:;
	};
	{
		
{
			_case_begin_1bd44d769:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd44c416:;
	};
}

inline jule::Str _1bd45563e_toStr(jule::Ptr<_1aaa37096_BuiltinErrorCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd456761:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd4565da:;
	};
	{
		
{
			_case_begin_1bd4579a4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd456651:;
	};
}

inline jule::Str _1bd4588d9_toStr(jule::Ptr<_1aaa380a8_BackendEmitExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd4598b8:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd459753:;
	};
	{
		
{
			_case_begin_1bd45bd71:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd4597b9:;
	};
}

inline jule::Str _1bd4590c1_toStr(jule::Ptr<_1aaa35d20_BuiltinAppendCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd45c415:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd45c2a0:;
	};
	{
		
{
			_case_begin_1bd45d669:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd45c316:;
	};
}

inline jule::Str _1bd46299d_toStr(jule::Ptr<_1aaa348e0_BuiltinPrintCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd45db0e:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd45d9dd:;
	};
	{
		
{
			_case_begin_1bd4610a6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd45da98:;
	};
}

inline jule::Str _1bd45e170_toStr(jule::Ptr<_1aaa34bdc_BuiltinPrintlnCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd4613e7:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd461282:;
	};
	{
		
{
			_case_begin_1bd4639c1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd462195:;
	};
}

inline jule::Str _1bd465187_toStr(jule::Ptr<_1aaa35490_BuiltinPanicCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd463d12:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd463b9c:;
	};
	{
		
{
			_case_begin_1bd4663db:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd464ab0:;
	};
}

inline jule::Str _1bd467354_toStr(jule::Ptr<_1aaa36bbc_BuiltinCopyCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd46672c:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd4665b7:;
	};
	{
		
{
			_case_begin_1bd468d06:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd4674ca:;
	};
}

inline jule::Str _1bd469c6e_toStr(jule::Ptr<_1aaa367e3_BuiltinDeleteCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd469147:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd468ed2:;
	};
	{
		
{
			_case_begin_1bd46b721:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd469de5:;
	};
}

inline jule::Str _1bd46c689_toStr(jule::Ptr<_1aaa383a5_FreeExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd45a49b:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd45a336:;
	};
	{
		
{
			_case_begin_1bd46c7cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd46e0d6:;
	};
}

inline jule::Str _1bd47c2e2_toStr(jule::Ptr<_1aaaed426_Conditional> _23213_x) {
	;
	{
		
{
			_case_begin_1bd47d48b:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd47d315:;
	};
	{
		
{
			_case_begin_1bd47e6ce:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd47d37b:;
	};
}

inline jule::Str _1bd4878a2_toStr(jule::Ptr<_1aaaed723_InfIter> _23213_x) {
	;
	{
		
{
			_case_begin_1bd488a4b:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd4888c5:;
	};
	{
		
{
			_case_begin_1bd489c8e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd48893b:;
	};
}

inline jule::Str _1bd48c2ad_toStr(jule::Ptr<_1aaaedbc9_WhileIter> _23213_x) {
	;
	{
		
{
			_case_begin_1bd48e645:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd48e4be:;
	};
	{
		
{
			_case_begin_1bd490888:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd48e535:;
	};
}

inline jule::Str _1bd4b8e33_toStr(jule::Ptr<_1aaaee6ad_RangeIter> _23213_x) {
	;
	{
		
{
			_case_begin_1bd4ba0cc:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd4b9e56:;
	};
	{
		
{
			_case_begin_1bd4bb320:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd4b9ebc:;
	};
}

inline jule::Str _1bd4c86e5_toStr(jule::Ptr<_1aa95bc46_WhileKind> _23213_x) {
	;
	{
		
{
			_case_begin_1bd4c985b:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd4c96d5:;
	};
	{
		
{
			_case_begin_1bd4caa9e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd4c974b:;
	};
}

inline jule::Str _1bd4cb2b9_toStr(jule::Ptr<_1aa95c64d_RangeKind> _23213_x) {
	;
	{
		
{
			_case_begin_1bd4cc30e:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd4cc199:;
	};
	{
		
{
			_case_begin_1bd4cd5b8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd4cc210:;
	};
}

inline jule::Str _1bd4e6ee9_toStr(jule::Ptr<_1aaaee9aa_ContSt> _23213_x) {
	;
	{
		
{
			_case_begin_1bd4e8193:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd4e801c:;
	};
	{
		
{
			_case_begin_1bd4e93d6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd4e8083:;
	};
}

inline jule::Str _1bd500aa2_toStr(jule::Ptr<_1aab0099a_GotoSt> _23213_x) {
	;
	{
		
{
			_case_begin_1bd501c4b:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd501ac5:;
	};
	{
		
{
			_case_begin_1bd502e8e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd501b3b:;
	};
}

inline jule::Str _1bd538cc7_toStr(jule::Ptr<_1aa104466_IdentExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd539e1b:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd539c95:;
	};
	{
		
{
			_case_begin_1bd53b15e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd539d0b:;
	};
}

inline jule::Str _1bd55ce1c_toStr(jule::Ptr<_1aaa31865_IndexingExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd55e083:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd55de0c:;
	};
	{
		
{
			_case_begin_1bd5602c6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd55de73:;
	};
}

inline jule::Str _1bd5a6251_toStr(jule::Ptr<_1aab0232b_Match> _23213_x) {
	;
	{
		
{
			_case_begin_1bd5a73ea:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd5a7274:;
	};
	{
		
{
			_case_begin_1bd5a863d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd5a72da:;
	};
}

inline jule::Str _1bd5ba243_toStr(jule::Ptr<_1aab0331b_FallSt> _23213_x) {
	;
	{
		
{
			_case_begin_1bd212e02:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd212c8c:;
	};
	{
		
{
			_case_begin_1bd5bc542:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd212d03:;
	};
}

inline jule::Str _1bd5d9d9a_toStr(jule::Ptr<_1aaaeed84_BreakSt> _23213_x) {
	;
	{
		
{
			_case_begin_1bd5daac1:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd5da94a:;
	};
	{
		
{
			_case_begin_1bd5dbd14:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd5da9b1:;
	};
}

inline jule::Str _1bd5e0da1_toStr(jule::Ptr<_1aab036b2_RetSt> _23213_x) {
	;
	{
		
{
			_case_begin_1bd5e204a:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd5e1dc4:;
	};
	{
		
{
			_case_begin_1bd5e328d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd5e1e3a:;
	};
}

inline jule::Str _1bd5ed056_toStr(jule::Ptr<_1aa957978_ScopeTree> _23213_x) {
	;
	{
		
{
			_case_begin_1bd5ee1bc:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd5ee046:;
	};
	{
		
{
			_case_begin_1bd600410:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd5ee0ac:;
	};
}

inline jule::Str _1bd600322_toStr(jule::Ptr<_1aa95a7c2_VarDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bd600e9e:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd600d39:;
	};
	{
		
{
			_case_begin_1bd602203:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd600da0:;
	};
}

inline jule::Str _1bd606306_toStr(jule::Ptr<_1aa95e551_TypeAliasDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bd6026dc:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd6025bb:;
	};
	{
		
{
			_case_begin_1bd6051e5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd60291d:;
	};
}

inline jule::Str _1bd6049ca_toStr(jule::Ptr<_1aa95dc37_Conditional> _23213_x) {
	;
	{
		
{
			_case_begin_1bd6077d0:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd6076ae:;
	};
	{
		
{
			_case_begin_1bd608a23:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd607b87:;
	};
}

inline jule::Str _1bd60cb26_toStr(jule::Ptr<_1aa95b41b_Iter> _23213_x) {
	;
	{
		
{
			_case_begin_1bd60a7b1:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd60a690:;
	};
	{
		
{
			_case_begin_1bd60ba15:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd60abbd:;
	};
}

inline jule::Str _1bd610b18_toStr(jule::Ptr<_1aa95ce01_ContSt> _23213_x) {
	;
	{
		
{
			_case_begin_1bd60beee:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd60bdcd:;
	};
	{
		
{
			_case_begin_1bd60ea07:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd60c230:;
	};
}

inline jule::Str _1bd60e1bb_toStr(jule::Ptr<_1aa10adeb_LabelSt> _23213_x) {
	;
	{
		
{
			_case_begin_1bd60ec8d:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd60eb4a:;
	};
	{
		
{
			_case_begin_1bd612785:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd610134:;
	};
}

inline jule::Str _1bd60b77e_toStr(jule::Ptr<_1aa10b2c5_GotoSt> _23213_x) {
	;
	{
		
{
			_case_begin_1bd612c6e:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd612b4d:;
	};
	{
		
{
			_case_begin_1bd615777:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd613126:;
	};
}

inline jule::Str _1bd61627d_toStr(jule::Ptr<_1aa960321_MatchCase> _23213_x) {
	;
	{
		
{
			_case_begin_1bd617c1e:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd617aa9:;
	};
	{
		
{
			_case_begin_1bd618e62:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd617b20:;
	};
}

inline jule::Str _1bd6158ba_toStr(jule::Ptr<_1aa10b5c2_FallSt> _23213_x) {
	;
	{
		
{
			_case_begin_1bd61ac00:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd61aa8a:;
	};
	{
		
{
			_case_begin_1bd61be54:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd61ab01:;
	};
}

inline jule::Str _1bd621057_toStr(jule::Ptr<_1aa95ca27_BreakSt> _23213_x) {
	;
	{
		
{
			_case_begin_1bd61c43d:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd61c31c:;
	};
	{
		
{
			_case_begin_1bd61ee46:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd61c66e:;
	};
}

inline jule::Str _1bd61e60a_toStr(jule::Ptr<_1aa95ab9b_RetSt> _23213_x) {
	;
	{
		
{
			_case_begin_1bd620430:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd62030e:;
	};
	{
		
{
			_case_begin_1bd622e38:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd620661:;
	};
}

inline jule::Str _1bd62703b_toStr(jule::Ptr<_1aa103520_UseExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd623422:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd623301:;
	};
	{
		
{
			_case_begin_1bd625e2a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd623653:;
	};
}

inline jule::Str _1bd70c5c7_toStr(jule::Ptr<_1aa964413_Impl> _23213_x) {
	;
	{
		
{
			_case_begin_1bd70d73d:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd70d5b7:;
	};
	{
		
{
			_case_begin_1bd70e981:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd70d62d:;
	};
}

inline jule::Str _1bd70e0bd_toStr(jule::Ptr<_1aa963566_StructDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bd711c2a:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd711ab5:;
	};
	{
		
{
			_case_begin_1bd71416c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd711b2b:;
	};
}

inline jule::Str _1bd7147dd_toStr(jule::Ptr<_1aa959617_FnDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bd715789:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd715624:;
	};
	{
		
{
			_case_begin_1bd716aa9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd715bda:;
	};
}

inline jule::Str _1bd71822b_toStr(jule::Ptr<_1aa963ca3_TraitDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bd7191a5:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd719040:;
	};
	{
		
{
			_case_begin_1bd71a3e8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd7190a6:;
	};
}

inline jule::Str _1bd71cc58_toStr(jule::Ptr<_1aa96191b_EnumDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bd71dbe3:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd71da7d:;
	};
	{
		
{
			_case_begin_1bd721135:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd71dae4:;
	};
}

inline jule::Str _1bd7213ee_toStr(jule::Ptr<_1aa9628a6_TypeEnumDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bd72239a:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd722279:;
	};
	{
		
{
			_case_begin_1bd7235dd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd722752:;
	};
}

inline jule::Str _1bd74da7a_toStr(jule::Ptr<_1aaa33a76_StructSubIdentExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd74ed01:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd74eb7a:;
	};
	{
		
{
			_case_begin_1bd751044:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd74ebe1:;
	};
}

inline jule::Str _1bd74e020_toStr(jule::Ptr<_1aaa2e4ab_UnaryExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bd75250c:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd752397:;
	};
	{
		
{
			_case_begin_1bd753750:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd75240d:;
	};
}

inline jule::Str _1bd7807b0_toStr(jule::Ptr<_1aaa3e2ce_FnIns> _23213_x) {
	;
	{
		
{
			_case_begin_1bd781959:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd7817d3:;
	};
	{
		
{
			_case_begin_1bd782b9c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bd781849:;
	};
}

inline jule::Str _1bda1bce3_toStr(jule::Ptr<_1aa101331_MapTypeDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bda1ce59:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bda1ccd3:;
	};
	{
		
{
			_case_begin_1bda1e19c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bda1cd49:;
	};
}

inline jule::Str _1bda2126a_toStr(jule::Ptr<_1aa100044_TupleTypeDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bda235be:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bda23448:;
	};
	{
		
{
			_case_begin_1bda24812:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bda234ae:;
	};
}

inline jule::Str _1bda3535b_toStr(jule::Ptr<_1aa100ad3_ArrTypeDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bda364d3:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bda3635c:;
	};
	{
		
{
			_case_begin_1bda37726:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bda363c3:;
	};
}

inline jule::Str _1bda3a2d9_toStr(jule::Ptr<_1aa0eec47_SlcTypeDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bda3c61b:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bda3c495:;
	};
	{
		
{
			_case_begin_1bda3d85e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bda3c50b:;
	};
}

inline jule::Str _1bda41444_toStr(jule::Ptr<_1aa100341_PtrTypeDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bda43776:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bda43600:;
	};
	{
		
{
			_case_begin_1bda449b9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bda43666:;
	};
}

inline jule::Str _1bda472b3_toStr(jule::Ptr<_1aa0ee8b2_SptrTypeDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bda495d4:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bda4945d:;
	};
	{
		
{
			_case_begin_1bda4a827:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bda494c4:;
	};
}

inline jule::Str _1bda98ee6_toStr(jule::Ptr<_1aa1050d2_VariadicExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bda9a06e:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bda99de8:;
	};
	{
		
{
			_case_begin_1bda9b2b2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bda99e5e:;
	};
}

inline jule::Str _1bda9d7c0_toStr(jule::Ptr<_1aaa313ae_SliceExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdaa1691:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdaa151a:;
	};
	{
		
{
			_case_begin_1bdaa28d4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdaa1581:;
	};
}

inline jule::Str _1bdaba776_toStr(jule::Ptr<_1aa10736a_FieldExprPair> _23213_x) {
	;
	{
		
{
			_case_begin_1bdabb8dc:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdabb766:;
	};
	{
		
{
			_case_begin_1bdabcb30:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdabb7cc:;
	};
}

inline jule::Str _1bdac6133_toStr(jule::Ptr<_1aa108976_KeyValPair> _23213_x) {
	;
	{
		
{
			_case_begin_1bdac7299:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdac7123:;
	};
	{
		
{
			_case_begin_1bdac84dc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdac7189:;
	};
}

inline jule::Str _1bdb1b93c_toStr(jule::Ptr<_1aaa345e3_TupleExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdb1cad6:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb1c960:;
	};
	{
		
{
			_case_begin_1bdb1dd29:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdb1c9c6:;
	};
}

inline jule::Str _1bdb3b9c3_toStr(jule::Ptr<_1aaa3017c_AllocStructLitExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdb3cb6c:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb3c9e6:;
	};
	{
		
{
			_case_begin_1bdb3ddb0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdb3ca5c:;
	};
}

inline jule::Str _1bdb4e3ed_toStr(jule::Ptr<_1aaa30633_CastingExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdb50597:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb50421:;
	};
	{
		
{
			_case_begin_1bdb517da:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdb50487:;
	};
}

inline jule::Str _1bdb6ad10_toStr(jule::Ptr<_1aaa33e1c_StructStaticIdentExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdb6c3c7:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb6c251:;
	};
	{
		
{
			_case_begin_1bdb6d61a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdb6c2b7:;
	};
}

inline jule::Str _1bdb6ec04_toStr(jule::Ptr<_1aa105c5e_SubIdentExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdb70d04:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb70b8e:;
	};
	{
		
{
			_case_begin_1bdb73246:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdb70c05:;
	};
}

inline jule::Str _1bdb7a1d7_toStr(jule::Ptr<_1aaa2ed80_StructLitExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdb7b31a:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb7b194:;
	};
	{
		
{
			_case_begin_1bdb7c55d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdb7b20a:;
	};
}

inline jule::Str _1bdb9bd41_toStr(jule::Ptr<_1aaa37c34_RuneExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdb9ceda:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdb9cd64:;
	};
	{
		
{
			_case_begin_1bdb9e22d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdb9cdca:;
	};
}

inline jule::Str _1bdbbec65_toStr(jule::Ptr<_1aa969605_StructIns> _23213_x) {
	;
	{
		
{
			_case_begin_1bdbc0e0e:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdbc0c88:;
	};
	{
		
{
			_case_begin_1bdbc2152:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdbc0cee:;
	};
}

inline jule::Str _1bdc0b444_toStr(jule::Ptr<_1aabecdb6_Type> _23213_x) {
	;
	{
		
{
			_case_begin_1bdc0c5dd:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdc0c467:;
	};
	{
		
{
			_case_begin_1bdc0d831:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdc0c4cd:;
	};
}

inline jule::Str _1bdc31b62_toStr(jule::Ptr<_1aaa342e6_ArrayExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdc32d0b:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdc32b85:;
	};
	{
		
{
			_case_begin_1bdc3404e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdc32beb:;
	};
}

inline jule::Str _1bdc6c807_toStr(jule::Ptr<_1aa0ee1db_SubIdentTypeDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bdc6d9a1:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdc6d82a:;
	};
	{
		
{
			_case_begin_1bdc6ebe4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdc6d891:;
	};
}

inline jule::Str _1bdc70b29_toStr(jule::Ptr<_1aa104c08_UnaryExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdc71b80:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdc71a1a:;
	};
	{
		
{
			_case_begin_1bdc74138:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdc72554:;
	};
}

inline jule::Str _1bdc76ec6_toStr(jule::Ptr<_1aa0ed817_TypeDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bdc7b195:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdc7b030:;
	};
	{
		
{
			_case_begin_1bdc7c3e9:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdc7b096:;
	};
}

inline jule::Str _1bdc81992_toStr(jule::Ptr<_1aa105885_NamespaceExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdc82740:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdc825b9:;
	};
	{
		
{
			_case_begin_1bdc83983:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdc82630:;
	};
}

inline jule::Str _1bdc85611_toStr(jule::Ptr<_1aa0ee5b5_NamespaceTypeDecl> _23213_x) {
	;
	{
		
{
			_case_begin_1bdc867bb:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdc86656:;
	};
	{
		
{
			_case_begin_1bdc88bca:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdc866bc:;
	};
}

inline jule::Str _1bdcc63aa_toStr(jule::Ptr<_1aaa32b52_SlicingExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdcc74ee:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdcc7378:;
	};
	{
		
{
			_case_begin_1bdcc8742:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdcc73de:;
	};
}

inline jule::Str _1bdd461b6_toStr(jule::Ptr<_1aa1091a2_SliceExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdd4732c:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdd471a6:;
	};
	{
		
{
			_case_begin_1bdd48570:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdd4721c:;
	};
}

inline jule::Str _1bddb2243_toStr(jule::Ptr<_1aaa331d5_TraitSubIdentExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bddb33cb:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bddb3255:;
	};
	{
		
{
			_case_begin_1bddb461e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bddb32bb:;
	};
}

inline jule::Str _1bde64889_toStr(jule::Ptr<_1aaa325be_MapExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bde6643a:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde662b4:;
	};
	{
		
{
			_case_begin_1bde6767d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bde6632a:;
	};
}

inline jule::Str _1bde77094_toStr(jule::Ptr<_1aaa31d1b_AnonFnExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bde7822c:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde780a6:;
	};
	{
		
{
			_case_begin_1bde79470:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bde7811c:;
	};
}

inline jule::Str _1bde7de36_toStr(jule::Ptr<_1aa102e15_RangeExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bde8009c:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde7ee26:;
	};
	{
		
{
			_case_begin_1bde812e0:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bde7ee8c:;
	};
}

inline jule::Str _1bde810c0_toStr(jule::Ptr<_1aa103ad6_LitExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bde82599:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde82478:;
	};
	{
		
{
			_case_begin_1bde837dc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bde82951:;
	};
}

inline jule::Str _1bde81c91_toStr(jule::Ptr<_1aa103eb0_UnsafeExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bde86c30:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde86aba:;
	};
	{
		
{
			_case_begin_1bde89172:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bde86b31:;
	};
}

inline jule::Str _1bde88eda_toStr(jule::Ptr<_1aa109b0e_IndexingExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bde8a162:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde89edb:;
	};
	{
		
{
			_case_begin_1bde8b3a5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bde8a519:;
	};
}

inline jule::Str _1bde8aaad_toStr(jule::Ptr<_1aa10a26e_SlicingExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bde8bb8b:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde8ba26:;
	};
	{
		
{
			_case_begin_1bde8e375:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bde8ba8c:;
	};
}

inline jule::Str _1bde8d3c9_toStr(jule::Ptr<_1aa1054ab_CastExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bde8e83c:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde8e71b:;
	};
	{
		
{
			_case_begin_1bde92345:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bde8e9d5:;
	};
}

inline jule::Str _1bde8e0de_toStr(jule::Ptr<_1aa107b95_StructLit> _23213_x) {
	;
	{
		
{
			_case_begin_1bde94798:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde94655:;
	};
	{
		
{
			_case_begin_1bde959db:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bde94b50:;
	};
}

inline jule::Str _1bde92488_toStr(jule::Ptr<_1aa106875_FnCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bde97e3e:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde97d1d:;
	};
	{
		
{
			_case_begin_1bde99182:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bde982e6:;
	};
}

inline jule::Str _1bde95dd7_toStr(jule::Ptr<_1aa10814b_BraceLit> _23213_x) {
	;
	{
		
{
			_case_begin_1bde9bcab:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bde9bb46:;
	};
	{
		
{
			_case_begin_1bde9d032:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bde9bbac:;
	};
}

inline jule::Str _1bde9b2b6_toStr(jule::Ptr<_1aa106215_BinaryExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bdea0452:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bdea02dc:;
	};
	{
		
{
			_case_begin_1bdea1695:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bdea0353:;
	};
}

inline jule::Str _1ab4ee420_toStr(jule::Ptr<_1aaa2e0d2_BinaryExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1ab5005ca:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ab500454:;
	};
	{
		
{
			_case_begin_1ab50181d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1ab5004ba:;
	};
}

inline jule::Str _1be1b21e1_toStr(jule::Ptr<_1aaa350b6_BuiltinNewCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be1b338a:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be1b3214:;
	};
	{
		
{
			_case_begin_1be1b45cd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be1b327a:;
	};
}

inline jule::Str _1be1c7877_toStr(jule::Ptr<_1aaa35946_BuiltinMakeCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be1c8a21:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be1c889a:;
	};
	{
		
{
			_case_begin_1be1c9c64:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be1c8911:;
	};
}

inline jule::Str _1be211bd0_toStr(jule::Ptr<_1aaa3611c_BuiltinLenCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be212d79:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be212c03:;
	};
	{
		
{
			_case_begin_1be2140bc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be212c69:;
	};
}

inline jule::Str _1be22b623_toStr(jule::Ptr<_1aaa36419_BuiltinCapCallExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be22c7bc:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be22c646:;
	};
	{
		
{
			_case_begin_1be22da10:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be22c6ac:;
	};
}

inline jule::Str _1be272339_toStr(jule::Ptr<_1aaa37393_SizeofExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be273417:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be273291:;
	};
	{
		
{
			_case_begin_1be27465a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be273307:;
	};
}

inline jule::Str _1be27b112_toStr(jule::Ptr<_1aaa37a47_AlignofExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be27c1e0:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be27c069:;
	};
	{
		
{
			_case_begin_1be27d433:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be27c0d0:;
	};
}

inline jule::Str _1be860086_toStr(jule::Ptr<_1ac3d513a_ExceptionalForwardingExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be86121e:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be861098:;
	};
	{
		
{
			_case_begin_1be862462:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be86110e:;
	};
}

inline jule::Str _1be8985db_toStr(jule::Ptr<_1ac3d810a_StrRuneIter> _23213_x) {
	;
	{
		
{
			_case_begin_1be899774:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be8995ed:;
	};
	{
		
{
			_case_begin_1be89a9b7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be899664:;
	};
}

inline jule::Str _1be8a355d_toStr(jule::Ptr<_1ac3d6d84_MutSlicingExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be8a46e6:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be8a4570:;
	};
	{
		
{
			_case_begin_1be8a5939:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be8a45d6:;
	};
}

inline jule::Str _1be8dd0e2_toStr(jule::Ptr<_1ac3d7c31_AppendToSliceExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be8de27a:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be8de104:;
	};
	{
		
{
			_case_begin_1be8e04bd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be8de16a:;
	};
}

inline jule::Str _1be8e07dc_toStr(jule::Ptr<_1ac3d7857_PushToSliceExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be8e1964:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be8e17ee:;
	};
	{
		
{
			_case_begin_1be8e2ba7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be8e1865:;
	};
}

inline jule::Str _1be912116_toStr(jule::Ptr<_1ac3d5adb_SwapExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be9132b0:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be913139:;
	};
	{
		
{
			_case_begin_1be914503:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be9131a0:;
	};
}

inline jule::Str _1be96bb32_toStr(jule::Ptr<_1ac3d4d60_StrFromBytes> _23213_x) {
	;
	{
		
{
			_case_begin_1be96cccb:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be96cb55:;
	};
	{
		
{
			_case_begin_1be96e01e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be96cbbb:;
	};
}

inline jule::Str _1be976323_toStr(jule::Ptr<_1ac3d5eb5_EmptyCompareExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be9774bc:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be977346:;
	};
	{
		
{
			_case_begin_1be978710:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be9773ac:;
	};
}

inline jule::Str _1be978e5d_toStr(jule::Ptr<_1ac3d6801_StrCompExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be97a107:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be979e92:;
	};
	{
		
{
			_case_begin_1be97b37d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be97a008:;
	};
}

inline jule::Str _1be9852dd_toStr(jule::Ptr<_1ac3d5745_StrConcatExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be988ec3:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be988d4c:;
	};
	{
		
{
			_case_begin_1be98a216:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be988db3:;
	};
}

inline jule::Str _1be9ad17e_toStr(jule::Ptr<_1ac3d7181_UnsafeBinaryExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be9ae2c3:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be9ae14c:;
	};
	{
		
{
			_case_begin_1be9b0516:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be9ae1b3:;
	};
}

inline jule::Str _1be9d54d6_toStr(jule::Ptr<_1ac3d8407_UnsafeDerefExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be9d6680:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be9d6509:;
	};
	{
		
{
			_case_begin_1be9d78c3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be9d6570:;
	};
}

inline jule::Str _1be9dbb19_toStr(jule::Ptr<_1ac3d62b2_RefExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be9dccb3:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be9dcb3c:;
	};
	{
		
{
			_case_begin_1be9de006:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be9dcba3:;
	};
}

inline jule::Str _1be9dee3b_toStr(jule::Ptr<_1aaa2e9d9_StructArgExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be9e0ee7:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be9e0d82:;
	};
	{
		
{
			_case_begin_1be9e3439:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be9e0de8:;
	};
}

inline jule::Str _1be9e77b2_toStr(jule::Ptr<_1ac3d8935_UnsafeCastingExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1be9e895b:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be9e87d5:;
	};
	{
		
{
			_case_begin_1be9e9b9e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1be9e884b:;
	};
}

inline jule::Str _1bea0698b_toStr(jule::Ptr<_1ac3d53c1_FnCallIgnoreExceptionalExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bea07b35:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bea079ae:;
	};
	{
		
{
			_case_begin_1bea08d78:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bea07a25:;
	};
}

inline jule::Str _1bea18a7a_toStr(jule::Ptr<_1ac3d747d_UnsafeIndexingExpr> _23213_x) {
	;
	{
		
{
			_case_begin_1bea19c24:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bea19a9d:;
	};
	{
		
{
			_case_begin_1bea1ae67:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1bea19b14:;
	};
}

inline jule::Str _1c0070e39_toStr(jule::Ptr<jule::Str> _23213_x) {
	;
	{
		
{
			_case_begin_1c0072017:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0071d91:;
	};
	{
		
{
			_case_begin_1c007325a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_23213_x))));;
			}
		}
		_match_end_1c0071e07:;
	};
}

inline jule::Str _1c03022ca_toStr(_1ace17078_Builder _23213_x) {
	;
	;
	{
		
{
			_case_begin_1c0305861:;
			{
				return _1c0309458_structToStr(_23213_x);;
			}
		}
		_match_end_1c0304ed1:;
	};
}

inline jule::Str _1c0310b79_toStr(jule::Slice<jule::U8> _23213_x) {
	;
	{
		
{
			_case_begin_1c0311ecc:;
			{
				if ((_23213_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0311d89:;
	};
	{
		
{
			_case_begin_1c03130cc:;
			{
				return _1c031681c_arrToStr(_23213_x);;
			}
		}
		_match_end_1c0312362:;
	};
}

inline jule::Str _1c03115b4_toStr(jule::Str _23213_x) {
	;
	;
	{
		
{
			_case_begin_1c03052ab:;
			{
				return _1acbbe47e_toStr(_23213_x);;
			}
		}
		_match_end_1c03191d2:;
	};
}

inline jule::Str _1c0319875_toStr(jule::Str _23213_x) {
	;
	;
	{
		
{
			_case_begin_1c03064cc:;
			{
				return _1acbbe47e_toStr(_23213_x);;
			}
		}
		_match_end_1c0305a70:;
	};
}



inline jule::Bool _1acba142d_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1acba32dc:;
	}
	_iter_end_1acba32dc:;;
	return true;;
}

inline jule::Bool _1acc01a77_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1acc033d6:;
	}
	_iter_end_1acc033d6:;;
	return true;;
}

inline jule::Bool _1bca0ba5e_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1bca0d412:;
	}
	_iter_end_1bca0d412:;;
	return true;;
}

inline jule::Bool _1beac8c28_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1beacaa93:;
	}
	_iter_end_1beacaa93:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void _1c6ca59be__handleRW(jule::Slice<jule::U8>* _1615_b) {
	if (((*(_1615_b)).len() > 1073741824LL)) {
		{
			((*((&((*(_1615_b))))))).mut_slice(0LL, 1073741824LLU);;
		};
	};
}



inline jule::I32 __jule_writeStdout(jule::Slice<jule::U8> _2516_buf) {
	if ((_2516_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1e0ee2098_handleRW(&(_2516_buf));
	return _1c6ca1459_Write(static_cast<jule::I32>(_1c6c5ec64_STDOUT), (&(_2516_buf[0LL])), static_cast<jule::U32>(_2516_buf.len()));;
}



inline jule::I32 __jule_writeStderr(jule::Slice<jule::U8> _3616_buf) {
	if ((_3616_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1e0ee2098_handleRW(&(_3616_buf));
	return _1c6ca1459_Write(static_cast<jule::I32>(_1c6c60050_STDERR), (&(_3616_buf[0LL])), static_cast<jule::U32>(_3616_buf.len()));;
}



inline jule::I32 __jule_readStdin(jule::Slice<jule::U8> _4718_buf) {
	if ((_4718_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1e0ee2098_handleRW(&(_4718_buf));
	return _1c6ca1459_Write(static_cast<jule::I32>(_1c6c5e934_STDIN), (&(_4718_buf[0LL])), static_cast<jule::U32>(_4718_buf.len()));;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I32 _1328_n) {
	__jule_writeStderr(_1c69914ac_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1ac968c1d_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_1c69914ac_StrBytes(jule::Str::lit("\n", 1)));
	_1c6ca168a_Exit(2LL);
}



inline jule::U32 _1acb17bbe_atomicLoad(jule::U32* _3525_p, jule::I32 _3532_mo) {
	jule::U32 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U32 _1acb1cbe6_atomicAdd(jule::U32* _4628_p, jule::U32 _4635_delta, jule::I32 _4645_mo) {
	jule::U32 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Str _1c6cadda1_executable(void) {
	jule::Slice<jule::U8> _146_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4096LL, 4096LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::Str _152_p = jule::Str::lit("/proc/self/exe", 14);;
	jule::I32 _162_n = readlink(((char*)((&(_152_p[0LL])))), ((char*)((&(_146_buf[0LL])))), _146_buf.len());;
	if ((_162_n != -1LL)) {
		(_146_buf).mut_slice(0LL, _162_n);;
		return _1c6991a0c_StrFromBytes(_146_buf);;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_linux.jule:21:2"));;
}



inline jule::U32* __jule_RCNew(void) {
	;
	;
	jule::U32* _256_p = ((jule::U32*)(malloc(4LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U32 __jule_RCLoadAtomic(jule::U32* _4625_p) {
	return _1acb17bbe_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U32* _6328_p) {
	_1acb1cbe6_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U32* _8429_p) {
	return (_1acb1cbe6_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U32* _9219_p) {
	free(_9219_p);
}



inline jule::I32 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I32 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I32 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1acb2335b:;
	}
	_iter_end_1acb2335b:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _1c6991a0c_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_4415_runes.len() << 2LLU)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb26ccc:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_1e0edd54a_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1acb26ccc:;
			++it;
			goto _iter_begin_1acb26ccc;
		}
		_iter_end_1acb26ccc:;
	};
	return _1c6991a0c_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _1e0edde52_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I32 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc4a0_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1acb2775b:;
	}
	_iter_end_1acb2775b:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _1c6991a0c_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_1e0edd54a_AppendRune(_846_buf, _8316_r);
	return _1c6991a0c_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I32 _9430_n, jule::I32* _9442_r, jule::I32* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1ac968c1d_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc15e_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc15e_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline jule::I32 __jule_runeCount(jule::Str _10514_s) {
	return _1e0edde52_RuneCountStr(_10514_s);;
}



inline void _1e0ee2098_handleRW(jule::Slice<jule::U8>* _814_b) {
	_1c6ca59be__handleRW(_814_b);
}



inline jule::Slice<jule::Str> _1e0ee25a4_args(void) {
	jule::Slice<jule::Str> _86_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_86_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb2da81:;
		if (it != expr_end) {
			jule::I32 _96_i = it - expr->begin();
			{
				{
					jule::U8* _118_arg = __jule_argv[_96_i];;
					_86_args[_96_i]=_1c697a5ea_Str(_118_arg, _1e0ee2b48_strlen(_118_arg));
				};
			}
			_iter_next_1acb2da81:;
			++it;
			_96_i++;
			goto _iter_begin_1acb2da81;
		}
		_iter_end_1acb2da81:;
	};
	return _86_args;;
}



inline jule::I32 _1e0ee2b48_strlen(jule::U8* _3122_p) {
	jule::I32 __jule_func_result = 0;
	for (; ((*(_3122_p)) != 0LLU); (_3122_p)++) {
		{
			(__jule_func_result)++;
		}
	_iter_next_1acb3092e:;
	}
	_iter_end_1acb3092e:;;
	return __jule_func_result;;
}



inline jule::Bool _1e0ee3e68__coSpawn(void* _1520_func, void* _1535_args) {
	pthread_t _166_t;;
	if ((pthread_create((&(_166_t)), nullptr, (void*(*)(void*))(_1520_func), _1535_args) != 0LL)) {
		return false;;
	};
	pthread_detach(_166_t);
	return true;;
}



inline jule::U64 _1e1045ad0_hash128to64(_1e1045728_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _1e1045ddd_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__1e10420e8_DecodeU64(_5312_bytes);;
}



inline jule::U32 _1e10461a7_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__1e10416be_DecodeU32(_5412_bytes);;
}



inline jule::U64 _1e10464e8_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _1e1046839_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _1e1045ad0_hash128to64(_1e1045728_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _1e1046bad_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _1e10470dc_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _1e1047571_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I32 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_1e1045ddd_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _1e1045ddd_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_1e1046bad_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_1e1046bad_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _1e10470dc_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_1e10461a7_fetch32(_7517_bytes));;
		return _1e10470dc_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_1e10461a7_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = _7517_bytes[0LL];;
		jule::U8 _933_b = _7517_bytes[(_7532_n >> 1LL)];;
		jule::U8 _943_c = _7517_bytes[(_7532_n - 1LL)];;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I32 _963_z = (_7532_n + (static_cast<jule::I32>(_943_c) << 2LL));;
		return (jule::U64)(_1e10464e8_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _1e1045728_u128 _1e1047928_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I32 _10334_n, _1e1045728_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I32 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_1e10464e8_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _1e1047571_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_1e10464e8_shiftMix((jule::U64)(_1046_a + _1e1045ddd_fetch64(_10319_bytes)));
		} else {
			_1076_d=_1e10464e8_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_1e1046839_hashLen16((jule::U64)(_1e1045ddd_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_1e1046839_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _1e1045ddd_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_1e10464e8_shiftMix((jule::U64)(_1e1045ddd_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_1e10464e8_shiftMix((jule::U64)(_1e1045ddd_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1acb446bd;
				};
			}
		_iter_next_1acb446bd:;
		}
		_iter_end_1acb446bd:;;
	};
	_1046_a=_1e1046839_hashLen16(_1046_a, _1066_c);
	_1056_b=_1e1046839_hashLen16(_1076_d, _1056_b);
	return _1e1045728_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_1e1046839_hashLen16(_1056_b, _1046_a)};;
}



inline _1e1045728_u128 _1e1048077_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_1e1046bad_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_1e1046bad_rotate64(_14563_a, 44LLU);
	return _1e1045728_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _1e1045728_u128 _1e10484a6_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _1e1048077_weakHashLen32WithSeeds(_1e1045ddd_fetch64(_15529_bytes), _1e1045ddd_fetch64(_15529_bytes.slice(8LL)), _1e1045ddd_fetch64(_15529_bytes.slice(16LL)), _1e1045ddd_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _1e1045728_u128 _1e10488d5_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I32 _16040_n, _1e1045728_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _1e1047928_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I32 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_1e1045728_u128 _16910_v = _1e1045728_u128{._field_hi=0, ._field_lo=0};;
	_1e1045728_u128 _17010_w = _1e1045728_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_1e1046bad_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _1e1045ddd_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_1e1046bad_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _1e1045ddd_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_1e1046bad_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_1e1046bad_rotate64((jule::U64)(_1716_x + _1e1045ddd_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_1e1046bad_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1e1045ddd_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1e1046bad_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1e1045ddd_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1e1045ddd_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1e1046bad_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1e10484a6_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1e10484a6_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1e1045ddd_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_1e1046bad_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1e1045ddd_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1e1046bad_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1e1045ddd_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1e1045ddd_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1e1046bad_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1e10484a6_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1e10484a6_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1e1045ddd_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1acb50a5e;
			};
		}
	_iter_next_1acb50a5e:;
	}
	_iter_end_1acb50a5e:;;
	_1716_x+=(jule::U64)(_1e1046bad_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _1e1046bad_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _1e1046bad_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I32 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_1e1046bad_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_1e1045ddd_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _1e1045ddd_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_1e10484a6_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1acb5a4a3:;
	}
	_iter_end_1acb5a4a3:;;
	_1716_x=_1e1046839_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_1e1046839_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _1e1045728_u128{._field_hi=(jule::U64)(_1e1046839_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_1e1046839_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _1e1048b9e_hash(jule::Slice<jule::U8> _23413_bytes) {
	_1e1045728_u128 _2356_sum = _1e1045728_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_1e10488d5_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _1e1045728_u128{._field_hi=_1e1045ddd_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_1e1045ddd_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_1e10488d5_hashWithSeed(_23413_bytes, _23413_bytes.len(), _1e1045728_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _1e1045ad0_hash128to64(_2356_sum);;
}



inline jule::U64 _1c6da1aed_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _1c6da2516_hasZeroByte((_1c6da279c_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _1c6da1e0b_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _1c6da2516_hasZeroByte((_1c6da279c_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _1c6da21c5_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_1c6d940b8_TrailingZeros64((*(_6419_b))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _1c6da2516_hasZeroByte(jule::U64 _7016_x) {
	return (((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU);;
}



inline jule::U64 _1c6da279c_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I32 _1c6da2a66_numGroups(jule::I32 _7914_n) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result=(((_7914_n + 4LL) - 1LL) >> 2LLU);
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _1c6da2c75_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb64d1a:;
		if (it != expr_end) {
			jule::I32 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_1acb64d1a:;
			++it;
			_886_i++;
			goto _iter_begin_1acb64d1a;
		}
		_iter_end_1acb64d1a:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _1c6da314e_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = ((_9414_h & 18446744073709551488LLU) >> 7LLU);
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _1c6da344b_probeStart(jule::U64 _9815_hi, jule::I32 _9823_groups) {
	return _1c6da37c0_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _1c6da37c0_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline __jule_tuple_int__jule_tuple_bool _1ad0eeb67_AtoiBp(jule::U8* _722_b, jule::I32 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _86_neg = ((*(_722_b)) == '-');;
	if (_86_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I32>((jule::U8)((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1acb862ae:;
	}
	_iter_end_1acb862ae:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_86_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _1ad1084bc_Itoa(jule::I32 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _1ad108720_Utoa(static_cast<jule::U32>((-(_89_x)))));;
	};
	return _1ad108720_Utoa(static_cast<jule::U32>(_89_x));;
}



inline jule::Str _1ad108720_Utoa(jule::U32 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _206_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _216_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U32 _233_q = (_1613_x / 10LLU);;
			_206_buf[_216_i]=static_cast<jule::U8>((jule::U32)((jule::U32)('0' + _1613_x) - (jule::U32)(_233_q * 10LLU)));
			(_216_i)++;
			_1613_x=_233_q;
		}
	_iter_next_1acb8c9e1:;
	}
	_iter_end_1acb8c9e1:;;
	_206_buf[_216_i]=static_cast<jule::U8>((jule::U32)('0' + _1613_x));
	(_206_buf).mut_slice(0LL, (_216_i + 1LL));;
	_1ad108951_rev(&(_206_buf));
	return _1c6991a0c_StrFromBytes(_206_buf);;
}



inline void _1ad108951_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I32 _366_i = 0LL;;
	for (; (_366_i < ((*(_3513_b)).len() >> 1LL)); (_366_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_366_i];
				(*(_3513_b))[_366_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1acb91198:;
	}
	_iter_end_1acb91198:;;
}



inline jule::I32 _1ad12353c_findLastByte(jule::U8* _2117_begin, jule::U8* _2135_end, jule::U8 _2147_b) {
	jule::U8* _226_it = _2135_end;;
	for (; (_226_it >= _2117_begin); (_226_it)--) {
		{
			{
				if (((*(_226_it)) == _2147_b)) {
					return ((jule::I32)((_226_it - _2117_begin)));;
				};
			};
		}
	_iter_next_1acb95a93:;
	}
	_iter_end_1acb95a93:;;
	return -1LL;;
}



inline jule::I32 _1ad12d8bb_FindByteStr(jule::Str _4416_s, jule::U8 _4424_b) {
	{
		auto expr = &(_4416_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1acb97aea:;
		if (it != expr_end) {
			jule::I32 _466_i = it - expr->begin();
			jule::U8 *_469_se = it;
			{
				if (((*(_469_se)) == _4424_b)) {
					return _466_i;;
				};
			}
			_iter_next_1acb97aea:;
			++it;
			_466_i++;
			goto _iter_begin_1acb97aea;
		}
		_iter_end_1acb97aea:;
	};
	return -1LL;;
}



inline jule::I32 _1ad12dc40_FindLastByteStr(jule::Str _5520_s, jule::U8 _5528_b) {
	if ((_5520_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1ad12353c_findLastByte((&(_5520_s[0LL])), (&(_5520_s[(_5520_s.len() - 1LL)])), _5528_b);;
}



inline jule::Str _1ad14178b_Getwd(void) {
	jule::U8* _96_buf = _1c6c61606_Getcwd(nullptr, 0LLU);;
	if ((_96_buf == nullptr)) {
		return jule::Str();;
	};
	jule::Str _132_pwd = _1c69799b2_BytePtrToStr(_96_buf);;
	{
		_1c694b577_Free(_96_buf);
	};
	return _132_pwd;;
}



inline jule::Bool _1bb01c417_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1bb07a189__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1bb083ba9_isExcludingLatin(_1bb0263dd_Letter, _7613_r);;
}



inline jule::Bool _1bb08302c_is16(jule::Slice<_1bb08128e_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc6415a6:;
			if (it != expr_end) {
				jule::I32 _1937_i = it - expr->begin();
				{
					_1bb08128e_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1bc6415a6:;
				++it;
				_1937_i++;
				goto _iter_begin_1bc6415a6;
			}
			_iter_end_1bc6415a6:;
		};
		return false;;
	};
	jule::I32 _2086_lo = 0LL;;
	jule::I32 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I32 _2113_m = (_2086_lo + ((_2096_hi - _2086_lo) >> 1LLU));;
			_1bb08128e_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1bc641067:;
	}
	_iter_end_1bc641067:;;
	return false;;
}



inline jule::Bool _1bb0833a1_is32(jule::Slice<_1bb0817bc_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bc647aa7:;
			if (it != expr_end) {
				jule::I32 _2307_i = it - expr->begin();
				{
					_1bb0817bc_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1bc647aa7:;
				++it;
				_2307_i++;
				goto _iter_begin_1bc647aa7;
			}
			_iter_end_1bc647aa7:;
		};
		return false;;
	};
	jule::I32 _2456_lo = 0LL;;
	jule::I32 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I32 _2483_m = (_2456_lo + ((_2466_hi - _2456_lo) >> 1LLU));;
			_1bb0817bc_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1bc644587:;
	}
	_iter_end_1bc644587:;;
	return false;;
}



inline jule::Bool _1bb083ba9_isExcludingLatin(jule::Ptr<_1bb081c40_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1bb08128e_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I32 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1bb08302c_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1bb0817bc_Range32> *_2873_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1bb0833a1_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1bb083deb_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1bb07a189__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1bb083ba9_isExcludingLatin(_1bb02c6ad_Upper, _29512_r);;
}



inline jule::I32 _1bb0845e4_convertCase(jule::I32 _31316_case, jule::I32 _31327_r, jule::Ptr<_1bb080cd8_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_1bb080cd8_CaseRange> _1bb084968_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1bb080cd8_CaseRange> _33329_caseRange) {
	jule::I32 _3356_lo = 0LL;;
	jule::I32 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I32 _3383_m = static_cast<jule::I32>((static_cast<jule::U32>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_1bb080cd8_CaseRange> _3397_cr = ((jule::Ptr<_1bb080cd8_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*(_3397_cr))._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_1bc658c1c:;
	}
	_iter_end_1bc658c1c:;;
	return nullptr;;
}



inline jule::I32 _1bb084c32_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I32>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_1bb07be6b_asciiFold[_37015_r]);;
	};
	jule::I32 _3806_lo = 0LL;;
	jule::I32 _3816_hi = _1bb07c257_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I32 _3833_m = static_cast<jule::I32>((static_cast<jule::U32>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_1bb07c257_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_1bc65cd42:;
	}
	_iter_end_1bc65cd42:;;
	if (((_3806_lo < _1bb07c257_caseOrbit.len()) && (static_cast<jule::I32>(_1bb07c257_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_1bb07c257_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_1bb080cd8_CaseRange> _3972_cr = _1bb084968_lookupCaseRange(_37015_r, _1bb079ab2_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _1bb0845e4_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _1bb0845e4_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::Str _1bb0851a5_Repeat(jule::Str _1111_s, jule::I32 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I32 __jule_x = 2147483647LL; jule::I32 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("strings: repeat: integer buffer size overflow", 45) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1ace17078_Builder _186_ss = static__1ace178c5_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			({
				auto except = _1ace18057_WriteStr(&_186_ss, _1111_s);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:20:3"));
				(except.result);
			});
		}
	_iter_next_1bc67088d:;
	}
	_iter_end_1bc67088d:;;
	return _1ace188d7_Str(&_186_ss);;
}



inline jule::Bool _1bb08556d_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1bb0858e2_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I32 _1bb085d98_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1bb08556d_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1bc674452:;
	}
	_iter_end_1bc674452:;;
	return -1LL;;
}



inline jule::I32 _1bb0861d9_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1bb085d98_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I32 _1bb086618_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i) {
	jule::I32 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1bc67671d:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I32 _697_k = _636_j;;
			jule::I32 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I32 ___jule_assign_arg = (_697_k + 1LL);
				jule::I32 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1bc676036;
					};
				}
			_iter_next_1bc677e28:;
			}
			_iter_end_1bc677e28:;;
			return _636_j;;
		}
	_iter_next_1bc676036:;
	}
	_iter_end_1bc676036:;;
	return -1LL;;
}



inline jule::I32 _1bb08698c_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1bb086618_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I32 _1bb088274_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1ad12dc40_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I32 _1bb0885e8_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I32 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I32 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc4a0_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1bc68002e:;
	}
	_iter_end_1bc68002e:;;
	return -1LL;;
}



inline jule::I32 _1bb089022_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I32 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I32 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc4a0_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1bb0885e8_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1bc683340:;
	}
	_iter_end_1bc683340:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1bb0896b5_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n) {
	jule::I32 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I32 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I32 _2293_j = _1bb085d98_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1bc688433;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1bc688433:;
	}
	_iter_end_1bc688433:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Slice<jule::Str> _1bb089a39_SplitAll(jule::Str _24413_s, jule::Str _24421_sub) {
	return _1bb0896b5_Split(_24413_s, _24421_sub, -1LL);;
}



inline jule::Bool _1bb089dad_Contains(jule::Str _24913_s, jule::Str _24921_sub) {
	return (_1bb085d98_FindAt(_24913_s, _24921_sub, 0LL) != -1LL);;
}



inline jule::Bool _1bb08a92a_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes) {
	return (_1bb089022_FindAny(_26416_s, _26424_runes) != -1LL);;
}



inline jule::I32 _1bb08ac9e_Count(jule::Str _27010_s, jule::Str _27018_sub) {
	if ((_27018_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2746_n = 0LL;;
	jule::I32 _2756_i = 0LL;;
	for (;;) {
		{
			jule::I32 _2773_j = _1bb085d98_FindAt(_27010_s, _27018_sub, _2756_i);;
			if ((_2773_j == -1LL)) {
				goto _iter_end_1bc68d4b0;
			};
			(_2746_n)++;
			_2756_i=(_2773_j + _27018_sub.len());
		}
	_iter_next_1bc68d4b0:;
	}
	_iter_end_1bc68d4b0:;;
	return _2746_n;;
}



inline jule::Str _1bb08b288_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I32 _29044_n) {
	if (((_29044_n == 0LL) || (_29020_sub == _29030_new))) {
		return _29012_s;;
	};
	jule::I32 _2952_m = _1bb08ac9e_Count(_29012_s, _29020_sub);;
	if ((_2952_m == 0LL)) {
		return _29012_s;;
	};
	if (((_29044_n < 0LL) || (_2952_m < _29044_n))) {
		_29044_n=_2952_m;
	};
	_1ace17078_Builder _3036_ss = static__1ace178c5_New(((_29012_s.len() + (_29044_n * (_29030_new.len() - _29020_sub.len()))) + 1LL));;
	jule::I32 _3046_i = 0LL;;
	for (; (_29044_n > 0LL); (_29044_n)--) {
		{
			jule::I32 _3063_j = _1bb085d98_FindAt(_29012_s, _29020_sub, _3046_i);;
			if ((_3063_j == -1LL)) {
				goto _iter_end_1bc69200d;
			};
			({
				auto except = _1ace18057_WriteStr(&_3036_ss, _29012_s.slice(_3046_i, _3063_j));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:310:3"));
				(except.result);
			});
			({
				auto except = _1ace18057_WriteStr(&_3036_ss, _29030_new);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:311:3"));
				(except.result);
			});
			_3046_i=(_3063_j + _29020_sub.len());
		}
	_iter_next_1bc69200d:;
	}
	_iter_end_1bc69200d:;;
	({
		auto except = _1ace18057_WriteStr(&_3036_ss, _29012_s.slice(_3046_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:314:2"));
		(except.result);
	});
	return _1ace188d7_Str(&_3036_ss);;
}



inline jule::Str _1bb08b6b7_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new) {
	return _1bb08b288_Replace(_32015_s, _32023_sub, _32033_new, -1LL);;
}



inline jule::Str _1bb08c443_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset) {
	jule::I32 _3546_i = 0LL;;
	while ((_3546_i < _35317_s.len())) {
		{
			jule::I32 _3563_r;
			jule::I32 _3566_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc4a0_DecodeRuneStr(_35317_s.slice(_3546_i));
				_3563_r = __jule_assign_result.__jule_result_arg0;
				_3566_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1bb0885e8_FindRune(_35325_cutset, _3563_r) == -1LL)) {
				return _35317_s.slice(_3546_i);;
			};
			_3546_i+=_3566_n;
		}
	_iter_next_1bc697750:;
	}
	_iter_end_1bc697750:;;
	return jule::Str();;
}



inline jule::Str _1bb08c7b7_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset) {
	jule::I32 _3686_i = _36714_s.len();;
	while ((_3686_i > 0LL)) {
		{
			jule::I32 _3703_r;
			jule::I32 _3706_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edca00_DecodeLastRuneStr(_36714_s.slice(0LL, _3686_i));
				_3703_r = __jule_assign_result.__jule_result_arg0;
				_3706_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1bb0885e8_FindRune(_36722_cutset, _3703_r) == -1LL)) {
				return _36714_s.slice(0LL, _3686_i);;
			};
			_3686_i-=_3706_n;
		}
	_iter_next_1bc699389:;
	}
	_iter_end_1bc699389:;;
	return jule::Str();;
}



inline jule::Str _1bb08cdc2_Trim(jule::Str _3819_s, jule::Str _38117_cutset) {
	return _1bb08c443_TrimLeft(_1bb08c7b7_TrimRight(_3819_s, _38117_cutset), _38117_cutset);;
}



inline jule::Str _1bb08d202_Join(jule::Slice<jule::Str> _3879_parts, jule::Str _38723_sep) {
	{
		auto _match_expr{ _3879_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1bc69ac4d:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1bc69b413:;
			{
				return _3879_parts[0LL];;
			}
		}
		_match_end_1bc69b369:;
	};
	jule::I32 _3946_n = 0LL;;
	{
		auto expr = &(_3879_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc69b4ce:;
		if (it != expr_end) {
			jule::Str *_3959_part = it;
			{
				_3946_n+=(*(_3959_part)).len();
				(_3946_n)++;
			}
			_iter_next_1bc69b4ce:;
			++it;
			goto _iter_begin_1bc69b4ce;
		}
		_iter_end_1bc69b4ce:;
	};
	_1ace17078_Builder _3996_s = static__1ace178c5_New((_3946_n + 1LL));;
	({
		auto except = _1ace18057_WriteStr(&_3996_s, _3879_parts[0LL]);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:400:2"));
		(except.result);
	});
	{
		auto expr = _3879_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1bc69d426:;
		if (it != expr_end) {
			jule::Str *_4019_part = it;
			{
				({
					auto except = _1ace18057_WriteStr(&_3996_s, _38723_sep);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:402:3"));
					(except.result);
				});
				({
					auto except = _1ace18057_WriteStr(&_3996_s, (*(_4019_part)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:403:3"));
					(except.result);
				});
			}
			_iter_next_1bc69d426:;
			++it;
			goto _iter_begin_1bc69d426;
		}
		_iter_end_1bc69d426:;
	};
	return _1ace188d7_Str(&_3996_s);;
}



inline jule::Bool _1bb08e8c9_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I32 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_1bc6a4042;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_1bc6a132a;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_1bc6a132a;
			};
			return false;;
		}
	_iter_next_1bc6a132a:;
	}
	_iter_end_1bc6a132a:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_1bc6a4042:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_1bc6a455e:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I32 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc4a0_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_1bc6a455e;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_1bc6a455e;
					};
					return false;;
				};
				jule::I32 _1237_r = _1bb084c32_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_1bb084c32_SimpleFold(_1237_r);
					}
				_iter_next_1bc6a4ce0:;
				}
				_iter_end_1bc6a4ce0:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_1bc6a455e;
				};
				return false;;
			}
			_iter_next_1bc6a455e:;
			it += len;
			goto _iter_begin_1bc6a455e;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Str _1bb090cc6_Clean(jule::Str _10814_path) {
	jule::Str _1092_originalPath = _10814_path;;
	jule::I32 _1102_volLen = _1bb093a98_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1102_volLen);;
	if ((_10814_path).empty()) {
		if ((((_1102_volLen > 1LL) && _1bb0934c1_IsPathSep(_1092_originalPath[0LL])) && _1bb0934c1_IsPathSep(_1092_originalPath[1LL]))) {
			return _1bb09139d_FromSlash(_1092_originalPath);;
		};
		return (_1092_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1192_rooted = _1bb0934c1_IsPathSep(_10814_path[0LL]);;
	jule::I32 _1262_n = _10814_path.len();;
	_1bb08ee3a_lazyBuff _1276_out = _1bb08ee3a_lazyBuff{._field_path=_10814_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1092_originalPath, ._field_volLen=_1102_volLen};;
	jule::I32 _13213_dotdot = 0LL;;
	jule::I32 _1326_r = 0LL;;
	if (_1192_rooted) {
		_1bb0906aa_append(&_1276_out, 47LLU);
		_13213_dotdot=1LL;
		_1326_r=1LL;
	};
	while ((_1326_r < _1262_n)) {
		{
			{
				
				if (_1bb0934c1_IsPathSep(_10814_path[_1326_r])) {
					_case_begin_1bc6b66a3:;
					{
						(_1326_r)++;
					}
				}
				else if (((_10814_path[_1326_r] == '.') && (((_1326_r + 1LL) == _1262_n) || _1bb0934c1_IsPathSep(_10814_path[(_1326_r + 1LL)])))) {
					_case_begin_1bc6b441a:;
					{
						(_1326_r)++;
					}
				}
				else if ((((_10814_path[_1326_r] == '.') && (_10814_path[(_1326_r + 1LL)] == '.')) && (((_1326_r + 2LL) == _1262_n) || _1bb0934c1_IsPathSep(_10814_path[(_1326_r + 2LL)])))) {
					_case_begin_1bc6b4481:;
					{
						_1326_r+=2LL;
						{
							
							if ((_1276_out._field_w > _13213_dotdot)) {
								_case_begin_1bc6ba6c9:;
								{
									(_1276_out._field_w)--;
									while (((_1276_out._field_w > _13213_dotdot) && (!(_1bb0934c1_IsPathSep(_1bb090402_index(&_1276_out, _1276_out._field_w)))))) {
										{
											(_1276_out._field_w)--;
										}
									_iter_next_1bc6bb07b:;
									}
									_iter_end_1bc6bb07b:;;
								}
							}
							else if ((!(_1192_rooted))) {
								_case_begin_1bc6ba773:;
								{
									if ((_1276_out._field_w > 0LL)) {
										_1bb0906aa_append(&_1276_out, 47LLU);
									};
									_1bb0906aa_append(&_1276_out, '.');
									_1bb0906aa_append(&_1276_out, '.');
									_13213_dotdot=_1276_out._field_w;
								}
							}
							_match_end_1bc6ba344:;
						};
					}
				}
				else {
					_case_begin_1bc6b43a4:;
					{
						if (((_1192_rooted && (_1276_out._field_w != 1LL)) || ((!(_1192_rooted)) && (_1276_out._field_w != 0LL)))) {
							_1bb0906aa_append(&_1276_out, 47LLU);
						};
						;
						for (; ((_1326_r < _1262_n) && (!(_1bb0934c1_IsPathSep(_10814_path[_1326_r])))); (_1326_r)++) {
							{
								_1bb0906aa_append(&_1276_out, _10814_path[_1326_r]);
							}
						_iter_next_1bc6b573a:;
						}
						_iter_end_1bc6b573a:;;
					}
				}
				_match_end_1bc6b3d21:;
			};
		}
	_iter_next_1bc6b3a13:;
	}
	_iter_end_1bc6b3a13:;;
	if ((_1276_out._field_w == 0LL)) {
		_1bb0906aa_append(&_1276_out, '.');
	};
	return _1bb09139d_FromSlash(_1bb090941_string(&_1276_out));;
}



inline jule::Str _1bb09139d_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _1bb0916de_Join(jule::Slice<jule::Str> _2259_elem) {
	return _1bb094170_join(_2259_elem);;
}



inline jule::Str _1bb091975_Ext(jule::Str _2308_path) {
	jule::I32 _2316_i = (_2308_path.len() - 1LL);;
	for (; ((_2316_i >= 0LL) && (!(_1bb0934c1_IsPathSep(_2308_path[_2316_i])))); (_2316_i)--) {
		{
			if ((_2308_path[_2316_i] == '.')) {
				return _2308_path.slice(_2316_i);;
			};
		}
	_iter_next_1bc6be7cc:;
	}
	_iter_end_1bc6be7cc:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1bb091c3e_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1bb093dd9_abs(_2458_path));
return __jule_func_result;;
}



inline jule::Str _1bb092008_Base(jule::Str _25113_path) {
	if ((_25113_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25113_path.len() > 0LL) && _1bb0934c1_IsPathSep(_25113_path[(_25113_path.len() - 1LL)]))) {
		{
			(_25113_path).mut_slice(0LL, (_25113_path.len() - 1LL));;
		}
	_iter_next_1bc6c12d4:;
	}
	_iter_end_1bc6c12d4:;;
	(_25113_path).mut_slice(_1bb092624_VolumeName(_25113_path).len());;
	jule::I32 _2626_i = (_25113_path.len() - 1LL);;
	while (((_2626_i >= 0LL) && (!(_1bb0934c1_IsPathSep(_25113_path[_2626_i]))))) {
		{
			(_2626_i)--;
		}
	_iter_next_1bc6c112a:;
	}
	_iter_end_1bc6c112a:;;
	if ((_2626_i >= 0LL)) {
		(_25113_path).mut_slice((_2626_i + 1LL));;
	};
	if ((_25113_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25113_path;;
}



inline jule::Str _1bb0923d2_Dir(jule::Str _2828_path) {
	jule::Str _2832_vol = _1bb092624_VolumeName(_2828_path);;
	jule::I32 _2846_i = (_2828_path.len() - 1LL);;
	while (((_2846_i >= _2832_vol.len()) && (!(_1bb0934c1_IsPathSep(_2828_path[_2846_i]))))) {
		{
			(_2846_i)--;
		}
	_iter_next_1bc6c455c:;
	}
	_iter_end_1bc6c455c:;;
	jule::Str _2882_dir = _1bb090cc6_Clean(_2828_path.slice(_2832_vol.len(), (_2846_i + 1LL)));;
	if ((_2882_dir.equal(".", 1) && (_2832_vol.len() > 2LL))) {
		return _2832_vol;;
	};
	return (_2832_vol + _2882_dir);;
}



inline jule::Str _1bb092624_VolumeName(jule::Str _30015_path) {
	return _1bb09139d_FromSlash(_30015_path.slice(0LL, _1bb093a98_volumeNameLen(_30015_path)));;
}



inline jule::Bool _1bb0934c1_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1bb0937ce_IsAbs(jule::Str _5310_path) {
	return _1bb08556d_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I32 _1bb093a98_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1bb093dd9_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1bb0937ce_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1bb090cc6_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _672_wd = _1ad14178b_Getwd();;
	if ((_672_wd).empty()) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1bb094170_join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _672_wd; (*it++) = _638_path; __jule_collection; }));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1bb094170_join(jule::Slice<jule::Str> _749_elem) {
	{
		auto expr = &(_749_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc6cc0d1:;
		if (it != expr_end) {
			jule::I32 _756_i = it - expr->begin();
			jule::Str *_759_e = it;
			{
				if (!((*(_759_e))).empty()) {
					return _1bb090cc6_Clean(_1bb08d202_Join(_749_elem.slice(_756_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1bc6cc0d1:;
			++it;
			_756_i++;
			goto _iter_begin_1bc6cc0d1;
		}
		_iter_end_1bc6cc0d1:;
	};
	return jule::Str();;
}



inline jule::Slice<char*> _1ad1322c6_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s, jule::Slice<jule::Slice<jule::U8>>* _3640_bargs) {
	jule::Slice<char*> _376_cs = ({ auto __jule_collection = jule::Slice<char*>::alloc(((*(_3625_s)).len() + 1LL), ((*(_3625_s)).len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = nullptr; __jule_collection; });;
	(*(_3640_bargs))=({ auto __jule_collection = jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3625_s)).len(), (*(_3625_s)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::U8>(nullptr); __jule_collection; });
	{
		auto expr = _3625_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc72ddbe:;
		if (it != expr_end) {
			jule::I32 _396_i = it - expr->begin();
			jule::Str *_399_arg = it;
			{
				jule::Slice<jule::U8> _407_barg = _1c6979c48_StrToBytes((*(_399_arg)));;
				(*(_3640_bargs))[_396_i]=_407_barg;
				_376_cs[_396_i]=((char*)((&(_407_barg[0LL]))));
			}
			_iter_next_1bc72ddbe:;
			++it;
			_396_i++;
			goto _iter_begin_1bc72ddbe;
		}
		_iter_end_1bc72ddbe:;
	};
	_376_cs[(_376_cs.len() - 1LL)]=nullptr;
	return _376_cs;;
}



inline jule::I32 _1ad13264a_execvp(jule::Str* _4812_file, jule::Slice<jule::Str>* _4824_argv) {
	jule::Slice<jule::Slice<jule::U8>> _496_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _502_cargv = _1ad1322c6_strSliceToCstrSlice(_4824_argv, &(_496_bargs));;
	jule::Slice<jule::U8> _512_s = _1c6979c48_StrToBytes((*(_4812_file)));;
	{
		return execvp(((char*)((&(_512_s[0LL])))), (char*const*)(&(_502_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _1ad13287b_setenv(jule::Slice<jule::Str>* _5712_envv) {
	;
	{
		auto expr = _5712_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc732e8e:;
		if (it != expr_end) {
			jule::Str *_599_env = it;
			{
				jule::I32 _603_i = _1ad12d8bb_FindByteStr((*(_599_env)), '=');;
				if ((_603_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type139)};
				};
				{
					jule::Slice<jule::U8> _654_key = _1c6979c48_StrToBytes((*(_599_env)).slice(0LL, _603_i));;
					if ((((*(_599_env)).len() - _603_i) == 1LL)) {
						jule::Str _675_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_654_key[0LL])))), ((char*)((&(_675_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type139)};
						};
					} else {
						jule::Slice<jule::U8> _725_val = _1c6979c48_StrToBytes((*(_599_env)).slice((_603_i + 1LL)));;
						if ((setenv(((char*)((&(_654_key[0LL])))), ((char*)((&(_725_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type139)};
						};
					};
				};
			}
			_iter_next_1bc732e8e:;
			++it;
			goto _iter_begin_1bc732e8e;
		}
		_iter_end_1bc732e8e:;
	};
	return jule::VoidExceptional{};
}



inline jule::I32 _1ad13342b_cmdErrorFromCode(jule::I32 _15121_code) {
	{
		auto &_match_expr{ _15121_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1bc7334de:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bc7332ad:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1bc732411:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1bc737812:;
	};
}



inline jule::I32 _1ad13363a_getLastCmdError(void) {
	return _1ad13342b_cmdErrorFromCode(_1c6c329c3_GetLastErrno());;
}



inline void _1ad142e41_Exit(jule::I32 _119_code) {
	_1c6ca168a_Exit(_119_code);
}



inline jule::Str _1ad1431b6_Executable(void) {
	return _1c6cadda1_executable();;
}



inline jule::Slice<jule::Str> _1ad143370_Args(void) {
	return _1e0ee25a4_args();;
}



inline jule::Exceptional<jule::Str> _1ad1437d2_Getwd(void) {
	jule::Str _332_wd = _1ad14178b_Getwd();;
	if ((_332_wd).empty()) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_1ad149167_getLastOsError(), &__jule_any_type140)};
	};
	return jule::Exceptional<jule::Str>{.result=_332_wd};;
}



inline jule::I32 _1ad148b5b_getLastFsError(void) {
	jule::I32 _412_err = _1c6c329c3_GetLastErrno();;
	{
		auto &_match_expr{ _412_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1bc753993:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1bc753344:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1bc7533aa:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1bc753421:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bc753487:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1bc7534ed:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1bc753564:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1bc753b2a:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1bc753b91:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1bc753c07:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1bc753c6d:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1bc753ce5:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1bc753d6c:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1bc753de4:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1bc753e6b:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1bc753ee3:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1bc75406a:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1bc7540e2:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1bc754169:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1bc7541e1:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1bc754268:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1bc7542e0:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1bc754367:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1bc7543de:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1bc754466:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1bc7544dd:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1bc754565:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1bc7545dc:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1bc753201:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1bc7532cd:;
	};
}



inline jule::I32 _1ad149167_getLastOsError(void) {
	jule::I32 _92_err = _1c6c329c3_GetLastErrno();;
	{
		auto &_match_expr{ _92_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1bc75bb33:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1bc75b5a0:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1bc75b616:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1bc75b68d:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1bc75b715:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1bc75b87a:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1bc75b8e1:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else {
			_case_begin_1bc756eb3:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1bc757090:;
	};
}



inline jule::Bool _1c6e36512_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1c6e367dc_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1c6dac466_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc77b9aa:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1bc77b9aa:;
			++it;
			goto _iter_begin_1bc77b9aa;
		}
		_iter_end_1bc77b9aa:;
	};
	return false;;
}



inline jule::Bool _1c6e36aa6_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1c6dac554_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc77d913:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1bc77d913:;
			++it;
			goto _iter_begin_1bc77d913;
		}
		_iter_end_1bc77d913:;
	};
	{
		auto expr = &(_1c6e36358_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc77e66c:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1bc77e66c:;
			++it;
			goto _iter_begin_1bc77e66c;
		}
		_iter_end_1bc77e66c:;
	};
	return false;;
}



inline jule::Str _1ace26829_Logf(jule::Str _3259_fmt, jule::Slice<jule::Any> _32522_args) {
	return _1ace272b9_applyFmt(_3259_fmt, _32522_args);;
}



inline jule::Str _1ace26b37_argToStr(jule::Any _32913_arg) {
	{
		auto &_match_expr{ _32913_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bc780838:;
			{
				return _32913_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1bc78063a:;
			{
				return __jule_strFromByte(_32913_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bc7806a1:;
			{
				return __jule_strFromRune(_32913_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1bc77e99c:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1bc77e936:;
	};
}



inline jule::I32 _1ace26e01_findNextFmt(jule::Str _34216_fmt) {
	{
		auto expr = &(_34216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc77eabd:;
		if (it != expr_end) {
			jule::I32 _3436_i = it - expr->begin();
			jule::U8 *_3439_b = it;
			{
				if (((*(_3439_b)) == '@')) {
					return _3436_i;;
				};
			}
			_iter_next_1bc77eabd:;
			++it;
			_3436_i++;
			goto _iter_begin_1bc77eabd;
		}
		_iter_end_1bc77eabd:;
	};
	return -1LL;;
}



inline jule::Str _1ace272b9_applyFmt(jule::Str _35117_fmt, jule::Slice<jule::Any> _35127_args) {
	_1ace17078_Builder _3526_s = static__1ace178c5_New(32LL);;
	{
		auto expr = &(_35127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bc78cbb9:;
		if (it != expr_end) {
			jule::Any *_3539_arg = it;
			{
				jule::I32 _3543_i = _1ace26e01_findNextFmt(_35117_fmt);;
				if ((_3543_i == -1LL)) {
					goto _iter_end_1bc78cbb9;
				};
				({
					auto except = _1ace18057_WriteStr(&_3526_s, _35117_fmt.slice(0LL, _3543_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:358:3"));
					(except.result);
				});
				({
					auto except = _1ace18057_WriteStr(&_3526_s, _1ace26b37_argToStr((*(_3539_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:359:3"));
					(except.result);
				});
				(_35117_fmt).mut_slice((_3543_i + 1LL));;
			}
			_iter_next_1bc78cbb9:;
			++it;
			goto _iter_begin_1bc78cbb9;
		}
		_iter_end_1bc78cbb9:;
	};
	({
		auto except = _1ace18057_WriteStr(&_3526_s, _35117_fmt);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:362:2"));
		(except.result);
	});
	return _1ace188d7_Str(&_3526_s);;
}



inline jule::Bool _1ace281bb_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _1ace295da_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _1ace298e8_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _1ace29bb2_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _1ace2a003_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _1ace2a289_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _1ace2a553_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _1ace2a81c_IsUnix(jule::Str _5511_os) {
	return (_1ace298e8_IsDarwin(_5511_os) || _1ace29bb2_IsLinux(_5511_os));;
}



inline jule::Bool _1ace2abe6_Is32Bit(jule::Str _5812_arch) {
	return _1ace2a003_IsI386(_5812_arch);;
}



inline jule::Bool _1ace2ae38_Is64Bit(jule::Str _6112_arch) {
	return (_1ace2a289_IsAmd64(_6112_arch) || _1ace2a553_IsArm64(_6112_arch));;
}



inline void _1bb0961e9_init(void) {
	jule::Str _256_path = _1ad1431b6_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("build: executable file cannot found", 35) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_1bb095748_PathWd=({
			auto except = _1ad1437d2_Getwd();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("build: working directory path cannot found", 42) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_1bb095490_PathExec=_1bb0923d2_Dir(_256_path);
		_1bb095209_PathStdlib=_1bb0916de_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _1bb095490_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_1bb095a45_PathApi=_1bb0916de_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _1bb095490_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1a78caa64_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1a78cad72_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1a78cb13b_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1a78cb47c_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1a78cd9e0_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1bc80c068:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1a78d48e7_IsInf(_4714_f, 0LL) || _1a78d4265_IsNaN(_4714_f)) {
			_case_begin_1bc80c112:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1bc80be7a:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a78d4bb1_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1a78cb13b_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1a78cb47c_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1a78d3e57_NaN(void) {
	return _1a78cb47c_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1a78d4265_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1a78d452e_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1a78cb47c_F64FromBits(9218868437227405312LLU);;
	};
	return _1a78cb47c_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1a78d48e7_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1a78d4bb1_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1a78d706a_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1a78d6685_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1a78d4265_IsNaN(_1118_x) || _1a78d48e7_IsInf(_1118_x, 1LL)) {
			_case_begin_1bc847a98:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1bc847b42:;
			{
				return _1a78d3e57_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1bc847ba8:;
			{
				return _1a78d452e_Inf(-1LL);;
			}
		}
		_match_end_1bc8479cc:;
	};
	jule::F64 _1336_f1;
	jule::I32 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a78cd9e0_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1a78d706a_Abs(jule::F64 _438_x) {
	return _1a78cb47c_F64FromBits((_1a78cb13b_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1a78ddadd_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1a78d706a_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1bc8ae5e3:;
		}
		_iter_end_1bc8ae5e3:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1a78de3e6_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I32 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1a78cd9e0_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1a78d6685_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1a7917ed0_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize) {
	return _1c6991a0c_StrFromBytes(_1a79185b8_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1a791b973_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1a79185b8_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1a7916d03_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bca9bd41:;
			{
				_886_bits=static_cast<jule::U64>(_1a78caa64_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1a7916d03_floatInfo>)((&(_1a79171bb_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bca9bda7:;
			{
				_886_bits=_1a78cb13b_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1a7916d03_floatInfo>)((&(_1a79174b8_f64info))));
			}
		}
		else {
			_case_begin_1bca99b63:;
			{
				__jule_panic_s(jule::Str::lit("conv: illegal bitSize", 21) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1bca9b626:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U32 __jule_y = (jule::U32)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I32 _1026_exp = (static_cast<jule::I32>(({ jule::U64 __jule_x = _886_bits; jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & (({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == (({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)) {
			_case_begin_1bcaa1ebc:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1bcaa3793:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1bcaa3809:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1bcaa3045:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1bcaa2e35:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1bcaa2033:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1bcaa1197:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1bcaa12da:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1a791aae8_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1a791b27a_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	;
	_1a791794c_decimalSlice _1376_digs = _1a791794c_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1a7926708_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), &((*_8910_flt.alloc)));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bcaa6521:;
				{
					_8758_prec=_1a791b973_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bcaa73bd:;
				{
					_8758_prec=_1a791b973_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bcaa7434:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1bcaa7357:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I32 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bcaa937b:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bcaa9447:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1bcaa8dd6:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1bcaa8ee6:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1a792544e_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1a79258e4_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1a7918cc2_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*_8910_flt.alloc)));;
	};
	return _1a7919498_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1a7918cc2_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _1a7916d03_floatInfo* _18824_flt) {
	_1a792a4dc_decimal _1896_d = _1a792a4dc_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1a792a8c7_assign(&_1896_d, _1882_mant);
	_1a792ab80_shift(&_1896_d, (_18813_exp - static_cast<jule::I32>((*(_18824_flt))._field_mantbits)));
	_1a791794c_decimalSlice _1926_digs = _1a791794c_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1a79198b6_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1a791794c_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bcab0096:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bcab0dbb:;
				{
					_18733_prec=_1a791b973_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bcab0e32:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1bcab0c9a:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1bcaaecbb:;
				{
					_1a792b499_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1bcaaed32:;
				{
					_1a792b499_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1bcaaed98:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1a792b499_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1bcab23b7:;
		};
		_1926_digs=_1a791794c_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1a7919498_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1a7919498_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1a791794c_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1bcab54a8:;
			{
				return _1a7919e5a_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bcab551e:;
			{
				return _1a791a444_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1bcab5585:;
			{
				jule::I32 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I32 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1a7919e5a_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1a791a444_fmtF(_22418_dst, _22447_neg, _2252_digs, _1a791b973_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1bcab53ed:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1a79198b6_roundShortest(_1a792a4dc_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1a7916d03_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1a792a4dc_decimal _2926_upper = _1a792a4dc_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1a792a8c7_assign(&_2926_upper, (jule::U64)((jule::U64)(_26235_mant << 1LLU) + 1LLU));
	_1a792ab80_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I32 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)((jule::U64)(_26235_mant << 1LLU) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1a792a4dc_decimal _3116_lower = _1a792a4dc_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1a792a8c7_assign(&_3116_lower, (jule::U64)((jule::U64)(_3026_mantlo << 1LLU) + 1LLU));
	_1a792ab80_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I32 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I32 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1bcac14d6;
			};
			jule::I32 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = '0';;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = '0';;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = '0';;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1bcac6244:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1bcac62dd:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1bcac6354:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1bcac6167:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1bcac8ad7:;
					{
						_1a792b499_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1bcac8b81:;
					{
						_1a792ae38_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1bcac8be7:;
					{
						_1a792b1e1_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1bcac63ba:;
			};
		}
	_iter_next_1bcac14d6:;
	}
	_iter_end_1bcac14d6:;;
}



inline jule::Slice<jule::U8> _1a7919e5a_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1a791794c_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I32 _4177_i = 1LL;;
		jule::I32 _4183_m = _1a791b5ee_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1bcacca31:;
		}
		_iter_end_1bcacca31:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I32 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1bcad0209:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1bcad0391:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1bcaceb98:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I32 __jule_x = _4306_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1bcace5d2:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1a791a444_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1a791794c_decimalSlice _45637_d, jule::I32 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I32 _4647_m = _1a791b5ee_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1bcad3dde:;
		}
		_iter_end_1bcad3dde:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I32 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = '0';;
				jule::I32 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1bcad5198:;
		}
		_iter_end_1bcad5198:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1a791aae8_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1a7916d03_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_s_1ac931565_byte__jule_tuple_str __jule_assign_result = _1a79306ce_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I32>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_s_1ac931565_byte__jule_tuple_str __jule_assign_result = _1a79306ce_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1a791b27a_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _1a7916d03_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1bcada676:;
	}
	_iter_end_1bcada676:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U32 _5263_shift = static_cast<jule::U32>((_51126_prec << 2LLU));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1bcae00e8:;
		}
		_iter_end_1bcae00e8:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I32 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1bcae1ade:;
		}
		_iter_end_1bcae1ade:;;
	};
	jule::U8 _5716_ch = 'P';;
	if ((_51137_fmt == _1a791c611_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1bcae44d7:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1bcae3b68:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1bcae33d7:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1bcae3690:;
	};
	return _51113_dst;;
}



inline jule::I32 _1a791b5ee_min(jule::I32 _5968_a, jule::I32 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I32 _1a791b973_max(jule::I32 _6038_a, jule::I32 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1a791c611_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1a7368ee7_ConvError _1a791ca84_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1a7368ee7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1bcae9ae7:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1bcae8e8c:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1a791c611_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1bcaeb4ab:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a791c611_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1bcaeb599:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1a791c611_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1bcaeb159:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1bcaeb0e3:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1bcaeb016:;
					};
				};
			}
		}
		else {
			_case_begin_1bcae8e15:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1bcae8d16:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=32LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1bcb004b0:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1bcb002c3:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1bcaee37c:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1bcaeee3d:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1bcaeeea4:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1bcaeabc5:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1bcb013d4:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcb0234c:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1bcb036b1:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1a791c611_lower(_1099_c)) && (_1a791c611_lower(_1099_c) <= 'z'))) {
						_case_begin_1bcb035b2:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1a791c611_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1bcb03639:;
						{
							goto _iter_next_1bcb0234c;
						}
					}
					else {
						_case_begin_1bcb0313e:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1bcb030b7:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1bcb0234c:;
			++it;
			goto _iter_begin_1bcb0234c;
		}
		_iter_end_1bcb0234c:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1a791ceb3_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I32 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1a7368ee7_ConvError __jule_assign_result = _1a791ca84_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type142)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1a791d469_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type142)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I32 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1a7368ee7_ConvError __jule_assign_result = _1a791ca84_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I32>(0LL)) && (_18710_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type142)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=32LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = static_cast<jule::U32>((_17240_bitSize - 1LL)); ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type142)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type142)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1a791e107_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1a78cb47c_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _572_clz = _1c6d924c3_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U32 __jule_y = static_cast<jule::U32>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c6d9c401_Mul64(_4122_man, _1a791edd8_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c6d9c401_Mul64(_4122_man, _1a791edd8_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		_6315_xLo=_6817_mergedLo;
		_636_xHi=_687_mergedHi;
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1a78cb47c_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a791e4e2_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1a78cad72_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1322_clz = _1c6d924c3_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U32 __jule_y = static_cast<jule::U32>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c6d9c401_Mul64(_11022_man, _1a791edd8_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c6d9c401_Mul64(_11022_man, _1a791edd8_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		_13816_x_lo=_14318_merged_lo;
		_1386_x_hi=_1437_merged_hi;
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1a78cad72_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _1a7921219_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I32 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I32 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1bcb26959:;
	}
	_iter_end_1bcb26959:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1a7921527_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _736_sign = 1LL;;
	jule::I32 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1bcb30127:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1bcb2a243;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1bcb2a243:;
			{
				jule::I32 _887_caseN = _1a7921219_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1a78d452e_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1bcb3018d:;
			{
				if ((_1a7921219_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1a78d3e57_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1bcb2a1bb:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1a79217e1_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1bcb3545c:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1bcb35715:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1bcb35627:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I32 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1a791c611_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I32 _1346_nd = 0LL;;
	jule::I32 _1356_ndMant = 0LL;;
	jule::I32 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1bcb3a5e9:;
					{
						goto _iter_next_1bcb39a7c;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1bcb3a693:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1bcb3e92d;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1bcb39a7c;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1bcb3a709:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1bcb39a7c;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1bcb39a7c;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1a791c611_lower(_1383_c))) && (_1a791c611_lower(_1383_c) <= 'f'))) {
					_case_begin_1bcb3a770:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1a791c611_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1bcb39a7c;
					}
				}
				_match_end_1bcb3a50b:;
			};
			goto _iter_end_1bcb39a7c;
		}
	_iter_next_1bcb39a7c:;
	}
	_iter_end_1bcb39a7c:;;
	_julec_label_1bcb3e92d:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1a791c611_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1bcb42821;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1bcb42821:;
		}
		_iter_end_1bcb42821:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1a792333c_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U32 __jule_y = _1a79174b8_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1bcb4a62b:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1bcb4a692:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1a7922704_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1a7922704_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1bcb4a708:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1a7922704_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bcb4a53d:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1a792376b_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U32 __jule_y = _1a79171bb_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1bcb4e751:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1bcb4e7b7:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1a7922a34_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1a7922a34_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1bcb4e82d:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1a7922a34_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bcb4e663:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1a7368ee7_ConvError _1a7923d10_atofHex(_1a7916d03_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1a7368ee7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5572_maxExp = ((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (jule::U32)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1bcb53007:;
	}
	_iter_end_1bcb53007:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (jule::U32)((jule::U32)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1bcb5523a:;
	}
	_iter_end_1bcb5523a:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1bcb555d1:;
	}
	_iter_end_1bcb555d1:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _6036_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & (({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL))); jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1a7916d03_floatInfo_eq(&(*(_55613_flt)), _1a79171bb_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1a78cad72_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1a78cb47c_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1a7368ee7_ConvError _1a79241d9_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1a7368ee7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I32 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a7921527_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I32 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I32 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a79217e1_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1a7368ee7_ConvError __jule_assign_result = _1a7923d10_atofHex(&(_1a79171bb_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a792376b_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a791e4e2_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1a791e4e2_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a792a4dc_decimal _6676_d = _1a792a4dc_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1a7921ea6_set(&_6676_d, _1c69914ac_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a79222e7_floatBits(&_6676_d, &(_1a79171bb_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1a78cad72_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a7368ee7_ConvError _1a792442b_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a7368ee7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I32 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a7921527_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I32 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I32 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a79217e1_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1a7368ee7_ConvError __jule_assign_result = _1a7923d10_atofHex(&(_1a79174b8_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a792333c_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a791e107_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1a791e107_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1a792a4dc_decimal _7246_d = _1a792a4dc_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1a7921ea6_set(&_7246_d, _1c69914ac_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a79222e7_floatBits(&_7246_d, &(_1a79174b8_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1a78cb47c_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1a7368ee7_ConvError _1a79247a0_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1a7368ee7_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I32 _7386_n;
		jule::I32 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1a7368ee7_ConvError __jule_assign_result = _1a79241d9_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1a792442b_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1a7924b24_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I32 _7695_n;
	jule::I32 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1a7368ee7_ConvError __jule_assign_result = _1a79247a0_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I32>(0LL)) || (_7698_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type142)};
	};
	if ((_7698_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type142)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1a792544e_ryuFtoaFixed32(_1a791794c_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with negative prec", 46) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with prec > 9", 41) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		(*(_4924_d))._field_dp=0LL;
		(*(_4924_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _626_e2 = _4956_exp;;
	jule::I32 _632_b = _1c6d99a91_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U32 __jule_y = static_cast<jule::U32>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(_632_b - 25LL);
	};
	jule::I32 _742_q = (((-(_1a792698e_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I32 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a7928386_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult64bitPow10", 54) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1a7928b39_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U32 _942_extra = static_cast<jule::U32>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _942_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U32 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1a7926230_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1a79258e4_ryuFtoaFixed64(_1a791794c_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed64 called with prec > 18", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		(*(_12124_d))._field_dp=0LL;
		(*(_12124_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _1316_e2 = _12156_exp;;
	jule::I32 _1322_b = _1c6d99d5a_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U32 __jule_y = static_cast<jule::U32>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(_1322_b - 55LL);
	};
	jule::I32 _1462_q = (((-(_1a792698e_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I32 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a79287b5_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1a7928b39_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U32 _1662_extra = static_cast<jule::U32>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _1662_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U32 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1a7926230_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1a7926230_formatDecimal(_1a791794c_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2012_max = _1a7925c35_u64pow10[_20088_prec];;
	jule::I32 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1bcb89c97:;
	}
	_iter_end_1bcb89c97:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U32 _2296_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=_20088_prec;
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((jule::U32)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1bcb8cd66:;
	}
	_iter_end_1bcb8cd66:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1bcb8d509:;
	}
	_iter_end_1bcb8d509:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1a7926708_ryuFtoaShortest(_1a791794c_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1a7916d03_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		(*(_26125_d))._field_dp=0LL;
		(*(_26125_d))._field_nd=0LL;
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1c6d940b8_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U32 __jule_y = static_cast<jule::U32>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1a79277d6_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I32 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1a7927187_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1a79277d6_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I32 _2792_q = (_1a792698e_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1a7916d03_floatInfo_eq(&(*(_26168_flt)), _1a79171bb_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a7928386_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a7928386_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a7928386_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a79287b5_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a79287b5_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a79287b5_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		_2886_du0=false;
		_2876_dc0=false;
		_2866_dl0=false;
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1a7928b39_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1a7928b39_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1a7928b39_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U32 _3252_extra = static_cast<jule::U32>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _3252_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1a79277d6_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I32 _1a792698e_mulByLog2Log10(jule::I32 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I32 _1a7926c58_mulByLog10Log2(jule::I32 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1a7927187_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1a7916d03_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1a79277d6_ryuDigits(_1a791794c_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a7928e03_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a7928e03_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1a7928e03_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1a7927e57_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1a7927e57_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _4287_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1bcbb0edd:;
		}
		_iter_end_1bcbb0edd:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I32>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I32>((jule::U32)(9LL - _4287_n));
		_1a7927e57_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1bcbb361c:;
	}
	_iter_end_1bcbb361c:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1bcbb184b:;
	}
	_iter_end_1bcbb184b:;;
}



inline void _1a7927e57_ryuDigits32(_1a791794c_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I32 _4606_trimmed = 0LL;;
	jule::I32 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1bcbb619c;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I32>(_47114_cdigit);
			_4556_upper=_4723_u;
			_45458_central=_4717_c;
			_45442_lower=_4703_l;
		}
	_iter_next_1bcbb619c:;
	}
	_iter_end_1bcbb619c:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I32 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1bcbbc071:;
	}
	_iter_end_1bcbbc071:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1a7928386_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult64bitPow10: power of 10 is out of range", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1a791edd8_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c6d9c401_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1a7926c58_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1a79287b5_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult128bitPow10: power of 10 is out of range", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1a791edd8_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1a7926c58_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c6d9c401_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c6d9c401_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c6d9aae7_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1a7928b39_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1bcbc9c93:;
	}
	_iter_end_1bcbc9c93:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1a7928e03_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _6072_hi;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c6d9c401_Mul64((_60214_x >> 1LLU), 9903520314283042200LLU);
		_6072_hi = __jule_assign_result.__jule_result_arg0;
	});
	jule::U64 _6082_q = (_6072_hi >> 28LLU);;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(_6082_q);
	__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((jule::U64)(_60214_x - (jule::U64)(_6082_q * 1000000000LL)));
	return __jule_func_result;;
}



inline void _1a792bd3a_trim(_1a792a4dc_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1bcbcd637:;
	}
	_iter_end_1bcbcd637:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1a792c126_rightShift(_1a792a4dc_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _2856_r = 0LL;;
	jule::I32 _2866_w = 0LL;;
	jule::U32 _2896_n = static_cast<jule::U32>(0LLU);;
	for (; (({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U32)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1bcbd1b46:;
				}
				_iter_end_1bcbd1b46:;;
				goto _iter_end_1bcbced64;
			};
			jule::U32 _3033_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1bcbced64:;
	}
	_iter_end_1bcbced64:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U32 _3082_mask = (jule::U32)(static_cast<jule::U32>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _28432_k; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U32 _3123_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			jule::U32 _3133_dig = ({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1bcbd277e:;
	}
	_iter_end_1bcbd277e:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U32 _3223_dig = ({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U32)(_2896_n * 10LLU);
		}
	_iter_next_1bcbd4aa0:;
	}
	_iter_end_1bcbd4aa0:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1a792bd3a_trim(_28420_a);
}



inline jule::Bool _1a792c5cc_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1bcbd7773:;
	}
	_iter_end_1bcbd7773:;;
	return false;;
}



inline void _1a792c885_leftShift(_1a792a4dc_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _3536_delta = _1a7929e04_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_1a792c5cc_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1a7929e04_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))) {
		(_3536_delta)--;
	};
	jule::I32 _3586_r = (*(_35219_a))._field_nd;;
	jule::I32 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U32 _3626_n = static_cast<jule::U32>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U32 __jule_x = (jule::U32)(static_cast<jule::U32>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U32 __jule_y = _35231_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
			jule::U32 _3663_quo = (_3626_n / 10LLU);;
			jule::U32 _3673_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1bcbdac4e:;
	}
	_iter_end_1bcbdac4e:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U32 _3793_quo = (_3626_n / 10LLU);;
			jule::U32 _3803_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1bcbdd119:;
	}
	_iter_end_1bcbdd119:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1a792bd3a_trim(_35219_a);
}



inline jule::Bool _1a792cc09_shouldRoundUp(_1a792a4dc_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1a792e3d1_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1a792eda4_small(static_cast<jule::I32>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_s_1ac931565_byte__jule_tuple_str __jule_assign_result = _1a79306ce_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1a792e799_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1a792eda4_small(static_cast<jule::I32>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_s_1ac931565_byte__jule_tuple_str __jule_assign_result = _1a79306ce_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1a792ea63_Itoa(jule::I32 _819_i) {
	return _1a792e799_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1a792eda4_small(jule::I32 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1c6991a0c_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1a793013a_isPowerOfTwo(jule::I32 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_s_1ac931565_byte__jule_tuple_str _1a79306ce_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_s_1ac931565_byte__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("conv: illegal base", 18) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1bcc2343a:;
			{
				{
					while ((_10533_u >= 1000000000LL)) {
						{
							jule::U64 _1325_q = (_10533_u / 1000000000LL);;
							jule::U32 _1339_us = static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1325_q * 1000000000LL)));;
							jule::I32 _1349_j = 4LL;;
							for (; (_1349_j > 0LL); (_1349_j)--) {
								{
									jule::U32 _1366_is = (jule::U32)(({ jule::U32 __jule_x = _1339_us; jule::U32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) << 1LLU);;
									_1339_us=(_1339_us / 100LLU);
									_1126_i-=2LL;
									_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1366_is + 1LLU)));
									_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1366_is));
								}
							_iter_next_1bcc25eed:;
							}
							_iter_end_1bcc25eed:;;
							(_1126_i)--;
							_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)((jule::U32)(_1339_us << 1LLU) + 1LLU)));
							_10533_u=_1325_q;
						}
					_iter_next_1bcc255b3:;
					}
					_iter_end_1bcc255b3:;;
				};
				jule::U32 _1547_us = static_cast<jule::U32>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U32 _1564_is = (jule::U32)(({ jule::U32 __jule_x = _1547_us; jule::U32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) << 1LLU);;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1564_is));
					}
				_iter_next_1bcc25382:;
				}
				_iter_end_1bcc25382:;;
				jule::U32 _1643_is = (jule::U32)(_1547_us << 1LLU);;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1643_is));
				};
			}
		}
		else if (_1a793013a_isPowerOfTwo(_10541_base)) {
			_case_begin_1bcc23858:;
			{
				jule::U32 _1793_shift = (static_cast<jule::U32>(_1c6d93419_TrailingZeros(static_cast<jule::U32>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U32 _1813_m = (jule::U32)(static_cast<jule::U32>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>((static_cast<jule::U32>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U32 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1bcc2cd90:;
				}
				_iter_end_1bcc2cd90:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		else {
			_case_begin_1bcc2288a:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1bcc23638:;
				}
				_iter_end_1bcc23638:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		_match_end_1bcc22cdb:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I32 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_1c6991a0c_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline void _1a7932082_Throw(jule::Str _910_msg) {
	jule::println(_1acbbe47e_toStr(_910_msg));
	_1ad142e41_Exit(1LL);
}



inline jule::Bool _1aa0d8538_IsUnaryOp(jule::U32 _33314_id) {
	{
		auto expr = &(_1aa03a5ab_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc7e001:;
		if (it != expr_end) {
			jule::U32 *_3349_op = it;
			{
				if ((_33314_id == (*(_3349_op)))) {
					return true;;
				};
			}
			_iter_next_1bcc7e001:;
			++it;
			goto _iter_begin_1bcc7e001;
		}
		_iter_end_1bcc7e001:;
	};
	return false;;
}



inline jule::Bool _1aa0d8846_IsBinOp(jule::U32 _34312_id) {
	{
		auto expr = &(_1aa03a8db_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc7e50c:;
		if (it != expr_end) {
			jule::U32 *_3449_op = it;
			{
				if ((_34312_id == (*(_3449_op)))) {
					return true;;
				};
			}
			_iter_next_1bcc7e50c:;
			++it;
			goto _iter_begin_1bcc7e50c;
		}
		_iter_end_1bcc7e50c:;
	};
	return false;;
}



inline jule::Bool _1aa0d8e51_IsStr(jule::Str _36310_k) {
	return (!(_36310_k).empty() && ((_36310_k[0LL] == '\"') || _1aa0d91d7_IsRawStr(_36310_k)));;
}



inline jule::Bool _1aa0d91d7_IsRawStr(jule::Str _36613_k) {
	return (!(_36613_k).empty() && (_36613_k[0LL] == '`'));;
}



inline jule::Bool _1aa0d94a1_IsRune(jule::Str _37011_k) {
	return (!(_37011_k).empty() && (_37011_k[0LL] == '\''));;
}



inline jule::Bool _1aa0d9d86_IsFloat(jule::Str _37912_k) {
	if (_1bb08556d_HasPrefix(_37912_k, jule::Str::lit("0x", 2))) {
		return _1bb08a92a_ContainsAny(_37912_k, jule::Str::lit(".pP", 3));;
	};
	return _1bb08a92a_ContainsAny(_37912_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1aa0da150_IsNum(jule::Str _38710_k) {
	if ((_38710_k).empty()) {
		return false;;
	};
	jule::U8 _3922_b = _38710_k[0LL];;
	return ((_3922_b == '.') || (('0' <= _3922_b) && (_3922_b <= '9')));;
}



inline jule::Bool _1aa0da6d3_IsIgnoreIdent(jule::Str _40218_ident) {
	return (_40218_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1aa0da99c_IsAnonIdent(jule::Str _40516_ident) {
	return (_40516_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1aa0db030_IsSpace(jule::I32 _41812_r) {
	{
		auto expr = &(_1aa03a2c0_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc8b915:;
		if (it != expr_end) {
			jule::I32 *_4199_cr = it;
			{
				if ((_41812_r == (*(_4199_cr)))) {
					return true;;
				};
			}
			_iter_next_1bcc8b915:;
			++it;
			goto _iter_begin_1bcc8b915;
		}
		_iter_end_1bcc8b915:;
	};
	return false;;
}



inline jule::Bool _1aa0db52a_IsLetter(jule::I32 _42813_r) {
	return _1bb01c417_IsLetter(_42813_r);;
}



inline jule::Bool _1aa0db99d_IsKeyword(jule::Str _44814_s) {
	{
		auto expr = &(_1aa0e10ac_keywords);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc8e1dc:;
		if (it != expr_end) {
			_1aa0e0bc2_kindPair *_4499_op = it;
			{
				if ((_44814_s == (*(_4499_op))._field_kind)) {
					return true;;
				};
			}
			_iter_next_1bcc8e1dc:;
			++it;
			goto _iter_begin_1bcc8e1dc;
		}
		_iter_end_1bcc8e1dc:;
	};
	return false;;
}



inline jule::Bool _1aa0dbc67_IsDecimal(jule::I32 _45814_r) {
	return (('0' <= _45814_r) && (_45814_r <= '9'));;
}



inline jule::Bool _1aa0dc031_IsBinary(jule::I32 _46113_r) {
	return ((_46113_r == '0') || (_46113_r == '1'));;
}



inline jule::Bool _1aa0dc2ea_IsOctal(jule::I32 _46412_r) {
	return (('0' <= _46412_r) && (_46412_r <= '7'));;
}



inline jule::Bool _1aa0dc5b4_IsHex(jule::I32 _46710_r) {
	{
		
		if ((('0' <= _46710_r) && (_46710_r <= '9'))) {
			_case_begin_1bcc91156:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46710_r) && (_46710_r <= 'f'))) {
			_case_begin_1bcc911de:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46710_r) && (_46710_r <= 'F'))) {
			_case_begin_1bcc91266:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bcc910e0:;
			{
				return false;;
			}
		}
		_match_end_1bcc909c4:;
	};
}



inline jule::Bool _1aa0dc87d_IsAssign(jule::U32 _48213_id) {
	return ((((((((_48213_id == static_cast<jule::U32>(1LLU)) || (_48213_id == static_cast<jule::U32>(27LLU))) || (_48213_id == static_cast<jule::U32>(30LLU))) || (_48213_id == static_cast<jule::U32>(32LLU))) || (_48213_id == static_cast<jule::U32>(24LLU))) || (_48213_id == static_cast<jule::U32>(74LLU))) || (_48213_id == static_cast<jule::U32>(62LLU))) || (_48213_id == static_cast<jule::U32>(65LLU)));;
}



inline jule::Bool _1aa0dcb47_IsPostfixOp(jule::U32 _49416_id) {
	{
		auto expr = &(_1aa0d22ce_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc94104:;
		if (it != expr_end) {
			jule::U32 *_4959_op = it;
			{
				if ((_49416_id == (*(_4959_op)))) {
					return true;;
				};
			}
			_iter_next_1bcc94104:;
			++it;
			goto _iter_begin_1bcc94104;
		}
		_iter_end_1bcc94104:;
	};
	return false;;
}



inline jule::Bool _1aa0dce11_IsAssignOp(jule::U32 _50415_id) {
	if (_1aa0dcb47_IsPostfixOp(_50415_id)) {
		return true;;
	};
	{
		auto expr = &(_1aa0d25ba_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcc95446:;
		if (it != expr_end) {
			jule::U32 *_5089_op = it;
			{
				if ((_50415_id == (*(_5089_op)))) {
					return true;;
				};
			}
			_iter_next_1bcc95446:;
			++it;
			goto _iter_begin_1bcc95446;
		}
		_iter_end_1bcc95446:;
	};
	return false;;
}



inline _1ace263b7_Log _1aa0e192b_makeErr(jule::I32 _10112_row, jule::I32 _10122_col, jule::Ptr<_1aa0dd8a1_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args) {
	return _1ace263b7_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10112_row, ._field_Column=_10122_col, ._field_Path=(*((*(_10133_f))))._field_Path, ._field_Text=_1ace26829_Logf(_10146_fmt, _10166_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1aa0e1ce4_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix) {
	if (((*(_11120_bytes)).len() < _11135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcca0907:;
		if (it != expr_end) {
			jule::I32 _1156_i = it - expr->begin();
			{
				if (((*(_11120_bytes))[_1156_i] != _11135_prefix[_1156_i])) {
					return false;;
				};
			}
			_iter_next_1bcca0907:;
			++it;
			_1156_i++;
			goto _iter_begin_1bcca0907;
		}
		_iter_end_1bcca0907:;
	};
	return true;;
}



inline jule::Str _1aa0e2168_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I32 _12332_i) {
	jule::Str __jule_func_result;
	(_12332_i)++;
	if ((_12332_i >= (*(_12315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1296_b = (*(_12315_txt))[_12332_i];;
	if ((_1296_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1296_b == '+') || (_1296_b == '-'))) {
		(_12332_i)++;
		if ((_12332_i >= (*(_12315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12315_txt))[_12332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1432_first = _12332_i;;
	for (; (_12332_i < (*(_12315_txt)).len()); (_12332_i)++) {
		{
			_1296_b=(*(_12315_txt))[_12332_i];
			if (((_1296_b != '_') && (!(_1aa0dbc67_IsDecimal(static_cast<jule::I32>(_1296_b)))))) {
				goto _iter_end_1bcca3883;
			};
		}
	_iter_next_1bcca3883:;
	}
	_iter_end_1bcca3883:;;
	if ((_12332_i == _1432_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = _1c6991a0c_StrFromBytes((*(_12315_txt)).slice(0LL, _12332_i));
	return __jule_func_result;;
}



inline jule::Str _1aa0e2531_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I32 _15728_i) {
	return _1aa0e2168_floatFmtE(_15715_txt, _15728_i);;
}



inline jule::Str _1aa0e28a5_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I32 _16136_i) {
	if (((*(_16119_txt))[_16136_i] != '.')) {
		return jule::Str();;
	};
	(_16136_i)++;
	_julec_label_1bcca53e0:;
	for (; (_16136_i < (*(_16119_txt)).len()); (_16136_i)++) {
		{
			jule::U8 _1693_b = (*(_16119_txt))[_16136_i];;
			{
				
				if ((_1693_b == '_') || _1aa0dbc67_IsDecimal(static_cast<jule::I32>(_1693_b))) {
					_case_begin_1bcca64bd:;
					{
						goto _iter_next_1bcca52be;
					}
				}
				else if (_1aa0e4236_isFloatFmtP(_1693_b, _16136_i)) {
					_case_begin_1bcca6567:;
					{
						return _1aa0e2531_floatFmtP(_16119_txt, _16136_i);;
					}
				}
				else {
					_case_begin_1bcca6446:;
					{
						goto _iter_end_1bcca52be;
					}
				}
				_match_end_1bcca63d0:;
			};
		}
	_iter_next_1bcca52be:;
	}
	_iter_end_1bcca52be:;;
	return jule::Str();;
}



inline jule::Str _1aa0e2c29_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I32 _18236_i) {
	_18236_i+=2LL;
	return _1aa0e2168_floatFmtE(_18219_txt, _18236_i);;
}



inline jule::Str _1aa0e309d_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I32 _18735_i) {
	(_18735_i)++;
	return _1aa0e2168_floatFmtE(_18718_txt, _18735_i);;
}



inline jule::Str _1aa0e3532_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I32 _19231_i) {
	jule::Str __jule_func_result;
	(_19231_i)++;
	if ((_19231_i >= (*(_19214_txt)).len())) {
		__jule_func_result = _1c6991a0c_StrFromBytes((*(_19214_txt)));
		return __jule_func_result;;
	};
	if (((*(_19214_txt))[_19231_i] == '_')) {
		(_19231_i)--;
		__jule_func_result = _1c6991a0c_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
		return __jule_func_result;;
	};
	for (; (_19231_i < (*(_19214_txt)).len()); (_19231_i)++) {
		{
			jule::U8 _2023_b = (*(_19214_txt))[_19231_i];;
			if (((_19231_i > 1LL) && ((_2023_b == 'e') || (_2023_b == 'E')))) {
				__jule_func_result = _1aa0e2168_floatFmtE(_19214_txt, _19231_i);
				return __jule_func_result;;
			};
			if (((_2023_b != '_') && (!(_1aa0dbc67_IsDecimal(static_cast<jule::I32>(_2023_b)))))) {
				goto _iter_end_1bcca8a31;
			};
		}
	_iter_next_1bcca8a31:;
	}
	_iter_end_1bcca8a31:;;
	if ((_19231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1c6991a0c_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
	return __jule_func_result;;
}



inline jule::Str _1aa0e3774_commonNum(jule::Slice<jule::U8>* _21715_txt) {
	jule::Str __jule_func_result;
	jule::I32 _2186_i = 0LL;;
	_julec_label_1bccab3e6:;
	for (; (_2186_i < (*(_21715_txt)).len()); (_2186_i)++) {
		{
			jule::U8 _2213_b = (*(_21715_txt))[_2186_i];;
			{
				
				if ((_2213_b == '.')) {
					_case_begin_1bccac150:;
					{
						__jule_func_result = _1aa0e3532_floatNum(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((_2213_b == '_')) {
					_case_begin_1bccac1e9:;
					{
						goto _iter_next_1bccab528;
					}
				}
				else if (_1aa0e3db2_isFloatFmtE(_2213_b, _2186_i)) {
					_case_begin_1bccac260:;
					{
						__jule_func_result = _1aa0e2168_floatFmtE(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1aa0dbc67_IsDecimal(static_cast<jule::I32>(_2213_b))))) {
					_case_begin_1bccac2c6:;
					{
						goto _iter_end_1bccab528;
					}
				}
				_match_end_1bccac073:;
			};
		}
	_iter_next_1bccab528:;
	}
	_iter_end_1bccab528:;;
	if ((_2186_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1c6991a0c_StrFromBytes((*(_21715_txt)).slice(0LL, _2186_i));
	return __jule_func_result;;
}



inline jule::Str _1aa0e3a3d_binaryNum(jule::Slice<jule::U8>* _24015_txt) {
	jule::Str __jule_func_result;
	if ((!(_1aa0e1ce4_bytesHasPrefix(_24015_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_24015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _2496_i = 2LL;;
	for (; (_2496_i < (*(_24015_txt)).len()); (_2496_i)++) {
		{
			if ((((*(_24015_txt))[_2496_i] != '_') && (!(_1aa0dc031_IsBinary(static_cast<jule::I32>((*(_24015_txt))[_2496_i])))))) {
				goto _iter_end_1bccaea8c;
			};
		}
	_iter_next_1bccaea8c:;
	}
	_iter_end_1bccaea8c:;;
	if ((_2496_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1c6991a0c_StrFromBytes((*(_24015_txt)).slice(0LL, _2496_i));
	return __jule_func_result;;
}



inline jule::Bool _1aa0e3db2_isFloatFmtE(jule::U8 _26216_b, jule::I32 _26225_i) {
	return ((_26225_i > 0LL) && ((_26216_b == 'e') || (_26216_b == 'E')));;
}



inline jule::Bool _1aa0e4236_isFloatFmtP(jule::U8 _26616_b, jule::I32 _26625_i) {
	return ((_26625_i > 0LL) && ((_26616_b == 'p') || (_26616_b == 'P')));;
}



inline jule::Bool _1aa0e45aa_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I32 _27038_i) {
	if (((*(_27021_txt))[_27038_i] != '.')) {
		return false;;
	};
	(_27038_i)++;
	_julec_label_1bccb2551:;
	for (; (_27038_i < (*(_27021_txt)).len()); (_27038_i)++) {
		{
			jule::U8 _2773_b = (*(_27021_txt))[_27038_i];;
			{
				
				if ((_2773_b == '_') || _1aa0dbc67_IsDecimal(static_cast<jule::I32>(_2773_b))) {
					_case_begin_1bccb36a6:;
					{
						goto _iter_next_1bccb2b5b;
					}
				}
				else if (_1aa0e4236_isFloatFmtP(_2773_b, _27038_i)) {
					_case_begin_1bccb3750:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1bccb362e:;
					{
						goto _iter_end_1bccb2b5b;
					}
				}
				_match_end_1bccb35b8:;
			};
		}
	_iter_next_1bccb2b5b:;
	}
	_iter_end_1bccb2b5b:;;
	return false;;
}



inline jule::Bool _1aa0e492e_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I32 _29133_i) {
	{
		
		if (((*(_29120_txt)).len() < 3LL)) {
			_case_begin_1bccb483e:;
			{
				goto _case_begin_1bccb2de2;
			}
		}
		else if (((*(_29120_txt))[_29133_i] != '.')) {
			_case_begin_1bccb2de2:;
			{
				goto _case_begin_1bccb2e58;
			}
		}
		else if ((((*(_29120_txt))[(_29133_i + 1LL)] != 'p') && ((*(_29120_txt))[(_29133_i + 1LL)] != 'P'))) {
			_case_begin_1bccb2e58:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bccb2d59:;
			{
				return true;;
			}
		}
		_match_end_1bccb2c5a:;
	};
}



inline jule::Bool _1aa0e4ca3_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I32 _30434_i) {
	{
		
		if (((*(_30421_txt)).len() < 4LL)) {
			_case_begin_1bccb638a:;
			{
				goto _case_begin_1bccb6401;
			}
		}
		else if (((*(_30421_txt))[_30434_i] != '.')) {
			_case_begin_1bccb6401:;
			{
				goto _case_begin_1bccb6478;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 1LL)] != 'f') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'F'))) {
			_case_begin_1bccb6478:;
			{
				goto _case_begin_1bccb6500;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 2LL)] != 'p') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'P'))) {
			_case_begin_1bccb6500:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1bccb5e6c:;
			{
				return true;;
			}
		}
		_match_end_1bccb5d5c:;
	};
}



inline jule::Str _1aa0e529d_octalNum(jule::Slice<jule::U8>* _31914_txt) {
	jule::Str __jule_func_result;
	if (((*(_31914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _3276_octalStart = 1LL;;
	jule::Bool _3296_o = false;;
	if (((*(_31914_txt))[1LL] == 'o')) {
		if (((*(_31914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3276_octalStart)++;
		_3296_o=true;
	};
	jule::I32 _3386_i = _3276_octalStart;;
	for (; (_3386_i < (*(_31914_txt)).len()); (_3386_i)++) {
		{
			jule::U8 _3403_b = (*(_31914_txt))[_3386_i];;
			if ((_3403_b == '.')) {
				if (_3296_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1aa0e3532_floatNum(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (_1aa0e3db2_isFloatFmtE(_3403_b, _3386_i)) {
				__jule_func_result = _1aa0e2168_floatFmtE(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (((_3403_b != '_') && (!(_1aa0dc2ea_IsOctal(static_cast<jule::I32>(_3403_b)))))) {
				goto _iter_end_1bccba911;
			};
		}
	_iter_next_1bccba911:;
	}
	_iter_end_1bccba911:;;
	if ((_3386_i == _3276_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1c6991a0c_StrFromBytes((*(_31914_txt)).slice(0LL, _3386_i));
	return __jule_func_result;;
}



inline jule::Str _1aa0e5479_hexNum(jule::Slice<jule::U8>* _36112_txt) {
	jule::Str __jule_func_result;
	if (((*(_36112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36112_txt))[0LL] != '0') || (((*(_36112_txt))[1LL] != 'x') && ((*(_36112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3706_i = 2LL;;
	_julec_label_1bccbe580:;
	for (; (_3706_i < (*(_36112_txt)).len()); (_3706_i)++) {
		{
			jule::U8 _3733_b = (*(_36112_txt))[_3706_i];;
			{
				
				if (_1aa0e492e_isFloatFmtDotp(_36112_txt, _3706_i)) {
					_case_begin_1bccc01eb:;
					{
						__jule_func_result = _1aa0e309d_floatFmtDotp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1aa0e4ca3_isFloatFmtDotfp(_36112_txt, _3706_i)) {
					_case_begin_1bccc0295:;
					{
						__jule_func_result = _1aa0e2c29_floatFmtDotfp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1aa0e4236_isFloatFmtP(_3733_b, _3706_i)) {
					_case_begin_1bccc030b:;
					{
						__jule_func_result = _1aa0e2531_floatFmtP(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1aa0e45aa_isFloatFmtDotnp(_36112_txt, _3706_i)) {
					_case_begin_1bccc0372:;
					{
						__jule_func_result = _1aa0e28a5_floatFmtDotnp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (((_3733_b != '_') && (!(_1aa0dc5b4_IsHex(static_cast<jule::I32>(_3733_b)))))) {
					_case_begin_1bccc03d8:;
					{
						goto _iter_end_1bccbe629;
					}
				}
				_match_end_1bccc010d:;
			};
		}
	_iter_next_1bccbe629:;
	}
	_iter_end_1bccbe629:;;
	if ((_3706_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1c6991a0c_StrFromBytes((*(_36112_txt)).slice(0LL, _3706_i));
	return __jule_func_result;;
}



inline jule::Str _1aa0e57cb_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I32 _39428_n) {
	jule::Str __jule_func_result;
	if (((*(_39415_txt)).len() < _39428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _4006_i = 2LL;;
	for (; (_4006_i < _39428_n); (_4006_i)++) {
		{
			if ((!(_1aa0dc5b4_IsHex(static_cast<jule::I32>((*(_39415_txt))[_4006_i]))))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1bccbe8b0:;
	}
	_iter_end_1bccbe8b0:;;
	__jule_func_result=_1c6991a0c_StrFromBytes((*(_39415_txt)).slice(0LL, _39428_n));
	return __jule_func_result;;
}



inline jule::Str _1aa0e5a95_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt) {
	return _1aa0e57cb_hexEscape(_41227_txt, 10LL);;
}



inline jule::Str _1aa0e5d5e_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt) {
	return _1aa0e57cb_hexEscape(_41730_txt, 6LL);;
}



inline jule::Str _1aa0e6128_hexByteEscape(jule::Slice<jule::U8>* _42219_txt) {
	return _1aa0e57cb_hexEscape(_42219_txt, 4LL);;
}



inline jule::Str _1aa0e63e2_byteEscape(jule::Slice<jule::U8>* _42716_txt) {
	jule::Str __jule_func_result;
	if (((*(_42716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1aa0dc2ea_IsOctal(static_cast<jule::I32>((*(_42716_txt))[1LL])))) || (!(_1aa0dc2ea_IsOctal(static_cast<jule::I32>((*(_42716_txt))[2LL]))))) || (!(_1aa0dc2ea_IsOctal(static_cast<jule::I32>((*(_42716_txt))[3LL])))))) {
		return __jule_func_result;;
	};
	__jule_func_result = _1c6991a0c_StrFromBytes((*(_42716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1ace263b7_Log> _1aa0eb3d6_Lex(jule::Ptr<_1aa0dd8a1_Fileset> _80712_f, jule::I32 _80725_mode) {
	if ((_80712_f == nullptr)) {
		return nullptr;;
	};
	_1aa0e6b62_lex _8126_lex = _1aa0e6b62_lex{._field_mode=_80725_mode, ._field_tokens=jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>(nullptr), ._field_file=_80712_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_1ace263b7_Log>(nullptr)};;
	_1aa0e99ab_newLine(&_8126_lex);
	_1aa0e7789_lex(&_8126_lex);
	if ((_8126_lex._field_errors.len() > 0LL)) {
		return _8126_lex._field_errors;;
	};
	(*(_80712_f))._field_Tokens=_8126_lex._field_tokens;
	return nullptr;;
}



inline void _1aaa2b761_lshiftUnsig(_1aa9b96cc_Const* _58821_c, _1aa9b96cc_Const* _58832_x) {
	jule::U64 _5892_l = _1aaa251a5_AsU64(_58821_c);;
	jule::U64 _5902_r = _1aaa251a5_AsU64(_58832_x);;
	_1aaa2599c_SetU64(_58821_c, ({ jule::U64 __jule_x = _5892_l; jule::U64 __jule_y = _5902_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1aaa2ba91_rshiftUnsig(_1aa9b96cc_Const* _59421_c, _1aa9b96cc_Const* _59432_x) {
	jule::U64 _5952_l = _1aaa251a5_AsU64(_59421_c);;
	jule::U64 _5962_r = _1aaa251a5_AsU64(_59432_x);;
	_1aaa2599c_SetU64(_59421_c, ({ jule::U64 __jule_x = _5952_l; jule::U64 __jule_y = _5962_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Str _1aaab62bd_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1bcdc3ed1:;
			{
				return _1aaab57d9_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1bcdc4069:;
			{
				return _1aaab5a92_SysUint;;
			}
		}
		else {
			_case_begin_1bcdc11ed:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1bcdc0ab0:;
	};
}



inline jule::I32 _1aaab6587_BitSizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1bcdc52ac:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1bcdc54ee:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1bcdc5576:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1bcdc5334:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1bcdc53ab:;
			{
				return _1aaab5586_BitSize;;
			}
		}
		else {
			_case_begin_1bcdc50d1:;
			{
				return -1LL;;
			}
		}
		_match_end_1bcdc5202:;
	};
}



inline jule::Str _1aaab68c8_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1bcdc7b3e:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1bcdc8128:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1bcdc818e:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bcdc7ba5:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1bcdc7ee6:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bcdc7a73:;
	};
}



inline jule::Str _1aaab6b5e_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1bcdc85e0:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1bcdc98bb:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1bcdc9932:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bcdc8656:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1bcdc7c2c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bcdc92c2:;
	};
}



inline jule::Str _1aaab6e28_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1bcdcb4b1:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1bcdcb0e8:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1bcdc86cd:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bcdca9ee:;
	};
}



inline jule::Bool _1aaab7a2d_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _1a7924b24_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _1aaab7ce7_BitSizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1bcdd1285:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bcdd0bbe:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bcdd03a5:;
	};
}



inline jule::I32 _1aaab80b1_BitSizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1bcdd2033:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1bcdd1bae:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1bcdd1c25:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bcdd1560:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bcdd1a6b:;
	};
}



inline jule::I32 _1aaab837a_BitSizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1bcdd3a6d:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1bcdd36e9:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1bcdd3760:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1bcdd309a:;
			{
				return 64LLU;;
			}
		}
		_match_end_1bcdd35a6:;
	};
}



inline void _1aaab8523_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1bb0960a6_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1bcdd48b5:;
				{
					_1aaab5586_BitSize=64LLU;
					_1aaab57d9_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1aaab5a92_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1bcdd4651:;
				{
					_1aaab5586_BitSize=32LLU;
					_1aaab57d9_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1aaab5a92_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1bcdd49b4:;
		};
	};
}



inline void _1aaab8699_init(void) {
	_1aaab8523_UpdateTarget();
}



inline jule::I64 _1aaabc25d_MinI(jule::Str _6113_k) {
	_6113_k=_1aaab62bd_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1bcdd6d07:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1bcdd6d6d:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1bcdd6dd4:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1bcdd6e4a:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1bcdd3d59:;
			{
				return 0LL;;
			}
		}
		_match_end_1bcdd4d05:;
	};
}



inline jule::I64 _1aaabc56b_MaxI(jule::Str _7913_k) {
	_7913_k=_1aaab62bd_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1bcdd8699:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1bcdd8710:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1bcdd8776:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1bcdd87ed:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1bcdd8435:;
			{
				return 0LL;;
			}
		}
		_match_end_1bcdd75ee:;
	};
}



inline jule::U64 _1aaabc835_MaxU(jule::Str _9713_k) {
	_9713_k=_1aaab62bd_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1bcdda0a2:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1bcdda118:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1bcdda17e:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1bcdda1e5:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1bcdd9d2c:;
			{
				return 0LLU;;
			}
		}
		_match_end_1bcdd8ee6:;
	};
}



inline jule::F64 _1aaabcb76_Min(jule::Str _11512_k) {
	_11512_k=_1aaab62bd_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1aaabc25d_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1bcddca00:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1bcddc57c:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1bcddbd0c:;
			{
				return 0LL;;
			}
		}
		_match_end_1bcddc3a1:;
	};
}



inline jule::F64 _1aaabce0c_Max(jule::Str _13312_k) {
	_13312_k=_1aaab62bd_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1aaabc56b_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1aaabc835_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1bcdde2a4:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1bcdde9ad:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1bcdde5d4:;
			{
				return 0LL;;
			}
		}
		_match_end_1bcdde23d:;
	};
}



inline jule::Bool _1aaabe02e_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1aaabe33c_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1aaabe606_IsInt(jule::Str _4610_k) {
	return (_1aaabe02e_IsSigInt(_4610_k) || _1aaabe33c_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1aaabe947_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1aaabebcd_IsNum(jule::Str _5610_k) {
	return (_1aaabe606_IsInt(_5610_k) || _1aaabe947_IsFloat(_5610_k));;
}



inline jule::Bool _1aaabee97_IsSigNum(jule::Str _6113_k) {
	return (_1aaabe02e_IsSigInt(_6113_k) || _1aaabe947_IsFloat(_6113_k));;
}



inline jule::Bool _1aab4854d_FindModuleFile(jule::Slice<_1ad0a39ea_Dir>* _1420_dirents) {
	{
		auto expr = _1420_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bcdea755:;
		if (it != expr_end) {
			_1ad0a39ea_Dir *_159_d = it;
			{
				if (((!(_1ad1343d8_IsDir(&(*(_159_d))._field_Stat))) && (*(_159_d))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1bcdea755:;
			++it;
			goto _iter_begin_1bcdea755;
		}
		_iter_end_1bcdea755:;
	};
	return false;;
}



inline jule::Str _1aab4885b_FindModuleFileDeep(jule::Str _2627_path) {
	for (;;) {
		{
			jule::Slice<_1ad0a39ea_Dir> _287_dirents = ({
				auto except = static__1bb0945e3_Read(_2627_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1bcdeb190;
				} jule::Slice<_1ad0a39ea_Dir>(nullptr);});
			});;
			jule::Bool _323_exist = _1aab4854d_FindModuleFile(&(_287_dirents));;
			if (_323_exist) {
				return _2627_path;;
			};
			jule::I32 _373_n = _2627_path.len();;
			_2627_path=_1bb0923d2_Dir(_2627_path);
			if ((_2627_path.len() == _373_n)) {
				goto _iter_end_1bcdeb190;
			};
		}
	_iter_next_1bcdeb190:;
	}
	_iter_end_1bcdeb190:;;
	return jule::Str();;
}



inline jule::Slice<_1ace263b7_Log> _1aab48b25_CheckModuleFile(jule::Str* _4821_path) {
	jule::Slice<jule::U8> _492_bytes = ({
		auto except = static__1ad0a966b_Read(_1bb0916de_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4821_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_1ace263b7_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ace263b7_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _552_s = _1bb08cdc2_Trim(_1c6991743_BytesStr(_492_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_552_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_1ace263b7_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1ace263b7_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1aab493b7_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc4a0_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1bb083deb_IsUpper(_142_r);;
}



inline jule::Bool _1aaba0671_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1aab8736c_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I32 _247_i = 0LL;;
		_216_r=_1aaba2eae_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc4a0_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1aaba2563_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1aaba28a4_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bce078c7:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1bce078c7;
				};
			}
			_iter_next_1bce078c7:;
			++it;
			goto _iter_begin_1bce078c7;
		}
		_iter_end_1bce078c7:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1aaba3355_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I32 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc4a0_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_1e0edd54a_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1bce09676:;
	}
	_iter_end_1bce09676:;;
	return _1c6991a0c_StrFromBytes(_686_s);;
}



inline __jule_tuple__1ac931565_byte__jule_tuple_bool _1aaba2b3a_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple__1ac931565_byte__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1bce0bce9:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bce0c4d1:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bce0c547:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1bce0c5ad:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1bce0c624:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1bce0c69b:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1bce0c723:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1bce0c79a:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1bce0c822:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1bce0c899:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1bce0c349:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1aaba2eae_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple__1ac931565_byte__jule_tuple_bool __jule_assign_result = _1aaba2b3a_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1bce1278e:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1a791ceb3_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1bce123e8:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1a791ceb3_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1bce11c77:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1a791ceb3_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1bce110d9:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1a791ceb3_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1bce10b88:;
	};
}



inline void _1aaba3355_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i) {
	jule::I32 _1462_r = _1aaba2eae_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_1e0edd54a_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I32 _1aac6a85c_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I32 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I32 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc15e_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1bce1993e:;
	}
	_iter_end_1bce1993e:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1aac72237_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I32 _292_start = (*(_2824_i));;
	jule::I32 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I32 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc15e_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1bce1ba40:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1bce1c6cd:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1bce1c5ac:;
			};
		}
	_iter_next_1bce1b655:;
	}
	_iter_end_1bce1b655:;;
	return nullptr;;
}



inline void _1aac72523_FmtByDefault(_1ace17078_Builder* _4822_buf, jule::Any* _4846_arg) {
	if (((*(_4846_arg)) == nullptr)) {
		({
			auto except = _1ace18057_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:50:3"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*(_4846_arg)) };
		
		if (_match_expr.type == &__jule_any_type143) {
			_case_begin_1bce1b90d:;
			{
				({
					auto except = _1ace18057_WriteStr(_4822_buf, _1a7917ed0_FmtFloat(static_cast<jule::F64>((*(_4846_arg)).cast<jule::F32>(&__jule_any_type143)), 'g', -1LL, 32LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:55:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1bce1e537:;
			{
				({
					auto except = _1ace18057_WriteStr(_4822_buf, _1a7917ed0_FmtFloat((*(_4846_arg)).cast<jule::F64>(&__jule_any_type6), 'g', -1LL, 64LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:57:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type144) {
			_case_begin_1bce1e68b:;
			{
				({
					auto except = _1ace18057_WriteStr(_4822_buf, _1a792e799_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I8>(&__jule_any_type144)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:59:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type145) {
			_case_begin_1bce1e702:;
			{
				({
					auto except = _1ace18057_WriteStr(_4822_buf, _1a792e799_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I16>(&__jule_any_type145)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:61:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1bce1dc51:;
			{
				({
					auto except = _1ace18057_WriteStr(_4822_buf, _1a792e799_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:63:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1bce1dcb7:;
			{
				({
					auto except = _1ace18057_WriteStr(_4822_buf, _1a792e799_FmtInt((*(_4846_arg)).cast<jule::I64>(&__jule_any_type2), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:65:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type146) {
			_case_begin_1bce1dd2d:;
			{
				({
					auto except = _1ace18057_WriteStr(_4822_buf, _1a792e3d1_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U8>(&__jule_any_type146)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:67:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type147) {
			_case_begin_1bce1dd94:;
			{
				({
					auto except = _1ace18057_WriteStr(_4822_buf, _1a792e3d1_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U16>(&__jule_any_type147)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:69:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type148) {
			_case_begin_1bce1e812:;
			{
				({
					auto except = _1ace18057_WriteStr(_4822_buf, _1a792e3d1_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U32>(&__jule_any_type148)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:71:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1bce1e878:;
			{
				({
					auto except = _1ace18057_WriteStr(_4822_buf, _1a792e3d1_FmtUint((*(_4846_arg)).cast<jule::U64>(&__jule_any_type3), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:73:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1bce1e900:;
			{
				({
					auto except = _1ace18057_WriteStr(_4822_buf, (*(_4846_arg)).cast<jule::Str>(&__jule_any_type5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:75:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1bce1e977:;
			{
				if ((*(_4846_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					({
						auto except = _1ace18057_WriteStr(_4822_buf, jule::Str::lit("true", 4));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:78:4"));
						(except.result);
					});
				} else {
					({
						auto except = _1ace18057_WriteStr(_4822_buf, jule::Str::lit("false", 5));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:80:4"));
						(except.result);
					});
				};
			}
		}
		else {
			_case_begin_1bce1d68a:;
			{
				({
					auto except = _1ace18057_WriteStr(_4822_buf, _1acb72aa3_toStr((*(_4846_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:83:3"));
					(except.result);
				});
			}
		}
		_match_end_1bce1d624:;
	};
}



inline void _1aac72941_applyFmtByDefault(_1ace17078_Builder* _8727_buf, jule::I32* _8755_j, jule::Slice<jule::Any> _8763_args) {
	jule::Any _882_arg = _8763_args[(*(_8755_j))];;
	((*(_8755_j)))++;
	_1aac72523_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1aac72d5e_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1ace17078_Builder* _9536_buf, jule::I32* _9564_j, jule::Slice<jule::Any> _9572_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1aac72941_applyFmtByDefault(_9536_buf, _9564_j, _9572_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		({
			auto except = _1ace18057_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:107:3"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1ace17c16_Write(_9536_buf, (*(_9518_fmt)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:110:2"));
		(except.result);
	});
}



inline jule::Slice<jule::U8> _1aac731d3_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _1c69914ac_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I32 _1216_i = _1aac6a85c_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I32 _1256_j = 0LL;;
	jule::I32 _1266_last = 0LL;;
	_1ace17078_Builder _1276_buf = static__1ace178c5_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1aac6a85c_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			({
				auto except = _1ace17c16_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:129:3"));
				(except.result);
			});
			jule::Slice<jule::U8> _1307_format = _1aac72237_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1bce49430;
			};
			_1aac72d5e_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				({
					auto except = _1ace17c16_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:136:4"));
					(except.result);
				});
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1bce49430;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1bce49430:;
	}
	_iter_end_1bce49430:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		({
			auto except = _1ace17c16_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:144:3"));
			(except.result);
		});
	};
	return _1ace19388_Buf(&_1276_buf);;
}



inline jule::Str _1aac7537d_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1c6991a0c_StrFromBytes(_1aac731d3_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aa5ce776_runtimeFindFn(jule::Ptr<_1aab2ee08_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1aaa3b221_Fn> _126_f = _1aab31514_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 109) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1aa966767_Struct> _1aa5cebc7_runtimeFindStruct(jule::Ptr<_1aab2ee08_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1aa966767_Struct> _256_f = _1aab31118_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 107) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1aaa415ab_parameterUsesGenerics(jule::Ptr<_1aaa3d179_ParamIns>* _40231_p, jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>* _40246_generics) {
	if (_1aaa39d9b_IsSelf((*((*(_40231_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1aac1eab9_kindUsesGenerics(&((*((*(_40231_p))))._field_Type), _40246_generics);;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae5143_buildAsComptimeMethodData(jule::Ptr<_1aaa3e2ce_FnIns>* _205235_f) {
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_205235_f)), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aab2ee08_ImportInfo> _1aaae5352_findComptimePackage(jule::Ptr<_1aab4c62e_sema>* _206029_s) {
	return _1aab4cb07_SelectPackage((*(_206029_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>>((void*)__jule_anon1bd1c1531, nullptr, nullptr));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae56c6_buildComptimeTypeInfoData(jule::Ptr<_1aab4c62e_sema>* _206635_s, jule::Ptr<_1aabecdb6_Type>* _206650_t) {
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aab4ba3a_pushComptimeTypeInfo((*((*(_206635_s))))._field_meta.ptr(), _206650_t), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aaae5a17_buildComptimeValue(jule::Ptr<_1aabb8db5_Data>* _207428_d) {
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaad7564_comptimeValue>(_1aaad7564_comptimeValue{._field_data=(*(_207428_d))}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Str _1aaae883e_toStrConstraints(jule::Ptr<_1aabeb4d0_InsGeneric> _14321_g) {
	_1ace17078_Builder _1446_sb = static__1ace178c5_New(128LL);;
	{
		auto expr = &((*(_14321_g))._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd3a932e:;
		if (it != expr_end) {
			jule::I32 _1456_i = it - expr->begin();
			jule::Ptr<_1aabecdb6_Type> *_1459_c = it;
			{
				({
					auto except = _1ace18057_WriteStr(&_1446_sb, _1aabed2b2_Str((*(_1459_c)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:146:3"));
					(except.result);
				});
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					({
						auto except = _1ace18057_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:148:4"));
						(except.result);
					});
				};
			}
			_iter_next_1bd3a932e:;
			++it;
			_1456_i++;
			goto _iter_begin_1bd3a932e;
		}
		_iter_end_1bd3a932e:;
	};
	return _1ace188d7_Str(&_1446_sb);;
}



inline jule::Bool _1aaae8c07_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1aabecdb6_Type>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1bd3ab1aa:;
			{
				jule::Ptr<_1aac06bc2_Prim> _1573_prim = _1aac00ec9_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1aaabee97_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1bd3ab221:;
			{
				jule::Ptr<_1aac06bc2_Prim> _1633_prim = _1aac00ec9_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1aaabe33c_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1bd3ab287:;
			{
				jule::Ptr<_1aac06bc2_Prim> _1693_prim = _1aac00ec9_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1aaabe947_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1bd3ab2ed:;
			{
				jule::Ptr<_1aac06bc2_Prim> _1753_prim = _1aac00ec9_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1aaabebcd_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1bd3ab4da:;
			{
				return _1aac00209_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1bd3ab551:;
			{
				return (!(_1aac00209_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1bd3ab5b7:;
			{
				return _1aabeee73_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1bd3ab62d:;
			{
				return _1aac00490_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1bd392e2d:;
			{
				return false;;
			}
		}
		_match_end_1bd3ab056:;
	};
}



inline jule::Bool _1aaae8ec1_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1aaae6c05_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd3b2678:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1bd3b2678:;
			++it;
			goto _iter_begin_1bd3b2678;
		}
		_iter_end_1bd3b2678:;
	};
	return false;;
}



inline jule::Ptr<_1aab05032_scopeChecker> _1aaaeb8a8_newScopeCheckerBase(jule::Ptr<_1aab4c62e_sema>* _3229_s, jule::Ptr<_1aaa3e2ce_FnIns> _3243_owner) {
	return jule::new_ptr<_1aab05032_scopeChecker>(_1aab05032_scopeChecker{._field_calledFrom=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_s=(*(_3229_s)), ._field_owner=_3243_owner, ._field_parent=jule::Ptr<_1aab05032_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1aaa42524_SymTab>(_1aaa42524_SymTab{._field_File=jule::Ptr<_1aa0dd8a1_Fileset>(nullptr), ._field_Passes=jule::Slice<_1aab1e3d1_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1aa966767_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1aaa3b221_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1aaa46935_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1aaa490db_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1aaa4a7e6_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1aaae9840_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_tree=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1aab04042_result>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1aab70795_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1aab03b68_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1aab0099a_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1aab05032_scopeChecker> _1aaaebc71_newScopeChecker(jule::Ptr<_1aab4c62e_sema>* _4025_s, jule::Ptr<_1aaa3e2ce_FnIns> _4039_owner) {
	jule::Ptr<_1aab05032_scopeChecker> _416_base = _1aaaeb8a8_newScopeCheckerBase(_4025_s, _4039_owner);;
	(*(_416_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1aab03b68_scopeLabel>>>(nullptr);
	(*_416_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1aab0099a_GotoSt>>>(nullptr);
	return _416_base;;
}



inline jule::U32 _1aab176c6_removeEqFromOp(jule::U32 _208319_op) {
	{
		auto &_match_expr{ _208319_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1bd3cbd24:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1bd3cbd8a:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1bd3cbe12:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1bd3cbe89:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1bd3cc154:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1bd3cc1ba:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1bd3cc231:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1bd3cc2a8:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1bd3cc330:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1bd3cc3eb:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_1bd3cab14:;
			{
				return _208319_op;;
			}
		}
		_match_end_1bd3cad89:;
	};
}



inline void _1aab1797e_makeComptimeRange(jule::Ptr<_1aabb8db5_Data>* _211227_d) {
	{
		
		if ((_1aac035a3_comptimeStructFields((*((*(_211227_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bd3cc7d6:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac1152_comptimeRange>(_1aaac1152_comptimeRange{._field_kind=jule::Trait(_1aac035a3_comptimeStructFields((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data5)});
			}
		}
		else if ((_1aac03ac0_comptimeEnumFields((*((*(_211227_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1bd3d0b3b:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac1152_comptimeRange>(_1aaac1152_comptimeRange{._field_kind=jule::Trait(_1aac03ac0_comptimeEnumFields((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data5)});
			}
		}
		else if ((_1aac04890_comptimeTypeInfos((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_1bd3d0ba2:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac1152_comptimeRange>(_1aaac1152_comptimeRange{._field_kind=jule::Trait(_1aac04890_comptimeTypeInfos((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data5)});
			}
		}
		else if ((_1aac040dc_comptimeParams((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_1bd3cc84c:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac1152_comptimeRange>(_1aaac1152_comptimeRange{._field_kind=jule::Trait(_1aac040dc_comptimeParams((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data5)});
			}
		}
		else if ((_1aac04dac_comptimeStatics((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_1bd3cc8b3:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac1152_comptimeRange>(_1aaac1152_comptimeRange{._field_kind=jule::Trait(_1aac04dac_comptimeStatics((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data5)});
			}
		}
		else if ((_1aac05e13_comptimeFiles((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_1bd3cc929:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac1152_comptimeRange>(_1aaac1152_comptimeRange{._field_kind=jule::Trait(_1aac05e13_comptimeFiles((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data5)});
			}
		}
		else if ((_1aac058e6_comptimeDecls((*((*(_211227_d))))._field_Type) != nullptr)) {
			_case_begin_1bd3d1224:;
			{
				(*((*(_211227_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaac1152_comptimeRange>(_1aaac1152_comptimeRange{._field_kind=jule::Trait(_1aac058e6_comptimeDecls((*((*(_211227_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1aaac0e32_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1bd3cc770:;
			{
				(*((*(_211227_d))))._field_Decl=true;
			}
		}
		_match_end_1bd3d083e:;
	};
}



inline jule::Bool _1aab17c15_canComptimeMatch(jule::Ptr<_1aabb8db5_Data>* _213526_d) {
	if ((!(_1aabb7479_isGoodValueToInfer(_213526_d)))) {
		return false;;
	};
	return (_1aabb9800_IsConst((*(_213526_d)).ptr()) || (_1aac04b26_comptimeTypeInfo((*((*(_213526_d))))._field_Type.ptr()) != nullptr));;
}



inline jule::Bool _1aab17ece_stmtIsDef(jule::Any* _214315_stmt) {
	{
		auto &_match_expr{ (*(_214315_stmt)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd3dae32:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1bd3dc285:;
			{
				jule::Ptr<_1aab018ad_MultiAssign> _21483_ma = (*(_214315_stmt)).cast_ptr<_1aab018ad_MultiAssign>(&__jule_any_type44);;
				return ((*(_21483_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1bd3dbd34:;
			{
				return false;;
			}
		}
		_match_end_1bd3dbcbd:;
	};
}



inline jule::I32 _1aab18353_countMatchType(jule::Ptr<_1aab0232b_Match>* _215520_m, jule::Ptr<_1aabecdb6_Type>* _215532_t) {
	jule::I32 _21566_n = 0LL;;
	_julec_label_1bd3dee03:;
	{
		auto expr = &((*((*(_215520_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd3e0343:;
		if (it != expr_end) {
			jule::Ptr<_1aab02b23_Case> *_21589_c = it;
			{
				if (((*(_21589_c)) == nullptr)) {
					goto _iter_next_1bd3e0343;
				};
				{
					auto expr = &((*((*(_21589_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd3e11ce:;
					if (it != expr_end) {
						jule::Ptr<_1aabb8db5_Data> *_216210_expr = it;
						{
							if (((*(_216210_expr)) == nullptr)) {
								goto _iter_end_1bd3e0343;
							};
							if (_1aabed603_Equal((*(_215532_t)), (*((*(_216210_expr))))._field_Model.cast_ptr<_1aabecdb6_Type>(&__jule_any_type85))) {
								(_21566_n)++;
							};
						}
						_iter_next_1bd3e11ce:;
						++it;
						goto _iter_begin_1bd3e11ce;
					}
					_iter_end_1bd3e11ce:;
				};
			}
			_iter_next_1bd3e0343:;
			++it;
			goto _iter_begin_1bd3e0343;
		}
		_iter_end_1bd3e0343:;
	};
	return _21566_n;;
}



inline jule::Ptr<_1aab03b68_scopeLabel> _1aab187d7_findLabelParent(jule::Str* _217921_ident, jule::Ptr<_1aab05032_scopeChecker> _217937_scope) {
	jule::Ptr<_1aab03b68_scopeLabel> _21806_label = _1aab093ee_findLabelScope(_217937_scope, _217921_ident);;
	while ((_21806_label == nullptr)) {
		{
			if ((((*_217937_scope.alloc)._field_parent == nullptr) || ((*_217937_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_217937_scope=(*(_217937_scope))._field_parent;
			_21806_label=_1aab093ee_findLabelScope(_217937_scope, _217921_ident);
		}
	_iter_next_1bd3e15ec:;
	}
	_iter_end_1bd3e15ec:;;
	return _21806_label;;
}



inline jule::Bool _1aab19013_checkAssignMut(jule::Ptr<_1aab4c62e_sema>* _222624_s, jule::Ptr<_1aabb8db5_Data>* _222635_left, jule::Ptr<_1aabb8db5_Data> _222652_right, jule::Ptr<_1aa0d7ceb_Token> _222666_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_222635_left))))._field_Mutable))) {
			_case_begin_1bd3e9270:;
			{
				_1aab50533_pushErr((*(_222624_s)).ptr(), _222666_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_222652_right != nullptr) && (!((*_222652_right.alloc)._field_Mutable))) && _1aac00209_Mutable((*_222652_right.alloc)._field_Type.ptr()))) {
			_case_begin_1bd3e9319:;
			{
				_1aab50533_pushErr((*(_222624_s)).ptr(), _222666_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_222652_right))._field_Type), &__jule_any_type5); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bd3e91e8:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bd3e911b:;
	};
}



inline jule::Bool _1aab194ec_checkAssign(jule::Ptr<_1aab4c62e_sema>* _223921_s, jule::Ptr<_1aabb8db5_Data>* _223936_left, jule::Ptr<_1aabb8db5_Data> _223953_right, jule::Ptr<_1aa0d7ceb_Token> _223967_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aaa3e2ce_FnIns> _22402_f = _1aac022b6_Fn((*((*(_223936_left))))._field_Type.ptr());;
	if ((((_22402_f != nullptr) && ((*_22402_f.alloc)._field_Decl != nullptr)) && (*(*(_22402_f))._field_Decl.alloc)._field_Global)) {
		_1aab50533_pushErr((*(_223921_s)).ptr(), _223967_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1aabb9800_IsConst((*(_223936_left)).ptr())) {
			_case_begin_1bd400155:;
			{
				_1aab50533_pushErr((*(_223921_s)).ptr(), _223967_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1aab50896_pushSuggestion((*(_223921_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_223936_left))))._field_Lvalue))) {
			_case_begin_1bd4001cc:;
			{
				_1aab50533_pushErr((*(_223921_s)).ptr(), _223967_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1bd3ee066:;
	};
	__jule_func_result = _1aab19013_checkAssignMut(_223921_s, _223936_left, _223953_right, _223967_op);
	return __jule_func_result;;
}



inline jule::Bool _1aab197b6_isValidAstStForNextSt(jule::Any* _225731_n) {
	{
		auto &_match_expr{ (*(_225731_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1bd402311:;
			{
				return (!((*((*(_225731_n)).cast_ptr<_1aa10c2b5_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1bd3e93b3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1bd3ed2a7:;
			{
				return false;;
			}
		}
		_match_end_1bd400243:;
	};
}



inline jule::Bool _1aab19a80_isValidStForNextSt(jule::Any* _226824_st) {
	{
		auto &_match_expr{ (*(_226824_st)) };
		
		if (_match_expr.type == &__jule_any_type39 || _match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type44) {
			_case_begin_1bd4057ba:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1bd40abbb:;
			{
				{
					auto &_match_expr{ (*((*(_226824_st)).cast_ptr<_1aabb8db5_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1bd40beca:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1bd41109a:;
						{
							return false;;
						}
					}
					_match_end_1bd411034:;
				};
			}
		}
		else {
			_case_begin_1bd402a1a:;
			{
				return false;;
			}
		}
		_match_end_1bd402ba2:;
	};
}



inline jule::Ptr<_1aac062ba_TypeSym> _1aab1e744_buildType(jule::Ptr<_1aa0ed817_TypeDecl> _6918_t) {
	if ((_6918_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=_6918_t, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr)});;
}



inline jule::Ptr<_1aabba03c_Value> _1aab1ea52_buildExpr(jule::Ptr<_1aa102b4b_Expr> _7818_expr) {
	if ((_7818_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=_7818_expr, ._field_Data=jule::Ptr<_1aabb8db5_Data>(nullptr)});;
}



inline jule::Ptr<_1aabec1a1_TypeAlias> _1aab1ed1b_buildTypeAlias(jule::Ptr<_1aa95e551_TypeAliasDecl> _8723_decl) {
	return jule::new_ptr<_1aabec1a1_TypeAlias>(_1aabec1a1_TypeAlias{._field_Scope=(*(_8723_decl))._field_Scope, ._field_Strict=(*_8723_decl.alloc)._field_Strict, ._field_Public=(*_8723_decl.alloc)._field_Public, ._field_Binded=(*_8723_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_8723_decl.alloc)._field_Token, ._field_Ident=(*_8723_decl.alloc)._field_Ident, ._field_TypeSym=_1aab1e744_buildType((*_8723_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1aa965447_Field> _1aab2015c_buildField(jule::Ptr<_1aa962b70_FieldDecl> _9919_decl) {
	return jule::new_ptr<_1aa965447_Field>(_1aa965447_Field{._field_Owner=jule::Ptr<_1aa966767_Struct>(nullptr), ._field_Token=(*(_9919_decl))._field_Token, ._field_Public=(*_9919_decl.alloc)._field_Public, ._field_Mutable=(*_9919_decl.alloc)._field_Mutable, ._field_Ident=(*_9919_decl.alloc)._field_Ident, ._field_TypeSym=_1aab1e744_buildType((*_9919_decl.alloc)._field_Kind), ._field_Default=(*_9919_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1aa965447_Field>> _1aab203e3_buildFields(jule::Slice<jule::Ptr<_1aa962b70_FieldDecl>>* _11021_decls) {
	jule::Slice<jule::Ptr<_1aa965447_Field>> _1116_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa965447_Field>>::alloc(0LL, (*(_11021_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa965447_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _11021_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd691517:;
		if (it != expr_end) {
			jule::Ptr<_1aa962b70_FieldDecl> _11214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aa965447_Field>> &__jule_push_dest = _1116_fields; __jule_push_dest.push(_1aab2015c_buildField(_11214_decl)); };
			}
			_iter_next_1bd691517:;
			++it;
			goto _iter_begin_1bd691517;
		}
		_iter_end_1bd691517:;
	};
	return _1116_fields;;
}



inline jule::Ptr<_1aa966767_Struct> _1aab206ac_buildStruct(jule::Ptr<_1aa963566_StructDecl> _11820_decl) {
	return jule::new_ptr<_1aa966767_Struct>(_1aa966767_Struct{._field_sema=jule::Ptr<_1aab4c62e_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1aa966767_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1aa966767_Struct>>(nullptr), ._field_Token=(*(_11820_decl))._field_Token, ._field_Ident=(*_11820_decl.alloc)._field_Ident, ._field_Fields=_1aab203e3_buildFields(&((*_11820_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1aaa3b221_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr), ._field_Public=(*_11820_decl.alloc)._field_Public, ._field_Binded=(*_11820_decl.alloc)._field_Binded, ._field_Directives=(*_11820_decl.alloc)._field_Directives, ._field_Generics=(*_11820_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1aaa46935_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1aa969605_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1aaa3974c_Param> _1aab20976_buildParam(jule::Ptr<_1aa9581b5_ParamDecl> _13019_decl) {
	return jule::new_ptr<_1aaa3974c_Param>(_1aaa3974c_Param{._field_Token=(*(_13019_decl))._field_Token, ._field_Mutable=(*_13019_decl.alloc)._field_Mutable, ._field_Variadic=(*_13019_decl.alloc)._field_Variadic, ._field_Reference=(*_13019_decl.alloc)._field_Reference, ._field_TypeSym=_1aab1e744_buildType((*_13019_decl.alloc)._field_Kind), ._field_Ident=(*_13019_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1aaa3974c_Param>> _1aab20d50_buildParams(jule::Slice<jule::Ptr<_1aa9581b5_ParamDecl>>* _14121_decls) {
	jule::Slice<jule::Ptr<_1aaa3974c_Param>> _1426_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa3974c_Param>>::alloc(0LL, (*(_14121_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaa3974c_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _14121_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6954c7:;
		if (it != expr_end) {
			jule::Ptr<_1aa9581b5_ParamDecl> _14314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaa3974c_Param>> &__jule_push_dest = _1426_params; __jule_push_dest.push(_1aab20976_buildParam(_14314_decl)); };
			}
			_iter_next_1bd6954c7:;
			++it;
			goto _iter_begin_1bd6954c7;
		}
		_iter_end_1bd6954c7:;
	};
	return _1426_params;;
}



inline jule::Ptr<_1aaa39186_RetType> _1aab21092_buildRetType(jule::Ptr<_1aa10170a_RetTypeDecl> _14921_decl) {
	if ((((*(_14921_decl))._field_Idents == nullptr) && ((*_14921_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aaa39186_RetType>(_1aaa39186_RetType{._field_TypeSym=_1aab1e744_buildType((*(_14921_decl))._field_Kind), ._field_Idents=(*_14921_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aab2135b_buildFunc(jule::Ptr<_1aa959617_FnDecl> _15918_decl) {
	return jule::new_ptr<_1aaa3b221_Fn>(_1aaa3b221_Fn{._field_sema=jule::Ptr<_1aab4c62e_sema>(nullptr), ._field_Token=(*(_15918_decl))._field_Token, ._field_Global=(*_15918_decl.alloc)._field_Global, ._field_Unsafety=(*_15918_decl.alloc)._field_Unsafety, ._field_Public=(*_15918_decl.alloc)._field_Public, ._field_Binded=(*_15918_decl.alloc)._field_Binded, ._field_Statically=(*_15918_decl.alloc)._field_Statically, ._field_Exceptional=(*_15918_decl.alloc)._field_Exceptional, ._field_Ident=(*_15918_decl.alloc)._field_Ident, ._field_Directives=(*_15918_decl.alloc)._field_Directives, ._field_Scope=(*_15918_decl.alloc)._field_Scope, ._field_Generics=(*_15918_decl.alloc)._field_Generics, ._field_Result=_1aab21092_buildRetType((*_15918_decl.alloc)._field_Result), ._field_Params=_1aab20d50_buildParams(&((*_15918_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1aa966767_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1aaa3b221_Fn>> _1aab21625_buildMethods(jule::Slice<jule::Ptr<_1aa959617_FnDecl>>* _17722_decls) {
	jule::Slice<jule::Ptr<_1aaa3b221_Fn>> _1786_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa3b221_Fn>>::alloc(0LL, (*(_17722_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaa3b221_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _17722_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd69a4dd:;
		if (it != expr_end) {
			jule::Ptr<_1aa959617_FnDecl> _17914_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaa3b221_Fn>> &__jule_push_dest = _1786_methods; __jule_push_dest.push(_1aab2135b_buildFunc(_17914_decl)); };
			}
			_iter_next_1bd69a4dd:;
			++it;
			goto _iter_begin_1bd69a4dd;
		}
		_iter_end_1bd69a4dd:;
	};
	return _1786_methods;;
}



inline jule::Slice<jule::Ptr<_1aac062ba_TypeSym>> _1aab218de_buildTraitInherits(jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>* _18528_inherits) {
	jule::Slice<jule::Ptr<_1aac062ba_TypeSym>> _1866_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aac062ba_TypeSym>>::alloc(0LL, (*(_18528_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aac062ba_TypeSym>(nullptr); __jule_collection; });;
	{
		auto expr = _18528_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd69b984:;
		if (it != expr_end) {
			jule::Ptr<_1aa0ed817_TypeDecl> _18714_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1aac062ba_TypeSym>> &__jule_push_dest = _1866_symbols; __jule_push_dest.push(_1aab1e744_buildType(_18714_it)); };
			}
			_iter_next_1bd69b984:;
			++it;
			goto _iter_begin_1bd69b984;
		}
		_iter_end_1bd69b984:;
	};
	return _1866_symbols;;
}



inline jule::Ptr<_1aaa46935_Trait> _1aab21ba8_buildTrait(jule::Ptr<_1aa963ca3_TraitDecl> _19319_decl) {
	return jule::new_ptr<_1aaa46935_Trait>(_1aaa46935_Trait{._field_Token=(*(_19319_decl))._field_Token, ._field_Ident=(*_19319_decl.alloc)._field_Ident, ._field_Public=(*_19319_decl.alloc)._field_Public, ._field_Inherits=_1aab218de_buildTraitInherits(&((*_19319_decl.alloc)._field_Inherits)), ._field_Methods=_1aab21625_buildMethods(&((*_19319_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1aa966767_Struct>>(nullptr)});;
}



inline jule::Ptr<_1aaa48580_EnumItem> _1aab21e72_buildEnumItem(jule::Ptr<_1aa960d5a_EnumItemDecl> _20322_decl) {
	return jule::new_ptr<_1aaa48580_EnumItem>(_1aaa48580_EnumItem{._field_Token=(*(_20322_decl))._field_Token, ._field_Ident=(*_20322_decl.alloc)._field_Ident, ._field_Value=_1aab1ea52_buildExpr((*_20322_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1aaa48580_EnumItem>> _1aab2223b_buildEnumItems(jule::Slice<jule::Ptr<_1aa960d5a_EnumItemDecl>>* _21124_decls) {
	jule::Slice<jule::Ptr<_1aaa48580_EnumItem>> _2126_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa48580_EnumItem>>::alloc(0LL, (*(_21124_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaa48580_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _21124_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd69eb85:;
		if (it != expr_end) {
			jule::Ptr<_1aa960d5a_EnumItemDecl> _21314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaa48580_EnumItem>> &__jule_push_dest = _2126_items; __jule_push_dest.push(_1aab21e72_buildEnumItem(_21314_decl)); };
			}
			_iter_next_1bd69eb85:;
			++it;
			goto _iter_begin_1bd69eb85;
		}
		_iter_end_1bd69eb85:;
	};
	return _2126_items;;
}



inline jule::Ptr<_1aaa490db_Enum> _1aab22736_buildEnum(jule::Ptr<_1aa96191b_EnumDecl> _21918_decl) {
	return jule::new_ptr<_1aaa490db_Enum>(_1aaa490db_Enum{._field_Token=(*(_21918_decl))._field_Token, ._field_Public=(*_21918_decl.alloc)._field_Public, ._field_Ident=(*_21918_decl.alloc)._field_Ident, ._field_TypeSym=_1aab1e744_buildType((*_21918_decl.alloc)._field_Kind), ._field_Items=_1aab2223b_buildEnumItems(&((*_21918_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1aaa4a21e_TypeEnumItem> _1aab22912_buildTypeEnumItem(jule::Ptr<_1aa962246_TypeEnumItemDecl> _22926_decl) {
	return jule::new_ptr<_1aaa4a21e_TypeEnumItem>(_1aaa4a21e_TypeEnumItem{._field_Token=(*(_22926_decl))._field_Token, ._field_Ident=(*_22926_decl.alloc)._field_Ident, ._field_TypeSym=_1aab1e744_buildType((*_22926_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1aaa4a21e_TypeEnumItem>> _1aab22ba9_buildTypeEnumItems(jule::Slice<jule::Ptr<_1aa962246_TypeEnumItemDecl>>* _23728_decls) {
	jule::Slice<jule::Ptr<_1aaa4a21e_TypeEnumItem>> _2386_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa4a21e_TypeEnumItem>>::alloc(0LL, (*(_23728_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaa4a21e_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23728_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6a2d86:;
		if (it != expr_end) {
			jule::Ptr<_1aa962246_TypeEnumItemDecl> _23914_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaa4a21e_TypeEnumItem>> &__jule_push_dest = _2386_items; __jule_push_dest.push(_1aab22912_buildTypeEnumItem(_23914_decl)); };
			}
			_iter_next_1bd6a2d86:;
			++it;
			goto _iter_begin_1bd6a2d86;
		}
		_iter_end_1bd6a2d86:;
	};
	return _2386_items;;
}



inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aab22e73_buildTypeEnum(jule::Ptr<_1aa9628a6_TypeEnumDecl> _24522_decl) {
	return jule::new_ptr<_1aaa4a7e6_TypeEnum>(_1aaa4a7e6_TypeEnum{._field_Token=(*(_24522_decl))._field_Token, ._field_Public=(*_24522_decl.alloc)._field_Public, ._field_Ident=(*_24522_decl.alloc)._field_Ident, ._field_Items=_1aab22ba9_buildTypeEnumItems(&((*_24522_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1aab70795_Var> _1aab2323c_buildVar(jule::Ptr<_1aa95a7c2_VarDecl> _25417_decl) {
	return jule::new_ptr<_1aab70795_Var>(_1aab70795_Var{._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Token=(*(_25417_decl))._field_Token, ._field_Ident=(*_25417_decl.alloc)._field_Ident, ._field_Binded=(*_25417_decl.alloc)._field_Binded, ._field_Constant=(*_25417_decl.alloc)._field_Constant, ._field_Mutable=(*_25417_decl.alloc)._field_Mutable, ._field_Public=(*_25417_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_25417_decl.alloc)._field_Statically, ._field_Reference=(*_25417_decl.alloc)._field_Reference, ._field_Checked=false, ._field_TypeSym=_1aab1e744_buildType((*_25417_decl.alloc)._field_Kind), ._field_Value=_1aab1ea52_buildExpr((*_25417_decl.alloc)._field_Expr), ._field_Refers=static__1aab1d1e3_new(), ._field_Directives=(*_25417_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1aab70795_Var>> _1aab23506_buildVars(jule::Slice<jule::Ptr<_1aa95a7c2_VarDecl>> _27118_decls) {
	jule::Slice<jule::Ptr<_1aab70795_Var>> _2726_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab70795_Var>>::alloc(0LL, _27118_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aab70795_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_27118_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd6a763d:;
		if (it != expr_end) {
			jule::Ptr<_1aa95a7c2_VarDecl> _27314_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aab70795_Var>> &__jule_push_dest = _2726_vars; __jule_push_dest.push(_1aab2323c_buildVar(_27314_decl)); };
			}
			_iter_next_1bd6a763d:;
			++it;
			goto _iter_begin_1bd6a763d;
		}
		_iter_end_1bd6a763d:;
	};
	return _2726_vars;;
}



inline jule::Ptr<_1aaae9840_Impl> _1aab237c0_buildImpl(jule::Ptr<_1aa964413_Impl> _27918_decl) {
	return jule::new_ptr<_1aaae9840_Impl>(_1aaae9840_Impl{._field_Base=(*(_27918_decl))._field_Base, ._field_Dest=(*_27918_decl.alloc)._field_Dest, ._field_Methods=_1aab21625_buildMethods(&((*_27918_decl.alloc)._field_Methods)), ._field_Statics=_1aab23506_buildVars((*_27918_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1aab2a0e0_isImplicitImport(jule::Ptr<_1aab2ee08_ImportInfo> _79221_imp) {
	return ((*((*(_79221_imp))._field_Decl))._field_Token == nullptr);;
}



inline jule::Ptr<_1aaa42524_SymTab> _1aab2c246_findVarFileInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _4430_files, jule::Ptr<_1aab70795_Var>* _4449_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd731079:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _4514_f = *it;
			{
				if ((_1aaa44aba_findVar1(_4514_f.ptr(), _4449_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1bd731079:;
			++it;
			goto _iter_begin_1bd731079;
		}
		_iter_end_1bd731079:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aab70795_Var> _1aab2c6b9_findVarInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd732322:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _5614_f = *it;
			{
				jule::Ptr<_1aab70795_Var> _577_v = _1aaa42e3c_FindVar(_5614_f.ptr(), (*(_5545_ident)), _5557_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1bd732322:;
			++it;
			goto _iter_begin_1bd732322;
		}
		_iter_end_1bd732322:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aabec1a1_TypeAlias> _1aab2cae8_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd732883:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _6814_f = *it;
			{
				jule::Ptr<_1aabec1a1_TypeAlias> _697_ta = _1aaa43338_FindTypeAlias(_6814_f.ptr(), (*(_6751_ident)), _6763_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1bd732883:;
			++it;
			goto _iter_begin_1bd732883;
		}
		_iter_end_1bd732883:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aa966767_Struct> _1aab2d09e_findStructInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd733db2:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _8014_f = *it;
			{
				jule::Ptr<_1aa966767_Struct> _817_s = _1aaa43734_FindStruct(_8014_f.ptr(), (*(_7948_ident)), _7960_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1bd733db2:;
			++it;
			goto _iter_begin_1bd733db2;
		}
		_iter_end_1bd733db2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aab2d49a_findFnInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7353e1:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _9214_file = *it;
			{
				jule::Ptr<_1aaa3b221_Fn> _937_f = _1aaa43b30_FindFn(_9214_file.ptr(), (*(_9144_ident)), _9156_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1bd7353e1:;
			++it;
			goto _iter_begin_1bd7353e1;
		}
		_iter_end_1bd7353e1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa46935_Trait> _1aab2d81e_findTraitInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _10328_files, jule::Str* _10347_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd73b590:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _10414_f = *it;
			{
				jule::Ptr<_1aaa46935_Trait> _1057_t = _1aaa43e71_FindTrait(_10414_f.ptr(), (*(_10347_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1bd73b590:;
			++it;
			goto _iter_begin_1bd73b590;
		}
		_iter_end_1bd73b590:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa490db_Enum> _1aab2db93_findEnumInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _11527_files, jule::Str* _11546_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd73c8b0:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _11614_f = *it;
			{
				jule::Ptr<_1aaa490db_Enum> _1177_e = _1aaa442b2_FindEnum(_11614_f.ptr(), (*(_11546_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1bd73c8b0:;
			++it;
			goto _iter_begin_1bd73c8b0;
		}
		_iter_end_1bd73c8b0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa4a7e6_TypeEnum> _1aab2e127_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _12731_files, jule::Str* _12750_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd73dc13:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _12814_f = *it;
			{
				jule::Ptr<_1aaa4a7e6_TypeEnum> _1297_e = _1aaa44603_FindTypeEnum(_12814_f.ptr(), (*(_12750_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1bd73dc13:;
			++it;
			goto _iter_begin_1bd73dc13;
		}
		_iter_end_1bd73dc13:;
	};
	return nullptr;;
}



inline jule::Bool _1aab34b55_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p) {
	return _1bb08556d_HasPrefix((*(_33318_f)), _1bb0916de_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1bb095209_PathStdlib; (*it++) = _33326_p; __jule_collection; })));;
}



inline jule::Bool _1aab49a7c_isValidModelForRef(jule::Any* _1528_m) {
	{
		auto &_match_expr{ (*(_1528_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bd74d1a6:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bd74d591:;
			{
				jule::Ptr<_1aaa33a76_StructSubIdentExpr> _207_model = (*(_1528_m)).cast_ptr<_1aaa33a76_StructSubIdentExpr>(&__jule_any_type99);;
				return (((*(_207_model))._field_Field != nullptr) && _1aab49a7c_isValidModelForRef(&((*((*_207_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bd74d607:;
			{
				jule::Ptr<_1aaa2e4ab_UnaryExpr> _237_unary = (*(_1528_m)).cast_ptr<_1aaa2e4ab_UnaryExpr>(&__jule_any_type112);;
				if (((*((*(_237_unary))._field_Op))._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_1aac014e6_Ptr((*((*(_237_unary))._field_Expr))._field_Type.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1aac01260_Sptr((*((*(_237_unary))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _1aab49a7c_isValidModelForRef(&((*((*(_237_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1bd74d66d:;
			{
				jule::Ptr<_1aaa31865_IndexingExpr> _377_indexing = (*(_1528_m)).cast_ptr<_1aaa31865_IndexingExpr>(&__jule_any_type43);;
				if ((_1aac01c99_Arr((*((*(_377_indexing))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _1aab49a7c_isValidModelForRef(&((*((*(_377_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1bd74d140:;
			{
				return false;;
			}
		}
		_match_end_1bd74cc44:;
	};
}



inline _1ace263b7_Log _1aab4a0aa_compilerErr(jule::Ptr<_1aa0d7ceb_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args) {
	_1ace263b7_Log _506_log = _1ace263b7_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_4917_token))))._field_Row, ._field_Column=(*((*(_4917_token))))._field_Column, ._field_Path=(*((*((*(_4917_token))))._field_File))._field_Path, ._field_Text=_1ace26829_Logf(_4951_fmt, _4971_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4939_line) {
		_506_log._field_Line=_1aa0ded8b_GetRow((*((*(_4917_token))))._field_File, (*((*(_4917_token))))._field_Row);
	};
	return _506_log;;
}



inline void _1aab4a396_appendRetVars(jule::Slice<jule::Ptr<_1aab70795_Var>>* _6323_dest, jule::Ptr<_1aaa3e2ce_FnIns>* _6342_f) {
	if ((_1aaa3b6c7_IsVoid((*((*(_6342_f))))._field_Decl.ptr()) || ((*((*(_6342_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aabecdb6_Type>> _686_types = _1aaa40511_Types((*(_6342_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_6342_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd75d44c:;
		if (it != expr_end) {
			jule::I32 _697_i = it - expr->begin();
			jule::Ptr<_1aa0d7ceb_Token> _6914_ident = *it;
			{
				if ((_1aa0da6d3_IsIgnoreIdent((*(_6914_ident))._field_Kind) || _1aa0da99c_IsAnonIdent((*(_6914_ident))._field_Kind))) {
					goto _iter_next_1bd75d44c;
				};
				{ jule::Slice<jule::Ptr<_1aab70795_Var>> &__jule_push_dest = (*(_6323_dest)); __jule_push_dest.push(jule::new_ptr<_1aab70795_Var>(_1aab70795_Var{._field_Scope=(*((*(_6342_f))))._field_Scope, ._field_Token=_6914_ident, ._field_Ident=(*(_6914_ident))._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Checked=false, ._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=_686_types[_697_i]}), ._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_RetOrder=_697_i, ._field_Depends=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr)})); };
			}
			_iter_next_1bd75d44c:;
			++it;
			_697_i++;
			goto _iter_begin_1bd75d44c;
		}
		_iter_end_1bd75d44c:;
	};
	if ((((*(*((*((*(_6342_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6323_dest)).len() == 1LL))) {
		(*((*(_6323_dest))[((*(_6323_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1aab4a6c6_appendParamVars(jule::Slice<jule::Ptr<_1aab70795_Var>>* _9325_dest, jule::Ptr<_1aaa3e2ce_FnIns>* _9344_f) {
	if (((*((*(_9344_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9344_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd762b27:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3d179_ParamIns> _9814_p = *it;
			{
				if ((_1aa0da6d3_IsIgnoreIdent((*((*(_9814_p))._field_Decl))._field_Ident) || _1aa0da99c_IsAnonIdent((*((*(_9814_p))._field_Decl))._field_Ident))) {
					goto _iter_next_1bd762b27;
				};
				jule::Ptr<_1aab70795_Var> _1037_v = jule::new_ptr<_1aab70795_Var>(_1aab70795_Var{._field_Scope=(*((*(_9344_f))))._field_Scope, ._field_Token=(*(*(_9814_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_9814_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_9814_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*((*(_9814_p))._field_Decl))._field_Reference, ._field_Checked=false, ._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr)}), ._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr)});;
				{
					
					if (_1aaa39d9b_IsSelf((*(_9814_p))._field_Decl)) {
						_case_begin_1bd766994:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9344_f))))._field_Owner, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)});
							(*_1037_v.alloc)._field_Reference=(!(_1aaa3a132_IsRef((*(_9814_p))._field_Decl)));
							if (_1aaa3a132_IsRef((*(_9814_p))._field_Decl)) {
								((*(_1037_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1037_v))._field_TypeSym.alloc)._field_Type))._field_Kind=jule::Trait(jule::new_ptr<_1aac0a6ed_Sptr>(_1aac0a6ed_Sptr{._field_Elem=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1037_v))._field_TypeSym))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_9814_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1bd766675:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aac0b1c1_Slc>(_1aac0b1c1_Slc{._field_Elem=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*((*_9814_p.alloc)._field_Type))._field_Kind})}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1bd76660e:;
						{
							(*(*(_1037_v))._field_TypeSym.alloc)._field_Type=(*_9814_p.alloc)._field_Type;
						}
					}
					_match_end_1bd7664dd:;
				};
				{ jule::Slice<jule::Ptr<_1aab70795_Var>> &__jule_push_dest = (*(_9325_dest)); __jule_push_dest.push(_1037_v); };
			}
			_iter_next_1bd762b27:;
			++it;
			goto _iter_begin_1bd762b27;
		}
		_iter_end_1bd762b27:;
	};
}



inline void _1aab4a9b2_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>* _15134_dest, jule::Ptr<_1aaa3e2ce_FnIns>* _15159_f) {
	jule::I32 _1526_size = (*((*(_15159_f))))._field_Generics.len();;
	if (((*((*((*(_15159_f))))._field_Decl))._field_Owner != nullptr)) {
		_1526_size+=(*(*((*((*(_15159_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1526_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15159_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd76deb8:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			jule::Ptr<_1aabeb4d0_InsGeneric> _16114_g = *it;
			{
				if ((_16114_g == nullptr)) {
					goto _iter_next_1bd76deb8;
				};
				jule::Ptr<_1aa10aa22_GenericDecl> _1657_decl = (*((*((*(_15159_f))))._field_Decl))._field_Generics[_1617_i];;
				{ jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> &__jule_push_dest = (*(_15134_dest)); __jule_push_dest.push(jule::new_ptr<_1aabec1a1_TypeAlias>(_1aabec1a1_TypeAlias{._field_Scope=(*(*((*(_15159_f))))._field_Decl.alloc)._field_Scope, ._field_Strict=false, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1657_decl.alloc)._field_Token, ._field_Ident=(*(_1657_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=(*(_16114_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1bd76deb8:;
			++it;
			_1617_i++;
			goto _iter_begin_1bd76deb8;
		}
		_iter_end_1bd76deb8:;
	};
	if (((*((*((*(_15159_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_1aa969605_StructIns> _1777_owner = (*((*(_15159_f))))._field_Owner;;
		{
			auto expr = &((*(_1777_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1bd770b13:;
			if (it != expr_end) {
				jule::I32 _1788_i = it - expr->begin();
				jule::Ptr<_1aabeb4d0_InsGeneric> _17815_g = *it;
				{
					jule::Ptr<_1aa10aa22_GenericDecl> _1798_decl = (*((*(_1777_owner))._field_Decl))._field_Generics[_1788_i];;
					{ jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>> &__jule_push_dest = (*(_15134_dest)); __jule_push_dest.push(jule::new_ptr<_1aabec1a1_TypeAlias>(_1aabec1a1_TypeAlias{._field_Scope=(*(*((*(_15159_f))))._field_Decl.alloc)._field_Scope, ._field_Strict=false, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1798_decl.alloc)._field_Token, ._field_Ident=(*(_1798_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=(*(_17815_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1bd770b13:;
				++it;
				_1788_i++;
				goto _iter_begin_1bd770b13;
			}
			_iter_end_1bd770b13:;
		};
	};
}



inline jule::Ptr<_1aaa42524_SymTab> _1aab4ad36_findFile(jule::Slice<jule::Ptr<_1aaa42524_SymTab>>* _19218_files, jule::Ptr<_1aa0dd8a1_Fileset>* _19237_handler) {
	{
		auto expr = _19218_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7712a6:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _19314_fl = *it;
			{
				if (((*(_19314_fl))._field_File == (*(_19237_handler)))) {
					return _19314_fl;;
				};
			}
			_iter_next_1bd7712a6:;
			++it;
			goto _iter_begin_1bd7712a6;
		}
		_iter_end_1bd7712a6:;
	};
	return nullptr;;
}



inline void _1aab4b1cc_pushSuggestion(_1ace263b7_Log* _20130_log, jule::Str _20148_fmt, jule::Slice<jule::Any> _20168_args) {
	(*(_20130_log))._field_Suggestion=_1ace26829_Logf(_20148_fmt, _20168_args);
}



inline void _1aab6d61c_pushImplemented(jule::Ptr<_1aaa46935_Trait> _277824_t, jule::Ptr<_1aa966767_Struct>* _277840_d) {
	_julec_label_1bd776960:;
	{
		
		if (((*(_277824_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1bd77770d:;
			{
				{
					auto expr = &((*_277824_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd77817b:;
					if (it != expr_end) {
						jule::Ptr<_1aa966767_Struct> _278210_s = *it;
						{
							if ((_278210_s == (*(_277840_d)))) {
								goto _match_end_1bd776bb3;
							};
						}
						_iter_next_1bd77817b:;
						++it;
						goto _iter_begin_1bd77817b;
					}
					_iter_end_1bd77817b:;
				};
				goto _case_begin_1bd776c6d;
			}
		}
		else {
			_case_begin_1bd776c6d:;
			{
				(*(_277824_t))._field_Implemented=jule::append((*_277824_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa966767_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_277840_d)); __jule_collection; }));
			}
		}
		_match_end_1bd776bb3:;
	};
	{
		auto expr = &((*(_277824_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd778544:;
		if (it != expr_end) {
			jule::Ptr<_1aac062ba_TypeSym> _279114_i = *it;
			{
				_1aab6d61c_pushImplemented(_1aac02a69_Trait((*(_279114_i))._field_Type.ptr()), _277840_d);
			}
			_iter_next_1bd778544:;
			++it;
			goto _iter_begin_1bd778544;
		}
		_iter_end_1bd778544:;
	};
}



inline void _1aab6d908_pushImplements(jule::Ptr<_1aa966767_Struct>* _279624_s, jule::Ptr<_1aaa46935_Trait> _279640_t) {
	_julec_label_1bd779039:;
	{
		
		if (((*((*(_279624_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1bd77a27c:;
			{
				{
					auto expr = &((*((*(_279624_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd77abea:;
					if (it != expr_end) {
						jule::Ptr<_1aaa46935_Trait> _280010_b = *it;
						{
							if ((_280010_b == _279640_t)) {
								goto _match_end_1bd779732;
							};
						}
						_iter_next_1bd77abea:;
						++it;
						goto _iter_begin_1bd77abea;
					}
					_iter_end_1bd77abea:;
				};
				goto _case_begin_1bd7797dc;
			}
		}
		else {
			_case_begin_1bd7797dc:;
			{
				{ jule::Slice<jule::Ptr<_1aaa46935_Trait>> &__jule_push_dest = (*((*(_279624_s))))._field_Implements; __jule_push_dest.push(_279640_t); };
			}
		}
		_match_end_1bd779732:;
	};
	{
		auto expr = &((*(_279640_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd77b0b3:;
		if (it != expr_end) {
			jule::Ptr<_1aac062ba_TypeSym> _280914_i = *it;
			{
				_1aab6d908_pushImplements(_279624_s, _1aac02a69_Trait((*(_280914_i))._field_Type.ptr()));
			}
			_iter_next_1bd77b0b3:;
			++it;
			goto _iter_begin_1bd77b0b3;
		}
		_iter_end_1bd77b0b3:;
	};
}



inline void _1aab6dd59_pushRuntimeToStr(jule::Ptr<_1aab4c62e_sema>* _281426_s, jule::Ptr<_1aabecdb6_Type>* _281441_t, jule::Ptr<_1aa0d7ceb_Token>* _281456_token, jule::Ptr<_1aab1cd80_ReferenceStack> _28156_refers) {
	if (((((*((*((*(_281426_s))))._field_meta))._field_runtime == nullptr) || _1aabee03d_IsNil((*(_281441_t)).ptr())) || (_28156_refers == nullptr))) {
		return;;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _28196_f = _1aaa3c72d_instanceForce(_1aa5ce776_runtimeFindFn(&((*((*((*(_281426_s))))._field_meta))._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_28196_f))._field_Generics=jule::append((*_28196_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1aabeb4d0_InsGeneric>(_1aabeb4d0_InsGeneric{._field_Type=(*(_281441_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1aabecdb6_Type>>(nullptr)}); __jule_collection; }));
	jule::Bool _28212_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aab6811c_checkGenericFn((*(_281426_s)), &(_28196_f), _281456_token);
		_28212_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_28212_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:2823:3"));;
	};
	_1aab1dbd8_Push(_28156_refers.ptr(), jule::Any(_28196_f, &__jule_any_type65));
}



inline jule::Bool _1aab6e123_isValidImpAlias(jule::Str _283024_alias) {
	jule::Bool __jule_func_result = false;
	if (_1aa0da6d3_IsIgnoreIdent(_283024_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (_1aa0db99d_IsKeyword(_283024_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::I32 _28376_r;
	jule::I32 _283713_size;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc4a0_DecodeRuneStr(_283024_alias);
		_28376_r = __jule_assign_result.__jule_result_arg0;
		_283713_size = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28376_r != '_') && (!(_1aa0db52a_IsLetter(_28376_r))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	for (;;) {
		{
			(_283024_alias).mut_slice(_283713_size);;
			if ((_283024_alias.len() == 0LL)) {
				goto _iter_end_1bd785c38;
			};
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1e0edc4a0_DecodeRuneStr(_283024_alias);
				_28376_r = __jule_assign_result.__jule_result_arg0;
				_283713_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_28376_r != '_') && (!((('0' <= _28376_r) && (_28376_r <= '9'))))) && (!(_1aa0db52a_IsLetter(_28376_r))))) {
				__jule_func_result = false;
				return __jule_func_result;;
			};
		}
	_iter_next_1bd785c38:;
	}
	_iter_end_1bd785c38:;;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aaba39a4_traitHasReferenceReceiver(jule::Ptr<_1aaa46935_Trait>* _1631_t) {
	{
		auto expr = &((*((*(_1631_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9ba049:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> *_179_f = it;
			{
				if ((*((*(_179_f))))._field_Statically) {
					goto _iter_next_1bd9ba049;
				};
				jule::Ptr<_1aaa3974c_Param> _233_p = (*((*(_179_f))))._field_Params[0LL];;
				if ((_1aaa3a132_IsRef(_233_p.ptr()) && _1aaa39d9b_IsSelf(_233_p))) {
					return true;;
				};
			}
			_iter_next_1bd9ba049:;
			++it;
			goto _iter_begin_1bd9ba049;
		}
		_iter_end_1bd9ba049:;
	};
	return false;;
}



inline jule::Bool _1aaba3d6c_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1aabb8db5_Data>* _3133_d) {
	jule::Str _322_value = _1a7917ed0_FmtFloat(_1aaa2543b_AsF64((*((*(_3133_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1aaab7a2d_CheckBitFloat(_322_value, _1aaab6587_BitSizeOf((*(_3121_kind))));;
}



inline jule::Bool _1aaba41e1_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1aabb8db5_Data>* _3630_d) {
	jule::F64 _372_min = _1aaabcb76_Min(_3618_kind);;
	jule::F64 _382_max = _1aaabce0c_Max(_3618_kind);;
	{
		
		if (_1aaa27284_IsF64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1bd9bdab9:;
			{
				jule::F64 _413_x = _1aaa24b88_ReadF64((*((*(_3630_d))))._field_Constant);;
				jule::F64 _423_i;
				jule::F64 _426_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a78ddadd_Modf(_413_x);
					_423_i = __jule_assign_result.__jule_result_arg0;
					_426_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_426_frac != 0LL)) {
					return false;;
				};
				return ((_423_i >= _372_min) && (_423_i <= _382_max));;
			}
		}
		else if (_1aaa269d1_IsU64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1bd9bdb30:;
			{
				jule::F64 _483_x = _1aaa2543b_AsF64((*((*(_3630_d))))._field_Constant);;
				if ((_483_x <= _382_max)) {
					return true;;
				};
			}
		}
		else if (_1aaa2674a_IsI64((*((*(_3630_d))))._field_Constant)) {
			_case_begin_1bd9bdba7:;
			{
				jule::F64 _533_x = _1aaa2543b_AsF64((*((*(_3630_d))))._field_Constant);;
				return ((_372_min <= _533_x) && (_533_x <= _382_max));;
			}
		}
		_match_end_1bd9bd998:;
	};
	return false;;
}



inline jule::Bool _1aaba45a9_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1aabb8db5_Data>* _5932_d) {
	jule::F64 _602_max = _1aaabce0c_Max(_5920_kind);;
	if (((*((*(_5932_d))))._field_IsRune && (_5920_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1aaba0671_IsAscii(static_cast<jule::I32>(_1aaa2414e_ReadI64((*((*(_5932_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1aaa27284_IsF64((*((*(_5932_d))))._field_Constant.ptr())) {
			_case_begin_1bd9c4806:;
			{
				jule::F64 _673_x = _1aaa24b88_ReadF64((*((*(_5932_d))))._field_Constant);;
				if ((_673_x < 0LL)) {
					return false;;
				};
				jule::F64 _713_i;
				jule::F64 _716_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1a78ddadd_Modf(_673_x);
					_713_i = __jule_assign_result.__jule_result_arg0;
					_716_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_716_frac != 0LL)) {
					return false;;
				};
				return (_713_i <= _602_max);;
			}
		}
		else if (_1aaa269d1_IsU64((*((*(_5932_d))))._field_Constant.ptr())) {
			_case_begin_1bd9c486c:;
			{
				jule::F64 _773_x = _1aaa2543b_AsF64((*((*(_5932_d))))._field_Constant);;
				if ((_773_x <= _602_max)) {
					return true;;
				};
			}
		}
		else if (_1aaa2674a_IsI64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1bd9c48d3:;
			{
				jule::F64 _823_x = _1aaa2543b_AsF64((*((*(_5932_d))))._field_Constant);;
				return ((0LL <= _823_x) && (_823_x <= _602_max));;
			}
		}
		_match_end_1bd9c385a:;
	};
	return false;;
}



inline jule::Bool _1aaba492d_intAssignable(jule::Str _8818_kind, jule::Ptr<_1aabb8db5_Data>* _8830_d) {
	{
		
		if (_1aaabe02e_IsSigInt(_8818_kind)) {
			_case_begin_1bd9c9432:;
			{
				return _1aaba41e1_sigAssignable(_8818_kind, _8830_d);;
			}
		}
		else if (_1aaabe33c_IsUnsigInt(_8818_kind)) {
			_case_begin_1bd9c94a9:;
			{
				return _1aaba45a9_unsigAssignable(_8818_kind, _8830_d);;
			}
		}
		else {
			_case_begin_1bd9c8e9d:;
			{
				return false;;
			}
		}
		_match_end_1bd9c8dc1:;
	};
}



inline void _1aabb0e23_checkMutRiskOfStructLit(jule::Ptr<_1aab4c62e_sema>* _94533_s, jule::Ptr<_1aaa2ed80_StructLitExpr>* _94544_m) {
	{
		auto expr = &((*((*(_94544_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd9ca5a9:;
		if (it != expr_end) {
			jule::Ptr<_1aaa2e9d9_StructArgExpr> *_9469_arg = it;
			{
				if ((*((*((*((*(_9469_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1bd9ca5a9;
				};
				if (((!((*((*((*(_9469_arg))))._field_Expr))._field_Mutable)) && _1aac00209_Mutable((*(*((*(_9469_arg))))._field_Expr.alloc)._field_Type.ptr()))) {
					_1aab50533_pushErr((*(_94533_s)).ptr(), (*(*(_9469_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*((*(_9469_arg))))._field_Expr))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1bd9ca5a9:;
			++it;
			goto _iter_begin_1bd9ca5a9;
		}
		_iter_end_1bd9ca5a9:;
	};
}



inline jule::Ptr<_1aabecdb6_Type> _1aabb7127_lenKind(void) {
	return _1aac77acd_primInt;;
}



inline jule::Bool _1aabb7479_isGoodValueToInfer(jule::Ptr<_1aabb8db5_Data>* _144124_d) {
	return (!(_1aabb92d3_IsNil((*(_144124_d)).ptr())));;
}



inline jule::Ptr<_1aa0ecc34_Directive> _1aabe463d_findDirective(jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>* _442123_directives, jule::Str _442154_d) {
	{
		auto expr = _442123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdb2ea60:;
		if (it != expr_end) {
			jule::Ptr<_1aa0ecc34_Directive> _442214_dr = *it;
			{
				if (((*((*(_442214_dr))._field_Tag))._field_Kind == _442154_d)) {
					return _442214_dr;;
				};
			}
			_iter_next_1bdb2ea60:;
			++it;
			goto _iter_begin_1bdb2ea60;
		}
		_iter_end_1bdb2ea60:;
	};
	return nullptr;;
}



inline jule::Any _1aabe4a06_findBuiltinsImport(jule::Str* _443024_ident, jule::Ptr<_1aab2ee08_ImportInfo> _443036_imp) {
	return _1aac7ae22_findPackageBuiltinDef(&((*(_443036_imp))._field_LinkPath), _443024_ident);;
}



inline void _1aabe4c37_fitBitsize(jule::Ptr<_1aabb8db5_Data>* _443920_d) {
	jule::Ptr<_1aac06bc2_Prim> _44406_prim = _1aac00ec9_Prim((*((*(_443920_d))))._field_Type.ptr());;
	jule::I32 _44412_z = _1aaab6587_BitSizeOf(_1aac07046_Str(_44406_prim.ptr()));;
	{
		
		if (_1aaa2674a_IsI64((*((*(_443920_d))))._field_Constant.ptr())) {
			_case_begin_1bdb322b0:;
			{
				jule::I32 _44443_k = _1aaab80b1_BitSizeOfInt(_1aaa2414e_ReadI64((*((*(_443920_d))))._field_Constant));;
				if (((_44443_k > _44412_z) || _1aaabe33c_IsUnsigInt((*_44406_prim.alloc)._field_Kind))) {
					(*(*((*(_443920_d))))._field_Constant.alloc)._field_Kind=_1aaab68c8_IntFromBits(_44443_k);
					(*((*(_443920_d))))._field_Type=(*((*(_1aac79e32_findBuiltinTypeAlias((*(*((*(_443920_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1aaa269d1_IsU64((*((*(_443920_d))))._field_Constant.ptr())) {
			_case_begin_1bdb32326:;
			{
				jule::I32 _44503_k = _1aaab837a_BitSizeOfUint(_1aaa243d5_ReadU64((*((*(_443920_d))))._field_Constant));;
				if (((_44503_k > _44412_z) || _1aaabe02e_IsSigInt((*_44406_prim.alloc)._field_Kind))) {
					(*(*((*(_443920_d))))._field_Constant.alloc)._field_Kind=_1aaab6b5e_UintFromBits(_44503_k);
					(*((*(_443920_d))))._field_Type=(*((*(_1aac79e32_findBuiltinTypeAlias((*(*((*(_443920_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1aaa27284_IsF64((*((*(_443920_d))))._field_Constant)) {
			_case_begin_1bdb3239d:;
			{
				if ((_44412_z == 64LLU)) {
					return;;
				};
				jule::I32 _44603_k = _1aaab7ce7_BitSizeOfFloat(_1aaa24b88_ReadF64((*((*(_443920_d))))._field_Constant));;
				if ((_44603_k > _44412_z)) {
					(*(*((*(_443920_d))))._field_Constant.alloc)._field_Kind=_1aaab6e28_FloatFromBits(_44603_k);
					(*((*(_443920_d))))._field_Type=(*((*(_1aac79e32_findBuiltinTypeAlias((*(*((*(_443920_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		_match_end_1bdb3216c:;
	};
}



inline void _1aabe5067_makeStructLitAlloc(jule::Ptr<_1aabb8db5_Data>* _446828_d, jule::Ptr<_1aaa2ed80_StructLitExpr>* _446843_lit) {
	(*((*(_446828_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aac0a6ed_Sptr>(_1aac0a6ed_Sptr{._field_Elem=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_446843_lit))))._field_Strct, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)});
	(*((*(_446828_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa3017c_AllocStructLitExpr>(_1aaa3017c_AllocStructLitExpr{._field_Lit=(*(_446843_lit))}), &__jule_any_type114);
}



inline jule::Ptr<_1aab70795_Var> _1aabe53db_buildErrorVar(jule::Ptr<_1aaaec832_Scope>* _447923_s, jule::Ptr<_1aa106875_FnCallExpr>* _447939_fc) {
	return jule::new_ptr<_1aab70795_Var>(_1aab70795_Var{._field_Scope=(*(_447923_s)), ._field_Token=(*((*(_447939_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_Checked=false, ._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_TypeSym, ._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr)});;
}



inline jule::Any _1aabe5760_findBuiltinsSema(jule::Str* _449422_ident, jule::Ptr<_1aab4c62e_sema> _449438_s) {
	jule::Str _44966_ppath = _1aa0de52d_Dir((*((*(_449438_s))._field_file))._field_File.ptr());;
	if (_1bb08556d_HasPrefix(_44966_ppath, _1bb095209_PathStdlib)) {
		(_44966_ppath).mut_slice(_1bb095209_PathStdlib.len());;
		_44966_ppath=(jule::Str::lit("std", 3) + _1bb08b6b7_ReplaceAll(_44966_ppath, jule::Str::lit("/", 1), jule::Str::lit("/", 1)));
		return _1aac7ae22_findPackageBuiltinDef(&(_44966_ppath), _449422_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1aabe5a29_isOkForShifting(jule::Ptr<_1aabb8db5_Data>* _450925_d) {
	if (_1aabb9800_IsConst((*(_450925_d)).ptr())) {
		{
			
			if (_1aaa2674a_IsI64((*((*(_450925_d))))._field_Constant.ptr())) {
				_case_begin_1bdb42e80:;
				{
					return (_1aaa2414e_ReadI64((*((*(_450925_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1aaa269d1_IsU64((*((*(_450925_d))))._field_Constant.ptr())) {
				_case_begin_1bdb41b1b:;
				{
					return true;;
				}
			}
			else if (_1aaa27284_IsF64((*((*(_450925_d))))._field_Constant)) {
				_case_begin_1bdb42ee6:;
				{
					return (_1aaa24b88_ReadF64((*((*(_450925_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1bdb41a72:;
				{
					return false;;
				}
			}
			_match_end_1bdb41995:;
		};
	};
	jule::Ptr<_1aac06bc2_Prim> _45222_prim = _1aac00ec9_Prim((*((*(_450925_d))))._field_Type.ptr());;
	return ((_45222_prim != nullptr) && _1aaabe606_IsInt(_1aac07046_Str(_45222_prim.ptr())));;
}



inline jule::Bool _1aabe5e03_isInstancedStruct(jule::Ptr<_1aa969605_StructIns> _452622_s) {
	return ((*((*(_452622_s))._field_Decl))._field_Generics.len() == (*_452622_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1aabe6200_isPtrArithmeticCompatible(jule::Ptr<_1aabb8db5_Data>* _453035_l, jule::Ptr<_1aabb8db5_Data>* _453050_r) {
	jule::Ptr<_1aac0deb5_Ptr> _45312_ptr = _1aac014e6_Ptr((*((*(_453050_r))))._field_Type.ptr());;
	if ((_45312_ptr != nullptr)) {
		return _1aabed603_Equal((*(_1aac014e6_Ptr((*((*(_453035_l))))._field_Type)))._field_Elem, (*_45312_ptr.alloc)._field_Elem);;
	};
	if ((_1aabb9800_IsConst((*(_453050_r)).ptr()) && (*((*(_453050_r))))._field_untyped)) {
		return (_1aaba492d_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _453050_r) || _1aaba492d_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _453050_r));;
	};
	_1aaba4e17_typeCompatibilityChecker _45406_tcc = _1aaba4e17_typeCompatibilityChecker{._field_s=jule::Ptr<_1aab4c62e_sema>(nullptr), ._field_dest=_1aac77acd_primInt, ._field_src=(*((*(_453050_r))))._field_Type, ._field_errorToken=jule::Ptr<_1aa0d7ceb_Token>(nullptr)};;
	if (_1aaba6611_check(&_45406_tcc)) {
		return true;;
	};
	_45406_tcc._field_dest=_1aac77715_primUint;
	return _1aaba6611_check(&_45406_tcc);;
}



inline void _1aabe670b_applyRuntimeToStr(jule::Ptr<_1aab4c62e_sema>* _455127_s, jule::Ptr<_1aabecdb6_Type>* _455142_from, jule::Ptr<_1aabecdb6_Type>* _455160_to, jule::Ptr<_1aa0d7ceb_Token>* _45527_token, jule::Ptr<_1aab1cd80_ReferenceStack> _455233_refers) {
	jule::Ptr<_1aac06bc2_Prim> _45532_prim = _1aac00ec9_Prim((*(_455160_to)).ptr());;
	if ((_45532_prim != nullptr)) {
		if (_1aac0a423_IsAny(_45532_prim)) {
			_1aab6dd59_pushRuntimeToStr(_455127_s, _455142_from, _45527_token, _455233_refers);
		};
		return;;
	};
	if ((_1aac01a13_TypeEnum((*(_455160_to)).ptr()) != nullptr)) {
		_1aab6dd59_pushRuntimeToStr(_455127_s, _455142_from, _45527_token, _455233_refers);
		return;;
	};
}



inline void _1aabe6c17_applyCastKindModel(jule::Ptr<_1aab4c62e_sema>* _456628_s, jule::Ptr<_1aabb8db5_Data>* _456643_d, jule::Ptr<_1aabecdb6_Type>* _456658_t, jule::Ptr<_1aa0d7ceb_Token>* _45677_token, jule::Ptr<_1aab1cd80_ReferenceStack> _456733_refers) {
	_1aabe670b_applyRuntimeToStr(_456628_s, &((*((*(_456643_d))))._field_Type), _456658_t, _45677_token, _456733_refers);
	(*((*(_456643_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa30633_CastingExpr>(_1aaa30633_CastingExpr{._field_Token=(*(_45677_token)), ._field_Expr=jule::new_ptr<_1aabb8db5_Data>((*((*(_456643_d))))), ._field_Type=(*(_456658_t))}), &__jule_any_type94);
}



inline void _1aabe7223_applyCastKind(jule::Ptr<_1aab4c62e_sema>* _457623_s, jule::Ptr<_1aabb8db5_Data>* _457638_d, jule::Ptr<_1aabecdb6_Type>* _457653_t, jule::Ptr<_1aa0d7ceb_Token>* _45777_token, jule::Ptr<_1aab1cd80_ReferenceStack> _457733_refers) {
	_1aabe6c17_applyCastKindModel(_457623_s, _457638_d, _457653_t, _45777_token, _457733_refers);
	(*((*(_457638_d))))._field_Type=(*(_457653_t));
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe7432_buildVoidData(void) {
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac76846_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Str _1aabe791b_checkDataForIntegerIndexing(jule::Ptr<_1aab4c62e_sema>* _458837_s, jule::Ptr<_1aabb8db5_Data>* _458852_d, jule::Ptr<_1aa0d7ceb_Token>* _45897_token, jule::Ptr<_1aab1cd80_ReferenceStack> _458933_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_458852_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1aac00ec9_Prim((*((*(_458852_d))))._field_Type.ptr()) == nullptr)) {
			_case_begin_1bdb52863:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1aaabe606_IsInt(_1aac07046_Str(_1aac00ec9_Prim((*((*(_458852_d))))._field_Type.ptr()).ptr()))))) {
			_case_begin_1bdb528c9:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1aabb9800_IsConst((*(_458852_d)).ptr())) {
			_case_begin_1bdb52940:;
			{
				if ((_1aaa2543b_AsF64((*((*(_458852_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1aac00ec9_Prim((*((*(_458852_d))))._field_Type) == nullptr) || _1aabb9800_IsConst((*(_458852_d)).ptr()) || (_1aaab62bd_RealKindOf(_1aac07046_Str(_1aac00ec9_Prim((*((*(_458852_d))))._field_Type).ptr())) != _1aaab62bd_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1bdb529a6:;
			{
				_1aabe7223_applyCastKind(_458837_s, _458852_d, &(_1aac77acd_primInt), _45897_token, _458933_refers);
			}
		}
		_match_end_1bdb52434:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1aabe7e27_applyCastModelByEnum(jule::Ptr<_1aab4c62e_sema>* _461430_s, jule::Ptr<_1aabb8db5_Data>* _461445_d, jule::Ptr<_1aaa490db_Enum> _461459_e, jule::Ptr<_1aa0d7ceb_Token>* _46157_token, jule::Ptr<_1aab1cd80_ReferenceStack> _461533_refers) {
	if ((_461459_e == nullptr)) {
		return;;
	};
	_1aabe6c17_applyCastKindModel(_461430_s, _461445_d, &((*((*(_461459_e))._field_TypeSym))._field_Type), _46157_token, _461533_refers);
}



inline void _1aabe8444_castConstByType(jule::Str* _462221_t, jule::Ptr<_1aabb8db5_Data>* _462234_d) {
	{
		
		if (_1aaabe02e_IsSigInt((*(_462221_t)))) {
			_case_begin_1bdb5e573:;
			{
				{
					auto _match_expr{ _1aaab6587_BitSizeOf(_1aaab62bd_RealKindOf((*(_462221_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bdb60145:;
						{
							_1aaa256e4_SetI64((*((*(_462234_d))))._field_Constant.ptr(), _1aaa24e1e_AsI64((*((*(_462234_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bdb601cd:;
						{
							_1aaa256e4_SetI64((*((*(_462234_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1aaa24e1e_AsI64((*((*(_462234_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bdb60244:;
						{
							_1aaa256e4_SetI64((*((*(_462234_d))))._field_Constant, static_cast<jule::I64>(static_cast<jule::I16>(_1aaa24e1e_AsI64((*((*(_462234_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bdb602aa:;
						{
							_1aaa256e4_SetI64((*((*(_462234_d))))._field_Constant, static_cast<jule::I64>(static_cast<jule::I8>(_1aaa24e1e_AsI64((*((*(_462234_d))))._field_Constant))));
						}
					}
					_match_end_1bdb600ce:;
				};
			}
		}
		else if (_1aaabe33c_IsUnsigInt((*(_462221_t)))) {
			_case_begin_1bdb5e61c:;
			{
				{
					auto _match_expr{ _1aaab6587_BitSizeOf(_1aaab62bd_RealKindOf((*(_462221_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bdb64226:;
						{
							_1aaa2599c_SetU64((*((*(_462234_d))))._field_Constant.ptr(), _1aaa251a5_AsU64((*((*(_462234_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bdb6429d:;
						{
							_1aaa2599c_SetU64((*((*(_462234_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1aaa251a5_AsU64((*((*(_462234_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1bdb64314:;
						{
							_1aaa2599c_SetU64((*((*(_462234_d))))._field_Constant, static_cast<jule::U64>(static_cast<jule::U16>(_1aaa251a5_AsU64((*((*(_462234_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1bdb6437a:;
						{
							_1aaa2599c_SetU64((*((*(_462234_d))))._field_Constant, static_cast<jule::U64>(static_cast<jule::U8>(_1aaa251a5_AsU64((*((*(_462234_d))))._field_Constant))));
						}
					}
					_match_end_1bdb641b0:;
				};
			}
		}
		else if (_1aaabe947_IsFloat((*(_462221_t)))) {
			_case_begin_1bdb5e683:;
			{
				{
					auto _match_expr{ _1aaab6587_BitSizeOf(_1aaab62bd_RealKindOf((*(_462221_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1bdb6736c:;
						{
							_1aaa262b6_SetF64((*((*(_462234_d))))._field_Constant, _1aaa2543b_AsF64((*((*(_462234_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1bdb68318:;
						{
							_1aaa262b6_SetF64((*((*(_462234_d))))._field_Constant, static_cast<jule::F64>(static_cast<jule::F32>(_1aaa2543b_AsF64((*((*(_462234_d))))._field_Constant))));
						}
					}
					_match_end_1bdb64930:;
				};
			}
		}
		_match_end_1bdb5e40d:;
	};
}



inline void _1aabe8620_updateModelToGenericIns(jule::Any* _465633_m, jule::Ptr<_1aaa3e2ce_FnIns>* _465647_f) {
	{
		auto &_match_expr{ (*(_465633_m)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1bdb6878b:;
			{
				(*(_465633_m))=jule::Any((*(_465647_f)), &__jule_any_type65);
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bdb60761:;
			{
				(*((*(_465633_m)).cast_ptr<_1aaa33a76_StructSubIdentExpr>(&__jule_any_type99)))._field_Method=(*(_465647_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1bdb68802:;
			{
				(*((*(_465633_m)).cast_ptr<_1aaa33e1c_StructStaticIdentExpr>(&__jule_any_type97)))._field_Method=(*(_465647_f));
			}
		}
		_match_end_1bdb6084e:;
	};
}



inline jule::Bool _1aabe8994_pushSubIdentFromExpr(jule::Any _466729_expr, jule::Ptr<_1aa0ee1db_SubIdentTypeDecl>* _466755_t) {
	{
		auto &_match_expr{ _466729_expr };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1bdb71684:;
			{
				jule::Ptr<_1aa104466_IdentExpr> _46707_e = _466729_expr.unsafe_cast_ptr<_1aa104466_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1aa0ede22_IdentTypeDecl>> &__jule_push_dest = (*((*(_466755_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1aa0ede22_IdentTypeDecl>(_1aa0ede22_IdentTypeDecl{._field_Token=(*(_46707_e))._field_Token, ._field_Ident=(*_46707_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1bdb6d53d:;
			{
				jule::Ptr<_1aa105c5e_SubIdentExpr> _46767_e = _466729_expr.unsafe_cast_ptr<_1aa105c5e_SubIdentExpr>();;
				if ((!(_1aabe8994_pushSubIdentFromExpr((*((*(_46767_e))._field_Expr))._field_Kind, _466755_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1aa0ede22_IdentTypeDecl>> &__jule_push_dest = (*((*(_466755_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1aa0ede22_IdentTypeDecl>(_1aa0ede22_IdentTypeDecl{._field_Token=(*(_46767_e))._field_Ident, ._field_Ident=(*((*_46767_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1aa0ed817_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1bdb715da:;
			{
				return false;;
			}
		}
		_match_end_1bdb71574:;
	};
	return true;;
}



inline jule::Str _1aabe8c5d_constoa(jule::Ptr<_1aa9b96cc_Const>* _469013_c) {
	{
		
		if (_1aaa2674a_IsI64((*(_469013_c)).ptr())) {
			_case_begin_1bdb6e83b:;
			{
				return _1a792e799_FmtInt(_1aaa2414e_ReadI64((*(_469013_c)).ptr()), 10LL);;
			}
		}
		else if (_1aaa269d1_IsU64((*(_469013_c)).ptr())) {
			_case_begin_1bdb73b1a:;
			{
				return _1a792e3d1_FmtUint(_1aaa243d5_ReadU64((*(_469013_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1bdb74247:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bdb7417b:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aabe9302_evalEnumStatic(jule::Ptr<_1aab4c62e_sema>* _470124_s, jule::Ptr<_1aaa490db_Enum>* _470139_enm, jule::Ptr<_1aaa48580_EnumItem>* _470156_item, jule::Ptr<_1aa0d7ceb_Token>* _47027_token, jule::Ptr<_1aab1cd80_ReferenceStack> _470233_refers) {
	jule::Ptr<_1aabb8db5_Data> _47036_d = jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_470139_enm)), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
	if (((*(_470156_item)) != nullptr)) {
		(*(_47036_d))._field_Constant=jule::new_ptr<_1aa9b96cc_Const>((*(*((*((*((*(_470156_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_47036_d.alloc)._field_Model=jule::Any((*_47036_d.alloc)._field_Constant, &__jule_any_type15);
		_1aabe7e27_applyCastModelByEnum(_470124_s, &(_47036_d), (*(_470139_enm)), _47027_token, _470233_refers);
	};
	return _47036_d;;
}



inline jule::Ptr<_1aaa2ed80_StructLitExpr> _1aabe95bb_isLitBased(jule::Any* _471920_m) {
	{
		auto &_match_expr{ (*(_471920_m)) };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1bdb79967:;
			{
				return (*(_471920_m)).cast_ptr<_1aaa2ed80_StructLitExpr>(&__jule_any_type96);;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1bdb79d74:;
			{
				return (*((*(_471920_m)).cast_ptr<_1aaa3017c_AllocStructLitExpr>(&__jule_any_type114)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bdb79dda:;
			{
				jule::Ptr<_1aaa33a76_StructSubIdentExpr> _47267_ssi = (*(_471920_m)).cast_ptr<_1aaa33a76_StructSubIdentExpr>(&__jule_any_type99);;
				return _1aabe95bb_isLitBased(&((*((*(_47267_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bdb79e51:;
			{
				jule::Ptr<_1aaa30633_CastingExpr> _47297_c = (*(_471920_m)).cast_ptr<_1aaa30633_CastingExpr>(&__jule_any_type94);;
				return _1aabe95bb_isLitBased(&((*((*(_47297_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1bdb79901:;
			{
				return nullptr;;
			}
		}
		_match_end_1bdb7988a:;
	};
}



inline void _1aabe98a7_makeImplicitDeref(jule::Ptr<_1aabb8db5_Data>* _473627_d, jule::Ptr<_1aa0d7ceb_Token> _473641_baseToken) {
	jule::Ptr<_1aaa2e4ab_UnaryExpr> _47376_unary = jule::new_ptr<_1aaa2e4ab_UnaryExpr>(_1aaa2e4ab_UnaryExpr{._field_Expr=jule::new_ptr<_1aabb8db5_Data>((*((*(_473627_d))))), ._field_Op=jule::new_ptr<_1aa0d7ceb_Token>((*(_473641_baseToken)))});;
	(*((*(_47376_unary))._field_Op))._field_Id=static_cast<jule::U32>(62LLU);
	(*(*(_47376_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_473627_d))))._field_Model=jule::Any(_47376_unary, &__jule_any_type112);
}



inline void _1bdc946b9_updateRefer(jule::Ptr<_1aab1cd80_ReferenceStack> _474723_ref, jule::Ptr<_1aaa3e2ce_FnIns>* _474746_old, jule::Ptr<_1aaa3e2ce_FnIns>* _474759_new) {
	{
		auto expr = &((*(_474723_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bdc96006:;
		if (it != expr_end) {
			jule::I32 _47486_i = it - expr->begin();
			jule::Any _47489_sym = *it;
			{
				if ((jule::Any((*(_474746_old)), &__jule_any_type65) == _47489_sym)) {
					(*(_474723_ref))._field_buffer[_47486_i]=jule::Any((*(_474759_new)), &__jule_any_type65);
				};
			}
			_iter_next_1bdc96006:;
			++it;
			_47486_i++;
			goto _iter_begin_1bdc96006;
		}
		_iter_end_1bdc96006:;
	};
}



inline void _1aabea039_makeVariadic(jule::Ptr<_1aabb8db5_Data>* _475522_d, jule::Ptr<_1aabecdb6_Type> _475536_elem) {
	(*((*(_475522_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=(*(_475536_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_475536_elem.alloc)._field_Kind});
}



inline jule::Bool _1aabea468_isVarCaptured(jule::Ptr<_1aab05032_scopeChecker> _476818_r, jule::Ptr<_1aab05032_scopeChecker> _476840_s, jule::Ptr<_1aab70795_Var> _476858_v) {
	if (((*(_476858_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_476840_s))._field_scope == (*(_476858_v))._field_Scope)) {
				return false;;
			};
			if ((((*(_476840_s))._field_parent == nullptr) || (_476840_s == _476818_r))) {
				goto _iter_end_1bdb8380b;
			};
			_476840_s=(*(_476840_s))._field_parent;
		}
	_iter_next_1bdb8380b:;
	}
	_iter_end_1bdb8380b:;;
	return true;;
}



inline jule::Ptr<_1aab2ee08_ImportInfo> _1aabea7dc_findNamespace(jule::Trait _478522_lookup, jule::Str _478538_namespace) {
	return ((_1aac23ae0_LookupMptrData*)_478522_lookup.safe_type())->_1aac21dc9_SelectPackage(_478522_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1aab2ee08_ImportInfo>>((void*)__jule_anon_1bdb856cb, jule::Ptr<__jule_anon_1bdb856cb_ctx>::make(__jule_anon_1bdb856cb_ctx{._478538_namespace=_478538_namespace}).as<jule::Uintptr>(), __jule_anon_1bdb856cb_ctx_handler));;
}



inline jule::Bool _1aac1eab9_kindUsesGenerics(jule::Ptr<_1aabecdb6_Type>* _178826_k, jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>* _178837_generics) {
	{
		auto expr = _178837_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab50b76d:;
		if (it != expr_end) {
			jule::Ptr<_1aa10aa22_GenericDecl> *_17899_g = it;
			{
				if (static__1aac1e6bd_exist(&((*((*(_17899_g))))._field_Ident), _178826_k)) {
					return true;;
				};
			}
			_iter_next_1ab50b76d:;
			++it;
			goto _iter_begin_1ab50b76d;
		}
		_iter_end_1ab50b76d:;
	};
	return false;;
}



inline jule::Bool _1aac1ee82_hasDirective(jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>* _179822_directives, jule::Str _179853_tag) {
	{
		auto expr = _179822_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab50bd34:;
		if (it != expr_end) {
			jule::Ptr<_1aa0ecc34_Directive> _179914_dr = *it;
			{
				if (((*((*(_179914_dr))._field_Tag))._field_Kind == _179853_tag)) {
					return true;;
				};
			}
			_iter_next_1ab50bd34:;
			++it;
			goto _iter_begin_1ab50bd34;
		}
		_iter_end_1ab50bd34:;
	};
	return false;;
}



inline jule::Bool _1aac2024b_canGetPtr(jule::Ptr<_1aabb8db5_Data>* _180719_d) {
	return (*((*(_180719_d))))._field_Lvalue;;
}



inline jule::Bool _1aac2058c_isBuiltinStrConvertable(jule::Ptr<_1aabecdb6_Type>* _181033_t) {
	return ((((!(_1aabee2c4_Void((*(_181033_t)).ptr()))) && (_1aac022b6_Fn((*(_181033_t)).ptr()) == nullptr)) && (_1aac03086_Tup((*(_181033_t)).ptr()) == nullptr)) && (!(_1aac0331c_comptime((*(_181033_t)).ptr()))));;
}



inline jule::Ptr<_1aac06bc2_Prim> _1aac20823_buildPrimType(jule::Str _181418_kind) {
	return jule::new_ptr<_1aac06bc2_Prim>(_1aac06bc2_Prim{._field_Kind=_181418_kind});;
}



inline void _1aac210e8_applyImplicitCast(jule::Ptr<_1aab4c62e_sema>* _184227_s, jule::Ptr<_1aabecdb6_Type>* _184242_dest, jule::Ptr<_1aabb8db5_Data>* _184260_d, jule::Ptr<_1aa0d7ceb_Token>* _18437_token, jule::Ptr<_1aab1cd80_ReferenceStack> _184333_refers) {
	if (_1aabee03d_IsNil((*((*(_184260_d))))._field_Type.ptr())) {
		return;;
	};
	jule::Ptr<_1aac06bc2_Prim> _18472_destPrim = _1aac00ec9_Prim((*(_184242_dest)).ptr());;
	if (((_18472_destPrim != nullptr) && _1aac0a423_IsAny(_18472_destPrim))) {
		jule::Ptr<_1aac06bc2_Prim> _18493_prim = _1aac00ec9_Prim((*((*(_184260_d))))._field_Type.ptr());;
		if (((_18493_prim == nullptr) || (!(_1aac0a423_IsAny(_18493_prim.ptr()))))) {
			_1aabe7223_applyCastKind(_184227_s, _184260_d, _184242_dest, _18437_token, _184333_refers);
		};
		return;;
	};
	jule::Ptr<_1aaa46935_Trait> _18562_dt = _1aac02a69_Trait((*(_184242_dest)).ptr());;
	if ((_18562_dt != nullptr)) {
		jule::Ptr<_1aaa46935_Trait> _18583_bt = _1aac02a69_Trait((*((*(_184260_d))))._field_Type.ptr());;
		if (((_18583_bt == nullptr) || (_18583_bt != _18562_dt))) {
			_1aabe6c17_applyCastKindModel(_184227_s, _184260_d, _184242_dest, _18437_token, _184333_refers);
			return;;
		};
	};
	if (((_1aac01a13_TypeEnum((*(_184242_dest)).ptr()) != nullptr) && (_1aac01a13_TypeEnum((*((*(_184260_d))))._field_Type.ptr()) == nullptr))) {
		_1aabe6c17_applyCastKindModel(_184227_s, _184260_d, _184242_dest, _18437_token, _184333_refers);
		return;;
	};
}



inline jule::Bool _1aac214c2_validTypeForXof(jule::Ptr<_1aabecdb6_Type>* _187225_t) {
	return ((((!(_1aabee2c4_Void((*(_187225_t)).ptr()))) && (_1aac022b6_Fn((*(_187225_t)).ptr()) == nullptr)) && (_1aac03086_Tup((*(_187225_t)).ptr()) == nullptr)) && (!(_1aac0331c_comptime((*(_187225_t)).ptr()))));;
}



inline jule::Ptr<_1aa969605_StructIns> _1aac217be_initNewStructType(jule::Str _187822_ident, jule::Ptr<_1aabecdb6_Type> _187838_source) {
	jule::Ptr<_1aa966767_Struct> _18796_s = jule::new_ptr<_1aa966767_Struct>(_1aa966767_Struct{._field_sema=jule::Ptr<_1aab4c62e_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1aa966767_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1aa966767_Struct>>(nullptr), ._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1aa965447_Field>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1aaa3b221_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>(nullptr), ._field_Implements=jule::Slice<jule::Ptr<_1aaa46935_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1aa969605_StructIns>>(nullptr)});;
	(*_18796_s.alloc)._field_Ident=_187822_ident;
	jule::Ptr<_1aa969605_StructIns> _18816_ins = _1aa966b85_instance(_18796_s);;
	_1aa966ec6_appendInstance(_18796_s, &(_18816_ins));
	(*(_18816_ins))._field_Source=_187838_source;
	(*_18816_ins.alloc)._field_Comparable=_1aabeee73_Comparable(_187838_source.ptr());
	(*_18816_ins.alloc)._field_Mutable=_1aac00209_Mutable(_187838_source);
	return _18816_ins;;
}



inline __jule_tuple_x_1aaa42524_SymTab__jule_tuple_s_1ace263b7_Log _1aac247c2_buildSymbols(jule::Ptr<_1aa0eb8ae_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1aab23d86_symBuilder> _1667_owner) {
	__jule_tuple_x_1aaa42524_SymTab__jule_tuple_s_1ace263b7_Log __jule_func_result;
	jule::Ptr<_1aab23d86_symBuilder> _176_sb = jule::new_ptr<_1aab23d86_symBuilder>(_1aab23d86_symBuilder{._field_owner=_1667_owner, ._field_importer=(*(_1643_importer)), ._field_errors=jule::Slice<_1ace263b7_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1aaa42524_SymTab>(nullptr)});;
	_1aab29c27_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1aac24b02_collectImplicitImports(jule::Ptr<_1aab4c62e_sema>* _3132_s, jule::Ptr<_1aaa42524_SymTab>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be164748:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1aab2a0e0_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1be164748;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std/runtime", 11)) {
						_case_begin_1be1659ad:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1be165051:;
						{
							__jule_panic_s(jule::Str::lit("sema: implementation mistake in implicit import collection, this panic call should be unreachable", 97) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1be1655e5:;
				};
			}
			_iter_next_1be164748:;
			++it;
			goto _iter_begin_1be164748;
		}
		_iter_end_1be164748:;
	};
}



inline __jule_tuple_x_1aab3267a_Package__jule_tuple_s_1ace263b7_Log _1aac25031_analyzePackage(jule::Slice<jule::Ptr<_1aa0eb8ae_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I32* _4570_flags) {
	__jule_tuple_x_1aab3267a_Package__jule_tuple_s_1ace263b7_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1aaa42524_SymTab>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa42524_SymTab>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aaa42524_SymTab>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be166ae1:;
		if (it != expr_end) {
			jule::Ptr<_1aa0eb8ae_AST> _4814_f = *it;
			{
				jule::Ptr<_1aaa42524_SymTab> _497_table;
				jule::Slice<_1ace263b7_Log> _4918_errors;
				({
					__jule_tuple_x_1aaa42524_SymTab__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1aac247c2_buildSymbols(&(_4814_f), _4549_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1aaa42524_SymTab>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1be166ae1:;
			++it;
			goto _iter_begin_1be166ae1;
		}
		_iter_end_1be166ae1:;
	};
	jule::Ptr<_1aab4c62e_sema> _566_sema = jule::new_ptr<_1aab4c62e_sema>(_1aab4c62e_sema{._field_errors=jule::Slice<_1ace263b7_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1aaa42524_SymTab>>(nullptr), ._field_file=jule::Ptr<_1aaa42524_SymTab>(nullptr), ._field_flags=(*(_4570_flags)), ._field_meta=jule::new_ptr<_1aab4b595_commonSemaMeta>(_1aab4b595_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1aaad1052_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1aab2ee08_ImportInfo>(nullptr)}), ._field_step=0LL});;
	jule::Ptr<_1aaa42524_SymTab> _636_firstTable = _476_tables[0LL];;
	_1aac24b02_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1aab6b7d5_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1aab3267a_Package> _716_pkg = jule::new_ptr<_1aab3267a_Package>(_1aab3267a_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aab3267a_Package__jule_tuple_s_1ace263b7_Log _1aac254d7_AnalyzePackage(jule::Slice<jule::Ptr<_1aa0eb8ae_AST>> _9523_files, jule::Trait _9547_importer, jule::I32 _9567_flags) {
	__jule_tuple_x_1aab3267a_Package__jule_tuple_s_1ace263b7_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1aac25031_analyzePackage(&(_9523_files), &(_9547_importer), &(_9567_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1aaa3e2ce_FnIns> _1aac75cda_findBuiltinFunc(jule::Str* _2021_ident) {
	{
		auto &_match_expr{ (*(_2021_ident)) };
		
		if (_match_expr == jule::Str::lit("print", 5)) {
			_case_begin_1be17137b:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _2314_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac7b6c5_builtinCallerPrint), ._field_reloaded=false});;
				return _2314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("println", 7)) {
			_case_begin_1be1713e2:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _2614_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac7bb04_builtinCallerPrintln), ._field_reloaded=false});;
				return _2614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1be171458:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _2914_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac7c033_builtinCallerNew), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1be1714be:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _3214_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac7c462_builtinCallerPanic), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1be171689:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _3514_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac7c891_builtinCallerMake), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1be171700:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _3814_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac7d001_builtinCallerAppend), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1be171766:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _4114_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac7d809_builtinCallerCopy), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1be1717cc:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _4414_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac7ee9d_builtinCallerLen), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1be171854:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _4714_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac80751_builtinCallerCap), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1be171953:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _5014_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac81169_builtinCallerDelete), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else {
			_case_begin_1be16e577:;
			{
				return nullptr;;
			}
		}
		_match_end_1be171205:;
	};
}



inline jule::Ptr<_1aabec1a1_TypeAlias> _1aac7623b_primTypeAlias(jule::Str _5718_ident, jule::Ptr<_1aabecdb6_Type>* _5735_k, jule::Bool _5745_strict) {
	if ((!(_5745_strict))) {
		return jule::new_ptr<_1aabec1a1_TypeAlias>(_1aabec1a1_TypeAlias{._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_Strict=false, ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Ident=_5718_ident, ._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=(*(_5735_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr)});;
	};
	jule::Ptr<_1aa969605_StructIns> _676_s = _1aac217be_initNewStructType(_5718_ident, (*(_5735_k)));;
	(*(_676_s))._field_Checked=true;
	(*((*_676_s.alloc)._field_Decl))._field_Public=true;
	return jule::new_ptr<_1aabec1a1_TypeAlias>(_1aabec1a1_TypeAlias{._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_Strict=false, ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Ident=_5718_ident, ._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_676_s, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)})}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1aab70795_Var> _1aac79ae1_findBuiltinVar(jule::Str* _9820_ident) {
	{
		auto &_match_expr{ (*(_9820_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1be179d57:;
			{
				static jule::Ptr<_1aab70795_Var> _10114_v = jule::new_ptr<_1aab70795_Var>(_1aab70795_Var{._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Checked=false, ._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=_1aac76549_primNil}), ._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aaa239de_NewNil()})}), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr)});;
				return _10114_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1be179e01:;
			{
				static jule::Ptr<_1aab70795_Var> _11614_v = jule::new_ptr<_1aab70795_Var>(_1aab70795_Var{._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Checked=false, ._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aaa2324c_NewBool(true)})}), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr)});;
				return _11614_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1be179e78:;
			{
				static jule::Ptr<_1aab70795_Var> _13014_v = jule::new_ptr<_1aab70795_Var>(_1aab70795_Var{._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_Checked=false, ._field_TypeSym=(*(_1aac79e32_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1aabba03c_Value>(_1aabba03c_Value{._field_Expr=jule::Ptr<_1aa102b4b_Expr>(nullptr), ._field_Data=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=true, ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1aaa2324c_NewBool(false)})}), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1aab70795_Var>>(nullptr)});;
				return _13014_v;;
			}
		}
		else {
			_case_begin_1be1787a1:;
			{
				return nullptr;;
			}
		}
		_match_end_1be179c69:;
	};
}



inline jule::Ptr<_1aabec1a1_TypeAlias> _1aac79e32_findBuiltinTypeAlias(jule::Str _14825_ident) {
	{
		auto &_match_expr{ _14825_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1be17ebe7:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _15114_t = _1aac7623b_primTypeAlias(jule::Str::lit("any", 3), &(_1aac76aee_primAny), false);;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1be17ed4b:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _15414_t = _1aac7623b_primTypeAlias(jule::Str::lit("str", 3), &(_1aac76deb_primStr), false);;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1be17edb2:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _15714_t = _1aac7623b_primTypeAlias(jule::Str::lit("bool", 4), &(_1aac771a4_primBool), false);;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1be17ee7d:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _16014_t = _1aac7623b_primTypeAlias(jule::Str::lit("uintptr", 7), &(_1aac7745c_primUintptr), false);;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1be17eee4:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _16314_t = _1aac7623b_primTypeAlias(jule::Str::lit("uint", 4), &(_1aac77715_primUint), false);;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1be18005a:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _16614_t = _1aac7623b_primTypeAlias(jule::Str::lit("int", 3), &(_1aac77acd_primInt), false);;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1be1800d2:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _16914_t = _1aac7623b_primTypeAlias(jule::Str::lit("i8", 2), &(_1aac77d20_primI8), false);;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1be180159:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _17214_t = _1aac7623b_primTypeAlias(jule::Str::lit("i16", 3), &(_1aac780b7_primI16), false);;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1be180247:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _17514_t = _1aac7623b_primTypeAlias(jule::Str::lit("i32", 3), &(_1aac78370_primI32), false);;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1be1802be:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _17814_t = _1aac7623b_primTypeAlias(jule::Str::lit("i64", 3), &(_1aac78628_primI64), false);;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1be180346:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _18114_t = _1aac7623b_primTypeAlias(jule::Str::lit("u8", 2), &(_1aac788d1_primU8), false);;
				return _18114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1be1803bd:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _18414_t = _1aac7623b_primTypeAlias(jule::Str::lit("u16", 3), &(_1aac78b89_primU16), false);;
				return _18414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1be180445:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _18714_t = _1aac7623b_primTypeAlias(jule::Str::lit("u32", 3), &(_1aac78e42_primU32), false);;
				return _18714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1be1804bc:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _19014_t = _1aac7623b_primTypeAlias(jule::Str::lit("u64", 3), &(_1aac7942b_primU64), false);;
				return _19014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1be180544:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _19314_t = _1aac7623b_primTypeAlias(jule::Str::lit("f32", 3), &(_1aac7966d_primF32), false);;
				return _19314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1be1805bb:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _19614_t = _1aac7623b_primTypeAlias(jule::Str::lit("f64", 3), &(_1aac7987c_primF64), false);;
				return _19614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4)) {
			_case_begin_1be180643:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _19914_t = _1aac7623b_primTypeAlias(jule::Str::lit("byte", 4), &(_1aac788d1_primU8), true);;
				return _19914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4)) {
			_case_begin_1be1806ba:;
			{
				static jule::Ptr<_1aabec1a1_TypeAlias> _20214_t = _1aac7623b_primTypeAlias(jule::Str::lit("rune", 4), &(_1aac78370_primI32), false);;
				return _20214_t;;
			}
		}
		else {
			_case_begin_1be17a51c:;
			{
				return nullptr;;
			}
		}
		_match_end_1be17a60a:;
	};
}



inline jule::Any _1aac7a1b8_findBuiltinDef(jule::Str* _20920_ident) {
	jule::Ptr<_1aab70795_Var> _2106_v = _1aac79ae1_findBuiltinVar(_20920_ident);;
	if ((_2106_v != nullptr)) {
		return jule::Any(_2106_v, &__jule_any_type7);;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _2146_f = _1aac75cda_findBuiltinFunc(_20920_ident);;
	if ((_2146_f != nullptr)) {
		return jule::Any(_2146_f, &__jule_any_type65);;
	};
	jule::Ptr<_1aabec1a1_TypeAlias> _2186_ta = _1aac79e32_findBuiltinTypeAlias((*(_20920_ident)));;
	if ((_2186_ta != nullptr)) {
		return jule::Any(_2186_ta, &__jule_any_type8);;
	};
	return nullptr;;
}



inline jule::Any _1aac7a482_findBuiltinDefStdMem(jule::Str* _22526_ident) {
	{
		auto &_match_expr{ (*(_22526_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1be18cb4a:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _22814_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac83314_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_22814_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1be18c9a2:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _23114_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac83743_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_23114_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1be18ca18:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _23414_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac83b72_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_23414_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_1be18c1aa:;
			{
				return nullptr;;
			}
		}
		_match_end_1be18c4eb:;
	};
}



inline jule::Any _1aac7a74b_findBuiltinDefStdComptime(jule::Str* _24131_ident) {
	{
		auto &_match_expr{ (*(_24131_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1be18c71b:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _24414_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac81598_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_24414_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1be18eb80:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _24714_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac819c7_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_24714_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1be18ec07:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _25014_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac81e06_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_25014_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1be18c793:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _25314_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac82577_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_25314_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1be18c81a:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _25614_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac829a6_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_25614_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1be18ed4a:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _25914_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1aaa3b221_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac82dd5_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_25914_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_1be18eab4:;
			{
				return nullptr;;
			}
		}
		_match_end_1be18e91b:;
	};
}



inline jule::Any _1aac7ab25_findBuiltinDefStdJuleIntegrated(jule::Str* _26637_ident) {
	{
		auto &_match_expr{ (*(_26637_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1be1900e2:;
			{
				static jule::Ptr<_1aaa3e2ce_FnIns> _26914_f = jule::new_ptr<_1aaa3e2ce_FnIns>(_1aaa3e2ce_FnIns{._field_Owner=jule::Ptr<_1aa969605_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1aaa3b221_Fn>(_1aaa3b221_Fn{._field_sema=jule::Ptr<_1aab4c62e_sema>(nullptr), ._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aa10aa22_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aa10aa22_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1aaa39186_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3974c_Param>>(nullptr), ._field_Owner=jule::Ptr<_1aa966767_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1aaa3e2ce_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1aabeb4d0_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1aaa3d179_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1aabecdb6_Type>(nullptr), ._field_Scope=jule::Ptr<_1aaaec832_Scope>(nullptr), ._field_Refers=jule::Ptr<_1aab1cd80_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1aabb8db5_Data>,jule::Ptr<_1aabbad84_eval>*,jule::Ptr<_1aa106875_FnCallExpr>*,jule::Ptr<_1aabb8db5_Data>*>(_1aac840a1_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_26914_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_1be18edd3:;
			{
				return nullptr;;
			}
		}
		_match_end_1be193d4e:;
	};
}



inline jule::Any _1aac7ae22_findPackageBuiltinDef(jule::Str* _28127_linkPath, jule::Str* _28143_ident) {
	{
		auto &_match_expr{ (*(_28127_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std/comptime", 12)) {
			_case_begin_1be1955c0:;
			{
				return _1aac7a74b_findBuiltinDefStdComptime(_28143_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/mem", 7)) {
			_case_begin_1be195636:;
			{
				return _1aac7a482_findBuiltinDefStdMem(_28143_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/jule/integrated", 19)) {
			_case_begin_1be19569c:;
			{
				return _1aac7ab25_findBuiltinDefStdJuleIntegrated(_28143_ident);;
			}
		}
		else {
			_case_begin_1be194426:;
			{
				return nullptr;;
			}
		}
		_match_end_1be194349:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7b296_builtinCallerError(jule::Ptr<_1aabbad84_eval>* _29428_e, jule::Ptr<_1aa106875_FnCallExpr>* _29443_fc) {
	if (((*((*(_29443_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_29428_e)).ptr(), (*((*(_29443_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_29443_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr((*(_29428_e)).ptr(), (*((*((*(_29443_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aabb8db5_Data> _3026_expr = _1aabdad3d_evalExpr((*(_29428_e)), (*((*(_29443_fc))))._field_Args[0LL]);;
	if ((_3026_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aa0d7ceb_Token> _3076_token = (*((*((*(_29443_fc))))._field_Args[0LL]))._field_Token;;
	if (_1aabb92d3_IsNil(_3026_expr.ptr())) {
		_1aabbb35c_pushErr((*(_29428_e)).ptr(), _3076_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1aab5c2a9_checkValidityForInitExpr((*((*(_29428_e))))._field_s, true, false, &(_1aac76aee_primAny), &(_3026_expr), &(_3076_token))))) {
		return nullptr;;
	};
	_1aabe670b_applyRuntimeToStr(&((*((*(_29428_e))))._field_s), &((*(_3026_expr))._field_Type), &(_1aac76aee_primAny), &(_3076_token), _1aabbe393_getOwnerRefers((*(_29428_e)).ptr()));
	jule::Ptr<_1aabb8db5_Data> _3206_d = _1aabe7432_buildVoidData();;
	(*(_3206_d))._field_Model=jule::Any(jule::new_ptr<_1aaa37096_BuiltinErrorCallExpr>(_1aaa37096_BuiltinErrorCallExpr{._field_Func=jule::Ptr<_1aaa3e2ce_FnIns>(nullptr), ._field_Err=_3026_expr}), &__jule_any_type20);
	return _3206_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7b6c5_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _32528_e, jule::Ptr<_1aa106875_FnCallExpr>* _32543_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	if (((*((*(_32543_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_32528_e)).ptr(), (*((*(_32543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_32543_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr((*(_32528_e)).ptr(), (*((*((*(_32543_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("print", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aa102b4b_Expr> _3346_arg = (*((*(_32543_fc))))._field_Args[0LL];;
	jule::Ptr<_1aabb8db5_Data> _3356_expr = _1aabdad3d_evalExpr((*(_32528_e)), _3346_arg);;
	if ((_3356_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aac2058c_isBuiltinStrConvertable(&((*(_3356_expr))._field_Type))))) {
		_1aabbb35c_pushErr((*(_32528_e)).ptr(), (*(_3346_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aab6dd59_pushRuntimeToStr(&((*((*(_32528_e))))._field_s), &((*(_3356_expr))._field_Type), &((*(_3346_arg))._field_Token), _1aabbe393_getOwnerRefers((*(_32528_e)).ptr()));
	jule::Ptr<_1aabb8db5_Data> _3476_d = _1aabe7432_buildVoidData();;
	(*(_3476_d))._field_Model=jule::Any(jule::new_ptr<_1aaa348e0_BuiltinPrintCallExpr>(_1aaa348e0_BuiltinPrintCallExpr{._field_Expr=_3356_expr}), &__jule_any_type24);
	return _3476_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7bb04_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _35230_e, jule::Ptr<_1aa106875_FnCallExpr>* _35245_fc, jule::Ptr<_1aabb8db5_Data>* _35272_d) {
	(*(_35272_d))=_1aac7b6c5_builtinCallerPrint(nullptr, _35230_e, _35245_fc, _35272_d);
	if (((*(_35272_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_35272_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa34bdc_BuiltinPrintlnCallExpr>(_1aaa34bdc_BuiltinPrintlnCallExpr{._field_Expr=(*((*((*(_35272_d))))._field_Model.cast_ptr<_1aaa348e0_BuiltinPrintCallExpr>(&__jule_any_type24)))._field_Expr}), &__jule_any_type25);
	return (*(_35272_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7c033_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _36426_e, jule::Ptr<_1aa106875_FnCallExpr>* _36441_fc, jule::Ptr<_1aabb8db5_Data>* _36468_d) {
	if (((*((*(_36441_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_36426_e)).ptr(), (*((*(_36441_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_36441_fc))))._field_Args.len() > 2LL)) {
		_1aabbb35c_pushErr((*(_36426_e)).ptr(), (*((*((*(_36441_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aabb8db5_Data> _3736_t = _1aabda36a_eval1((*(_36426_e)), (*((*(_36441_fc))))._field_Args[0LL]);;
	if ((_3736_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3736_t))._field_Decl))) {
		_1aabbb35c_pushErr((*(_36426_e)).ptr(), (*((*((*(_36441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*((*(_36468_d))))._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aac0a6ed_Sptr>(_1aac0a6ed_Sptr{._field_Elem=(*(_3736_t))._field_Type}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)});
	if (((*((*(_36441_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1aabecdb6_Type> _3907_old = (*((*(_36426_e))))._field_prefix;;
		(*((*(_36426_e))))._field_prefix=(*_3736_t.alloc)._field_Type;
		jule::Ptr<_1aabb8db5_Data> _3937_init = _1aabdad3d_evalExpr((*(_36426_e)), (*((*(_36441_fc))))._field_Args[1LL]);;
		(*((*(_36426_e))))._field_prefix=_3907_old;
		if ((_3937_init != nullptr)) {
			jule::Ptr<_1aa0d7ceb_Token> _3988_token = (*((*((*(_36441_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1aab5c2a9_checkValidityForInitExpr((*((*(_36426_e))))._field_s, (*((*(_36426_e))))._field_target._field_mutable, false, &((*_3736_t.alloc)._field_Type), &(_3937_init), &(_3988_token));
			_1aab57a24_checkAssignType((*((*(_36426_e))))._field_s, false, &((*_3736_t.alloc)._field_Type), &(_3937_init), _3988_token, _1aabbe393_getOwnerRefers((*(_36426_e)).ptr()));
			(*((*(_36468_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa350b6_BuiltinNewCallExpr>(_1aaa350b6_BuiltinNewCallExpr{._field_Type=(*_3736_t.alloc)._field_Type, ._field_Init=(*(_3937_init))._field_Model}), &__jule_any_type115);
		};
	} else {
		(*((*(_36468_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa350b6_BuiltinNewCallExpr>(_1aaa350b6_BuiltinNewCallExpr{._field_Type=(*_3736_t.alloc)._field_Type, ._field_Init=jule::Any(nullptr)}), &__jule_any_type115);
	};
	return (*(_36468_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7c462_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _41828_e, jule::Ptr<_1aa106875_FnCallExpr>* _41843_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	if (((*((*(_41843_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_41828_e)).ptr(), (*((*(_41843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_41843_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr((*(_41828_e)).ptr(), (*((*((*(_41843_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aabb8db5_Data> _4276_expr = _1aabdad3d_evalExpr((*(_41828_e)), (*((*(_41843_fc))))._field_Args[0LL]);;
	if ((_4276_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1aac00ec9_Prim((*(_4276_expr))._field_Type.ptr()) == nullptr) || (!(_1aac0a18c_IsStr(_1aac00ec9_Prim((*(_4276_expr))._field_Type.ptr()).ptr()))))) {
		_1aabbb35c_pushErr((*(_41828_e)).ptr(), (*((*(_41843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aabb8db5_Data> _4366_d = _1aabe7432_buildVoidData();;
	(*(_4366_d))._field_Model=jule::Any(jule::new_ptr<_1aaa35490_BuiltinPanicCallExpr>(_1aaa35490_BuiltinPanicCallExpr{._field_Token=(*((*(_41843_fc))))._field_Token, ._field_Expr=(*(_4276_expr))._field_Model}), &__jule_any_type26);
	return _4366_d;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7c891_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _44427_e, jule::Ptr<_1aa106875_FnCallExpr>* _44442_fc, jule::Ptr<_1aabb8db5_Data>* _44469_d) {
	if (((*((*(_44442_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_44442_fc))))._field_Args.len() == 1LL)) {
			_1aabbb35c_pushErr((*(_44427_e)).ptr(), (*((*(_44442_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1aabbb35c_pushErr((*(_44427_e)).ptr(), (*((*(_44442_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_44442_fc))))._field_Args.len() > 3LL)) {
		_1aabbb35c_pushErr((*(_44427_e)).ptr(), (*((*((*(_44442_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aabb8db5_Data> _4576_t = _1aabda029_evalExprKind((*(_44427_e)), (*((*((*(_44442_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4576_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4576_t))._field_Decl))) {
		_1aabbb35c_pushErr((*(_44427_e)).ptr(), (*((*((*(_44442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1aac02030_Slc((*(_4576_t))._field_Type.ptr()) == nullptr)) {
		_1aabbb35c_pushErr((*(_44427_e)).ptr(), (*((*((*(_44442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_4576_t))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_44469_d))))._field_Type=(*(_4576_t))._field_Type;
	jule::Ptr<_1aabb8db5_Data> _4726_lenExpr = _1aabdad3d_evalExpr(_1aab570b7_evalp((*((*(_44427_e))))._field_s, (*((*(_44427_e))))._field_lookup, (*_4576_t.alloc)._field_Type), (*((*(_44442_fc))))._field_Args[1LL]);;
	if ((_4726_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1aabc5454_checkIntegerIndexingByData((*(_44427_e)).ptr(), &(_4726_lenExpr), (*((*((*(_44442_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1aaa35946_BuiltinMakeCallExpr> _4796_model = jule::new_ptr<_1aaa35946_BuiltinMakeCallExpr>(_1aaa35946_BuiltinMakeCallExpr{._field_Type=(*_4576_t.alloc)._field_Type, ._field_Len=(*(_4726_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_44469_d))))._field_Model=jule::Any(_4796_model, &__jule_any_type116);
	if (((*((*(_44442_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1aabb8db5_Data> _4857_capExpr = _1aabdad3d_evalExpr(_1aab570b7_evalp((*((*(_44427_e))))._field_s, (*((*(_44427_e))))._field_lookup, (*_4576_t.alloc)._field_Type), (*((*(_44442_fc))))._field_Args[2LL]);;
		if ((_4857_capExpr == nullptr)) {
			return (*(_44469_d));;
		};
		_1aabc5454_checkIntegerIndexingByData((*(_44427_e)).ptr(), &(_4857_capExpr), (*((*((*(_44442_fc))))._field_Args[2LL]))._field_Token);
		(*(_4796_model))._field_Cap=(*(_4857_capExpr))._field_Model;
	};
	return (*(_44469_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7d001_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _49529_e, jule::Ptr<_1aa106875_FnCallExpr>* _49544_fc, jule::Ptr<_1aabb8db5_Data>* _49571_d) {
	if (((*((*(_49544_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_49544_fc))))._field_Args.len() == 1LL)) {
			_1aabbb35c_pushErr((*(_49529_e)).ptr(), (*((*(_49544_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1aabbb35c_pushErr((*(_49529_e)).ptr(), (*((*(_49544_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aa102b4b_Expr> _5056_firstArg = (*((*(_49544_fc))))._field_Args[0LL];;
	jule::Ptr<_1aabb8db5_Data> _5066_t = _1aabdad3d_evalExpr((*(_49529_e)), _5056_firstArg);;
	if ((_5066_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aac0b1c1_Slc> _5116_s = _1aac02030_Slc((*(_5066_t))._field_Type.ptr());;
	if ((_5116_s == nullptr)) {
		_1aabbb35c_pushErr((*(_49529_e)).ptr(), (*(_5056_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1aab5c2a9_checkValidityForInitExpr((*((*(_49529_e))))._field_s, true, false, &((*_5066_t.alloc)._field_Type), &(_5066_t), &((*(_5056_firstArg))._field_Token))) {
		_1aab57a24_checkAssignType((*((*(_49529_e))))._field_s, false, &((*(_5066_t))._field_Type), &(_5066_t), (*_5056_firstArg.alloc)._field_Token, _1aabbe393_getOwnerRefers((*(_49529_e)).ptr()));
	};
	jule::Ptr<_1aabecdb6_Type> _5266_prefix = (*((*(_49529_e))))._field_prefix;;
	(*((*(_49529_e))))._field_prefix=(*_5066_t.alloc)._field_Type;
	__JULE_DEFER({
		(*((*(_49529_e))))._field_prefix=_5266_prefix;
	});;
	(*(_49571_d))=jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=(*_5066_t.alloc)._field_Type, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});
	jule::Ptr<_1aa102b4b_Expr> _5346_secondArg = (*((*(_49544_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5346_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1be1dbced:;
			{
				if (((*((*(_49544_fc))))._field_Args.len() > 2LL)) {
					_1aabbb35c_pushErr((*(_49529_e)).ptr(), (*((*((*(_49544_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1aabb8db5_Data> _5417_e1 = _1aabdad3d_evalExpr((*(_49529_e)), (*((*(_5346_secondArg))._field_Kind.unsafe_cast_ptr<_1aa1050d2_VariadicExpr>()))._field_Expr);;
				if ((_5417_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1aac00ec9_Prim((*(_5116_s))._field_Elem.ptr()) != nullptr) && _1aac085ec_IsU8(_1aac00ec9_Prim((*(_5116_s))._field_Elem).ptr()))) {
					if (((_1aac00ec9_Prim((*(_5417_e1))._field_Type) != nullptr) && _1aac0a18c_IsStr(_1aac00ec9_Prim((*(_5417_e1))._field_Type).ptr()))) {
						_1aabea039_makeVariadic(&(_5417_e1), _1aac788d1_primU8);
						(*((*(_49571_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa35d20_BuiltinAppendCallExpr>(_1aaa35d20_BuiltinAppendCallExpr{._field_Dest=(*_5066_t.alloc)._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type23);
						return (*(_49571_d));;
					};
				};
				if ((!(_1aac00c43_Variadicable((*(_5417_e1))._field_Type)))) {
					_1aabbb35c_pushErr((*(_49529_e)).ptr(), (*(_5346_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_5417_e1))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1aabea039_makeVariadic(&(_5417_e1), (*(_5116_s))._field_Elem);
				(*(*(_5417_e1))._field_Type.alloc)._field_Variadic=false;
				if (_1aab5c2a9_checkValidityForInitExpr((*((*(_49529_e))))._field_s, true, false, &((*_5116_s.alloc)._field_Elem), &(_5417_e1), &((*(_5346_secondArg))._field_Token))) {
					(*(*(_5417_e1))._field_Type.alloc)._field_Variadic=true;
					_1aab57a24_checkAssignType((*((*(_49529_e))))._field_s, false, &((*_5116_s.alloc)._field_Elem), &(_5417_e1), (*_5346_secondArg.alloc)._field_Token, _1aabbe393_getOwnerRefers((*(_49529_e)).ptr()));
				} else {
					(*(*(_5417_e1))._field_Type.alloc)._field_Variadic=true;
				};
				(*((*(_49571_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa35d20_BuiltinAppendCallExpr>(_1aaa35d20_BuiltinAppendCallExpr{._field_Dest=(*_5066_t.alloc)._field_Model, ._field_Elements=(*(_5417_e1))._field_Model}), &__jule_any_type23);
				return (*(_49571_d));;
			}
		}
		_match_end_1be1dbc76:;
	};
	jule::Ptr<_1aabb8db5_Data> _5846_e1 = _1aabdad3d_evalExpr((*(_49529_e)), _5346_secondArg);;
	if ((_5846_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aaa313ae_SliceExpr> _5896_slice = jule::new_ptr<_1aaa313ae_SliceExpr>(_1aaa313ae_SliceExpr{._field_ElemType=(*(_5116_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_49544_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_49544_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1be1e8d4e:;
		if (it != expr_end) {
			jule::Ptr<_1aa102b4b_Expr> _59314_arg = *it;
			{
				_5846_e1=_1aabdad3d_evalExpr((*(_49529_e)), _59314_arg);
				if ((_5846_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5846_e1))._field_Type.alloc)._field_Variadic) {
					_1aabbb35c_pushErr((*(_49529_e)).ptr(), (*(_59314_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1aab5c2a9_checkValidityForInitExpr((*((*(_49529_e))))._field_s, true, false, &((*_5116_s.alloc)._field_Elem), &(_5846_e1), &((*(_59314_arg))._field_Token))) {
					_1aab57a24_checkAssignType((*((*(_49529_e))))._field_s, false, &((*_5116_s.alloc)._field_Elem), &(_5846_e1), (*_59314_arg.alloc)._field_Token, _1aabbe393_getOwnerRefers((*(_49529_e)).ptr()));
				};
				(*(_5896_slice))._field_Elems=jule::append((*_5896_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5846_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1be1e8d4e:;
			++it;
			goto _iter_begin_1be1e8d4e;
		}
		_iter_end_1be1e8d4e:;
	};
	(*((*(_49571_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa35d20_BuiltinAppendCallExpr>(_1aaa35d20_BuiltinAppendCallExpr{._field_Dest=(*_5066_t.alloc)._field_Model, ._field_Elements=jule::Any(_5896_slice, &__jule_any_type80)}), &__jule_any_type23);
	return (*(_49571_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7d3ca_callerCopySlice(jule::Ptr<_1aabb8db5_Data>* _61525_dest, jule::Ptr<_1aabbad84_eval>* _61543_e, jule::Ptr<_1aa106875_FnCallExpr>* _61558_fc, jule::Ptr<_1aabb8db5_Data>* _61585_d) {
	if ((!((*((*(_61525_dest))))._field_Mutable))) {
		_1aabbb35c_pushErr((*(_61543_e)).ptr(), (*((*((*(_61558_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aabb8db5_Data> _6206_src = _1aabdad3d_evalExpr((*(_61543_e)), (*((*(_61558_fc))))._field_Args[1LL]);;
	if ((_6206_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aac0b1c1_Slc> _6246_slc = _1aac02030_Slc((*(_6206_src))._field_Type.ptr());;
	if ((_6246_slc != nullptr)) {
		if (((!((*_6206_src.alloc)._field_Mutable)) && _1aac00209_Mutable((*_6246_slc.alloc)._field_Elem.ptr()))) {
			_1aabbb35c_pushErr((*(_61543_e)).ptr(), (*((*((*(_61558_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1aabed603_Equal((*((*(_61525_dest))))._field_Type, (*_6206_src.alloc)._field_Type)))) {
			_1aabbb35c_pushErr((*(_61543_e)).ptr(), (*((*((*(_61558_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_61525_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_6206_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1aac06bc2_Prim> _6343_destPrim = _1aac00ec9_Prim((*(_1aac02030_Slc((*((*(_61525_dest))))._field_Type)))._field_Elem.ptr());;
		jule::Ptr<_1aac06bc2_Prim> _6353_prim = _1aac00ec9_Prim((*(_6206_src))._field_Type);;
		if (((((_6343_destPrim == nullptr) || (_6353_prim == nullptr)) || (!(_1aac0a18c_IsStr(_6353_prim.ptr())))) || (!(_1aac085ec_IsU8(_6343_destPrim.ptr()))))) {
			_1aabbb35c_pushErr((*(_61543_e)).ptr(), (*((*((*(_61558_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*((*(_61525_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_6206_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*(_61585_d))))._field_Type=_1aabb7127_lenKind();
	(*((*(_61585_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa36bbc_BuiltinCopyCallExpr>(_1aaa36bbc_BuiltinCopyCallExpr{._field_Dest=(*(_61525_dest)), ._field_Src=_6206_src}), &__jule_any_type27);
	return (*(_61585_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7d809_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _64927_e, jule::Ptr<_1aa106875_FnCallExpr>* _64942_fc, jule::Ptr<_1aabb8db5_Data>* _64969_d) {
	if (((*((*(_64942_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_64942_fc))))._field_Args.len() == 1LL)) {
			_1aabbb35c_pushErr((*(_64927_e)).ptr(), (*((*(_64942_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1aabbb35c_pushErr((*(_64927_e)).ptr(), (*((*(_64942_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_64942_fc))))._field_Args.len() > 2LL)) {
		_1aabbb35c_pushErr((*(_64927_e)).ptr(), (*((*((*(_64942_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aabb8db5_Data> _6626_dest = _1aabdad3d_evalExpr((*(_64927_e)), (*((*(_64942_fc))))._field_Args[0LL]);;
	{
		
		if ((_6626_dest == nullptr)) {
			_case_begin_1be210162:;
			{
				return nullptr;;
			}
		}
		else if ((_1aac02030_Slc((*(_6626_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be2101c8:;
			{
				return _1aac7d3ca_callerCopySlice(&(_6626_dest), _64927_e, _64942_fc, _64969_d);;
			}
		}
		else {
			_case_begin_1be20e040:;
			{
				_1aabbb35c_pushErr((*(_64927_e)).ptr(), (*((*((*(_64942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be20a624:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7db7d_callerLenSlice(jule::Ptr<_1aabb8db5_Data>* _67424_expr, jule::Ptr<_1aabb8db5_Data>* _67442_d) {
	(*((*(_67442_d))))._field_Type=_1aabb7127_lenKind();
	(*((*(_67442_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa3611c_BuiltinLenCallExpr>(_1aaa3611c_BuiltinLenCallExpr{._field_Expr=(*(_67424_expr))}), &__jule_any_type117);
	return (*(_67442_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7e002_callerLenMap(jule::Ptr<_1aabb8db5_Data>* _68222_expr, jule::Ptr<_1aabb8db5_Data>* _68240_d) {
	(*((*(_68240_d))))._field_Type=_1aabb7127_lenKind();
	(*((*(_68240_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa3611c_BuiltinLenCallExpr>(_1aaa3611c_BuiltinLenCallExpr{._field_Expr=(*(_68222_expr))}), &__jule_any_type117);
	return (*(_68240_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7e376_callerLenArr(jule::Ptr<_1aabb8db5_Data>* _69022_expr, jule::Ptr<_1aabb8db5_Data>* _69040_d) {
	(*((*(_69040_d))))._field_Type=_1aabb7127_lenKind();
	(*((*(_69040_d))))._field_Constant=static__1aaa22c30_NewI64(static_cast<jule::I64>((*(_1aac01c99_Arr((*((*(_69022_expr))))._field_Type.ptr())))._field_N));
	(*((*(_69040_d))))._field_Model=jule::Any((*((*(_69040_d))))._field_Constant, &__jule_any_type15);
	return (*(_69040_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7e6ea_callerLenStr(jule::Ptr<_1aabb8db5_Data>* _69722_expr, jule::Ptr<_1aabb8db5_Data>* _69740_d) {
	(*((*(_69740_d))))._field_Type=_1aabb7127_lenKind();
	if (_1aabb9800_IsConst((*(_69722_expr)).ptr())) {
		(*((*(_69740_d))))._field_Constant=static__1aaa22c30_NewI64(static_cast<jule::I64>(_1aaa24902_ReadStr((*((*(_69722_expr))))._field_Constant.ptr()).len()));
		(*((*(_69740_d))))._field_Model=jule::Any((*((*(_69740_d))))._field_Constant, &__jule_any_type15);
	} else {
		(*((*(_69740_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa3611c_BuiltinLenCallExpr>(_1aaa3611c_BuiltinLenCallExpr{._field_Expr=(*(_69722_expr))}), &__jule_any_type117);
	};
	return (*(_69740_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7ea6e_callerLenComptime(jule::Ptr<_1aabb8db5_Data>* _71027_d, jule::I32 _71037_n) {
	(*((*(_71027_d))))._field_Type=_1aabb7127_lenKind();
	(*((*(_71027_d))))._field_Constant=static__1aaa22c30_NewI64(static_cast<jule::I64>(_71037_n));
	(*((*(_71027_d))))._field_Model=jule::Any((*((*(_71027_d))))._field_Constant, &__jule_any_type15);
	return (*(_71027_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac7ee9d_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _71726_e, jule::Ptr<_1aa106875_FnCallExpr>* _71741_fc, jule::Ptr<_1aabb8db5_Data>* _71768_d) {
	if (((*((*(_71741_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_71726_e)).ptr(), (*((*(_71741_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_71741_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr((*(_71726_e)).ptr(), (*((*((*(_71741_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aabb8db5_Data> _7256_dest = _1aabda9ec_evalExpr1((*(_71726_e)), (*((*(_71741_fc))))._field_Args[0LL]);;
	{
		
		if ((_7256_dest == nullptr)) {
			_case_begin_1be21eeb8:;
			{
				return nullptr;;
			}
		}
		else if ((_1aac02030_Slc((*(_7256_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1be22002e:;
			{
				return _1aac7db7d_callerLenSlice(&(_7256_dest), _71768_d);;
			}
		}
		else if ((_1aac01c99_Arr((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1be220095:;
			{
				return _1aac7e376_callerLenArr(&(_7256_dest), _71768_d);;
			}
		}
		else if ((_1aac02d00_Map((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1be22010b:;
			{
				return _1aac7e002_callerLenMap(&(_7256_dest), _71768_d);;
			}
		}
		else if (((_1aac00ec9_Prim((*(_7256_dest))._field_Type) != nullptr) && _1aac0a18c_IsStr(_1aac00ec9_Prim((*(_7256_dest))._field_Type).ptr()))) {
			_case_begin_1be21de0c:;
			{
				return _1aac7e6ea_callerLenStr(&(_7256_dest), _71768_d);;
			}
		}
		else if ((_1aac035a3_comptimeStructFields((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1be21de73:;
			{
				return _1aac7ea6e_callerLenComptime(_71768_d, (*(_1aac035a3_comptimeStructFields((*(_7256_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1aac03ac0_comptimeEnumFields((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1be21ded9:;
			{
				return _1aac7ea6e_callerLenComptime(_71768_d, (*(_1aac03ac0_comptimeEnumFields((*(_7256_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1aac04890_comptimeTypeInfos((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1be21e050:;
			{
				return _1aac7ea6e_callerLenComptime(_71768_d, (*(_1aac04890_comptimeTypeInfos((*(_7256_dest))._field_Type)))._field_types.len());;
			}
		}
		else if ((_1aac040dc_comptimeParams((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1be2201c7:;
			{
				return _1aac7ea6e_callerLenComptime(_71768_d, (*(_1aac040dc_comptimeParams((*(_7256_dest))._field_Type)))._field_params.len());;
			}
		}
		else if ((_1aac04dac_comptimeStatics((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1be22023d:;
			{
				return _1aac7ea6e_callerLenComptime(_71768_d, (*(_1aac04dac_comptimeStatics((*(_7256_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1aac05e13_comptimeFiles((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1be2202a4:;
			{
				return _1aac7ea6e_callerLenComptime(_71768_d, (*(_1aac05e13_comptimeFiles((*(_7256_dest))._field_Type)))._field_files.len());;
			}
		}
		else if ((_1aac058e6_comptimeDecls((*(_7256_dest))._field_Type) != nullptr)) {
			_case_begin_1be22031a:;
			{
				return _1aac7ea6e_callerLenComptime(_71768_d, (*(_1aac058e6_comptimeDecls((*(_7256_dest))._field_Type)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1be21dd96:;
			{
				_1aabbb35c_pushErr((*(_71726_e)).ptr(), (*((*((*(_71741_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be21b976:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aac80322_callerCapSlice(jule::Ptr<_1aabb8db5_Data>* _75724_expr, jule::Ptr<_1aabb8db5_Data>* _75742_d) {
	(*((*(_75742_d))))._field_Type=_1aabb7127_lenKind();
	(*((*(_75742_d))))._field_Model=jule::Any(jule::new_ptr<_1aaa36419_BuiltinCapCallExpr>(_1aaa36419_BuiltinCapCallExpr{._field_Expr=(*(_75724_expr))}), &__jule_any_type118);
	return (*(_75742_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac80751_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _76526_e, jule::Ptr<_1aa106875_FnCallExpr>* _76541_fc, jule::Ptr<_1aabb8db5_Data>* _76568_d) {
	if (((*((*(_76541_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_76526_e)).ptr(), (*((*(_76541_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_76541_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr((*(_76526_e)).ptr(), (*((*((*(_76541_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aabb8db5_Data> _7736_dest = _1aabdad3d_evalExpr((*(_76526_e)), (*((*(_76541_fc))))._field_Args[0LL]);;
	{
		
		if ((_7736_dest == nullptr)) {
			_case_begin_1be23179e:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7736_dest))._field_Decl) {
			_case_begin_1be23363b:;
			{
				_1aabbb35c_pushErr((*(_76526_e)).ptr(), (*((*((*(_76541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1aac02030_Slc((*_7736_dest.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1be2336a2:;
			{
				return _1aac80322_callerCapSlice(&(_7736_dest), _76568_d);;
			}
		}
		else {
			_case_begin_1be2313b4:;
			{
				_1aabbb35c_pushErr((*(_76526_e)).ptr(), (*((*((*(_76541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be23036e:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aac80c3a_callerDeleteMap(jule::Ptr<_1aabbad84_eval>* _78825_e, jule::Ptr<_1aa106875_FnCallExpr>* _78840_fc, jule::Ptr<_1aabb8db5_Data>* _78867_expr, jule::Ptr<_1aabb8db5_Data>* _78885_d) {
	if ((!((*((*(_78867_expr))))._field_Mutable))) {
		_1aabbb35c_pushErr((*(_78825_e)).ptr(), (*((*((*(_78840_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_78885_d))=_1aabe7432_buildVoidData();
	jule::Ptr<_1aaa367e3_BuiltinDeleteCallExpr> _7936_model = jule::new_ptr<_1aaa367e3_BuiltinDeleteCallExpr>(_1aaa367e3_BuiltinDeleteCallExpr{._field_Dest=(*(_78867_expr)), ._field_Key=jule::Ptr<_1aabb8db5_Data>(nullptr)});;
	if (((*((*(_78840_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1aabb8db5_Data> _7977_key = _1aabdad3d_evalExpr((*(_78825_e)), (*((*(_78840_fc))))._field_Args[1LL]);;
		{
			
			if ((_7977_key == nullptr)) {
				_case_begin_1be239741:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7977_key))._field_Decl) {
				_case_begin_1be2397a7:;
				{
					_1aabbb35c_pushErr((*(_78825_e)).ptr(), (*((*((*(_78840_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1be238311:;
				{
					;
					jule::Ptr<_1aabecdb6_Type> _8068_keyType = (*(_1aac02d00_Map((*((*(_78867_expr))))._field_Type.ptr())))._field_Key;;
					if ((!(_1aab57a24_checkAssignType((*((*(_78825_e))))._field_s, false, &(_8068_keyType), &(_7977_key), (*((*((*(_78840_fc))))._field_Args[1LL]))._field_Token, _1aabbe393_getOwnerRefers((*(_78825_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1be23829a:;
		};
		(*(_7936_model))._field_Key=_7977_key;
	};
	(*((*(_78885_d))))._field_Model=jule::Any(_7936_model, &__jule_any_type28);
	return (*(_78885_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac81169_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _81729_e, jule::Ptr<_1aa106875_FnCallExpr>* _81744_fc, jule::Ptr<_1aabb8db5_Data>* _81771_d) {
	if (((*((*(_81744_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_81729_e)).ptr(), (*((*(_81744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_81744_fc))))._field_Args.len() > 2LL)) {
		_1aabbb35c_pushErr((*(_81729_e)).ptr(), (*((*((*(_81744_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aabb8db5_Data> _8256_dest = _1aabdad3d_evalExpr((*(_81729_e)), (*((*(_81744_fc))))._field_Args[0LL]);;
	{
		
		if ((_8256_dest == nullptr)) {
			_case_begin_1be241d42:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8256_dest))._field_Decl) {
			_case_begin_1be241da8:;
			{
				_1aabbb35c_pushErr((*(_81729_e)).ptr(), (*((*((*(_81744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1aac02d00_Map((*_8256_dest.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1be241e1e:;
			{
				return _1aac80c3a_callerDeleteMap(_81729_e, _81744_fc, &(_8256_dest), _81771_d);;
			}
		}
		else {
			_case_begin_1be240c20:;
			{
				_1aabbb35c_pushErr((*(_81729_e)).ptr(), (*((*((*(_81744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be23cec5:;
	};
}



inline jule::Ptr<_1aabb8db5_Data> _1aac81598_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _84040_e, jule::Ptr<_1aa106875_FnCallExpr>* _84055_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	if (((*((*(_84055_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_84040_e)).ptr(), (*((*(_84055_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_84055_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aabb8db5_Data> _8496_d = _1aabda029_evalExprKind((*(_84040_e)), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8496_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aaa3e2ce_FnIns> _8532_f = _1aac022b6_Fn((*(_8496_d))._field_Type.ptr());;
	if ((_8532_f != nullptr)) {
		if (_1aaa40797_IsBuiltin(_8532_f)) {
			_1aabbb35c_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8532_f.alloc)._field_Generics.len() != (*((*_8532_f.alloc)._field_Decl))._field_Generics.len())) {
			_1aabbb35c_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1aa969605_StructIns> _8642_s = _1aac0254c_Struct((*(_8496_d))._field_Type);;
	if (((_8642_s != nullptr) && ((*_8642_s.alloc)._field_Generics.len() != (*((*_8642_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1aabbb35c_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1aac0331c_comptime((*(_8496_d))._field_Type)) {
		_1aabbb35c_pushErr((*(_84040_e)).ptr(), (*((*((*(_84055_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_8496_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1aaae56c6_buildComptimeTypeInfoData(&((*((*(_84040_e))))._field_s), &((*_8496_d.alloc)._field_Type));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac819c7_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _87641_e, jule::Ptr<_1aa106875_FnCallExpr>* _87656_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	if (((*((*(_87656_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_87641_e)).ptr(), (*((*(_87656_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_87656_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr((*(_87641_e)).ptr(), (*((*((*(_87656_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aabb8db5_Data> _8846_d = _1aabdad3d_evalExpr((*(_87641_e)), (*((*(_87656_fc))))._field_Args[0LL]);;
	if ((_8846_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aabb7479_isGoodValueToInfer(&(_8846_d))))) {
		_1aabbb35c_pushErr((*(_87641_e)).ptr(), (*((*((*(_87656_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_8846_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1aaae5a17_buildComptimeValue(&(_8846_d));;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac81e06_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _89638_e, jule::Ptr<_1aa106875_FnCallExpr>* _89653_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	if (((*((*(_89653_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_89638_e)).ptr(), (*((*((*(_89653_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aa9b96cc_Const> _9006_constant = static__1aaa22c30_NewI64(static_cast<jule::I64>((*((*((*(_89653_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac77acd_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9006_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9006_constant});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac82577_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _90838_e, jule::Ptr<_1aa106875_FnCallExpr>* _90853_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	if (((*((*(_90853_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_90838_e)).ptr(), (*((*((*(_90853_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaadbc3e_comptimeFile>(_1aaadbc3e_comptimeFile{._field_file=(*((*((*(_90838_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac829a6_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _92139_e, jule::Ptr<_1aa106875_FnCallExpr>* _92154_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	if (((*((*(_92154_fc))))._field_Args.len() > 0LL)) {
		_1aabbb35c_pushErr((*(_92139_e)).ptr(), (*((*((*(_92154_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aaada2c0_comptimeFiles>(_1aaada2c0_comptimeFiles{._field_files=(*((*((*(_92139_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac82dd5_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _93443_e, jule::Ptr<_1aa106875_FnCallExpr>* _93458_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	if (((*((*(_93458_fc))))._field_Args.len() > 2LL)) {
		_1aabbb35c_pushErr((*(_93443_e)).ptr(), (*((*((*(_93458_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_93458_fc))))._field_Args.len() == 0LL)) {
		_1aabbb35c_pushErr((*(_93443_e)).ptr(), (*((*(_93458_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_93458_fc))))._field_Args.len() == 1LL)) {
		_1aabbb35c_pushErr((*(_93443_e)).ptr(), (*((*(_93458_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_93458_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1be260558:;
			{
				goto _match_end_1be26101a;
			}
		}
		else {
			_case_begin_1be261092:;
			{
				_1aabbb35c_pushErr((*(_93443_e)).ptr(), (*((*((*(_93458_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1aabbb6c0_pushSuggestion((*(_93443_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1be26101a:;
	};
	jule::Ptr<_1aa0d7ceb_Token> _9556_ident = (*((*((*((*(_93458_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1aa104466_IdentExpr>(&__jule_any_type41)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_93443_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1)) {
			_case_begin_1be26354a:;
			{
				goto _match_end_1be26377b;
			}
		}
		else {
			_case_begin_1be2637e2:;
			{
				_1aabbb35c_pushErr((*(_93443_e)).ptr(), (*((*(_93458_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1be26377b:;
	};
	jule::Ptr<_1aab05032_scopeChecker> _9646_sc = (*((*(_93443_e))))._field_lookup.cast_ptr<_1aab05032_scopeChecker>((jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data1);;
	jule::Ptr<_1aabec1a1_TypeAlias> _9656_alias = jule::new_ptr<_1aabec1a1_TypeAlias>(_1aabec1a1_TypeAlias{._field_Scope=(*(_9646_sc))._field_tree, ._field_Strict=false, ._field_Public=_1aab493b7_IsPub((*(_9556_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9556_ident, ._field_Ident=(*_9556_ident.alloc)._field_Kind, ._field_TypeSym=jule::new_ptr<_1aac062ba_TypeSym>(_1aac062ba_TypeSym{._field_Decl=jule::Ptr<_1aa0ed817_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1aabecdb6_Type>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>(nullptr)});;
	jule::Ptr<_1aabb8db5_Data> _9756_t = _1aabda36a_eval1((*(_93443_e)), (*((*(_93458_fc))))._field_Args[1LL]);;
	if ((_9756_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9756_t))._field_Decl) {
		(*((*(_9656_alias))._field_TypeSym))._field_Type=(*_9756_t.alloc)._field_Type;
	} else {
		jule::Ptr<_1aaad1052_comptimeTypeInfo> _9827_cti = _1aac04b26_comptimeTypeInfo((*(_9756_t))._field_Type.ptr());;
		if ((_9827_cti == nullptr)) {
			_1aabbb35c_pushErr((*(_93443_e)).ptr(), (*((*((*(_93458_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1aabbb6c0_pushSuggestion((*(_93443_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9656_alias))._field_TypeSym))._field_Type=(*(_9827_cti))._field_base;
	};
	_1aab0a19c_checkTypeAlias(_9646_sc, &(_9656_alias));
	return _1aabe7432_buildVoidData();;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac83314_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _99435_e, jule::Ptr<_1aa106875_FnCallExpr>* _99450_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<_1aabb8db5_Data> _9956_result = jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac77715_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
	if (((*((*(_99450_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_99435_e)).ptr(), (*((*(_99450_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9956_result;;
	};
	if (((*((*(_99450_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr((*(_99435_e)).ptr(), (*((*((*(_99450_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aabb8db5_Data> _10076_d = _1aabda029_evalExprKind((*(_99435_e)), (*((*((*(_99450_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10076_d == nullptr)) {
		return _9956_result;;
	};
	if ((!(_1aac214c2_validTypeForXof(&((*(_10076_d))._field_Type))))) {
		_1aabbb35c_pushErr((*(_99435_e)).ptr(), (*((*((*(_99450_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*_10076_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9956_result))._field_Model=jule::Any(jule::new_ptr<_1aaa37393_SizeofExpr>(_1aaa37393_SizeofExpr{._field_Expr=jule::Any((*(_10076_d))._field_Type, &__jule_any_type85)}), &__jule_any_type119);
	return _9956_result;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac83743_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _101936_e, jule::Ptr<_1aa106875_FnCallExpr>* _101951_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<_1aabb8db5_Data> _10206_result = jule::new_ptr<_1aabb8db5_Data>(_1aabb8db5_Data{._field_untyped=false, ._field_Type=_1aac77715_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1aa9b96cc_Const>(nullptr)});;
	if (((*((*(_101951_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_101936_e)).ptr(), (*((*(_101951_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _10206_result;;
	};
	if (((*((*(_101951_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr((*(_101936_e)).ptr(), (*((*((*(_101951_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aabb8db5_Data> _10326_d = _1aabda029_evalExprKind((*(_101936_e)), (*((*((*(_101951_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10326_d == nullptr)) {
		return _10206_result;;
	};
	if ((!(_1aac214c2_validTypeForXof(&((*(_10326_d))._field_Type))))) {
		_1aabbb35c_pushErr((*(_101936_e)).ptr(), (*((*((*(_101951_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*_10326_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	(*(_10206_result))._field_Model=jule::Any(jule::new_ptr<_1aaa37a47_AlignofExpr>(_1aaa37a47_AlignofExpr{._field_Expr=jule::Any((*(_10326_d))._field_Type, &__jule_any_type85)}), &__jule_any_type120);
	return _10206_result;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac83b72_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _104433_e, jule::Ptr<_1aa106875_FnCallExpr>* _104448_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	if (((*((*(_104448_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_104433_e)).ptr(), (*((*(_104448_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104448_fc))))._field_Args.len() > 1LL)) {
		_1aabbb35c_pushErr((*(_104433_e)).ptr(), (*((*((*(_104448_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1aabb8db5_Data> _10536_d = _1aabdad3d_evalExpr((*(_104433_e)), (*((*(_104448_fc))))._field_Args[0LL]);;
	if ((_10536_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aac009ac_GC((*(_10536_d))._field_Type.ptr())))) {
		_1aabbb35c_pushErr((*(_104433_e)).ptr(), (*((*((*(_104448_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aabb8db5_Data> _10626_result = _1aabe7432_buildVoidData();;
	(*(_10626_result))._field_Model=jule::Any(jule::new_ptr<_1aaa383a5_FreeExpr>(_1aaa383a5_FreeExpr{._field_Expr=(*(_10536_d))._field_Model}), &__jule_any_type29);
	return _10626_result;;
}



inline jule::Ptr<_1aabb8db5_Data> _1aac840a1_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _106744_e, jule::Ptr<_1aa106875_FnCallExpr>* _106759_fc, jule::Ptr<_1aabb8db5_Data>* _106786_d) {
	if ((!(_1aabbbd52_isUnsafe((*(_106744_e)).ptr())))) {
		_1aabbb35c_pushErr((*(_106744_e)).ptr(), (*((*(_106759_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_106759_fc))))._field_Args.len() < 1LL)) {
		_1aabbb35c_pushErr((*(_106744_e)).ptr(), (*((*(_106759_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1aabb8db5_Data> _10776_argd = _1aabdad3d_evalExpr((*(_106744_e)), (*((*(_106759_fc))))._field_Args[0LL]);;
	if ((_10776_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1aac00ec9_Prim((*(_10776_argd))._field_Type.ptr()) == nullptr) || (!(_1aac0a18c_IsStr(_1aac00ec9_Prim((*(_10776_argd))._field_Type.ptr()).ptr()))))) {
		_1aabbb35c_pushErr((*(_106744_e)).ptr(), (*((*((*(_106759_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1aabed2b2_Str((*(_10776_argd))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1aabed2b2_Str((*(_10776_argd))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1aabb9800_IsConst(_10776_argd.ptr()))) || (!(_1aaa26eed_IsStr((*(_10776_argd))._field_Constant.ptr()))))) {
		_1aabbb35c_pushErr((*(_106744_e)).ptr(), (*((*((*(_106759_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aabb8db5_Data> _10926_r = _1aabe7432_buildVoidData();;
	jule::Ptr<_1aaa3e2ce_FnIns> _10946_f = _1aac022b6_Fn((*((*(_106786_d))))._field_Type.ptr());;
	if (((*(_10946_f))._field_Generics.len() > 0LL)) {
		(*(_10926_r))._field_Type=(*((*(_10946_f))._field_Generics[0LL]))._field_Type;
	};
	jule::Ptr<_1aaa380a8_BackendEmitExpr> _10996_model = jule::new_ptr<_1aaa380a8_BackendEmitExpr>(_1aaa380a8_BackendEmitExpr{._field_Code=_1aaa24902_ReadStr((*(_10776_argd))._field_Constant.ptr()), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_106759_fc))))._field_Args.len() > 1LL)) {
		(*(_10996_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_106759_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_106759_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1be29029c:;
			if (it != expr_end) {
				jule::Ptr<_1aa102b4b_Expr> _110515_arg = *it;
				{
					_10776_argd=_1aabda36a_eval1((*(_106744_e)), _110515_arg);
					if ((_10776_argd == nullptr)) {
						return nullptr;;
					};
					if ((*(_10776_argd))._field_Decl) {
						(*_10996_model.alloc)._field_Exprs=jule::append((*_10996_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_10776_argd.alloc)._field_Type, &__jule_any_type85); __jule_collection; }));
					} else {
						(*_10996_model.alloc)._field_Exprs=jule::append((*_10996_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10776_argd))._field_Model; __jule_collection; }));
					};
				}
				_iter_next_1be29029c:;
				++it;
				goto _iter_begin_1be29029c;
			}
			_iter_end_1be29029c:;
		};
	};
	(*(_10926_r))._field_Model=jule::Any(_10996_model, &__jule_any_type22);
	return _10926_r;;
}



inline jule::Ptr<_1ab57e7e1_FileInfo> _1ab5c9990_ParseFile(jule::Ptr<_1aa0dd8a1_Fileset> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab57e7e1_FileInfo> _276_finf = jule::new_ptr<_1ab57e7e1_FileInfo>(_1ab57e7e1_FileInfo{._field_Ast=jule::Ptr<_1aa0eb8ae_AST>(nullptr), ._field_Errors=jule::Slice<_1ace263b7_Log>(nullptr)});;
	({
		__jule_tuple_x_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log __jule_assign_result = _1ab5ca067_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log _1ab5ca067_parseFileset(jule::Ptr<_1aa0dd8a1_Fileset> _5521_f) {
	__jule_tuple_x_1aa0eb8ae_AST__jule_tuple_s_1ace263b7_Log __jule_func_result;
	jule::Ptr<_1ab5ea2da_parser> _566_p = jule::new_ptr<_1ab5ea2da_parser>(_1ab5ea2da_parser{._field_ast=jule::Ptr<_1aa0eb8ae_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>(nullptr), ._field_errors=jule::Slice<_1ace263b7_Log>(nullptr), ._field_ep=jule::Ptr<_1ab5d9e34_exprBuilder>(nullptr)});;
	_1ab60a31c_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1aa957978_ScopeTree> _1ab5ca8e7_newScope(void) {
	return jule::new_ptr<_1aa957978_ScopeTree>(_1aa957978_ScopeTree{._field_Parent=jule::Ptr<_1aa957978_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1aa957318_Stmt>(nullptr), ._field_End=jule::Ptr<_1aa0d7ceb_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1ab5cac7c_isSt(jule::Ptr<_1aa0d7ceb_Token> _149_current, jule::Ptr<_1aa0d7ceb_Token> _1433_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_149_current))._field_Id == static_cast<jule::U32>(3LLU)) || ((*(_1433_prev))._field_Row < (*(_149_current))._field_Row));
	__jule_func_result.__jule_result_arg1=((*(_149_current))._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ab5cb101_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _2026_tokens, jule::I32* _2052_i) {
	if ((((*(_2052_i)) > 1LL) && ((*((*(_2026_tokens))[((*(_2052_i)) - 2LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1aa0d7ceb_Token> _263_prev = (*(_2026_tokens))[((*(_2052_i)) - 1LL)];;
		return ((((*(_263_prev))._field_Id == static_cast<jule::U32>(17LLU)) || ((*(_263_prev))._field_Id == static_cast<jule::U32>(5LLU))) || (_1aa0d8846_IsBinOp((*(_263_prev))._field_Id) && ((*_263_prev.alloc)._field_Row < (*((*(_2026_tokens))[(*(_2052_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1ab5cb4b9_nextStPos(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _3415_tokens, jule::I32 _3440_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _356_braceN = 0LL;;
	jule::I32 _366_i = _3440_start;;
	for (; (_366_i < (*(_3415_tokens)).len()); (_366_i)++) {
		{
			jule::Bool _387_ok = false;;
			jule::Bool _397_terminated = false;;
			jule::Ptr<_1aa0d7ceb_Token> _403_tok = (*(_3415_tokens))[_366_i];;
			{
				auto &_match_expr{ (*(_403_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1be2dd8a0:;
					{
						if (((_356_braceN == 0LL) && (_366_i > _3440_start))) {
							if ((!(_1ab5cb101_prevIsIncompleteExpr(_3415_tokens, &(_366_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab5cac7c_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
									_387_ok = __jule_assign_result.__jule_result_arg0;
									_397_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_387_ok) {
									goto _julec_label_1be2e32de;
								};
							};
						};
						(_356_braceN)++;
						goto _iter_next_1be2dc43c;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1be2ddae2:;
					{
						(_356_braceN)--;
						if (((_356_braceN == 0LL) && ((_366_i + 1LL) < (*(_3415_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab5cac7c_isSt((*(_3415_tokens))[(_366_i + 1LL)], _403_tok);
								_387_ok = __jule_assign_result.__jule_result_arg0;
								_397_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_387_ok) {
								(_366_i)++;
								goto _julec_label_1be2e32de;
							};
						};
						goto _iter_next_1be2dc43c;
					}
				}
				_match_end_1be2dda48:;
			};
			if ((_356_braceN != 0LL)) {
				goto _iter_next_1be2dc43c;
			};
			if ((_366_i > _3440_start)) {
				if (_1ab5cb101_prevIsIncompleteExpr(_3415_tokens, &(_366_i))) {
					goto _iter_next_1be2dc43c;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab5cac7c_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab5cac7c_isSt(_403_tok, _403_tok);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_387_ok))) {
				goto _iter_next_1be2dc43c;
			};
			_julec_label_1be2e32de:;
			if (_397_terminated) {
				(_366_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _366_i;
			__jule_func_result.__jule_result_arg1 = _397_terminated;
			return __jule_func_result;;
		}
	_iter_next_1be2dc43c:;
	}
	_iter_end_1be2dc43c:;;
	__jule_func_result.__jule_result_arg0 = _366_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_bool _1ab5cb83d_skipSt(jule::I32* _9616_i, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _9628_tokens) {
	__jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _972_start = (*(_9616_i));;
	jule::Bool _986_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab5cb4b9_nextStPos(&(_9628_tokens), _972_start);
		(*(_9616_i)) = __jule_assign_result.__jule_result_arg0;
		_986_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _1006_stTokens = _9628_tokens.slice(_972_start, (*(_9616_i)));;
	if (_986_terminated) {
		if ((_1006_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1ab5cb83d_skipSt(_9616_i, _9628_tokens));
return __jule_func_result;;
		};
		(_1006_stTokens).mut_slice(0LL, (_1006_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1006_stTokens;
	__jule_func_result.__jule_result_arg1 = _986_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1ab5cbb6d_stmt>> _1ab5cc025_splitStmts(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _11720_tokens) {
	jule::Slice<jule::Ptr<_1ab5cbb6d_stmt>> _1186_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1ab5cbb6d_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1ab5cbb6d_stmt>(nullptr); __jule_collection; });;
	jule::I32 _1196_pos = 0LL;;
	while ((_1196_pos < (*(_11720_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _1217_stmt;
			jule::Bool _12113_terminated;
			({
				__jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_bool __jule_assign_result = _1ab5cb83d_skipSt(&(_1196_pos), (*(_11720_tokens)));
				_1217_stmt = __jule_assign_result.__jule_result_arg0;
				_12113_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1ab5cbb6d_stmt>> &__jule_push_dest = _1186_stmts; __jule_push_dest.push(jule::new_ptr<_1ab5cbb6d_stmt>(_1ab5cbb6d_stmt{._field_tokens=_1217_stmt, ._field_terminated=_12113_terminated})); };
		}
	_iter_next_1be2e5e18:;
	}
	_iter_end_1be2e5e18:;;
	return _1186_stmts;;
}



inline jule::Bool _1ab5e513c_isTypeOp(jule::U32* _83714_id) {
	return ((((*(_83714_id)) == static_cast<jule::U32>(65LLU)) || ((*(_83714_id)) == static_cast<jule::U32>(54LLU))) || ((*(_83714_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _1ab5e544a_isTypeRange(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _84421_tokens) {
	jule::Bool _8456_op = false;;
	{
		auto expr = _84421_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3d71a2:;
		if (it != expr_end) {
			jule::I32 _8466_i = it - expr->begin();
			jule::Ptr<_1aa0d7ceb_Token> _8469_token = *it;
			{
				if (((*(_8469_token))._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_8456_op) {
						return true;;
					};
					jule::I32 _8518_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _8528_lTokens = (*(_84421_tokens)).slice(_8466_i);;
					{
						auto expr = &(_8528_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be3d80d7:;
						if (it != expr_end) {
							jule::Ptr<_1aa0d7ceb_Token> _85311_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_85311_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_1be3d943a:;
										{
											(_8518_rangeN)++;
											goto _iter_next_1be3d80d7;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_1be3d9825:;
										{
											(_8518_rangeN)--;
											goto _iter_next_1be3d80d7;
										}
									}
									_match_end_1be3d9726:;
								};
								if ((_8518_rangeN == 0LL)) {
									return _1ab5e513c_isTypeOp(&((*(_85311_lToken))._field_Id));;
								};
							}
							_iter_next_1be3d80d7:;
							++it;
							goto _iter_begin_1be3d80d7;
						}
						_iter_end_1be3d80d7:;
					};
					return true;;
				};
				if ((!(_1ab5e513c_isTypeOp(&((*(_8469_token))._field_Id))))) {
					return false;;
				};
				_8456_op=true;
			}
			_iter_next_1be3d71a2:;
			++it;
			_8466_i++;
			goto _iter_begin_1be3d71a2;
		}
		_iter_end_1be3d71a2:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _1ab5e5714_getBlockExpr(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _87722_tokens) {
	jule::I32 _8786_braceN = 0LL;;
	jule::I32 _8796_skipToNextBraceClose = 0LL;;
	{
		auto expr = _87722_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3db34e:;
		if (it != expr_end) {
			jule::I32 _8806_i = it - expr->begin();
			jule::Ptr<_1aa0d7ceb_Token> _8809_tok = *it;
			{
				{
					auto &_match_expr{ (*(_8809_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1be3dc40a:;
						{
							if (((((*(_87722_tokens)).len() - _8806_i) > 1LL) && ((*((*(_87722_tokens))[(_8806_i + 1LL)]))._field_Id == static_cast<jule::U32>(72LLU)))) {
								(_8796_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1be3dc493:;
						{
							if (((_8786_braceN > 0LL) || (_8796_skipToNextBraceClose > 0LL))) {
								if ((_8796_skipToNextBraceClose > 0LL)) {
									(_8796_skipToNextBraceClose)--;
								};
								(_8786_braceN)++;
								goto _match_end_1be3dc33e;
							};
							return (*(_87722_tokens)).slice(0LL, _8806_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1be3dc509:;
						{
							(_8786_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1be3dc570:;
						{
							(_8786_braceN)--;
						}
					}
					_match_end_1be3dc33e:;
				};
			}
			_iter_next_1be3db34e:;
			++it;
			_8806_i++;
			goto _iter_begin_1be3db34e;
		}
		_iter_end_1be3db34e:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_sx_1aa0d7ceb_Token _1ab5e5acc_splitDelim(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _90920_tokens, jule::U32 _90945_delim) {
	__jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_sx_1aa0d7ceb_Token __jule_func_result;
	jule::I32 _9106_func = -1LL;;
	jule::I32 _9116_rangeN = 0LL;;
	jule::I32 _9126_i = 0LL;;
	for (; (_9126_i < (*(_90920_tokens)).len()); (_9126_i)++) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _9143_token = (*(_90920_tokens))[_9126_i];;
			{
				auto &_match_expr{ (*(_9143_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(29LLU)) {
					_case_begin_1be3e1d16:;
					{
						_9106_func=_9116_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1be3e1d8d:;
					{
						(_9116_rangeN)++;
						goto _iter_next_1be3e0771;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1be3e1e04:;
					{
						(_9116_rangeN)--;
						if ((_9106_func == _9116_rangeN)) {
							_9106_func=-1LL;
							if (((((*(_90920_tokens)).len() - _9126_i) > 1LL) && ((*((*(_90920_tokens))[(_9126_i + 1LL)]))._field_Id == static_cast<jule::U32>(8LLU)))) {
								(_9126_i)++;
								goto _iter_next_1be3e0771;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1be3e1e6a:;
					{
						(_9116_rangeN)--;
					}
				}
				_match_end_1be3e1a80:;
			};
			if ((((*(_9143_token))._field_Id == _90945_delim) && (_9116_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _9388_l = (*(_90920_tokens)).slice(0LL, _9126_i);;
				jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _9398_r = (*(_90920_tokens)).slice((_9126_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9388_l;
				__jule_func_result.__jule_result_arg1 = _9398_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1be3e0771:;
	}
	_iter_end_1be3e0771:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1ab5e5d96_findLowestPrecOp(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _94822_tokens) {
	jule::U8 _9536_prec = static_cast<jule::U8>(255LLU);;
	jule::I32 _9546_precPos = -1LL;;
	jule::I32 _9566_braceN = 0LL;;
	jule::Bool _9576_skipToNextBraceOpen = false;;
	{
		auto expr = _94822_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be3e7080:;
		if (it != expr_end) {
			jule::I32 _9586_i = it - expr->begin();
			jule::Ptr<_1aa0d7ceb_Token> *_9589_token = it;
			{
				{
					auto &_match_expr{ (*((*(_9589_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1be3e7db6:;
						{
							_9576_skipToNextBraceOpen=false;
							goto _case_begin_1be3e7e4e;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1be3e7e4e:;
						{
							(_9566_braceN)++;
							goto _iter_next_1be3e7080;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1be3e7eb5:;
						{
							(_9566_braceN)--;
							goto _iter_next_1be3e7080;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_1be3e802b:;
						{
							_9576_skipToNextBraceOpen=true;
							goto _iter_next_1be3e7080;
						}
					}
					_match_end_1be3e7cea:;
				};
				{
					
					if (_9576_skipToNextBraceOpen) {
						_case_begin_1be3e969d:;
						{
							goto _iter_next_1be3e7080;
						}
					}
					else if ((_9586_i == 0LL)) {
						_case_begin_1be3e9714:;
						{
							goto _iter_next_1be3e7080;
						}
					}
					else if ((_9566_braceN > 0LL)) {
						_case_begin_1be3e977a:;
						{
							goto _iter_next_1be3e7080;
						}
					}
					else if ((!(_1aa0d8846_IsBinOp((*((*(_9589_token))))._field_Id)))) {
						_case_begin_1be3e97e1:;
						{
							goto _iter_next_1be3e7080;
						}
					}
					_match_end_1be3e94a0:;
				};
				jule::Ptr<_1aa0d7ceb_Token> _9873_left = (*(_94822_tokens))[(_9586_i - 1LL)];;
				if ((_1aa0d8538_IsUnaryOp((*(_9873_left))._field_Id) || ((*(_9873_left))._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1be3e7080;
				};
				if (((_9586_i > 1LL) && ((*(_9873_left))._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_1aa0d7ceb_Token> _9954_lleft = (*(_94822_tokens))[(_9586_i - 2LL)];;
					if (((*(_9954_lleft))._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*((*(_9589_token))))._field_Id == static_cast<jule::U32>(65LLU)) || ((*((*(_9589_token))))._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_1be3e7080;
						};
					};
				};
				jule::U8 _10043_p = _1aa0d81a3_Prec((*(_9589_token)).ptr());;
				if (((_10043_p != 0LLU) && (_10043_p <= _9536_prec))) {
					_9536_prec=_10043_p;
					_9546_precPos=_9586_i;
				};
			}
			_iter_next_1be3e7080:;
			++it;
			_9586_i++;
			goto _iter_begin_1be3e7080;
		}
		_iter_end_1be3e7080:;
	};
	return _9546_precPos;;
}



inline jule::Ptr<_1aa104466_IdentExpr> _1ab5e6160_buildIdentExpr(jule::Ptr<_1aa0d7ceb_Token>* _101324_token) {
	return jule::new_ptr<_1aa104466_IdentExpr>(_1aa104466_IdentExpr{._field_Token=(*(_101324_token)), ._field_Ident=(*((*(_101324_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_int _1ab5e6429_getRangeExprTokens(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _102128_tokens) {
	__jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _10226_rangeN = 0LL;;
	jule::I32 _10236_i = ((*(_102128_tokens)).len() - 1LL);;
	for (; (_10236_i >= 0LL); (_10236_i)--) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _10253_tok = (*(_102128_tokens))[_10236_i];;
			{
				auto &_match_expr{ (*(_10253_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1be401441:;
					{
						(_10226_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1be401771:;
					{
						(_10226_rangeN)--;
					}
				}
				_match_end_1be4014b8:;
			};
			if ((_10226_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_102128_tokens)).slice(0LL, _10236_i);
				__jule_func_result.__jule_result_arg1 = _10226_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1be4009d4:;
	}
	_iter_end_1be4009d4:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10226_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1ab5e6803_isAnonFnHead(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _104418_tokens) {
	{
		auto &_match_expr{ (*((*(_104418_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1be400d36:;
			{
				if ((((*(_104418_tokens)).len() == 1LL) || ((*((*(_104418_tokens))[1LL]))._field_Id != static_cast<jule::U32>(29LLU)))) {
					goto _match_end_1be403531;
				};
				goto _case_begin_1be403674;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1be403674:;
			{
				if (((*((*(_104418_tokens))[((*(_104418_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U32>(73LLU))) {
					goto _match_end_1be403531;
				};
				return true;;
			}
		}
		_match_end_1be403531:;
	};
	return false;;
}



inline jule::Bool _1ab5e74a2_checkAssignTokens(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1aa0dc87d_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I32 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be492bb9:;
		if (it != expr_end) {
			jule::Ptr<_1aa0d7ceb_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1be4934e4:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1be49388a:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1be49378b:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1be494902:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1be494968:;
						{
							goto _iter_next_1be492bb9;
						}
					}
					else if (_1aa0dce11_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_1be4949ce:;
						{
							return true;;
						}
					}
					_match_end_1be49488b:;
				};
			}
			_iter_next_1be492bb9:;
			++it;
			goto _iter_begin_1be492bb9;
		}
		_iter_end_1be492bb9:;
	};
	return false;;
}



inline _1ace263b7_Log _1ab5e845e_makeErr(jule::I32 _1212_row, jule::I32 _1222_col, jule::Ptr<_1aa0dd8a1_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args) {
	return _1ace263b7_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_1212_row, ._field_Column=_1222_col, ._field_Path=(*((*(_1233_f))))._field_Path, ._field_Text=_1ace26829_Logf(_1253_fmt, _1273_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _1ab5e898c_range(jule::I32* _3015_i, jule::U32 _3023_open, jule::U32 _3040_close, jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _3063_tokens) {
	if (((*(_3015_i)) >= (*(_3063_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1aa0d7ceb_Token> _342_tok = (*(_3063_tokens))[(*(_3015_i))];;
	if (((*(_342_tok))._field_Id != _3023_open)) {
		return nullptr;;
	};
	((*(_3015_i)))++;
	jule::I32 _396_rangeN = 1LL;;
	jule::I32 _402_start = (*(_3015_i));;
	for (; ((_396_rangeN != 0LL) && ((*(_3015_i)) < (*(_3063_tokens)).len())); ((*(_3015_i)))++) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _423_token = (*(_3063_tokens))[(*(_3015_i))];;
			{
				auto &_match_expr{ (*(_423_token))._field_Id };
				
				if (_match_expr == _3023_open) {
					_case_begin_1be499907:;
					{
						(_396_rangeN)++;
					}
				}
				else if (_match_expr == _3040_close) {
					_case_begin_1be499c6a:;
					{
						(_396_rangeN)--;
					}
				}
				_match_end_1be499bd2:;
			};
		}
	_iter_next_1be498d24:;
	}
	_iter_end_1be498d24:;;
	return (*(_3063_tokens)).slice(_402_start, ((*(_3015_i)) - 1LL));;
}



inline __jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_sx_1aa0d7ceb_Token _1ab5e8c56_rangeLast(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _6019_tokens) {
	__jule_tuple_sx_1aa0d7ceb_Token__jule_tuple_sx_1aa0d7ceb_Token __jule_func_result;
	if (((*(_6019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _642_first = (*((*(_6019_tokens))[((*(_6019_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_642_first != static_cast<jule::U32>(73LLU)) && (_642_first != static_cast<jule::U32>(76LLU))) && (_642_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _706_braceN = 0LL;;
	jule::I32 _716_i = ((*(_6019_tokens)).len() - 1LL);;
	for (; (_716_i >= 0LL); (_716_i)--) {
		{
			jule::Ptr<_1aa0d7ceb_Token> _733_token = (*(_6019_tokens))[_716_i];;
			{
				auto &_match_expr{ (*(_733_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1be4a3889:;
					{
						(_706_braceN)++;
						goto _iter_next_1be4a2bc9;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1be4a3bb9:;
					{
						(_706_braceN)--;
					}
				}
				_match_end_1be4a3911:;
			};
			if ((_706_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_6019_tokens)).slice(0LL, _716_i);
				__jule_func_result.__jule_result_arg1 = (*(_6019_tokens)).slice(_716_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1be4a2bc9:;
	}
	_iter_end_1be4a2bc9:;;
	__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log _1ab5e920c_parts(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>* _9815_tokens, jule::U32 _9840_id, jule::Bool _9855_exprMust) {
	__jule_tuple_ssx_1aa0d7ceb_Token__jule_tuple_s_1ace263b7_Log __jule_func_result;
	if (((*(_9815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1026_rangeN = 0LL;;
	jule::I32 _1036_last = 0LL;;
	{
		auto expr = _9815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be4a5b11:;
		if (it != expr_end) {
			jule::I32 _1046_i = it - expr->begin();
			jule::Ptr<_1aa0d7ceb_Token> _1049_token = *it;
			{
				{
					auto &_match_expr{ (*(_1049_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1be4a79d1:;
						{
							(_1026_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1be4a7a58:;
						{
							(_1026_rangeN)--;
						}
					}
					else if (_match_expr == _9840_id) {
						_case_begin_1be4a7abe:;
						{
							if ((_1026_rangeN > 0LL)) {
								goto _iter_next_1be4a5b11;
							};
							if ((_9855_exprMust && ((_1046_i - _1036_last) <= 0LL))) {
								_1ace263b7_Log _1155_err = _1ab5e845e_makeErr((*(_1049_token))._field_Row, (*_1049_token.alloc)._field_Column, &((*_1049_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_1ace263b7_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1155_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last, _1046_i)); };
							_1036_last=(_1046_i + 1LL);
						}
					}
					_match_end_1be4a7915:;
				};
			}
			_iter_next_1be4a5b11:;
			++it;
			_1046_i++;
			goto _iter_begin_1be4a5b11;
		}
		_iter_end_1be4a5b11:;
	};
	if ((_1036_last < (*(_9815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1aa0d7ceb_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last)); };
	};
	return __jule_func_result;;
}



inline jule::U32 _1ab5e9493_getCloseOfBrace(jule::U32 _12820_left) {
	{
		auto &_match_expr{ _12820_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1be4aae9b:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1be4ab012:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1be4ab078:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_1be4a8b36:;
			{
				return _12820_left;;
			}
		}
		_match_end_1be4a8c13:;
	};
}



inline _1ace263b7_Log _1ab5e98c2_compilerErr(jule::Ptr<_1aa0d7ceb_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args) {
	return _1ace263b7_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_14117_token))))._field_Row, ._field_Column=(*((*(_14117_token))))._field_Column, ._field_Path=(*((*((*(_14117_token))))._field_File))._field_Path, ._field_Text=_1ace26829_Logf((*(_14140_fmt)), _14160_args), ._field_Line=_1aa0ded8b_GetRow((*((*(_14117_token))))._field_File, (*((*(_14117_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1ab5e9c68_pushSuggestion(_1ace263b7_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args) {
	(*(_15230_log))._field_Suggestion=_1ace26829_Logf(_15248_fmt, _15268_args);
}



inline jule::Ptr<_1aa0ed817_TypeDecl> _1ab60abd0_buildVoidType(void) {
	return jule::new_ptr<_1aa0ed817_TypeDecl>(_1aa0ed817_TypeDecl{._field_Token=jule::Ptr<_1aa0d7ceb_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1aa811348_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1be6605e5:;
			{
				__jule_func_result.__jule_result_arg0=_1ace295da_IsWindows(_1bb095ced_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1be66065b:;
			{
				__jule_func_result.__jule_result_arg0=_1ace298e8_IsDarwin(_1bb095ced_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1be6602c6:;
			{
				__jule_func_result.__jule_result_arg0=_1ace29bb2_IsLinux(_1bb095ced_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1be66033c:;
			{
				__jule_func_result.__jule_result_arg0=_1ace2a81c_IsUnix(_1bb095ced_OS);
			}
		}
		else {
			_case_begin_1be65ec32:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1be6601a5:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1aa811579_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1be662ac0:;
			{
				__jule_func_result.__jule_result_arg0=_1ace2a003_IsI386(_1bb0960a6_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1be662b36:;
			{
				__jule_func_result.__jule_result_arg0=_1ace2a289_IsAmd64(_1bb0960a6_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1be6627a1:;
			{
				__jule_func_result.__jule_result_arg0=_1ace2a553_IsArm64(_1bb0960a6_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1be662817:;
			{
				__jule_func_result.__jule_result_arg0=_1ace2ae38_Is64Bit(_1bb0960a6_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1be66287d:;
			{
				__jule_func_result.__jule_result_arg0=_1ace2abe6_Is32Bit(_1bb0960a6_Arch);
			}
		}
		else {
			_case_begin_1be66220c:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1be662680:;
	};
	return __jule_func_result;;
}



inline void _1aa812bda_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1bb095ced_OS); };
	if (_1ace2a81c_IsUnix(_1bb095ced_OS)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1aa812e60_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1bb0960a6_Arch); };
	if (_1ace2ae38_Is64Bit(_1bb0960a6_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1ace2abe6_Is32Bit(_1bb0960a6_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1aa81324b_initVars(jule::Slice<jule::Str>* _5518_vars, _1aa8128bb_CompileInfo* _5532_info) {
	_1aa812bda_setOsVars(_5518_vars);
	_1aa812e60_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1be6670e1:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1be666a5d:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1be6669e7:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1be666ae6:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1be668169:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1be6678d8:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1be6680d1:;
	};
}



inline jule::I32 _1aa813614_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident) {
	if ((_8425_ident).empty()) {
		return -1LL;;
	};
	{
		auto expr = &(_8412_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be669a0b:;
		if (it != expr_end) {
			jule::I32 _886_i = it - expr->begin();
			jule::Str *_889_var = it;
			{
				if (((*(_889_var)) == _8425_ident)) {
					return _886_i;;
				};
			}
			_iter_next_1be669a0b:;
			++it;
			_886_i++;
			goto _iter_begin_1be669a0b;
		}
		_iter_end_1be669a0b:;
	};
	return -1LL;;
}



inline jule::Slice<jule::U8> _1ab610003_readBuff(jule::Str _1713_path) {
	return ({
		auto except = static__1ad0a966b_Read(_1713_path);
		(except.ok()) ? (except.result) : ({{
			jule::println(_1acbbe47e_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_1ad142e41_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1ace263b7_Log _1ab610201_flatCompilerErr(jule::Str _2820_text) {
	return _1ace263b7_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_2820_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1aaa3b221_Fn> _1aac843c0_RuntimeFindFn(jule::Ptr<_1aab2ee08_ImportInfo>* _723_runtime, jule::Str _751_ident) {
	;
	jule::Ptr<_1aaa3b221_Fn> _96_f = _1aab31514_FindFn((*(_723_runtime)).ptr(), _751_ident, false);;
	if ((_96_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 108) + jule::Str("\nlocation: julec/obj/runtime.jule:11:3"));;
	};
	return _96_f;;
}



inline jule::Ptr<_1aa966767_Struct> _1aac84788_RuntimeFindStruct(jule::Ptr<_1aab2ee08_ImportInfo>* _1627_runtime, jule::Str _1655_ident) {
	;
	jule::Ptr<_1aa966767_Struct> _186_f = _1aab31118_FindStruct((*(_1627_runtime)).ptr(), _1655_ident, false);;
	if ((_186_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 106) + jule::Str("\nlocation: julec/obj/runtime.jule:20:3"));;
	};
	return _186_f;;
}



inline jule::Uintptr _1aac854ae_TypeData(jule::Any* _1414_m) {
	return ((jule::Uintptr)((*(((_1aac852c2_anyData*)(_1414_m))))._field_typePtr));;
}



inline jule::Bool _1aac85877_equalConst(jule::Ptr<_1aa9b96cc_Const> _1815_l, jule::Ptr<_1aa9b96cc_Const> _1836_r) {
	{
		
		if (_1aaa2674a_IsI64(_1815_l.ptr())) {
			_case_begin_1be6bae36:;
			{
				return (_1aaa2674a_IsI64(_1836_r.ptr()) && (_1aaa2414e_ReadI64(_1815_l) == _1aaa2414e_ReadI64(_1836_r)));;
			}
		}
		else if (_1aaa269d1_IsU64(_1815_l.ptr())) {
			_case_begin_1be6bae9c:;
			{
				return (_1aaa269d1_IsU64(_1836_r.ptr()) && (_1aaa243d5_ReadU64(_1815_l) == _1aaa243d5_ReadU64(_1836_r)));;
			}
		}
		else if (_1aaa27284_IsF64(_1815_l)) {
			_case_begin_1be6bb024:;
			{
				return (_1aaa27284_IsF64(_1836_r) && (_1aaa24b88_ReadF64(_1815_l) == _1aaa24b88_ReadF64(_1836_r)));;
			}
		}
		else if (_1aaa26eed_IsStr(_1815_l)) {
			_case_begin_1be6bb09b:;
			{
				return (_1aaa26eed_IsStr(_1836_r) && (_1aaa24902_ReadStr(_1815_l) == _1aaa24902_ReadStr(_1836_r)));;
			}
		}
		else if (_1aaa26c67_IsBool(_1815_l)) {
			_case_begin_1be6bb123:;
			{
				return (_1aaa26c67_IsBool(_1836_r) && (_1aaa2466b_ReadBool(_1815_l) == _1aaa2466b_ReadBool(_1836_r)));;
			}
		}
		else if (_1aaa2751a_IsNil(_1815_l)) {
			_case_begin_1be6bb2bb:;
			{
				return _1aaa2751a_IsNil(_1836_r);;
			}
		}
		else {
			_case_begin_1be6bad48:;
			{
				return false;;
			}
		}
		_match_end_1be6bac38:;
	};
}



inline jule::Bool _1aac85beb_equalCasting(jule::Ptr<_1aaa30633_CastingExpr> _3717_l, jule::Ptr<_1aaa30633_CastingExpr> _3740_r) {
	if ((!(_1aabed603_Equal((*(_3717_l))._field_Type, (*(_3740_r))._field_Type)))) {
		return false;;
	};
	return _1aac86b31_EqualModels((*((*(_3717_l))._field_Expr))._field_Model, (*(*(_3740_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1aac860b4_equalUnary(jule::Ptr<_1aaa2e4ab_UnaryExpr> _4415_l, jule::Ptr<_1aaa2e4ab_UnaryExpr> _4436_r) {
	if ((((*((*(_4415_l))._field_Op))._field_Id != (*(*(_4436_r))._field_Op.alloc)._field_Id) || ((*((*(_4415_l))._field_Op))._field_Kind != (*(*(_4436_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1aac86b31_EqualModels((*((*(_4415_l))._field_Expr))._field_Model, (*(*(_4436_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1aac86438_equalIndexing(jule::Ptr<_1aaa31865_IndexingExpr> _5118_l, jule::Ptr<_1aaa31865_IndexingExpr> _5142_r) {
	return (_1aac86b31_EqualModels((*((*(_5118_l))._field_Expr))._field_Model, (*(*(_5142_r))._field_Expr.alloc)._field_Model) && _1aac86b31_EqualModels((*((*_5118_l.alloc)._field_Index))._field_Model, (*(*(_5142_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1aac867ac_equalBinary(jule::Ptr<_1aaa2e0d2_BinaryExpr> _5616_l, jule::Ptr<_1aaa2e0d2_BinaryExpr> _5638_r) {
	if ((((*((*(_5616_l))._field_Op))._field_Id != (*(*(_5638_r))._field_Op.alloc)._field_Id) || ((*((*(_5616_l))._field_Op))._field_Kind != (*(*(_5638_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1aac86b31_EqualModels((*((*(_5616_l))._field_Left))._field_Model, (*(*(_5638_r))._field_Left.alloc)._field_Model) && _1aac86b31_EqualModels((*((*_5616_l.alloc)._field_Right))._field_Model, (*(*(_5638_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1aac86b31_EqualModels(jule::Any _6716_l, jule::Any _6731_r) {
	if ((_1aac854ae_TypeData(&(_6716_l)) != _1aac854ae_TypeData(&(_6731_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6716_l };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be6ca187:;
			{
				return (_6716_l.unsafe_cast_ptr<_1aab70795_Var>() == _6731_r.cast_ptr<_1aab70795_Var>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1be6ca660:;
			{
				jule::Ptr<_1aaa33a76_StructSubIdentExpr> _753_li = _6716_l.unsafe_cast_ptr<_1aaa33a76_StructSubIdentExpr>();;
				jule::Ptr<_1aaa33a76_StructSubIdentExpr> _763_ri = _6731_r.cast_ptr<_1aaa33a76_StructSubIdentExpr>(&__jule_any_type99);;
				return (((*(_753_li))._field_Field == (*(_763_ri))._field_Field) && _1aac86b31_EqualModels((*((*_753_li.alloc)._field_Expr))._field_Model, (*(*(_763_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1be6ca6c6:;
			{
				return _1aac85877_equalConst(_6716_l.unsafe_cast_ptr<_1aa9b96cc_Const>(), _6731_r.cast_ptr<_1aa9b96cc_Const>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1be6ca73c:;
			{
				return _1aac85beb_equalCasting(_6716_l.unsafe_cast_ptr<_1aaa30633_CastingExpr>(), _6731_r.cast_ptr<_1aaa30633_CastingExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1be6ca7a3:;
			{
				return _1aac860b4_equalUnary(_6716_l.unsafe_cast_ptr<_1aaa2e4ab_UnaryExpr>(), _6731_r.cast_ptr<_1aaa2e4ab_UnaryExpr>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1be6ca374:;
			{
				return _1aac86438_equalIndexing(_6716_l.unsafe_cast_ptr<_1aaa31865_IndexingExpr>(), _6731_r.cast_ptr<_1aaa31865_IndexingExpr>(&__jule_any_type43));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1be6ca3da:;
			{
				return _1aac867ac_equalBinary(_6716_l.unsafe_cast_ptr<_1aaa2e0d2_BinaryExpr>(), _6731_r.cast_ptr<_1aaa2e0d2_BinaryExpr>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1be6c9b48:;
			{
				return false;;
			}
		}
		_match_end_1be6c9ad2:;
	};
}



inline void _1ab614b1d_pushPasses(jule::Ptr<_1aab3267a_Package>* _12820_p, jule::Slice<jule::Str>* _12844_passes) {
	{
		auto expr = &((*((*(_12820_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6d05aa:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _12914_f = *it;
			{
				_julec_label_1be6d0c70:;
				{
					auto expr = &((*(_12914_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be6d11b0:;
					if (it != expr_end) {
						_1aab1e3d1_Pass _13110_pass = *it;
						{
							if ((_13110_pass._field_Text).empty()) {
								goto _iter_next_1be6d11b0;
							};
							{
								auto expr = _12844_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1be6d1996:;
								if (it != expr_end) {
									jule::Str _13511_cpass = *it;
									{
										if ((_13511_cpass == _13110_pass._field_Text)) {
											goto _iter_next_1be6d11b0;
										};
									}
									_iter_next_1be6d1996:;
									++it;
									goto _iter_begin_1be6d1996;
								}
								_iter_end_1be6d1996:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12844_passes)); __jule_push_dest.push(_13110_pass._field_Text); };
						}
						_iter_next_1be6d11b0:;
						++it;
						goto _iter_begin_1be6d11b0;
					}
					_iter_end_1be6d11b0:;
				};
			}
			_iter_next_1be6d05aa:;
			++it;
			goto _iter_begin_1be6d05aa;
		}
		_iter_end_1be6d05aa:;
	};
}



inline jule::Slice<jule::Str> _1ab614ed6_getAllUniquePasses(jule::Ptr<_1aab3267a_Package>* _14528_pkg, jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>> _14553_uses) {
	jule::Slice<jule::Str> _14610_passes = nullptr;;
	_1ab614b1d_pushPasses(_14528_pkg, &(_14610_passes));
	{
		auto expr = &(_14553_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6d2ba6:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _14914_u = *it;
			{
				if ((!((*(_14914_u))._field_Binded))) {
					_1ab614b1d_pushPasses(&((*_14914_u.alloc)._field_Package), &(_14610_passes));
				};
			}
			_iter_next_1be6d2ba6:;
			++it;
			goto _iter_begin_1be6d2ba6;
		}
		_iter_end_1be6d2ba6:;
	};
	return _14610_passes;;
}



inline _1aa8128bb_CompileInfo _1ab6151e5_buildCompileInfo(void) {
	_1aa8128bb_CompileInfo _1596_info = _1aa8128bb_CompileInfo{._field_Prod=_1bb09c40e_Production, ._field_Test=_1bb09ba4b_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _1bb099b37_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1be6d3e4e:;
			{
				_1596_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1be6d4092:;
			{
				_1596_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1be6d3ec6:;
	};
	{
		auto &_match_expr{ _1bb09b243_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1be6d412a:;
			{
				_1596_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1be6d4d1d:;
			{
				_1596_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1be6d459d:;
			{
				_1596_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1be6d50c6:;
	};
	return _1596_info;;
}



inline void _1ab61549d_pushRuntimeToAST(jule::Ptr<_1aa0eb8ae_AST>* _18426_f) {
	jule::Ptr<_1aa9608a4_UseDecl> _1856_decl = jule::new_ptr<_1aa9608a4_UseDecl>(_1aa9608a4_UseDecl{._field_Token=nullptr, ._field_Path=jule::new_ptr<_1aa0d7ceb_Token>(_1aa0d7ceb_Token{._field_File=jule::Ptr<_1aa0dd8a1_Fileset>(nullptr), ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str::lit("\"std/runtime\"", 13), ._field_Id=static_cast<jule::U32>(4LLU)}), ._field_Alias=nullptr, ._field_Binded=false});;
	{ jule::Slice<jule::Ptr<_1aa9608a4_UseDecl>> &__jule_push_dest = (*((*(_18426_f))))._field_UseDecls; __jule_push_dest.push(_1856_decl); };
	if (((*((*(_18426_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_18426_f))))._field_UseDecls[((*((*(_18426_f))))._field_UseDecls.len() - 1LL)]=(*((*(_18426_f))))._field_UseDecls[0LL];
		(*((*(_18426_f))))._field_UseDecls[0LL]=_1856_decl;
	};
}



inline void _1ab615c84_IterPackages(jule::Ptr<_1ab61326a_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1aab3267a_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6e5b20:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1be6e5b20:;
			++it;
			goto _iter_begin_1be6e5b20;
		}
		_iter_end_1be6e5b20:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1ab616009_IterFiles(jule::Ptr<_1aab3267a_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1aaa42524_SymTab>*> _1640_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be706eb6:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _1714_file = *it;
			{
				_1640_f(&(_1714_file));
			}
			_iter_next_1be706eb6:;
			++it;
			goto _iter_begin_1be706eb6;
		}
		_iter_end_1be706eb6:;
	};
}



inline void _1ab6162e5_IterTraitMethods(jule::Ptr<_1aaa46935_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1aaa3b221_Fn>*> _2443_f) {
	{
		auto expr = &((*((*(_2426_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be707ba9:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _2514_m = *it;
			{
				_2443_f(&(_2514_m));
			}
			_iter_next_1be707ba9:;
			++it;
			goto _iter_begin_1be707ba9;
		}
		_iter_end_1be707ba9:;
	};
	{
		auto expr = &((*((*(_2426_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be708182:;
		if (it != expr_end) {
			jule::Ptr<_1aac062ba_TypeSym> _2814_inh = *it;
			{
				jule::Ptr<_1aaa46935_Trait> _297_it = _1aac02a69_Trait((*(_2814_inh))._field_Type.ptr());;
				_1ab6162e5_IterTraitMethods(&(_297_it), _2443_f);
			}
			_iter_next_1be708182:;
			++it;
			goto _iter_begin_1be708182;
		}
		_iter_end_1be708182:;
	};
}



inline jule::Bool _1ab618528_IsForwarded(jule::Ptr<_1aaaec832_Scope>* _1117_s) {
	jule::Any _122_last = (*((*(_1117_s))))._field_Stmts[((*((*(_1117_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _122_last };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1be7309b2:;
			{
				{
					auto &_match_expr{ (*(_122_last.cast_ptr<_1aabb8db5_Data>(&__jule_any_type21)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1be7311aa:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1be7317d7:;
						{
							return false;;
						}
					}
					_match_end_1be731771:;
				};
			}
		}
		else {
			_case_begin_1be730b38:;
			{
				return true;;
			}
		}
		_match_end_1be730ac2:;
	};
}



inline jule::Bool _1ab618836_IsExprComesFromBind(jule::Ptr<_1aabb8db5_Data>* _2725_d) {
	{
		auto &_match_expr{ (*((*(_2725_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be732420:;
			{
				return (*((*((*(_2725_d))))._field_Model.unsafe_cast_ptr<_1aab70795_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1be7324a8:;
			{
				return _1ab619c99_IsStructBinded((*((*((*(_2725_d))))._field_Model.unsafe_cast_ptr<_1aaa33a76_StructSubIdentExpr>()))._field_Owner);;
			}
		}
		else {
			_case_begin_1be730d58:;
			{
				return false;;
			}
		}
		_match_end_1be730ce2:;
	};
}



inline jule::Bool _1ab618b00_IsAny(jule::Ptr<_1aabecdb6_Type>* _3915_t) {
	if ((_1aac01a13_TypeEnum((*(_3915_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1aac06bc2_Prim> _432_prim = _1aac00ec9_Prim((*(_3915_t)).ptr());;
	return ((_432_prim != nullptr) && _1aac0a423_IsAny(_432_prim.ptr()));;
}



inline jule::Bool _1ab618e41_IsClosure(jule::Ptr<_1aaa31d1b_AnonFnExpr>* _4815_m) {
	return ((*((*(_4815_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1ab619282_IsTraitMethod(jule::Ptr<_1aa969605_StructIns>* _5123_owner, jule::Ptr<_1aaa3e2ce_FnIns>* _5149_f) {
	{
		auto expr = &((*((*((*(_5123_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be735940:;
		if (it != expr_end) {
			jule::Ptr<_1aaa46935_Trait> _5214_t = *it;
			{
				if ((_1aaa47617_FindMethod(_5214_t.ptr(), (*((*((*(_5149_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1be735940:;
			++it;
			goto _iter_begin_1be735940;
		}
		_iter_end_1be735940:;
	};
	return false;;
}



inline jule::Bool _1ab619606_IsStdPackage(jule::Str _6517_f, jule::Str _6525_p) {
	return _1bb08556d_HasPrefix(_6517_f, _1bb0916de_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1bb095209_PathStdlib; (*it++) = _6525_p; __jule_collection; })));;
}



inline jule::Bool _1ab619c99_IsStructBinded(jule::Ptr<_1aa969605_StructIns> _7919_s) {
	if ((*((*(_7919_s))._field_Decl))._field_Binded) {
		return true;;
	};
	if (((*(_7919_s))._field_Source != nullptr)) {
		{
			auto &_match_expr{ (*((*(_7919_s))._field_Source))._field_Kind };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
				_case_begin_1be738b0d:;
				{
					return _1ab619c99_IsStructBinded((*(*(_7919_s))._field_Source.alloc)._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0));;
				}
			}
			_match_end_1be738a86:;
		};
	};
	return false;;
}



inline jule::Ptr<_1aa0ecc34_Directive> _1ab61a4e7_FindDirective(jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>* _923_directives, jule::Str _954_tag) {
	{
		auto expr = _923_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be73915d:;
		if (it != expr_end) {
			jule::Ptr<_1aa0ecc34_Directive> _1014_dr = *it;
			{
				if (((*((*(_1014_dr))._field_Tag))._field_Kind == _954_tag)) {
					return _1014_dr;;
				};
			}
			_iter_next_1be73915d:;
			++it;
			goto _iter_begin_1be73915d;
		}
		_iter_end_1be73915d:;
	};
	return nullptr;;
}



inline jule::Bool _1ab61a8b0_HasDirective(jule::Slice<jule::Ptr<_1aa0ecc34_Directive>>* _1918_directives, jule::Str _1949_tag) {
	return (_1ab61a4e7_FindDirective(_1918_directives, _1949_tag) != nullptr);;
}



inline jule::I32 _1ab61b3e9_FindTraitTypeOffsetS(jule::Ptr<_1aaa46935_Trait> _3725_t, jule::Ptr<_1aa969605_StructIns> _3746_s) {
	if (((*(_3725_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _416_i = 0LL;;
	{
		auto expr = &((*(_3725_t))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be73d41a:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> *_429_si = it;
			{
				if (((*(_3746_s))._field_Decl == (*(_429_si)))) {
					{
						auto expr = &((*((*(_429_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be73e394:;
						if (it != expr_end) {
							jule::Ptr<_1aa969605_StructIns> *_4411_ins = it;
							{
								if (((*(_4411_ins)) == _3746_s)) {
									return _416_i;;
								};
								(_416_i)++;
							}
							_iter_next_1be73e394:;
							++it;
							goto _iter_begin_1be73e394;
						}
						_iter_end_1be73e394:;
					};
					goto _iter_end_1be73d41a;
				} else {
					_416_i+=(*(*(_429_si)).alloc)._field_Instances.len();
				};
			}
			_iter_next_1be73d41a:;
			++it;
			goto _iter_begin_1be73d41a;
		}
		_iter_end_1be73d41a:;
	};
	return -1LL;;
}



inline jule::I32 _1ab61b76d_FindTraitTypeOffset(jule::Ptr<_1aaa46935_Trait> _6024_t, jule::Ptr<_1aabecdb6_Type> _6045_k) {
	if (((*(_6024_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1aa969605_StructIns> _6410_s = nullptr;;
	{
		auto &_match_expr{ (*(_6045_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)) {
			_case_begin_1be741022:;
			{
				_6045_k=(*((*(_6045_k))._field_Kind.cast_ptr<_1aac0a6ed_Sptr>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)))._field_Elem;
				{
					auto &_match_expr{ (*(_6045_k))._field_Kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
						_case_begin_1be742100:;
						{
							_6410_s=(*_6045_k.alloc)._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);
						}
					}
					_match_end_1be742078:;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
			_case_begin_1be740c47:;
			{
				_6410_s=(*(_6045_k))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);
			}
		}
		_match_end_1be740e89:;
	};
	if ((_6410_s == nullptr)) {
		return -1LL;;
	};
	return _1ab61b3e9_FindTraitTypeOffsetS(_6024_t, _6410_s);;
}



inline jule::Ptr<_1aaa3e2ce_FnIns> _1ab61bae2_FindFnGenericInstance(jule::Ptr<_1aaa3b221_Fn>* _8431_f, jule::Slice<jule::Ptr<_1aabecdb6_Type>> _8445_generics) {
	_julec_label_1be7433ed:;
	{
		auto expr = &((*((*(_8431_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be74392b:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3e2ce_FnIns> _8614_ins = *it;
			{
				{
					auto expr = &((*(_8614_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be7443bb:;
					if (it != expr_end) {
						jule::I32 _877_i = it - expr->begin();
						{
							if ((!(_1aabed603_Equal((*((*(_8614_ins))._field_Generics[_877_i]))._field_Type, _8445_generics[_877_i])))) {
								goto _iter_next_1be74392b;
							};
						}
						_iter_next_1be7443bb:;
						++it;
						_877_i++;
						goto _iter_begin_1be7443bb;
					}
					_iter_end_1be7443bb:;
				};
				return _8614_ins;;
			}
			_iter_next_1be74392b:;
			++it;
			goto _iter_begin_1be74392b;
		}
		_iter_end_1be74392b:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:94:2"));;
}



inline jule::Ptr<_1aa969605_StructIns> _1ab61be66_FindStructGenericInstance(jule::Ptr<_1aa966767_Struct>* _10035_s, jule::Slice<jule::Ptr<_1aabecdb6_Type>> _10053_generics) {
	_julec_label_1be743c5b:;
	{
		auto expr = &((*((*(_10035_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7459d8:;
		if (it != expr_end) {
			jule::Ptr<_1aa969605_StructIns> _10214_ins = *it;
			{
				{
					auto expr = &((*(_10214_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be746478:;
					if (it != expr_end) {
						jule::I32 _1037_i = it - expr->begin();
						{
							if ((!(_1aabed603_Equal((*((*(_10214_ins))._field_Generics[_1037_i]))._field_Type, _10053_generics[_1037_i])))) {
								goto _iter_next_1be7459d8;
							};
						}
						_iter_next_1be746478:;
						++it;
						_1037_i++;
						goto _iter_begin_1be746478;
					}
					_iter_end_1be746478:;
				};
				return _10214_ins;;
			}
			_iter_next_1be7459d8:;
			++it;
			goto _iter_begin_1be7459d8;
		}
		_iter_end_1be7459d8:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:110:2"));;
}



inline jule::Ptr<_1aab2ee08_ImportInfo> _1ab61c3ea_SelectImport(jule::Slice<jule::Ptr<_1aab2ee08_ImportInfo>> _11521_imports, jule::Str _11551_linkpath) {
	{
		auto expr = &(_11521_imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be745d90:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> _11614_imp = *it;
			{
				if (((*(_11614_imp))._field_LinkPath == _11551_linkpath)) {
					return _11614_imp;;
				};
			}
			_iter_next_1be745d90:;
			++it;
			goto _iter_begin_1be745d90;
		}
		_iter_end_1be745d90:;
	};
	return nullptr;;
}



inline jule::I32 _1ab61c6e7_FindVar(jule::Ptr<_1aab70795_Var> _12512_v, jule::Slice<jule::Ptr<_1aab70795_Var>> _12527_vars) {
	{
		auto expr = &(_12527_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be747c1b:;
		if (it != expr_end) {
			jule::I32 _1266_i = it - expr->begin();
			jule::Ptr<_1aab70795_Var> *_1269_v2 = it;
			{
				if ((_12512_v == (*(_1269_v2)))) {
					return _1266_i;;
				};
			}
			_iter_next_1be747c1b:;
			++it;
			_1266_i++;
			goto _iter_begin_1be747c1b;
		}
		_iter_end_1be747c1b:;
	};
	return -1LL;;
}



inline jule::Str _1ab61c9b1_GetBindIdent(jule::Ptr<_1aabecdb6_Type> _13617_t) {
	{
		auto &_match_expr{ (*(_13617_t))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)) {
			_case_begin_1be748c0b:;
			{
				jule::Ptr<_1aa969605_StructIns> _1393_s = (*(_13617_t))._field_Kind.cast_ptr<_1aa969605_StructIns>((jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0);;
				if ((*((*(_1393_s))._field_Decl))._field_Binded) {
					return (*(*(_1393_s))._field_Decl.alloc)._field_Ident;;
				};
				if (((*(_1393_s))._field_Source != nullptr)) {
					return _1ab61c9b1_GetBindIdent((*_1393_s.alloc)._field_Source);;
				};
			}
		}
		_match_end_1be748b95:;
	};
	return jule::Str();;
}



inline jule::Bool _1be6ec165_isOrdered(jule::Ptr<_1aab70795_Var>* _1418_t, jule::Slice<jule::Ptr<_1aab70795_Var>> _1425_s) {
	_julec_label_1be6ee024:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be6ee486:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1be6eece4:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1be6ee486;
							};
						}
					}
					_match_end_1be6eec39:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be7004a9:;
					if (it != expr_end) {
						jule::Ptr<_1aab70795_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1be6ee486;
							};
						}
						_iter_next_1be7004a9:;
						++it;
						goto _iter_begin_1be7004a9;
					}
					_iter_end_1be7004a9:;
				};
				return false;;
			}
			_iter_next_1be6ee486:;
			++it;
			goto _iter_begin_1be6ee486;
		}
		_iter_end_1be6ee486:;
	};
	return true;;
}

inline jule::Bool _1be702c5e_isOrdered(jule::Ptr<_1aa966767_Struct>* _1418_t, jule::Slice<jule::Ptr<_1aa966767_Struct>> _1425_s) {
	_julec_label_1be704ac9:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be70503b:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be7059cb:;
					if (it != expr_end) {
						jule::Ptr<_1aa966767_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1be70503b;
							};
						}
						_iter_next_1be7059cb:;
						++it;
						goto _iter_begin_1be7059cb;
					}
					_iter_end_1be7059cb:;
				};
				return false;;
			}
			_iter_next_1be70503b:;
			++it;
			goto _iter_begin_1be70503b;
		}
		_iter_end_1be70503b:;
	};
	return true;;
}



inline void _1be6e93a4_order(jule::Slice<jule::Ptr<_1aab70795_Var>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_1be6e987c:;
	jule::I32 _406_j = _386_i;;
	_julec_label_1be6ea5a3:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1aab70795_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1be6eb7e6:;
				if (it != expr_end) {
					jule::Ptr<_1aab70795_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1be6eab58;
						};
					}
					_iter_next_1be6eb7e6:;
					++it;
					goto _iter_begin_1be6eb7e6;
				}
				_iter_end_1be6eb7e6:;
			};
			if (_1be6ec165_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1be6eab58:;
	}
	_iter_end_1be6eab58:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1be6e987c;
	};
}

inline void _1be6e9ad0_order(jule::Slice<jule::Ptr<_1aa966767_Struct>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_1be6e9c23:;
	jule::I32 _406_j = _386_i;;
	_julec_label_1be6eea19:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1aa966767_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1be7023e0:;
				if (it != expr_end) {
					jule::Ptr<_1aa966767_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1be701752;
						};
					}
					_iter_next_1be7023e0:;
					++it;
					goto _iter_begin_1be7023e0;
				}
				_iter_end_1be7023e0:;
			};
			if (_1be702c5e_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1be701752:;
	}
	_iter_end_1be701752:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1be6e9c23;
	};
}



inline void _1be902458_Reverse(jule::Slice<jule::Any> _7327_s) {
	jule::I32 _7413_j = (_7327_s.len() - 1LL);;
	jule::I32 _746_i = 0LL;;
	for (; (_746_i < _7413_j); ({
		jule::I32 ___jule_assign_arg = (_746_i + 1LL);
		jule::I32 _1___jule_assign_arg = (_7413_j - 1LL);
		_746_i = ___jule_assign_arg;
		_7413_j = _1___jule_assign_arg;
	})) {
		{
			std::swap(_7327_s[_746_i], _7327_s[_7413_j]);
		}
	_iter_next_1be903129:;
	}
	_iter_end_1be903129:;;
}

inline void _1c024b037_Reverse(jule::Slice<jule::U8> _7327_s) {
	jule::I32 _7413_j = (_7327_s.len() - 1LL);;
	jule::I32 _746_i = 0LL;;
	for (; (_746_i < _7413_j); ({
		jule::I32 ___jule_assign_arg = (_746_i + 1LL);
		jule::I32 _1___jule_assign_arg = (_7413_j - 1LL);
		_746_i = ___jule_assign_arg;
		_7413_j = _1___jule_assign_arg;
	})) {
		{
			std::swap(_7327_s[_746_i], _7327_s[_7413_j]);
		}
	_iter_next_1c024bbb4:;
	}
	_iter_end_1c024bbb4:;;
}



inline void _1be901127_rotateLeft(jule::Slice<jule::Any> _4222_s, jule::I32 _4230_r) {
	_1be902458_Reverse(_4222_s.slice(0LL, _4230_r));
	_1be902458_Reverse(_4222_s.slice(_4230_r));
	_1be902458_Reverse(_4222_s);
}

inline void _1c0249c4a_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I32 _4230_r) {
	_1c024b037_Reverse(_4222_s.slice(0LL, _4230_r));
	_1c024b037_Reverse(_4222_s.slice(_4230_r));
	_1c024b037_Reverse(_4222_s);
}



inline void _1be8edaa3_rotateRight(jule::Slice<jule::Any> _4823_s, jule::I32 _4831_r) {
	_1be901127_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}

inline void _1c024771a_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I32 _4831_r) {
	_1c0249c4a_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}



inline jule::Bool _1be8eae57_overlaps(jule::Slice<jule::Any> _5316_a, jule::Slice<jule::Any> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U32 _572_elemSize = sizeof(jule::Any);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))));;
}

inline jule::Bool _1c0244b13_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U32 _572_elemSize = sizeof(jule::U8);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))));;
}



inline jule::Slice<jule::Any> _1be8e568d_Insert(jule::Slice<jule::Any> _7226_s, jule::I32 _7232_i, jule::Slice<jule::Any> _7244_v) {
	_7226_s.slice(_7232_i);
	jule::I32 _752_m = _7244_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I32 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7244_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::Any> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::Any>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7244_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_1be8eae57_overlaps(_7244_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7244_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7244_v);
	_1be8edaa3_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}

inline jule::Slice<jule::U8> _1c0240999_Insert(jule::Slice<jule::U8> _7226_s, jule::I32 _7232_i, jule::Slice<jule::U8> _7244_v) {
	_7226_s.slice(_7232_i);
	jule::I32 _752_m = _7244_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I32 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7244_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::U8> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::U8>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7244_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_1c0244b13_overlaps(_7244_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7244_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7244_v);
	_1c024771a_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}



inline void _1ac7b146c_EliminateDefines(jule::Ptr<_1ab61326a_IR>* _37826_ir) {
	jule::Ptr<_1ac7acec4_ObjectDeadCode> _3796_ocd = static__1ac7ad4be_new(_37826_ir);;
	_1ac7b1170_elimanate(_3796_ocd);
}



inline jule::Bool _1ac7b177a_isAllMethodsLive(jule::Ptr<_1aa966767_Struct> _38421_s) {
	return ((_38421_s == (*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_Map) || (_38421_s == (*((*(_1ab61db5a_ProgramMeta))._field_Runtime))._field_MapIterator));;
}



inline void _1ac7b55e7_eliminateDeadCodeOfScope(jule::Ptr<_1aaaec832_Scope> _21833_s) {
	jule::Slice<jule::Ptr<_1aab0033a_Label>> _2192_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab0033a_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aab0033a_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1aab0099a_GotoSt>> _2202_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1aab0099a_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aab0099a_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1ac7b23b3_scopeDeadCode> _2216_sdc = jule::new_ptr<_1ac7b23b3_scopeDeadCode>(_1ac7b23b3_scopeDeadCode{._field_parent=jule::Ptr<_1ac7b23b3_scopeDeadCode>(nullptr), ._field_s=_21833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1aab0033a_Label>>>)((&(_2192_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1aab0099a_GotoSt>>>)((&(_2202_gotos)))), ._field_except=false});;
	{
		_1ac7b52ea_optimizeStmts(_2216_sdc);
	};
}



inline void _1ac7b586c_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1aaa3b221_Fn>>* _23033_funcs) {
	{
		auto expr = _23033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7d0e91:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _23114_func = *it;
			{
				{
					auto expr = &((*(_23114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be7d1b51:;
					if (it != expr_end) {
						jule::Ptr<_1aaa3e2ce_FnIns> _23215_ins = *it;
						{
							_1ac7b55e7_eliminateDeadCodeOfScope((*(_23215_ins))._field_Scope);
						}
						_iter_next_1be7d1b51:;
						++it;
						goto _iter_begin_1be7d1b51;
					}
					_iter_end_1be7d1b51:;
				};
			}
			_iter_next_1be7d0e91:;
			++it;
			goto _iter_begin_1be7d0e91;
		}
		_iter_end_1be7d0e91:;
	};
}



inline void _1ac7b5a9d_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1aa966767_Struct>>* _23937_structs) {
	{
		auto expr = _23937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7d2701:;
		if (it != expr_end) {
			jule::Ptr<_1aa966767_Struct> _24014_s = *it;
			{
				{
					auto expr = &((*(_24014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1be7d2c51:;
					if (it != expr_end) {
						jule::Ptr<_1aa969605_StructIns> _24115_ins = *it;
						{
							_1ac7b586c_eliminateScopeFunctions(&((*(_24115_ins))._field_Methods));
						}
						_iter_next_1be7d2c51:;
						++it;
						goto _iter_begin_1be7d2c51;
					}
					_iter_end_1be7d2c51:;
				};
			}
			_iter_next_1be7d2701:;
			++it;
			goto _iter_begin_1be7d2701;
		}
		_iter_end_1be7d2701:;
	};
}



inline void _1ac7b5d56_eliminateFunctionsScopePackage(jule::Ptr<_1aab3267a_Package>* _24740_pkg) {
	{
		auto expr = &((*((*(_24740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be7d3801:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42524_SymTab> _24814_f = *it;
			{
				_1ac7b586c_eliminateScopeFunctions(&((*(_24814_f))._field_Funcs));
				_1ac7b5a9d_eliminateScopeStructMethods(&((*_24814_f.alloc)._field_Structs));
			}
			_iter_next_1be7d3801:;
			++it;
			goto _iter_begin_1be7d3801;
		}
		_iter_end_1be7d3801:;
	};
}



inline void _1ac7b6054_eliminateScopePackage(jule::Ptr<_1aab3267a_Package>* _25431_pkg) {
	_1ac7b5d56_eliminateFunctionsScopePackage(_25431_pkg);
}



inline void _1ac7b6285_EliminateScopes(jule::Ptr<_1ab61326a_IR>* _25925_ir) {
	jule::I32 _2606_i = ((*((*(_25925_ir))))._field_Used.len() - 1LL);;
	for (; (_2606_i >= 0LL); (_2606_i)--) {
		{
			jule::Ptr<_1aab2ee08_ImportInfo> _2627_u = (*((*(_25925_ir))))._field_Used[_2606_i];;
			if ((!((*(_2627_u))._field_Binded))) {
				_1ac7b6054_eliminateScopePackage(&((*_2627_u.alloc)._field_Package));
			};
		}
	_iter_next_1be7d5193:;
	}
	_iter_end_1be7d5193:;;
	_1ac7b6054_eliminateScopePackage(&((*((*(_25925_ir))))._field_Main));
}



inline void _1ac3da7b1_possibleNilRemove(jule::Ptr<_1ac3d97d2_nils>* _7527_n, jule::Any _7537_m) {
	if (((*(_7527_n)) != nullptr)) {
		_1ac3da0b8_removeVar((*(_7527_n)).ptr(), _1ac3db284_getNilVar(_7537_m));
	};
}



inline jule::Bool _1ac3dab79_isGuaranteedNonNilExpr(jule::Ptr<_1ac3d97d2_nils>* _8132_n, jule::Any _8142_m) {
	{
		auto &_match_expr{ _8142_m };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1be82bb57:;
			{
				return true;;
			}
		}
		_match_end_1be82bae1:;
	};
	return (((*(_8132_n)) != nullptr) && _1ac3da409_isSafe((*(_8132_n)).ptr(), _1ac3db284_getNilVar(_8142_m)));;
}



inline jule::Bool _1ac3dae43_isNilValidType(jule::Ptr<_1aabecdb6_Type> _8923_t) {
	return (_1aac01260_Sptr(_8923_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1ac3db284_getNilVar(jule::Any _9114_m) {
	if ((!(_1ac695c25_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9114_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be82d4e9:;
			{
				jule::Ptr<_1aab70795_Var> _1003_v = _9114_m.unsafe_cast_ptr<_1aab70795_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9114_m.unsafe_cast_ptr<_1aab70795_Var>());;
				};
				return _1ac3db284_getNilVar((*((*((*(_1003_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1be82d61a:;
			{
				return static_cast<jule::Uintptr>((*(_9114_m.unsafe_cast_ptr<_1aaa33a76_StructSubIdentExpr>()))._field_Field);;
			}
		}
		_match_end_1be82d483:;
	};
	return 0LLU;;
}



inline jule::Bool _1ac6827c2_isConstantValidConditionalCase(jule::Ptr<_1aaaecc0b_If>* _100736_i) {
	{
		auto &_match_expr{ (*((*(_100736_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1be834335:;
			{
				jule::Ptr<_1aa9b96cc_Const> _10103_c = (*((*(_100736_i))))._field_Expr.unsafe_cast_ptr<_1aa9b96cc_Const>();;
				return (_1aaa26c67_IsBool(_10103_c.ptr()) && _1aaa2466b_ReadBool(_10103_c));;
			}
		}
		_match_end_1be836bea:;
	};
	return false;;
}



inline jule::Bool _1ac682ad0_isUnreachableExpr(jule::Any* _101623_expr) {
	{
		auto &_match_expr{ (*(_101623_expr)) };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1be837855:;
			{
				jule::Ptr<_1aa9b96cc_Const> _10193_c = (*(_101623_expr)).cast_ptr<_1aa9b96cc_Const>(&__jule_any_type15);;
				return (_1aaa26c67_IsBool(_10193_c.ptr()) && (!(_1aaa2466b_ReadBool(_10193_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1be83716d:;
			{
				jule::Ptr<_1aaa2e0d2_BinaryExpr> _10223_m = (*(_101623_expr)).cast_ptr<_1aaa2e0d2_BinaryExpr>(&__jule_any_type113);;
				if (((*((*(_10223_m))._field_Op))._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_1ac682ad0_isUnreachableExpr(&((*((*_10223_m.alloc)._field_Left))._field_Model)) || _1ac682ad0_isUnreachableExpr(&((*((*_10223_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1be8377de:;
	};
	return false;;
}



inline jule::Bool _1ac682d99_isConstantValidMatchCase(jule::Ptr<_1aab02b23_Case>* _103130_case) {
	{
		auto expr = &((*((*(_103130_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be83b914:;
		if (it != expr_end) {
			jule::Ptr<_1aabb8db5_Data> *_10329_expr = it;
			{
				if (((_1aabb9800_IsConst((*(_10329_expr)).ptr()) && _1aaa26c67_IsBool((*(*(_10329_expr)).alloc)._field_Constant.ptr())) && _1aaa2466b_ReadBool((*((*(_10329_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1be83b914:;
			++it;
			goto _iter_begin_1be83b914;
		}
		_iter_end_1be83b914:;
	};
	return false;;
}



inline jule::Bool _1ac6831da_isUnreachableConditionalCase(jule::Ptr<_1aaaecc0b_If>* _104034_i) {
	return _1ac682ad0_isUnreachableExpr(&((*((*(_104034_i))))._field_Expr));;
}



inline jule::Bool _1ac683471_isUnreachableMatchCase(jule::Ptr<_1aab02b23_Case>* _104428_case) {
	{
		auto expr = &((*((*(_104428_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be83d905:;
		if (it != expr_end) {
			jule::Ptr<_1aabb8db5_Data> *_10459_expr = it;
			{
				if ((!(_1ac682ad0_isUnreachableExpr(&((*((*(_10459_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1be83d905:;
			++it;
			goto _iter_begin_1be83d905;
		}
		_iter_end_1be83d905:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1ac68b05b_checkForBitShiftOpt(jule::Ptr<_1aaa2dad7_OperandExpr>* _96029_l, jule::Ptr<_1aaa2dad7_OperandExpr>* _96057_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::Ptr<_1aac06bc2_Prim> _9612_lp = _1aac00ec9_Prim((*((*(_96029_l))))._field_Type.ptr());;
	jule::Ptr<_1aac06bc2_Prim> _9622_rp = _1aac00ec9_Prim((*((*(_96057_r))))._field_Type);;
	if (((!(_1aaabe606_IsInt(_1aac07046_Str(_9612_lp.ptr())))) || (!(_1aaabe606_IsInt(_1aac07046_Str(_9622_rp.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1aaa251a5_AsU64((*((*(_96057_r))))._field_Model.cast_ptr<_1aa9b96cc_Const>(&__jule_any_type15).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _9702_j = _1a78de3e6_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _9712_z = static_cast<jule::U64>(_9702_j);;
	if ((static_cast<jule::F64>(_9712_z) != _9702_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _9712_z;
	return __jule_func_result;;
}



inline jule::Bool _1ac68b424_areSameLvalueExpr(jule::Any* _97923_l, jule::Any* _97939_r) {
	{
		auto &_match_expr{ (*(_97923_l)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1be9496ae:;
			{
				return ((*(_97939_r)) == (*(_97923_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1be949439:;
			{
				{
					auto &_match_expr{ (*(_97939_r)) };
					
					if (_match_expr.type == &__jule_any_type99) {
						_case_begin_1be94a45c:;
						{
							goto _match_end_1be949d1e;
						}
					}
					else {
						_case_begin_1be949d85:;
						{
							return false;;
						}
					}
					_match_end_1be949d1e:;
				};
				jule::Ptr<_1aaa33a76_StructSubIdentExpr> _9923_lsi = (*(_97923_l)).cast_ptr<_1aaa33a76_StructSubIdentExpr>(&__jule_any_type99);;
				jule::Ptr<_1aaa33a76_StructSubIdentExpr> _9933_rsi = (*(_97939_r)).cast_ptr<_1aaa33a76_StructSubIdentExpr>(&__jule_any_type99);;
				if (((*(_9923_lsi))._field_Field != (*(_9933_rsi))._field_Field)) {
					return false;;
				};
				return _1ac68b424_areSameLvalueExpr(&((*((*(_9923_lsi))._field_Expr))._field_Model), &((*(*(_9933_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1be949736:;
			{
				{
					auto &_match_expr{ (*(_97939_r)) };
					
					if (_match_expr.type == &__jule_any_type112) {
						_case_begin_1be94a36e:;
						{
							jule::Ptr<_1aaa2e4ab_UnaryExpr> _10054_ul = (*(_97923_l)).cast_ptr<_1aaa2e4ab_UnaryExpr>(&__jule_any_type112);;
							jule::Ptr<_1aaa2e4ab_UnaryExpr> _10064_ur = (*(_97939_r)).cast_ptr<_1aaa2e4ab_UnaryExpr>(&__jule_any_type112);;
							if ((((*((*(_10054_ul))._field_Op))._field_Id != (*(*(_10064_ur))._field_Op.alloc)._field_Id) || ((*((*(_10054_ul))._field_Op))._field_Kind != (*(*(_10064_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1ac68b424_areSameLvalueExpr(&((*((*(_10054_ul))._field_Expr))._field_Model), &((*(*(_10064_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1be94c63a:;
				};
			}
		}
		_match_end_1be949648:;
	};
	return false;;
}



inline void _1ac68d4d1_possibleDynamicRemove(jule::Ptr<_1ac68c447_dynamic>* _7631_d, jule::Any _7644_m) {
	if (((*(_7631_d)) != nullptr)) {
		_1ac68cc2d_removeVar((*(_7631_d)).ptr(), _1ac68e05e_getDynamicVar(_7644_m));
	};
}



inline jule::Bool _1ac68d7de_isDynamicValidType(jule::Ptr<_1aabecdb6_Type> _8227_t) {
	return _1ab618b00_IsAny(&(_8227_t));;
}



inline jule::Ptr<_1aabecdb6_Type> _1ac68dc1d_isTypeGuaranteedDynamicData(jule::Ptr<_1ac68c447_dynamic>* _8437_dy, jule::Ptr<_1aabecdb6_Type> _8455_t, jule::Any _8475_m) {
	if (_1aabee03d_IsNil(_8455_t.ptr())) {
		return nullptr;;
	};
	jule::Bool _882_isAny = _1ab618b00_IsAny(&(_8455_t));;
	if (((!(_882_isAny)) && (_1aac02a69_Trait(_8455_t.ptr()) == nullptr))) {
		return _8455_t;;
	};
	if ((!(_882_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8475_m };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1bea29519:;
			{
				jule::Ptr<_1aaa30633_CastingExpr> _977_cem = _8475_m.unsafe_cast_ptr<_1aaa30633_CastingExpr>();;
				return _1ac68dc1d_isTypeGuaranteedDynamicData(_8437_dy, (*((*(_977_cem))._field_Expr))._field_Type, (*(*(_977_cem))._field_Expr.alloc)._field_Model);;
			}
		}
		_match_end_1bea294a3:;
	};
	jule::Uintptr _1002_var = _1ac68e05e_getDynamicVar(_8475_m);;
	if ((_1002_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8437_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea31103:;
		if (it != expr_end) {
			_1ac68c106_dynamicVar _10414_v = *it;
			{
				if ((_10414_v._field_var == _1002_var)) {
					return _10414_v._field_kind;;
				};
			}
			_iter_next_1bea31103:;
			++it;
			goto _iter_begin_1bea31103;
		}
		_iter_end_1bea31103:;
	};
	return nullptr;;
}



inline jule::Uintptr _1ac68e05e_getDynamicVar(jule::Any _11218_m) {
	if ((!(_1ac69770a_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11218_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bea31741:;
			{
				jule::Ptr<_1aab70795_Var> _1183_v = _11218_m.unsafe_cast_ptr<_1aab70795_Var>();;
				if ((!((*(_1183_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11218_m.unsafe_cast_ptr<_1aab70795_Var>());;
				};
				return _1ac68e05e_getDynamicVar((*((*((*(_1183_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bea32632:;
			{
				return static_cast<jule::Uintptr>((*(_11218_m.unsafe_cast_ptr<_1aaa33a76_StructSubIdentExpr>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bea317a7:;
			{
				jule::Ptr<_1aaa2e4ab_UnaryExpr> _1293_uem = _11218_m.unsafe_cast_ptr<_1aaa2e4ab_UnaryExpr>();;
				if (((*((*(_1293_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1ac68e05e_getDynamicVar((*((*_1293_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1bea32588:;
	};
	return 0LLU;;
}



inline void _1bea3e2cb__removeDeads(jule::Ptr<_1ac69232b_boundary>* _2340_alive, jule::Ptr<_1ac69232b_boundary>* _2366_other, jule::Uintptr _2391_invalid) {
	_julec_label_1bea3ece3:;
	{
		auto expr = &((*((*(_2340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea40ca0:;
		if (it != expr_end) {
			_1ac691eda_boundaryVar _259_v = *it;
			{
				if ((_259_v._field_var == _2391_invalid)) {
					goto _iter_next_1bea40ca0;
				};
				{
					auto expr = &((*((*(_2366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bea41b19:;
					if (it != expr_end) {
						_1ac691eda_boundaryVar *_2910_ov = it;
						{
							if ((_259_v._field_var == (*(_2910_ov))._field_var)) {
								goto _iter_next_1bea40ca0;
							};
						}
						_iter_next_1bea41b19:;
						++it;
						goto _iter_begin_1bea41b19;
					}
					_iter_end_1bea41b19:;
				};
				_1ac692b12_removeVar((*(_2340_alive)).ptr(), _259_v._field_var);
			}
			_iter_next_1bea40ca0:;
			++it;
			goto _iter_begin_1bea40ca0;
		}
		_iter_end_1bea40ca0:;
	};
}

inline void _1bea411ce__removeDeads(jule::Ptr<_1ac3d97d2_nils>* _2340_alive, jule::Ptr<_1ac3d97d2_nils>* _2366_other, jule::Uintptr _2391_invalid) {
	_julec_label_1bea43269:;
	{
		auto expr = &((*((*(_2340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea441d2:;
		if (it != expr_end) {
			_1ac3d9491_nilVar _259_v = *it;
			{
				if ((_259_v._field_var == _2391_invalid)) {
					goto _iter_next_1bea441d2;
				};
				{
					auto expr = &((*((*(_2366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bea4504b:;
					if (it != expr_end) {
						_1ac3d9491_nilVar *_2910_ov = it;
						{
							if ((_259_v._field_var == (*(_2910_ov))._field_var)) {
								goto _iter_next_1bea441d2;
							};
						}
						_iter_next_1bea4504b:;
						++it;
						goto _iter_begin_1bea4504b;
					}
					_iter_end_1bea4504b:;
				};
				_1ac3da0b8_removeVar((*(_2340_alive)).ptr(), _259_v._field_var);
			}
			_iter_next_1bea441d2:;
			++it;
			goto _iter_begin_1bea441d2;
		}
		_iter_end_1bea441d2:;
	};
}

inline void _1bea44666__removeDeads(jule::Ptr<_1ac68c447_dynamic>* _2340_alive, jule::Ptr<_1ac68c447_dynamic>* _2366_other, jule::Uintptr _2391_invalid) {
	_julec_label_1bea46712:;
	{
		auto expr = &((*((*(_2340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea476be:;
		if (it != expr_end) {
			_1ac68c106_dynamicVar _259_v = *it;
			{
				if ((_259_v._field_var == _2391_invalid)) {
					goto _iter_next_1bea476be;
				};
				{
					auto expr = &((*((*(_2366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bea48538:;
					if (it != expr_end) {
						_1ac68c106_dynamicVar *_2910_ov = it;
						{
							if ((_259_v._field_var == (*(_2910_ov))._field_var)) {
								goto _iter_next_1bea476be;
							};
						}
						_iter_next_1bea48538:;
						++it;
						goto _iter_begin_1bea48538;
					}
					_iter_end_1bea48538:;
				};
				_1ac68cc2d_removeVar((*(_2340_alive)).ptr(), _259_v._field_var);
			}
			_iter_next_1bea476be:;
			++it;
			goto _iter_begin_1bea476be;
		}
		_iter_end_1bea476be:;
	};
}



inline jule::Bool _1ac693393_isValidBoundaryInfo(jule::Any _8524_m) {
	return _1ac693ad0_fitsSize(_8524_m, _8524_m);;
}



inline jule::I32 _1ac69375b_fitsMaxSize(jule::Slice<jule::Any> _9016_max, jule::Any _9035_expr) {
	{
		auto expr = &(_9016_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea504da:;
		if (it != expr_end) {
			jule::I32 _916_i = it - expr->begin();
			jule::Any *_919_m = it;
			{
				if (_1ac693ad0_fitsSize((*(_919_m)), _9035_expr)) {
					return _916_i;;
				};
			}
			_iter_next_1bea504da:;
			++it;
			_916_i++;
			goto _iter_begin_1bea504da;
		}
		_iter_end_1bea504da:;
	};
	return -1LL;;
}



inline jule::Bool _1ac693ad0_fitsSize(jule::Any _9913_e1, jule::Any _9929_e2) {
	if ((_1aac854ae_TypeData(&(_9913_e1)) != _1aac854ae_TypeData(&(_9929_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9913_e1 };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1bea51ec0:;
			{
				jule::Ptr<_1aa9b96cc_Const> _1053_exprConst = _9929_e2.cast_ptr<_1aa9b96cc_Const>(&__jule_any_type15);;
				return ((_1aaa2543b_AsF64(_1053_exprConst.ptr()) >= 0LL) && _1aaa29143_GtEq(_9913_e1.unsafe_cast_ptr<_1aa9b96cc_Const>().ptr(), (*_1053_exprConst.alloc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bea52036:;
			{
				return (_9929_e2 == _9913_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bea5209c:;
			{
				jule::Ptr<_1aaa33a76_StructSubIdentExpr> _1103_ssi1 = _9913_e1.unsafe_cast_ptr<_1aaa33a76_StructSubIdentExpr>();;
				jule::Ptr<_1aaa33a76_StructSubIdentExpr> _1113_ssi2 = _9929_e2.cast_ptr<_1aaa33a76_StructSubIdentExpr>(&__jule_any_type99);;
				return (_1aac86b31_EqualModels((*((*(_1103_ssi1))._field_Expr))._field_Model, (*(*(_1113_ssi2))._field_Expr.alloc)._field_Model) && ((*_1103_ssi1.alloc)._field_Field == (*(_1113_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bea52113:;
			{
				jule::Ptr<_1aaa2e4ab_UnaryExpr> _1143_uem1 = _9913_e1.unsafe_cast_ptr<_1aaa2e4ab_UnaryExpr>();;
				jule::Ptr<_1aaa2e4ab_UnaryExpr> _1153_uem2 = _9929_e2.cast_ptr<_1aaa2e4ab_UnaryExpr>(&__jule_any_type112);;
				if ((((*((*(_1143_uem1))._field_Op))._field_Id != static_cast<jule::U32>(62LLU)) || ((*((*(_1143_uem1))._field_Op))._field_Id != (*(*(_1153_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1ac693ad0_fitsSize((*((*(_1143_uem1))._field_Expr))._field_Model, (*(*(_1153_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1bea51b18:;
			{
				return false;;
			}
		}
		_match_end_1bea519d6:;
	};
}



inline void _1ac693e10_possibleBoundaryRemove(jule::Ptr<_1ac69232b_boundary>* _12532_b, jule::Any _12546_model) {
	{
		auto expr = &((*((*(_12532_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bea52443:;
		if (it != expr_end) {
			_1ac691eda_boundaryVar _12714_v = *it;
			{
				{
					auto expr = &(_12714_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bea58bdb:;
					if (it != expr_end) {
						jule::I32 _1287_i = it - expr->begin();
						jule::Any _12810_max = *it;
						{
							if (_1aac86b31_EqualModels(_12810_max, _12546_model)) {
								_12714_v._field_maxSize=jule::append(_12714_v._field_maxSize.slice(0LL, _1287_i),_12714_v._field_maxSize.slice((_1287_i + 1LL)));
								goto _iter_end_1bea58bdb;
							};
						}
						_iter_next_1bea58bdb:;
						++it;
						_1287_i++;
						goto _iter_begin_1bea58bdb;
					}
					_iter_end_1bea58bdb:;
				};
			}
			_iter_next_1bea52443:;
			++it;
			goto _iter_begin_1bea52443;
		}
		_iter_end_1bea52443:;
	};
}



inline jule::Bool _1ac6941c9_isBoundaryRiskyType(jule::Ptr<_1aabecdb6_Type> _13728_t) {
	return (_1aac01c99_Arr(_13728_t.ptr()) == nullptr);;
}



inline jule::Bool _1ac694493_isBoundaryValidType(jule::Ptr<_1aabecdb6_Type> _14228_t) {
	return ((_1aac02030_Slc(_14228_t.ptr()) != nullptr) || (_1aac01c99_Arr(_14228_t.ptr()) != nullptr));;
}



inline jule::Uintptr _1ac69475c_getBoundaryVar(jule::Any _14419_m) {
	if ((!(_1ac695c25_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14419_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bea5b381:;
			{
				jule::Ptr<_1aab70795_Var> _1503_v = _14419_m.unsafe_cast_ptr<_1aab70795_Var>();;
				if ((!((*(_1503_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14419_m.unsafe_cast_ptr<_1aab70795_Var>());;
				};
				return _1ac69475c_getBoundaryVar((*((*((*(_1503_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1bea5b419:;
			{
				return static_cast<jule::Uintptr>((*(_14419_m.unsafe_cast_ptr<_1aaa33a76_StructSubIdentExpr>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1bea5b4a2:;
			{
				jule::Ptr<_1aaa2e4ab_UnaryExpr> _1613_uem = _14419_m.unsafe_cast_ptr<_1aaa2e4ab_UnaryExpr>();;
				if (((*((*(_1613_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1ac69475c_getBoundaryVar((*((*_1613_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1bea5b31a:;
	};
	return 0LLU;;
}



inline void _1ac6985c9_PushOptLevel(jule::I32 _4117_level) {
	jule::Bool _422_l1 = (_4117_level >= static_cast<jule::I32>(1LL));;
	jule::Bool _432_l2 = (_4117_level >= static_cast<jule::I32>(2LL));;
	_1ac6950ba_Copy=_422_l1;
	_1ac6953b7_Deadcode=_422_l1;
	_1ac695670_Append=_422_l1;
	_1ac69596c_Math=_422_l1;
	_1ac695c25_Access=_422_l1;
	_1ac695ecd_Inline=_422_l1;
	_1ac696286_Ptr=_422_l1;
	_1ac69664e_Cond=_422_l1;
	_1ac696891_Str=_422_l1;
	_1ac696b38_Slice=_422_l1;
	_1ac696de1_Assign=_422_l1;
	_1ac697199_Exceptional=_422_l1;
	_1ac697452_Iter=_422_l1;
	_1ac69770a_Dynamic=_422_l1;
	_1ac6979b3_Array=_422_l1;
	_1ac697e9c_Len=_422_l1;
	_1ac6981de_StdStrings=_432_l2;
	_1ac6983ed_StdMathCmplx=_432_l2;
}



inline void _1ac7b9b3a_detectEnabled(void) {
	_1ac7b76c6_exprEnabled=((((((((_1ac6981de_StdStrings || _1ac696286_Ptr) || _1ac69596c_Math) || _1ac695c25_Access) || _1ac69664e_Cond) || _1ac6979b3_Array) || _1ac696891_Str) || _1ac69770a_Dynamic) || _1ac697e9c_Len);
	_1ac7b78d5_scopeEnabled=(((((((((_1ac69664e_Cond || _1ac695670_Append) || _1ac6950ba_Copy) || _1ac696891_Str) || _1ac696b38_Slice) || _1ac696de1_Assign) || _1ac697199_Exceptional) || _1ac697452_Iter) || _1ac69770a_Dynamic) || _1ac6983ed_StdMathCmplx);
}



inline jule::U64 _1ac889cc6_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1ac7c498b_isCopyOptimizable(jule::Ptr<_1aabb8db5_Data>* _115523_expr) {
	if ((!((*((*(_115523_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_115523_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1bebc94cc:;
			{
				return false;;
			}
		}
		_match_end_1bebc9466:;
	};
	return true;;
}



inline jule::Bool _1ac7c4d54_isIterCopyOptimizable(jule::Ptr<_1aabb8db5_Data>* _116627_expr, jule::Ptr<_1aab70795_Var>* _116647_v) {
	if (((!((*((*(_116627_expr))))._field_Lvalue)) && (!(_1aac00209_Mutable((*((*(_116627_expr))))._field_Type.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_116647_v))))._field_Mutable)) && (!((*((*(_116627_expr))))._field_Mutable)));;
}



inline jule::Bool _1ac7c5283_captureVarHandling(jule::Ptr<_1ac894d58_ObjectCoder>* _117328_oc, jule::Ptr<_1aaa31d1b_AnonFnExpr>* _117351_m, jule::Ptr<_1aab70795_Var>* _117378_v) {
	{
		auto expr = &((*((*(_117351_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bebcb633:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _11749_cv = *it;
			{
				if ((_11749_cv == (*(_117378_v)))) {
					_1ac895573_write((*(_117328_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1ac7e05ab_var(&((*((*(_117328_oc))))._field_Buf), (*(_117378_v)));
					return true;;
				};
			}
			_iter_next_1bebcb633:;
			++it;
			goto _iter_begin_1bebcb633;
		}
		_iter_end_1bebcb633:;
	};
	return false;;
}



inline jule::Str _1ac7d7a6a_decomposeCommonEsq(jule::U8 _193223_b) {
	{
		auto &_match_expr{ _193223_b };
		
		if (_match_expr == '\\') {
			_case_begin_1bed47c66:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1bed479e1:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1bed47a57:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1bed47ace:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1bed47b56:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1bed476b1:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1bed47738:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1bed477b0:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1bed47837:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1bed47cdd:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1bed450d7:;
			{
				return jule::Str();;
			}
		}
		_match_end_1bed4753a:;
	};
}



inline jule::Str _1ac7d7d78_sbtoa(jule::U8 _195910_b) {
	if ((_195910_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_195910_b < 128LLU)) {
		jule::Str _19643_seq = _1ac7d7a6a_decomposeCommonEsq(_195910_b);;
		if (!(_19643_seq).empty()) {
			return _19643_seq;;
		};
		if (((32LL <= _195910_b) && (_195910_b <= 126LLU))) {
			return __jule_strFromByte(_195910_b);;
		};
	};
	jule::Str _19722_seq = _1a792e3d1_FmtUint(static_cast<jule::U64>(_195910_b), 8LL);;
	if ((_19722_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _19722_seq);;
	};
	return (jule::Str::lit("\\", 1) + _19722_seq);;
}



inline void _1ac7d8164_cstrBytes(_1ace17078_Builder* _197919_s, jule::Str _197940_ctx) {
	{
		auto expr = &(_197940_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bed4c8c5:;
		if (it != expr_end) {
			jule::U8 *_19809_b = it;
			{
				({
					auto except = _1ace18057_WriteStr(_197919_s, _1ac7d7d78_sbtoa((*(_19809_b))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1981:3"));
					(except.result);
				});
			}
			_iter_next_1bed4c8c5:;
			++it;
			goto _iter_begin_1bed4c8c5;
		}
		_iter_end_1bed4c8c5:;
	};
}



inline void _1ac7d8494_cstrLit(_1ace17078_Builder* _198517_s, jule::Str _198538_ctx) {
	({
		auto except = _1ace18310_WriteByte(_198517_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1986:2"));
	});
	_1ac7d8164_cstrBytes(_198517_s, _198538_ctx);
	({
		auto except = _1ace18310_WriteByte(_198517_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1988:2"));
	});
}



inline void _1ac7d883a_ftoa(_1ace17078_Builder* _199114_s, jule::F64 _199135_f, jule::I32 _199143_bitsize) {
	if ((_199143_bitsize != 32LL)) {
		if ((_199135_f == static_cast<jule::F64>(static_cast<jule::I64>(_199135_f)))) {
			_1ac7d8b26_itoa(_199114_s, static_cast<jule::I64>(_199135_f));
			return;;
		};
		if ((_199135_f == static_cast<jule::F64>(static_cast<jule::U64>(_199135_f)))) {
			_1ac7d8e12_utoa(_199114_s, static_cast<jule::U64>(_199135_f));
			return;;
		};
	};
	jule::Str _20022_m = _1a7917ed0_FmtFloat(_199135_f, 'f', -1LL, _199143_bitsize);;
	({
		auto except = _1ace18057_WriteStr(_199114_s, _20022_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2003:2"));
		(except.result);
	});
	if ((!(_1bb089dad_Contains(_20022_m, jule::Str::lit(".", 1))))) {
		({
			auto except = _1ace18057_WriteStr(_199114_s, jule::Str::lit(".0", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2005:3"));
			(except.result);
		});
	};
}



inline void _1ac7d8b26_itoa(_1ace17078_Builder* _200914_s, jule::I64 _200935_x) {
	{
		
		if ((_200935_x == jule::MAX_I64)) {
			_case_begin_1bed51ca3:;
			{
				({
					auto except = _1ace18057_WriteStr(_200914_s, jule::Str::lit("jule::MAX_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2012:3"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_200935_x == jule::MIN_I64)) {
			_case_begin_1bed51d4c:;
			{
				({
					auto except = _1ace18057_WriteStr(_200914_s, jule::Str::lit("jule::MIN_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2015:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1bed51b82:;
	};
	({
		auto except = _1ace18057_WriteStr(_200914_s, _1a792e799_FmtInt(_200935_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2019:2"));
		(except.result);
	});
	if (_1ace2ae38_Is64Bit(jule::Str::lit("i386", 4))) {
		({
			auto except = _1ace18310_WriteByte(_200914_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2021:3"));
		});
	};
	({
		auto except = _1ace18310_WriteByte(_200914_s, 'L');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2023:2"));
	});
}



inline void _1ac7d8e12_utoa(_1ace17078_Builder* _202614_s, jule::U64 _202635_x) {
	{
		
		if ((_202635_x == jule::MAX_U64)) {
			_case_begin_1bed53de8:;
			{
				({
					auto except = _1ace18057_WriteStr(_202614_s, jule::Str::lit("jule::MAX_U64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2029:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1bed53ca5:;
	};
	({
		auto except = _1ace18057_WriteStr(_202614_s, _1a792e3d1_FmtUint(_202635_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2033:2"));
		(except.result);
	});
	if (_1ace2ae38_Is64Bit(jule::Str::lit("i386", 4))) {
		({
			auto except = _1ace18310_WriteByte(_202614_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2035:3"));
		});
	};
	({
		auto except = _1ace18057_WriteStr(_202614_s, jule::Str::lit("LU", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2037:2"));
		(except.result);
	});
}



inline void _1ac7d9561_structBinary(_1ace17078_Builder* _204022_buf, jule::Ptr<_1aa969605_StructIns>* _204050_s, jule::Str* _204072_l, jule::Str* _20413_r, jule::U32 _204111_op, jule::Str _204126_kind) {
	if (((_204111_op != static_cast<jule::U32>(50LLU)) && (_204111_op != static_cast<jule::U32>(51LLU)))) {
		__jule_panic_s(jule::Str::lit("cxx: unsupported token occurred for structure binary, this is an implementation mistake", 87) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2043:3"));;
	};
	static__1ac7deed4_structureIns(_204022_buf, _204050_s);
	({
		auto except = _1ace18057_WriteStr(_204022_buf, jule::Str::lit("_eq", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2046:2"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_204022_buf, jule::Str::lit("(&", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2047:2"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_204022_buf, (*(_204072_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2048:2"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_204022_buf, jule::Str::lit(", ", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2049:2"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_204022_buf, (*(_20413_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2050:2"));
		(except.result);
	});
	({
		auto except = _1ace18310_WriteByte(_204022_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2051:2"));
	});
}



inline jule::Slice<jule::U8> _1ac8a2b57_concatAllParts(jule::Slice<jule::Ptr<_1aa0d7ceb_Token>> _137219_parts) {
	jule::I32 _13736_n = 0LL;;
	{
		auto expr = &(_137219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0117024:;
		if (it != expr_end) {
			jule::Ptr<_1aa0d7ceb_Token> *_13749_part = it;
			{
				_13736_n+=(*(*(_13749_part)).alloc)._field_Kind.len();
			}
			_iter_next_1c0117024:;
			++it;
			goto _iter_begin_1c0117024;
		}
		_iter_end_1c0117024:;
	};
	if ((_13736_n == 0LL)) {
		return nullptr;;
	};
	_1ace17078_Builder _13806_s = static__1ace178c5_New(_13736_n);;
	{
		auto expr = &(_137219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0118179:;
		if (it != expr_end) {
			jule::Ptr<_1aa0d7ceb_Token> *_13819_p = it;
			{
				({
					auto except = _1ace18057_WriteStr(&_13806_s, (*((*(_13819_p))))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1382:3"));
					(except.result);
				});
			}
			_iter_next_1c0118179:;
			++it;
			goto _iter_begin_1c0118179;
		}
		_iter_end_1c0118179:;
	};
	return _1ace19388_Buf(&_13806_s);;
}



inline jule::Bool _1ac8b1a45_ableToInit(jule::Ptr<_1aabecdb6_Type>* _45920_t) {
	return (!(_1aabedca7_Binded((*(_45920_t)).ptr())));;
}



inline jule::Bool _1ac8b1d20_shouldInitialized(jule::Ptr<_1aabecdb6_Type>* _46627_t) {
	if ((!(_1ac8b1a45_ableToInit(_46627_t)))) {
		return false;;
	};
	jule::Ptr<_1aac06bc2_Prim> _4702_prim = _1aac00ec9_Prim((*(_46627_t)).ptr());;
	if ((_4702_prim != nullptr)) {
		return ((!(_1aac0a423_IsAny(_4702_prim))) && (!(_1aac0a18c_IsStr(_4702_prim))));;
	};
	{
		
		if ((_1aac01260_Sptr((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1c025b751:;
			{
				return false;;
			}
		}
		else if ((_1aac02d00_Map((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1c025b7b7:;
			{
				return false;;
			}
		}
		else if ((_1aac02030_Slc((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1c025b82d:;
			{
				return false;;
			}
		}
		else if ((_1aac02a69_Trait((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1c025c510:;
			{
				return false;;
			}
		}
		else if ((_1aac022b6_Fn((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1c025c576:;
			{
				return false;;
			}
		}
		else if ((_1aac01c99_Arr((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1c025c675:;
			{
				jule::Ptr<_1aac0d4e2_Arr> _4867_arr = _1aac01c99_Arr((*(_46627_t)).ptr());;
				return _1ac8b1a45_ableToInit(&((*(_4867_arr))._field_Elem));;
			}
		}
		else if ((_1aac0254c_Struct((*(_46627_t)).ptr()) != nullptr)) {
			_case_begin_1c025c6ec:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c025b652:;
			{
				return true;;
			}
		}
		_match_end_1c025bb08:;
	};
}



inline void _1bb09d7a6_printErrorMessage(jule::Str _3022_msg) {
	jule::println(_1acbbe47e_toStr(_3022_msg));
}



inline void _1bb09da2b_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1bb09d7a6_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _416_max = _1bb09d5ca_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1bb09d5ca_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c03002b7:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I32 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1c03002b7:;
			++it;
			goto _iter_begin_1c03002b7;
		}
		_iter_end_1c03002b7:;
	};
	_1ace17078_Builder _496_s = static__1ace178c5_New(32LL);;
	;
	{
		auto expr = &(_1bb09d5ca_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0301a9e:;
		if (it != expr_end) {
			jule::I32 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				({
					auto except = _1ace18057_WriteStr(&_496_s, (*(_519_part))[0LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:52:3"));
					(except.result);
				});
				({
					auto except = _1ace18057_WriteStr(&_496_s, _1bb0851a5_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:53:3"));
					(except.result);
				});
				({
					auto except = _1ace18057_WriteStr(&_496_s, (*(_519_part))[1LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:54:3"));
					(except.result);
				});
				if (((_516_i + 1LL) < 5LL)) {
					({
						auto except = _1ace18310_WriteByte(&_496_s, '\n');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:56:4"));
					});
				};
			}
			_iter_next_1c0301a9e:;
			++it;
			_516_i++;
			goto _iter_begin_1c0301a9e;
		}
		_iter_end_1c0301a9e:;
	};
	jule::println(_1c03022ca_toStr(_496_s));
}



inline void _1bb09dc5c_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1bb09d7a6_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::println(_1acbbe47e_toStr(jule::Str::lit("jule0.1.1 @master", 17)));
}



inline void _1bb09de6b_toolDistos(void) {
	jule::print(_1acbbe47e_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::print(_1c03115b4_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::print(_1acbbe47e_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1c03115b4_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::print(_1acbbe47e_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1c03115b4_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::println(_1acbbe47e_toStr(jule::Str()));
}



inline void _1bb09e0d1_toolDistarch(void) {
	jule::print(_1acbbe47e_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::print(_1c0319875_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::print(_1acbbe47e_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1c0319875_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::print(_1acbbe47e_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1c0319875_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::println(_1acbbe47e_toStr(jule::Str()));
}



inline void _1bb09e2ce_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::println(_1acbbe47e_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1bb09d7a6_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1c0307258:;
			{
				_1bb09de6b_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1c0306e06:;
			{
				_1bb09e0d1_toolDistarch();
			}
		}
		else {
			_case_begin_1c0306c08:;
			{
				_1bb09d7a6_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1c0306cd5:;
	};
}



inline void _1bb09e510_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1bb09d7a6_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::println(_1acbbe47e_toStr(jule::Str::lit("julec version: jule0.1.1 @master", 32)));
	jule::println(_1acbbe47e_toStr(jule::Str::lit("architecture: i386", 18)));
	jule::println(_1acbbe47e_toStr(jule::Str::lit("operating system: linux", 23)));
	jule::println(_1acbbe47e_toStr((jule::Str::lit("default compiler: ", 18) + _1bb099b37_Compiler)));
	jule::println(_1acbbe47e_toStr((jule::Str::lit("default C++ standard: ", 22) + _1bb09b243_CppStd)));
}



inline void _1bb09e851_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::println(_1acbbe47e_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1bb09d7a6_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1c031c1e6:;
			{
				({
					auto except = static__1ad0a9a12_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1bb09d7a6_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1c031b602:;
			{
				_1bb09d7a6_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1c031bc51:;
	};
}



inline jule::Bool _1bb09ea93_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1c031d12b:;
			{
				_1bb09da2b_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1c031d192:;
			{
				_1bb09dc5c_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1c031d208:;
			{
				_1bb09e2ce_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1c031d26e:;
			{
				_1bb09e510_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1c031d2d5:;
			{
				_1bb09e851_mod(_15320_args);
			}
		}
		else {
			_case_begin_1c031c79b:;
			{
				return false;;
			}
		}
		_match_end_1c031c988:;
	};
	return true;;
}



inline void _1bb09ec3b_showInfo(void) {
	jule::println(_1acbbe47e_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void _1bb09edb2_main(void) {
	jule::Slice<jule::Str> _1896_args = _1ad143370_Args();;
	if ((_1896_args.len() < 2LL)) {
		_1bb09ec3b_showInfo();
		return;;
	};
	if (_1bb09ea93_processCommand(&(_1896_args))) {
		return;;
	};
	_1ac92aa48_compileCommand(&(_1896_args));
}



inline void _1ac927968_init(void) {
	_1bb099b37_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1ad0a8604_File> _1ac927c32_openOutput(jule::Str* _3016_path) {
	jule::Str _312_dir = _1bb0923d2_Dir((*(_3016_path)));;
	({
		auto except = static__1ad0a5a41_Of(_312_dir);
		if (!except.ok()) {
			({
				auto except = static__1bb0947e1_Create(_312_dir);
				if (!except.ok()) {
					_1a7932082_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1ad0a93a2_Create((*(_3016_path)));
		(except.ok()) ? (except.result) : ({
			_1a7932082_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1ac927dca_clearObjects(void) {
	({
		auto except = static__1ad0a2b81_Remove(_1ac929030_getCompilePath());
		if (!except.ok()) {
			jule::println(_1acbbe47e_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__1bb094a22_Remove(_1ac92712c_OutDir);
}



inline void _1ac9281d8_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd) {
	jule::Ptr<_1ad0a4622_Cmd> _606_cmd = static__1ad0a4a73_New(_5914_compiler);;
	(*(_606_cmd))._field_Args=_1bb089a39_SplitAll(_5929_compilerCmd, jule::Str::lit(" ", 1));
	({
		auto except = _1ad0a4c71_Spawn(_606_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type139) == _match_expr) {
					_case_begin_1c032462c:;
					{
						static__1bb0c0b5d_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type139) == _match_expr) {
					_case_begin_1c03242db:;
					{
						static__1bb0c0b5d_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1c0324110:;
					{
						static__1bb0c0b5d_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1c0324220:;
			};
			_1a7932082_Throw(jule::Str());
		}
	});
	jule::I32 _732_status = ({
		auto except = _1ad0a5205_Wait(_606_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:73:12"));
		(except.result);
	});;
	if ((_732_status != 0LL)) {
		jule::Str _753_errorMessage = ({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("\n>>> your backend compiler (", 28)); size += part0.len(); jule::Str part1 = std::move(_1bb099b37_Compiler); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); });;
		static__1bb0c0b5d_Print(jule::Str::lit("\033[31m", 5), _753_errorMessage);
		_1a7932082_Throw(jule::Str());
	};
	_1ac927dca_clearObjects();
}



inline jule::Bool _1ac9284a2_isCppSourceFile(jule::Str _8620_path) {
	jule::I32 _872_offset = _1bb088274_FindLastByte(_8620_path, '.');;
	if ((_872_offset == -1LL)) {
		return false;;
	};
	return _1c6e36aa6_IsValidCppExt(_8620_path.slice(_872_offset));;
}



inline void _1ac9286d3_pushCompCmdClang(_1ace17078_Builder* _9426_cmd) {
	({
		auto except = _1ace18057_WriteStr(_9426_cmd, jule::Str::lit("-Wno-everything ", 16));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:96:2"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_9426_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:99:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _1bb09b243_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c03275ec:;
			{
				({
					auto except = _1ace18057_WriteStr(_9426_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:102:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c0328411:;
			{
				({
					auto except = _1ace18057_WriteStr(_9426_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:104:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c0328477:;
			{
				({
					auto except = _1ace18057_WriteStr(_9426_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:106:3"));
					(except.result);
				});
			}
		}
		_match_end_1c0328169:;
	};
	({
		auto except = _1ace18310_WriteByte(_9426_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:108:2"));
	});
	if (_1bb09c40e_Production) {
		({
			auto except = _1ace18057_WriteStr(_9426_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:111:3"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(_9426_cmd, jule::Str::lit("-flto ", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:112:3"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(_9426_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:113:3"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(_9426_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:114:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1ace18057_WriteStr(_9426_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:116:3"));
			(except.result);
		});
	};
}



inline void _1ac928914_pushCompCmdGcc(_1ace17078_Builder* _12024_cmd) {
	({
		auto except = _1ace18057_WriteStr(_12024_cmd, jule::Str::lit("-w ", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:122:2"));
		(except.result);
	});
	({
		auto except = _1ace18057_WriteStr(_12024_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:125:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _1bb09b243_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c03299d9:;
			{
				({
					auto except = _1ace18057_WriteStr(_12024_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:128:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c032b447:;
			{
				({
					auto except = _1ace18057_WriteStr(_12024_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:130:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c032b4ad:;
			{
				({
					auto except = _1ace18057_WriteStr(_12024_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:132:3"));
					(except.result);
				});
			}
		}
		_match_end_1c032b1a0:;
	};
	({
		auto except = _1ace18310_WriteByte(_12024_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:134:2"));
	});
	if (_1bb09c40e_Production) {
		({
			auto except = _1ace18057_WriteStr(_12024_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:137:3"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(_12024_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:138:3"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(_12024_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:139:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1ace18057_WriteStr(_12024_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:141:3"));
			(except.result);
		});
	};
}



inline __jule_tuple_str__jule_tuple_str _1ac928d98_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1ab61326a_IR>* _14636_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1473_compiler = &(_1bb09b034_CompilerPath);;
	_1ace17078_Builder _1486_cmd = static__1ace178c5_New(64LL);;
	{
		auto &_match_expr{ _1bb099b37_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c032e1c5:;
			{
				_1ac928914_pushCompCmdGcc(&(_1486_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c032e703:;
			{
				_1ac9286d3_pushCompCmdClang(&(_1486_cmd));
			}
		}
		_match_end_1c032e5d2:;
	};
	{
		auto expr = &((*((*(_14636_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c032ea00:;
		if (it != expr_end) {
			jule::Ptr<_1aab2ee08_ImportInfo> *_1589_u = it;
			{
				if (((*((*(_1589_u))))._field_Binded && _1ac9284a2_isCppSourceFile((*(*(_1589_u)).alloc)._field_Path))) {
					({
						auto except = _1ace18057_WriteStr(&_1486_cmd, (*(*(_1589_u)).alloc)._field_Path);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:160:4"));
						(except.result);
					});
					({
						auto except = _1ace18310_WriteByte(&_1486_cmd, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:161:4"));
					});
				};
			}
			_iter_next_1c032ea00:;
			++it;
			goto _iter_begin_1c032ea00;
		}
		_iter_end_1c032ea00:;
	};
	if (!(_1ac9277ae_Out).empty()) {
		({
			auto except = _1ace18057_WriteStr(&_1486_cmd, jule::Str::lit("-o ", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:166:3"));
			(except.result);
		});
		({
			auto except = _1ace18057_WriteStr(&_1486_cmd, _1ac9277ae_Out);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:167:3"));
			(except.result);
		});
		({
			auto except = _1ace18310_WriteByte(&_1486_cmd, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:168:3"));
		});
	};
	({
		auto except = _1ace18057_WriteStr(&_1486_cmd, _14618_sourcePath);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:170:2"));
		(except.result);
	});
	{
		auto expr = &((*((*(_14636_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c033253b:;
		if (it != expr_end) {
			jule::Str *_1739_pass = it;
			{
				({
					auto except = _1ace18310_WriteByte(&_1486_cmd, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:174:3"));
				});
				({
					auto except = _1ace18057_WriteStr(&_1486_cmd, (*(_1739_pass)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:175:3"));
					(except.result);
				});
			}
			_iter_next_1c033253b:;
			++it;
			goto _iter_begin_1c033253b;
		}
		_iter_end_1c033253b:;
	};
	if ((_1bb095ced_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		({
			auto except = _1ace18057_WriteStr(&_1486_cmd, jule::Str::lit(" -lshell32", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:180:3"));
			(except.result);
		});
	};
	__jule_func_result.__jule_result_arg0 = (*(_1473_compiler));
	__jule_func_result.__jule_result_arg1 = _1ace188d7_Str(&_1486_cmd);
	return __jule_func_result;;
}



inline jule::Str _1ac929030_getCompilePath(void) {
	return _1bb0916de_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1ac92712c_OutDir; (*it++) = _1ac927506_OutName; __jule_collection; }));;
}



inline void _1ac929261_applyTargetIndependentOptimizations(jule::Ptr<_1ab61326a_IR>* _19245_ir) {
	jule::Ptr<_1ac7b7a6c_Optimizer> _1936_opt = static__1ac7b8034_New(_19245_ir);;
	_1ac7b98c6_Optimize(_1936_opt.ptr());
}



inline void _1ac929409_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1bb099b37_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c0334c03:;
			{
				_1a7932082_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c03348d4:;
			{
				if ((_1bb09b034_CompilerPath).empty()) {
					_1bb09b034_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c033494a:;
			{
				if ((_1bb09b034_CompilerPath).empty()) {
					_1bb09b034_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1c0333c02:;
			{
				_1a7932082_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1bb099b37_Compiler));
			}
		}
		_match_end_1c0334829:;
	};
}



inline void _1ac929618_checkTargetArch(jule::Str _21420_arch) {
	if ((((_21420_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1a7932082_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _21420_arch));
	};
}



inline void _1ac929849_checkTargetOs(jule::Str _22218_os) {
	if ((((_22218_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1a7932082_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _22218_os));
	};
}



inline void _1ac929a7a_checkTargetFlag(jule::Str* _23021_target) {
	if (((*(_23021_target))).empty()) {
		_1a7932082_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2352_parts = _1bb089a39_SplitAll((*(_23021_target)), jule::Str::lit("-", 1));;
	if ((_2352_parts.len() != 2LL)) {
		_1a7932082_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_23021_target))));
	};
	jule::Str _2402_os;
	jule::Str _2406_arch;
	({
		jule::Str ___jule_assign_arg = _2352_parts[0LL];
		jule::Str _1___jule_assign_arg = _2352_parts[1LL];
		_2402_os = ___jule_assign_arg;
		_2406_arch = _1___jule_assign_arg;
	});
	if ((!_2402_os.equal("native", 6))) {
		_1ac929849_checkTargetOs(_2402_os);
		_1bb095ced_OS=_2402_os;
	};
	if ((!_2406_arch.equal("native", 6))) {
		_1ac929618_checkTargetArch(_2406_arch);
		_1bb0960a6_Arch=_2406_arch;
	};
	_1aaab8523_UpdateTarget();
}



inline void _1ac929cab_checkOptFlag(jule::Str* _25318_opt) {
	if (((*(_25318_opt))).empty()) {
		_1a7932082_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_25318_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1c033baa6:;
			{
				goto _match_end_1c033b446;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1c033bb1c:;
			{
				_1ac6985c9_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else if (_match_expr == jule::Str::lit("L2", 2)) {
			_case_begin_1c033b7ed:;
			{
				_1ac6985c9_PushOptLevel(static_cast<jule::I32>(2LL));
			}
		}
		else {
			_case_begin_1c033b26a:;
			{
				_1a7932082_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_25318_opt))));
			}
		}
		_match_end_1c033b446:;
	};
}



inline void _1ac92a174_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1bb09b243_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c033cec5:;
			{
				goto _match_end_1c033c8ed;
			}
		}
		else {
			_case_begin_1c033b886:;
			{
				_1a7932082_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1bb09b243_CppStd));
			}
		}
		_match_end_1c033c8ed:;
	};
}



inline jule::Slice<jule::Str> _1ac92a33e_checkFlags(jule::Slice<jule::Str>* _28116_args) {
	jule::Str _2826_opt = jule::Str::lit("L0", 2);;
	jule::Str _2836_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1ac9224bd_FlagSet> _2856_fs = static__1ac9227dc_New();;
	_1c033e878_AddVar(_2856_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2826_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1c033e878_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_2836_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1c033e878_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1ac9277ae_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb09b4da_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb09b793_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1c033e878_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1bb099b37_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1c033e878_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1bb09b034_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb09c40e_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb09bd04_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bb09c1bc_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1c033e878_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1bb09b243_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac6950ba_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac6953b7_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac695670_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac69596c_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac695c25_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac695ecd_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac696286_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac69664e_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac696891_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac696b38_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac696de1_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac697199_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac697452_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac69770a_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac6979b3_Array)))), jule::Str::lit("opt-array", 9), 0LL, jule::Str::lit("Array optimizations", 19));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac697e9c_Len)))), jule::Str::lit("opt-len", 7), 0LL, jule::Str::lit("Len optimizations", 17));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac6981de_StdStrings)))), jule::Str::lit("opt-std-strings", 15), 0LL, jule::Str::lit("Special optimizations for the std/strings package", 49));
	_1c034809b_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1ac6983ed_StdMathCmplx)))), jule::Str::lit("opt-std-math-cmplx", 18), 0LL, jule::Str::lit("Special optimizations for the std/math/cmplx package", 52));
	jule::Slice<jule::Str> _3176_content = ({
		auto except = _1ac9236ab_Parse(_2856_fs, (*(_28116_args)));
		(except.ok()) ? (except.result) : ({
			_1a7932082_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1ac929409_checkCompilerFlag();
	_1ac92a174_checkCppStdFlag();
	_1ac929a7a_checkTargetFlag(&(_2836_target));
	_1ac929cab_checkOptFlag(&(_2826_opt));
	return _3176_content;;
}



inline void _1ac92a54d_setupSemaFlags(jule::I32* _33024_flags) {
	if (_1bb09b4da_Shadowing) {
		(*(_33024_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1ab61326a_IR> _1ac92a817_buildIr(jule::Slice<jule::Str>* _33613_args) {
	jule::Slice<jule::Str> _3372_content = _1ac92a33e_checkFlags(_33613_args);;
	jule::I32 _3396_semaFlags = static_cast<jule::I32>(0LL);;
	_1ac92a54d_setupSemaFlags(&(_3396_semaFlags));
	if ((_3372_content.len() == 0LL)) {
		_1a7932082_Throw(_1ace26829_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3372_content.len() > 1LL)) {
		_1a7932082_Throw((jule::Str::lit("undefined content: ", 19) + _3372_content[1LL]));
	};
	jule::Str _3476_path;
	jule::Bool _34712_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1bb091c3e_Abs(_3372_content[0LL]);
		_3476_path = __jule_assign_result.__jule_result_arg0;
		_34712_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34712_ok))) {
		_1a7932082_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	_1ad133ecb_Stat _3532_inf = ({
		auto except = static__1ad0a5a41_Of(_1bb095209_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1a7932082_Throw(_1ace26829_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} _1ad133ecb_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1ad1343d8_IsDir(&_3532_inf)))) {
		_1a7932082_Throw(_1ace26829_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1ab61326a_IR> _3616_ir;
	jule::Slice<_1ace263b7_Log> _36110_logs;
	({
		__jule_tuple_x_1ab61326a_IR__jule_tuple_s_1ace263b7_Log __jule_assign_result = static__1ab613743_Build(_3476_path, _3396_semaFlags);
		_3616_ir = __jule_assign_result.__jule_result_arg0;
		_36110_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3616_ir == nullptr) && (_36110_logs == nullptr))) {
		_1a7932082_Throw(_1ace26829_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3476_path, &__jule_any_type5); __jule_collection; })));
	};
	if ((_36110_logs != nullptr)) {
		static__1a79315ae_PrintLogs(&(_36110_logs));
		_1a7932082_Throw(jule::Str());
	};
	return _3616_ir;;
}



inline void _1ac92aa48_compileCommand(jule::Slice<jule::Str>* _37624_args) {
	((*(_37624_args))).mut_slice(1LL);;
	if ((*(_37624_args))[0LL].equal("test", 4)) {
		_1bb09ba4b_Test=true;
		((*(_37624_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1ab61326a_IR> _3826_ir = _1ac92a817_buildIr(_37624_args);;
	_1ab61db5a_ProgramMeta=static__1ab621267_Collect(_3826_ir);
	if ((!(_1bb09ba4b_Test))) {
		;
		(*(_1ab61db5a_ProgramMeta))._field_EntryPoint=_1aab33c42_FindFn((*(_3826_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);
		if (((*_1ab61db5a_ProgramMeta.alloc)._field_EntryPoint == nullptr)) {
			_1a7932082_Throw(_1ace26829_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1ac929261_applyTargetIndependentOptimizations(&(_3826_ir));
	_1ab6147aa_Order(_3826_ir.ptr());
	jule::Str _4002_compPath = _1ac929030_getCompilePath();;
	jule::Str _4012_compiler;
	jule::Str _40112_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1ac928d98_genCompileCmd(_4002_compPath, &(_3826_ir));
		_4012_compiler = __jule_assign_result.__jule_result_arg0;
		_40112_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1ac894d58_ObjectCoder> _4036_oc = static__1ac8952ba_New(&(_3826_ir), _1ac8925a3_SerializationInfo{._field_Compiler=_4012_compiler, ._field_CompilerCommand=_40112_compilerCmd});;
	if (_1bb09ba4b_Test) {
		jule::Ptr<_1ac7da2cb_TestCoder> _4087_tc = static__1ac7da782_New(&(_4036_oc));;
		_1ac7dbb07_Serialize(_4087_tc);
	} else {
		_1ac8a27c2_Serialize(_4036_oc);
	};
	jule::Ptr<_1ad0a8604_File> _4146_file = _1ac927c32_openOutput(&(_4002_compPath));;
	({
		auto except = _1ad0a3115_Write(_4146_file.ptr(), _1ace19388_Buf(&(*(_4036_oc))._field_Buf));
		if (!except.ok()) {
			_1a7932082_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1ad0aa31a_Close(_4146_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:418:2"));
	});
	if ((!(_1bb09b793_Transpilation))) {
		_1ac9281d8_compileIr(_4012_compiler, _40112_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1bb0961e9_init();
	_1aaab8699_init();
	_1ac927968_init();

}

inline jule::Bool __jule_anon1bd163869(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa3d179_ParamIns> _25721_p1, jule::Ptr<_1aaa3d179_ParamIns> _25736_p2) {
	if (((*((*(_25721_p1))._field_Decl))._field_Mutable != (*(*(_25736_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1aaa39d9b_IsSelf((*(_25721_p1))._field_Decl.ptr())) {
		if ((!(_1aaa39d9b_IsSelf((*(_25736_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1aaa3a132_IsRef((*(_25721_p1))._field_Decl) != _1aaa3a132_IsRef((*(_25736_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*((*(_25721_p1))._field_Decl))._field_Reference != (*(*(_25736_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*((*(_25721_p1))._field_Decl))._field_Variadic != (*(*(_25736_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1aabed603_Equal((*(_25721_p1))._field_Type, (*(_25736_p2))._field_Type);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd1cc718(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _6521_e, jule::Ptr<_1aa106875_FnCallExpr>* _6536_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd1cc718_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd1cc718_ctx>();
	return _1aaac28b2__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd1ce4ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _7221_e, jule::Ptr<_1aa106875_FnCallExpr>* _7236_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd1ce4ea_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd1ce4ea_ctx>();
	return _1aaac2cad__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd1e26ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _17821_e, jule::Ptr<_1aa106875_FnCallExpr>* _17836_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd1e26ea_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd1e26ea_ctx>();
	return _1aaac5ad5__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd1e44dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _18521_e, jule::Ptr<_1aa106875_FnCallExpr>* _18536_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd1e44dd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd1e44dd_ctx>();
	return _1aaac5ed1__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd203e59(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _28321_e, jule::Ptr<_1aa106875_FnCallExpr>* _28336_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd203e59_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd203e59_ctx>();
	return _1aaac8ce7__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd21b306(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _40221_e, jule::Ptr<_1aa106875_FnCallExpr>* _40236_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd21b306_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd21b306_ctx>();
	return _1aaacbb30__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd21d0e9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _40921_e, jule::Ptr<_1aa106875_FnCallExpr>* _40936_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd21d0e9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd21d0e9_ctx>();
	return _1aaacc427__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd21eddc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _41621_e, jule::Ptr<_1aa106875_FnCallExpr>* _41636_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd21eddc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd21eddc_ctx>();
	return _1aaacc02b__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2aabe2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _98821_e, jule::Ptr<_1aa106875_FnCallExpr>* _98836_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2aabe2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2aabe2_ctx>();
	return _1aaad6e48__Strict(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2ac9d5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _99521_e, jule::Ptr<_1aa106875_FnCallExpr>* _99536_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2ac9d5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2ac9d5_ctx>();
	return _1aaad1d99__Decl(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2ae7c8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _100221_e, jule::Ptr<_1aa106875_FnCallExpr>* _100236_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2ae7c8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2ae7c8_ctx>();
	return _1aaad2295__Str(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2b15bb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _100921_e, jule::Ptr<_1aa106875_FnCallExpr>* _100936_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2b15bb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2b15bb_ctx>();
	return _1aaad2a8c__Bits(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2b33ae(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _101621_e, jule::Ptr<_1aa106875_FnCallExpr>* _101636_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2b33ae_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2b33ae_ctx>();
	return _1aaad2e88__Elem(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2b51a2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _102321_e, jule::Ptr<_1aa106875_FnCallExpr>* _102336_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2b51a2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2b51a2_ctx>();
	return _1aaad3384__Size(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2b6e95(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _103021_e, jule::Ptr<_1aa106875_FnCallExpr>* _103036_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2b6e95_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2b6e95_ctx>();
	return _1aaad3780__Key(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2b8c88(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _103721_e, jule::Ptr<_1aa106875_FnCallExpr>* _103736_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2b8c88_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2b8c88_ctx>();
	return _1aaad3b7b__Value(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2babbe(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _104421_e, jule::Ptr<_1aa106875_FnCallExpr>* _104436_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2babbe_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2babbe_ctx>();
	return _1aaad4077__Fields(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2bc9b2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _105121_e, jule::Ptr<_1aa106875_FnCallExpr>* _105136_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2bc9b2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2bc9b2_ctx>();
	return _1aaad4473__Statics(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2be7a5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _105821_e, jule::Ptr<_1aa106875_FnCallExpr>* _105836_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2be7a5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2be7a5_ctx>();
	return _1aaad6a4c__Params(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2c1598(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _106521_e, jule::Ptr<_1aa106875_FnCallExpr>* _106536_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2c1598_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2c1598_ctx>();
	return _1aaad595d__Types(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2c338b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _107221_e, jule::Ptr<_1aa106875_FnCallExpr>* _107236_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2c338b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2c338b_ctx>();
	return _1aaad486e__Binded(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2c517e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _107921_e, jule::Ptr<_1aa106875_FnCallExpr>* _107936_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2c517e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2c517e_ctx>();
	return _1aaad4c6a__Ordered(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2c6e72(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _108621_e, jule::Ptr<_1aa106875_FnCallExpr>* _108636_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2c6e72_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2c6e72_ctx>();
	return _1aaad5166__Comparable(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2c8c65(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _109321_e, jule::Ptr<_1aa106875_FnCallExpr>* _109336_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2c8c65_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2c8c65_ctx>();
	return _1aaad5562__Mutable(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2caa58(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _110021_e, jule::Ptr<_1aa106875_FnCallExpr>* _110036_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2caa58_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2caa58_ctx>();
	return _1aaad5d59__CanNil(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2cc84b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _110721_e, jule::Ptr<_1aa106875_FnCallExpr>* _110736_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2cc84b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2cc84b_ctx>();
	return _1aaad6255__GC(__jule_closure_ctx.alloc->_self_, _110721_e, _110736_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2ce63e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _111421_e, jule::Ptr<_1aa106875_FnCallExpr>* _111436_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2ce63e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2ce63e_ctx>();
	return _1aaad6651__Result(__jule_closure_ctx.alloc->_self_, _111421_e, _111436_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd2d1432(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _112121_e, jule::Ptr<_1aa106875_FnCallExpr>* _112136_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd2d1432_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd2d1432_ctx>();
	return _1aaad2691__Kind(__jule_closure_ctx.alloc->_self_, _112121_e, _112136_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd30a3c3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _128421_e, jule::Ptr<_1aa106875_FnCallExpr>* _128436_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd30a3c3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd30a3c3_ctx>();
	return _1aaad82bd__Unwrap(__jule_closure_ctx.alloc->_self_, _128421_e, _128436_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd30c1b6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _129121_e, jule::Ptr<_1aa106875_FnCallExpr>* _129136_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd30c1b6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd30c1b6_ctx>();
	return _1aaad86b9__Type(__jule_closure_ctx.alloc->_self_, _129121_e, _129136_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd30dea9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _129821_e, jule::Ptr<_1aa106875_FnCallExpr>* _129836_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd30dea9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd30dea9_ctx>();
	return _1aaad8ab5__Lvalue(__jule_closure_ctx.alloc->_self_, _129821_e, _129836_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd310c9c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _130521_e, jule::Ptr<_1aa106875_FnCallExpr>* _130536_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd310c9c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd310c9c_ctx>();
	return _1aaad8eb1__Mutable(__jule_closure_ctx.alloc->_self_, _130521_e, _130536_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd312a90(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _131221_e, jule::Ptr<_1aa106875_FnCallExpr>* _131236_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd312a90_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd312a90_ctx>();
	return _1aaad93ac__Const(__jule_closure_ctx.alloc->_self_, _131221_e, _131236_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3196e0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _131921_e, jule::Ptr<_1aa106875_FnCallExpr>* _131936_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd3196e0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd3196e0_ctx>();
	return _1aaad97a8__Field(__jule_closure_ctx.alloc->_self_, _131921_e, _131936_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd31b4d3(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _132621_e, jule::Ptr<_1aa106875_FnCallExpr>* _132636_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd31b4d3_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd31b4d3_ctx>();
	return _1aaad9ba4__Method(__jule_closure_ctx.alloc->_self_, _132621_e, _132636_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd33096a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _145121_e, jule::Ptr<_1aa106875_FnCallExpr>* _145136_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd33096a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd33096a_ctx>();
	return _1aaadc954__Path(__jule_closure_ctx.alloc->_self_, _145121_e, _145136_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd33275d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _145821_e, jule::Ptr<_1aa106875_FnCallExpr>* _145836_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd33275d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd33275d_ctx>();
	return _1aaadcd50__Name(__jule_closure_ctx.alloc->_self_, _145821_e, _145836_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd334551(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _146521_e, jule::Ptr<_1aa106875_FnCallExpr>* _146536_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd334551_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd334551_ctx>();
	return _1aaadd24b__Dir(__jule_closure_ctx.alloc->_self_, _146521_e, _146536_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd393deb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _197121_e, jule::Ptr<_1aa106875_FnCallExpr>* _197136_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd393deb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd393deb_ctx>();
	return _1aaae1b9a__Name(__jule_closure_ctx.alloc->_self_, _197121_e, _197136_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd395bde(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _197821_e, jule::Ptr<_1aa106875_FnCallExpr>* _197836_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd395bde_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd395bde_ctx>();
	return _1aaae2096__Public(__jule_closure_ctx.alloc->_self_, _197821_e, _197836_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3979d2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _198521_e, jule::Ptr<_1aa106875_FnCallExpr>* _198536_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd3979d2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd3979d2_ctx>();
	return _1aaae2492__Binded(__jule_closure_ctx.alloc->_self_, _198521_e, _198536_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3997c5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _199221_e, jule::Ptr<_1aa106875_FnCallExpr>* _199236_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd3997c5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd3997c5_ctx>();
	return _1aaae288d__Exceptional(__jule_closure_ctx.alloc->_self_, _199221_e, _199236_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd39b5b8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _199921_e, jule::Ptr<_1aa106875_FnCallExpr>* _199936_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd39b5b8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd39b5b8_ctx>();
	return _1aaae2c89__Mutable(__jule_closure_ctx.alloc->_self_, _199921_e, _199936_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd39d3ab(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _200621_e, jule::Ptr<_1aa106875_FnCallExpr>* _200636_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd39d3ab_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd39d3ab_ctx>();
	return _1aaae3185__Variadic(__jule_closure_ctx.alloc->_self_, _200621_e, _200636_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3a019e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _201321_e, jule::Ptr<_1aa106875_FnCallExpr>* _201336_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd3a019e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd3a019e_ctx>();
	return _1aaae3581__Reference(__jule_closure_ctx.alloc->_self_, _201321_e, _201336_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3a1e92(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _202021_e, jule::Ptr<_1aa106875_FnCallExpr>* _202036_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd3a1e92_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd3a1e92_ctx>();
	return _1aaae397c__Params(__jule_closure_ctx.alloc->_self_, _202021_e, _202036_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3a3dc8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _202721_e, jule::Ptr<_1aa106875_FnCallExpr>* _202736_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd3a3dc8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd3a3dc8_ctx>();
	return _1aaae3d78__Fields(__jule_closure_ctx.alloc->_self_, _202721_e, _202736_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3a5bbb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _203421_e, jule::Ptr<_1aa106875_FnCallExpr>* _203436_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd3a5bbb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd3a5bbb_ctx>();
	return _1aaae4274__Statics(__jule_closure_ctx.alloc->_self_, _203421_e, _203436_fc);;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd3a79ae(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aabbad84_eval>* _204121_e, jule::Ptr<_1aa106875_FnCallExpr>* _204136_fc, jule::Ptr<_1aabb8db5_Data>* ) {
	jule::Ptr<__jule_anon_1bd3a79ae_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd3a79ae_ctx>();
	return _1aaae4670__Methods(__jule_closure_ctx.alloc->_self_, _204121_e, _204136_fc);;
}

inline jule::Bool __jule_anon_1bd3b3976(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab4c62e_sema>* _6415_sema, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1bd3b3976_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd3b3976_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_self_))._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd3b4955:;
		if (it != expr_end) {
			jule::I32 _659_i = it - expr->begin();
			jule::Ptr<_1aa10aa22_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1aabeb4d0_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*(_6516_g))._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1bd3b4955;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(0LL, (*((*(_6516_g))._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1aabecdb6_Type>(nullptr); __jule_collection; });
				{
					auto expr = &((*(*(_6516_g))._field_Constraint.alloc)._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1bd3b7705:;
					if (it != expr_end) {
						jule::Ptr<_1aa0ed817_TypeDecl> _7117_mask = *it;
						{
							jule::I32 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1aabecdb6_Type> _7310_kind = _1aab54933_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1aac23ae0_Lookup_mptr_data4), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type78) {
										_case_begin_1bd3b95d6:;
										{
											jule::Ptr<_1aa0ede22_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1aa0ede22_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1aaae8ec1_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1bd3b9d23;
											};
										}
									}
									_match_end_1bd3b955e:;
								};
								return false;;
							};
							_julec_label_1bd3b9d23:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aabecdb6_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1bd3b7705:;
						++it;
						goto _iter_begin_1bd3b7705;
					}
					_iter_end_1bd3b7705:;
				};
			}
			_iter_next_1bd3b4955:;
			++it;
			_659_i++;
			goto _iter_begin_1bd3b4955;
		}
		_iter_end_1bd3b4955:;
	};
	return true;;
}

inline void __jule_anon_1bd54a3d2(jule::Ptr<jule::Uintptr> __f_ctx, jule::I32 _126519_i) {
	jule::Ptr<__jule_anon_1bd54a3d2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd54a3d2_ctx>();
	jule::Ptr<_1aa10bc32_AssignLeft> _12664_l = (*(__jule_closure_ctx.alloc->_126347_a))._field_Left[_126519_i];;
	(*(__jule_closure_ctx.alloc->_12647_eval))._field_target._field_mutable=(!(_1aa0da6d3_IsIgnoreIdent((*(_12664_l))._field_Ident)));
	{
		
		if (((*__jule_closure_ctx.alloc->_126347_a.alloc)._field_Declarative && (*__jule_closure_ctx.alloc->_12647_eval.alloc)._field_target._field_mutable)) {
			_case_begin_1bd54bcc9:;
			{
				if (((*_12664_l.alloc)._field_Mutable && (*_12664_l.alloc)._field_Reference)) {
					(*__jule_closure_ctx.alloc->_12647_eval.alloc)._field_target._field_mutable=(*_12664_l.alloc)._field_Mutable;
					goto _match_end_1bd54b3b1;
				};
				{
					auto &_match_expr{ (*((*(_12664_l))._field_Expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type41) {
						_case_begin_1bd54dade:;
						{
							if (_1aab10da6_isNewAssignIdent(__jule_closure_ctx.alloc->_self_.ptr(), (*_12664_l.alloc)._field_Ident)) {
								(*__jule_closure_ctx.alloc->_12647_eval.alloc)._field_target._field_mutable=(*_12664_l.alloc)._field_Mutable;
							};
						}
					}
					_match_end_1bd54da67:;
				};
			}
		}
		_match_end_1bd54b3b1:;
	};
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bd5566a7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa102b4b_Expr>* _129644_expr) {
	jule::Ptr<__jule_anon_1bd5566a7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd5566a7_ctx>();
	if (((*(__jule_closure_ctx.alloc->_12948__i)) >= (*(__jule_closure_ctx.alloc->_126347_a))._field_Left.len())) {
		return nullptr;;
	};
	__jule_closure_ctx.alloc->_12653_updateMut((*(__jule_closure_ctx.alloc->_12948__i)));
	jule::Ptr<_1aabb8db5_Data> _13019_d = _1aabdad3d_evalExpr(__jule_closure_ctx.alloc->_12647_eval, (*(_129644_expr)));;
	if ((_13019_d != nullptr)) {
		(*(__jule_closure_ctx.alloc->_12958__parts))=jule::append((*__jule_closure_ctx.alloc->_12958__parts.alloc),({ auto __jule_collection = jule::Slice<_1aaaec0a1_exprPart>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1aaaec0a1_exprPart{._field_data=_13019_d, ._field_expr=(*(_129644_expr))}; __jule_collection; }));
	};
	return _13019_d;;
}

inline jule::Bool __jule_anon_1bd6d2921(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab2ee08_ImportInfo> _48835_spkg) {
	jule::Ptr<__jule_anon_1bd6d2921_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd6d2921_ctx>();
	return ((!(_1aab2a0e0_isImplicitImport(_48835_spkg))) && ((*((*(__jule_closure_ctx.alloc->_48728_pkg))))._field_Path == (*(_48835_spkg))._field_Path));;
}

inline jule::Bool __jule_anon_1bd7e1a0d(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab4c62e_sema>* _84142_sema) {
	jule::Ptr<__jule_anon_1bd7e1a0d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd7e1a0d_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_83443_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd7e29a9:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3d179_ParamIns> _84316_p = *it;
			{
				if ((!(_1aaa39d9b_IsSelf((*(_84316_p))._field_Decl.ptr())))) {
					(*_84316_p.alloc)._field_Type=_1aab5930b_buildNonGenericType((*(_84142_sema)), &((*((*(*(_84316_p))._field_Decl.alloc)._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_83511_generics), __jule_closure_ctx.alloc->_83459_ignored);
					__jule_func_result=(__jule_func_result && ((*_84316_p.alloc)._field_Type != nullptr));
				};
			}
			_iter_next_1bd7e29a9:;
			++it;
			goto _iter_begin_1bd7e29a9;
		}
		_iter_end_1bd7e29a9:;
	};
	if ((!(_1aaa3b6c7_IsVoid((*__jule_closure_ctx.alloc->_83443_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_83443_f.alloc)._field_Result=_1aab5930b_buildNonGenericType((*(_84142_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_83443_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_83511_generics), __jule_closure_ctx.alloc->_83459_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_83443_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1bd809729(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab4c62e_sema>* _94442_sema) {
	jule::Ptr<__jule_anon_1bd809729_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd809729_ctx>();
	return __jule_closure_ctx.alloc->_93746_algo(_94442_sema, &(__jule_closure_ctx.alloc->_9427_generics));;
}

inline jule::Bool __jule_anon_1bd80c111(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab4c62e_sema>* _95737_sema, jule::Slice<jule::Ptr<_1aabec1a1_TypeAlias>>* _95755_generics) {
	jule::Ptr<__jule_anon_1bd80c111_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd80c111_ctx>();
	jule::Bool _9588_ok = true;;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_95337_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd80d4db:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3d179_ParamIns> _95916_p = *it;
			{
				if (_1aaa39d9b_IsSelf((*(_95916_p))._field_Decl.ptr())) {
					if (((*(__jule_closure_ctx.alloc->_95337_f))._field_Owner == nullptr)) {
						goto _iter_next_1bd80d4db;
					};
					if (_1aaa3a132_IsRef((*(_95916_p))._field_Decl)) {
						(*_95916_p.alloc)._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aac0a6ed_Sptr>(_1aac0a6ed_Sptr{._field_Elem=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(__jule_closure_ctx.alloc->_95337_f))._field_Owner, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)});
					} else {
						(*_95916_p.alloc)._field_Type=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(__jule_closure_ctx.alloc->_95337_f))._field_Owner, (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data0)});
					};
				} else {
					(*(_95916_p))._field_Type=_1aab56083_buildTypeWithGenerics((*(_95737_sema)), &((*((*((*_95916_p.alloc)._field_Decl))._field_TypeSym))._field_Decl), (*(_95755_generics)), (*(__jule_closure_ctx.alloc->_95337_f))._field_Refers);
					if (((*_95916_p.alloc)._field_Type != nullptr)) {
						_1aab5b055_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_95916_p));
					} else {
						_9588_ok=false;
					};
				};
			}
			_iter_next_1bd80d4db:;
			++it;
			goto _iter_begin_1bd80d4db;
		}
		_iter_end_1bd80d4db:;
	};
	if ((!(_1aaa3b6c7_IsVoid((*__jule_closure_ctx.alloc->_95337_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_95337_f.alloc)._field_Result=_1aab56083_buildTypeWithGenerics((*(_95737_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_95337_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), (*(_95755_generics)), (*__jule_closure_ctx.alloc->_95337_f.alloc)._field_Refers);
		_9588_ok=(((*__jule_closure_ctx.alloc->_95337_f.alloc)._field_Result != nullptr) && _9588_ok);
	};
	return _9588_ok;;
}

inline jule::Ptr<_1aabb8db5_Data> __jule_anon_1bde59791(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aa102b4b_Expr>* _297539_expr) {
	jule::Ptr<__jule_anon_1bde59791_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bde59791_ctx>();
	return _1aabdad3d_evalExpr(__jule_closure_ctx.alloc->_self_, (*(_297539_expr)));;
}

inline jule::Str __jule_anon1be0acd12(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _91619_def) {
	{
		auto &_match_expr{ (*(_91619_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1be0ad5c6:;
			{
				return (*((*(_91619_def)).cast_ptr<_1aabec1a1_TypeAlias>(&__jule_any_type8)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1be0adbe2:;
			{
				return (*((*(_91619_def)).cast_ptr<_1aa966767_Struct>(&__jule_any_type9)))._field_Ident;;
			}
		}
		else {
			_case_begin_1be0ad7a2:;
			{
				return jule::Str();;
			}
		}
		_match_end_1be0ad73b:;
	};
}

inline void __jule_anon_1be79c6ee(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa42524_SymTab>* _17731_file) {
	jule::Ptr<__jule_anon_1be79c6ee_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be79c6ee_ctx>();
	{
		auto expr = &((*((*(_17731_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be79d139:;
		if (it != expr_end) {
			jule::Ptr<_1aab70795_Var> _17816_v = *it;
			{
				if (_1ab61a8b0_HasDirective(&((*(_17816_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1be79399d_isLive(__jule_closure_ctx.alloc->_self_, &(_17816_v))))) {
						_1be796c04_pushLive(__jule_closure_ctx.alloc->_self_, _17816_v);
						_1ac7ae129_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_17816_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1be79d139:;
			++it;
			goto _iter_begin_1be79d139;
		}
		_iter_end_1be79d139:;
	};
	{
		auto expr = &((*((*(_17731_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be79e1b2:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _18616_f = *it;
			{
				if (_1ab61a8b0_HasDirective(&((*(_18616_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_18616_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1be7a09aa:;
						if (it != expr_end) {
							jule::Ptr<_1aaa3e2ce_FnIns> _18818_ins = *it;
							{
								if ((!(_1be77d900_isLive(__jule_closure_ctx.alloc->_self_, &(_18818_ins))))) {
									_1be77e99a_pushLive(__jule_closure_ctx.alloc->_self_, _18818_ins);
									_1ac7ae129_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_18818_ins))._field_Refers));
								};
							}
							_iter_next_1be7a09aa:;
							++it;
							goto _iter_begin_1be7a09aa;
						}
						_iter_end_1be7a09aa:;
					};
				};
			}
			_iter_next_1be79e1b2:;
			++it;
			goto _iter_begin_1be79e1b2;
		}
		_iter_end_1be79e1b2:;
	};
}

inline void __jule_anon_1be810850(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr) {
	jule::Ptr<__jule_anon_1be810850_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be810850_ctx>();
	{
		auto &_match_expr{ (*(_2236_expr)) };
		
		if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1be811279:;
			{
				jule::Ptr<_1aaa30ed5_FnCallExpr> _259_m = (*(_2236_expr)).cast_ptr<_1aaa30ed5_FnCallExpr>(&__jule_any_type30);;
				if (((*(_259_m))._field_Except != nullptr)) {
					{
						_1ac7b2b88_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_259_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1be8110c0:;
			{
				jule::Ptr<_1aaa31d1b_AnonFnExpr> _309_m = (*(_2236_expr)).cast_ptr<_1aaa31d1b_AnonFnExpr>(&__jule_any_type101);;
				_1ac7b55e7_eliminateDeadCodeOfScope((*((*(_309_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1be811202:;
	};
}

inline void __jule_anon_1be955489(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _7047_m) {
	jule::Ptr<__jule_anon_1be955489_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be955489_ctx>();
	if ((*(__jule_closure_ctx.alloc->_687__check))) {
		{
			auto &_match_expr{ (*(_7047_m)) };
			
			if (_match_expr.type == &__jule_any_type113) {
				_case_begin_1be956358:;
				{
					jule::Ptr<_1aaa2e0d2_BinaryExpr> _7410_binary = (*(_7047_m)).cast_ptr<_1aaa2e0d2_BinaryExpr>(&__jule_any_type113);;
					(*__jule_closure_ctx.alloc->_687__check.alloc)=((*((*(_7410_binary))._field_Op))._field_Id != static_cast<jule::U32>(55LLU));
					if ((!((*__jule_closure_ctx.alloc->_687__check.alloc)))) {
						goto _match_end_1be9562e2;
					};
					_1ac6878d7_checkBinaryForBoundary(__jule_closure_ctx.alloc->_527_exop, &(_7410_binary));
					_1ac687b90_checkBinaryForNil(__jule_closure_ctx.alloc->_527_exop, &(_7410_binary));
				}
			}
			_match_end_1be9562e2:;
		};
	};
	_1ac68a91d_inspectStep(__jule_closure_ctx.alloc->_527_exop, _7047_m);
}

inline void __jule_anon_1be984ed0(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any _31013_m) {
	jule::Ptr<__jule_anon_1be984ed0_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be984ed0_ctx>();
	{
		auto &_match_expr{ _31013_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1be986355:;
			{
				jule::Ptr<_1aaa2e0d2_BinaryExpr> _3249_binary = _31013_m.unsafe_cast_ptr<_1aaa2e0d2_BinaryExpr>();;
				{
					_1ac688542_binaryStrCommon(__jule_closure_ctx.alloc->_self_, &(_3249_binary));
					(*(__jule_closure_ctx.alloc->_3094__step))((*(*(_3249_binary))._field_Left.alloc)._field_Model);
					(*(__jule_closure_ctx.alloc->_3094__step))((*((*(_3249_binary))._field_Right))._field_Model);
				};
			}
		}
		else {
			_case_begin_1be98592b:;
			{
				(*__jule_closure_ctx.alloc->_3057_model.alloc)._field_Parts=jule::append((*__jule_closure_ctx.alloc->_3057_model.alloc)._field_Parts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _31013_m; __jule_collection; }));
			}
		}
		_match_end_1be9858b5:;
	};
}

inline void __jule_anon_1bea26280(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _94447_m) {
	jule::Ptr<__jule_anon_1bea26280_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bea26280_ctx>();
	{
		_1ac68a91d_inspectStep(__jule_closure_ctx.alloc->_self_, _94447_m);
	};
}

inline void __jule_anon_1bebe69b1(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bebe69b1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bebe69b1_ctx>();
	if (__jule_closure_ctx.alloc->_1017_ref) {
		_1ac895573_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1ac895573_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1bebea4ba(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bebea4ba_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bebea4ba_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_9336_it))))._field_KeyB.alloc)._field_Reference) {
			_1ac895573_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1ac895573_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1bec1994b(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bec1994b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bec1994b_ctx>();
	_1ac895573_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_1bec1be37(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bec1be37_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bec1be37_ctx>();
	_1ac895573_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_1bec35a44(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1bec35a44_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bec35a44_ctx>();
	_1ac895573_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1becb7334(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1becb7334_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1becb7334_ctx>();
	_1ac895573_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1becb8665(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1becb8665_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1becb8665_ctx>();
	_1ac7cbd4a_possibleRefExpr((*((*(__jule_closure_ctx.alloc->_self_))._field_oc))._field_ec, (*((*(__jule_closure_ctx.alloc->_74030_m))._field_Expr))._field_Model);
}

inline jule::Bool __jule_anon_1bed3c552(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab70795_Var> _111667_v) {
	jule::Ptr<__jule_anon_1bed3c552_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bed3c552_ctx>();
	return _1ac7c5283_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_111034_m), &(_111667_v));;
}

inline void __jule_anon_1c01bd2c8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab3267a_Package>* _82938_pkg) {
	jule::Ptr<__jule_anon_1c01bd2c8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c01bd2c8_ctx>();
	_1ab616009_IterFiles(_82938_pkg, jule::__new_closure<void,jule::Ptr<_1aaa42524_SymTab>*>((void*)__jule_anon_1c01be186, jule::Ptr<__jule_anon_1c01be186_ctx>::make(__jule_anon_1c01be186_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c01be186_ctx_handler));
}

inline void __jule_anon_1c01d2d04(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c01d2d04_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c01d2d04_ctx>();
	_1ac895573_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1ac7d6519_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_91424_v))._field_Value))._field_Data.alloc)._field_Model);
	_1ac895573_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1c01d4de4(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c01d4de4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c01d4de4_ctx>();
	_1ac7cbd4a_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_91424_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1c01d7600(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c01d7600_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c01d7600_ctx>();
	_1ac895573_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1c01d8799(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c01d8799_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c01d8799_ctx>();
	_1ac7d76d5_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_91424_v))._field_TypeSym.alloc)._field_Type);
}

inline void __jule_anon_1c0227673(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab3267a_Package>* _117938_pkg) {
	jule::Ptr<__jule_anon_1c0227673_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0227673_ctx>();
	_1ab616009_IterFiles(_117938_pkg, jule::__new_closure<void,jule::Ptr<_1aaa42524_SymTab>*>((void*)__jule_anon_1c0228531, jule::Ptr<__jule_anon_1c0228531_ctx>::make(__jule_anon_1c0228531_ctx{._117938_pkg=_117938_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c0228531_ctx_handler));
}

inline void __jule_anon_1c02289d7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa42524_SymTab>* _120231_file) {
	jule::Ptr<__jule_anon_1c02289d7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c02289d7_ctx>();
	{
		auto expr = &((*((*(_120231_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c022cc61:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _120316_f = *it;
			{
				if ((*(_120316_f))._field_Ident.equal("init", 4)) {
					_1ac895e25_indent(__jule_closure_ctx.alloc->_self_);
					static__1ac7de049_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_120316_f));
					_1ac895573_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1c022cc61:;
			++it;
			goto _iter_begin_1c022cc61;
		}
		_iter_end_1c022cc61:;
	};
}

inline void __jule_anon_1c0234c9b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab3267a_Package>* _124138_pkg) {
	jule::Ptr<__jule_anon_1c0234c9b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0234c9b_ctx>();
	_1ac8a10b7_pushInit(__jule_closure_ctx.alloc->_self_, _124138_pkg);
}

inline void __jule_anon_1c0239cd4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa3b221_Fn>* _127836_m) {
	jule::Ptr<__jule_anon_1c0239cd4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0239cd4_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_12747_hash))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c023a7eb:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _128011_em = *it;
			{
				if ((_128011_em == (*(_127836_m)))) {
					return;;
				};
			}
			_iter_next_1c023a7eb:;
			++it;
			goto _iter_begin_1c023a7eb;
		}
		_iter_end_1c023a7eb:;
	};
	(*__jule_closure_ctx.alloc->_12747_hash.alloc)._field_methods=jule::append((*__jule_closure_ctx.alloc->_12747_hash.alloc)._field_methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1aaa3b221_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_127836_m)); __jule_collection; }));
}

inline void __jule_anon_1c023c336(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab3267a_Package>* _129238_pkg) {
	jule::Ptr<__jule_anon_1c023c336_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c023c336_ctx>();
	_1ab616009_IterFiles(_129238_pkg, jule::__new_closure<void,jule::Ptr<_1aaa42524_SymTab>*>((void*)__jule_anon_1c023d1e4, jule::Ptr<__jule_anon_1c023d1e4_ctx>::make(__jule_anon_1c023d1e4_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c023d1e4_ctx_handler));
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1c02cd6d5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1a791d469_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1c02d60b1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1a791ceb3_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1bd1c1531(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab2ee08_ImportInfo> _206125_pkg) {
	return (*(_206125_pkg))._field_LinkPath.equal("std/comptime", 12);;
}

inline jule::Bool __jule_anon_1bdb856cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aab2ee08_ImportInfo> _478630_imp) {
	jule::Ptr<__jule_anon_1bdb856cb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bdb856cb_ctx>();
	return (((*(_478630_imp))._field_Alias == __jule_closure_ctx.alloc->_478538_namespace) && (!(_1aab2a0e0_isImplicitImport(_478630_imp))));;
}

inline void __jule_anon_1c01be186(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa42524_SymTab>* _83032_file) {
	jule::Ptr<__jule_anon_1c01be186_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c01be186_ctx>();
	{
		auto expr = &((*((*(_83032_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c01beab0:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _83117_f = *it;
			{
				if (((!((*(_83117_f))._field_Binded)) && ((*_83117_f.alloc)._field_Token != nullptr))) {
					_1ac8975db_pushResult(__jule_closure_ctx.alloc->_self_, &(_83117_f));
					_1ac89b018_funcDecl(__jule_closure_ctx.alloc->_self_, &(_83117_f), false);
				};
			}
			_iter_next_1c01beab0:;
			++it;
			goto _iter_begin_1c01beab0;
		}
		_iter_end_1c01beab0:;
	};
}

inline void __jule_anon_1c0228531(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa42524_SymTab>* _118032_file) {
	jule::Ptr<__jule_anon_1c0228531_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0228531_ctx>();
	{
		auto expr = &((*((*(_118032_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0228e5a:;
		if (it != expr_end) {
			jule::Ptr<_1aaa3b221_Fn> _118117_f = *it;
			{
				if (((!(_1bb09ba4b_Test)) && _1ab61a8b0_HasDirective(&((*(_118117_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1c0228e5a;
				};
				if (((*(__jule_closure_ctx.alloc->_117938_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_118117_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_1c022a8eb:;
							{
								goto _iter_next_1c0228e5a;
							}
						}
						_match_end_1c022a830:;
					};
				};
				if (((!((*(_118117_f))._field_Binded)) && ((*_118117_f.alloc)._field_Token != nullptr))) {
					_1ac89d559_func(__jule_closure_ctx.alloc->_self_, &(_118117_f));
					_1ac895573_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1c0228e5a:;
			++it;
			goto _iter_begin_1c0228e5a;
		}
		_iter_end_1c0228e5a:;
	};
}

inline void __jule_anon_1c023d1e4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1aaa42524_SymTab>* _129332_file) {
	jule::Ptr<__jule_anon_1c023d1e4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c023d1e4_ctx>();
	{
		auto expr = &((*((*(_129332_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c023db1d:;
		if (it != expr_end) {
			jule::Ptr<_1aaa46935_Trait> _129417_t = *it;
			{
				if (((*(_129417_t))._field_Token != nullptr)) {
					_1ac8a1b67_buildTraitHash(__jule_closure_ctx.alloc->_self_, &(_129417_t));
				};
			}
			_iter_next_1c023db1d:;
			++it;
			goto _iter_begin_1c023db1d;
		}
		_iter_end_1c023db1d:;
	};
}

inline void __jule_RCAdd(jule::U32* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U32 __jule_RCLoad(jule::U32* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U32* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_1bb09d5ca_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1ac92712c_OutDir = jule::Str::lit("dist", 4);
	_1ac927506_OutName = jule::Str::lit("ir.cpp", 6);
	_1ac9277ae_Out = jule::Str();
	_1c6c5e934_STDIN = 0LLU;
	_1c6c5ec64_STDOUT = 1LLU;
	_1c6c60050_STDERR = 2LLU;
	_1e0edadc7_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_1e0edb823_acceptRanges = ({ auto __jule_collection = jule::Array<_1e0edb47c_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _1e0edb47c_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _1e0edb47c_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _1e0edb47c_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _1e0edb47c_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _1e0edb47c_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _1e0edb47c_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_1c6d92abc__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_1c6d931a5__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_1bb01e4e6__L = jule::new_ptr<_1bb081c40_RangeTable>(_1bb081c40_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1bb08128e_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _1bb08128e_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1bb0817bc_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _1bb0817bc_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_1bb020409__LU = jule::new_ptr<_1bb081c40_RangeTable>(_1bb081c40_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1bb08128e_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _1bb08128e_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _1bb08128e_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1bb0817bc_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _1bb0817bc_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _1bb0817bc_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_1bb0263dd_Letter = _1bb01e4e6__L;
	_1bb02c6ad_Upper = _1bb020409__LU;
	_1bb079d9d__CaseRanges = ({ auto __jule_collection = jule::Slice<_1bb080cd8_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _1bb080cd8_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1bb080cd8_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_1bb07a189__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_1bb07be6b_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_1bb07c257_caseOrbit = ({ auto __jule_collection = jule::Slice<_1bb0807dd_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _1bb0807dd_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _1bb0807dd_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_1c6dac466_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_1c6dac554_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_1c6e36358_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_1bb095209_PathStdlib = jule::Str();
	_1bb095490_PathExec = jule::Str();
	_1bb095748_PathWd = jule::Str();
	_1bb095a45_PathApi = jule::Str();
	_1bb095ced_OS = jule::Str::lit("linux", 5);
	_1bb0960a6_Arch = jule::Str::lit("i386", 4);
	_1bb099b37_Compiler = jule::Str();
	_1bb09b034_CompilerPath = jule::Str();
	_1bb09b243_CppStd = jule::Str::lit("cpp17", 5);
	_1bb09b4da_Shadowing = false;
	_1bb09b793_Transpilation = false;
	_1bb09ba4b_Test = false;
	_1bb09bd04_RC = true;
	_1bb09c1bc_Safety = true;
	_1bb09c40e_Production = false;
	_1a79171bb_f32info = _1a7916d03_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1a79174b8_f64info = _1a7916d03_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1a791edd8_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1a7921b43_powtab = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1a7922704_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1a7922a34_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1a7925c35_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1a7929e04_leftCheats = ({ auto __jule_collection = jule::Slice<_1a79299c5_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1a79299c5_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1a79299c5_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1a79299c5_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1a79299c5_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1a79299c5_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1a79299c5_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1a79299c5_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1a79299c5_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1a79299c5_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1a79299c5_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1a79299c5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1a79299c5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1a79299c5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1a79299c5_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1a79299c5_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1a79299c5_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1a79299c5_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1a79299c5_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1a79299c5_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1a79299c5_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1a79299c5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1a79299c5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1a79299c5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1a79299c5_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1a79299c5_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1a79299c5_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1a79299c5_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1a79299c5_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1a79299c5_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1a79299c5_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1a79299c5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1a79299c5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1a79299c5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1a79299c5_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1a79299c5_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1a79299c5_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1a79299c5_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1a79299c5_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1a79299c5_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1a79299c5_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1a79299c5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1a79299c5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1a79299c5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1a79299c5_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1a79299c5_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1a79299c5_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1a79299c5_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1a79299c5_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1a79299c5_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1a79299c5_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1a79299c5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1a79299c5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1a79299c5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1a79299c5_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1a79299c5_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1a79299c5_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1a79299c5_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1a79299c5_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1a79299c5_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1a79299c5_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1a79299c5_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1aa03a2c0_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1aa03a5ab_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U32,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(68LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(65LLU); __jule_collection; });
	_1aa03a8db_BinOps = ({ auto __jule_collection = jule::Array<jule::U32,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(63LLU); (*it++) = static_cast<jule::U32>(64LLU); (*it++) = static_cast<jule::U32>(65LLU); (*it++) = static_cast<jule::U32>(66LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(56LLU); (*it++) = static_cast<jule::U32>(57LLU); (*it++) = static_cast<jule::U32>(69LLU); (*it++) = static_cast<jule::U32>(70LLU); (*it++) = static_cast<jule::U32>(53LLU); (*it++) = static_cast<jule::U32>(52LLU); (*it++) = static_cast<jule::U32>(54LLU); (*it++) = static_cast<jule::U32>(55LLU); (*it++) = static_cast<jule::U32>(50LLU); (*it++) = static_cast<jule::U32>(51LLU); __jule_collection; });
	_1aa0d22ce_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U32,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(58LLU); (*it++) = static_cast<jule::U32>(59LLU); __jule_collection; });
	_1aa0d25ba_AssignOps = ({ auto __jule_collection = jule::Array<jule::U32,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(71LLU); (*it++) = static_cast<jule::U32>(40LLU); (*it++) = static_cast<jule::U32>(41LLU); (*it++) = static_cast<jule::U32>(43LLU); (*it++) = static_cast<jule::U32>(42LLU); (*it++) = static_cast<jule::U32>(44LLU); (*it++) = static_cast<jule::U32>(46LLU); (*it++) = static_cast<jule::U32>(45LLU); (*it++) = static_cast<jule::U32>(49LLU); (*it++) = static_cast<jule::U32>(48LLU); (*it++) = static_cast<jule::U32>(47LLU); __jule_collection; });
	_1aa0e10ac_keywords = ({ auto __jule_collection = jule::Array<_1aa0e0bc2_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U32>(6LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U32>(2LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U32>(7LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U32>(9LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U32>(10LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U32>(11LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U32>(12LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U32>(13LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U32>(14LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U32>(16LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U32>(18LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U32>(20LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U32>(21LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U32>(22LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U32>(23LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U32>(24LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U32>(25LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U32>(26LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U32>(27LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U32>(28LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U32>(29LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U32>(30LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U32>(31LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U32>(32LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U32>(33LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U32>(34LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U32>(36LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U32>(37LLU)}; __jule_collection; });
	_1aa0e13dc_basicOps = ({ auto __jule_collection = jule::Array<_1aa0e0bc2_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U32>(19LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U32>(38LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U32>(8LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U32>(3LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U32>(5LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U32>(39LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U32>(17LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U32>(40LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U32>(41LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U32>(42LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U32>(43LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U32>(44LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U32>(45LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U32>(46LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U32>(47LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U32>(48LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U32>(49LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U32>(50LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U32>(51LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U32>(52LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U32>(53LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U32>(54LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U32>(55LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U32>(56LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U32>(57LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U32>(58LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U32>(59LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U32>(60LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U32>(61LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U32>(62LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U32>(63LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U32>(64LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U32>(65LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U32>(66LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U32>(67LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U32>(68LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U32>(69LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U32>(70LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U32>(71LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U32>(35LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U32>(72LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U32>(73LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U32>(76LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U32>(77LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U32>(74LLU)}; (*it++) = _1aa0e0bc2_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U32>(75LLU)}; __jule_collection; });
	_1aaab5586_BitSize = 0LL;
	_1aaab57d9_SysInt = jule::Str();
	_1aaab5a92_SysUint = jule::Str();
	_1aaae6c05_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1aac76549_primNil = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1aac76846_primVoid = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac76aee_primAny = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac76deb_primStr = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac771a4_primBool = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac7745c_primUintptr = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac77715_primUint = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac77acd_primInt = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac77d20_primI8 = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac780b7_primI16 = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac78370_primI32 = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac78628_primI64 = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac788d1_primU8 = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac78b89_primU16 = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac78e42_primU32 = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac7942b_primU64 = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac7966d_primF32 = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1aac7987c_primF64 = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1aac20823_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)});
	_1ab61db5a_ProgramMeta = static_cast<jule::Ptr<_1ab620d8d_Meta>>(nullptr);
	_1ac68e713_emptyData = jule::new_ptr<_1ac690071_data>(_1ac690071_data{._field_boundary=jule::Ptr<_1ac69232b_boundary>(nullptr), ._field_nils=jule::Ptr<_1ac3d97d2_nils>(nullptr), ._field_dynamic=jule::Ptr<_1ac68c447_dynamic>(nullptr)});
	_1ac6950ba_Copy = false;
	_1ac6953b7_Deadcode = false;
	_1ac695670_Append = false;
	_1ac69596c_Math = false;
	_1ac695c25_Access = false;
	_1ac695ecd_Inline = false;
	_1ac696286_Ptr = false;
	_1ac69664e_Cond = false;
	_1ac696891_Str = false;
	_1ac696b38_Slice = false;
	_1ac696de1_Assign = false;
	_1ac697199_Exceptional = false;
	_1ac697452_Iter = false;
	_1ac69770a_Dynamic = false;
	_1ac6979b3_Array = false;
	_1ac697e9c_Len = false;
	_1ac6981de_StdStrings = false;
	_1ac6983ed_StdMathCmplx = false;
	_1ac7b76c6_exprEnabled = false;
	_1ac7b78d5_scopeEnabled = false;
	_1ac886971_mdays = ({ auto __jule_collection = jule::Array<jule::I32,12>(); auto it = __jule_collection.begin(); (*it++) = 31LL; (*it++) = 30LL; (*it++) = 31LL; (*it++) = 30LL; (*it++) = 31LL; (*it++) = 31LL; (*it++) = 30LL; (*it++) = 31LL; (*it++) = 30LL; (*it++) = 31LL; (*it++) = 31LL; (*it++) = 29LL; __jule_collection; });
	_1ac7bb2e0_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1ac8922c8_generalGCPtr = jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aac0a6ed_Sptr>(_1aac0a6ed_Sptr{._field_Elem=jule::new_ptr<_1aabecdb6_Type>(_1aabecdb6_Type{._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1aac06bc2_Prim>(_1aac06bc2_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1aabec9dc_Kind_mptr_data23)});
	_1bb079ab2_CaseRanges = _1bb079d9d__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	_1bb09edb2_main();

	return EXIT_SUCCESS;
}