// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 3/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1aaacc504_comptimeRangeKind{};
struct _1aab21d1d_Importer{};
struct _1aabebc3e_Kind{};
struct _1aac21d30_Lookup{};
struct _1a64e1769_CommonFlag{};
struct _1de9972be_Range16;
struct _1de9977ec_Range32;
struct _1de997ca3_RangeTable;
struct _1c387bdd4_acceptRange;
struct _1c38d3b83_StrBuilder;
struct _1c38de8d6_lazyBuff;
struct _206b6d2a2_DirEntry;
struct _206b6d516_Directory;
struct _206b791d1_File;
struct _206b7b9ca_Status;
struct _1c3a9225e_cmdAttrs;
struct _1c3983b45_Log;
struct _1c3e3a5e6_Token;
struct _1c3e40db0_File;
struct _1c3e42ed3_kindPair;
struct _1c3e490e9_lex;
struct _1c4c94d23_floatInfo;
struct _1c4c9586d_decimalSlice;
struct _1c4ca7ad3_leftCheat;
struct _1c4ca860b_decimal;
struct _1c4cbcda1_Const;
struct _1aaa41996_Ast;
struct _1aaa4290e_Node;
struct _1aaa42c61_Directive;
struct _1aaa765e1_TypeDecl;
struct _1aaa76beb_IdentTypeDecl;
struct _1aaa76ee8_SubIdentTypeDecl;
struct _1aaa7738e_NamespaceTypeDecl;
struct _1aaa7768b_SptrTypeDecl;
struct _1aaa77a21_SlcTypeDecl;
struct _1aaa77d1d_TupleTypeDecl;
struct _1aaa7811a_PtrTypeDecl;
struct _1aaa788ac_ArrTypeDecl;
struct _1aaa7910a_MapTypeDecl;
struct _1aaa794d4_RetTypeDecl;
struct _1aaa7a925_Expr;
struct _1aaa7ac22_RangeExpr;
struct _1aaa7b2e9_UseExpr;
struct _1aaa7b5e6_TupleExpr;
struct _1aaa7b9c0_LitExpr;
struct _1aaa7bd99_UnsafeExpr;
struct _1aaa7c350_IdentExpr;
struct _1aaa7c9d2_UnaryExpr;
struct _1aaa7cdab_VariadicExpr;
struct _1aaa7d285_CastExpr;
struct _1aaa7d65e_NsSelectionExpr;
struct _1aaa7db15_SubIdentExpr;
struct _1aaa7e0bb_BinopExpr;
struct _1aaa7e72b_FnCallExpr;
struct _1aaa80221_FieldExprPair;
struct _1aaa80a4b_StructLit;
struct _1aaa81002_BraceLit;
struct _1aaa8182c_KeyValPair;
struct _1aaa82025_SliceExpr;
struct _1aaa829b5_IndexingExpr;
struct _1aaa83125_SlicingExpr;
struct _1aaa83422_Constraint;
struct _1aaa838c8_GenericDecl;
struct _1aaa83ca2_LabelSt;
struct _1aaa8417b_GotoSt;
struct _1aaa84478_FallSt;
struct _1aaa84ad8_AssignLeft;
struct _1aaa8516b_AssignSt;
struct _1aaa8607e_Stmt;
struct _1aaa866de_ScopeTree;
struct _1aaa86e2b_ParamDecl;
struct _1aaa8837d_FnDecl;
struct _1aaa8945b_VarDecl;
struct _1aaa89835_RetSt;
struct _1aaa89ec8_Iter;
struct _1aaa8a803_WhileKind;
struct _1aaa8b20a_RangeKind;
struct _1aaa8b5d4_BreakSt;
struct _1aaa8b9ad_ContSt;
struct _1aaa8be64_If;
struct _1aaa8c33d_Else;
struct _1aaa8c7e4_Conditional;
struct _1aaa8d031_TypeAliasDecl;
struct _1aaa8d4d7_Case;
struct _1aaa8dc24_MatchCase;
struct _1aaa8e53d_UseDecl;
struct _1aaa8e9e4_EnumItemDecl;
struct _1aaa905a5_EnumDecl;
struct _1aaa90dd0_TypeEnumItemDecl;
struct _1aaa91540_TypeEnumDecl;
struct _1aaa91809_FieldDecl;
struct _1aaa92200_StructDecl;
struct _1aaa9293c_TraitDecl;
struct _1aaa9309c_Impl;
struct _1aaa943bc_Field;
struct _1aaa9639c_Operators;
struct _1aaa972b0_Struct;
struct _1aaa997e0_FieldIns;
struct _1aaa9e471_OperandExprModel;
struct _1aaa9e96b_BinopExprModel;
struct _1aaa9ed45_UnaryExprModel;
struct _1aaaa0373_StructArgExprModel;
struct _1aaaa0719_StructLitExprModel;
struct _1aaaa0a16_AllocStructLitExprModel;
struct _1aaaa1099_CastingExprModel;
struct _1aaaa194b_FnCallExprModel;
struct _1aaaa1d25_SliceExprModel;
struct _1aaaa22cb_IndexingExprModel;
struct _1aaaa26a5_AnonFnExprModel;
struct _1aaaa2a7e_KeyValPairExprModel;
struct _1aaaa3035_MapExprModel;
struct _1aaaa35b8_SlicingExprModel;
struct _1aaaa3b4b_TraitSubIdentExprModel;
struct _1aaaa44dc_StructSubIdentExprModel;
struct _1aaaa4993_StructStaticIdentExprModel;
struct _1aaaa4d6c_ArrayExprModel;
struct _1aaaa5169_CommonIdentExprModel;
struct _1aaaa56ec_CommonSubIdentExprModel;
struct _1aaaa59e9_TupleExprModel;
struct _1aaaa5dc3_BuiltinOutCallExprModel;
struct _1aaaa629c_BuiltinOutlnCallExprModel;
struct _1aaaa6599_BuiltinCloneCallExprModel;
struct _1aaaa6973_BuiltinNewCallExprModel;
struct _1aaaa6d4c_BuiltinPanicCallExprModel;
struct _1aaaa7303_BuiltinAssertCallExprModel;
struct _1aaaa77a9_BuiltinMakeCallExprModel;
struct _1aaaa7b83_BuiltinAppendCallExprModel;
struct _1aaaa7e80_BuiltinLenCallExprModel;
struct _1aaaa827c_BuiltinCapCallExprModel;
struct _1aaaa88ed_BuiltinDeleteCallExprModel;
struct _1aaaa8b62_BuiltinCopyCallExprModel;
struct _1aaaa903b_BuiltinErrorCallExprModel;
struct _1aaaa9338_SizeofExprModel;
struct _1aaaa9635_AlignofExprModel;
struct _1aaaa9932_RuneExprModel;
struct _1aaaa9c2e_IntegratedToStrExprModel;
struct _1aaaaa108_BackendEmitExprModel;
struct _1aaaaa405_FreeExprModel;
struct _1aaaab0d7_RetType;
struct _1aaaab868_Param;
struct _1aaab3199_Fn;
struct _1aaab5102_ParamIns;
struct _1aaab609d_FnIns;
struct _1aaab9249_ReferenceStack;
struct _1aaaba767_Pass;
struct _1aaac032c_symbolBuilder;
struct _1aaac6443_Trait;
struct _1aaac80c1_EnumItem;
struct _1aaac8b3d_Enum;
struct _1aaac9c71_TypeEnumItem;
struct _1aaaca348_TypeEnum;
struct _1aaacc6e1_comptimeRange;
struct _1aaacd24c_comptimeStructField;
struct _1aaacedec_comptimeStructFields;
struct _1aaad1508_comptimeStatic;
struct _1aaad31b9_comptimeStatics;
struct _1aaad47b4_comptimeEnumField;
struct _1aaad5ac3_comptimeEnumFields;
struct _1aaad7256_comptimeParam;
struct _1aaad94bc_comptimeParams;
struct _1aaadaab7_comptimeTypeInfos;
struct _1aaadc1b2_comptimeTypeInfo;
struct _1aaae32b7_comptimeValue;
struct _1aaae5b16_comptimeFiles;
struct _1aaae7211_comptimeFile;
struct _1aaaeb37a_constraintChecker;
struct _1aaaed3b0_Impl;
struct _1aab037e4_Scope;
struct _1aab03c12_If;
struct _1aab0400e_Else;
struct _1aab0442c_Conditional;
struct _1aab04729_InfIter;
struct _1aab04bd0_WhileIter;
struct _1aab0562b_RangeIter;
struct _1aab059b1_ContSt;
struct _1aab05d8a_BreakSt;
struct _1aab06187_Label;
struct _1aab06561_GotoSt;
struct _1aab0693a_Postfix;
struct _1aab06de1_Assign;
struct _1aab072ba_MultiAssign;
struct _1aab0792a_Match;
struct _1aab08563_Case;
struct _1aab08b5c_FallSt;
struct _1aab08ee2_RetSt;
struct _1aab09652_scopeLabel;
struct _1aab09bd5_scopeGoto;
struct _1aab0aae8_scopeChecker;
struct _1aab1d4e0_directiveChecker;
struct _1aab24c33_ImportInfo;
struct _1aab27b59_Package;
struct _1aab45160_commonSemaMeta;
struct _1aab45c87_Sema;
struct _1aab653c2_missingRetChecker;
struct _1aab677ae_IterRelation;
struct _1aab68969_Var;
struct _1aab6977d_FuncPattern;
struct _1aaba3c3a_typeCompatibilityChecker;
struct _1aaba59d9_assignTypeChecker;
struct _1aaba7656_dynamicTypeAnnotation;
struct _1aabac4b3_fnCallArgChecker;
struct _1aabb03ea_structLitChecker;
struct _1aabb21cc_rangeChecker;
struct _1aabb493d_retTypeChecker;
struct _1aabb6be8_SymbolTable;
struct _1aabbbe1d_Data;
struct _1aabbd062_Value;
struct _1aabbdb12_Eval;
struct _1aabdc49e_unaryEval;
struct _1aabde43a_binaryEval;
struct _1aabea80e_InsGeneric;
struct _1aabeb403_TypeAlias;
struct _1aabec1e5_TypeKind;
struct _1aac0465e_TypeSymbol;
struct _1aac05066_Prim;
struct _1aac08a92_Sptr;
struct _1aac09565_Slc;
struct _1aac0a159_Tuple;
struct _1aac0ac09_Map;
struct _1aac0b886_Arr;
struct _1aac0c359_Ptr;
struct _1aac0d35a_referencer;
struct _1aac0e34a_typeChecker;
struct _1aac16ece_identTypeLookup;
struct _1ab6d1943_FileInfo;
struct _1ab7284a1_stmt;
struct _1ab728d42_scopeParser;
struct _1ab736415_exprBuilder;
struct _1ab743873_assignInfo;
struct _1ab747019_parser;
struct _1ab758d83_typeBuilder;
struct _1aae03c04_CompileInfo;
struct _1aae051ab_directiveEval;
struct _1ab75ceb9_JuleImporter;
struct _1ab7631cd_OrderedDefines;
struct _1ab763442_defineOrderer;
struct _1ab9517c8_liveTable;
struct _1ac599266_scopeDeadCode;
struct _1ac59d4bd_exprDeadCode;
struct _1aace8643_StrCompExprModel;
struct _1aace8bd7_MutSlicingExprModel;
struct _1aace8ed4_UnsafeBinopExprModel;
struct _1aace9358_UnsafeIndexingExprModel;
struct _1aace96ee_PushToSliceExprModel;
struct _1aace9ac8_AppendToSliceExprModel;
struct _1aace9dc5_InlineStdInternalNosafeStobs;
struct _1aaceb14b_scopeOptimizer;
struct _1aad01926_exprOptimizer;
struct _1ab764cd4_stdCacheData;
struct _1ac5a5e54_Optimizer;
struct _1ab38c049_AnsiEscape;
struct _1ab38d9da_Logger;
struct _1a6187201_AbsTime;
struct _1a61878c7_Time;
struct _1a60b08bb_scopeCoder;
struct _1a60b96c7_exprCoder;
struct _1a60ca2a9_deriveCoder;
struct _1a60cbd6b_TestCoder;
struct _1a60cea0b_identCoder;
struct _1a619035d_SerializationInfo;
struct _1a6190935_traitHash;
struct _1a6190d0e_traitCast;
struct _1a61a166b_customType;
struct _1a61a2271_typeCoder;
struct _1a6476457_resultCoder;
struct _1a5d1b946_Flag;
struct _1a5d20362_Flag;
struct _1a5d23a5d_Flag;
struct _1a5d2729d_Flag;
struct _1a5d2a999_Flag;
struct _1a64e331a_FlagSet;
struct _1a64e5c9b_argParser;
struct _1a6191e53_ObjectCoder;
struct _1ac594abe_ObjectDeadCode;
struct _1ab76097d_IR;
struct _1aaa9a390_StructIns;
struct _1c3a4282a_Cmd;
struct _1de9972be_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_1de9972be_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1de9972be_Range16 _other) { return !this->operator==(_other); }


};
struct _1de9977ec_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_1de9977ec_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1de9977ec_Range32 _other) { return !this->operator==(_other); }


};
struct _1de997ca3_RangeTable {
	jule::Slice<_1de9972be_Range16> _field_R16;
	jule::Slice<_1de9977ec_Range32> _field_R32;
	jule::I32 _field_LatinOffset = 0;
	


};
struct _1c387bdd4_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_1c387bdd4_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1c387bdd4_acceptRange _other) { return !this->operator==(_other); }


};
struct _1c38d3b83_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _1c38de8d6_lazyBuff {
	jule::Slice<jule::U8> _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen = 0;
	


};
struct _206b6d2a2_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_206b7b9ca_Status> _field_Stat;
	

	inline bool operator==(_206b6d2a2_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_206b6d2a2_DirEntry _other) { return !this->operator==(_other); }


};
struct _206b6d516_Directory {
	

	inline bool operator==(_206b6d516_Directory _other) { return true; }

	inline bool operator!=(_206b6d516_Directory _other) { return !this->operator==(_other); }


};
struct _206b791d1_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_206b791d1_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_206b791d1_File _other) { return !this->operator==(_other); }


};
struct _206b7b9ca_Status {
	jule::I32 _field_mode = 0LL;
	jule::U32 _field_size = 0;
	

	inline bool operator==(_206b7b9ca_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_206b7b9ca_Status _other) { return !this->operator==(_other); }


};
struct _1c3a9225e_cmdAttrs {
	jule::I32 _field_pid = -1LL;
	

	inline bool operator==(_1c3a9225e_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_1c3a9225e_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1c3983b45_Log {
	jule::I32 _field_Kind = 0LL;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1c3983b45_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1c3983b45_Log _other) { return !this->operator==(_other); }


};
struct _1c3e3a5e6_Token {
	jule::Ptr<_1c3e40db0_File> _field_File;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U32 _field_Id = 0LLU;
	

	inline bool operator==(_1c3e3a5e6_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1c3e3a5e6_Token _other) { return !this->operator==(_other); }


};
struct _1c3e40db0_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_Tokens;
	


};
struct _1c3e42ed3_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U32 _field_id = 0LLU;
	

	inline bool operator==(_1c3e42ed3_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1c3e42ed3_kindPair _other) { return !this->operator==(_other); }


};
struct _1c3e490e9_lex {
	jule::I32 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_tokens;
	jule::Ptr<_1c3e40db0_File> _field_file;
	jule::I32 _field_pos = 0;
	jule::I32 _field_column = 0;
	jule::I32 _field_row = 0;
	jule::Slice<_1c3983b45_Log> _field_errors;
	


};
struct _1c4c94d23_floatInfo {
	jule::U32 _field_mantbits = 0;
	jule::U32 _field_expbits = 0;
	jule::I32 _field_bias = 0;
	

	inline bool operator==(_1c4c94d23_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1c4c94d23_floatInfo _other) { return !this->operator==(_other); }


};
struct _1c4c9586d_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1c4ca7ad3_leftCheat {
	jule::I32 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1c4ca7ad3_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1c4ca7ad3_leftCheat _other) { return !this->operator==(_other); }


};
struct _1c4ca860b_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1c4ca860b_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1c4ca860b_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1c4cc3956_Eq(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc3c97_Lt(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc40d8_LtEq(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc4429_Gt(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc476a_GtEq(_1c4cbcda1_Const*, _1c4cbcda1_Const);
struct _1c4cbcda1_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1c4cbcda1_Const _other) { return _1c4cc3956_Eq(this, _other); }

	inline bool operator!=(_1c4cbcda1_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1c4cbcda1_Const _other) { return _1c4cc4429_Gt(this, _other); }

	inline jule::Bool operator>=(_1c4cbcda1_Const _other) { return _1c4cc476a_GtEq(this, _other); }

	inline jule::Bool operator<(_1c4cbcda1_Const _other) { return _1c4cc3c97_Lt(this, _other); }

	inline jule::Bool operator<=(_1c4cbcda1_Const _other) { return _1c4cc40d8_LtEq(this, _other); }


};
struct _1aaa41996_Ast {
	jule::Ptr<_1c3e40db0_File> _field_File;
	jule::Slice<jule::Ptr<_1aaa42c61_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1aaa8e53d_UseDecl>> _field_UseDecls;
	jule::Slice<_1aaa4290e_Node> _field_Nodes;
	


};
struct _1aaa4290e_Node {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1aaa4290e_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1aaa4290e_Node _other) { return !this->operator==(_other); }


};
struct _1aaa42c61_Directive {
	jule::Ptr<_1c3e3a5e6_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_Args;
	


};
struct _1aaa765e1_TypeDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1aaa765e1_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aaa765e1_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1aaa76beb_IdentTypeDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> _field_Generics;
	


};
struct _1aaa76ee8_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1aaa76beb_IdentTypeDecl>> _field_Idents;
	


};
struct _1aaa7738e_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_Idents;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Kind;
	


};
struct _1aaa7768b_SptrTypeDecl {
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Elem;
	

	inline bool operator==(_1aaa7768b_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aaa7768b_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aaa77a21_SlcTypeDecl {
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Elem;
	

	inline bool operator==(_1aaa77a21_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aaa77a21_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aaa77d1d_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> _field_Types;
	


};
struct _1aaa7811a_PtrTypeDecl {
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Elem;
	

	inline bool operator==(_1aaa7811a_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aaa7811a_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aaa788ac_ArrTypeDecl {
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Elem;
	jule::Ptr<_1aaa7a925_Expr> _field_Size;
	

	inline bool operator==(_1aaa788ac_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1aaa788ac_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aaa7910a_MapTypeDecl {
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Key;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Val;
	

	inline bool operator==(_1aaa7910a_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1aaa7910a_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1aaa794d4_RetTypeDecl {
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_Idents;
	


};
struct _1aaa7a925_Expr {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1aaa7a925_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aaa7a925_Expr _other) { return !this->operator==(_other); }


};
struct _1aaa7ac22_RangeExpr {
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	

	inline bool operator==(_1aaa7ac22_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaa7ac22_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1aaa7b2e9_UseExpr {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	

	inline bool operator==(_1aaa7b2e9_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaa7b2e9_UseExpr _other) { return !this->operator==(_other); }


};
struct _1aaa7b5e6_TupleExpr {
	jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _field_Expr;
	


};
struct _1aaa7b9c0_LitExpr {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1aaa7b9c0_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1aaa7b9c0_LitExpr _other) { return !this->operator==(_other); }


};
struct _1aaa7bd99_UnsafeExpr {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	

	inline bool operator==(_1aaa7bd99_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaa7bd99_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1aaa7c350_IdentExpr {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1aaa7c350_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1aaa7c350_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1aaa7c9d2_UnaryExpr {
	jule::Ptr<_1c3e3a5e6_Token> _field_Op;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	

	inline bool operator==(_1aaa7c9d2_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaa7c9d2_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1aaa7cdab_VariadicExpr {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	

	inline bool operator==(_1aaa7cdab_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaa7cdab_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1aaa7d285_CastExpr {
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Kind;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	

	inline bool operator==(_1aaa7d285_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaa7d285_CastExpr _other) { return !this->operator==(_other); }


};
struct _1aaa7d65e_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_Ns;
	jule::Ptr<_1c3e3a5e6_Token> _field_Ident;
	


};
struct _1aaa7db15_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	jule::Ptr<_1c3e3a5e6_Token> _field_Ident;
	

	inline bool operator==(_1aaa7db15_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aaa7db15_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1aaa7e0bb_BinopExpr {
	jule::Ptr<_1aaa7a925_Expr> _field_Left;
	jule::Ptr<_1aaa7a925_Expr> _field_Right;
	jule::Ptr<_1c3e3a5e6_Token> _field_Op;
	

	inline bool operator==(_1aaa7e0bb_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1aaa7e0bb_BinopExpr _other) { return !this->operator==(_other); }


};
struct _1aaa7e72b_FnCallExpr {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _field_Args;
	jule::Ptr<_1aaa866de_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1aaa80221_FieldExprPair {
	jule::Ptr<_1c3e3a5e6_Token> _field_Field;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	

	inline bool operator==(_1aaa80221_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaa80221_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1aaa80a4b_StructLit {
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _field_Exprs;
	


};
struct _1aaa81002_BraceLit {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _field_Exprs;
	


};
struct _1aaa8182c_KeyValPair {
	jule::Ptr<_1aaa7a925_Expr> _field_Key;
	jule::Ptr<_1aaa7a925_Expr> _field_Val;
	jule::Ptr<_1c3e3a5e6_Token> _field_Colon;
	

	inline bool operator==(_1aaa8182c_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1aaa8182c_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1aaa82025_SliceExpr {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _field_Exprs;
	


};
struct _1aaa829b5_IndexingExpr {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	jule::Ptr<_1aaa7a925_Expr> _field_Index;
	

	inline bool operator==(_1aaa829b5_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1aaa829b5_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1aaa83125_SlicingExpr {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	jule::Ptr<_1aaa7a925_Expr> _field_Start;
	jule::Ptr<_1aaa7a925_Expr> _field_To;
	

	inline bool operator==(_1aaa83125_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1aaa83125_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1aaa83422_Constraint {
	jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> _field_Mask;
	


};
struct _1aaa838c8_GenericDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aaa83422_Constraint> _field_Constraint;
	

	inline bool operator==(_1aaa838c8_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1aaa838c8_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1aaa83ca2_LabelSt {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1aaa83ca2_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aaa83ca2_LabelSt _other) { return !this->operator==(_other); }


};
struct _1aaa8417b_GotoSt {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1c3e3a5e6_Token> _field_Label;
	

	inline bool operator==(_1aaa8417b_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1aaa8417b_GotoSt _other) { return !this->operator==(_other); }


};
struct _1aaa84478_FallSt {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	

	inline bool operator==(_1aaa84478_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1aaa84478_FallSt _other) { return !this->operator==(_other); }


};
struct _1aaa84ad8_AssignLeft {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	

	inline bool operator==(_1aaa84ad8_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaa84ad8_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1aaa8516b_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1c3e3a5e6_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1aaa84ad8_AssignLeft>> _field_Left;
	jule::Ptr<_1aaa7a925_Expr> _field_Right;
	


};
struct _1aaa8607e_Stmt {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1aaa8607e_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1aaa8607e_Stmt _other) { return !this->operator==(_other); }


};
struct _1aaa866de_ScopeTree {
	jule::Ptr<_1aaa866de_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1aaa8607e_Stmt> _field_Stmts;
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	


};
struct _1aaa86e2b_ParamDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1aaa86e2b_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aaa86e2b_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1aaa8837d_FnDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aaa42c61_Directive>> _field_Directives;
	jule::Ptr<_1aaa866de_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>> _field_Generics;
	jule::Ptr<_1aaa794d4_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1aaa86e2b_ParamDecl>> _field_Params;
	


};
struct _1aaa8945b_VarDecl {
	jule::Ptr<_1aaa866de_ScopeTree> _field_Scope;
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1aaa42c61_Directive>> _field_Directives;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Kind;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	


};
struct _1aaa89835_RetSt {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	

	inline bool operator==(_1aaa89835_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaa89835_RetSt _other) { return !this->operator==(_other); }


};
struct _1aaa89ec8_Iter {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1aaa866de_ScopeTree> _field_Scope;
	

	inline bool operator==(_1aaa89ec8_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aaa89ec8_Iter _other) { return !this->operator==(_other); }


};
struct _1aaa8a803_WhileKind {
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1c3e3a5e6_Token> _field_NextToken;
	

	inline bool operator==(_1aaa8a803_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1aaa8a803_WhileKind _other) { return !this->operator==(_other); }


};
struct _1aaa8b20a_RangeKind {
	jule::Ptr<_1c3e3a5e6_Token> _field_InToken;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	jule::Ptr<_1aaa8945b_VarDecl> _field_KeyA;
	jule::Ptr<_1aaa8945b_VarDecl> _field_KeyB;
	

	inline bool operator==(_1aaa8b20a_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1aaa8b20a_RangeKind _other) { return !this->operator==(_other); }


};
struct _1aaa8b5d4_BreakSt {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1c3e3a5e6_Token> _field_Label;
	

	inline bool operator==(_1aaa8b5d4_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1aaa8b5d4_BreakSt _other) { return !this->operator==(_other); }


};
struct _1aaa8b9ad_ContSt {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1c3e3a5e6_Token> _field_Label;
	

	inline bool operator==(_1aaa8b9ad_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1aaa8b9ad_ContSt _other) { return !this->operator==(_other); }


};
struct _1aaa8be64_If {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	jule::Ptr<_1aaa866de_ScopeTree> _field_Scope;
	

	inline bool operator==(_1aaa8be64_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aaa8be64_If _other) { return !this->operator==(_other); }


};
struct _1aaa8c33d_Else {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1aaa866de_ScopeTree> _field_Scope;
	

	inline bool operator==(_1aaa8c33d_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aaa8c33d_Else _other) { return !this->operator==(_other); }


};
struct _1aaa8c7e4_Conditional {
	jule::Ptr<_1aaa8be64_If> _field_Head;
	jule::Slice<jule::Ptr<_1aaa8be64_If>> _field_Tail;
	jule::Ptr<_1aaa8c33d_Else> _field_Default;
	


};
struct _1aaa8d031_TypeAliasDecl {
	jule::Ptr<_1aaa866de_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Kind;
	

	inline bool operator==(_1aaa8d031_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aaa8d031_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1aaa8d4d7_Case {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1aaa866de_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _field_Exprs;
	


};
struct _1aaa8dc24_MatchCase {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1aaa8d4d7_Case>> _field_Cases;
	jule::Ptr<_1aaa8c33d_Else> _field_Default;
	


};
struct _1aaa8e53d_UseDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1aaa8e9e4_EnumItemDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	

	inline bool operator==(_1aaa8e9e4_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaa8e9e4_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1aaa905a5_EnumDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1aaa8e9e4_EnumItemDecl>> _field_Items;
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	


};
struct _1aaa90dd0_TypeEnumItemDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Kind;
	

	inline bool operator==(_1aaa90dd0_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aaa90dd0_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1aaa91540_TypeEnumDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aaa90dd0_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	


};
struct _1aaa91809_FieldDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Kind;
	jule::Ptr<_1aaa7a925_Expr> _field_Default;
	

	inline bool operator==(_1aaa91809_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1aaa91809_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1aaa92200_StructDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aaa91809_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1aaa42c61_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>> _field_Generics;
	


};
struct _1aaa9293c_TraitDecl {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1aaa8837d_FnDecl>> _field_Methods;
	


};
struct _1aaa9309c_Impl {
	jule::Ptr<_1c3e3a5e6_Token> _field_End;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Base;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1aaa8837d_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1aaa8945b_VarDecl>> _field_Statics;
	


};
struct _1aaa943bc_Field {
	jule::Ptr<_1aaa972b0_Struct> _field_Owner;
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1aac0465e_TypeSymbol> _field_Kind;
	jule::Ptr<_1aaa7a925_Expr> _field_Default;
	

	inline bool operator==(_1aaa943bc_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1aaa943bc_Field _other) { return !this->operator==(_other); }


};
struct _1aaa9639c_Operators {
	jule::Ptr<_1aaab609d_FnIns> _field_Eq;
	jule::Ptr<_1aaab609d_FnIns> _field_Gt;
	jule::Ptr<_1aaab609d_FnIns> _field_GtEq;
	jule::Ptr<_1aaab609d_FnIns> _field_Lt;
	jule::Ptr<_1aaab609d_FnIns> _field_LtEq;
	jule::Ptr<_1aaab609d_FnIns> _field_Shl;
	jule::Ptr<_1aaab609d_FnIns> _field_Shr;
	jule::Ptr<_1aaab609d_FnIns> _field_Add;
	jule::Ptr<_1aaab609d_FnIns> _field_Sub;
	jule::Ptr<_1aaab609d_FnIns> _field_Div;
	jule::Ptr<_1aaab609d_FnIns> _field_Mul;
	jule::Ptr<_1aaab609d_FnIns> _field_Mod;
	jule::Ptr<_1aaab609d_FnIns> _field_BitAnd;
	jule::Ptr<_1aaab609d_FnIns> _field_BitOr;
	jule::Ptr<_1aaab609d_FnIns> _field_BitXor;
	jule::Ptr<_1aaab609d_FnIns> _field_Neg;
	jule::Ptr<_1aaab609d_FnIns> _field_Pos;
	jule::Ptr<_1aaab609d_FnIns> _field_BitNot;
	jule::Ptr<_1aaab609d_FnIns> _field_AddAssign;
	jule::Ptr<_1aaab609d_FnIns> _field_SubAssign;
	jule::Ptr<_1aaab609d_FnIns> _field_DivAssign;
	jule::Ptr<_1aaab609d_FnIns> _field_MulAssign;
	jule::Ptr<_1aaab609d_FnIns> _field_ModAssign;
	jule::Ptr<_1aaab609d_FnIns> _field_ShlAssign;
	jule::Ptr<_1aaab609d_FnIns> _field_ShrAssign;
	jule::Ptr<_1aaab609d_FnIns> _field_BitOrAssign;
	jule::Ptr<_1aaab609d_FnIns> _field_BitAndAssign;
	jule::Ptr<_1aaab609d_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1aaa9639c_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1aaa9639c_Operators _other) { return !this->operator==(_other); }


};
struct _1aaa972b0_Struct {
	jule::Ptr<_1aab45c87_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1aaa972b0_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1aaa972b0_Struct>> _field_Uses;
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aaa943bc_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1aaab3199_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1aab68969_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1aaa42c61_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1aaac6443_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1aaa9a390_StructIns>> _field_Instances;
	


};
struct _1aaa997e0_FieldIns {
	jule::Ptr<_1aaa943bc_Field> _field_Decl;
	jule::Ptr<_1aabec1e5_TypeKind> _field_Kind;
	jule::Ptr<_1aabbbe1d_Data> _field_Default;
	

	inline bool operator==(_1aaa997e0_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1aaa997e0_FieldIns _other) { return !this->operator==(_other); }


};
struct _1aaa9e471_OperandExprModel {
	jule::Ptr<_1aabec1e5_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1aaa9e471_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1aaa9e471_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1aaa9e96b_BinopExprModel {
	jule::Ptr<_1aaa9e471_OperandExprModel> _field_Left;
	jule::Ptr<_1aaa9e471_OperandExprModel> _field_Right;
	jule::Ptr<_1c3e3a5e6_Token> _field_Op;
	

	inline bool operator==(_1aaa9e96b_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1aaa9e96b_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1aaa9ed45_UnaryExprModel {
	jule::Ptr<_1aabbbe1d_Data> _field_Expr;
	jule::Ptr<_1c3e3a5e6_Token> _field_Op;
	

	inline bool operator==(_1aaa9ed45_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1aaa9ed45_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa0373_StructArgExprModel {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1aaa997e0_FieldIns> _field_Field;
	jule::Ptr<_1aabbbe1d_Data> _field_Expr;
	

	inline bool operator==(_1aaaa0373_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaaa0373_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa0719_StructLitExprModel {
	jule::Ptr<_1aaa9a390_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1aaaa0373_StructArgExprModel>> _field_Args;
	


};
struct _1aaaa0a16_AllocStructLitExprModel {
	jule::Ptr<_1aaaa0719_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1aaaa0a16_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1aaaa0a16_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa1099_CastingExprModel {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1aabec1e5_TypeKind> _field_Kind;
	jule::Ptr<_1aabec1e5_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1aaaa1099_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1aaaa1099_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa194b_FnCallExprModel {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1aaab609d_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1aab037e4_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1aaaa1d25_SliceExprModel {
	jule::Ptr<_1aabec1e5_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1aaaa22cb_IndexingExprModel {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1aabbbe1d_Data> _field_Expr;
	jule::Ptr<_1aabbbe1d_Data> _field_Index;
	

	inline bool operator==(_1aaaa22cb_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1aaaa22cb_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa26a5_AnonFnExprModel {
	jule::Ptr<_1aaab609d_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1aaaa26a5_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1aaaa26a5_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa2a7e_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1aaaa2a7e_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1aaaa2a7e_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa3035_MapExprModel {
	jule::Ptr<_1aabec1e5_TypeKind> _field_KeyKind;
	jule::Ptr<_1aabec1e5_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1aaaa2a7e_KeyValPairExprModel>> _field_Entries;
	


};
struct _1aaaa35b8_SlicingExprModel {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1aaaa35b8_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1aaaa35b8_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa3b4b_TraitSubIdentExprModel {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1aaab3199_Fn> _field_Method;
	jule::Ptr<_1aaac6443_Trait> _field_Trt;
	

	inline bool operator==(_1aaaa3b4b_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1aaaa3b4b_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa44dc_StructSubIdentExprModel {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Ptr<_1aabbbe1d_Data> _field_Expr;
	jule::Ptr<_1aaab609d_FnIns> _field_Method;
	jule::Ptr<_1aaa997e0_FieldIns> _field_Field;
	jule::Ptr<_1aaa9a390_StructIns> _field_Owner;
	

	inline bool operator==(_1aaaa44dc_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1aaaa44dc_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa4993_StructStaticIdentExprModel {
	jule::Ptr<_1aaa9a390_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1aaab609d_FnIns> _field_Method;
	

	inline bool operator==(_1aaaa4993_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1aaaa4993_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa4d6c_ArrayExprModel {
	jule::Ptr<_1aac0b886_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1aaaa5169_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	inline bool operator==(_1aaaa5169_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aaaa5169_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa56ec_CommonSubIdentExprModel {
	jule::Ptr<_1aabec1e5_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1aaaa56ec_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aaaa56ec_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa59e9_TupleExprModel {
	jule::Slice<jule::Ptr<_1aabbbe1d_Data>> _field_Datas;
	


};
struct _1aaaa5dc3_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1aaaa5dc3_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1aaaa5dc3_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa629c_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1aaaa629c_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1aaaa629c_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa6599_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1aaaa6599_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaaa6599_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa6973_BuiltinNewCallExprModel {
	jule::Ptr<_1aabec1e5_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1aaaa6973_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1aaaa6973_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa6d4c_BuiltinPanicCallExprModel {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1aaaa6d4c_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaaa6d4c_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa7303_BuiltinAssertCallExprModel {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1aaaa7303_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1aaaa7303_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa77a9_BuiltinMakeCallExprModel {
	jule::Ptr<_1aabec1e5_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1aaaa77a9_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1aaaa77a9_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa7b83_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1aaaa7b83_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1aaaa7b83_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa7e80_BuiltinLenCallExprModel {
	jule::Ptr<_1aabbbe1d_Data> _field_Expr;
	

	inline bool operator==(_1aaaa7e80_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaaa7e80_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa827c_BuiltinCapCallExprModel {
	jule::Ptr<_1aabbbe1d_Data> _field_Expr;
	

	inline bool operator==(_1aaaa827c_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaaa827c_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa88ed_BuiltinDeleteCallExprModel {
	jule::Ptr<_1aabbbe1d_Data> _field_Dest;
	jule::Ptr<_1aabbbe1d_Data> _field_Key;
	

	inline bool operator==(_1aaaa88ed_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1aaaa88ed_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa8b62_BuiltinCopyCallExprModel {
	jule::Ptr<_1aabbbe1d_Data> _field_Dest;
	jule::Ptr<_1aabbbe1d_Data> _field_Src;
	

	inline bool operator==(_1aaaa8b62_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1aaaa8b62_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa903b_BuiltinErrorCallExprModel {
	jule::Ptr<_1aaab609d_FnIns> _field_Func;
	jule::Ptr<_1aabbbe1d_Data> _field_Err;
	

	inline bool operator==(_1aaaa903b_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1aaaa903b_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa9338_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1aaaa9338_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaaa9338_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa9635_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1aaaa9635_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaaa9635_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa9932_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1aaaa9932_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1aaaa9932_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaa9c2e_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1aaaa9c2e_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaaa9c2e_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaaa108_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1aaaaa405_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1aaaaa405_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aaaaa405_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1aaaab0d7_RetType {
	jule::Ptr<_1aac0465e_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_Idents;
	


};
struct _1aaaab868_Param {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1aac0465e_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1aaaab868_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aaaab868_Param _other) { return !this->operator==(_other); }


};
struct _1aaab3199_Fn {
	jule::Ptr<_1aab45c87_Sema> _field_sema;
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aaa42c61_Directive>> _field_Directives;
	jule::Ptr<_1aaa866de_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>> _field_Generics;
	jule::Ptr<_1aaaab0d7_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1aaaab868_Param>> _field_Params;
	jule::Ptr<_1aaa972b0_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1aaab609d_FnIns>> _field_Instances;
	


};
struct _1aaab5102_ParamIns {
	jule::Ptr<_1aaaab868_Param> _field_Decl;
	jule::Ptr<_1aabec1e5_TypeKind> _field_Kind;
	

	inline bool operator==(_1aaab5102_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aaab5102_ParamIns _other) { return !this->operator==(_other); }


};
struct _1aaab609d_FnIns {
	jule::Ptr<_1aaa9a390_StructIns> _field_Owner;
	jule::Ptr<_1aaab3199_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1aabea80e_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1aaab5102_ParamIns>> _field_Params;
	jule::Ptr<_1aabec1e5_TypeKind> _field_Result;
	jule::Ptr<_1aab037e4_Scope> _field_Scope;
	jule::Ptr<_1aaab9249_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1aaab9249_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1aaaba767_Pass {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1aaaba767_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1aaaba767_Pass _other) { return !this->operator==(_other); }


};
struct _1aaac032c_symbolBuilder {
	jule::Ptr<_1aaac032c_symbolBuilder> _field_owner;
	jule::Trait<_1aab21d1d_Importer> _field_importer;
	jule::Slice<_1c3983b45_Log> _field_errors;
	jule::Ptr<_1aaa41996_Ast> _field_ast;
	jule::Ptr<_1aabb6be8_SymbolTable> _field_table;
	


};
struct _1aaac6443_Trait {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1aac0465e_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1aaab3199_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1aaa972b0_Struct>> _field_Implemented;
	


};
struct _1aaac80c1_EnumItem {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aabbd062_Value> _field_Value;
	

	inline bool operator==(_1aaac80c1_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1aaac80c1_EnumItem _other) { return !this->operator==(_other); }


};
struct _1aaac8b3d_Enum {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1aac0465e_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1aaac80c1_EnumItem>> _field_Items;
	


};
struct _1aaac9c71_TypeEnumItem {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aac0465e_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1aaac9c71_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aaac9c71_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1aaaca348_TypeEnum {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1aaac9c71_TypeEnumItem>> _field_Items;
	


};
struct _1aaacc6e1_comptimeRange {
	jule::Trait<_1aaacc504_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1aaacc6e1_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1aaacc6e1_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1aaacd24c_comptimeStructField {
	jule::Ptr<_1aaa997e0_FieldIns> _field_field;
	

	inline bool operator==(_1aaacd24c_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1aaacd24c_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1aaacedec_comptimeStructFields {
	jule::Slice<jule::Ptr<_1aaa997e0_FieldIns>> _field_fields;
	


};
struct _1aaad1508_comptimeStatic {
	jule::Ptr<_1aab68969_Var> _field_field;
	

	inline bool operator==(_1aaad1508_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1aaad1508_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1aaad31b9_comptimeStatics {
	jule::Slice<jule::Ptr<_1aab68969_Var>> _field_fields;
	


};
struct _1aaad47b4_comptimeEnumField {
	jule::Ptr<_1aaac80c1_EnumItem> _field_field;
	

	inline bool operator==(_1aaad47b4_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1aaad47b4_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1aaad5ac3_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1aaac80c1_EnumItem>> _field_fields;
	


};
struct _1aaad7256_comptimeParam {
	jule::Ptr<_1aaab5102_ParamIns> _field_param;
	

	inline bool operator==(_1aaad7256_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1aaad7256_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1aaad94bc_comptimeParams {
	jule::Slice<jule::Ptr<_1aaab5102_ParamIns>> _field_params;
	


};
struct _1aaadaab7_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1aaadc1b2_comptimeTypeInfo>> _field_types;
	


};
struct _1aaadc1b2_comptimeTypeInfo {
	jule::Ptr<_1aabec1e5_TypeKind> _field_base;
	

	inline bool operator==(_1aaadc1b2_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1aaadc1b2_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1aaae32b7_comptimeValue {
	jule::Ptr<_1aabbbe1d_Data> _field_data;
	

	inline bool operator==(_1aaae32b7_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1aaae32b7_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1aaae5b16_comptimeFiles {
	jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>> _field_files;
	


};
struct _1aaae7211_comptimeFile {
	jule::Ptr<_1aabb6be8_SymbolTable> _field_file;
	

	inline bool operator==(_1aaae7211_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1aaae7211_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1aaaeb37a_constraintChecker {
	jule::Ptr<_1aab45c87_Sema> _field_s;
	jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1aabea80e_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> _field_genericsA;
	jule::Ptr<_1aaab609d_FnIns> _field_fi;
	jule::Ptr<_1aaa9a390_StructIns> _field_si;
	jule::Ptr<_1c3e3a5e6_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1aaaed3b0_Impl {
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Base;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1aaab3199_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1aab68969_Var>> _field_Statics;
	


};
struct _1aab037e4_Scope {
	jule::Ptr<_1aab037e4_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1aab03c12_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1aab037e4_Scope> _field_Scope;
	

	inline bool operator==(_1aab03c12_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aab03c12_If _other) { return !this->operator==(_other); }


};
struct _1aab0400e_Else {
	jule::Ptr<_1aab037e4_Scope> _field_Scope;
	

	inline bool operator==(_1aab0400e_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aab0400e_Else _other) { return !this->operator==(_other); }


};
struct _1aab0442c_Conditional {
	jule::Slice<jule::Ptr<_1aab03c12_If>> _field_Elifs;
	jule::Ptr<_1aab0400e_Else> _field_Default;
	


};
struct _1aab04729_InfIter {
	jule::Ptr<_1aab037e4_Scope> _field_Scope;
	

	inline bool operator==(_1aab04729_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aab04729_InfIter _other) { return !this->operator==(_other); }


};
struct _1aab04bd0_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1aab037e4_Scope> _field_Scope;
	

	inline bool operator==(_1aab04bd0_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1aab04bd0_WhileIter _other) { return !this->operator==(_other); }


};
struct _1aab0562b_RangeIter {
	jule::Ptr<_1aabbbe1d_Data> _field_Expr;
	jule::Ptr<_1aab037e4_Scope> _field_Scope;
	jule::Ptr<_1aab68969_Var> _field_KeyA;
	jule::Ptr<_1aab68969_Var> _field_KeyB;
	

	inline bool operator==(_1aab0562b_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1aab0562b_RangeIter _other) { return !this->operator==(_other); }


};
struct _1aab059b1_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1aab059b1_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1aab059b1_ContSt _other) { return !this->operator==(_other); }


};
struct _1aab05d8a_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1aab05d8a_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1aab05d8a_BreakSt _other) { return !this->operator==(_other); }


};
struct _1aab06187_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1aab06187_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1aab06187_Label _other) { return !this->operator==(_other); }


};
struct _1aab06561_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1aab06187_Label> _field_Label;
	

	inline bool operator==(_1aab06561_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1aab06561_GotoSt _other) { return !this->operator==(_other); }


};
struct _1aab0693a_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1aab0693a_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1aab0693a_Postfix _other) { return !this->operator==(_other); }


};
struct _1aab06de1_Assign {
	jule::Ptr<_1aaa9e471_OperandExprModel> _field_L;
	jule::Ptr<_1aaa9e471_OperandExprModel> _field_R;
	jule::Ptr<_1c3e3a5e6_Token> _field_Op;
	

	inline bool operator==(_1aab06de1_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1aab06de1_Assign _other) { return !this->operator==(_other); }


};
struct _1aab072ba_MultiAssign {
	jule::Slice<jule::Ptr<_1aabbbe1d_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1aab0792a_Match {
	jule::Ptr<_1aabbbe1d_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1aab08563_Case>> _field_Cases;
	jule::Ptr<_1aab08563_Case> _field_Default;
	


};
struct _1aab08563_Case {
	jule::Ptr<_1aab0792a_Match> _field_Owner;
	jule::Ptr<_1aab037e4_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1aabbbe1d_Data>> _field_Exprs;
	jule::Ptr<_1aab08563_Case> _field_Next;
	


};
struct _1aab08b5c_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1aab08b5c_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1aab08b5c_FallSt _other) { return !this->operator==(_other); }


};
struct _1aab08ee2_RetSt {
	jule::Ptr<_1aaab609d_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1aab08ee2_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1aab08ee2_RetSt _other) { return !this->operator==(_other); }


};
struct _1aab09652_scopeLabel {
	jule::Ptr<_1c3e3a5e6_Token> _field_token;
	jule::Ptr<_1aab06187_Label> _field_label;
	jule::I32 _field_pos = 0;
	jule::Ptr<_1aab0aae8_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1aab09652_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1aab09652_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1aab09bd5_scopeGoto {
	jule::Ptr<_1aab06561_GotoSt> _field_st;
	jule::Ptr<_1aaa8417b_GotoSt> _field_gt;
	jule::Ptr<_1aab0aae8_scopeChecker> _field_scope;
	jule::I32 _field_pos = 0;
	

	inline bool operator==(_1aab09bd5_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1aab09bd5_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1aab0aae8_scopeChecker {
	jule::Ptr<_1c3e3a5e6_Token> _field_calledFrom;
	jule::Ptr<_1aab45c87_Sema> _field_s;
	jule::Ptr<_1aaab609d_FnIns> _field_owner;
	jule::Ptr<_1aab0aae8_scopeChecker> _field_parent;
	jule::I32 _field_childIndex = 0;
	jule::Ptr<_1aabb6be8_SymbolTable> _field_table;
	jule::Ptr<_1aab037e4_Scope> _field_scope;
	jule::Ptr<_1aaa866de_ScopeTree> _field_tree;
	jule::Ptr<_1aaab609d_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1aab09652_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1aab09bd5_scopeGoto>>> _field_gotos;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_1aab0aae8_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1aab0aae8_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1aab1d4e0_directiveChecker {
	jule::Ptr<_1aab45c87_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1aaa42c61_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1aab1d4e0_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1aab1d4e0_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1aab24c33_ImportInfo {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_Selected;
	jule::Ptr<_1aab27b59_Package> _field_Package;
	jule::I32 _field_ModId = 0;
	


};
struct _1aab27b59_Package {
	jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>> _field_Files;
	


};
struct _1aab45160_commonSemaMeta {
	jule::Slice<jule::Ptr<_1aaadc1b2_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1aab45c87_Sema {
	jule::Slice<_1c3983b45_Log> _field_errors;
	jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>> _field_files;
	jule::Ptr<_1aabb6be8_SymbolTable> _field_file;
	jule::I32 _field_flags = 0LL;
	jule::Ptr<_1aab45160_commonSemaMeta> _field_meta;
	


};
struct _1aab653c2_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1aab677ae_IterRelation {
	jule::Ptr<_1aab68969_Var> _field_Range;
	

	inline bool operator==(_1aab677ae_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1aab677ae_IterRelation _other) { return !this->operator==(_other); }


};
struct _1aab68969_Var {
	jule::Ptr<_1aab037e4_Scope> _field_Scope;
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1aac0465e_TypeSymbol> _field_Kind;
	jule::Ptr<_1aabbd062_Value> _field_Value;
	jule::Ptr<_1aaab9249_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1aaa42c61_Directive>> _field_Directives;
	jule::Ptr<_1aab677ae_IterRelation> _field_IterRelation;
	jule::I32 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1aab68969_Var>> _field_Depends;
	


};
struct _1aab6977d_FuncPattern {
	


};
struct _1aaba3c3a_typeCompatibilityChecker {
	jule::Ptr<_1aab45c87_Sema> _field_s;
	jule::Ptr<_1aabec1e5_TypeKind> _field_dest;
	jule::Ptr<_1aabec1e5_TypeKind> _field_src;
	jule::Ptr<_1c3e3a5e6_Token> _field_errorToken;
	

	inline bool operator==(_1aaba3c3a_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1aaba3c3a_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1aaba59d9_assignTypeChecker {
	jule::Ptr<_1aab45c87_Sema> _field_s;
	jule::Ptr<_1aabec1e5_TypeKind> _field_dest;
	jule::Ptr<_1aabbbe1d_Data> _field_d;
	jule::Ptr<_1c3e3a5e6_Token> _field_errorToken;
	

	inline bool operator==(_1aaba59d9_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1aaba59d9_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1aaba7656_dynamicTypeAnnotation {
	jule::Ptr<_1aabbdb12_Eval> _field_e;
	jule::Ptr<_1aaab609d_FnIns> _field_f;
	jule::Ptr<_1aaab5102_ParamIns> _field_p;
	jule::Ptr<_1aabbbe1d_Data> _field_a;
	jule::Ptr<_1c3e3a5e6_Token> _field_errorToken;
	jule::Ptr<_1aabec1e5_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1aaa765e1_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> _field_ignored;
	


};
struct _1aabac4b3_fnCallArgChecker {
	jule::Ptr<_1aabbdb12_Eval> _field_e;
	jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _field_args;
	jule::Ptr<_1c3e3a5e6_Token> _field_errorToken;
	jule::Ptr<_1aaab609d_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> _field_ignored;
	


};
struct _1aabb03ea_structLitChecker {
	jule::Ptr<_1aabbdb12_Eval> _field_e;
	jule::Ptr<_1c3e3a5e6_Token> _field_errorToken;
	jule::Ptr<_1aaa9a390_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1aaaa0373_StructArgExprModel>> _field_args;
	


};
struct _1aabb21cc_rangeChecker {
	jule::Ptr<_1aab0aae8_scopeChecker> _field_sc;
	jule::Ptr<_1aaa8b20a_RangeKind> _field_rang;
	jule::Ptr<_1aab0562b_RangeIter> _field_Kind;
	jule::Ptr<_1aabbbe1d_Data> _field_d;
	

	inline bool operator==(_1aabb21cc_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1aabb21cc_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1aabb493d_retTypeChecker {
	jule::Ptr<_1aab0aae8_scopeChecker> _field_sc;
	jule::Ptr<_1aaab609d_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _field_exprs;
	jule::Ptr<_1c3e3a5e6_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1aabb6be8_SymbolTable {
	jule::Ptr<_1c3e40db0_File> _field_File;
	jule::Slice<_1aaaba767_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1aab24c33_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1aab68969_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1aaa972b0_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1aaab3199_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1aaac6443_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1aaac8b3d_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1aaaca348_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1aaaed3b0_Impl>> _field_Impls;
	


};
struct _1aabbbe1d_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1aabec1e5_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1c4cbcda1_Const> _field_Constant;
	

	inline bool operator==(_1aabbbe1d_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1aabbbe1d_Data _other) { return !this->operator==(_other); }


};
struct _1aabbd062_Value {
	jule::Ptr<_1aaa7a925_Expr> _field_Expr;
	jule::Ptr<_1aabbbe1d_Data> _field_Data;
	

	inline bool operator==(_1aabbd062_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1aabbd062_Value _other) { return !this->operator==(_other); }


};
struct _1aabbdb12_Eval {
	jule::Ptr<_1aab45c87_Sema> _field_s;
	jule::Trait<_1aac21d30_Lookup> _field_lookup;
	jule::Ptr<_1aabec1e5_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1aab68969_Var> _field_owner;
	jule::Ptr<_1aaa997e0_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1aabbdb12_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1aabbdb12_Eval _other) { return !this->operator==(_other); }


};
struct _1aabdc49e_unaryEval {
	jule::Ptr<_1aabbdb12_Eval> _field_e;
	jule::Ptr<_1aabbbe1d_Data> _field_d;
	jule::Ptr<_1aaa7c9d2_UnaryExpr> _field_u;
	

	inline bool operator==(_1aabdc49e_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1aabdc49e_unaryEval _other) { return !this->operator==(_other); }


};
struct _1aabde43a_binaryEval {
	jule::Ptr<_1aabbdb12_Eval> _field_e;
	jule::Ptr<_1aabbbe1d_Data> _field_l;
	jule::Ptr<_1aabbbe1d_Data> _field_r;
	jule::Ptr<_1c3e3a5e6_Token> _field_op;
	

	inline bool operator==(_1aabde43a_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1aabde43a_binaryEval _other) { return !this->operator==(_other); }


};
struct _1aabea80e_InsGeneric {
	jule::Ptr<_1aabec1e5_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> _field_Constraint;
	


};
struct _1aabeb403_TypeAlias {
	jule::Ptr<_1aaa866de_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1aac0465e_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> _field_Generics;
	


};
struct _1aabec1e5_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1aabebc3e_Kind> _field_Kind;
	

	inline bool operator==(_1aabec1e5_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aabec1e5_TypeKind _other) { return !this->operator==(_other); }


};
struct _1aac0465e_TypeSymbol {
	jule::Ptr<_1aaa765e1_TypeDecl> _field_Decl;
	jule::Ptr<_1aabec1e5_TypeKind> _field_Kind;
	

	inline bool operator==(_1aac0465e_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aac0465e_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1aac05066_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1aac05066_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1aac05066_Prim _other) { return !this->operator==(_other); }


};
struct _1aac08a92_Sptr {
	jule::Ptr<_1aabec1e5_TypeKind> _field_Elem;
	

	inline bool operator==(_1aac08a92_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aac08a92_Sptr _other) { return !this->operator==(_other); }


};
struct _1aac09565_Slc {
	jule::Ptr<_1aabec1e5_TypeKind> _field_Elem;
	

	inline bool operator==(_1aac09565_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aac09565_Slc _other) { return !this->operator==(_other); }


};
struct _1aac0a159_Tuple {
	jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> _field_Types;
	


};
struct _1aac0ac09_Map {
	jule::Ptr<_1aabec1e5_TypeKind> _field_Key;
	jule::Ptr<_1aabec1e5_TypeKind> _field_Val;
	

	inline bool operator==(_1aac0ac09_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1aac0ac09_Map _other) { return !this->operator==(_other); }


};
struct _1aac0b886_Arr {
	jule::Bool _field_Auto = false;
	jule::I32 _field_N = 0;
	jule::Ptr<_1aabec1e5_TypeKind> _field_Elem;
	

	inline bool operator==(_1aac0b886_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aac0b886_Arr _other) { return !this->operator==(_other); }


};
struct _1aac0c359_Ptr {
	jule::Ptr<_1aabec1e5_TypeKind> _field_Elem;
	

	inline bool operator==(_1aac0c359_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1aac0c359_Ptr _other) { return !this->operator==(_other); }


};
struct _1aac0d35a_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1aac0d35a_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1aac0d35a_referencer _other) { return !this->operator==(_other); }


};
struct _1aac0e34a_typeChecker {
	jule::Ptr<_1aab45c87_Sema> _field_s;
	jule::Trait<_1aac21d30_Lookup> _field_rootLookup;
	jule::Trait<_1aac21d30_Lookup> _field_lookup;
	jule::Ptr<_1aac0d35a_referencer> _field_referencer;
	jule::Ptr<_1aaab9249_ReferenceStack> _field_refers;
	jule::Ptr<_1c3e3a5e6_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1aabeb403_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1aac16ece_identTypeLookup {
	

	inline bool operator==(_1aac16ece_identTypeLookup _other) { return true; }

	inline bool operator!=(_1aac16ece_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1ab6d1943_FileInfo {
	jule::Ptr<_1aaa41996_Ast> _field_Ast;
	jule::Slice<_1c3983b45_Log> _field_Errors;
	


};
struct _1ab7284a1_stmt {
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1ab728d42_scopeParser {
	jule::Ptr<_1ab747019_parser> _field_p;
	jule::Ptr<_1aaa866de_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1ab7284a1_stmt>> _field_stmts;
	jule::I32 _field_pos = 0;
	


};
struct _1ab736415_exprBuilder {
	jule::Ptr<_1ab747019_parser> _field_p;
	

	inline bool operator==(_1ab736415_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1ab736415_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1ab743873_assignInfo {
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_l;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_r;
	jule::Ptr<_1c3e3a5e6_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1ab747019_parser {
	jule::Ptr<_1aaa41996_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1aaa42c61_Directive>> _field_directives;
	jule::Slice<_1c3983b45_Log> _field_errors;
	jule::Ptr<_1ab736415_exprBuilder> _field_ep;
	


};
struct _1ab758d83_typeBuilder {
	jule::Ptr<_1ab747019_parser> _field_p;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _field_tokens;
	jule::I32* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1aae03c04_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	inline bool operator==(_1aae03c04_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1aae03c04_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1aae051ab_directiveEval {
	jule::Slice<_1c3983b45_Log> _field_logs;
	jule::Ptr<_1aaa42c61_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1ab75ceb9_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1aab24c33_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1ab7631cd_OrderedDefines {
	jule::Slice<jule::Ptr<_1aaa972b0_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1aab68969_Var>> _field_Globals;
	


};
struct _1ab763442_defineOrderer {
	

	inline bool operator==(_1ab763442_defineOrderer _other) { return true; }

	inline bool operator!=(_1ab763442_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1ab9517c8_liveTable {
	jule::Slice<jule::Ptr<_1aab68969_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1aaab609d_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1aaa9a390_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1aaac6443_Trait>> _field_traits;
	


};
struct _1ac599266_scopeDeadCode {
	jule::Ptr<_1ac599266_scopeDeadCode> _field_parent;
	jule::Ptr<_1aab037e4_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I32 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1aab06187_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1aab06561_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1ac599266_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1ac599266_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1ac59d4bd_exprDeadCode {
	jule::Ptr<_1ac599266_scopeDeadCode> _field_s;
	

	inline bool operator==(_1ac59d4bd_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1ac59d4bd_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1aace8643_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1c4cbcda1_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1aace8643_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1aace8643_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1aace8bd7_MutSlicingExprModel {
	jule::Ptr<_1c3e3a5e6_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1aace8bd7_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1aace8bd7_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1aace8ed4_UnsafeBinopExprModel {
	jule::Ptr<_1aaa9e96b_BinopExprModel> _field_Node;
	

	inline bool operator==(_1aace8ed4_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1aace8ed4_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1aace9358_UnsafeIndexingExprModel {
	jule::Ptr<_1aaaa22cb_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1aace9358_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1aace9358_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1aace96ee_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1aaaa1d25_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1aace96ee_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1aace96ee_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1aace9ac8_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1aace9ac8_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1aace9ac8_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1aace9dc5_InlineStdInternalNosafeStobs {
	jule::Any _field_Str = jule::Any(nullptr);
	

	inline bool operator==(_1aace9dc5_InlineStdInternalNosafeStobs _other) {
		return 
			this->_field_Str == _other._field_Str;
	}

	inline bool operator!=(_1aace9dc5_InlineStdInternalNosafeStobs _other) { return !this->operator==(_other); }


};
struct _1aaceb14b_scopeOptimizer {
	jule::I32 _field_i = 0;
	jule::Ptr<_1aab037e4_Scope> _field_scope;
	

	inline bool operator==(_1aaceb14b_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1aaceb14b_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1aad01926_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1aad01926_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1aad01926_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1ab764cd4_stdCacheData {
	jule::Ptr<_1aaab609d_FnIns> _field_f;
	jule::Fn<void(_1aad01926_exprOptimizer*,_1ab764cd4_stdCacheData*,jule::Ptr<_1aaaa194b_FnCallExprModel>*)> _field_do;
	


};
struct _1ac5a5e54_Optimizer {
	jule::Ptr<_1ab76097d_IR> _field_ir;
	

	inline bool operator==(_1ac5a5e54_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1ac5a5e54_Optimizer _other) { return !this->operator==(_other); }


};
struct _1ab38c049_AnsiEscape {
	

	inline bool operator==(_1ab38c049_AnsiEscape _other) { return true; }

	inline bool operator!=(_1ab38c049_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1ab38d9da_Logger {
	

	inline bool operator==(_1ab38d9da_Logger _other) { return true; }

	inline bool operator!=(_1ab38d9da_Logger _other) { return !this->operator==(_other); }


};
struct _1a6187201_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1a6187201_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1a6187201_AbsTime _other) { return !this->operator==(_other); }


};
struct _1a61878c7_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1a61878c7_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1a61878c7_Time _other) { return !this->operator==(_other); }


};
struct _1a60b08bb_scopeCoder {
	jule::Ptr<_1a6191e53_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a60b08bb_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a60b08bb_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1a60b96c7_exprCoder {
	jule::Ptr<_1a6191e53_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a60b96c7_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a60b96c7_exprCoder _other) { return !this->operator==(_other); }


};
struct _1a60ca2a9_deriveCoder {
	jule::Ptr<_1a6191e53_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a60ca2a9_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a60ca2a9_deriveCoder _other) { return !this->operator==(_other); }


};
struct _1a60cbd6b_TestCoder {
	jule::Ptr<_1aaa9a390_StructIns> _field_t;
	jule::Ptr<_1aaab3199_Fn> _field_tmReset;
	jule::Ptr<_1aaab3199_Fn> _field_tmFailed;
	jule::Ptr<_1aaab3199_Fn> _field_tmSkipped;
	jule::Ptr<_1a6191e53_ObjectCoder> _field_oc;
	

	inline bool operator==(_1a60cbd6b_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1a60cbd6b_TestCoder _other) { return !this->operator==(_other); }


};
struct _1a60cea0b_identCoder {
	

	inline bool operator==(_1a60cea0b_identCoder _other) { return true; }

	inline bool operator!=(_1a60cea0b_identCoder _other) { return !this->operator==(_other); }


};
struct _1a619035d_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1a619035d_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1a619035d_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1a6190935_traitHash {
	jule::Ptr<_1aaac6443_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1aaa9a390_StructIns> _field_s;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_1a6190935_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1a6190935_traitHash _other) { return !this->operator==(_other); }


};
struct _1a6190d0e_traitCast {
	jule::Ptr<_1aaac6443_Trait> _field_t1;
	jule::Ptr<_1aaac6443_Trait> _field_t2;
	

	inline bool operator==(_1a6190d0e_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1a6190d0e_traitCast _other) { return !this->operator==(_other); }


};
struct _1a61a166b_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1a61a166b_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1a61a166b_customType _other) { return !this->operator==(_other); }


};
struct _1a61a2271_typeCoder {
	jule::Ptr<_1a6191e53_ObjectCoder> _field_oc;
	jule::Ptr<_1a6476457_resultCoder> _field_rc;
	

	inline bool operator==(_1a61a2271_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1a61a2271_typeCoder _other) { return !this->operator==(_other); }


};
struct _1a6476457_resultCoder {
	jule::Ptr<_1a61a2271_typeCoder> _field_tc;
	

	inline bool operator==(_1a6476457_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1a6476457_resultCoder _other) { return !this->operator==(_other); }


};
struct _1a5d1b946_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1a5d1b946_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a5d1b946_Flag _other) { return !this->operator==(_other); }


};struct _1a5d20362_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1a5d20362_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a5d20362_Flag _other) { return !this->operator==(_other); }


};struct _1a5d23a5d_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1a5d23a5d_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a5d23a5d_Flag _other) { return !this->operator==(_other); }


};struct _1a5d2729d_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1a5d2729d_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a5d2729d_Flag _other) { return !this->operator==(_other); }


};struct _1a5d2a999_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1a5d2a999_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1a5d2a999_Flag _other) { return !this->operator==(_other); }


};
struct _1a64e331a_FlagSet {
	jule::Slice<jule::Trait<_1a64e1769_CommonFlag>> _field_flags;
	


};
struct _1a64e5c9b_argParser {
	_1a64e331a_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i = 0;
	


};
struct _1a6191e53_ObjectCoder {
	_1c38d3b83_StrBuilder _field_Obj;
	_1c38d3b83_StrBuilder _field_resultDecls;
	_1c38d3b83_StrBuilder _field_anyObj;
	jule::Ptr<_1ab76097d_IR> _field_ir;
	_1a619035d_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1a6190935_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1a6190d0e_traitCast> _field_traitCastMap;
	jule::Ptr<_1a60b96c7_exprCoder> _field_ec;
	jule::Ptr<_1a60b08bb_scopeCoder> _field_sc;
	jule::Ptr<_1a61a2271_typeCoder> _field_tc;
	jule::Ptr<_1a60ca2a9_deriveCoder> _field_dc;
	jule::I32 _field_headPos = 0;
	jule::I32 _field_declPos = 0;
	


};
struct _1ac594abe_ObjectDeadCode {
	_1ab9517c8_liveTable _field_live;
	jule::Ptr<_1ab76097d_IR> _field_ir;
	


};
struct _1ab76097d_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1aab27b59_Package> _field_Main;
	jule::Slice<jule::Ptr<_1aab24c33_ImportInfo>> _field_Used;
	_1ab7631cd_OrderedDefines _field_Ordered;
	


};
struct _1aaa9a390_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1aaa972b0_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1aabea80e_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1aaa997e0_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1aab68969_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1aaab3199_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1aaab9249_ReferenceStack> _field_Refers;
	_1aaa9639c_Operators _field_Operators;
	


};
struct _1c3a4282a_Cmd {
	_1c3a9225e_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aabbbe1d_Data__jule_tuple_x_1aabbbe1d_Data {
	jule::Ptr<_1aabbbe1d_Data> __jule_result_arg0;
	jule::Ptr<_1aabbbe1d_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1aaa8d4d7_Case__jule_tuple_bool {
	jule::Ptr<_1aaa8d4d7_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aaa8d4d7_Case__jule_tuple_x_1aaa8c33d_Else {
	jule::Slice<jule::Ptr<_1aaa8d4d7_Case>> __jule_result_arg0;
	jule::Ptr<_1aaa8c33d_Else> __jule_result_arg1;
};
struct __jule_tuple__1aaa85d2b_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool {
	jule::Ptr<_1aaa8516b_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1aaa765e1_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aaa794d4_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1aaa794d4_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log {
	jule::Slice<jule::Ptr<_1aaa41996_Ast>> __jule_result_arg0;
	jule::Slice<_1c3983b45_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1c3983b45_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1c3983b45_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1ab76097d_IR__jule_tuple_s_1c3983b45_Log {
	jule::Ptr<_1ab76097d_IR> __jule_result_arg0;
	jule::Slice<_1c3983b45_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1c40b5111_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1c40b5111_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1c40b5111_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1c40b5111_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1aabb6be8_SymbolTable__jule_tuple_s_1c3983b45_Log {
	jule::Ptr<_1aabb6be8_SymbolTable> __jule_result_arg0;
	jule::Slice<_1c3983b45_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1aab27b59_Package__jule_tuple_s_1c3983b45_Log {
	jule::Ptr<_1aab27b59_Package> __jule_result_arg0;
	jule::Slice<_1c3983b45_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log {
	jule::Ptr<_1aaa41996_Ast> __jule_result_arg0;
	jule::Slice<_1c3983b45_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_sx_1c3e3a5e6_Token {
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> __jule_result_arg0;
	jule::Slice<_1c3983b45_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _1c38d3b83_StrBuilder static__1c38d3ea2_New(jule::I32);
inline void _1c38dc692_Write(_1c38d3b83_StrBuilder*, jule::Slice<jule::U8>);
inline void _1c38dc94a_WriteStr(_1c38d3b83_StrBuilder*, jule::Str);
inline void _1c38dcc03_WriteByte(_1c38d3b83_StrBuilder*, jule::U8);
inline jule::Str _1c38dd242_Str(_1c38d3b83_StrBuilder*);
inline void _1c38dd440_Clear(_1c38d3b83_StrBuilder*);
inline jule::I32 _1c38dd6c6_Len(_1c38d3b83_StrBuilder*);
inline jule::Slice<jule::U8> _1c38ddbe3_Buf(_1c38d3b83_StrBuilder*);
inline void _1c38dde9b_SetBuf(_1c38d3b83_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _1c38ded37_index(_1c38de8d6_lazyBuff*, jule::I32);
inline void _1c38e00e0_append(_1c38de8d6_lazyBuff*, jule::U8);
inline jule::Str _1c38e0376_string(_1c38de8d6_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>>> static__1c38e42ae_Read(jule::Str);
inline jule::VoidExceptional static__1c38e44e0_Create(jule::Str);
inline jule::VoidExceptional static__1c38e4721_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_206b791d1_File>> static__206b6c1c4_Open(jule::Str, jule::I32, jule::I32);
inline jule::VoidExceptional static__206b6c405_Remove(jule::Str);
inline jule::Exceptional<jule::I32> _206b6c889_Write(_206b791d1_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I32> _206b6cbca_Read(_206b791d1_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_206b791d1_File> static__206b79610_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_206b791d1_File>> static__206b798c9_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__206b79b93_Read(jule::Str);
inline jule::VoidExceptional static__206b7a039_Write(jule::Str, jule::Slice<jule::U8>, jule::I32);
inline jule::VoidExceptional _206b7ae6e_Close(_206b791d1_File*);
inline jule::Exceptional<jule::Ptr<_206b7b9ca_Status>> static__206b6dc86_Of(jule::Str);
inline jule::Bool _206b7bda4_IsDir(_206b7b9ca_Status*);
inline jule::Bool _206b7c13a_IsReg(_206b7b9ca_Status*);
inline jule::U32 _206b7c3c1_Size(_206b7b9ca_Status*);
inline jule::U8 _1c3e3a96a_Prec(_1c3e3a5e6_Token*);
inline void _1c3e4129a_Fill(_1c3e40db0_File*, jule::Slice<jule::U8>);
inline jule::Str _1c3e41531_Dir(_1c3e40db0_File*);
inline jule::Str _1c3e417b7_Name(_1c3e40db0_File*);
inline jule::Str _1c3e41d8e_GetRow(_1c3e40db0_File*, jule::I32);
inline void _1c3e4967c_pushErr(_1c3e490e9_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1c3e49bdd_lex(_1c3e490e9_lex*);
inline jule::Str _1c3e4a02e_id(_1c3e490e9_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1c3e4a2b5_resume(_1c3e490e9_lex*);
inline void _1c3e4a56d_lexLineComment(_1c3e490e9_lex*, jule::Ptr<_1c3e3a5e6_Token>*);
inline void _1c3e4a826_lexRangeComment(_1c3e490e9_lex*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Str _1c3e4ab67_num(_1c3e490e9_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1c3e4aea8_escapeSeq(_1c3e490e9_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1c3e4b3a4_getRune(_1c3e490e9_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1c3e4b6e5_lexRune(_1c3e490e9_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1c3e4b97b_lexStr(_1c3e490e9_lex*);
inline void _1c3e4be10_newLine(_1c3e490e9_lex*);
inline jule::Bool _1c3e4c471_isOp(_1c3e490e9_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U32, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1c3e4c86c_lexBasicOps(_1c3e490e9_lex*, jule::Slice<jule::U8>, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1c3e4cc68_lexId(_1c3e490e9_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1c3e4d164_lexNum(_1c3e490e9_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Ptr<_1c3e3a5e6_Token> _1c3e4d3ea_token(_1c3e490e9_lex*);
inline jule::Bool _1c4c9eec6_set(_1c4ca860b_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _1c4ca0317_floatBits(_1c4ca860b_decimal*, _1c4c94d23_floatInfo*);
inline void _1c4ca89b3_assign(_1c4ca860b_decimal*, jule::U64);
inline void _1c4ca8c6b_shift(_1c4ca860b_decimal*, jule::I32);
inline void _1c4ca9024_roundDown(_1c4ca860b_decimal*, jule::I32);
inline void _1c4ca92cc_roundUp(_1c4ca860b_decimal*, jule::I32);
inline void _1c4ca9585_round(_1c4ca860b_decimal*, jule::I32);
inline jule::U64 _1c4ca981b_roundedInteger(_1c4ca860b_decimal*);
inline jule::Ptr<_1c4cbcda1_Const> static__1c4cbd2e1_NewI64(jule::I64);
inline jule::Ptr<_1c4cbcda1_Const> static__1c4cbd5aa_NewU64(jule::U64);
inline jule::Ptr<_1c4cbcda1_Const> static__1c4cbd874_NewBool(jule::Bool);
inline jule::Ptr<_1c4cbcda1_Const> static__1c4cbdb3d_NewStr(jule::Str);
inline jule::Ptr<_1c4cbcda1_Const> static__1c4cbde07_NewF64(jule::F64);
inline jule::Ptr<_1c4cbcda1_Const> static__1c4cbe116_NewNil(void);
inline jule::I64 _1c4cbe776_ReadI64(_1c4cbcda1_Const*);
inline jule::U64 _1c4cbea0c_ReadU64(_1c4cbcda1_Const*);
inline jule::Bool _1c4cbec93_ReadBool(_1c4cbcda1_Const*);
inline jule::Str _1c4cc0029_ReadStr(_1c4cbcda1_Const*);
inline jule::F64 _1c4cc02b0_ReadF64(_1c4cbcda1_Const*);
inline jule::I64 _1c4cc0546_AsI64(_1c4cbcda1_Const*);
inline jule::U64 _1c4cc07cc_AsU64(_1c4cbcda1_Const*);
inline jule::F64 _1c4cc0a63_AsF64(_1c4cbcda1_Const*);
inline void _1c4cc0d1b_SetI64(_1c4cbcda1_Const*, jule::I64);
inline void _1c4cc10c4_SetU64(_1c4cbcda1_Const*, jule::U64);
inline void _1c4cc137c_SetBool(_1c4cbcda1_Const*, jule::Bool);
inline void _1c4cc1635_SetStr(_1c4cbcda1_Const*, jule::Str);
inline void _1c4cc18dd_SetF64(_1c4cbcda1_Const*, jule::F64);
inline jule::Bool _1c4cc1d72_IsI64(_1c4cbcda1_Const*);
inline jule::Bool _1c4cc2108_IsU64(_1c4cbcda1_Const*);
inline jule::Bool _1c4cc238e_IsBool(_1c4cbcda1_Const*);
inline jule::Bool _1c4cc2625_IsStr(_1c4cbcda1_Const*);
inline jule::Bool _1c4cc28ab_IsF64(_1c4cbcda1_Const*);
inline jule::Bool _1c4cc2b42_IsNil(_1c4cbcda1_Const*);
inline jule::Bool _1c4cc32c4_And(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc3615_Or(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc4aab_Add(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc4dec_Sub(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc523d_Mul(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc557e_Div(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc58c0_Mod(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc5c11_BitwiseAnd(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc6052_BitwiseOr(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc6393_Xor(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc66d4_Lshift(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1c4cc6a25_Rshift(_1c4cbcda1_Const*, _1c4cbcda1_Const);
inline jule::Bool _1aaa7847d_IsUnsafe(_1aaa7811a_PtrTypeDecl*);
inline jule::Bool _1aaa78c20_AutoSized(_1aaa788ac_ArrTypeDecl*);
inline jule::Bool _1aaa7eaa0_Unhandled(_1aaa7e72b_FnCallExpr*);
inline jule::Bool _1aaa7ed36_Ignored(_1aaa7e72b_FnCallExpr*);
inline jule::Bool _1aaa872a0_IsSelf(_1aaa86e2b_ParamDecl*);
inline jule::Bool _1aaa886e1_IsAnon(_1aaa8837d_FnDecl*);
inline jule::Bool _1aaa8a33b_IsInf(_1aaa89ec8_Iter*);
inline jule::Bool _1aaa8ab66_IsWhileNext(_1aaa8a803_WhileKind*);
inline jule::Ptr<_1aaa997e0_FieldIns> _1aaa94741_instance(jule::Ptr<_1aaa943bc_Field>);
inline jule::Ptr<_1aaa9a390_StructIns> _1aaa97733_instance(jule::Ptr<_1aaa972b0_Struct>);
inline jule::Ptr<_1aaa9a390_StructIns> _1aaa97a41_appendInstance(_1aaa972b0_Struct*, jule::Ptr<_1aaa9a390_StructIns>*);
inline jule::Ptr<_1aaab3199_Fn> _1aaa97e3c_FindMethod(_1aaa972b0_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1aab68969_Var> _1aaa9827d_FindStatic(_1aaa972b0_Struct*, jule::Str);
inline jule::Ptr<_1aaa943bc_Field> _1aaa985be_FindField(_1aaa972b0_Struct*, jule::Str);
inline jule::Bool _1aaa98910_IsImplements(_1aaa972b0_Struct*, jule::Ptr<_1aaac6443_Trait>);
inline jule::Bool _1aaa98c51_IsDerives(_1aaa972b0_Struct*, jule::Str);
inline jule::Bool _1aaa99092_IsUses(_1aaa972b0_Struct*, jule::Ptr<_1aaa972b0_Struct>);
inline jule::Ptr<_1aaab5102_ParamIns> _1aaaabbed_instance(jule::Ptr<_1aaaab868_Param>);
inline jule::Bool _1aaaabe84_IsSelf(_1aaaab868_Param*);
inline jule::Bool _1aaaac21a_IsRef(_1aaaab868_Param*);
inline jule::Bool _1aaab361c_IsVoid(_1aaab3199_Fn*);
inline jule::Bool _1aaab38a3_IsMethod(_1aaab3199_Fn*);
inline jule::Bool _1aaab3b39_IsEntryPoint(_1aaab3199_Fn*);
inline jule::Bool _1aaab3dc0_IsInit(_1aaab3199_Fn*);
inline jule::Bool _1aaab4156_IsAnon(_1aaab3199_Fn*);
inline jule::Bool _1aaab43dc_AnyVar(_1aaab3199_Fn*);
inline jule::Ptr<_1aaab609d_FnIns> _1aaab4673_instanceForce(jule::Ptr<_1aaab3199_Fn>);
inline jule::Ptr<_1aaab609d_FnIns> _1aaab4909_instance(jule::Ptr<_1aaab3199_Fn>);
inline jule::Ptr<_1aaab609d_FnIns> _1aaab4c17_appendInstance(_1aaab3199_Fn*, jule::Ptr<_1aaab609d_FnIns>*);
inline jule::Str _1aaab5465_Str(_1aaab5102_ParamIns*);
inline jule::Str _1aaab63de_Str(_1aaab609d_FnIns*);
inline jule::Bool _1aaab6730_Equal(jule::Ptr<_1aaab609d_FnIns>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Bool _1aaab6bc5_EqualFn(jule::Ptr<_1aaab609d_FnIns>, jule::Ptr<_1aaab609d_FnIns>*);
inline jule::Bool _1aaab7016_equalTrait(jule::Ptr<_1aaab609d_FnIns>, jule::Ptr<_1aaab609d_FnIns>*);
inline jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> _1aaab729c_Types(_1aaab609d_FnIns*);
inline jule::Bool _1aaab7533_IsBuiltin(_1aaab609d_FnIns*);
inline jule::Bool _1aaab77b9_IsAnon(_1aaab609d_FnIns*);
inline jule::Bool _1aaab7b0a_Same(_1aaab609d_FnIns*, jule::Ptr<_1aaab609d_FnIns>);
inline jule::Str _1aaab7e4b_GetKindStr(_1aaab609d_FnIns*, jule::Bool);
inline jule::Ptr<_1aaab9249_ReferenceStack> static__1aaab9546_new(void);
inline jule::I32 _1aaab9942_Len(_1aaab9249_ReferenceStack*);
inline jule::Any _1aaab9c83_At(_1aaab9249_ReferenceStack*, jule::I32);
inline void _1aaaba03b_Push(_1aaab9249_ReferenceStack*, jule::Any);
inline jule::Bool _1a89c1d02_Exist(_1aaab9249_ReferenceStack*, jule::Ptr<_1aaab609d_FnIns>);
inline jule::Bool _1c61a6d49_Exist(_1aaab9249_ReferenceStack*, jule::Ptr<_1aab68969_Var>);
inline jule::Bool _1a8a37b6a_Exist(_1aaab9249_ReferenceStack*, jule::Ptr<_1aaa9a390_StructIns>);
inline jule::Bool _1a8c82887_Exist(_1aaab9249_ReferenceStack*, jule::Ptr<_1aaac6443_Trait>);
inline void _1aaac0bbd_pushErr(_1aaac032c_symbolBuilder*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1aaac144e_pushSuggestion(_1aaac032c_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aaac184a_checkCppUseDeclPath(_1aaac032c_symbolBuilder*, jule::Ptr<_1aaa8e53d_UseDecl>*, jule::Str*);
inline jule::Ptr<_1aab24c33_ImportInfo> _1aaac1b58_buildCppHeaderImport(_1aaac032c_symbolBuilder*, jule::Ptr<_1aaa8e53d_UseDecl>*);
inline jule::Ptr<_1aab24c33_ImportInfo> _1aaac1e99_buildStdImport(_1aaac032c_symbolBuilder*, jule::Ptr<_1aaa8e53d_UseDecl>*);
inline jule::Ptr<_1aab24c33_ImportInfo> _1aaac22da_buildIdentImport(jule::Ptr<_1aaac032c_symbolBuilder>, jule::Ptr<_1aaa8e53d_UseDecl>*);
inline jule::Ptr<_1aab24c33_ImportInfo> _1aaac262b_buildImport(jule::Ptr<_1aaac032c_symbolBuilder>, jule::Ptr<_1aaa8e53d_UseDecl>*);
inline jule::Bool _1aaac296c_checkDuplicateUseDecl(_1aaac032c_symbolBuilder*, jule::Ptr<_1aab24c33_ImportInfo>*);
inline void _1aaac2cd0_implImportSelections(_1aaac032c_symbolBuilder*, jule::Ptr<_1aab24c33_ImportInfo>*, jule::Ptr<_1aaa8e53d_UseDecl>*);
inline jule::Str _1aaac3121_getAsLinkPath(jule::Ptr<_1aaac032c_symbolBuilder>, jule::Str);
inline void _1aaac353e_pushCycleError(jule::Ptr<_1aaac032c_symbolBuilder>, jule::Ptr<_1aaac032c_symbolBuilder>*, jule::Str, _1c38d3b83_StrBuilder*);
inline void _1aaac395c_pushCrossCycleError(jule::Ptr<_1aaac032c_symbolBuilder>, jule::Ptr<_1aaac032c_symbolBuilder>*, jule::Ptr<_1aab24c33_ImportInfo>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1aaac3d58_checkImportCycles(jule::Ptr<_1aaac032c_symbolBuilder>, jule::Ptr<_1aab24c33_ImportInfo>, jule::Ptr<_1aaa8e53d_UseDecl>*);
inline void _1aaac4276_checkPackageAccessibility(_1aaac032c_symbolBuilder*, jule::Ptr<_1aaa8e53d_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1aaac4672_importPackage(jule::Ptr<_1aaac032c_symbolBuilder>, jule::Ptr<_1aab24c33_ImportInfo>*, jule::Ptr<_1aaa8e53d_UseDecl>*);
inline jule::Ptr<_1aab24c33_ImportInfo> _1aaac49b3_importUseDecl(jule::Ptr<_1aaac032c_symbolBuilder>, jule::Ptr<_1aaa8e53d_UseDecl>*);
inline void _1aaac4bb1_importUseDecls(jule::Ptr<_1aaac032c_symbolBuilder>);
inline void _1aaac4e69_appendNode(_1aaac032c_symbolBuilder*, _1aaa4290e_Node*);
inline void _1aaac5167_appendNodes(_1aaac032c_symbolBuilder*);
inline void _1aaac5420_pushDirectivePass(_1aaac032c_symbolBuilder*, jule::Ptr<_1aaa42c61_Directive>*);
inline void _1aaac561d_appendTopDirectives(_1aaac032c_symbolBuilder*);
inline void _1aaac581b_build(jule::Ptr<_1aaac032c_symbolBuilder>);
inline jule::Str _1aaac680b_Str(_1aaac6443_Trait*);
inline jule::Bool _1aaac6b4c_Equal(jule::Ptr<_1aaac6443_Trait>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1aaab3199_Fn> _1aaac70e2_FindMethod(_1aaac6443_Trait*, jule::Str);
inline jule::Ptr<_1aaab3199_Fn> _1aaac7774_findMethodInherit(_1aaac6443_Trait*, jule::Str*);
inline jule::Bool _1aaac8478_AutoExpr(_1aaac80c1_EnumItem*);
inline jule::Str _1aaac8eb2_Str(_1aaac8b3d_Enum*);
inline jule::Bool _1aaac9303_Equal(jule::Ptr<_1aaac8b3d_Enum>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1aaac80c1_EnumItem> _1aaac9732_FindItem(_1aaac8b3d_Enum*, jule::Str);
inline jule::Str _1aaaca689_Str(_1aaaca348_TypeEnum*);
inline jule::Bool _1aaaca9ca_Equal(jule::Ptr<_1aaaca348_TypeEnum>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1aaac9c71_TypeEnumItem> _1aaacae09_FindItem(_1aaaca348_TypeEnum*, jule::Str);
inline jule::Str _1aaaccaa9_Str(_1aaacc6e1_comptimeRange*);
inline jule::Bool _1aaaccdea_Equal(jule::Ptr<_1aaacc6e1_comptimeRange>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Str _1aaacd5c1_Str(_1aaacd24c_comptimeStructField*);
inline jule::Bool _1aaacd912_Equal(jule::Ptr<_1aaacd24c_comptimeStructField>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1aabbbe1d_Data> _1aaacde2e__Name(jule::Ptr<_1aaacd24c_comptimeStructField>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaace32a__Type(jule::Ptr<_1aaacd24c_comptimeStructField>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaace726__Public(jule::Ptr<_1aaacd24c_comptimeStructField>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaacea67_subIdent(jule::Ptr<_1aaacd24c_comptimeStructField>, jule::Str*);
inline jule::Str _1aaad0282_Str(_1aaacedec_comptimeStructFields*);
inline jule::Bool _1aaad05c3_Equal(jule::Ptr<_1aaacedec_comptimeStructFields>, jule::Ptr<_1aabec1e5_TypeKind>);
inline void _1aaad0a46_ready(_1aaacedec_comptimeStructFields*, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
inline void _1aaad0e64_step(_1aaacedec_comptimeStructFields*, jule::I32, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
inline jule::I32 _1aaad11ea_len(_1aaacedec_comptimeStructFields*);
inline jule::Str _1aaad187c_Str(_1aaad1508_comptimeStatic*);
inline jule::Bool _1aaad1bbd_Equal(jule::Ptr<_1aaad1508_comptimeStatic>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1aabbbe1d_Data> _1aaad21da__Name(jule::Ptr<_1aaad1508_comptimeStatic>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaad25d6__Type(jule::Ptr<_1aaad1508_comptimeStatic>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaad29d2__Public(jule::Ptr<_1aaad1508_comptimeStatic>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaad2d23_subIdent(jule::Ptr<_1aaad1508_comptimeStatic>, jule::Str*);
inline jule::Str _1aaad353d_Str(_1aaad31b9_comptimeStatics*);
inline jule::Bool _1aaad387e_Equal(jule::Ptr<_1aaad31b9_comptimeStatics>, jule::Ptr<_1aabec1e5_TypeKind>);
inline void _1aaad3d02_ready(_1aaad31b9_comptimeStatics*, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
inline void _1aaad4220_step(_1aaad31b9_comptimeStatics*, jule::I32, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
inline jule::I32 _1aaad44a6_len(_1aaad31b9_comptimeStatics*);
inline jule::Str _1aaad4b38_Str(_1aaad47b4_comptimeEnumField*);
inline jule::Bool _1aaad4e79_Equal(jule::Ptr<_1aaad47b4_comptimeEnumField>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1aabbbe1d_Data> _1aaad5474__Name(jule::Ptr<_1aaad47b4_comptimeEnumField>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaad57b5_subIdent(jule::Ptr<_1aaad47b4_comptimeEnumField>, jule::Str*);
inline jule::Str _1aaad6057_Str(_1aaad5ac3_comptimeEnumFields*);
inline jule::Bool _1aaad6398_Equal(jule::Ptr<_1aaad5ac3_comptimeEnumFields>, jule::Ptr<_1aabec1e5_TypeKind>);
inline void _1aaad6794_ready(_1aaad5ac3_comptimeEnumFields*, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
inline void _1aaad6bb2_step(_1aaad5ac3_comptimeEnumFields*, jule::I32, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
inline jule::I32 _1aaad6e48_len(_1aaad5ac3_comptimeEnumFields*);
inline jule::Str _1aaad75ca_Str(_1aaad7256_comptimeParam*);
inline jule::Bool _1aaad791b_Equal(jule::Ptr<_1aaad7256_comptimeParam>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1aabbbe1d_Data> _1aaad7e49__Name(jule::Ptr<_1aaad7256_comptimeParam>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaad8345__Type(jule::Ptr<_1aaad7256_comptimeParam>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaad8741__Variadic(jule::Ptr<_1aaad7256_comptimeParam>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaad8b3c__Reference(jule::Ptr<_1aaad7256_comptimeParam>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaad8e7d_subIdent(jule::Ptr<_1aaad7256_comptimeParam>, jule::Str*);
inline jule::Str _1aaad9841_Str(_1aaad94bc_comptimeParams*);
inline jule::Bool _1aaad9b82_Equal(jule::Ptr<_1aaad94bc_comptimeParams>, jule::Ptr<_1aabec1e5_TypeKind>);
inline void _1aaada105_ready(_1aaad94bc_comptimeParams*, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
inline void _1aaada523_step(_1aaad94bc_comptimeParams*, jule::I32, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
inline jule::I32 _1aaada7a9_len(_1aaad94bc_comptimeParams*);
inline jule::Str _1aaadae3b_Str(_1aaadaab7_comptimeTypeInfos*);
inline jule::Bool _1aaadb27c_Equal(jule::Ptr<_1aaadaab7_comptimeTypeInfos>, jule::Ptr<_1aabec1e5_TypeKind>);
inline void _1aaadb700_ready(_1aaadaab7_comptimeTypeInfos*, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
inline void _1aaadbb1d_step(_1aaadaab7_comptimeTypeInfos*, jule::I32, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
inline jule::I32 _1aaadbda4_len(_1aaadaab7_comptimeTypeInfos*);
inline jule::Str _1aaadc536_Str(_1aaadc1b2_comptimeTypeInfo*);
inline jule::Bool _1aaadc877_Equal(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1aabbbe1d_Data> _1aaadceb5__Str(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaadd3b1__Kind(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaadd7ac__Bits(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaaddba8__Elem(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaade0a4__Size(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaade4a0__Key(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaade89b__Value(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaadec97__Fields(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae0193__Statics(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae058e__Public(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae098a__Binded(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae0d86__Ordered(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae1282__Comparable(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae167d__Mutable(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae1a79__Types(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae1e75__Exceptional(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae2371__CanNil(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae276c__Result(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae2b68__Params(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae2ea9_subIdent(jule::Ptr<_1aaadc1b2_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1aaae363b_Str(_1aaae32b7_comptimeValue*);
inline jule::Bool _1aaae397c_Equal(jule::Ptr<_1aaae32b7_comptimeValue>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae3ecc__Unwrap(jule::Ptr<_1aaae32b7_comptimeValue>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae43c8__Type(jule::Ptr<_1aaae32b7_comptimeValue>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae47c4__Lvalue(jule::Ptr<_1aaae32b7_comptimeValue>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae4bc0__Mutable(jule::Ptr<_1aaae32b7_comptimeValue>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae50bb__Const(jule::Ptr<_1aaae32b7_comptimeValue>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae54b7__Field(jule::Ptr<_1aaae32b7_comptimeValue>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae5808_subIdent(jule::Ptr<_1aaae32b7_comptimeValue>, jule::Str*);
inline jule::Str _1aaae5e8a_Str(_1aaae5b16_comptimeFiles*);
inline jule::Bool _1aaae62cb_Equal(jule::Ptr<_1aaae5b16_comptimeFiles>, jule::Ptr<_1aabec1e5_TypeKind>);
inline void _1aaae674e_ready(_1aaae5b16_comptimeFiles*, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
inline void _1aaae6b6c_step(_1aaae5b16_comptimeFiles*, jule::I32, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
inline jule::I32 _1aaae6e03_len(_1aaae5b16_comptimeFiles*);
inline jule::Str _1aaae7585_Str(_1aaae7211_comptimeFile*);
inline jule::Bool _1aaae78c6_Equal(jule::Ptr<_1aaae7211_comptimeFile>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae7de3__Path(jule::Ptr<_1aaae7211_comptimeFile>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae82de__Name(jule::Ptr<_1aaae7211_comptimeFile>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae86da__Dir(jule::Ptr<_1aaae7211_comptimeFile>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae8a2b_subIdent(jule::Ptr<_1aaae7211_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1aab45c87_Sema>*,jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>*)> _1aaaeb776_readyFn(jule::Ptr<_1aaaeb37a_constraintChecker>);
inline jule::Bool _1aaaeba0c_readyFi(jule::Ptr<_1aaaeb37a_constraintChecker>);
inline jule::Bool _1aaaebc93_readySi(jule::Ptr<_1aaaeb37a_constraintChecker>);
inline jule::Bool _1aaaec029_ready(jule::Ptr<_1aaaeb37a_constraintChecker>);
inline jule::Bool _1aaaec2b0_check(jule::Ptr<_1aaaeb37a_constraintChecker>);
inline jule::Bool _1aaaed778_IsTraitImpl(_1aaaed3b0_Impl*);
inline jule::Bool _1aaaeda0e_IsStructImpl(_1aaaed3b0_Impl*);
inline jule::Ptr<_1aab24c33_ImportInfo> _1aab0b08d_SelectPackage(_1aab0aae8_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)>);
inline jule::Ptr<_1aab68969_Var> _1aab0b489_FindVar(_1aab0aae8_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1aabeb403_TypeAlias> _1aab0b885_FindTypeAlias(_1aab0aae8_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaa972b0_Struct> _1aab0bc81_FindStruct(_1aab0aae8_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaab3199_Fn> _1aab0c17c_FindFn(_1aab0aae8_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaac6443_Trait> _1aab0c4bd_FindTrait(_1aab0aae8_scopeChecker*, jule::Str);
inline jule::Ptr<_1aaac8b3d_Enum> _1aab0c80e_FindEnum(_1aab0aae8_scopeChecker*, jule::Str);
inline jule::Ptr<_1aaaca348_TypeEnum> _1aab0cb50_FindTypeEnum(_1aab0aae8_scopeChecker*, jule::Str);
inline jule::Bool _1aab0cea2_isUnsafe(jule::Ptr<_1aab0aae8_scopeChecker>);
inline jule::Bool _1aab0d238_isRoot(_1aab0aae8_scopeChecker*);
inline void _1aab0d436_stop(_1aab0aae8_scopeChecker*);
inline jule::Bool _1aab0d6bc_stopped(_1aab0aae8_scopeChecker*);
inline jule::Bool _1aab0d953_isDeferred(jule::Ptr<_1aab0aae8_scopeChecker>);
inline jule::Ptr<_1aab0aae8_scopeChecker> _1aab0dbd9_getRoot(jule::Ptr<_1aab0aae8_scopeChecker>);
inline jule::Ptr<_1aab0aae8_scopeChecker> _1aab0de70_getHardRoot(jule::Ptr<_1aab0aae8_scopeChecker>);
inline jule::Ptr<_1aab06187_Label> _1aab0e2b1_findLabel(_1aab0aae8_scopeChecker*, jule::Str*);
inline jule::Ptr<_1aab09652_scopeLabel> _1aab0e602_findLabelScope(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Str*);
inline jule::Ptr<_1aab09652_scopeLabel> _1aab0e943_findLabelAll(_1aab0aae8_scopeChecker*, jule::Str*);
inline jule::Bool _1aab0ed3e_isDuplicatedIdent(_1aab0aae8_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1aab100e7_checkVarDecl(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8945b_VarDecl>);
inline void _1aab103a0_checkTypeAliasDecl(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8d031_TypeAliasDecl>);
inline jule::Ptr<_1aab037e4_Scope> _1aab10636_getChild(_1aab0aae8_scopeChecker*);
inline void _1aab10a54_checkChildSsc(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa866de_ScopeTree>*, jule::Ptr<_1aab037e4_Scope>*, jule::Ptr<_1aab0aae8_scopeChecker>*);
inline jule::Ptr<_1aab037e4_Scope> _1aab10e50_checkChildSc(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa866de_ScopeTree>*, jule::Ptr<_1aab0aae8_scopeChecker>*);
inline jule::Ptr<_1aab037e4_Scope> _1aab11291_checkChild(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa866de_ScopeTree>*);
inline void _1aab11549_checkAnonScope(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa866de_ScopeTree>);
inline void _1aab118ac_processErrorCall(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaaa903b_BuiltinErrorCallExprModel>*, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aab11b65_checkExpr(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa7a925_Expr>);
inline jule::Ptr<_1aab03c12_If> _1aab11ea6_checkIf(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8be64_If>);
inline jule::Ptr<_1aab0400e_Else> _1aab122e7_checkElse(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8c33d_Else>);
inline void _1aab125a0_checkConditional(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8c7e4_Conditional>);
inline void _1aab12a78_checkIterScopeSsc(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Uintptr, jule::Ptr<_1aaa866de_ScopeTree>, jule::Ptr<_1aab037e4_Scope>*, jule::Ptr<_1aab0aae8_scopeChecker>);
inline jule::Ptr<_1aab037e4_Scope> _1aab1302e_checkIterScopeSc(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Uintptr, jule::Ptr<_1aaa866de_ScopeTree>, jule::Ptr<_1aab0aae8_scopeChecker>);
inline jule::Ptr<_1aab037e4_Scope> _1aab1342a_checkIterScope(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Uintptr, jule::Ptr<_1aaa866de_ScopeTree>*);
inline void _1aab136d3_checkInfIter(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa89ec8_Iter>*);
inline void _1aab1398b_checkWhileIter(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa89ec8_Iter>*);
inline void _1aab13da9_checkComptimeRangeIter(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa89ec8_Iter>*, jule::Ptr<_1aab0562b_RangeIter>*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aab14162_checkRangeIter(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa89ec8_Iter>*);
inline void _1aab1441a_checkIter(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa89ec8_Iter>);
inline jule::Bool _1aab1475b_checkValidContLabel(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Uintptr);
inline jule::Bool _1aab14a9c_checkValidBreakLabel(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1aab059b1_ContSt> _1aab14ddd_checkContValidScope(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8b9ad_ContSt>);
inline void _1aab15196_checkCont(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8b9ad_ContSt>);
inline void _1aab1544e_checkLabel(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa83ca2_LabelSt>);
inline void _1aab15707_pushGoto(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8417b_GotoSt>);
inline void _1aab159b0_checkPostfix(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8516b_AssignSt>);
inline jule::Bool _1aab15d01_isNewAssignIdent(_1aab0aae8_scopeChecker*, jule::Str);
inline void _1aab160a9_removeInteriorMutRisk(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Bool _1aab16560_checkStructureAssignOp(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa9a390_StructIns>*, jule::Ptr<_1aaa8516b_AssignSt>*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aab16818_checkSingleAssign(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8516b_AssignSt>*);
inline void _1aab16d9b_processEndPartOfMultiAssign(_1aab0aae8_scopeChecker*, jule::Ptr<_1aab072ba_MultiAssign>*, jule::Ptr<_1aaa8516b_AssignSt>*, jule::Ptr<_1aaa84ad8_AssignLeft>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aab17154_checkMultiAssign(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8516b_AssignSt>*);
inline void _1aab1740c_singleDeclAssign(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8516b_AssignSt>*);
inline void _1aab176b5_checkAssignSt(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8516b_AssignSt>);
inline jule::Ptr<_1aab037e4_Scope> _1aab17ab1_checkCaseScope(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aab08563_Case>*, jule::Ptr<_1aaa866de_ScopeTree>*);
inline jule::Ptr<_1aab08563_Case> _1aab18122_checkCase(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aab0792a_Match>, jule::I32, jule::Ptr<_1aaa8d4d7_Case>, jule::Ptr<_1aabbbe1d_Data>);
inline void _1aab18540_checkCases(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8dc24_MatchCase>*, jule::Ptr<_1aab0792a_Match>, jule::Ptr<_1aabbbe1d_Data>);
inline jule::Ptr<_1aab08563_Case> _1aab1893b_checkDefault(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aab0792a_Match>, jule::Ptr<_1aaa8c33d_Else>);
inline void _1aab18c9e_checkComptimePanic(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1c3e3a5e6_Token>, jule::Ptr<_1aab037e4_Scope>*);
inline void _1aab19112_processConstMatch(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aab0792a_Match>*, jule::Ptr<_1aaa8dc24_MatchCase>*);
inline void _1aab193ba_checkTypeMatch(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8dc24_MatchCase>*);
inline void _1aab19673_checkCommonMatch(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8dc24_MatchCase>*);
inline void _1aab1992b_checkMatch(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8dc24_MatchCase>);
inline void _1aab19bd4_checkFall(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa84478_FallSt>);
inline jule::Ptr<_1aab05d8a_BreakSt> _1aab1a025_checkBreakWithLabel(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8b5d4_BreakSt>);
inline jule::Ptr<_1aab05d8a_BreakSt> _1aab1a366_checkPlainBreak(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8b5d4_BreakSt>);
inline void _1aab1a61e_checkBreak(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa8b5d4_BreakSt>);
inline void _1aab1a8c7_checkRet(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa89835_RetSt>);
inline void _1aab1ab80_checkUseExpr(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa7b2e9_UseExpr>);
inline void _1aab1ae38_checkNode(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Any*);
inline void _1aab1b136_checkResult(jule::Ptr<_1aab0aae8_scopeChecker>);
inline void _1aab1b334_checkTree(jule::Ptr<_1aab0aae8_scopeChecker>);
inline void _1aab1b697_checkGoto(_1aab0aae8_scopeChecker*, jule::Ptr<_1aab09bd5_scopeGoto>*, jule::Ptr<_1aab09652_scopeLabel>*);
inline void _1aab1b895_checkGotos(_1aab0aae8_scopeChecker*);
inline void _1aab1ba93_checkLabels(_1aab0aae8_scopeChecker*);
inline void _1aab1bc91_checkVars(_1aab0aae8_scopeChecker*);
inline void _1aab1be8e_checkAliases(_1aab0aae8_scopeChecker*);
inline void _1aab1c302_check(jule::Ptr<_1aab0aae8_scopeChecker>, jule::Ptr<_1aaa866de_ScopeTree>*, jule::Ptr<_1aab037e4_Scope>*);
inline jule::Ptr<_1aab0aae8_scopeChecker> _1aab1c588_newChildChecker(jule::Ptr<_1aab0aae8_scopeChecker>);
inline void _1aab1d90d_checkCdef(_1aab1d4e0_directiveChecker*, jule::Ptr<_1aaa42c61_Directive>*);
inline void _1aab1dbb6_checkTypedef(_1aab1d4e0_directiveChecker*, jule::Ptr<_1aaa42c61_Directive>*);
inline void _1aab1de6e_checkDerive(_1aab1d4e0_directiveChecker*, jule::Ptr<_1aaa42c61_Directive>*);
inline void _1aab1e227_checkNamespace(_1aab1d4e0_directiveChecker*, jule::Ptr<_1aaa42c61_Directive>*);
inline void _1aab1e4d0_checkDeprecated(_1aab1d4e0_directiveChecker*, jule::Ptr<_1aaa42c61_Directive>*);
inline void _1aab1e788_checkTest(_1aab1d4e0_directiveChecker*, jule::Ptr<_1aaa42c61_Directive>*);
inline void _1aab1ea41_checkDirective(_1aab1d4e0_directiveChecker*, jule::Ptr<_1aaa42c61_Directive>*);
inline void _1aab1ec3e_check(_1aab1d4e0_directiveChecker*);
inline jule::Ptr<_1aab24c33_ImportInfo> _1aab2521c_SelectPackage(_1aab24c33_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)>);
inline jule::Ptr<_1aab68969_Var> _1aab25618_FindVar(_1aab24c33_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1aabeb403_TypeAlias> _1aab25a14_FindTypeAlias(_1aab24c33_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaa972b0_Struct> _1aab25e10_FindStruct(_1aab24c33_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaab3199_Fn> _1aab2630b_FindFn(_1aab24c33_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaac6443_Trait> _1aab2664c_FindTrait(_1aab24c33_ImportInfo*, jule::Str);
inline jule::Ptr<_1aaac8b3d_Enum> _1aab2698d_FindEnum(_1aab24c33_ImportInfo*, jule::Str);
inline jule::Ptr<_1aaaca348_TypeEnum> _1aab26cce_FindTypeEnum(_1aab24c33_ImportInfo*, jule::Str);
inline jule::Bool _1aab27274_isLookupable(_1aab24c33_ImportInfo*, jule::Str*);
inline jule::Bool _1aab275b5_existIdent(_1aab24c33_ImportInfo*, jule::Str);
inline jule::Bool _1aab2784b_isAccessibleViaSelection(_1aab24c33_ImportInfo*);
inline jule::Ptr<_1aab24c33_ImportInfo> _1aab280ee_SelectPackage(_1aab27b59_Package*, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)>);
inline jule::Ptr<_1aab68969_Var> _1aab284ea_FindVar(_1aab27b59_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1aabeb403_TypeAlias> _1aab288e6_FindTypeAlias(_1aab27b59_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaa972b0_Struct> _1aab28ce2_FindStruct(_1aab27b59_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaab3199_Fn> _1aab291dd_FindFn(_1aab27b59_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaac6443_Trait> _1aab2952e_FindTrait(_1aab27b59_Package*, jule::Str);
inline jule::Ptr<_1aaac8b3d_Enum> _1aab29870_FindEnum(_1aab27b59_Package*, jule::Str);
inline jule::Ptr<_1aaaca348_TypeEnum> _1aab29bb1_FindTypeEnum(_1aab27b59_Package*, jule::Str);
inline jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _1aab455c2_pushComptimeTypeInfo(_1aab45160_commonSemaMeta*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Ptr<_1aab24c33_ImportInfo> _1aab4622c_SelectPackage(_1aab45c87_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)>);
inline jule::Ptr<_1aab68969_Var> _1aab46628_FindVar(_1aab45c87_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1aabeb403_TypeAlias> _1aab46a24_FindTypeAlias(_1aab45c87_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaa972b0_Struct> _1aab46e20_FindStruct(_1aab45c87_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaab3199_Fn> _1aab4731b_FindFn(_1aab45c87_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaac6443_Trait> _1aab4765c_FindTrait(_1aab45c87_Sema*, jule::Str);
inline jule::Ptr<_1aaac8b3d_Enum> _1aab4799d_FindEnum(_1aab45c87_Sema*, jule::Str);
inline jule::Ptr<_1aaaca348_TypeEnum> _1aab47cde_FindTypeEnum(_1aab45c87_Sema*, jule::Str);
inline jule::Bool _1aab481eb_isFlag(_1aab45c87_Sema*, jule::I32);
inline void _1aab484a4_setCurrentFile(_1aab45c87_Sema*, jule::Ptr<_1aabb6be8_SymbolTable>);
inline void _1aab488c2_pushErr(_1aab45c87_Sema*, jule::Ptr<_1c3e3a5e6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aab48c35_pushSuggestion(_1aab45c87_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aab49131_isAccessibleDefine(_1aab45c87_Sema*, jule::Bool, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Bool _1aab495d7_isDuplicatedIdent(_1aab45c87_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1aab4994a_checkDirectives(jule::Ptr<_1aab45c87_Sema>, jule::Slice<jule::Ptr<_1aaa42c61_Directive>>*, jule::Any);
inline jule::Bool _1aab49e01_checkGenericQuantity(_1aab45c87_Sema*, jule::I32, jule::I32, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Bool _1aab4a2ec_isDuplicatedImportSelection(_1aab45c87_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1aab4a6e8_getImportDef(_1aab45c87_Sema*, jule::Str*, jule::Ptr<_1aab24c33_ImportInfo>*);
inline jule::Bool _1a8320541_checkImportSelection(_1aab45c87_Sema*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Ptr<_1aab68969_Var>*);
inline jule::Bool _1a8324138_checkImportSelection(_1aab45c87_Sema*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Ptr<_1aabeb403_TypeAlias>*);
inline jule::Bool _1a8327bdb_checkImportSelection(_1aab45c87_Sema*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Ptr<_1aaa972b0_Struct>*);
inline jule::Bool _1a832b926_checkImportSelection(_1aab45c87_Sema*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Ptr<_1aaac6443_Trait>*);
inline jule::Bool _1a83304c9_checkImportSelection(_1aab45c87_Sema*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Ptr<_1aaac8b3d_Enum>*);
inline jule::Bool _1a833407c_checkImportSelection(_1aab45c87_Sema*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Ptr<_1aaaca348_TypeEnum>*);
inline jule::Bool _1a8337b30_checkImportSelection(_1aab45c87_Sema*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Ptr<_1aaab3199_Fn>*);
inline jule::Bool _1aab4ae35_checkImportSelectedSelections(_1aab45c87_Sema*, jule::Ptr<_1aab24c33_ImportInfo>*);
inline jule::Bool _1a833ba8a_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema*, jule::Slice<jule::Ptr<_1aab68969_Var>>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1a833c9ae_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema*, jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1a83405e9_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema*, jule::Slice<jule::Ptr<_1aaa972b0_Struct>>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1a834318a_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema*, jule::Slice<jule::Ptr<_1aaab3199_Fn>>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1a8345cd6_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema*, jule::Slice<jule::Ptr<_1aaac6443_Trait>>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1a8348877_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema*, jule::Slice<jule::Ptr<_1aaac8b3d_Enum>>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1a834b418_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema*, jule::Slice<jule::Ptr<_1aaaca348_TypeEnum>>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1aab4b672_checkImportAllSelections(_1aab45c87_Sema*, jule::Ptr<_1aab24c33_ImportInfo>*);
inline jule::Bool _1aab4b9b3_checkImportSelections(_1aab45c87_Sema*, jule::Ptr<_1aab24c33_ImportInfo>*);
inline jule::Bool _1aab4bd04_isUseAliasDuplication(_1aab45c87_Sema*, jule::Ptr<_1aab24c33_ImportInfo>*);
inline jule::Bool _1aab4c145_checkImport(_1aab45c87_Sema*, jule::Ptr<_1aab24c33_ImportInfo>*);
inline void _1aab4c343_checkImports(_1aab45c87_Sema*);
inline void _1aab4c541_implFileImpls(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab4c73e_implImpls(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab4c93c_checkEnums(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab4cb3a_checkFileInherits(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab4cd38_checkInherits(jule::Ptr<_1aab45c87_Sema>);
inline _1aac0e34a_typeChecker _1aab4d2de_typeChecker(jule::Ptr<_1aab45c87_Sema>, jule::Trait<_1aac21d30_Lookup>, jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>, jule::Ptr<_1aac0d35a_referencer>);
inline jule::Ptr<_1aabec1e5_TypeKind> _1aab4d850_buildTypeWithRefers(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa765e1_TypeDecl>*, jule::Trait<_1aac21d30_Lookup>, jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>, jule::Ptr<_1aac0d35a_referencer>);
inline jule::Bool _1aab4ddb1_checkTypeWithRefers(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aac0465e_TypeSymbol>*, jule::Trait<_1aac21d30_Lookup>, jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>, jule::Ptr<_1aac0d35a_referencer>);
inline jule::Ptr<_1aaaeb37a_constraintChecker> _1aab4e147_constraintChecker(jule::Ptr<_1aab45c87_Sema>);
inline jule::Bool _1aab4e543_checkType(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aac0465e_TypeSymbol>*, jule::Trait<_1aac21d30_Lookup>);
inline jule::Ptr<_1aabec1e5_TypeKind> _1aab4e9e9_buildTypeWithGenerics(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa765e1_TypeDecl>*, jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>, jule::Ptr<_1aaab9249_ReferenceStack>);
inline jule::Ptr<_1aabec1e5_TypeKind> _1aab5017b_selectType(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa765e1_TypeDecl>*);
inline jule::Ptr<_1aabbdb12_Eval> _1aab50632_evalpd(jule::Ptr<_1aab45c87_Sema>, jule::Trait<_1aac21d30_Lookup>, jule::Ptr<_1aabec1e5_TypeKind>, jule::Ptr<_1aab68969_Var>);
inline jule::Ptr<_1aabbdb12_Eval> _1aab50a2d_evalp(jule::Ptr<_1aab45c87_Sema>, jule::Trait<_1aac21d30_Lookup>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1aabbdb12_Eval> _1aab50d6e_eval(jule::Ptr<_1aab45c87_Sema>, jule::Trait<_1aac21d30_Lookup>);
inline jule::Bool _1aab513d0_checkAssignType(jule::Ptr<_1aab45c87_Sema>, jule::Bool, jule::Ptr<_1aabec1e5_TypeKind>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Bool _1aab51886_checkTypeCompatibility(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aabec1e5_TypeKind>*, jule::Ptr<_1aabec1e5_TypeKind>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Ptr<_1aabec1e5_TypeKind> _1aab51d3c_buildNonGenericTypeKind(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa765e1_TypeDecl>*, jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>>*, jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>>*);
inline jule::Bool _1aab52238_buildFnNonGenericTypeKinds(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab609d_FnIns>*, jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>>*);
inline jule::Ptr<_1aaab609d_FnIns> _1aab52579_getTraitCheckFnKind(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab3199_Fn>*);
inline jule::Bool _1aab52a30_checkConstraintsFn(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab609d_FnIns>*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Ptr<_1aaab609d_FnIns>);
inline jule::Bool _1aab52ed6_checkConstraintsStruct(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa9a390_StructIns>*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Ptr<_1aaa9a390_StructIns>);
inline jule::Bool _1aab533d2_fnEnvironment(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab609d_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1aab45c87_Sema>*,jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>*)>);
inline void _1aab5368a_checkFnParamKind(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab5102_ParamIns>*);
inline jule::Bool _1aab539cb_reloadFnInsTypes(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab609d_FnIns>);
inline jule::Bool _1aab53e82_checkRefValidityForInitExpr(jule::Ptr<_1aab45c87_Sema>, jule::Bool, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1aab542c3_isMutRiskyStruct(_1aab45c87_Sema*, jule::Ptr<_1aaa9a390_StructIns>*);
inline jule::Bool _1aab548de_checkValidityForInitExpr(jule::Ptr<_1aab45c87_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1aabec1e5_TypeKind>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1aab54cda_checkTypeAliasDeclKind(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aabeb403_TypeAlias>*, jule::Trait<_1aac21d30_Lookup>);
inline void _1aab5514d_checkTypeAliasDecl(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aabeb403_TypeAlias>*, jule::Trait<_1aac21d30_Lookup>);
inline void _1aab55406_checkTypeAliasDeclDup(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aabeb403_TypeAlias>*);
inline jule::Bool _1aab5568c_checkTypeAliasDecls(jule::Ptr<_1aab45c87_Sema>);
inline void _1ab7bd07e_checkEnumItemsDup(_1aab45c87_Sema*, jule::Slice<jule::Ptr<_1aaac80c1_EnumItem>>);
inline void _1ab7c75e9_checkEnumItemsDup(_1aab45c87_Sema*, jule::Slice<jule::Ptr<_1aaac9c71_TypeEnumItem>>);
inline void _1aab55bed_checkEnumItemsStr(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaac8b3d_Enum>*);
inline void _1ab7a442d_checkEnumItemInt(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaac8b3d_Enum>*, jule::Ptr<_1aac05066_Prim>*, jule::Ptr<_1aaac80c1_EnumItem>*, jule::U64*);
inline void _1ab7b1c87_checkEnumItemInt(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaac8b3d_Enum>*, jule::Ptr<_1aac05066_Prim>*, jule::Ptr<_1aaac80c1_EnumItem>*, jule::I64*);
inline void _1ab7a0a01_checkEnumItemsInt1(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aac05066_Prim>*, jule::Ptr<_1aaac8b3d_Enum>*);
inline void _1ab7a0c87_checkEnumItemsInt1(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aac05066_Prim>*, jule::Ptr<_1aaac8b3d_Enum>*);
inline void _1aab5689c_checkEnumItemsInt(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaac8b3d_Enum>*);
inline void _1aab56b55_checkEnumDecl(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaac8b3d_Enum>*);
inline void _1aab56e0d_checkTypeEnumDecl(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaaca348_TypeEnum>*);
inline jule::Bool _1aab57194_checkEnumDecls(jule::Ptr<_1aab45c87_Sema>);
inline jule::Bool _1aab5742a_checkTypeEnumDecls(jule::Ptr<_1aab45c87_Sema>);
inline jule::Bool _1aab5776b_checkDeclGenerics(_1aab45c87_Sema*, jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>>*);
inline jule::Bool _1aab57aac_checkFnDeclParamsDup(_1aab45c87_Sema*, jule::Ptr<_1aaab3199_Fn>*);
inline jule::Bool _1aab57ded_checkFnDeclResultDup(_1aab45c87_Sema*, jule::Ptr<_1aaab3199_Fn>*);
inline jule::Bool _1aab5823e_checkFnVariadicParam(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab3199_Fn>*);
inline void _1aab584e7_checkFnDeclPrototype(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab3199_Fn>*);
inline jule::Bool _1aab5899d_catchTraitInheritCycle(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaac6443_Trait>, jule::Ptr<_1aaac6443_Trait>, _1c38d3b83_StrBuilder*);
inline jule::Bool _1aab58cde__checkTraitDeclInherits(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaac6443_Trait>*);
inline void _1aab59097_checkTraitDeclInherits(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaac6443_Trait>*);
inline void _1aab59350_checkTraitDeclMethod(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab3199_Fn>*);
inline void _1aab59608_checkTraitDeclMethods(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaac6443_Trait>*);
inline void _1aab598b1_checkTraitDecl(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaac6443_Trait>*);
inline jule::Bool _1aab59b47_checkTraitDecls(jule::Ptr<_1aab45c87_Sema>);
inline jule::Bool _1aab5a043_checkTraitImplMethods(_1aab45c87_Sema*, jule::Ptr<_1aaac6443_Trait>*, jule::Ptr<_1aaaed3b0_Impl>*);
inline jule::Bool _1aab5a43e_implToStruct(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa972b0_Struct>*, jule::Ptr<_1aaaed3b0_Impl>*);
inline void _1aab5a6e7_implTrait(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaaed3b0_Impl>*);
inline void _1aab5a9a0_implStruct(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaaed3b0_Impl>*);
inline void _1aab5ac58_implImpl(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaaed3b0_Impl>*);
inline void _1aab5b0bb_checkVarDecl(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aab68969_Var>*, jule::Trait<_1aac21d30_Lookup>);
inline void _1aab5b374_checkGlobalVarDecl(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aab68969_Var>*);
inline jule::Bool _1aab5b60a_checkGlobalDecls(jule::Ptr<_1aab45c87_Sema>);
inline jule::Bool _1aab5ba06_checkStructTraitImpl(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa972b0_Struct>*, jule::Ptr<_1aaac6443_Trait>*);
inline jule::Bool _1aab5bd47_checkStructImpls(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa972b0_Struct>*);
inline jule::Bool _1aab5c188_checkStructFields(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa972b0_Struct>*);
inline void _1aab5c441_checkStructDecl(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa972b0_Struct>*);
inline jule::Bool _1aab5c6c7_checkStructDecls(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab5c980_checkAnonFuncDecl(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab3199_Fn>*);
inline void _1aab5cc38_checkFuncDecl(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab3199_Fn>*);
inline jule::Bool _1aab5d079_checkFuncDeclsBy(jule::Ptr<_1aab45c87_Sema>, jule::Slice<jule::Ptr<_1aaab3199_Fn>>*);
inline jule::Bool _1aab5d310_checkFuncDecls(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab5d72d_pushCycleError(_1aab45c87_Sema*, jule::Str*, jule::Str*, _1c38d3b83_StrBuilder*);
inline jule::Bool _1aab5dbd4_checkCrossCycle(_1aab45c87_Sema*, jule::Ptr<_1aaa972b0_Struct>*, jule::Ptr<_1aaa972b0_Struct>*, _1c38d3b83_StrBuilder*);
inline jule::Bool _1aab5e18a_checkStructDeriveIllegalCycles(_1aab45c87_Sema*, jule::Str, jule::Ptr<_1aaa972b0_Struct>*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aab5e4cb_checkStructInsDeriveClone(_1aab45c87_Sema*, jule::Ptr<_1aaa9a390_StructIns>);
inline void _1aab5e6c9_checkPackageDecls(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab5ea3c_checkDataForTypeInference(_1aab45c87_Sema*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline void _1aab5ece5_checkVarValue(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aab68969_Var>*);
inline void _1aab60158_evalVarValue(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aab68969_Var>*, jule::Trait<_1aac21d30_Lookup>);
inline void _1aab604bb_checkVar(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aab68969_Var>*, jule::Trait<_1aac21d30_Lookup>);
inline void _1aab606b9_checkGlobals(jule::Ptr<_1aab45c87_Sema>);
inline jule::Ptr<_1aaab609d_FnIns> _1aab60ab5_readyToCheckFn(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa9a390_StructIns>*, jule::Ptr<_1aaab3199_Fn>*);
inline void _1aab60e28_checkTypeMethod(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa9a390_StructIns>*, jule::Ptr<_1aaab3199_Fn>*);
inline jule::Ptr<_1aaab609d_FnIns> _1aab613ce_checkStructInsOp(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa9a390_StructIns>*, jule::Ptr<_1aaab3199_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1aaab3199_Fn>)>);
inline jule::Bool _1aab617ca_checkStructEnv(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa9a390_StructIns>*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Bool _1aab61bc6_precheckStructIns(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa9a390_StructIns>*, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aab61e7e_checkStructIns(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa9a390_StructIns>*);
inline void _1aab62237_checkTypeStruct(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa972b0_Struct>*);
inline void _1aab62435_checkStructTypes(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab626dd_checkStructInsOperators(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa9a390_StructIns>);
inline void _1aab62996_precheckStructType(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaa972b0_Struct>*);
inline void _1aab62b94_precheckStructTypes(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab62e4c_checkRets(_1aab45c87_Sema*, jule::Ptr<_1aaab609d_FnIns>*);
inline void _1aab632b0_checkFnInsSc(_1aab45c87_Sema*, jule::Ptr<_1aaab609d_FnIns>*, jule::Ptr<_1aab0aae8_scopeChecker>*);
inline void _1aab63623_checkFnInsCaller(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab609d_FnIns>*, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aab638cb_checkFnIns(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab609d_FnIns>*);
inline void _1aab63b84_checkFunc(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab3199_Fn>*);
inline void _1aab63e3c_checkTestFn(_1aab45c87_Sema*, jule::Ptr<_1aaab609d_FnIns>*);
inline void _1aab641e5_precheckFunc(jule::Ptr<_1aab45c87_Sema>, jule::Ptr<_1aaab3199_Fn>*);
inline void _1aab643e3_precheckFuncs(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab645e1_checkFuncs(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab647de_checkPackageTypes(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab649dc_setFileSemaFields(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab64bda_setSemaFields(jule::Ptr<_1aab45c87_Sema>);
inline void _1aab64e93_check(jule::Ptr<_1aab45c87_Sema>, jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>*);
inline _1aab653c2_missingRetChecker static__1aab6578a_new(void);
inline jule::Bool _1aab65a98_checkConditional(_1aab653c2_missingRetChecker*, jule::Ptr<_1aab0442c_Conditional>);
inline jule::Bool _1aab65dd9_checkMatch(_1aab653c2_missingRetChecker*, jule::Ptr<_1aab0792a_Match>);
inline jule::Bool _1aab6622a_checkInfIter(_1aab653c2_missingRetChecker*, jule::Ptr<_1aab04729_InfIter>);
inline jule::Bool _1aab6656b_checkScope(_1aab653c2_missingRetChecker*, jule::Ptr<_1aab037e4_Scope>);
inline jule::Bool _1aab668ac_check(_1aab653c2_missingRetChecker*, jule::Ptr<_1aab037e4_Scope>);
inline jule::Bool _1aab68cee_IsInitialized(_1aab68969_Var*);
inline jule::Bool _1aab69085_IsTypeInferred(_1aab68969_Var*);
inline jule::Bool _1aab6931b_untypedConstant(_1aab68969_Var*);
inline jule::Bool static__1aab69dbb_Dispose(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6a185_Str(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6a509_logical(jule::Ptr<_1aaab3199_Fn>*, jule::Str);
inline jule::Bool static__1aab6a7c3_Eq(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6aa8c_Gt(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6ad56_GtEq(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6b120_Lt(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6b3d9_LtEq(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6b75d_result(jule::Ptr<_1aaab3199_Fn>*, jule::Str);
inline jule::Bool static__1aab6ba27_Shl(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6bce1_Shr(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6c0aa_Add(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6c374_Sub(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6c63d_Div(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6c907_Mul(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6cbc1_Mod(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6ce8a_BitAnd(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6d254_BitOr(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6d51d_BitXor(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6d892_unary(jule::Ptr<_1aaab3199_Fn>*, jule::Str);
inline jule::Bool static__1aab6db5b_Neg(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6de25_Pos(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6e1de_BitNot(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6e563_assign(jule::Ptr<_1aaab3199_Fn>*, jule::Str);
inline jule::Bool static__1aab6e82c_AddAssign(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6eae6_SubAssign(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab6edb0_DivAssign(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab70179_MulAssign(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab70443_ModAssign(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab7070c_ShlAssign(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab709c6_ShrAssign(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab70c90_BitOrAssign(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab71059_BitAndAssign(jule::Ptr<_1aaab3199_Fn>);
inline jule::Bool static__1aab71323_BitXorAssign(jule::Ptr<_1aaab3199_Fn>);
inline void _1aaba4235_pushErr(_1aaba3c3a_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aaba44bb_checkTrait(_1aaba3c3a_typeCompatibilityChecker*);
inline jule::Bool _1aaba4752_checkPtr(_1aaba3c3a_typeCompatibilityChecker*);
inline jule::Bool _1aaba49d8_checkPrim(_1aaba3c3a_typeCompatibilityChecker*);
inline jule::Bool _1aaba4dd4_typeEnum(_1aaba3c3a_typeCompatibilityChecker*, jule::Ptr<_1aaaca348_TypeEnum>*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aaba516a_checkTypeEnum(_1aaba3c3a_typeCompatibilityChecker*);
inline jule::Bool _1aaba5401_check(_1aaba3c3a_typeCompatibilityChecker*);
inline void _1aaba5e7e_pushErr(_1aaba59d9_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aaba6215_checkValidity(_1aaba59d9_assignTypeChecker*);
inline jule::Bool _1aaba649b_checkConst(_1aaba59d9_assignTypeChecker*);
inline jule::Bool _1aaba6732_isPrim(_1aaba59d9_assignTypeChecker*);
inline jule::Bool _1aaba69b8_checkCompatibility(_1aaba59d9_assignTypeChecker*);
inline jule::Bool _1aaba6c4e_check(_1aaba59d9_assignTypeChecker*);
inline jule::Bool _1a85e82b9_annotateConstraintElem(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1a85e7a05_annotateConstraintElem(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1a85e7d8a_annotateConstraintElem(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1a85eede7_annotateConstraintElem(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aaba804c_annotateConstraintMap(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aaba838d_annotateConstraintTup(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aaba86ce_annotateConstraintFn(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aaba8a20_annotateConstraintIdent(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aaba8d61_annotateConstraint(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline void _1aaba91c4_pushGeneric(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*, jule::I32);
inline jule::Bool _1aaba9515_annotatePrim(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aaba9856_annotateArr(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aaba9b97_annotateSlc(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aabaa093_checkMapKey(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aabaa3d4_annotateMap(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aabaa725_annotateFn(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aabaaa66_annotatePtr(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aabaada7_annotateSptr(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aabab1e8_annotateStruct(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aabab539_annotateAny(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aabab87a_annotateKind(_1aaba7656_dynamicTypeAnnotation*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aababb11_annotate(_1aaba7656_dynamicTypeAnnotation*);
inline void _1aabaca57_pushErrToken(_1aabac4b3_fnCallArgChecker*, jule::Ptr<_1c3e3a5e6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aabacdba_pushErr(_1aabac4b3_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1aaab5102_ParamIns>> _1aabad151_getParams(_1aabac4b3_fnCallArgChecker*);
inline jule::Bool _1aabad45e_checkCounts(_1aabac4b3_fnCallArgChecker*, jule::Slice<jule::Ptr<_1aaab5102_ParamIns>>*);
inline jule::Bool _1aabad915_checkArg(_1aabac4b3_fnCallArgChecker*, jule::Ptr<_1aaab5102_ParamIns>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Bool _1aabadd11_push(_1aabac4b3_fnCallArgChecker*, jule::Ptr<_1aaab5102_ParamIns>*, jule::Ptr<_1aaa7a925_Expr>);
inline jule::Bool _1aabae20c_pushVariadic(_1aabac4b3_fnCallArgChecker*, jule::Ptr<_1aaab5102_ParamIns>*, jule::I32);
inline jule::Bool _1aabae54d_checkArgs(_1aabac4b3_fnCallArgChecker*, jule::Slice<jule::Ptr<_1aaab5102_ParamIns>>*);
inline jule::Bool _1aabae7d4_checkDynamicTypeAnnotation(_1aabac4b3_fnCallArgChecker*);
inline jule::Bool _1aabaea6a_check(_1aabac4b3_fnCallArgChecker*);
inline void _1aabb094a_pushErr(_1aabb03ea_structLitChecker*, jule::Ptr<_1c3e3a5e6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aabb0cad_pushSuggestion(_1aabb03ea_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1aabb11cb_pushMatch(_1aabb03ea_structLitChecker*, jule::Ptr<_1aaa997e0_FieldIns>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline void _1aabb153e_checkPair(_1aabb03ea_structLitChecker*, jule::Ptr<_1aaa80221_FieldExprPair>*, jule::Slice<jule::Ptr<_1aaa7a925_Expr>>*);
inline jule::Bool _1aabb1880_readyExprs(_1aabb03ea_structLitChecker*, jule::Slice<jule::Ptr<_1aaa7a925_Expr>>*);
inline void _1aabb1b38_check(_1aabb03ea_structLitChecker*, jule::Slice<jule::Ptr<_1aaa7a925_Expr>>*);
inline jule::Ptr<_1aab68969_Var> _1aabb26b6_buildVar(_1aabb21cc_rangeChecker*, jule::Ptr<_1aaa8945b_VarDecl>*);
inline void _1aabb28b4_setSizeKey(_1aabb21cc_rangeChecker*);
inline void _1aabb2cd2_checkRangeExprValidity(_1aabb21cc_rangeChecker*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline void _1aabb2ed0_checkSlice(_1aabb21cc_rangeChecker*);
inline void _1aabb31cd_checkArray(_1aabb21cc_rangeChecker*);
inline void _1aabb33cb_checkMapKeyA(_1aabb21cc_rangeChecker*);
inline void _1aabb35c9_checkMapKeyB(_1aabb21cc_rangeChecker*);
inline void _1aabb37c7_checkMap(_1aabb21cc_rangeChecker*);
inline void _1aabb39c5_checkStr(_1aabb21cc_rangeChecker*);
inline void _1aabb3bc3_checkComptime(_1aabb21cc_rangeChecker*);
inline jule::Bool _1aabb3e59_checkComptimeRange(_1aabb21cc_rangeChecker*);
inline jule::Bool _1aabb41e0_check(_1aabb21cc_rangeChecker*);
inline void _1aabb4d5b_prepareTypes(_1aabb493d_retTypeChecker*);
inline void _1aabb5114_prepareExprs(_1aabb493d_retTypeChecker*, jule::Ptr<_1aaa7a925_Expr>*);
inline void _1aabb5312_checkExprs(_1aabb493d_retTypeChecker*);
inline jule::Bool _1aabb5653_check(_1aabb493d_retTypeChecker*, jule::Ptr<_1aaa7a925_Expr>*);
inline jule::Ptr<_1aab24c33_ImportInfo> _1aabb71d2_SelectPackage(_1aabb6be8_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)>);
inline jule::Ptr<_1aab68969_Var> _1aabb75cd_FindVar(_1aabb6be8_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1aabeb403_TypeAlias> _1aabb79c9_FindTypeAlias(_1aabb6be8_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaa972b0_Struct> _1aabb7dc5_FindStruct(_1aabb6be8_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaab3199_Fn> _1aabb82c1_FindFn(_1aabb6be8_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaac6443_Trait> _1aabb8612_FindTrait(_1aabb6be8_SymbolTable*, jule::Str);
inline jule::Ptr<_1aaac8b3d_Enum> _1aabb8953_FindEnum(_1aabb6be8_SymbolTable*, jule::Str);
inline jule::Ptr<_1aaaca348_TypeEnum> _1aabb8c94_FindTypeEnum(_1aabb6be8_SymbolTable*, jule::Str);
inline jule::Ptr<_1aab68969_Var> _1aabb93b0_findVar(_1aabb6be8_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1aabeb403_TypeAlias> _1aabb9866_findTypeAlias(_1aabb6be8_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1aabb9c62_defByIdent(_1aabb6be8_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1aabba218_isDuplicatedIdent(_1aabb6be8_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1aabbc2c5_IsNil(_1aabbbe1d_Data*);
inline jule::Bool _1aabbc55b_IsVoid(_1aabbbe1d_Data*);
inline jule::Bool _1aabbc7e2_IsConst(_1aabbbe1d_Data*);
inline jule::Bool _1aabbcb33_GoodOperand(_1aabbbe1d_Data*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabbe162_pushErr(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aabbe4c5_pushSuggestion(_1aabbdb12_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1aabbe6c3_allowBuiltin(_1aabbdb12_Eval*);
inline void _1aabbe8c1_disallowBuiltin(_1aabbdb12_Eval*);
inline jule::Bool _1aabbeb57_isUnsafe(_1aabbdb12_Eval*);
inline jule::Bool _1aabbeddd_isGlobal(_1aabbdb12_Eval*);
inline jule::Bool _1aabc01eb_applyNumericPrefix(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc053c_litStr(_1aabbdb12_Eval*, jule::Ptr<_1aaa7b9c0_LitExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc087d_litRune(_1aabbdb12_Eval*, jule::Ptr<_1aaa7b9c0_LitExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc0bbe_litFloat(_1aabbdb12_Eval*, jule::Ptr<_1aaa7b9c0_LitExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc1010_litInt(_1aabbdb12_Eval*, jule::Ptr<_1aaa7b9c0_LitExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc1351_litNum(_1aabbdb12_Eval*, jule::Ptr<_1aaa7b9c0_LitExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc1692_evalLit(_1aabbdb12_Eval*, jule::Ptr<_1aaa7b9c0_LitExpr>);
inline jule::Any _1aabc19d3_findBuiltins(_1aabbdb12_Eval*, jule::Str*);
inline jule::Any _1aabc1dce_getDef(_1aabbdb12_Eval*, jule::Str*, jule::Bool);
inline void _1a89be3e8_pushReference(_1aabbdb12_Eval*, jule::Ptr<_1aaab609d_FnIns>*);
inline void _1c61a4484_pushReference(_1aabbdb12_Eval*, jule::Ptr<_1aab68969_Var>*);
inline void _1a8a35272_pushReference(_1aabbdb12_Eval*, jule::Ptr<_1aaa9a390_StructIns>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc24c8__evalEnum(_1aabbdb12_Eval*, jule::Ptr<_1aaac8b3d_Enum>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc28c4_evalEnum(_1aabbdb12_Eval*, jule::Ptr<_1aaac8b3d_Enum>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc2c15__evalTypeEnum(_1aabbdb12_Eval*, jule::Ptr<_1aaaca348_TypeEnum>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc3111_evalTypeEnum(_1aabbdb12_Eval*, jule::Ptr<_1aaaca348_TypeEnum>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc3452__evalStruct(_1aabbdb12_Eval*, jule::Ptr<_1aaa9a390_StructIns>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc384d_evalStruct(_1aabbdb12_Eval*, jule::Ptr<_1aaa9a390_StructIns>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc3b8e_evalFnIns(_1aabbdb12_Eval*, jule::Ptr<_1aaab609d_FnIns>);
inline void _1aabc4002_checkDeprecated(_1aabbdb12_Eval*, jule::Slice<jule::Ptr<_1aaa42c61_Directive>>*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc43ed_evalFn(_1aabbdb12_Eval*, jule::Ptr<_1aaab3199_Fn>, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aabc481b_pushIllegalCycleError(_1aabbdb12_Eval*, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*, _1c38d3b83_StrBuilder*);
inline jule::Bool _1aabc4c17_checkCrossCycle(_1aabbdb12_Eval*, jule::Ptr<_1aab68969_Var>*, _1c38d3b83_StrBuilder*);
inline jule::Bool _1aabc5113_checkIllegalCycles(_1aabbdb12_Eval*, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc550e_evalVar(_1aabbdb12_Eval*, jule::Ptr<_1aab68969_Var>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc590a_evalTypeAlias(_1aabbdb12_Eval*, jule::Ptr<_1aabeb403_TypeAlias>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc5d06_evalDef(_1aabbdb12_Eval*, jule::Any*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc6147_evalIdent(_1aabbdb12_Eval*, jule::Ptr<_1aaa7c350_IdentExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc6488_evalUnary(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7c9d2_UnaryExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc67c9_evalVariadic(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7cdab_VariadicExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc6b1a_evalUnsafe(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7bd99_UnsafeExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc6e5b_evalArr(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa82025_SliceExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc7412_evalExpSlc(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa82025_SliceExpr>, jule::Ptr<_1aabec1e5_TypeKind>, jule::Any);
inline jule::Ptr<_1aabbbe1d_Data> _1aabc7753_evalSliceExpr(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa82025_SliceExpr>);
inline void _1aabc7ab6_checkIntegerIndexingByData(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aabc7ed4_indexingPtr(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa829b5_IndexingExpr>*);
inline void _1aabc8402_indexingArr(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa829b5_IndexingExpr>*);
inline void _1aabc8820_indexingSlc(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa829b5_IndexingExpr>*);
inline void _1aabc8c3d_indexingMap(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa829b5_IndexingExpr>*);
inline void _1aabc915b_indexingStr(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa829b5_IndexingExpr>*);
inline void _1aabc9579_toIndexing(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa829b5_IndexingExpr>*);
inline jule::Bool _1aabc9a30_pushGenericsFromExprSubIdent(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7db15_SubIdentExpr>*, jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>>*, jule::Ptr<_1aaa7a925_Expr>*);
inline jule::Bool _1aabc9e2b_pushGenericsFromData(jule::Ptr<_1aabbdb12_Eval>, jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>>*, jule::Ptr<_1aaa7a925_Expr>*);
inline void _1aabca28e_evalIdentDeclFromIndexing(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa829b5_IndexingExpr>*);
inline jule::Bool _1aabca745_checkGenericFn(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaab609d_FnIns>*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Any*);
inline void _1aabcaaa8_evalFnGenericFromIndexing(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa829b5_IndexingExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabcade9_evalIndexing(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa829b5_IndexingExpr>);
inline __jule_tuple_x_1aabbbe1d_Data__jule_tuple_x_1aabbbe1d_Data _1aabcb23a_evalSlicingExprs(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa83125_SlicingExpr>*);
inline void _1aabcb4e3_slicingArr(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabcb911_slicingStr(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabcbdd9_checkSlicing(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa83125_SlicingExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabcc22a_evalSlicing(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa83125_SlicingExpr>);
inline void _1aabcc648_castPtr(_1aabbdb12_Eval*, jule::Ptr<_1aabec1e5_TypeKind>, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aabcca66_castStruct(_1aabbdb12_Eval*, jule::Ptr<_1aabec1e5_TypeKind>, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aabcce84_castRef(_1aabbdb12_Eval*, jule::Ptr<_1aabec1e5_TypeKind>, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aabcd3a2_castSlc(_1aabbdb12_Eval*, jule::Ptr<_1aabec1e5_TypeKind>, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aabcd715_castStr(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aabcdb33_castInt(_1aabbdb12_Eval*, jule::Ptr<_1aabec1e5_TypeKind>, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aabce051_castNum(_1aabbdb12_Eval*, jule::Ptr<_1aabec1e5_TypeKind>, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aabce46e_castPrim(_1aabbdb12_Eval*, jule::Ptr<_1aabec1e5_TypeKind>, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aabce7d2_castConstant(_1aabbdb12_Eval*, jule::Ptr<_1aabec1e5_TypeKind>*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabcec00_castTypeEnum(_1aabbdb12_Eval*, jule::Ptr<_1aabec1e5_TypeKind>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline void _1aabd011d_castTypeEnumT(_1aabbdb12_Eval*, jule::Ptr<_1aabec1e5_TypeKind>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd05c4_evalCastByTypeNData(_1aabbdb12_Eval*, jule::Ptr<_1aabec1e5_TypeKind>, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd0a7a_evalCastT(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aabec1e5_TypeKind>*, jule::Ptr<_1aaa7a925_Expr>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd0dbb_evalCast(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7d285_CastExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd120c_evalNsSelection(_1aabbdb12_Eval*, jule::Ptr<_1aaa7d65e_NsSelectionExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd16b3_evalStructLitExplicit(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa9a390_StructIns>, jule::Slice<jule::Ptr<_1aaa7a925_Expr>>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd1a04_evalStructLit(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa80a4b_StructLit>);
inline _1aac0e34a_typeChecker _1aabd1c8a_typeChecker(_1aabbdb12_Eval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd20cb_evalType(_1aabbdb12_Eval*, jule::Ptr<_1aaa765e1_TypeDecl>);
inline void _1aabd243e_callTypeFn(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabd27a2_callBuiltinFn(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabd2b15_checkFnOfConcurrentCall(_1aabbdb12_Eval*, jule::Ptr<_1aaab609d_FnIns>*, jule::Ptr<_1c3e3a5e6_Token>);
inline void _1aabd3033_processExceptionalHandler(_1aabbdb12_Eval*, jule::Ptr<_1aaab609d_FnIns>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabd3396_callFn(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd36d7_evalFnCall(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7e72b_FnCallExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd3ad3_evalEnumStatic(_1aabbdb12_Eval*, jule::Ptr<_1aaac8b3d_Enum>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd3ece_evalTypeEnumStatic(_1aabbdb12_Eval*, jule::Ptr<_1aaaca348_TypeEnum>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd43ca_evalStructStatic(_1aabbdb12_Eval*, jule::Ptr<_1aaa9a390_StructIns>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd4881_evalTraitSubIdent(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1aaac6443_Trait>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd4de2_evalStructSubIdentField(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa9a390_StructIns>*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Ptr<_1aaa997e0_FieldIns>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd5453_evalStructSubIdent(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1aaa9a390_StructIns>, jule::Ptr<_1aaa7db15_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd584e_evalSliceSubIdent(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd5c4a_evalArraySubIdent(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd608b_evalIntTypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd63cc_evalUintTypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd671d_evalI8TypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd6a5e_evalI16TypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd6da0_evalI32TypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd71e1_evalI64TypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd7532_evalU8TypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd7873_evalU16TypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd7bb4_evalU32TypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd8005_evalU64TypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd8346_evalF32TypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd8687_evalF64TypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd8a83_evalPrimStatic(_1aabbdb12_Eval*, jule::Str, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd8e7e_evalTypeStatic(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1aaa7db15_SubIdentExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1a8ad0152_comptimeObjSubIdent(_1aabbdb12_Eval*, jule::Ptr<_1aaadc1b2_comptimeTypeInfo>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa7db15_SubIdentExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1a8ad3771_comptimeObjSubIdent(_1aabbdb12_Eval*, jule::Ptr<_1aaacd24c_comptimeStructField>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa7db15_SubIdentExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1a8ad6d4b_comptimeObjSubIdent(_1aabbdb12_Eval*, jule::Ptr<_1aaad47b4_comptimeEnumField>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa7db15_SubIdentExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1a8ada6e0_comptimeObjSubIdent(_1aabbdb12_Eval*, jule::Ptr<_1aaad7256_comptimeParam>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa7db15_SubIdentExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1a8addcba_comptimeObjSubIdent(_1aabbdb12_Eval*, jule::Ptr<_1aaad1508_comptimeStatic>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa7db15_SubIdentExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1a8ae2395_comptimeObjSubIdent(_1aabbdb12_Eval*, jule::Ptr<_1aaae32b7_comptimeValue>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa7db15_SubIdentExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1a8ae5970_comptimeObjSubIdent(_1aabbdb12_Eval*, jule::Ptr<_1aaae7211_comptimeFile>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaa7db15_SubIdentExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd9831_evalObjSubIdent(_1aabbdb12_Eval*, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1aaa7db15_SubIdentExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd9b72_evalSubIdent(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7db15_SubIdentExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabd9eb3_evalTuple(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7b5e6_TupleExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabda3ae_evalMap(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aac0ac09_Map>, jule::Ptr<_1aaa81002_BraceLit>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabda700_evalBraceLit(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa81002_BraceLit>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabdaa41_evalAnonFunc(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa8837d_FnDecl>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabdad82_evalBinop(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7e0bb_BinopExpr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabdb1c3_evalExprKind(jule::Ptr<_1aabbdb12_Eval>, jule::Any);
inline jule::Ptr<_1aabbbe1d_Data> _1aabdb514_eval1(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7a925_Expr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabdb855_eval(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7a925_Expr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabdbb96_evalExpr1(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7a925_Expr>);
inline jule::Ptr<_1aabbbe1d_Data> _1aabdbed7_evalExpr(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1aaa7a925_Expr>);
inline _1aabdc49e_unaryEval static__1aabdc8de_new(jule::Ptr<_1aabbdb12_Eval>);
inline void _1aabdcadc_minus(_1aabdc49e_unaryEval*);
inline void _1aabdccda_plus(_1aabdc49e_unaryEval*);
inline void _1aabdced8_caret(_1aabdc49e_unaryEval*);
inline void _1aabdd1d6_excl(_1aabdc49e_unaryEval*);
inline void _1aabdd3d4_star(_1aabdc49e_unaryEval*);
inline void _1aabdd5d2_amper(_1aabdc49e_unaryEval*);
inline void _1aabdd7d0_typeDecl(_1aabdc49e_unaryEval*);
inline void _1aabdd9cd_evalData(_1aabdc49e_unaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabddd1e_eval(_1aabdc49e_unaryEval*, jule::Ptr<_1aaa7c9d2_UnaryExpr>);
inline _1aabde43a_binaryEval static__1aabdea23_newPlain(jule::Ptr<_1aabbdb12_Eval>);
inline _1aabde43a_binaryEval static__1aabded64_new(jule::Ptr<_1aabbdb12_Eval>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Bool _1aabe00ea_checkTypeCompatibility(_1aabde43a_binaryEval*);
inline jule::Bool _1aabe0381_checkStructCommonOperatorCompatibility(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe0617_evalComptimeTypeInfo(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe089d_evalNil(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe0b34_evalEnum(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe0dba_evalTypeEnum(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe1151_evalSptr(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe13d7_evalPtr(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe166d_evalArr(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe1904_evalSlc(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe1b8a_evalStruct(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe1e21_evalTrait(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe21a7_evalAny(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe243d_evalBool(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe26c4_evalStr(_1aabde43a_binaryEval*);
inline void _1aabe28c2_setTypeToGreater(_1aabde43a_binaryEval*);
inline void _1aabe2b7a_checkModData(_1aabde43a_binaryEval*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabe2d78_mod(_1aabde43a_binaryEval*);
inline jule::Bool _1aabe3274_numbersAreCompatibile(_1aabde43a_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe350a_evalFloat(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe3791_evalInt(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe3a27_evalPrim(_1aabde43a_binaryEval*);
inline void _1aabe3c25_checkSpecialCases(_1aabde43a_binaryEval*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe3eab_evalOp(_1aabde43a_binaryEval*);
inline void _1aabe4264_evalConst(_1aabde43a_binaryEval*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabe451c_checkData(_1aabde43a_binaryEval*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabe471a_checkDatas(_1aabde43a_binaryEval*);
inline void _1aabe49c3_setModel(_1aabde43a_binaryEval*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabe4c7b_postEval(_1aabde43a_binaryEval*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe5177_solveExplicit(_1aabde43a_binaryEval*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe54b8_eval(_1aabde43a_binaryEval*, jule::Ptr<_1aaa7e0bb_BinopExpr>*);
inline jule::Str _1aabec5ad_Str(_1aabec1e5_TypeKind*);
inline jule::Bool _1aabec8ee_Equal(jule::Ptr<_1aabec1e5_TypeKind>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Bool _1aabed04d_Binded(_1aabec1e5_TypeKind*);
inline jule::Bool _1aabed2d4_IsNil(_1aabec1e5_TypeKind*);
inline jule::Bool _1aabed56a_Void(_1aabec1e5_TypeKind*);
inline jule::Bool _1aabed801_Comparable(_1aabec1e5_TypeKind*);
inline jule::Bool _1aabeda87_Mutable(_1aabec1e5_TypeKind*);
inline jule::Bool _1aabedd1d_Ordered(_1aabec1e5_TypeKind*);
inline jule::Bool _1aabee0a4_NilCompatible(_1aabec1e5_TypeKind*);
inline jule::Bool _1aabee33a_PerformsRC(_1aabec1e5_TypeKind*);
inline jule::Bool _1aabee5c1_SupportsCloning(_1aabec1e5_TypeKind*);
inline jule::Bool _1aabee857_Variadicable(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aac05066_Prim> _1aabeeadd_Prim(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aac08a92_Sptr> _1aabeed74_Sptr(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aac0c359_Ptr> _1aac0010a_Ptr(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaac8b3d_Enum> _1aac00391_Enum(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaaca348_TypeEnum> _1aac00627_TypeEnum(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aac0b886_Arr> _1aac008ad_Arr(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aac09565_Slc> _1aac00b44_Slc(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaab609d_FnIns> _1aac00dca_Fn(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaa9a390_StructIns> _1aac01161_Struct(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaac6443_Trait> _1aac013e7_Trait(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aac0ac09_Map> _1aac0167d_Map(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aac0a159_Tuple> _1aac01914_Tup(_1aabec1e5_TypeKind*);
inline jule::Bool _1aac01b9a_comptime(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaacedec_comptimeStructFields> _1aac01e31_comptimeStructFields(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaacd24c_comptimeStructField> _1aac021b7_comptimeStructField(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaad5ac3_comptimeEnumFields> _1aac0244d_comptimeEnumFields(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaad47b4_comptimeEnumField> _1aac026d4_comptimeEnumField(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaad94bc_comptimeParams> _1aac0296a_comptimeParams(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaad7256_comptimeParam> _1aac02c01_comptimeParam(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaacc6e1_comptimeRange> _1aac02e87_comptimeRange(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaadaab7_comptimeTypeInfos> _1aac0321d_comptimeTypeInfos(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _1aac034a4_comptimeTypeInfo(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaad31b9_comptimeStatics> _1aac0373a_comptimeStatics(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaad1508_comptimeStatic> _1aac039c1_comptimeStatic(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaae32b7_comptimeValue> _1aac03c57_comptimeValue(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaae7211_comptimeFile> _1aac03edd_comptimeFile(_1aabec1e5_TypeKind*);
inline jule::Ptr<_1aaae5b16_comptimeFiles> _1aac04274_comptimeFiles(_1aabec1e5_TypeKind*);
inline jule::Bool _1aac049d3_checked(_1aac0465e_TypeSymbol*);
inline jule::Str _1aac053a7_Str(_1aac05066_Prim*);
inline jule::Bool _1aac056e8_Equal(jule::Ptr<_1aac05066_Prim>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Bool _1aac05b8d_IsConstraint(_1aac05066_Prim*);
inline jule::Bool _1aac05e24_IsI8(_1aac05066_Prim*);
inline jule::Bool _1aac061aa_IsI16(_1aac05066_Prim*);
inline jule::Bool _1aac06441_IsI32(_1aac05066_Prim*);
inline jule::Bool _1aac066c7_IsI64(_1aac05066_Prim*);
inline jule::Bool _1aac0695d_IsU8(_1aac05066_Prim*);
inline jule::Bool _1aac06be4_IsU16(_1aac05066_Prim*);
inline jule::Bool _1aac06e7a_IsU32(_1aac05066_Prim*);
inline jule::Bool _1aac07211_IsU64(_1aac05066_Prim*);
inline jule::Bool _1aac07497_IsF32(_1aac05066_Prim*);
inline jule::Bool _1aac0772d_IsF64(_1aac05066_Prim*);
inline jule::Bool _1aac079b4_IsInt(_1aac05066_Prim*);
inline jule::Bool _1aac07c4a_IsUint(_1aac05066_Prim*);
inline jule::Bool _1aac07ed1_IsUintptr(_1aac05066_Prim*);
inline jule::Bool _1aac08267_IsBool(_1aac05066_Prim*);
inline jule::Bool _1aac084ed_IsStr(_1aac05066_Prim*);
inline jule::Bool _1aac08784_IsAny(_1aac05066_Prim*);
inline jule::Str _1aac08e16_Str(_1aac08a92_Sptr*);
inline jule::Bool _1aac09257_Equal(jule::Ptr<_1aac08a92_Sptr>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Str _1aac099e9_Str(_1aac09565_Slc*);
inline jule::Bool _1aac09d3a_Equal(jule::Ptr<_1aac09565_Slc>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Str _1aac0a4cd_Str(_1aac0a159_Tuple*);
inline jule::Bool _1aac0a81e_Equal(jule::Ptr<_1aac0a159_Tuple>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Str _1aac0b07d_Str(_1aac0ac09_Map*);
inline jule::Bool _1aac0b3be_Equal(jule::Ptr<_1aac0ac09_Map>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Str _1aac0bc0a_Str(_1aac0b886_Arr*);
inline jule::Bool _1aac0c04b_Equal(jule::Ptr<_1aac0b886_Arr>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Str _1aac0c6cd_Str(_1aac0c359_Ptr*);
inline jule::Bool _1aac0ca1e_Equal(jule::Ptr<_1aac0c359_Ptr>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Bool _1aac0cd93_IsUnsafe(_1aac0c359_Ptr*);
inline void _1aac0ea87_pushErr(_1aac0e34a_typeChecker*, jule::Ptr<_1c3e3a5e6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1aac0ec85_allowBuiltin(_1aac0e34a_typeChecker*);
inline void _1aac0ee83_disallowBuiltin(_1aac0e34a_typeChecker*);
inline void _1a8c7d201_pushReference(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa9a390_StructIns>*);
inline void _1a8c80c5e_pushReference(_1aac0e34a_typeChecker*, jule::Ptr<_1aaac6443_Trait>*);
inline void _1aac104e4_pushReferenceByKind(_1aac0e34a_typeChecker*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline void _1aac10912_pushCycleError(_1aac0e34a_typeChecker*, jule::Any, jule::Any, _1c38d3b83_StrBuilder*);
inline jule::Bool _1aac10d0d_checkCrossCycle(_1aac0e34a_typeChecker*, jule::Any, _1c38d3b83_StrBuilder*);
inline jule::Bool _1aac11209_checkIllegalCycles(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa76beb_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1aabebc3e_Kind> _1aac11605_fromTypeAlias(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa76beb_IdentTypeDecl>*, jule::Ptr<_1aabeb403_TypeAlias>*);
inline jule::Ptr<_1aaac8b3d_Enum> _1aac11a01_fromEnum(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa76beb_IdentTypeDecl>*, jule::Ptr<_1aaac8b3d_Enum>*);
inline jule::Ptr<_1aaaca348_TypeEnum> _1aac11dec_fromTypeEnum(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa76beb_IdentTypeDecl>*, jule::Ptr<_1aaaca348_TypeEnum>*);
inline jule::Ptr<_1aaac6443_Trait> _1aac122e8_fromTrait(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa76beb_IdentTypeDecl>*, jule::Ptr<_1aaac6443_Trait>*);
inline jule::Bool _1aac126e4_checkStructIns(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa9a390_StructIns>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline void _1aac1299c_appendUsedStructReference(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa972b0_Struct>*);
inline jule::Ptr<_1aaa9a390_StructIns> _1aac12d98_buildStructInstance(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa76beb_IdentTypeDecl>*, jule::Ptr<_1aaa972b0_Struct>*);
inline jule::Ptr<_1aaa9a390_StructIns> _1aac13294_fromStruct(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa76beb_IdentTypeDecl>*, jule::Ptr<_1aaa972b0_Struct>*);
inline jule::Trait<_1aabebc3e_Kind> _1aac135d5_getDef(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa76beb_IdentTypeDecl>*);
inline jule::Trait<_1aabebc3e_Kind> _1aac13926_buildIdent(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa76beb_IdentTypeDecl>);
inline jule::Trait<_1aabebc3e_Kind> _1aac13c67_buildSubIdent(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa76ee8_SubIdentTypeDecl>);
inline jule::Ptr<_1aac08a92_Sptr> _1aac140a8_buildSptrFromType(_1aac0e34a_typeChecker*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Ptr<_1aac08a92_Sptr> _1aac143e9_buildSptr(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa7768b_SptrTypeDecl>);
inline jule::Ptr<_1aac0c359_Ptr> _1aac1473a_buildPtrFromType(_1aac0e34a_typeChecker*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Ptr<_1aac0c359_Ptr> _1aac14a7b_buildPtr(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa7811a_PtrTypeDecl>);
inline jule::Ptr<_1aac09565_Slc> _1aac14dbc_buildSlc(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa77a21_SlcTypeDecl>);
inline jule::Ptr<_1aac0b886_Arr> _1aac1520d_buildArr(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa788ac_ArrTypeDecl>);
inline jule::Ptr<_1aac0ac09_Map> _1aac1554e_buildMap(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa7910a_MapTypeDecl>);
inline jule::Ptr<_1aac0a159_Tuple> _1aac15890_buildTuple(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa77d1d_TupleTypeDecl>);
inline jule::Bool _1aac15bd1_checkFuncTypes(_1aac0e34a_typeChecker*, jule::Ptr<_1aaab609d_FnIns>*);
inline jule::Ptr<_1aaab609d_FnIns> _1aac16022_buildFunc(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa8837d_FnDecl>);
inline jule::Trait<_1aabebc3e_Kind> _1aac16363_buildByNamespace(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa7738e_NamespaceTypeDecl>);
inline jule::Ptr<_1aabec1e5_TypeKind> _1aac166a4_build(_1aac0e34a_typeChecker*, jule::Any*);
inline jule::Ptr<_1aabec1e5_TypeKind> _1aac169e5_checkDecl(_1aac0e34a_typeChecker*, jule::Ptr<_1aaa765e1_TypeDecl>*);
inline jule::Bool static__1aac17441_prim(jule::Str*, jule::Ptr<_1aac05066_Prim>);
inline jule::Bool static__1aac177b5_exist(jule::Str*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline void _1ab7294a2_stop(_1ab728d42_scopeParser*);
inline jule::Bool _1ab729738_stopped(_1ab728d42_scopeParser*);
inline jule::Bool _1ab7299be_finished(_1ab728d42_scopeParser*);
inline jule::Bool _1ab729c55_isLastSt(_1ab728d42_scopeParser*);
inline void _1ab72a0b8_pushErr(_1ab728d42_scopeParser*, jule::Ptr<_1c3e3a5e6_Token>, jule::Str);
inline void _1ab72a42b_pushSuggestion(_1ab728d42_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1ab72a6d4_insertAsNext(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1ab7284a1_stmt> _1ab72a96a_next(_1ab728d42_scopeParser*);
inline jule::Ptr<_1aaa866de_ScopeTree> _1ab72ad66_buildScope(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aaa8945b_VarDecl> _1ab72b1a7_buildVarSt(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa89835_RetSt> _1ab72b4e8_buildRetSt(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa89ec8_Iter> _1ab72b839_buildWhileNextIter(_1ab728d42_scopeParser*, jule::Ptr<_1ab7284a1_stmt>*);
inline jule::Ptr<_1aaa8a803_WhileKind> _1ab72bb7a_buildWhileIterKind(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _1ab72bebb_getRangeKindKeysTokens(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa8945b_VarDecl> _1ab72c30c_buildRangeKindKey(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Slice<jule::Ptr<_1aaa8945b_VarDecl>> _1ab72c64d_buildRangeKindKeys(_1ab728d42_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>>*);
inline void _1ab72c9b1_setupRangeKindKeysPlain(_1ab728d42_scopeParser*, jule::Ptr<_1aaa8b20a_RangeKind>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab72cd24_setupRangeKindKeysExplicit(_1ab728d42_scopeParser*, jule::Ptr<_1aaa8b20a_RangeKind>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab72d187_setupRangeKindKeys(_1ab728d42_scopeParser*, jule::Ptr<_1aaa8b20a_RangeKind>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa8b20a_RangeKind> _1ab72d63d_buildRangeIterKind(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Any _1ab72da39_buildCommonIterKind(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Ptr<_1aaa89ec8_Iter> _1ab72dd7a_buildCommonIter(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa89ec8_Iter> _1ab72e1bb_buildIterSt(_1ab728d42_scopeParser*, jule::Ptr<_1ab7284a1_stmt>*);
inline jule::Ptr<_1aaa8b5d4_BreakSt> _1ab72e50c_buildBreakSt(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa8b9ad_ContSt> _1ab72e84d_buildContSt(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa8be64_If> _1ab72eb8e_buildIf(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa8c33d_Else> _1ab72eed0_buildElse(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa8c7e4_Conditional> _1ab730321_buildIfElseChain(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa7a925_Expr> _1ab730662_buildCoCallSt(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa8417b_GotoSt> _1ab7309a3_buildGotoSt(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa84478_FallSt> _1ab730ce4_buildFallSt(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa8d031_TypeAliasDecl> _1ab731135_buildTypeAliasSt(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab73160d_pushCaseExpr(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>, jule::Ptr<_1c3e3a5e6_Token>, jule::Bool, jule::Slice<jule::Ptr<_1aaa7a925_Expr>>*);
inline jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _1ab731ab4_buildCaseExprs(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Bool);
inline jule::Ptr<_1aaa866de_ScopeTree> _1ab731e05_buildCaseScope(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline __jule_tuple_x_1aaa8d4d7_Case__jule_tuple_bool _1ab732301_buildCase(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Bool);
inline __jule_tuple_sx_1aaa8d4d7_Case__jule_tuple_x_1aaa8c33d_Else _1ab7326ec_buildCases(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>, jule::Bool);
inline jule::Ptr<_1aaa8dc24_MatchCase> _1ab732a3d_buildMatchCase(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa866de_ScopeTree> _1ab732d7e_buildScopeSt(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa83ca2_LabelSt> _1ab7331c0_buildLabelSt(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline __jule_tuple__1aaa85d2b_StmtData__jule_tuple_bool _1ab733511_buildIdSt(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1ab743873_assignInfo> _1ab733852_buildAssignInfo(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa84ad8_AssignLeft> _1ab733b93_buildAssignL(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Slice<jule::Ptr<_1aaa84ad8_AssignLeft>> _1ab733ed4_buildAssignLs(_1ab728d42_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>>*);
inline __jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool _1ab734325_buildPlainAssign(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Bool _1ab734721_buildDeclAssign1(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Ptr<_1aaa8516b_AssignSt>*);
inline __jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool _1ab734a62_buildDeclAssign(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline __jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool _1ab734da3_buildAssignSt(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa7b2e9_UseExpr> _1ab7351e4_buildUseExpr(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Any _1ab735535_buildSt(_1ab728d42_scopeParser*, jule::Ptr<_1ab7284a1_stmt>*);
inline void _1ab735898_build(_1ab728d42_scopeParser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Ptr<_1aaa866de_ScopeTree>*);
inline void _1ab736bc9_pushErr(_1ab736415_exprBuilder*, jule::Ptr<_1c3e3a5e6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab73703c_pushSuggestion(_1ab736415_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1aaa7b5e6_TupleExpr> _1ab73737d_buildTuple(_1ab736415_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>>*);
inline jule::Ptr<_1aaa7b9c0_LitExpr> _1ab7376be_buildLit(_1ab736415_exprBuilder*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Any _1ab737d51_buildSingle(_1ab736415_exprBuilder*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aaa7c350_IdentExpr> _1ab738192_buildBindIdent(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa7c9d2_UnaryExpr> _1ab7384d3_buildUnary(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa7db15_SubIdentExpr> _1ab738824_buildObjSubIdent(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa7d65e_NsSelectionExpr> _1ab738b65_buildNsSubIdent(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab738ea6_buildType(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Any _1ab7392e7_buildSubIdent(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa7cdab_VariadicExpr> _1ab739638_buildVariadic(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa7ac22_RangeExpr> _1ab739979_buildBetweenParentheses(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa7d285_CastExpr> _1ab739cba_tryBuildCast(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab73a1d8_pushArg(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1aaa7a925_Expr>>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _1ab73a529_buildArgs(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa7e72b_FnCallExpr> _1ab73ad21_buildFnCall(_1ab736415_exprBuilder*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Any _1ab73b162_buildParenthesesRange(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa7bd99_UnsafeExpr> _1ab73b4a3_buildUnsafeExpr(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa8837d_FnDecl> _1ab73b7e4_buildAnonFn(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Any _1ab73bb35_buildUnsafe(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab73c053_pushRangeLitPart(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>, jule::Ptr<_1c3e3a5e6_Token>, jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _1ab73c394_getBraceRangeLitExprParts(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa80221_FieldExprPair> _1ab73c6d5_buildFieldExprPair(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa7a925_Expr> _1ab73ca26_buildStructLitExpr(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _1ab73cd67_buildStructLitExprs(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa80a4b_StructLit> _1ab73d1a8_buildTypedStructLiteral(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa7a925_Expr> _1ab73d4e9_buildBraceLitPart(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa81002_BraceLit> _1ab73d83a_buildBraceLit(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Any _1ab73db7b_buildBraceRange(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _1ab73debc_getEnumerableParts(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa82025_SliceExpr> _1ab73e30d_buildSlice(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa829b5_IndexingExpr> _1ab73e7b4_buildIndexing(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Ptr<_1aaa83125_SlicingExpr> _1ab73edd0_buildSlicing(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Any _1ab740221_buildBracketRange(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Any _1ab740562_buildExclRight(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Any _1ab7408a3_buildData(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Any _1ab740c9e_buildBinop(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::I32);
inline jule::Any _1ab7410e0_build(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Any _1ab741431_buildKind(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa7a925_Expr> _1ab741772_buildFromTokens(_1ab736415_exprBuilder*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline void _1ab747316_stop(_1ab747019_parser*);
inline jule::Bool _1ab74759c_stopped(_1ab747019_parser*);
inline void _1ab7479ba_pushErr(_1ab747019_parser*, jule::Ptr<_1c3e3a5e6_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1ab747d2d_pushSuggestion(_1ab747019_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1aaa7a925_Expr> _1ab74816e_buildExpr(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa42c61_Directive> _1ab7484b0_buildDirective(_1ab747019_parser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline void _1ab748768_pushDirective(_1ab747019_parser*, jule::Ptr<_1aaa42c61_Directive>);
inline jule::Ptr<_1aaa866de_ScopeTree> _1ab748b64_buildScope(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Ptr<_1c3e3a5e6_Token>);
inline __jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool _1ab74911a__buildType(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::I32*, jule::Bool);
inline __jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool _1ab7495c1_buildType(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_1aaa8d031_TypeAliasDecl> _1ab749912_buildTypeAliasDecl(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab749c75_buildVarTypeAndExpr(jule::Ptr<_1ab747019_parser>, jule::Ptr<_1aaa8945b_VarDecl>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab74a0d8_buildVarCommon(jule::Ptr<_1ab747019_parser>, jule::Ptr<_1aaa8945b_VarDecl>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline void _1ab74a506_buildVarBegin(_1ab747019_parser*, jule::Ptr<_1aaa8945b_VarDecl>*, jule::I32*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa8945b_VarDecl> _1ab74a847_buildVar(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa838c8_GenericDecl> _1ab74ab88_buildGeneric(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>> _1ab74b084_buildGenerics(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Ptr<_1c3e3a5e6_Token>*);
inline jule::Ptr<_1aaa86e2b_ParamDecl> _1ab74b3c5_buildSelfParam(_1ab747019_parser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline void _1ab74b7e3_paramTypeBegin(_1ab747019_parser*, jule::Ptr<_1aaa86e2b_ParamDecl>*, jule::I32*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab74bb56_buildParamType(jule::Ptr<_1ab747019_parser>, jule::Ptr<_1aaa86e2b_ParamDecl>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab74beb9_buildParamBody(jule::Ptr<_1ab747019_parser>, jule::Ptr<_1aaa86e2b_ParamDecl>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa86e2b_ParamDecl> _1ab74c30a_buildParam(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline void _1ab74c5b3_checkParams(_1ab747019_parser*, jule::Slice<jule::Ptr<_1aaa86e2b_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1aaa86e2b_ParamDecl>> _1ab74c9ae_buildParams(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Bool);
inline __jule_tuple_x_1aaa794d4_RetTypeDecl__jule_tuple_bool _1ab74cdaa_buildMultiRetType(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::I32*);
inline __jule_tuple_x_1aaa794d4_RetTypeDecl__jule_tuple_bool _1ab74d2a6_buildRetType(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::I32*);
inline jule::Ptr<_1aaa8837d_FnDecl> _1ab74d75c_buildFnPrototype(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_1aaa8837d_FnDecl> _1ab74dc13_buildFn(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _1ab74e054_getUseDeclSelectors(_1ab747019_parser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline void _1ab74e3b7_buildBindUseDecl(_1ab747019_parser*, jule::Ptr<_1aaa8e53d_UseDecl>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab74e72a_buildStdUseDecl(_1ab747019_parser*, jule::Ptr<_1aaa8e53d_UseDecl>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline void _1ab74ea8d_buildIdentUseDecl(_1ab747019_parser*, jule::Ptr<_1aaa8e53d_UseDecl>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline void _1ab74ee01_parseUseDecl(_1ab747019_parser*, jule::Ptr<_1aaa8e53d_UseDecl>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa8e53d_UseDecl> _1ab7502ec_buildUseDecl(_1ab747019_parser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>, jule::Bool);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab7506e8_buildTypeEnumItemKind(jule::Ptr<_1ab747019_parser>, jule::I32*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Slice<jule::Ptr<_1aaa90dd0_TypeEnumItemDecl>> _1ab750a39_buildTypeEnumItems(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa91540_TypeEnumDecl> _1ab750d7a_buildTypeEnumDecl(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa7a925_Expr> _1ab751276_buildEnumItemExpr(jule::Ptr<_1ab747019_parser>, jule::I32*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Slice<jule::Ptr<_1aaa8e9e4_EnumItemDecl>> _1ab7515b7_buildEnumItems(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa905a5_EnumDecl> _1ab751908_buildEnumDecl(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Any _1ab751c49_buildNodeEnumDecl(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa91809_FieldDecl> _1ab75208a_buildField(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Slice<jule::Ptr<_1aaa91809_FieldDecl>> _1ab7523cb_buildStructDeclFields(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa92200_StructDecl> _1ab75271c_buildStructDecl(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab7529c5_checkMethodReceiver(_1ab747019_parser*, jule::Ptr<_1aaa8837d_FnDecl>*);
inline void _1ab752d38_buildTraitBody(jule::Ptr<_1ab747019_parser>, jule::Ptr<_1aaa9293c_TraitDecl>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa9293c_TraitDecl> _1ab753179_buildTraitDecl(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa8837d_FnDecl> _1ab7534ba_buildBindFn(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa8945b_VarDecl> _1ab75380b_buildBindVar(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa92200_StructDecl> _1ab753b4c_buildBindStruct(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa8d031_TypeAliasDecl> _1ab753e8d_buildBindTypeAlias(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Ptr<_1aaa8e53d_UseDecl> _1ab7542ce_buildBindUse(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Any _1ab754620_buildBind(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa8837d_FnDecl> _1ab754961_getMethod(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab754cc4_parseImplBody(jule::Ptr<_1ab747019_parser>, jule::Ptr<_1aaa9309c_Impl>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa9309c_Impl> _1ab755115_buildImpl(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Any _1ab755456_buildNodeData(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab75570e_applyFnMeta(_1ab747019_parser*, jule::Ptr<_1aaa8837d_FnDecl>*);
inline void _1ab7559b7_applyMeta(_1ab747019_parser*, _1aaa4290e_Node*);
inline void _1ab755c70_pushUseDecl(jule::Ptr<_1ab747019_parser>, jule::Ptr<_1aaa8e53d_UseDecl>*);
inline jule::Bool _1ab7560b1_pushMetaNodes(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline _1aaa4290e_Node _1ab756402_parseNode(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab7566aa_appendNode(jule::Ptr<_1ab747019_parser>, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab756b83_removeRange(_1ab747019_parser*, jule::I32, jule::U32, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Slice<jule::I32>*);
inline void _1ab7570a1_pushWrongOrderCloseErr(_1ab747019_parser*, jule::Ptr<_1c3e3a5e6_Token>*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Slice<jule::I32>*);
inline void _1ab757579_pushRangeClose(_1ab747019_parser*, jule::Ptr<_1c3e3a5e6_Token>, jule::U32, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::Slice<jule::I32>*);
inline void _1ab757832_checkRanges(_1ab747019_parser*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline void _1ab757ada_parse(jule::Ptr<_1ab747019_parser>, jule::Ptr<_1c3e40db0_File>*);
inline void _1ab759427_pushErr(_1ab758d83_typeBuilder*, jule::Ptr<_1c3e3a5e6_Token>, jule::Str);
inline void _1ab75978a_pushSuggestion(_1ab758d83_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab759a21_buildNamespace(_1ab758d83_typeBuilder*);
inline jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> _1ab759ca7_buildGenerics(_1ab758d83_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _1ab75a03d_identGenerics(_1ab758d83_typeBuilder*);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75a2c4_buildIdent(_1ab758d83_typeBuilder*);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75a55a_buildCppLink(_1ab758d83_typeBuilder*);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75a7e1_buildFn(_1ab758d83_typeBuilder*);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75aa77_buildPtr(_1ab758d83_typeBuilder*);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75ad0d_buildSptr(_1ab758d83_typeBuilder*);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75b094_buildSlc(_1ab758d83_typeBuilder*);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75b32a_buildArr(_1ab758d83_typeBuilder*);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75b5b1_buildMap(_1ab758d83_typeBuilder*);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75b847_buildEnumerable(_1ab758d83_typeBuilder*);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75bacd_step(_1ab758d83_typeBuilder*);
inline __jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool _1ab75bd64_build(_1ab758d83_typeBuilder*);
inline void _1aae0570b_pushErr(_1aae051ab_directiveEval*, jule::Ptr<_1c3e3a5e6_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _1aae05b07_splitOperans(_1aae051ab_directiveEval*, jule::U32, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Bool _1aae05e48_evalDirectiveIdent(_1aae051ab_directiveEval*, jule::Str);
inline jule::Bool _1aae06289_evalDirectivePart(_1aae051ab_directiveEval*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Bool _1aae06520_eval(_1aae051ab_directiveEval*);
inline jule::Ptr<_1ab75ceb9_JuleImporter> static__1ab75d3b5_New(_1aae03c04_CompileInfo);
inline jule::Slice<jule::Ptr<_1aab24c33_ImportInfo>> _1ab75d64b_AllPackages(_1ab75ceb9_JuleImporter*);
inline void _1ab75da8b_SetModPath(_1ab75ceb9_JuleImporter*, jule::Str);
inline jule::Str _1ab75dd22_GetModPath(_1ab75ceb9_JuleImporter*);
inline jule::Str _1ab75e163_ModById(_1ab75ceb9_JuleImporter*, jule::I32);
inline jule::Ptr<_1aab24c33_ImportInfo> _1ab75e4a4_GetImport(_1ab75ceb9_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log _1ab75e8a0_ImportPackage(_1ab75ceb9_JuleImporter*, jule::Str, jule::Bool);
inline void _1ab75eb58_Imported(_1ab75ceb9_JuleImporter*, jule::Ptr<_1aab24c33_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1c3983b45_Log _1ab760087_isPassBuildDirectives(_1ab75ceb9_JuleImporter*, jule::Ptr<_1aaa41996_Ast>*);
inline jule::Bool _1a92b19cb_isCommonOrdered(jule::Slice<jule::Ptr<_1aaa972b0_Struct>>, jule::Ptr<_1aaa972b0_Struct>);
inline jule::Bool _1a92b641a_isCommonOrdered(jule::Slice<jule::Ptr<_1aab68969_Var>>, jule::Ptr<_1aab68969_Var>);
inline void _1a92ad5aa_orderCommon(jule::Slice<jule::Ptr<_1aaa972b0_Struct>>*);
inline void _1a92b236c_orderCommon(jule::Slice<jule::Ptr<_1aab68969_Var>>*);
inline void static__1ab763d38_orderStructures(jule::Slice<jule::Ptr<_1aaa972b0_Struct>>*);
inline void static__1ab764069_orderVars(jule::Slice<jule::Ptr<_1aab68969_Var>>*);
inline void _1ac59971c_optimizeChild(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Ptr<_1aab037e4_Scope>*);
inline void _1ac5999c5_optimizeBodyChildExceptional(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Ptr<_1aab037e4_Scope>*);
inline void _1ac599c7d_optimizeBodyChild(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Ptr<_1aab037e4_Scope>*);
inline void _1ac59a036_optimizeExprModel(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Any*);
inline void _1ac59a234_eliminateFollowed(_1ac599266_scopeDeadCode*);
inline void _1ac59a4dc_pushGoto(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Ptr<_1aab06561_GotoSt>);
inline void _1ac59a795_pushLabel(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Ptr<_1aab06187_Label>);
inline void _1ac59aa4d_optimizeRangeIter(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Ptr<_1aab0562b_RangeIter>);
inline void _1ac59ad06_optimizeWhileIter(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Ptr<_1aab04bd0_WhileIter>);
inline void _1ac59b0ae_optimizeInfIter(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Ptr<_1aab04729_InfIter>);
inline void _1ac59b367_optimizeConditional(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Ptr<_1aab0442c_Conditional>);
inline void _1ac59b620_optimizeMatch(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Ptr<_1aab0792a_Match>);
inline void _1ac59b8c8_optimizeAssign(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Ptr<_1aab06de1_Assign>);
inline void _1ac59bb81_optimizeMultiAssign(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Ptr<_1aab072ba_MultiAssign>);
inline void _1ac59be39_optimizeStmt(jule::Ptr<_1ac599266_scopeDeadCode>, jule::Any);
inline void _1ac59c137_optimizeStmts(jule::Ptr<_1ac599266_scopeDeadCode>);
inline _1ac59d4bd_exprDeadCode static__1ac59db2d_new(jule::Ptr<_1ac599266_scopeDeadCode>*);
inline void _1ac59ddd6_binary(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaa9e96b_BinopExprModel>);
inline void _1ac59e18e_unary(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaa9ed45_UnaryExprModel>);
inline void _1ac59e447_structureLit(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa0719_StructLitExprModel>);
inline void _1ac59e700_allocStructure(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa0a16_AllocStructLitExprModel>);
inline void _1ac59e9a8_casting(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa1099_CastingExprModel>);
inline void _1ac59ec61_args(_1ac59d4bd_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1ac5a0019_funcCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa194b_FnCallExprModel>);
inline void _1ac5a02c2_slice(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa1d25_SliceExprModel>);
inline void _1ac5a057a_array(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa4d6c_ArrayExprModel>);
inline void _1ac5a0833_indexing(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa22cb_IndexingExprModel>);
inline void _1ac5a0adb_anonFunc(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa26a5_AnonFnExprModel>);
inline void _1ac5a0d94_mapExpr(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa3035_MapExprModel>);
inline void _1ac5a114c_slicing(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa35b8_SlicingExprModel>);
inline void _1ac5a1405_traitSub(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa3b4b_TraitSubIdentExprModel>);
inline void _1ac5a16ad_structureSub(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa44dc_StructSubIdentExprModel>);
inline void _1ac5a1966_commonSub(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa56ec_CommonSubIdentExprModel>);
inline void _1ac5a1c1e_tuple(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa59e9_TupleExprModel>);
inline void _1ac5a1ec7_newCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa6973_BuiltinNewCallExprModel>);
inline void _1ac5a2280_outCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa5dc3_BuiltinOutCallExprModel>);
inline void _1ac5a2538_outlnCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa629c_BuiltinOutlnCallExprModel>);
inline void _1ac5a27e1_panicCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa6d4c_BuiltinPanicCallExprModel>);
inline void _1ac5a2a99_assertCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa7303_BuiltinAssertCallExprModel>);
inline void _1ac5a2d52_errorCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa903b_BuiltinErrorCallExprModel>);
inline void _1ac5a310a_makeCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa77a9_BuiltinMakeCallExprModel>);
inline void _1ac5a33b3_appendCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa7b83_BuiltinAppendCallExprModel>);
inline void _1ac5a366b_lenCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa7e80_BuiltinLenCallExprModel>);
inline void _1ac5a3924_capCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa827c_BuiltinCapCallExprModel>);
inline void _1ac5a3bcc_cloneCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa6599_BuiltinCloneCallExprModel>);
inline void _1ac5a3e85_deleteCall(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa88ed_BuiltinDeleteCallExprModel>);
inline void _1ac5a423d_sizeof(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa9338_SizeofExprModel>);
inline void _1ac5a44e6_alignof(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa9635_AlignofExprModel>);
inline void _1ac5a479e_integratedToStr(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaa9c2e_IntegratedToStrExprModel>);
inline void _1ac5a4a57_free(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaaa405_FreeExprModel>);
inline void _1ac5a4d10_backendEmit(_1ac59d4bd_exprDeadCode*, jule::Ptr<_1aaaaa108_BackendEmitExprModel>);
inline void _1ac5a50b8_optimize(_1ac59d4bd_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1aaceb14b_scopeOptimizer> static__1aaceb657_new(jule::Ptr<_1aab037e4_Scope>);
inline void _1aaceb910_setCurrentStmt(_1aaceb14b_scopeOptimizer*, jule::Any);
inline void _1aacebbb8_optimizeData(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aabbbe1d_Data>);
inline void _1aacebe71_optimizeVar(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aab68969_Var>);
inline void _1aacec229_optimizeConditional(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aab0442c_Conditional>);
inline void _1aacec647_buildDefaultConstantTrueCase(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aab08563_Case>, jule::I32*, jule::Ptr<_1aab0792a_Match>*);
inline void _1aacec900_optimizeMatch(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aab0792a_Match>);
inline void _1aacecba8_optimizeRangeIter(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aab0562b_RangeIter>);
inline void _1aacece61_optimizeWhileIter(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aab04bd0_WhileIter>);
inline jule::Bool _1aaced2a2_substr(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aab06de1_Assign>);
inline jule::Bool _1aaced5e3_strAssign(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aab06de1_Assign>);
inline void _1aaced89b_optimizeAssign(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aab06de1_Assign>);
inline void _1aacedb54_optimizeMultiAssign(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aab072ba_MultiAssign>);
inline void _1aacede0c_optimizeRet(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aab08ee2_RetSt>);
inline void _1aacee1b5_optimizeStmt(_1aaceb14b_scopeOptimizer*, jule::Any);
inline void _1aacee46d_optimizeChild(_1aaceb14b_scopeOptimizer*, jule::Ptr<_1aab037e4_Scope>);
inline void _1aacee66b_optimize(_1aaceb14b_scopeOptimizer*);
inline void static__1aad01e98_optimize(jule::Any*);
inline jule::Bool _1aad022d9_strCond(_1aad01926_exprOptimizer*, jule::Ptr<_1aaa9e96b_BinopExprModel>);
inline void _1aad02592_binary(_1aad01926_exprOptimizer*, jule::Ptr<_1aaa9e96b_BinopExprModel>);
inline void _1aad0284a_unary(_1aad01926_exprOptimizer*, jule::Ptr<_1aaa9ed45_UnaryExprModel>);
inline void _1aad02b03_structureLit(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa0719_StructLitExprModel>);
inline void _1aad02dab_allocStructure(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa0a16_AllocStructLitExprModel>);
inline void _1aad03164_casting(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa1099_CastingExprModel>);
inline void _1aad0341c_args(_1aad01926_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1aad036c5_scope(_1aad01926_exprOptimizer*, jule::Ptr<_1aab037e4_Scope>*);
inline jule::Bool _1aad03a16_optimizeSpecialFuncCalls(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa194b_FnCallExprModel>*);
inline void _1aad03cbe_funcCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa194b_FnCallExprModel>);
inline void _1aad04077_slice(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa1d25_SliceExprModel>);
inline void _1aad04330_array(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa4d6c_ArrayExprModel>);
inline void _1aad045d8_indexing(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa22cb_IndexingExprModel>);
inline void _1aad04891_anonFunc(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa26a5_AnonFnExprModel>);
inline void _1aad04b49_mapExpr(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa3035_MapExprModel>);
inline void _1aad04e02_slicing(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa35b8_SlicingExprModel>);
inline void _1aad051aa_traitSub(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa3b4b_TraitSubIdentExprModel>);
inline void _1aad05463_structureSub(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa44dc_StructSubIdentExprModel>);
inline void _1aad0571b_commonSub(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa56ec_CommonSubIdentExprModel>);
inline void _1aad059c4_tuple(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa59e9_TupleExprModel>);
inline void _1aad05c7c_newCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa6973_BuiltinNewCallExprModel>);
inline void _1aad06035_outCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa5dc3_BuiltinOutCallExprModel>);
inline void _1aad062dd_outlnCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa629c_BuiltinOutlnCallExprModel>);
inline void _1aad06596_panicCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa6d4c_BuiltinPanicCallExprModel>);
inline void _1aad0684e_assertCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa7303_BuiltinAssertCallExprModel>);
inline void _1aad06b07_errorCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa903b_BuiltinErrorCallExprModel>);
inline void _1aad06db0_makeCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa77a9_BuiltinMakeCallExprModel>);
inline void _1aad07168_appendCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa7b83_BuiltinAppendCallExprModel>);
inline void _1aad07421_lenCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa7e80_BuiltinLenCallExprModel>);
inline void _1aad076c9_capCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa827c_BuiltinCapCallExprModel>);
inline void _1aad07982_cloneCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa6599_BuiltinCloneCallExprModel>);
inline void _1aad07c3a_deleteCall(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa88ed_BuiltinDeleteCallExprModel>);
inline void _1aad07ee3_sizeof(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa9338_SizeofExprModel>);
inline void _1aad0829b_alignof(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa9635_AlignofExprModel>);
inline void _1aad08554_integratedToStr(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaa9c2e_IntegratedToStrExprModel>);
inline void _1aad0880c_free(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaaa405_FreeExprModel>);
inline void _1aad08ab5_backendEmit(_1aad01926_exprOptimizer*, jule::Ptr<_1aaaaa108_BackendEmitExprModel>);
inline void _1aad08cb3_do(_1aad01926_exprOptimizer*);
inline jule::Ptr<_1ac5a5e54_Optimizer> static__1ac5a6394_New(jule::Ptr<_1ab76097d_IR>*);
inline void _1ac5a664c_optimizeGlobal(_1ac5a5e54_Optimizer*, jule::Ptr<_1aab68969_Var>*);
inline void _1ac5a6905_optimizeFunction(_1ac5a5e54_Optimizer*, jule::Ptr<_1aaab3199_Fn>*);
inline void _1ac5a6bad_optimizeStruct(_1ac5a5e54_Optimizer*, jule::Ptr<_1aaa972b0_Struct>*);
inline void _1ac5a6e66_optimizeGlobals(_1ac5a5e54_Optimizer*, jule::Ptr<_1aab27b59_Package>*);
inline void _1ac5a721e_optimizeFunctions(_1ac5a5e54_Optimizer*, jule::Ptr<_1aab27b59_Package>*);
inline void _1ac5a74c7_optimizeStructs(_1ac5a5e54_Optimizer*, jule::Ptr<_1aab27b59_Package>*);
inline void _1ac5a7780_optimizePackage(_1ac5a5e54_Optimizer*, jule::Ptr<_1aab27b59_Package>*);
inline void _1ac5a797d_Optimize(_1ac5a5e54_Optimizer*);
inline void static__1ab38ae5a_Reset(void);
inline void static__1ab38c39b_Print(jule::Str, jule::Str);
inline void static__1ab38dca4_LogFlat(_1c3983b45_Log*);
inline void static__1ab38ded5_LogError(_1c3983b45_Log*);
inline void static__1ab38e216_Log(_1c3983b45_Log*);
inline void static__1ab38e447_PrintLogs(jule::Slice<_1c3983b45_Log>*);
inline _1a61878c7_Time static__1a6187c7e_Unix(jule::U64);
inline _1a61878c7_Time static__1a6187e8d_Now(void);
inline _1a6187201_AbsTime _1a6189676_Abs(_1a61878c7_Time*);
inline jule::Ptr<_1a60b08bb_scopeCoder> static__1a60b0ec6_new(jule::Ptr<_1a6191e53_ObjectCoder>*);
inline void _1a95350d4_iterHead(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab0562b_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1a60b169c_rangeIndexIter(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab0562b_RangeIter>*);
inline void _1a60b1955_rangeHashmapIter(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab0562b_RangeIter>*);
inline void _1a60b1c0d_ifCase(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab03c12_If>);
inline void _1a60b1eb6_conditional(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab0442c_Conditional>);
inline void _1a60b226e_infIter(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab04729_InfIter>);
inline void _1a60b2527_whileIter(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab04bd0_WhileIter>);
inline void _1a60b27d0_rangeIter(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab0562b_RangeIter>);
inline void _1a60b2a88_cont(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab059b1_ContSt>);
inline void _1a60b2d41_label(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab06187_Label>);
inline void _1a60b30e9_gotoSt(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab06561_GotoSt>);
inline void _1a60b33a2_postfix(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab0693a_Postfix>);
inline void _1a60b365a_assign(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab06de1_Assign>);
inline void _1a60b3913_mapLookupAssign(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab072ba_MultiAssign>*);
inline void _1a60b3bbb_multiAssignTup(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab072ba_MultiAssign>*);
inline void _1a60b3e74_multiAssignFn(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab072ba_MultiAssign>*);
inline void _1a60b422c_multiAssign(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab072ba_MultiAssign>);
inline jule::Fn<void(void)> _1a60b456d_matchExpr(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab0792a_Match>);
inline void _1a60b48d1_case(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab0792a_Match>, jule::Ptr<_1aab08563_Case>);
inline void _1a60b4b89_matchSt(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab0792a_Match>);
inline void _1a60b4e42_fallSt(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab08b5c_FallSt>);
inline void _1a60b51ea_breakSt(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab05d8a_BreakSt>);
inline void _1a60b54a3_setResult(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab08ee2_RetSt>);
inline void _1a60b575b_retSt(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab08ee2_RetSt>);
inline void _1a60b5a14_var(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab68969_Var>);
inline void _1a60b5cbc_mutSlicing(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aace8bd7_MutSlicingExprModel>);
inline void _1a60b6075_st(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Any);
inline void _1a60b632d_scopeStmts(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab037e4_Scope>*);
inline void _1a60b65d6_scope(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aab037e4_Scope>);
inline void _1a60b688e_funcScope(jule::Ptr<_1a60b08bb_scopeCoder>, jule::Ptr<_1aaab609d_FnIns>);
inline jule::Ptr<_1a60b96c7_exprCoder> static__1a60b9a90_new(jule::Ptr<_1a6191e53_ObjectCoder>*);
inline void _1a60b9d48_string(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1c4cbcda1_Const>*);
inline void _1a60ba101_boolean(jule::Ptr<_1a60b96c7_exprCoder>, jule::Bool);
inline void _1a60ba2ee_nilLit(jule::Ptr<_1a60b96c7_exprCoder>);
inline jule::Bool _1a60ba640_ftoaSpecialCases(jule::Ptr<_1a60b96c7_exprCoder>, jule::F64*);
inline void _1a60ba8e8_float32(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1c4cbcda1_Const>*);
inline void _1a60baba1_float64(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1c4cbcda1_Const>*);
inline void _1a60bae59_constant(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1c4cbcda1_Const>);
inline void _1a60bb377_divByZeroBinary(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1c3e3a5e6_Token>*, jule::Ptr<_1aaa9e471_OperandExprModel>*, jule::Ptr<_1aaa9e471_OperandExprModel>*);
inline void _1a60bb630_unsafeBinary(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaa9e96b_BinopExprModel>);
inline void _1a60bb8d8_binary(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaa9e96b_BinopExprModel>);
inline void _1a60bbb91_var(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aab68969_Var>);
inline void _1a60bbe49_structureIns(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaa9a390_StructIns>);
inline void _1a60bc202_unary(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaa9ed45_UnaryExprModel>);
inline void _1a60bc4aa_structureLit(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa0719_StructLitExprModel>);
inline void _1a60bc763_allocStructure(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa0a16_AllocStructLitExprModel>);
inline void _1a60bca1b_possibleRefExpr(jule::Ptr<_1a60b96c7_exprCoder>, jule::Any);
inline void _1a60bce39_castTraitFromTrait(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa1099_CastingExprModel>*, jule::Ptr<_1aaac6443_Trait>, jule::Ptr<_1aaac6443_Trait>);
inline void _1a60bd1e2_casting(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa1099_CastingExprModel>);
inline void _1a60bd49a_models(jule::Ptr<_1a60b96c7_exprCoder>, jule::Slice<jule::Any>);
inline void _1a60bd753_args(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa194b_FnCallExprModel>*);
inline void _1a60bda0b_modelForCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Any);
inline void _1a60bdcb4_pushCallInf(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa194b_FnCallExprModel>*);
inline jule::Bool _1a60be105_isWrapped(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa194b_FnCallExprModel>*);
inline void _1a60be3ad_pureFuncCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa194b_FnCallExprModel>*);
inline void _1a60be666_coFuncCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa194b_FnCallExprModel>*);
inline void _1a60be9c9_writeUseExpr(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaab609d_FnIns>*, jule::Ptr<_1aabbbe1d_Data>);
inline void _1a60bec82_funcCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa194b_FnCallExprModel>);
inline void _1a60c003a_slice(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa1d25_SliceExprModel>);
inline void _1a60c02e3_indexing(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa22cb_IndexingExprModel>);
inline void _1a60c059b_unsafeIndexing(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aace9358_UnsafeIndexingExprModel>);
inline void _1a60c0854_anonFunc(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa26a5_AnonFnExprModel>);
inline void _1a60c0b0c_mapExpr(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa3035_MapExprModel>);
inline void _1a60c0db5_slicing(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa35b8_SlicingExprModel>);
inline void _1a60c116d_traitSub(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa3b4b_TraitSubIdentExprModel>);
inline void _1a60c1426_structureSub(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa44dc_StructSubIdentExprModel>);
inline void _1a60c16ce_commonIdent(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa5169_CommonIdentExprModel>);
inline void _1a60c1987_commonSub(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa56ec_CommonSubIdentExprModel>);
inline void _1a60c1c40_array(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa4d6c_ArrayExprModel>);
inline void _1a60c1ee8_funcInsCommon(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaab609d_FnIns>);
inline void _1a60c22a1_funcIns(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaab609d_FnIns>);
inline void _1a60c2559_tuple(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa59e9_TupleExprModel>);
inline void _1a60c2812_newCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa6973_BuiltinNewCallExprModel>);
inline void _1a60c2aba_outCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa5dc3_BuiltinOutCallExprModel>);
inline void _1a60c2d73_outlnCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa629c_BuiltinOutlnCallExprModel>);
inline void _1a60c312b_panicCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa6d4c_BuiltinPanicCallExprModel>);
inline void _1a60c33d4_assertCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa7303_BuiltinAssertCallExprModel>);
inline void _1a60c368c_errorCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa903b_BuiltinErrorCallExprModel>);
inline void _1a60c3945_copyCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa8b62_BuiltinCopyCallExprModel>);
inline void _1a60c3bed_lenCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa7e80_BuiltinLenCallExprModel>);
inline void _1a60c3ea6_capCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa827c_BuiltinCapCallExprModel>);
inline void _1a60c425e_deleteCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa88ed_BuiltinDeleteCallExprModel>);
inline void _1a60c4517_makeCallSlice(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa77a9_BuiltinMakeCallExprModel>*);
inline void _1a60c47c0_makeCallStr(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa77a9_BuiltinMakeCallExprModel>*);
inline void _1a60c4a78_makeCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa77a9_BuiltinMakeCallExprModel>);
inline void _1a60c4d31_pushToSlice(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aace96ee_PushToSliceExprModel>);
inline void _1a60c50d9_appendToSlice(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aace9ac8_AppendToSliceExprModel>);
inline void _1a60c5392_appendCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa7b83_BuiltinAppendCallExprModel>);
inline void _1a60c564a_cloneCall(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa6599_BuiltinCloneCallExprModel>);
inline void _1a60c5903_sizeof(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa9338_SizeofExprModel>);
inline void _1a60c5bab_alignof(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa9635_AlignofExprModel>);
inline void _1a60c5e64_runeLit(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa9932_RuneExprModel>);
inline void _1a60c621c_structureStatic(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa4993_StructStaticIdentExprModel>);
inline void _1a60c64c5_integratedToStr(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaa9c2e_IntegratedToStrExprModel>);
inline void _1a60c677d_backendEmit(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaaa108_BackendEmitExprModel>);
inline void _1a60c6a36_free(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aaaaa405_FreeExprModel>);
inline void _1a60c6cde_strComp(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aace8643_StrCompExprModel>);
inline void _1a60c7097_inlineStdInternalNosafeStobs(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aace9dc5_InlineStdInternalNosafeStobs>);
inline void _1a60c7350_model(jule::Ptr<_1a60b96c7_exprCoder>, jule::Any);
inline void _1a60c7608_initExpr(jule::Ptr<_1a60b96c7_exprCoder>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1a60ca2a9_deriveCoder> static__1a60ca672_new(jule::Ptr<_1a6191e53_ObjectCoder>);
inline jule::Str _1a60ca9b3_cloneFuncDecl(_1a60ca2a9_deriveCoder*, jule::Ptr<_1aaa972b0_Struct>*);
inline jule::Str _1a60cad04_cloneFuncDef(_1a60ca2a9_deriveCoder*, jule::Ptr<_1aaa972b0_Struct>*);
inline jule::Ptr<_1a60cbd6b_TestCoder> static__1a60cc2ab_New(jule::Ptr<_1a6191e53_ObjectCoder>*);
inline jule::Ptr<_1aab24c33_ImportInfo> _1a60cc542_findTestingPackage(jule::Ptr<_1a60cbd6b_TestCoder>);
inline void _1a60cc7ea_appendTest(jule::Ptr<_1a60cbd6b_TestCoder>, jule::Ptr<_1aaab609d_FnIns>);
inline void _1a60ccaa3_appendPackageTests(jule::Ptr<_1a60cbd6b_TestCoder>, jule::Ptr<_1aab27b59_Package>*);
inline jule::Bool _1a60ccd39_readyTestingPackage(jule::Ptr<_1a60cbd6b_TestCoder>);
inline void _1a60cd037_callTmReset(jule::Ptr<_1a60cbd6b_TestCoder>);
inline void _1a60cd235_callTmFailed(jule::Ptr<_1a60cbd6b_TestCoder>);
inline void _1a60cd433_callTmSkipped(jule::Ptr<_1a60cbd6b_TestCoder>);
inline void _1a60cd631_Serialize(jule::Ptr<_1a60cbd6b_TestCoder>);
inline void static__1a60d0039_writeIdentTo(_1c38d3b83_StrBuilder*, jule::Str*);
inline jule::Str static__1a60d03ad_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1a60d07dc_toLocal(jule::I32, jule::I32, jule::Str*);
inline jule::Str static__1a60d0aa6_func(jule::Ptr<_1aaab3199_Fn>*);
inline jule::Str static__1a60d0d70_funcIns(jule::Ptr<_1aaab609d_FnIns>*);
inline jule::Str static__1a60d1139_traitDecl(jule::Ptr<_1aaac6443_Trait>);
inline jule::Str static__1a60d1403_param(jule::Ptr<_1aaaab868_Param>*);
inline jule::Str static__1a60d16bc_structure(jule::Ptr<_1aaa972b0_Struct>*);
inline jule::Str static__1a60d1986_structureIns(jule::Ptr<_1aaa9a390_StructIns>*);
inline jule::Str static__1a60d1c50_field(jule::Ptr<_1aaa943bc_Field>*);
inline jule::Str static__1a60d2019_var(jule::Ptr<_1aab68969_Var>);
inline jule::Str static__1a60d22d3_iterBegin(jule::Uintptr);
inline jule::Str static__1a60d259c_iterEnd(jule::Uintptr);
inline jule::Str static__1a60d2866_iterNext(jule::Uintptr);
inline jule::Str static__1a60d2b30_label(jule::Uintptr);
inline jule::Str static__1a60d2de9_matchEnd(jule::Uintptr);
inline jule::Str static__1a60d31b3_caseBegin(jule::Uintptr);
inline jule::Str _1a61a1a01_Str(_1a61a166b_customType*);
inline jule::Bool _1a61a1d42_Equal(jule::Ptr<_1a61a166b_customType>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1a61a2271_typeCoder> static__1a61a27b0_new(jule::Ptr<_1a6191e53_ObjectCoder>*);
inline jule::Str _1a61a2b01_toType(_1a61a2271_typeCoder*, jule::Str);
inline jule::Str _1a61a2e42_prim(_1a61a2271_typeCoder*, jule::Ptr<_1aac05066_Prim>);
inline jule::Str _1a646e76e_tuple(_1a61a2271_typeCoder*, jule::Ptr<_1aac0a159_Tuple>);
inline jule::Str _1a646e9d3_asSptr(_1a61a2271_typeCoder*, jule::Str);
inline jule::Str _1a646ed24_sptr(_1a61a2271_typeCoder*, jule::Ptr<_1aac08a92_Sptr>);
inline jule::Str _1a6470165_ptr(_1a61a2271_typeCoder*, jule::Ptr<_1aac0c359_Ptr>);
inline jule::Str _1a64704a6_enumDecl(_1a61a2271_typeCoder*, jule::Ptr<_1aaac8b3d_Enum>);
inline jule::Str _1a64707e7_typeEnumDecl(_1a61a2271_typeCoder*, jule::Ptr<_1aaaca348_TypeEnum>);
inline jule::Str _1a6470b38_asSlice(_1a61a2271_typeCoder*, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Str _1a6470e79_slice(_1a61a2271_typeCoder*, jule::Ptr<_1aac09565_Slc>);
inline jule::Str _1a64712ba_mapType(_1a61a2271_typeCoder*, jule::Ptr<_1aac0ac09_Map>);
inline jule::Str _1a647160b_traitIdent(_1a61a2271_typeCoder*, jule::Str);
inline jule::Str _1a647194c_traitDecl(_1a61a2271_typeCoder*, jule::Ptr<_1aaac6443_Trait>);
inline jule::Str _1a6471c8d_structure(_1a61a2271_typeCoder*, jule::Ptr<_1aaa972b0_Struct>);
inline jule::Str _1a64720ce_structureIns(_1a61a2271_typeCoder*, jule::Ptr<_1aaa9a390_StructIns>);
inline jule::Str _1a6472420_array(_1a61a2271_typeCoder*, jule::Ptr<_1aac0b886_Arr>);
inline jule::Str _1a6472aa2_paramIns(_1a61a2271_typeCoder*, jule::Ptr<_1aaab5102_ParamIns>*);
inline void _1a6473256_funcInsResult(_1a61a2271_typeCoder*, _1c38d3b83_StrBuilder*, jule::Ptr<_1aaab609d_FnIns>*);
inline jule::Str _1a6473597_anonFunc(_1a61a2271_typeCoder*, jule::Ptr<_1aaab609d_FnIns>);
inline jule::Str _1a64738d8_func(_1a61a2271_typeCoder*, jule::Ptr<_1aaab609d_FnIns>);
inline jule::Str _1a6473c29_kind(_1a61a2271_typeCoder*, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Ptr<_1a6476457_resultCoder> static__1a6476930_new(jule::Ptr<_1a61a2271_typeCoder>*);
inline void _1a6476c93_ptr(_1a6476457_resultCoder*, _1c38d3b83_StrBuilder*, jule::Ptr<_1aac0c359_Ptr>);
inline void _1a6477106_sptr(_1a6476457_resultCoder*, _1c38d3b83_StrBuilder*, jule::Ptr<_1aac08a92_Sptr>);
inline void _1a6477469_mapType(_1a6476457_resultCoder*, _1c38d3b83_StrBuilder*, jule::Ptr<_1aac0ac09_Map>);
inline void _1a64777cc_slice(_1a6476457_resultCoder*, _1c38d3b83_StrBuilder*, jule::Ptr<_1aac09565_Slc>);
inline void _1a6477b40_arr(_1a6476457_resultCoder*, _1c38d3b83_StrBuilder*, jule::Ptr<_1aac0b886_Arr>);
inline void _1a6477ea3_func(_1a6476457_resultCoder*, _1c38d3b83_StrBuilder*, jule::Ptr<_1aaab609d_FnIns>);
inline void _1a6478316_tup(_1a6476457_resultCoder*, _1c38d3b83_StrBuilder*, jule::Ptr<_1aac0a159_Tuple>);
inline void _1a6478679_codeMut(_1a6476457_resultCoder*, _1c38d3b83_StrBuilder*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline void _1a64789dc_codeMut1(_1a6476457_resultCoder*, _1c38d3b83_StrBuilder*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Str _1a6478cea_code(_1a6476457_resultCoder*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Str _1a5d1bcdc_Name(_1a5d1b946_Flag*);
inline jule::Str _1a5d1be30_What(_1a5d1b946_Flag*);
inline void _1a5d1c073_Reset(_1a5d1b946_Flag*);
inline jule::I32 _1a5d1c1b6_Short(_1a5d1b946_Flag*);
inline jule::Str _1a5d1ee99_Name(_1a5d20362_Flag*);
inline jule::Str _1a5d200dc_What(_1a5d20362_Flag*);
inline void _1a5d2064d_Reset(_1a5d20362_Flag*);
inline jule::I32 _1a5d20791_Short(_1a5d20362_Flag*);
inline jule::Str _1a5d23695_Name(_1a5d23a5d_Flag*);
inline jule::Str _1a5d237d8_What(_1a5d23a5d_Flag*);
inline void _1a5d23d49_Reset(_1a5d23a5d_Flag*);
inline jule::I32 _1a5d23e8c_Short(_1a5d23a5d_Flag*);
inline jule::Str _1a5d26dd5_Name(_1a5d2729d_Flag*);
inline jule::Str _1a5d27028_What(_1a5d2729d_Flag*);
inline void _1a5d27589_Reset(_1a5d2729d_Flag*);
inline jule::I32 _1a5d276cc_Short(_1a5d2729d_Flag*);
inline jule::Str _1a5d2a5d1_Name(_1a5d2a999_Flag*);
inline jule::Str _1a5d2a724_What(_1a5d2a999_Flag*);
inline void _1a5d2ac85_Reset(_1a5d2a999_Flag*);
inline jule::I32 _1a5d2adc8_Short(_1a5d2a999_Flag*);
inline jule::Ptr<_1a64e331a_FlagSet> static__1a64e3606_New(void);
inline jule::Trait<_1a64e1769_CommonFlag> _1a64e3a79_FindFlag(_1a64e331a_FlagSet*, jule::Str);
inline jule::Trait<_1a64e1769_CommonFlag> _1a64e3dba_FindFlagShort(_1a64e331a_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1a64e4492_Parse(_1a64e331a_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1a5d2a999_Flag> _1a5d94d21_addFlagCommon(_1a64e331a_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1a5d2729d_Flag> _1a5d9cdd4_addFlagCommon(_1a64e331a_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1a5d92ca8_AddVar(_1a64e331a_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1a5d9ad9e_AddVar(_1a64e331a_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1a5d3d726_parseInteger(_1a64e5c9b_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>);
inline __jule_tuple_u64__jule_tuple_bool _1a5d45ec0_parseInteger(_1a64e5c9b_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>);
inline jule::Str _1a64e65b5_getData(_1a64e5c9b_argParser*);
inline jule::VoidExceptional _1a64e683a_processFlag(_1a64e5c9b_argParser*, jule::Trait<_1a64e1769_CommonFlag>*);
inline jule::VoidExceptional _1a64e6ae3_singleDash(_1a64e5c9b_argParser*, jule::Str*);
inline jule::VoidExceptional _1a64e6d9b_doubleDash(_1a64e5c9b_argParser*, jule::Str*);
inline jule::VoidExceptional _1a64e7099_tryArg(_1a64e5c9b_argParser*);
inline jule::VoidExceptional _1a64e7297_parse(_1a64e5c9b_argParser*);
inline jule::Ptr<_1a6191e53_ObjectCoder> static__1a619234e_New(jule::Ptr<_1ab76097d_IR>*, _1a619035d_SerializationInfo);
inline void _1a6192607_write(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Str);
inline void _1a6192805_addIndent(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a6192a03_doneIndent(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a6192c01_indent(jule::Ptr<_1a6191e53_ObjectCoder>);
inline jule::I32 _1a6193042_findAnyType(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::I32 _1a6193383_pushAnyType(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aabec1e5_TypeKind>);
inline void _1a619363b_pushResultIns(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaab609d_FnIns>*);
inline void _1a61938e4_pushResult(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaab3199_Fn>*);
inline jule::I32 _1a6193ce0_findTypeOffsetS(_1a6191e53_ObjectCoder*, jule::Ptr<_1aaac6443_Trait>, jule::Ptr<_1aaa9a390_StructIns>);
inline jule::I32 _1a61941db_findTypeOffset(_1a6191e53_ObjectCoder*, jule::Ptr<_1aaac6443_Trait>, jule::Ptr<_1aabec1e5_TypeKind>);
inline void _1a619454e_pushAndWriteMaskMapper(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaac6443_Trait>, jule::Ptr<_1aaac6443_Trait>);
inline void _1a6194807_locInfo(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1c3e3a5e6_Token>*);
inline void _1a6194a05_head(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a6194c03_links(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a6194eab_prepareStructure(_1a6191e53_ObjectCoder*, jule::Ptr<_1aaa972b0_Struct>*);
inline void _1a61951a9_prepareStructures(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a6195462_iterPackages(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Fn<void(jule::Ptr<_1aab27b59_Package>*)>);
inline void _1a6195660_buildTraitMap(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a619585d_traitDecls(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a6195b16_structurePlainDecl(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaa972b0_Struct>*);
inline void _1a6195d14_structurePlainDecls(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a61960bc_fieldDecl(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaa997e0_FieldIns>*);
inline void _1a6196375_structureDestructor(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaa9a390_StructIns>*);
inline void _1a619662d_structureDeriveDefsDecls(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaa9a390_StructIns>*);
inline void _1a6196991_structureOperatorEq(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Str*, jule::Ptr<_1aaa9a390_StructIns>*);
inline void _1a6196d04_structureOperatorNotEq(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Str*, jule::Ptr<_1aaa9a390_StructIns>*);
inline void _1a6197222_structureOperator(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Str*, jule::Ptr<_1aaab609d_FnIns>*, jule::Str);
inline void _1a61974ca_structureOperators(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaa9a390_StructIns>*);
inline void _1a6197783_structureInsDecl(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaa9a390_StructIns>*);
inline void _1a6197a3b_structureDecl(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaa972b0_Struct>*);
inline void _1a6197c39_structureDecls(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a6197e37_structureMethodDecls(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a61981e0_paramsDecls(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Slice<jule::Ptr<_1aaab5102_ParamIns>>*);
inline void _1a6198553_funcHead(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaab609d_FnIns>*, jule::Bool);
inline void _1a61988b6_funcDeclIns(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaab609d_FnIns>*, jule::Bool);
inline void _1a6198c29_funcDecl(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaab3199_Fn>*, jule::Bool);
inline void _1a6199147_funcDeclTrait(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaac6443_Trait>*, jule::Ptr<_1aaab3199_Fn>*, jule::Bool);
inline void _1a6199345_funcDecls(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a61996a8_traitDataTypeMethods(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaac6443_Trait>*, jule::Ptr<_1aaac6443_Trait>*);
inline void _1a61998a6_traitDataTypes(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a6199b5e_paramIns(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaab5102_ParamIns>*);
inline void _1a6199e17_paramsIns(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Slice<jule::Ptr<_1aaab5102_ParamIns>>*);
inline void _1a619a27a_varInitExpr(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aab68969_Var>*, jule::Fn<void(void)>);
inline void _1a619a533_var(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aab68969_Var>);
inline void _1a619a7db_funcIns(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaab609d_FnIns>*);
inline void _1a619aa94_func(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaab3199_Fn>*);
inline void _1a619ae07_funcTrait(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1a6190935_traitHash>*, jule::Ptr<_1aaab3199_Fn>*);
inline void _1a619b26a_traitWrapper(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaab3199_Fn>*, jule::Ptr<_1a6190935_traitHash>*);
inline void _1a619b468_traitWrappers(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a619b7cb_traitDataMethods(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaac6443_Trait>*, jule::Ptr<_1a6190935_traitHash>*);
inline void _1a619bb3e_traitData(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1a6190935_traitHash>*, jule::Ptr<_1aaac6443_Trait>*);
inline void _1a619bd3c_traitDatas(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a619c03a_globals(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a619c238_decls(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a619c4e1_structureMethods(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaa9a390_StructIns>*);
inline void _1a619c799_structureDeriveDefs(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaa9a390_StructIns>*);
inline void _1a619ca52_structureOstream(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaa9a390_StructIns>*);
inline void _1a619cd0a_structureIns(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaa9a390_StructIns>*);
inline void _1a619d0b3_structure(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aaa972b0_Struct>*);
inline void _1a619d2b1_structures(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a619d4ae_funcs(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a619d767_pushInit(jule::Ptr<_1a6191e53_ObjectCoder>, jule::Ptr<_1aab27b59_Package>*);
inline void _1a619d965_initCaller(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a619db63_end(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a619dd61_serializeHead(jule::Ptr<_1a6191e53_ObjectCoder>);
inline void _1a619e05e_Serialize(jule::Ptr<_1a6191e53_ObjectCoder>);
inline jule::Ptr<_1ac594abe_ObjectDeadCode> static__1ac594ddd_new(jule::Ptr<_1ab76097d_IR>*);
inline jule::Bool _1a92de6da_isLive(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aaac6443_Trait>*);
inline jule::Bool _1a92e4635_isLive(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aaab609d_FnIns>*);
inline jule::Bool _1a92eba5a_isLive(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aaa9a390_StructIns>*);
inline jule::Bool _1a9301e5b_isLive(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aab68969_Var>*);
inline void _1a92dead6_pushLive(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aaac6443_Trait>);
inline void _1a92e4c51_pushLive(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aaab609d_FnIns>);
inline void _1a92eacbd_pushLive(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aaa9a390_StructIns>);
inline void _1a9302357_pushLive(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aab68969_Var>);
inline void _1ac595790_setReferencesAsLive(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aaab9249_ReferenceStack>*);
inline void _1ac595a48_inits(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aab27b59_Package>*);
inline void _1ac595d01_collectLivePackage(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aab27b59_Package>*);
inline void _1ac595eee_collectLive(jule::Ptr<_1ac594abe_ObjectDeadCode>);
inline void _1ac5962a7_removeDeadGlobals(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Slice<jule::Ptr<_1aab68969_Var>>*);
inline void _1ac596560_removeDeadFns(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Slice<jule::Ptr<_1aaab3199_Fn>>*);
inline void _1ac596818_removeDeadStructs(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Slice<jule::Ptr<_1aaa972b0_Struct>>*);
inline void _1ac596ac1_removeDeadTraits(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Slice<jule::Ptr<_1aaac6443_Trait>>*);
inline void _1ac596d79_removeDeadsFile(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aabb6be8_SymbolTable>*);
inline void _1ac597132_removeDeadsPackage(jule::Ptr<_1ac594abe_ObjectDeadCode>, jule::Ptr<_1aab27b59_Package>*);
inline void _1ac597330_removeDeads(jule::Ptr<_1ac594abe_ObjectDeadCode>);
inline void _1ac59752d_elimanate(jule::Ptr<_1ac594abe_ObjectDeadCode>);
inline __jule_tuple_x_1ab76097d_IR__jule_tuple_s_1c3983b45_Log static__1ab760de0_Build(jule::Str, jule::I32);
inline void _1ab7613c9_appendStructs(_1ab76097d_IR*, jule::Ptr<_1aab27b59_Package>*, jule::Slice<jule::Ptr<_1aaa972b0_Struct>>*);
inline jule::Slice<jule::Ptr<_1aaa972b0_Struct>> _1ab761660_GetAllStructures(_1ab76097d_IR*);
inline void _1ab7619c3_appendGlobals(_1ab76097d_IR*, jule::Ptr<_1aab27b59_Package>*, jule::Slice<jule::Ptr<_1aab68969_Var>>*);
inline jule::Slice<jule::Ptr<_1aab68969_Var>> _1ab761c59_GetAllGlobals(_1ab76097d_IR*);
inline void _1ab761e57_Order(_1ab76097d_IR*);
inline jule::Str _1aaa9a714_Str(_1aaa9a390_StructIns*);
inline jule::Bool _1aaa9aa55_Equal(jule::Ptr<_1aaa9a390_StructIns>, jule::Ptr<_1aabec1e5_TypeKind>);
inline jule::Bool _1aaa9b00b_Same(_1aaa9a390_StructIns*, jule::Ptr<_1aaa9a390_StructIns>);
inline jule::Ptr<_1aaab3199_Fn> _1aaa9b407_FindMethod(_1aaa9a390_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1aaa997e0_FieldIns> _1aaa9b748_FindField(_1aaa9a390_StructIns*, jule::Str);
inline jule::Ptr<_1aab68969_Var> _1aaa9ba89_FindStatic(_1aaa9a390_StructIns*, jule::Str);
inline jule::Ptr<_1c3a4282a_Cmd> static__1c3a42c48_New(jule::Str);
inline jule::VoidExceptional _1c3a42e46_Spawn(_1c3a4282a_Cmd*);
inline jule::Exceptional<jule::I32> _1c3a433ca_Wait(_1c3a4282a_Cmd*);
inline jule::VoidExceptional _1c3a92e1e_spawn(_1c3a4282a_Cmd*);
inline jule::Exceptional<jule::I32> _1c3a933a3_wait(_1c3a4282a_Cmd*);
inline void _206ae85d4_Free(void*);
inline jule::Str _206b29406_BytePtrToStr(jule::U8*);
inline jule::I32 _205b16ee9_GetLastErrno(void);
inline jule::I32 _206b38bc9_Fcntl(jule::I32, jule::I32, jule::I32);
inline jule::I32 _206b3904d_Stat(jule::U8*, struct stat*);
inline jule::I32 _206b3947c_Open(jule::U8*, jule::I32, jule::I32);
inline jule::U8* _206b39801_Getcwd(jule::U8*, jule::U32);
inline DIR* _206b39ceb_Opendir(jule::U8*);
inline struct dirent* _206b3a0b5_Readdir(DIR*);
inline jule::I32 _206b3a37e_Closedir(DIR*);
inline jule::I32 _206b3ac86_Mkdir(jule::U8*, jule::I32);
inline jule::I32 _206b3b050_Rmdir(jule::U8*);
inline jule::I32 _206b3b319_Unlink(jule::U8*);
inline jule::I32 _206b660ad_Read(jule::I32, void*, jule::U32);
inline jule::I32 _206b66454_Close(jule::I32);
inline jule::I32 _206b66883_Write(jule::I32, void*, jule::U32);
inline void _206b66ab4_Exit(jule::I32);
inline jule::Slice<jule::U8> _206b74495_Stobs(jule::Str*);
inline jule::I32 _206d22016_getLastOsError(void);
inline jule::Slice<jule::Str> _206d4ac65_Args(void);
inline jule::Exceptional<jule::Str> _206d4b20a_WorkingDir(void);
inline jule::Exceptional<jule::Str> _206d4bb45_getwd(void);
inline jule::Bool _1de93149a_IsLetter(jule::I32);
inline jule::Bool _1de99905c_is16(jule::Slice<_1de9972be_Range16>, jule::U16);
inline jule::Bool _1de9993d1_is32(jule::Slice<_1de9977ec_Range32>, jule::U32);
inline jule::Bool _1de999bd9_isExcludingLatin(jule::Ptr<_1de997ca3_RangeTable>, jule::I32);
inline jule::Bool _1de999ea3_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _1c387c9ea_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1c387d105_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1c387de5d_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1c387e2d2_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I32 _1c387e865_RuneCountStr(jule::Str);
inline jule::Bool _1c387eb2e_RuneStart(jule::U8);
inline jule::I32 _1c38aa1cb_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _1c38bc809_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _1c38bcbb1_FindByteStr(jule::Str*, jule::U8);
inline jule::I32 _1c38bd035_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _1c38bd497_Repeat(jule::Str, jule::I32);
inline jule::Bool _1c38bd91a_hasPrefix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _1c38bdc8e_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1c38be245_hasSuffix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _1c38be586_HasSuffix(jule::Str, jule::Str);
inline jule::I32 _1c38be9b5_FindAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _1c38c0378_FindLastAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _1c38c06ec_FindLast(jule::Str, jule::Str);
inline jule::I32 _1c38c1ac7_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I32 _1c38c2479_FindLastByte(jule::Str, jule::U8);
inline jule::I32 _1c38c336a_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1c38c3b1d_Split(jule::Str, jule::Str, jule::I32);
inline jule::Bool _1c38c3e92_Contains(jule::Str, jule::Str);
inline jule::Bool _1c38c4a0e_ContainsAny(jule::Str, jule::Str);
inline jule::I32 _1c38c4d83_Count(jule::Str, jule::Str);
inline jule::Str _1c38c536c_Replace(jule::Str, jule::Str, jule::Str, jule::I32);
inline void _1c38c2116_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1c38c6516_TrimLeft(jule::Str, jule::Str);
inline void _1c38c6802_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1c38c6eea_Trim(jule::Str, jule::Str);
inline jule::Str _1c38c736e_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _1c38e073e_Clean(jule::Str);
inline jule::Str _1c38e0d16_FromSlash(jule::Str);
inline jule::Str _1c38e1157_Join(jule::Slice<jule::Str>);
inline jule::Str _1c38e1421_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1c38e16da_Abs(jule::Str);
inline jule::Str _1c38e19a4_Base(jule::Str);
inline jule::Str _1c38e1d4a_Dir(jule::Str);
inline jule::Str _1c38e2114_VolumeName(jule::Str);
inline jule::Bool _1c38e3005_IsPathSep(jule::U8);
inline jule::Bool _1c38e3313_IsAbs(jule::Str);
inline jule::I32 _1c38e35cc_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1c38e391d_abs(jule::Str);
inline jule::Str _1c38e3bd7_join(jule::Slice<jule::Str>);
inline jule::I32 _206b6b833_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _1c3a441cd_AtoiBp(jule::U8*, jule::I32);
inline jule::Str _1c3a8dca5_Itoa(jule::I32);
inline jule::Str _1c3a8e0b3_Utoa(jule::U32);
inline jule::Slice<char*> _1c3a92616_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I32 _1c3a9298a_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _1c3a92bbb_setenv(jule::Slice<jule::Str>*);
inline jule::I32 _1c3a93b45_processErrorFromCode(jule::I32);
inline jule::I32 _1c3a93d98_getLastProcessError(void);
inline void _1c3a946b2_Exit(jule::I32);
inline jule::Str _1c3a948c1_Executable(void);
inline jule::Bool _1c397682a_IsStdHeaderPath(jule::Str);
inline jule::Bool _1c3976ad3_IsValidHeaderExt(jule::Str);
inline jule::Bool _1c3976d9c_IsValidCppExt(jule::Str);
inline jule::Str _1c39840a7_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1c39892bb_argToStr(jule::Any);
inline jule::I32 _1c39894db_findNextFmt(jule::Str);
inline jule::Str _1c39898a4_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c398a94e_IsTopDirective(jule::Str);
inline jule::Bool _1c398bda1_IsWindows(jule::Str);
inline jule::Bool _1c398c17b_IsDarwin(jule::Str);
inline jule::Bool _1c398c445_IsLinux(jule::Str);
inline jule::Bool _1c398c786_IsI386(jule::Str);
inline jule::Bool _1c398ca50_IsAmd64(jule::Str);
inline jule::Bool _1c398cd19_IsArm64(jule::Str);
inline jule::Bool _1c398d0d3_IsUnix(jule::Str);
inline jule::Bool _1c398d479_Is32Bit(jule::Str);
inline jule::Bool _1c398d743_Is64Bit(jule::Str);
inline void _1c3a95b9c_init(void);
inline jule::Bool _1c3e3ad33_IsUnaryOp(jule::U32);
inline jule::Bool _1c3e3b141_IsBinOp(jule::U32);
inline jule::Bool _1c3e3b74b_IsStr(jule::Str);
inline jule::Bool _1c3e3ba15_IsRawStr(jule::Str);
inline jule::Bool _1c3e3bcce_IsRune(jule::Str);
inline jule::Bool _1c3e3c708_IsFloat(jule::Str);
inline jule::Bool _1c3e3c9c2_IsNum(jule::Str);
inline jule::Bool _1c3e3d055_IsIgnoreIdent(jule::Str);
inline jule::Bool _1c3e3d31e_IsAnonIdent(jule::Str);
inline jule::Bool _1c3e3d8a2_IsSpace(jule::I32);
inline jule::Bool _1c3e3dd25_IsLetter(jule::I32);
inline jule::Bool _1c3e3e3a8_IsDecimal(jule::U8);
inline jule::Bool _1c3e3e672_IsBinary(jule::U8);
inline jule::Bool _1c3e3e93b_IsOctal(jule::U8);
inline jule::Bool _1c3e3ec05_IsHex(jule::U8);
inline jule::Bool _1c3e3eebe_IsAssign(jule::U32);
inline jule::Bool _1c3e40288_IsPostfixOp(jule::U32);
inline jule::Bool _1c3e40552_IsAssignOp(jule::U32);
inline jule::Ptr<_1c3e40db0_File> _1c3e42257_NewFileSet(jule::Str);
inline _1c3983b45_Log _1c3e43ca3_makeErr(jule::I32, jule::I32, jule::Ptr<_1c3e40db0_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1c3e4416b_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1c3e444e0_floatFmtE(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1c3e448a8_floatFmtP(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1c3e44c2c_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1c3e450a1_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1c3e45425_floatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1c3e458a9_floatNum(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1c3e45b73_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1c3e45e3c_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1c3e462b1_isFloatFmtE(jule::U8, jule::I32);
inline jule::Bool _1c3e46635_isFloatFmtP(jule::U8, jule::I32);
inline jule::Bool _1c3e469a9_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _1c3e46d2d_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _1c3e471a2_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1c3e47625_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1c3e478de_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1c3e47c63_hexEscape(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _1c3e4802c_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1c3e482e6_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1c3e485b0_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1c3e48879_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1c3983b45_Log> _1c3e4d86d_Lex(jule::Ptr<_1c3e40db0_File>, jule::I32);
inline jule::I32 _1c4c49206_LeadingZeros64(jule::U64);
inline jule::I32 _1c4c4a15d_TrailingZeros(jule::U32);
inline jule::I32 _1c4c4aaba_TrailingZeros32(jule::U32);
inline jule::I32 _1c4c4ad84_TrailingZeros64(jule::U64);
inline jule::I32 _1c4c5183a_Len32(jule::U32);
inline jule::I32 _1c4c51b04_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1c4c52891_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1c4c5419a_Mul64(jule::U64, jule::U64);
inline jule::U32 _1c4b59413_F32Bits(jule::F32);
inline jule::F32 _1c4b59721_F32FromBits(jule::U32);
inline jule::U64 _1c4b599da_F64Bits(jule::F64);
inline jule::F64 _1c4b59d2b_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1c4b5c3d3_Frexp(jule::F64);
inline jule::F64 _1c4c5b922_NaN(void);
inline jule::Bool _1c4c5bc30_IsNaN(jule::F64);
inline jule::F64 _1c4c5bee9_Inf(jule::I32);
inline jule::Bool _1c4c5c33a_IsInf(jule::F64, jule::I32);
inline __jule_tuple_f64__jule_tuple_int _1c4c5c604_normalize(jule::F64);
inline jule::F64 _1c4c5e0c8_Log(jule::F64);
inline jule::F64 _1c4c5e9ad_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1c4c666a7_Modf(jule::F64);
inline jule::F64 _1c4c66eb0_Log2(jule::F64);
inline jule::Str _1c4c95e01_FmtFloat(jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _1c4c964d9_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _1c4c96be3_bigFtoa(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _1c4c94d23_floatInfo*);
inline jule::Slice<jule::U8> _1c4c973b9_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1c4c9586d_decimalSlice, jule::I32, jule::U8);
inline void _1c4c9781a_roundShortest(_1c4ca860b_decimal*, jule::U64, jule::I32, _1c4c94d23_floatInfo*);
inline jule::Slice<jule::U8> _1c4c97dae_fmtE(jule::Slice<jule::U8>, jule::Bool, _1c4c9586d_decimalSlice, jule::I32, jule::U8);
inline jule::Slice<jule::U8> _1c4c98398_fmtF(jule::Slice<jule::U8>, jule::Bool, _1c4c9586d_decimalSlice, jule::I32);
inline jule::Slice<jule::U8> _1c4c98a19_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I32, _1c4c94d23_floatInfo*);
inline jule::Slice<jule::U8> _1c4c99223_fmtX(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _1c4c94d23_floatInfo*);
inline jule::I32 _1c4c99597_min(jule::I32, jule::I32);
inline jule::I32 _1c4c9991b_max(jule::I32, jule::I32);
inline jule::U8 _1c4c9a466_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1c40b5111_ConvError _1c4c9a8d9_parseUint(jule::Str*, jule::I32, jule::I32);
inline jule::Exceptional<jule::U64> _1c4c9ad18_ParseUint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::I64> _1c4c9b2be_ParseInt(jule::Str, jule::I32, jule::I32);
inline __jule_tuple_f64__jule_tuple_bool _1c4c9beb2_eiselLemire64(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1c4c9c402_eiselLemire32(jule::U64, jule::I32, jule::Bool);
inline jule::I32 _1c4c9e25b_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>*, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1c4c9e569_special(jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1c4c9e833_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _1c4ca13b2_atof64exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1c4ca17e1_atof32exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1c40b5111_ConvError _1c4ca1d85_atofHex(_1c4c94d23_floatInfo*, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1c40b5111_ConvError _1c4ca225e_atof32(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1c40b5111_ConvError _1c4ca2528_atof64(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1c40b5111_ConvError _1c4ca289c_parseFloatPrefix(jule::Str*, jule::I32);
inline jule::Exceptional<jule::F64> _1c4ca2c21_ParseFloat(jule::Str, jule::I32);
inline void _1c4ca3529_ryuFtoaFixed32(_1c4c9586d_decimalSlice*, jule::U32, jule::I32, jule::I32);
inline void _1c4ca39be_ryuFtoaFixed64(_1c4c9586d_decimalSlice*, jule::U64, jule::I32, jule::I32);
inline void _1c4ca431b_formatDecimal(_1c4c9586d_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I32);
inline void _1c4ca47e4_ryuFtoaShortest(_1c4c9586d_decimalSlice*, jule::U64, jule::I32, _1c4c94d23_floatInfo*);
inline jule::I32 _1c4ca4aad_mulByLog2Log10(jule::I32);
inline jule::I32 _1c4ca4d77_mulByLog10Log2(jule::I32);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1c4ca52a6_computeBounds(jule::U64, jule::I32, _1c4c94d23_floatInfo*);
inline void _1c4ca58c2_ryuDigits(_1c4c9586d_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1c4ca6043_ryuDigits32(_1c4c9586d_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I32);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1c4ca6472_mult64bitPow10(jule::U32, jule::I32, jule::I32);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1c4ca68a1_mult128bitPow10(jule::U64, jule::I32, jule::I32);
inline jule::Bool _1c4ca6c25_divisibleByPow5(jule::U64, jule::I32);
inline __jule_tuple_u32__jule_tuple_u32 _1c4ca6ede_divmod1e9(jule::U64);
inline void _1c4ca9e59_trim(_1c4ca860b_decimal*);
inline void _1c4caa245_rightShift(_1c4ca860b_decimal*, jule::U32);
inline jule::Bool _1c4caa6eb_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I32, jule::Str*);
inline void _1c4caa9a4_leftShift(_1c4ca860b_decimal*, jule::U32);
inline jule::Bool _1c4caad28_shouldRoundUp(_1c4ca860b_decimal*, jule::I32);
inline jule::Str _1c4cac4ab_FmtUint(jule::U64, jule::I32);
inline jule::Str _1c4cac874_FmtInt(jule::I64, jule::I32);
inline jule::Str _1c4cacb3d_Itoa(jule::I32);
inline jule::Str _1c4cace7e_small(jule::I32);
inline jule::Bool _1c4cad248_isPowerOfTwo(jule::I32);
inline __jule_tuple_su8__jule_tuple_str _1c4cad7dc_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline jule::Str _1c4caebd9_RealKindOf(jule::Str);
inline jule::I32 _1c4caeea3_BitsizeOf(jule::Str);
inline jule::Str _1c4cb02e4_IntFromBits(jule::I32);
inline jule::Str _1c4cb05ad_UintFromBits(jule::I32);
inline jule::Str _1c4cb0877_FloatFromBits(jule::I32);
inline jule::Bool _1c4cb14c1_CheckBitFloat(jule::Str, jule::I32);
inline jule::I32 _1c4cb178a_BitsizeOfFloat(jule::F64);
inline jule::I32 _1c4cb1a54_BitsizeOfInt(jule::I64);
inline jule::I32 _1c4cb1d1d_BitsizeOfUint(jule::U64);
inline void _1c4cb1e94_UpdateTarget(void);
inline void _1c4cb211a_init(void);
inline jule::I64 _1c4cb5dcc_MinI(jule::Str);
inline jule::I64 _1c4cb61da_MaxI(jule::Str);
inline jule::U64 _1c4cb64a4_MaxU(jule::Str);
inline jule::F64 _1c4cb66d5_Min(jule::Str);
inline jule::F64 _1c4cb699e_Max(jule::Str);
inline jule::Bool _1c4cb6e22_IsI8Compatible(jule::Str);
inline jule::Bool _1c4cb7230_IsI16Compatible(jule::Str);
inline jule::Bool _1c4cb74e9_IsI32Compatible(jule::Str);
inline jule::Bool _1c4cb783a_IsI64Compatible(jule::Str);
inline jule::Bool _1c4cb7b04_IsU8Compatible(jule::Str);
inline jule::Bool _1c4cb7dbd_IsU16Compatible(jule::Str);
inline jule::Bool _1c4cb8187_IsU32Compatible(jule::Str);
inline jule::Bool _1c4cb852d_IsU64Compatible(jule::Str);
inline jule::Bool _1c4cb87e7_IsF32Compatible(jule::Str);
inline jule::Bool _1c4cb8ab1_IsF64Compatible(jule::Str);
inline jule::Bool _1c4cb8e35_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1c4cb91ee_IsI16Greater(jule::Str);
inline jule::Bool _1c4cb94b8_IsI32Greater(jule::Str);
inline jule::Bool _1c4cb9782_IsI64Greater(jule::Str);
inline jule::Bool _1c4cb9a4b_IsU16Greater(jule::Str);
inline jule::Bool _1c4cb9ebe_IsU32Greater(jule::Str);
inline jule::Bool _1c4cba288_IsU64Greater(jule::Str);
inline jule::Bool _1c4cba552_IsF32Greater(jule::Str);
inline jule::Bool _1c4cba81b_IsF64Greater(jule::Str);
inline jule::Bool _1c4cbab90_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1c4cbbbe6_IsSigInt(jule::Str);
inline jule::Bool _1c4cbc004_IsUnsigInt(jule::Str);
inline jule::Bool _1c4cbc2bd_IsInt(jule::Str);
inline jule::Bool _1c4cbc60e_IsFloat(jule::Str);
inline jule::Bool _1c4cbc8c8_IsNum(jule::Str);
inline jule::Bool _1c4cbcb92_IsSigNum(jule::Str);
inline void _1c4cc6dbb_lshiftUnsig(_1c4cbcda1_Const*, _1c4cbcda1_Const*);
inline void _1c4cc71eb_rshiftUnsig(_1c4cbcda1_Const*, _1c4cbcda1_Const*);
inline jule::Bool _1aab41ca5_FindModuleFile(jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>>*);
inline jule::Str _1aab42080_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1c3983b45_Log> _1aab42349_CheckModuleFile(jule::Str*);
inline jule::Bool _1aab42d83_IsPub(jule::Str*);
inline jule::Bool _1aab88758_IsAscii(jule::I32);
inline jule::I32 _1aaba10de_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1aaba1298_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1aaba15d9_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1aaba18a3_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1aaba1be4_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::Slice<jule::U8> _1aaba2068_strEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::I32 _1aacd3a4b_findFormatPrefix(jule::Slice<jule::U8>*, jule::I32*);
inline jule::Slice<jule::U8> _1aacd3e14_getFormatRange(jule::I32*, jule::Slice<jule::U8>*);
inline void _1aacd4200_FmtByDefault(_1c38d3b83_StrBuilder*, jule::Any*);
inline void _1aacd461d_applyFmtByDefault(_1c38d3b83_StrBuilder*, jule::I32*, jule::Slice<jule::Any>);
inline void _1aacd4a6e_applyFmt(jule::Slice<jule::U8>*, _1c38d3b83_StrBuilder*, jule::I32*, jule::Slice<jule::Any>);
inline jule::Str _1aacd4db0_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1aacd6e39_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aaab837a_parameterUsesGenerics(jule::Ptr<_1aaab5102_ParamIns>*, jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>>*);
inline jule::Ptr<_1aac0465e_TypeSymbol> _1aaabaaca_buildType(jule::Ptr<_1aaa765e1_TypeDecl>);
inline jule::Ptr<_1aabbd062_Value> _1aaabadd8_buildExpr(jule::Ptr<_1aaa7a925_Expr>);
inline jule::Ptr<_1aabeb403_TypeAlias> _1aaabb1a2_buildTypeAlias(jule::Ptr<_1aaa8d031_TypeAliasDecl>);
inline jule::Ptr<_1aaa943bc_Field> _1aaabb4e3_buildField(jule::Ptr<_1aaa91809_FieldDecl>);
inline jule::Slice<jule::Ptr<_1aaa943bc_Field>> _1aaabb7ac_buildFields(jule::Slice<jule::Ptr<_1aaa91809_FieldDecl>>*);
inline jule::Ptr<_1aaa972b0_Struct> _1aaabba76_buildStruct(jule::Ptr<_1aaa92200_StructDecl>);
inline jule::Ptr<_1aaaab868_Param> _1aaabbd40_buildParam(jule::Ptr<_1aaa86e2b_ParamDecl>);
inline jule::Slice<jule::Ptr<_1aaaab868_Param>> _1aaabc1d6_buildParams(jule::Slice<jule::Ptr<_1aaa86e2b_ParamDecl>>*);
inline jule::Ptr<_1aaaab0d7_RetType> _1aaabc4a0_buildRetType(jule::Ptr<_1aaa794d4_RetTypeDecl>);
inline jule::Ptr<_1aaab3199_Fn> _1aaabc769_buildFunc(jule::Ptr<_1aaa8837d_FnDecl>);
inline jule::Slice<jule::Ptr<_1aaab3199_Fn>> _1aaabca33_buildMethods(jule::Slice<jule::Ptr<_1aaa8837d_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1aac0465e_TypeSymbol>> _1aaabccec_buildTraitInherits(jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>>*);
inline jule::Ptr<_1aaac6443_Trait> _1aaabd0b6_buildTrait(jule::Ptr<_1aaa9293c_TraitDecl>);
inline jule::Ptr<_1aaac80c1_EnumItem> _1aaabd380_buildEnumItem(jule::Ptr<_1aaa8e9e4_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1aaac80c1_EnumItem>> _1aaabd649_buildEnumItems(jule::Slice<jule::Ptr<_1aaa8e9e4_EnumItemDecl>>*);
inline jule::Ptr<_1aaac8b3d_Enum> _1aaabdabc_buildEnum(jule::Ptr<_1aaa905a5_EnumDecl>);
inline jule::Ptr<_1aaac9c71_TypeEnumItem> _1aaabdd86_buildTypeEnumItem(jule::Ptr<_1aaa90dd0_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1aaac9c71_TypeEnumItem>> _1aaabe150_buildTypeEnumItems(jule::Slice<jule::Ptr<_1aaa90dd0_TypeEnumItemDecl>>*);
inline jule::Ptr<_1aaaca348_TypeEnum> _1aaabe419_buildTypeEnum(jule::Ptr<_1aaa91540_TypeEnumDecl>);
inline jule::Ptr<_1aab68969_Var> _1aaabe6d3_buildVar(jule::Ptr<_1aaa8945b_VarDecl>);
inline jule::Slice<jule::Ptr<_1aab68969_Var>> _1aaabe99c_buildVars(jule::Slice<jule::Ptr<_1aaa8945b_VarDecl>>);
inline jule::Ptr<_1aaaed3b0_Impl> _1aaabec66_buildImpl(jule::Ptr<_1aaa9309c_Impl>);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae8da0_buildAsComptimeMethodData(jule::Ptr<_1aaab609d_FnIns>*);
inline jule::Ptr<_1aab24c33_ImportInfo> _1aaae91ad_findComptimePackage(jule::Ptr<_1aab45c87_Sema>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae9532_buildComptimeTypeInfoData(jule::Ptr<_1aab45c87_Sema>*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aaae9763_buildComptimeValue(jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Bool _1aaaec733_matchConstraint(jule::Str*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aaaeca41_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1aab0aae8_scopeChecker> _1aab005c1_newScopeCheckerBase(jule::Ptr<_1aab45c87_Sema>*, jule::Ptr<_1aaab609d_FnIns>);
inline jule::Ptr<_1aab0aae8_scopeChecker> _1aab00989_newScopeChecker(jule::Ptr<_1aab45c87_Sema>*, jule::Ptr<_1aaab609d_FnIns>);
inline jule::Ptr<_1aab09652_scopeLabel> _1aab00d0d_findLabelParent(jule::Str*, jule::Ptr<_1aab0aae8_scopeChecker>);
inline jule::Bool _1aab011c6_modelIsGotoScope(jule::Any, jule::Ptr<_1aab037e4_Scope>*);
inline jule::Bool _1aab0154a_stmtIsGotoScope(jule::Any*, jule::Ptr<_1aab037e4_Scope>*);
inline jule::I32 _1aab018be_countMatchType(jule::Ptr<_1aab0792a_Match>*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Slice<jule::Ptr<_1aabbbe1d_Data>> _1aab01b88_getDatasFromTupleData(jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Bool _1aab0254b_checkMut(jule::Ptr<_1aab45c87_Sema>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Bool _1aab02a35_checkAssign(jule::Ptr<_1aab45c87_Sema>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Bool _1aab02cee_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1aab030b8_isValidStForNextSt(jule::Any*);
inline jule::Bool _1aab03382_stmtIsDef(jule::Any*);
inline jule::U32 _1aab1c90c_removeEqFromOp(jule::U32);
inline jule::Ptr<_1aab68969_Var> _1aab22219_findVarInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1aabeb403_TypeAlias> _1aab2268c_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1aaa972b0_Struct> _1aab22abb_findStructInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1aaab3199_Fn> _1aab23072_findFnInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1aaac6443_Trait> _1aab233b3_findTraitInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1aaac8b3d_Enum> _1aab23737_findEnumInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1aaaca348_TypeEnum> _1aab23aab_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>*, jule::Str*);
inline jule::Any _1aab240ea_defByIdentPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1aab2a134_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1aab43427_isValidModelForRef(jule::Any*);
inline _1c3983b45_Log _1aab43955_compilerErr(jule::Ptr<_1c3e3a5e6_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aab43cc9_impIsLookupable(jule::Ptr<_1aab24c33_ImportInfo>*, jule::Str*);
inline void _1aab44082_appendRetVars(jule::Slice<jule::Ptr<_1aab68969_Var>>*, jule::Ptr<_1aaab609d_FnIns>*);
inline void _1aab4436d_appendParamVars(jule::Slice<jule::Ptr<_1aab68969_Var>>*, jule::Ptr<_1aaab609d_FnIns>*);
inline void _1aab44659_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>*, jule::Ptr<_1aaab609d_FnIns>*);
inline jule::Ptr<_1aabb6be8_SymbolTable> _1aab449cd_findFile(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>*, jule::Ptr<_1c3e40db0_File>*);
inline void _1aab44e84_pushSuggestion(_1c3983b45_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1aab66c53_pushImplemented(jule::Ptr<_1aaac6443_Trait>, jule::Ptr<_1aaa972b0_Struct>*);
inline void _1aab6703e_pushImplements(jule::Ptr<_1aaa972b0_Struct>*, jule::Ptr<_1aaac6443_Trait>);
inline jule::Bool _1aaba280a_traitHasReferenceReceiver(jule::Ptr<_1aaac6443_Trait>*);
inline jule::Bool _1aaba2b90_floatAssignable(jule::Str*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Bool _1aaba3014_sigAssignable(jule::Str, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Bool _1aaba33cc_unsigAssignable(jule::Str, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Bool _1aaba3751_intAssignable(jule::Str, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabaee11_checkMutRiskOfStructLit(jule::Ptr<_1aab45c87_Sema>*, jule::Ptr<_1aaaa0719_StructLitExprModel>*);
inline jule::Ptr<_1aabec1e5_TypeKind> _1aabb59a5_lenKind(void);
inline jule::Bool _1aabb5d07_isGoodValueToInfer(jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aaa42c61_Directive> _1aabe58e7_findDirective(jule::Slice<jule::Ptr<_1aaa42c61_Directive>>*, jule::Str);
inline jule::Any _1aabe5cb0_findBuiltinsImport(jule::Str*, jule::Ptr<_1aab24c33_ImportInfo>);
inline void _1aabe5ee1_fitBitsize(jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabe6321_makeStructLitAlloc(jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaaa0719_StructLitExprModel>*);
inline jule::Ptr<_1aab68969_Var> _1aabe6695_buildErrorVar(jule::Ptr<_1aab037e4_Scope>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Any _1aabe6a19_findBuiltinsSema(jule::Str*, jule::Ptr<_1aab45c87_Sema>);
inline jule::Bool _1aabe6cd3_isOkForShifting(jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Bool _1aabe71ac_isInstancedStruct(jule::Ptr<_1aaa9a390_StructIns>);
inline jule::Bool _1aabe7531_isPtrArithmeticCompatible(jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabe781c_applyCastKindModel(jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline void _1aabe7b08_applyCastKind(jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe7d17_buildVoidData(void);
inline jule::Str _1aabe80d1_checkDataForIntegerIndexing(jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabe83bc_applyCastModelByEnum(jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aaac8b3d_Enum>);
inline void _1aabe86a8_castConstByType(jule::Str*, jule::Ptr<_1aabbbe1d_Data>*);
inline void _1aabe8b4d_updateModelToGenericIns(jule::Any*, jule::Ptr<_1aaab609d_FnIns>*);
inline jule::Bool _1aabe8ec2_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1aaa76ee8_SubIdentTypeDecl>*);
inline jule::Str _1aabe928b_constoa(jule::Ptr<_1c4cbcda1_Const>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aabe9610_evalEnumStatic(jule::Ptr<_1aaac8b3d_Enum>*, jule::Ptr<_1aaac80c1_EnumItem>*);
inline jule::Ptr<_1aaaa0719_StructLitExprModel> _1aabe98c9_isLitBased(jule::Any*);
inline jule::Bool _1aac17be4_kindUsesGenerics(jule::Ptr<_1aabec1e5_TypeKind>*, jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>>*);
inline jule::Bool _1aac180ac_hasDirective(jule::Slice<jule::Ptr<_1aaa42c61_Directive>>*, jule::Str);
inline jule::Bool _1aac18376_canGetPtr(jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Bool _1aac1d524_isValidForSptrType(jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aac1d7dd_isValidForRef(jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Bool _1aac1daa7_isBuiltinStrConvertable(jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Str _1aac1dd71_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aac05066_Prim> _1aac1e217_buildPrimType(jule::Str);
inline jule::Ptr<_1aaa972b0_Struct> _1aac1e4d1_getStructFromKind(jule::Ptr<_1aabec1e5_TypeKind>);
inline void _1aac1e7bc_applyImplicitCast(jule::Ptr<_1aabec1e5_TypeKind>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Bool _1aac1ea86_validTypeForXof(jule::Ptr<_1aabec1e5_TypeKind>*);
inline __jule_tuple_x_1aabb6be8_SymbolTable__jule_tuple_s_1c3983b45_Log _1aac22b22_buildSymbols(jule::Ptr<_1aaa41996_Ast>*, jule::Trait<_1aab21d1d_Importer>*, jule::Ptr<_1aaac032c_symbolBuilder>);
inline __jule_tuple_x_1aab27b59_Package__jule_tuple_s_1c3983b45_Log _1aac23095_analyzePackage(jule::Slice<jule::Ptr<_1aaa41996_Ast>>*, jule::Trait<_1aab21d1d_Importer>*, jule::I32*);
inline __jule_tuple_x_1aab27b59_Package__jule_tuple_s_1c3983b45_Log _1aac234c4_AnalyzePackage(jule::Slice<jule::Ptr<_1aaa41996_Ast>>, jule::Trait<_1aab21d1d_Importer>, jule::I32);
inline jule::Ptr<_1aaab609d_FnIns> _1aacd7753_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1aabeb403_TypeAlias> _1aacd7a61_primTypeAlias(jule::Ptr<_1aabec1e5_TypeKind>*);
inline jule::Ptr<_1aab68969_Var> _1aacdb669_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1aabeb403_TypeAlias> _1aacdb89a_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1aacdbb64_findBuiltinDef(jule::Str*);
inline jule::Any _1aacdbe2d_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1aacdc1e7_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1aacdc58d_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1aacdc857_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1aacdcbcb_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1aabbbe1d_Data> _1aacdd10a_builtinCallerCommonPlain(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aacdd539_builtinCallerCommon(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aacdd968_builtinCallerCommonMut(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aacddcdc_builtinCallerError(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aacde21b_builtinCallerOut(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aacde804_builtinCallerOutln(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aacdec33_builtinCallerNew(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace0162_builtinCallerPanic(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace0591_builtinCallerMake(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace09c0_builtinCallerAppend(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace0ea9_callerCopySlice(jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace13d8_builtinCallerCopy(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace175c_callerLenSlice(jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace1ad1_callerLenMap(jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace1e55_callerLenArr(jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace22c9_callerLenStr(jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace264d_callerLenComptime(jule::Ptr<_1aabbbe1d_Data>*, jule::I32);
inline jule::Ptr<_1aabbbe1d_Data> _1aace2a7c_builtinCallerLen(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace2e01_callerCapSlice(jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace3330_builtinCallerCap(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace3819_callerDeleteMap(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace3de1_builtinCallerDelete(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace42a9_builtinCallerClone(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace46d8_builtinCallerAssert(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace4b17_builtinCallerStdComptimeTypeOf(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace5046_builtinCallerStdComptimeValueOf(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace5310_rangeData(jule::Trait<_1aaacc504_comptimeRangeKind>);
inline jule::Ptr<_1aabbbe1d_Data> _1aace573e_builtinCallerStdComptimeRange(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace5b6d_builtinCallerStdComptimeLine(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace609c_builtinCallerStdComptimeFile(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace64cb_builtinCallerStdComptimeFiles(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace690a_builtinCallerStdMemSizeOf(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace6d39_builtinCallerStdMemAlignOf(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace7268_builtinCallerStdMemFree(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace7697_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace7ac6_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace8005_builtinCallerStdDebugOut(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1aabbbe1d_Data> _1aace8434_builtinCallerStdDebugOutln(jule::Ptr<_1aabbdb12_Eval>*, jule::Ptr<_1aaa7e72b_FnCallExpr>*, jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Ptr<_1ab6d1943_FileInfo> _1ab7261d5_ParseFile(jule::Ptr<_1c3e40db0_File>);
inline __jule_tuple_x_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log _1ab7267ac_parseFileset(jule::Ptr<_1c3e40db0_File>);
inline jule::Ptr<_1aaa866de_ScopeTree> _1ab72723b_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1ab7275b0_isSt(jule::Ptr<_1c3e3a5e6_Token>, jule::Ptr<_1c3e3a5e6_Token>);
inline jule::Bool _1ab727934_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::I32*);
inline __jule_tuple_int__jule_tuple_bool _1ab727cec_nextStPos(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::I32);
inline __jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_bool _1ab728171_skipSt(jule::I32*, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Slice<jule::Ptr<_1ab7284a1_stmt>> _1ab728858_splitStmts(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Bool _1ab741b3a_isTypeOp(jule::U32*);
inline jule::Bool _1ab741e48_isTypeRange(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _1ab742212_getBlockExpr(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline __jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_sx_1c3e3a5e6_Token _1ab7425ca_splitDelim(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::U32);
inline jule::I32 _1ab742894_findLowestPrecOp(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa7c350_IdentExpr> _1ab742b5d_buildIdentExpr(jule::Ptr<_1c3e3a5e6_Token>*);
inline __jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_int _1ab742e27_getRangeExprTokens(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Bool _1ab743c2a_checkAssignTokens(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline _1c3983b45_Log _1ab744e07_makeErr(jule::I32, jule::I32, jule::Ptr<_1c3e40db0_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _1ab745402_range(jule::I32*, jule::U32, jule::U32, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline __jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_sx_1c3e3a5e6_Token _1ab7456bb_rangeLast(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline __jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log _1ab745b72_parts(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*, jule::U32, jule::Bool);
inline jule::U32 _1ab745e3b_getCloseOfBrace(jule::U32);
inline _1c3983b45_Log _1ab74636a_compilerErr(jule::Ptr<_1c3e3a5e6_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1ab746711_pushSuggestion(_1c3983b45_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1ab746aa7_tokstoa(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>*);
inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab7585d0_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1aadd81a0_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1aadd82e3_checkArch(jule::Str);
inline jule::Bool _1aae02d9b_isPassFileAnnotation(jule::Str);
inline void _1aae04023_setOsVars(jule::Slice<jule::Str>*);
inline void _1aae04298_setArchVars(jule::Slice<jule::Str>*);
inline void _1aae04584_initVars(jule::Slice<jule::Str>*, _1aae03c04_CompileInfo*);
inline jule::Slice<jule::U8> _1ab75c705_readBuff(jule::Str);
inline _1c3983b45_Log _1ab75c9d0_flatCompilerErr(jule::Str);
inline void _1ab7622ed_pushPasses(jule::Ptr<_1aab27b59_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1ab7626b6_getAllUniquePasses(jule::Ptr<_1aab27b59_Package>*, jule::Slice<jule::Ptr<_1aab24c33_ImportInfo>>);
inline _1aae03c04_CompileInfo _1ab7628c5_buildCompileInfo(void);
inline void _1ac59785d_EliminateDefines(jule::Ptr<_1ab76097d_IR>*);
inline jule::Ptr<_1aaa42c61_Directive> _1ac597c26_findDirective(jule::Slice<jule::Ptr<_1aaa42c61_Directive>>*, jule::Str);
inline jule::Bool _1ac59809a_hasDirective(jule::Slice<jule::Ptr<_1aaa42c61_Directive>>*, jule::Str);
inline jule::Bool _1ac598463_isTraitMethod(jule::Ptr<_1aaa9a390_StructIns>*, jule::Ptr<_1aaab609d_FnIns>*);
inline void _1ac59c467_eliminateDeadCodeOfScope(jule::Ptr<_1aab037e4_Scope>);
inline void _1ac59c6dc_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1aaab3199_Fn>>*);
inline void _1ac59c91d_eliminateFunctionsScopePackage(jule::Ptr<_1aab27b59_Package>*);
inline void _1ac59cbc6_eliminateScopePackage(jule::Ptr<_1aab27b59_Package>*);
inline void _1ac59ce07_EliminateScopes(jule::Ptr<_1ab76097d_IR>*);
inline jule::Bool _1aaceeade_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1aaceedec_isConstantValidConditionalCase(jule::Ptr<_1aab03c12_If>*);
inline jule::Bool _1aad001b6_isUnreachableExpr(jule::Any*);
inline jule::Bool _1aad00507_isConstantValidMatchCase(jule::Ptr<_1aab08563_Case>*);
inline jule::Bool _1aad007c1_isUnreachableConditionalCase(jule::Ptr<_1aab03c12_If>*);
inline jule::Bool _1aad00a8a_isUnreachableMatchCase(jule::Ptr<_1aab08563_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1aad09236_checkForBitShiftOpt(jule::Ptr<_1aaa9e471_OperandExprModel>*, jule::Ptr<_1aaa9e471_OperandExprModel>*);
inline jule::Bool _1aad095ee_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1aad09d80_doInternalNosafeStobs(_1aad01926_exprOptimizer*, _1ab764cd4_stdCacheData*, jule::Ptr<_1aaaa194b_FnCallExprModel>*);
inline void _1ab765477_buildCache(jule::Ptr<_1ab76097d_IR>*);
inline void _1ab7656b9_buildStdInternalNosafeCache(jule::Ptr<_1ab76097d_IR>*);
inline void _1ab765a60_pushCache(jule::Ptr<_1aab27b59_Package>*, jule::Str, jule::Fn<void(_1aad01926_exprOptimizer*,_1ab764cd4_stdCacheData*,jule::Ptr<_1aaaa194b_FnCallExprModel>*)>);
inline jule::Ptr<_1aaab609d_FnIns> _1ab765e28_getFunc(jule::Ptr<_1aab27b59_Package>*, jule::Str*);
inline jule::Ptr<_1aab27b59_Package> _1ab76629c_getPackage(jule::Ptr<_1ab76097d_IR>*, jule::Str*);
inline void _1ab76890e_PushOptLevel(jule::I32);
inline void _1ac5a7c03_detectEnabled(void);
inline void _1ab38ee1a_Throw(jule::Str);
inline jule::U64 _1a61899b7_unix(void);
inline jule::Bool _1a60b6c57_isCopyOptimizable(jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Bool _1a60b7120_isIterCopyOptimizable(jule::Ptr<_1aabbbe1d_Data>*, jule::Ptr<_1aab68969_Var>*);
inline jule::Str _1a60c79c1_decomposeCommonEsq(jule::U8);
inline jule::Str _1a60c7cce_sbtoa(jule::U8);
inline void _1a60c80ba_cstrBytes(_1c38d3b83_StrBuilder*, jule::Str);
inline void _1a60c83ea_cstrLit(_1c38d3b83_StrBuilder*, jule::Str);
inline void _1a60c8791_ftoa(_1c38d3b83_StrBuilder*, jule::F64, jule::I32);
inline void _1a60c8a7c_itoa(_1c38d3b83_StrBuilder*, jule::I64);
inline void _1a60c8d68_utoa(_1c38d3b83_StrBuilder*, jule::U64);
inline jule::Bool _1a60c9242_isForwarded(jule::Ptr<_1aab037e4_Scope>*);
inline jule::Bool _1a60c950b_isBuiltinCallHasDebuginf(jule::Ptr<_1aaaa194b_FnCallExprModel>*);
inline jule::Bool _1a60c97c5_isExprComesFromBind(jule::Ptr<_1aabbbe1d_Data>*);
inline jule::Bool _1a60c9a8e_isAny(jule::Ptr<_1aabec1e5_TypeKind>*);
inline void _1a619e449_iterFiles(jule::Ptr<_1aab27b59_Package>*, jule::Fn<void(jule::Ptr<_1aabb6be8_SymbolTable>*)>);
inline jule::Str _1a619e757_concatAllParts(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>);
inline jule::Bool _1a619eacb_containsTraitMethod(jule::Ptr<_1aaac6443_Trait>*, jule::Str*);
inline void _1a619ee0b_pushMethodsFromInherit(jule::Ptr<_1aaac6443_Trait>*, jule::Ptr<_1aaac6443_Trait>*);
inline void _1a61a01e7_pushMethodsFromInherits(jule::Ptr<_1aaac6443_Trait>*, jule::Ptr<_1aaac6443_Trait>*);
inline jule::Bool _1a61a04b1_isOpMethod(jule::Ptr<_1aaab3199_Fn>*);
inline jule::Bool _1a61a077a_isHeadDecl(jule::Ptr<_1aaab3199_Fn>*);
inline jule::Ptr<_1aaa42c61_Directive> _1a647a758_findDirective(jule::Slice<jule::Ptr<_1aaa42c61_Directive>>*, jule::Str);
inline jule::Bool _1a647ab21_hasDirective(jule::Slice<jule::Ptr<_1aaa42c61_Directive>>*, jule::Str);
inline jule::Bool _1a647adda_shouldInitialized(jule::Ptr<_1aabec1e5_TypeKind>*);
inline void _1c3a98bb1_printErrorMessage(jule::Str);
inline void _1c3a98e36_help(jule::Slice<jule::Str>*);
inline void _1c3a99167_version(jule::Slice<jule::Str>*);
inline void _1c3a99365_toolDistos(void);
inline void _1c3a994db_toolDistarch(void);
inline void _1c3a9971c_tool(jule::Slice<jule::Str>*);
inline void _1c3a9994d_julenv(jule::Slice<jule::Str>*);
inline void _1c3a99c5b_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1c3a9a025_processCommand(jule::Slice<jule::Str>*);
inline void _1c3a9a19b_showInfo(void);
void entry_point(void);
inline void _1a64e8a6d_init(void);
inline jule::Ptr<_206b791d1_File> _1a64e8d48_openOutput(jule::Str*);
inline void _1a64e8ebe_clearObjects(void);
inline void _1a64e92ee_compileIr(jule::Str, jule::Str);
inline jule::Bool _1a64e95b8_isCppSourceFile(jule::Str);
inline void _1a64e97e9_pushCompCmdClang(_1c38d3b83_StrBuilder*);
inline void _1a64e9a2a_pushCompCmdGcc(_1c38d3b83_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1a64e9eae_genCompileCmd(jule::Str, jule::Ptr<_1ab76097d_IR>*);
inline jule::Str _1a64ea1bd_getCompilePath(void);
inline void _1a64ea3ee_applyTargetIndependentOptimizations(jule::Ptr<_1ab76097d_IR>*);
inline void _1a64ea575_checkCompilerFlag(void);
inline void _1a64ea7a6_checkTargetArch(jule::Str);
inline void _1a64ea9d7_checkTargetOs(jule::Str);
inline void _1a64eac18_checkTargetFlag(jule::Str*);
inline void _1a64eae49_checkOptFlag(jule::Str*);
inline void _1a64eb2ce_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1a64eb543_checkFlags(jule::Slice<jule::Str>*);
inline void _1a64eb774_setupSemaFlags(jule::I32*);
inline jule::Ptr<_1ab76097d_IR> _1a64eba3d_buildIr(jule::Slice<jule::Str>*);
inline void _1a64ebc6e_compileCommand(jule::Slice<jule::Str>*);


struct _1aaacc504_comptimeRangeKindMptrData {
	void(*_1aaacbbeb_ready)(jule::Trait<_1aaacc504_comptimeRangeKind>, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
	void(*_1aaacc119_step)(jule::Trait<_1aaacc504_comptimeRangeKind>, jule::I32, jule::Ptr<_1aab68969_Var>*, jule::Ptr<_1aab68969_Var>*);
	jule::I32(*_1aaacc3a0_len)(jule::Trait<_1aaacc504_comptimeRangeKind>);
};

struct _1aab21d1d_ImporterMptrData {
	void(*_1aab20aec_SetModPath)(jule::Trait<_1aab21d1d_Importer>, jule::Str);
	jule::Str(*_1aab20d83_GetModPath)(jule::Trait<_1aab21d1d_Importer>);
	jule::Str(*_1aab211c4_ModById)(jule::Trait<_1aab21d1d_Importer>, jule::I32);
	jule::Ptr<_1aab24c33_ImportInfo>(*_1aab21515_GetImport)(jule::Trait<_1aab21d1d_Importer>, jule::Str);
	__jule_tuple_sx_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log(*_1aab21911_ImportPackage)(jule::Trait<_1aab21d1d_Importer>, jule::Str, jule::Bool);
	void(*_1aab21bb9_Imported)(jule::Trait<_1aab21d1d_Importer>, jule::Ptr<_1aab24c33_ImportInfo>);
};

struct _1aabebc3e_KindMptrData {
	jule::Str(*_1aabeb799_Str)(jule::Trait<_1aabebc3e_Kind>);
	jule::Bool(*_1aabebada_Equal)(jule::Trait<_1aabebc3e_Kind>, jule::Ptr<_1aabec1e5_TypeKind>);
};

struct _1aac21d30_LookupMptrData {
	jule::Ptr<_1aab24c33_ImportInfo>(*_1aac20119_SelectPackage)(jule::Trait<_1aac21d30_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)>);
	jule::Ptr<_1aab68969_Var>(*_1aac20515_FindVar)(jule::Trait<_1aac21d30_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1aabeb403_TypeAlias>(*_1aac20911_FindTypeAlias)(jule::Trait<_1aac21d30_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1aaa972b0_Struct>(*_1aac20d0c_FindStruct)(jule::Trait<_1aac21d30_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1aaab3199_Fn>(*_1aac21208_FindFn)(jule::Trait<_1aac21d30_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1aaac6443_Trait>(*_1aac21549_FindTrait)(jule::Trait<_1aac21d30_Lookup>, jule::Str);
	jule::Ptr<_1aaac8b3d_Enum>(*_1aac2188a_FindEnum)(jule::Trait<_1aac21d30_Lookup>, jule::Str);
	jule::Ptr<_1aaaca348_TypeEnum>(*_1aac21bcb_FindTypeEnum)(jule::Trait<_1aac21d30_Lookup>, jule::Str);
};

struct _1a64e1769_CommonFlagMptrData {
	jule::Str(*_1a64b01c7_Name)(jule::Trait<_1a64e1769_CommonFlag>);
	jule::I32(*_1a64b0370_Short)(jule::Trait<_1a64e1769_CommonFlag>);
	jule::Str(*_1a64e14d3_What)(jule::Trait<_1a64e1769_CommonFlag>);
	void(*_1a64e1626_Reset)(jule::Trait<_1a64e1769_CommonFlag>);
};



inline void _1aaacbbeb_ready_comptimeRangeKind_0(jule::Trait<_1aaacc504_comptimeRangeKind> _self_, jule::Ptr<_1aab68969_Var>* _1329_keyA, jule::Ptr<_1aab68969_Var>* _1346_keyB) {
	_1aaad0a46_ready(_self_.safe_ptr<_1aaacedec_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _1aaacc119_step_comptimeRangeKind_0(jule::Trait<_1aaacc504_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_1aab68969_Var>* _1436_keyA, jule::Ptr<_1aab68969_Var>* _1453_keyB) {
	_1aaad0e64_step(_self_.safe_ptr<_1aaacedec_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _1aaacc3a0_len_comptimeRangeKind_0(jule::Trait<_1aaacc504_comptimeRangeKind> _self_) {
	return _1aaad11ea_len(_self_.safe_ptr<_1aaacedec_comptimeStructFields>());
}
inline void _1aaacbbeb_ready_comptimeRangeKind_1(jule::Trait<_1aaacc504_comptimeRangeKind> _self_, jule::Ptr<_1aab68969_Var>* _1329_keyA, jule::Ptr<_1aab68969_Var>* _1346_keyB) {
	_1aaad3d02_ready(_self_.safe_ptr<_1aaad31b9_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _1aaacc119_step_comptimeRangeKind_1(jule::Trait<_1aaacc504_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_1aab68969_Var>* _1436_keyA, jule::Ptr<_1aab68969_Var>* _1453_keyB) {
	_1aaad4220_step(_self_.safe_ptr<_1aaad31b9_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _1aaacc3a0_len_comptimeRangeKind_1(jule::Trait<_1aaacc504_comptimeRangeKind> _self_) {
	return _1aaad44a6_len(_self_.safe_ptr<_1aaad31b9_comptimeStatics>());
}
inline void _1aaacbbeb_ready_comptimeRangeKind_2(jule::Trait<_1aaacc504_comptimeRangeKind> _self_, jule::Ptr<_1aab68969_Var>* _1329_keyA, jule::Ptr<_1aab68969_Var>* _1346_keyB) {
	_1aaad6794_ready(_self_.safe_ptr<_1aaad5ac3_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _1aaacc119_step_comptimeRangeKind_2(jule::Trait<_1aaacc504_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_1aab68969_Var>* _1436_keyA, jule::Ptr<_1aab68969_Var>* _1453_keyB) {
	_1aaad6bb2_step(_self_.safe_ptr<_1aaad5ac3_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _1aaacc3a0_len_comptimeRangeKind_2(jule::Trait<_1aaacc504_comptimeRangeKind> _self_) {
	return _1aaad6e48_len(_self_.safe_ptr<_1aaad5ac3_comptimeEnumFields>());
}
inline void _1aaacbbeb_ready_comptimeRangeKind_3(jule::Trait<_1aaacc504_comptimeRangeKind> _self_, jule::Ptr<_1aab68969_Var>* _1329_keyA, jule::Ptr<_1aab68969_Var>* _1346_keyB) {
	_1aaada105_ready(_self_.safe_ptr<_1aaad94bc_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _1aaacc119_step_comptimeRangeKind_3(jule::Trait<_1aaacc504_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_1aab68969_Var>* _1436_keyA, jule::Ptr<_1aab68969_Var>* _1453_keyB) {
	_1aaada523_step(_self_.safe_ptr<_1aaad94bc_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _1aaacc3a0_len_comptimeRangeKind_3(jule::Trait<_1aaacc504_comptimeRangeKind> _self_) {
	return _1aaada7a9_len(_self_.safe_ptr<_1aaad94bc_comptimeParams>());
}
inline void _1aaacbbeb_ready_comptimeRangeKind_4(jule::Trait<_1aaacc504_comptimeRangeKind> _self_, jule::Ptr<_1aab68969_Var>* _1329_keyA, jule::Ptr<_1aab68969_Var>* _1346_keyB) {
	_1aaadb700_ready(_self_.safe_ptr<_1aaadaab7_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _1aaacc119_step_comptimeRangeKind_4(jule::Trait<_1aaacc504_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_1aab68969_Var>* _1436_keyA, jule::Ptr<_1aab68969_Var>* _1453_keyB) {
	_1aaadbb1d_step(_self_.safe_ptr<_1aaadaab7_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _1aaacc3a0_len_comptimeRangeKind_4(jule::Trait<_1aaacc504_comptimeRangeKind> _self_) {
	return _1aaadbda4_len(_self_.safe_ptr<_1aaadaab7_comptimeTypeInfos>());
}
inline void _1aaacbbeb_ready_comptimeRangeKind_5(jule::Trait<_1aaacc504_comptimeRangeKind> _self_, jule::Ptr<_1aab68969_Var>* _1329_keyA, jule::Ptr<_1aab68969_Var>* _1346_keyB) {
	_1aaae674e_ready(_self_.safe_ptr<_1aaae5b16_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _1aaacc119_step_comptimeRangeKind_5(jule::Trait<_1aaacc504_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_1aab68969_Var>* _1436_keyA, jule::Ptr<_1aab68969_Var>* _1453_keyB) {
	_1aaae6b6c_step(_self_.safe_ptr<_1aaae5b16_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _1aaacc3a0_len_comptimeRangeKind_5(jule::Trait<_1aaacc504_comptimeRangeKind> _self_) {
	return _1aaae6e03_len(_self_.safe_ptr<_1aaae5b16_comptimeFiles>());
}
inline void _1aab20aec_SetModPath_Importer_0(jule::Trait<_1aab21d1d_Importer> _self_, jule::Str _1729_path) {
	_1ab75da8b_SetModPath(_self_.safe_ptr<_1ab75ceb9_JuleImporter>(), _1729_path);
}
inline jule::Str _1aab20d83_GetModPath_Importer_0(jule::Trait<_1aab21d1d_Importer> _self_) {
	return _1ab75dd22_GetModPath(_self_.safe_ptr<_1ab75ceb9_JuleImporter>());
}
inline jule::Str _1aab211c4_ModById_Importer_0(jule::Trait<_1aab21d1d_Importer> _self_, jule::I32 _2522_id) {
	return _1ab75e163_ModById(_self_.safe_ptr<_1ab75ceb9_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1aab24c33_ImportInfo> _1aab21515_GetImport_Importer_0(jule::Trait<_1aab21d1d_Importer> _self_, jule::Str _3128_path) {
	return _1ab75e4a4_GetImport(_self_.safe_ptr<_1ab75ceb9_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log _1aab21911_ImportPackage_Importer_0(jule::Trait<_1aab21d1d_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1ab75e8a0_ImportPackage(_self_.safe_ptr<_1ab75ceb9_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1aab21bb9_Imported_Importer_0(jule::Trait<_1aab21d1d_Importer> _self_, jule::Ptr<_1aab24c33_ImportInfo> _4131__0) {
	_1ab75eb58_Imported(_self_.safe_ptr<_1ab75ceb9_JuleImporter>(), _4131__0);
}
inline jule::Str _1aabeb799_Str_Kind_0(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaa9a714_Str(_self_.safe_ptr<_1aaa9a390_StructIns>());
}
inline jule::Bool _1aabebada_Equal_Kind_0(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaa9aa55_Equal(_self_.data.as<_1aaa9a390_StructIns>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_1(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaab63de_Str(_self_.safe_ptr<_1aaab609d_FnIns>());
}
inline jule::Bool _1aabebada_Equal_Kind_1(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaab6730_Equal(_self_.data.as<_1aaab609d_FnIns>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_2(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaac680b_Str(_self_.safe_ptr<_1aaac6443_Trait>());
}
inline jule::Bool _1aabebada_Equal_Kind_2(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaac6b4c_Equal(_self_.data.as<_1aaac6443_Trait>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_3(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaac8eb2_Str(_self_.safe_ptr<_1aaac8b3d_Enum>());
}
inline jule::Bool _1aabebada_Equal_Kind_3(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaac9303_Equal(_self_.data.as<_1aaac8b3d_Enum>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_4(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaaca689_Str(_self_.safe_ptr<_1aaaca348_TypeEnum>());
}
inline jule::Bool _1aabebada_Equal_Kind_4(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaaca9ca_Equal(_self_.data.as<_1aaaca348_TypeEnum>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_5(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaaccaa9_Str(_self_.safe_ptr<_1aaacc6e1_comptimeRange>());
}
inline jule::Bool _1aabebada_Equal_Kind_5(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaaccdea_Equal(_self_.data.as<_1aaacc6e1_comptimeRange>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_6(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaacd5c1_Str(_self_.safe_ptr<_1aaacd24c_comptimeStructField>());
}
inline jule::Bool _1aabebada_Equal_Kind_6(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaacd912_Equal(_self_.data.as<_1aaacd24c_comptimeStructField>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_7(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaad0282_Str(_self_.safe_ptr<_1aaacedec_comptimeStructFields>());
}
inline jule::Bool _1aabebada_Equal_Kind_7(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaad05c3_Equal(_self_.data.as<_1aaacedec_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_8(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaad187c_Str(_self_.safe_ptr<_1aaad1508_comptimeStatic>());
}
inline jule::Bool _1aabebada_Equal_Kind_8(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaad1bbd_Equal(_self_.data.as<_1aaad1508_comptimeStatic>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_9(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaad353d_Str(_self_.safe_ptr<_1aaad31b9_comptimeStatics>());
}
inline jule::Bool _1aabebada_Equal_Kind_9(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaad387e_Equal(_self_.data.as<_1aaad31b9_comptimeStatics>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_10(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaad4b38_Str(_self_.safe_ptr<_1aaad47b4_comptimeEnumField>());
}
inline jule::Bool _1aabebada_Equal_Kind_10(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaad4e79_Equal(_self_.data.as<_1aaad47b4_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_11(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaad6057_Str(_self_.safe_ptr<_1aaad5ac3_comptimeEnumFields>());
}
inline jule::Bool _1aabebada_Equal_Kind_11(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaad6398_Equal(_self_.data.as<_1aaad5ac3_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_12(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaad75ca_Str(_self_.safe_ptr<_1aaad7256_comptimeParam>());
}
inline jule::Bool _1aabebada_Equal_Kind_12(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaad791b_Equal(_self_.data.as<_1aaad7256_comptimeParam>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_13(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaad9841_Str(_self_.safe_ptr<_1aaad94bc_comptimeParams>());
}
inline jule::Bool _1aabebada_Equal_Kind_13(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaad9b82_Equal(_self_.data.as<_1aaad94bc_comptimeParams>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_14(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaadae3b_Str(_self_.safe_ptr<_1aaadaab7_comptimeTypeInfos>());
}
inline jule::Bool _1aabebada_Equal_Kind_14(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaadb27c_Equal(_self_.data.as<_1aaadaab7_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_15(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaadc536_Str(_self_.safe_ptr<_1aaadc1b2_comptimeTypeInfo>());
}
inline jule::Bool _1aabebada_Equal_Kind_15(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaadc877_Equal(_self_.data.as<_1aaadc1b2_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_16(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaae363b_Str(_self_.safe_ptr<_1aaae32b7_comptimeValue>());
}
inline jule::Bool _1aabebada_Equal_Kind_16(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaae397c_Equal(_self_.data.as<_1aaae32b7_comptimeValue>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_17(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaae5e8a_Str(_self_.safe_ptr<_1aaae5b16_comptimeFiles>());
}
inline jule::Bool _1aabebada_Equal_Kind_17(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaae62cb_Equal(_self_.data.as<_1aaae5b16_comptimeFiles>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_18(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aaae7585_Str(_self_.safe_ptr<_1aaae7211_comptimeFile>());
}
inline jule::Bool _1aabebada_Equal_Kind_18(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aaae78c6_Equal(_self_.data.as<_1aaae7211_comptimeFile>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_19(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aabec5ad_Str(_self_.safe_ptr<_1aabec1e5_TypeKind>());
}
inline jule::Bool _1aabebada_Equal_Kind_19(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aabec8ee_Equal(_self_.data.as<_1aabec1e5_TypeKind>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_20(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aac053a7_Str(_self_.safe_ptr<_1aac05066_Prim>());
}
inline jule::Bool _1aabebada_Equal_Kind_20(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aac056e8_Equal(_self_.data.as<_1aac05066_Prim>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_21(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aac08e16_Str(_self_.safe_ptr<_1aac08a92_Sptr>());
}
inline jule::Bool _1aabebada_Equal_Kind_21(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aac09257_Equal(_self_.data.as<_1aac08a92_Sptr>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_22(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aac099e9_Str(_self_.safe_ptr<_1aac09565_Slc>());
}
inline jule::Bool _1aabebada_Equal_Kind_22(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aac09d3a_Equal(_self_.data.as<_1aac09565_Slc>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_23(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aac0a4cd_Str(_self_.safe_ptr<_1aac0a159_Tuple>());
}
inline jule::Bool _1aabebada_Equal_Kind_23(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aac0a81e_Equal(_self_.data.as<_1aac0a159_Tuple>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_24(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aac0b07d_Str(_self_.safe_ptr<_1aac0ac09_Map>());
}
inline jule::Bool _1aabebada_Equal_Kind_24(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aac0b3be_Equal(_self_.data.as<_1aac0ac09_Map>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_25(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aac0bc0a_Str(_self_.safe_ptr<_1aac0b886_Arr>());
}
inline jule::Bool _1aabebada_Equal_Kind_25(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aac0c04b_Equal(_self_.data.as<_1aac0b886_Arr>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_26(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1aac0c6cd_Str(_self_.safe_ptr<_1aac0c359_Ptr>());
}
inline jule::Bool _1aabebada_Equal_Kind_26(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1aac0ca1e_Equal(_self_.data.as<_1aac0c359_Ptr>(), _5621_other);
}
inline jule::Str _1aabeb799_Str_Kind_27(jule::Trait<_1aabebc3e_Kind> _self_) {
	return _1a61a1a01_Str(_self_.safe_ptr<_1a61a166b_customType>());
}
inline jule::Bool _1aabebada_Equal_Kind_27(jule::Trait<_1aabebc3e_Kind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _5621_other) {
	return _1a61a1d42_Equal(_self_.data.as<_1a61a166b_customType>(), _5621_other);
}
inline jule::Ptr<_1aab24c33_ImportInfo> _1aac20119_SelectPackage_Lookup_0(jule::Trait<_1aac21d30_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)> _932_selector) {
	return _1aab0b08d_SelectPackage(_self_.safe_ptr<_1aab0aae8_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1aab68969_Var> _1aac20515_FindVar_Lookup_0(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1aab0b489_FindVar(_self_.safe_ptr<_1aab0aae8_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1aabeb403_TypeAlias> _1aac20911_FindTypeAlias_Lookup_0(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1aab0b885_FindTypeAlias(_self_.safe_ptr<_1aab0aae8_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1aaa972b0_Struct> _1aac20d0c_FindStruct_Lookup_0(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1aab0bc81_FindStruct(_self_.safe_ptr<_1aab0aae8_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1aaab3199_Fn> _1aac21208_FindFn_Lookup_0(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1aab0c17c_FindFn(_self_.safe_ptr<_1aab0aae8_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1aaac6443_Trait> _1aac21549_FindTrait_Lookup_0(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2928_ident) {
	return _1aab0c4bd_FindTrait(_self_.safe_ptr<_1aab0aae8_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1aaac8b3d_Enum> _1aac2188a_FindEnum_Lookup_0(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _3327_ident) {
	return _1aab0c80e_FindEnum(_self_.safe_ptr<_1aab0aae8_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1aaaca348_TypeEnum> _1aac21bcb_FindTypeEnum_Lookup_0(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _3731_ident) {
	return _1aab0cb50_FindTypeEnum(_self_.safe_ptr<_1aab0aae8_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1aab24c33_ImportInfo> _1aac20119_SelectPackage_Lookup_1(jule::Trait<_1aac21d30_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)> _932_selector) {
	return _1aab2521c_SelectPackage(_self_.safe_ptr<_1aab24c33_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1aab68969_Var> _1aac20515_FindVar_Lookup_1(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1aab25618_FindVar(_self_.safe_ptr<_1aab24c33_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1aabeb403_TypeAlias> _1aac20911_FindTypeAlias_Lookup_1(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1aab25a14_FindTypeAlias(_self_.safe_ptr<_1aab24c33_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1aaa972b0_Struct> _1aac20d0c_FindStruct_Lookup_1(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1aab25e10_FindStruct(_self_.safe_ptr<_1aab24c33_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1aaab3199_Fn> _1aac21208_FindFn_Lookup_1(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1aab2630b_FindFn(_self_.safe_ptr<_1aab24c33_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1aaac6443_Trait> _1aac21549_FindTrait_Lookup_1(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2928_ident) {
	return _1aab2664c_FindTrait(_self_.safe_ptr<_1aab24c33_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1aaac8b3d_Enum> _1aac2188a_FindEnum_Lookup_1(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _3327_ident) {
	return _1aab2698d_FindEnum(_self_.safe_ptr<_1aab24c33_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1aaaca348_TypeEnum> _1aac21bcb_FindTypeEnum_Lookup_1(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _3731_ident) {
	return _1aab26cce_FindTypeEnum(_self_.safe_ptr<_1aab24c33_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1aab24c33_ImportInfo> _1aac20119_SelectPackage_Lookup_2(jule::Trait<_1aac21d30_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)> _932_selector) {
	return _1aab280ee_SelectPackage(_self_.safe_ptr<_1aab27b59_Package>(), _932_selector);
}
inline jule::Ptr<_1aab68969_Var> _1aac20515_FindVar_Lookup_2(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1aab284ea_FindVar(_self_.safe_ptr<_1aab27b59_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1aabeb403_TypeAlias> _1aac20911_FindTypeAlias_Lookup_2(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1aab288e6_FindTypeAlias(_self_.safe_ptr<_1aab27b59_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1aaa972b0_Struct> _1aac20d0c_FindStruct_Lookup_2(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1aab28ce2_FindStruct(_self_.safe_ptr<_1aab27b59_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1aaab3199_Fn> _1aac21208_FindFn_Lookup_2(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1aab291dd_FindFn(_self_.safe_ptr<_1aab27b59_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1aaac6443_Trait> _1aac21549_FindTrait_Lookup_2(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2928_ident) {
	return _1aab2952e_FindTrait(_self_.safe_ptr<_1aab27b59_Package>(), _2928_ident);
}
inline jule::Ptr<_1aaac8b3d_Enum> _1aac2188a_FindEnum_Lookup_2(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _3327_ident) {
	return _1aab29870_FindEnum(_self_.safe_ptr<_1aab27b59_Package>(), _3327_ident);
}
inline jule::Ptr<_1aaaca348_TypeEnum> _1aac21bcb_FindTypeEnum_Lookup_2(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _3731_ident) {
	return _1aab29bb1_FindTypeEnum(_self_.safe_ptr<_1aab27b59_Package>(), _3731_ident);
}
inline jule::Ptr<_1aab24c33_ImportInfo> _1aac20119_SelectPackage_Lookup_3(jule::Trait<_1aac21d30_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)> _932_selector) {
	return _1aab4622c_SelectPackage(_self_.safe_ptr<_1aab45c87_Sema>(), _932_selector);
}
inline jule::Ptr<_1aab68969_Var> _1aac20515_FindVar_Lookup_3(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1aab46628_FindVar(_self_.safe_ptr<_1aab45c87_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1aabeb403_TypeAlias> _1aac20911_FindTypeAlias_Lookup_3(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1aab46a24_FindTypeAlias(_self_.safe_ptr<_1aab45c87_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1aaa972b0_Struct> _1aac20d0c_FindStruct_Lookup_3(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1aab46e20_FindStruct(_self_.safe_ptr<_1aab45c87_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1aaab3199_Fn> _1aac21208_FindFn_Lookup_3(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1aab4731b_FindFn(_self_.safe_ptr<_1aab45c87_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1aaac6443_Trait> _1aac21549_FindTrait_Lookup_3(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2928_ident) {
	return _1aab4765c_FindTrait(_self_.safe_ptr<_1aab45c87_Sema>(), _2928_ident);
}
inline jule::Ptr<_1aaac8b3d_Enum> _1aac2188a_FindEnum_Lookup_3(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _3327_ident) {
	return _1aab4799d_FindEnum(_self_.safe_ptr<_1aab45c87_Sema>(), _3327_ident);
}
inline jule::Ptr<_1aaaca348_TypeEnum> _1aac21bcb_FindTypeEnum_Lookup_3(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _3731_ident) {
	return _1aab47cde_FindTypeEnum(_self_.safe_ptr<_1aab45c87_Sema>(), _3731_ident);
}
inline jule::Ptr<_1aab24c33_ImportInfo> _1aac20119_SelectPackage_Lookup_4(jule::Trait<_1aac21d30_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)> _932_selector) {
	return _1aabb71d2_SelectPackage(_self_.safe_ptr<_1aabb6be8_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1aab68969_Var> _1aac20515_FindVar_Lookup_4(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1aabb75cd_FindVar(_self_.safe_ptr<_1aabb6be8_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1aabeb403_TypeAlias> _1aac20911_FindTypeAlias_Lookup_4(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1aabb79c9_FindTypeAlias(_self_.safe_ptr<_1aabb6be8_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1aaa972b0_Struct> _1aac20d0c_FindStruct_Lookup_4(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1aabb7dc5_FindStruct(_self_.safe_ptr<_1aabb6be8_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1aaab3199_Fn> _1aac21208_FindFn_Lookup_4(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1aabb82c1_FindFn(_self_.safe_ptr<_1aabb6be8_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1aaac6443_Trait> _1aac21549_FindTrait_Lookup_4(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _2928_ident) {
	return _1aabb8612_FindTrait(_self_.safe_ptr<_1aabb6be8_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1aaac8b3d_Enum> _1aac2188a_FindEnum_Lookup_4(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _3327_ident) {
	return _1aabb8953_FindEnum(_self_.safe_ptr<_1aabb6be8_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1aaaca348_TypeEnum> _1aac21bcb_FindTypeEnum_Lookup_4(jule::Trait<_1aac21d30_Lookup> _self_, jule::Str _3731_ident) {
	return _1aabb8c94_FindTypeEnum(_self_.safe_ptr<_1aabb6be8_SymbolTable>(), _3731_ident);
}
inline jule::Str _1a64b01c7_Name_CommonFlag_0(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d1bcdc_Name(_self_.safe_ptr<_1a5d1b946_Flag>());
}
inline jule::I32 _1a64b0370_Short_CommonFlag_0(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d1c1b6_Short(_self_.safe_ptr<_1a5d1b946_Flag>());
}
inline jule::Str _1a64e14d3_What_CommonFlag_0(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d1be30_What(_self_.safe_ptr<_1a5d1b946_Flag>());
}
inline void _1a64e1626_Reset_CommonFlag_0(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	_1a5d1c073_Reset(_self_.safe_ptr<_1a5d1b946_Flag>());
}
inline jule::Str _1a64b01c7_Name_CommonFlag_1(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d1ee99_Name(_self_.safe_ptr<_1a5d20362_Flag>());
}
inline jule::I32 _1a64b0370_Short_CommonFlag_1(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d20791_Short(_self_.safe_ptr<_1a5d20362_Flag>());
}
inline jule::Str _1a64e14d3_What_CommonFlag_1(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d200dc_What(_self_.safe_ptr<_1a5d20362_Flag>());
}
inline void _1a64e1626_Reset_CommonFlag_1(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	_1a5d2064d_Reset(_self_.safe_ptr<_1a5d20362_Flag>());
}
inline jule::Str _1a64b01c7_Name_CommonFlag_2(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d23695_Name(_self_.safe_ptr<_1a5d23a5d_Flag>());
}
inline jule::I32 _1a64b0370_Short_CommonFlag_2(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d23e8c_Short(_self_.safe_ptr<_1a5d23a5d_Flag>());
}
inline jule::Str _1a64e14d3_What_CommonFlag_2(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d237d8_What(_self_.safe_ptr<_1a5d23a5d_Flag>());
}
inline void _1a64e1626_Reset_CommonFlag_2(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	_1a5d23d49_Reset(_self_.safe_ptr<_1a5d23a5d_Flag>());
}
inline jule::Str _1a64b01c7_Name_CommonFlag_3(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d26dd5_Name(_self_.safe_ptr<_1a5d2729d_Flag>());
}
inline jule::I32 _1a64b0370_Short_CommonFlag_3(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d276cc_Short(_self_.safe_ptr<_1a5d2729d_Flag>());
}
inline jule::Str _1a64e14d3_What_CommonFlag_3(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d27028_What(_self_.safe_ptr<_1a5d2729d_Flag>());
}
inline void _1a64e1626_Reset_CommonFlag_3(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	_1a5d27589_Reset(_self_.safe_ptr<_1a5d2729d_Flag>());
}
inline jule::Str _1a64b01c7_Name_CommonFlag_4(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d2a5d1_Name(_self_.safe_ptr<_1a5d2a999_Flag>());
}
inline jule::I32 _1a64b0370_Short_CommonFlag_4(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d2adc8_Short(_self_.safe_ptr<_1a5d2a999_Flag>());
}
inline jule::Str _1a64e14d3_What_CommonFlag_4(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	return _1a5d2a724_What(_self_.safe_ptr<_1a5d2a999_Flag>());
}
inline void _1a64e1626_Reset_CommonFlag_4(jule::Trait<_1a64e1769_CommonFlag> _self_) {
	_1a5d2ac85_Reset(_self_.safe_ptr<_1a5d2a999_Flag>());
}


static _1aaacc504_comptimeRangeKindMptrData _1aaacc504_comptimeRangeKind_mptr_data[] = {
	{
		._1aaacbbeb_ready=_1aaacbbeb_ready_comptimeRangeKind_0,
		._1aaacc119_step=_1aaacc119_step_comptimeRangeKind_0,
		._1aaacc3a0_len=_1aaacc3a0_len_comptimeRangeKind_0,
	},
	{
		._1aaacbbeb_ready=_1aaacbbeb_ready_comptimeRangeKind_1,
		._1aaacc119_step=_1aaacc119_step_comptimeRangeKind_1,
		._1aaacc3a0_len=_1aaacc3a0_len_comptimeRangeKind_1,
	},
	{
		._1aaacbbeb_ready=_1aaacbbeb_ready_comptimeRangeKind_2,
		._1aaacc119_step=_1aaacc119_step_comptimeRangeKind_2,
		._1aaacc3a0_len=_1aaacc3a0_len_comptimeRangeKind_2,
	},
	{
		._1aaacbbeb_ready=_1aaacbbeb_ready_comptimeRangeKind_3,
		._1aaacc119_step=_1aaacc119_step_comptimeRangeKind_3,
		._1aaacc3a0_len=_1aaacc3a0_len_comptimeRangeKind_3,
	},
	{
		._1aaacbbeb_ready=_1aaacbbeb_ready_comptimeRangeKind_4,
		._1aaacc119_step=_1aaacc119_step_comptimeRangeKind_4,
		._1aaacc3a0_len=_1aaacc3a0_len_comptimeRangeKind_4,
	},
	{
		._1aaacbbeb_ready=_1aaacbbeb_ready_comptimeRangeKind_5,
		._1aaacc119_step=_1aaacc119_step_comptimeRangeKind_5,
		._1aaacc3a0_len=_1aaacc3a0_len_comptimeRangeKind_5,
	},
};
static _1aab21d1d_ImporterMptrData _1aab21d1d_Importer_mptr_data[] = {
	{
		._1aab20aec_SetModPath=_1aab20aec_SetModPath_Importer_0,
		._1aab20d83_GetModPath=_1aab20d83_GetModPath_Importer_0,
		._1aab211c4_ModById=_1aab211c4_ModById_Importer_0,
		._1aab21515_GetImport=_1aab21515_GetImport_Importer_0,
		._1aab21911_ImportPackage=_1aab21911_ImportPackage_Importer_0,
		._1aab21bb9_Imported=_1aab21bb9_Imported_Importer_0,
	},
};
static _1aabebc3e_KindMptrData _1aabebc3e_Kind_mptr_data[] = {
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_0,
		._1aabebada_Equal=_1aabebada_Equal_Kind_0,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_1,
		._1aabebada_Equal=_1aabebada_Equal_Kind_1,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_2,
		._1aabebada_Equal=_1aabebada_Equal_Kind_2,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_3,
		._1aabebada_Equal=_1aabebada_Equal_Kind_3,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_4,
		._1aabebada_Equal=_1aabebada_Equal_Kind_4,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_5,
		._1aabebada_Equal=_1aabebada_Equal_Kind_5,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_6,
		._1aabebada_Equal=_1aabebada_Equal_Kind_6,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_7,
		._1aabebada_Equal=_1aabebada_Equal_Kind_7,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_8,
		._1aabebada_Equal=_1aabebada_Equal_Kind_8,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_9,
		._1aabebada_Equal=_1aabebada_Equal_Kind_9,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_10,
		._1aabebada_Equal=_1aabebada_Equal_Kind_10,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_11,
		._1aabebada_Equal=_1aabebada_Equal_Kind_11,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_12,
		._1aabebada_Equal=_1aabebada_Equal_Kind_12,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_13,
		._1aabebada_Equal=_1aabebada_Equal_Kind_13,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_14,
		._1aabebada_Equal=_1aabebada_Equal_Kind_14,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_15,
		._1aabebada_Equal=_1aabebada_Equal_Kind_15,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_16,
		._1aabebada_Equal=_1aabebada_Equal_Kind_16,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_17,
		._1aabebada_Equal=_1aabebada_Equal_Kind_17,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_18,
		._1aabebada_Equal=_1aabebada_Equal_Kind_18,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_19,
		._1aabebada_Equal=_1aabebada_Equal_Kind_19,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_20,
		._1aabebada_Equal=_1aabebada_Equal_Kind_20,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_21,
		._1aabebada_Equal=_1aabebada_Equal_Kind_21,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_22,
		._1aabebada_Equal=_1aabebada_Equal_Kind_22,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_23,
		._1aabebada_Equal=_1aabebada_Equal_Kind_23,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_24,
		._1aabebada_Equal=_1aabebada_Equal_Kind_24,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_25,
		._1aabebada_Equal=_1aabebada_Equal_Kind_25,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_26,
		._1aabebada_Equal=_1aabebada_Equal_Kind_26,
	},
	{
		._1aabeb799_Str=_1aabeb799_Str_Kind_27,
		._1aabebada_Equal=_1aabebada_Equal_Kind_27,
	},
};
static _1aac21d30_LookupMptrData _1aac21d30_Lookup_mptr_data[] = {
	{
		._1aac20119_SelectPackage=_1aac20119_SelectPackage_Lookup_0,
		._1aac20515_FindVar=_1aac20515_FindVar_Lookup_0,
		._1aac20911_FindTypeAlias=_1aac20911_FindTypeAlias_Lookup_0,
		._1aac20d0c_FindStruct=_1aac20d0c_FindStruct_Lookup_0,
		._1aac21208_FindFn=_1aac21208_FindFn_Lookup_0,
		._1aac21549_FindTrait=_1aac21549_FindTrait_Lookup_0,
		._1aac2188a_FindEnum=_1aac2188a_FindEnum_Lookup_0,
		._1aac21bcb_FindTypeEnum=_1aac21bcb_FindTypeEnum_Lookup_0,
	},
	{
		._1aac20119_SelectPackage=_1aac20119_SelectPackage_Lookup_1,
		._1aac20515_FindVar=_1aac20515_FindVar_Lookup_1,
		._1aac20911_FindTypeAlias=_1aac20911_FindTypeAlias_Lookup_1,
		._1aac20d0c_FindStruct=_1aac20d0c_FindStruct_Lookup_1,
		._1aac21208_FindFn=_1aac21208_FindFn_Lookup_1,
		._1aac21549_FindTrait=_1aac21549_FindTrait_Lookup_1,
		._1aac2188a_FindEnum=_1aac2188a_FindEnum_Lookup_1,
		._1aac21bcb_FindTypeEnum=_1aac21bcb_FindTypeEnum_Lookup_1,
	},
	{
		._1aac20119_SelectPackage=_1aac20119_SelectPackage_Lookup_2,
		._1aac20515_FindVar=_1aac20515_FindVar_Lookup_2,
		._1aac20911_FindTypeAlias=_1aac20911_FindTypeAlias_Lookup_2,
		._1aac20d0c_FindStruct=_1aac20d0c_FindStruct_Lookup_2,
		._1aac21208_FindFn=_1aac21208_FindFn_Lookup_2,
		._1aac21549_FindTrait=_1aac21549_FindTrait_Lookup_2,
		._1aac2188a_FindEnum=_1aac2188a_FindEnum_Lookup_2,
		._1aac21bcb_FindTypeEnum=_1aac21bcb_FindTypeEnum_Lookup_2,
	},
	{
		._1aac20119_SelectPackage=_1aac20119_SelectPackage_Lookup_3,
		._1aac20515_FindVar=_1aac20515_FindVar_Lookup_3,
		._1aac20911_FindTypeAlias=_1aac20911_FindTypeAlias_Lookup_3,
		._1aac20d0c_FindStruct=_1aac20d0c_FindStruct_Lookup_3,
		._1aac21208_FindFn=_1aac21208_FindFn_Lookup_3,
		._1aac21549_FindTrait=_1aac21549_FindTrait_Lookup_3,
		._1aac2188a_FindEnum=_1aac2188a_FindEnum_Lookup_3,
		._1aac21bcb_FindTypeEnum=_1aac21bcb_FindTypeEnum_Lookup_3,
	},
	{
		._1aac20119_SelectPackage=_1aac20119_SelectPackage_Lookup_4,
		._1aac20515_FindVar=_1aac20515_FindVar_Lookup_4,
		._1aac20911_FindTypeAlias=_1aac20911_FindTypeAlias_Lookup_4,
		._1aac20d0c_FindStruct=_1aac20d0c_FindStruct_Lookup_4,
		._1aac21208_FindFn=_1aac21208_FindFn_Lookup_4,
		._1aac21549_FindTrait=_1aac21549_FindTrait_Lookup_4,
		._1aac2188a_FindEnum=_1aac2188a_FindEnum_Lookup_4,
		._1aac21bcb_FindTypeEnum=_1aac21bcb_FindTypeEnum_Lookup_4,
	},
};
static _1a64e1769_CommonFlagMptrData _1a64e1769_CommonFlag_mptr_data[] = {
	{
		._1a64b01c7_Name=_1a64b01c7_Name_CommonFlag_0,
		._1a64b0370_Short=_1a64b0370_Short_CommonFlag_0,
		._1a64e14d3_What=_1a64e14d3_What_CommonFlag_0,
		._1a64e1626_Reset=_1a64e1626_Reset_CommonFlag_0,
	},
	{
		._1a64b01c7_Name=_1a64b01c7_Name_CommonFlag_1,
		._1a64b0370_Short=_1a64b0370_Short_CommonFlag_1,
		._1a64e14d3_What=_1a64e14d3_What_CommonFlag_1,
		._1a64e1626_Reset=_1a64e1626_Reset_CommonFlag_1,
	},
	{
		._1a64b01c7_Name=_1a64b01c7_Name_CommonFlag_2,
		._1a64b0370_Short=_1a64b0370_Short_CommonFlag_2,
		._1a64e14d3_What=_1a64e14d3_What_CommonFlag_2,
		._1a64e1626_Reset=_1a64e1626_Reset_CommonFlag_2,
	},
	{
		._1a64b01c7_Name=_1a64b01c7_Name_CommonFlag_3,
		._1a64b0370_Short=_1a64b0370_Short_CommonFlag_3,
		._1a64e14d3_What=_1a64e14d3_What_CommonFlag_3,
		._1a64e1626_Reset=_1a64e1626_Reset_CommonFlag_3,
	},
	{
		._1a64b01c7_Name=_1a64b01c7_Name_CommonFlag_4,
		._1a64b0370_Short=_1a64b0370_Short_CommonFlag_4,
		._1a64e14d3_What=_1a64e14d3_What_CommonFlag_4,
		._1a64e1626_Reset=_1a64e1626_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaab609d_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1aaab609d_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab68969_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1aab68969_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa9a390_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1aaa9a390_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaac6443_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1aaac6443_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa9309c_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1aaa9309c_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa8d031_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1aaa8d031_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa92200_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1aaa92200_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa8837d_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1aaa8837d_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa9293c_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1aaa9293c_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa8945b_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1aaa8945b_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa905a5_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1aaa905a5_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa91540_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1aaa91540_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c4cbcda1_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1c4cbcda1_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa76beb_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1aaa76beb_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab06187_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1aab06187_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab037e4_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1aab037e4_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa903b_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1aaaa903b_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aabbbe1d_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1aabbbe1d_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaaa108_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1aaaaa108_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa7b83_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1aaaa7b83_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa6599_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1aaaa6599_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa5dc3_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1aaaa5dc3_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa629c_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1aaaa629c_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa6d4c_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1aaaa6d4c_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa7303_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1aaaa7303_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa8b62_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1aaaa8b62_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa88ed_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1aaaa88ed_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaaa405_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1aaaaa405_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa194b_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1aaaa194b_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab0442c_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1aab0442c_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab04729_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1aab04729_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa8a803_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1aaa8a803_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab04bd0_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1aab04bd0_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa8b20a_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1aaa8b20a_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab0562b_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1aab0562b_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab059b1_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1aab059b1_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab06561_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1aab06561_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab0693a_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1aab0693a_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab06de1_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1aab06de1_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa22cb_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1aaaa22cb_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab072ba_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1aab072ba_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab0792a_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1aab0792a_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab08b5c_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1aab08b5c_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab05d8a_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1aab05d8a_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aab08ee2_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1aab08ee2_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa866de_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1aaa866de_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7a925_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1aaa7a925_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa8c7e4_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1aaa8c7e4_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa89ec8_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1aaa89ec8_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa8b9ad_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1aaa8b9ad_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa83ca2_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1aaa83ca2_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa8417b_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1aaa8417b_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa8516b_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1aaa8516b_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa8dc24_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1aaa8dc24_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa84478_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1aaa84478_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa8b5d4_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1aaa8b5d4_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa89835_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1aaa89835_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7b2e9_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1aaa7b2e9_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaab3199_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1aaab3199_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa972b0_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1aaa972b0_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aabeb403_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1aabeb403_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaac8b3d_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1aaac8b3d_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaca348_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1aaaca348_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa3b4b_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1aaaa3b4b_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa44dc_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa5169_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1aaaa5169_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa56ec_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1aaaa56ec_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa9ed45_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1aaa9ed45_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa788ac_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1aaa788ac_ArrTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa77a21_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1aaa77a21_SlcTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7811a_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1aaa7811a_PtrTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7768b_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1aaa7768b_SptrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7910a_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1aaa7910a_MapTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa77d1d_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1aaa77d1d_TupleTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c38d3b83_StrBuilder>().dealloc(); }
jule::Str __jule_any_type81_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const _1c38d3b83_StrBuilder*>(alloc)); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .to_str=__jule_any_type81_to_str};
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7cdab_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1aaa7cdab_VariadicExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa1d25_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1aaaa1d25_SliceExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa80221_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1aaa80221_FieldExprPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa8182c_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1aaa8182c_KeyValPair> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7c350_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1aaa7c350_IdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7b5e6_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1aaa7b5e6_TupleExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa59e9_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1aaaa59e9_TupleExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa9932_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1aaaa9932_RuneExprModel> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aabec1e5_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1aabec1e5_TypeKind> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa4d6c_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1aaaa4d6c_ArrayExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7db15_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1aaa7db15_SubIdentExpr> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa76ee8_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1aaa76ee8_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7c9d2_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1aaa7c9d2_UnaryExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa765e1_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1aaa765e1_TypeDecl> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7d65e_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1aaa7d65e_NsSelectionExpr> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7738e_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1aaa7738e_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa35b8_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1aaaa35b8_SlicingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa1099_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1aaaa1099_CastingExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa82025_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1aaa82025_SliceExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa0719_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1aaaa0719_StructLitExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa4993_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1aaaa4993_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa3035_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1aaaa3035_MapExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa26a5_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1aaaa26a5_AnonFnExprModel> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7ac22_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1aaa7ac22_RangeExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7b9c0_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1aaa7b9c0_LitExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7bd99_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1aaa7bd99_UnsafeExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa829b5_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1aaa829b5_IndexingExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa83125_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1aaa83125_SlicingExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7d285_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1aaa7d285_CastExpr> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa80a4b_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1aaa80a4b_StructLit> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7e72b_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1aaa7e72b_FnCallExpr> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa81002_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1aaa81002_BraceLit> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa7e0bb_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1aaa7e0bb_BinopExpr> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaa9e96b_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1aaa9e96b_BinopExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa0a16_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1aaaa0a16_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa6973_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1aaaa6973_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa77a9_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1aaaa77a9_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa7e80_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1aaaa7e80_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa827c_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1aaaa827c_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa9338_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1aaaa9338_SizeofExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa9635_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1aaaa9635_AlignofExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aaaa9c2e_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1aaaa9c2e_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aace8bd7_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1aace8bd7_MutSlicingExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aace96ee_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1aace96ee_PushToSliceExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aace9ac8_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1aace9ac8_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aace8643_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1aace8643_StrCompExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aace8ed4_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1aace8ed4_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aace9358_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1aace9358_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aace9dc5_InlineStdInternalNosafeStobs>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1aace9dc5_InlineStdInternalNosafeStobs> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _1c3a989c4_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1a64e8320_OutDir = jule::Str("dist", 4);
jule::Str _1a64e85ea_OutName = jule::Str("ir.cpp", 6);
jule::Str _1a64e88b4_Out = jule::Str();
jule::Str _205b15547_Compiler = jule::Str();
jule::Str _205b15767_CompilerPath = jule::Str();
jule::Str _205b15987_CppStd = jule::Str("cpp17", 5);
jule::Bool _205b15ba7_Shadowing = false;
jule::Bool _205b15e1b_Transpilation = false;
jule::Bool _205b161d5_Test = false;
jule::Bool _205b1649e_RC = true;
jule::Bool _205b16878_Safety = true;
jule::Bool _205b16b42_Production = false;
jule::Ptr<_1de997ca3_RangeTable> _1de933568__L = jule::new_ptr<_1de997ca3_RangeTable>(_1de997ca3_RangeTable{._field_R16=jule::Slice<_1de9972be_Range16>::make({_1de9972be_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1de9972be_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1de9972be_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1de9972be_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1de9972be_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1de9972be_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1de9972be_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1de9972be_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1de9972be_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1de9972be_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1de9972be_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1de9972be_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1de9972be_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1de9972be_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1de9972be_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1de9972be_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1de9972be_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1de9972be_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1de9972be_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1de9972be_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1de9972be_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1de9972be_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1de9972be_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1de9972be_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1de9972be_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1de9972be_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1de9972be_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1de9972be_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1de9972be_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1de9972be_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1de9972be_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1de9972be_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1de9972be_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1de9972be_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1de9972be_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1de9972be_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1de9972be_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1de9972be_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1de9972be_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1de9972be_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1de9972be_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1de9972be_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1de9972be_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1de9972be_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1de9972be_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1de9972be_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1de9972be_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1de9972be_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1de9972be_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1de9972be_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1de9972be_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1de9972be_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1de9972be_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1de9972be_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1de9972be_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1de9972be_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1de9972be_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1de9972be_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1de9972be_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1de9972be_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1de9977ec_Range32>::make({_1de9977ec_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1de9977ec_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1de9977ec_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1de9977ec_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1de9977ec_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1de9977ec_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1de9977ec_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1de9977ec_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1de9977ec_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1de9977ec_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1de9977ec_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1de9977ec_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1de9977ec_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1de9977ec_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1de9977ec_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1de9977ec_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1de9977ec_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1de9977ec_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1de9977ec_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1de9977ec_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1de9977ec_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1de9977ec_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1de9977ec_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1de9977ec_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1de9977ec_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1de9977ec_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1de9977ec_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1de9977ec_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1de9977ec_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1de9977ec_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1de9977ec_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1de997ca3_RangeTable> _1de934558__LU = jule::new_ptr<_1de997ca3_RangeTable>(_1de997ca3_RangeTable{._field_R16=jule::Slice<_1de9972be_Range16>::make({_1de9972be_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1de9972be_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1de9972be_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1de9972be_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1de9972be_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1de9972be_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1de9972be_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1de9972be_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1de9972be_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1de9972be_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1de9972be_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1de9972be_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1de9972be_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1de9972be_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1de9972be_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1de9972be_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1de9972be_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1de9977ec_Range32>::make({_1de9977ec_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1de9977ec_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1de9977ec_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1de9977ec_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1de9977ec_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1de9977ec_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1de9977ec_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _1de9915d7__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _1c387b851_first = jule::Array<jule::U8,256>({});
jule::Array<_1c387bdd4_acceptRange,16> _1c387c1e2_acceptRanges = jule::Array<_1c387bdd4_acceptRange,16>({_1c387bdd4_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1c387bdd4_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1c387bdd4_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1c387bdd4_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1c387bdd4_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _1c38e53d1_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1c3974a8c_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1c397672b_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _1c3a94bbd_PathStdlib = jule::Str();
jule::Str _1c3a94e21_PathExec = jule::Str();
jule::Str _1c3a951c9_PathWd = jule::Str();
jule::Str _1c3a954d7_PathApi = jule::Str();
jule::Str _1c3a957a1_Os = jule::Str("linux", 5);
jule::Str _1c3a95a6a_Arch = jule::Str("i386", 4);
jule::Array<jule::I32,5> _1c3d89b83_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U32,6> _1c3d89da3_UnaryOps = jule::Array<jule::U32,6>({static_cast<jule::U32>(61LLU),static_cast<jule::U32>(60LLU),static_cast<jule::U32>(67LLU),static_cast<jule::U32>(68LLU),static_cast<jule::U32>(62LLU),static_cast<jule::U32>(65LLU)});
jule::Array<jule::U32,18> _1c3d8a14a_BinOps = jule::Array<jule::U32,18>({static_cast<jule::U32>(60LLU),static_cast<jule::U32>(61LLU),static_cast<jule::U32>(62LLU),static_cast<jule::U32>(63LLU),static_cast<jule::U32>(64LLU),static_cast<jule::U32>(65LLU),static_cast<jule::U32>(66LLU),static_cast<jule::U32>(67LLU),static_cast<jule::U32>(56LLU),static_cast<jule::U32>(57LLU),static_cast<jule::U32>(69LLU),static_cast<jule::U32>(70LLU),static_cast<jule::U32>(53LLU),static_cast<jule::U32>(52LLU),static_cast<jule::U32>(54LLU),static_cast<jule::U32>(55LLU),static_cast<jule::U32>(50LLU),static_cast<jule::U32>(51LLU)});
jule::Array<jule::U32,2> _1c3e34aa7_PostfixOps = jule::Array<jule::U32,2>({static_cast<jule::U32>(58LLU),static_cast<jule::U32>(59LLU)});
jule::Array<jule::U32,11> _1c3e34da4_AssignOps = jule::Array<jule::U32,11>({static_cast<jule::U32>(71LLU),static_cast<jule::U32>(40LLU),static_cast<jule::U32>(41LLU),static_cast<jule::U32>(43LLU),static_cast<jule::U32>(42LLU),static_cast<jule::U32>(44LLU),static_cast<jule::U32>(46LLU),static_cast<jule::U32>(45LLU),static_cast<jule::U32>(49LLU),static_cast<jule::U32>(48LLU),static_cast<jule::U32>(47LLU)});
jule::Array<_1c3e42ed3_kindPair,28> _1c3e43412_keywords = jule::Array<_1c3e42ed3_kindPair,28>({_1c3e42ed3_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U32>(6LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U32>(2LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U32>(7LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U32>(9LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U32>(10LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U32>(11LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U32>(12LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U32>(13LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U32>(14LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U32>(16LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U32>(18LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U32>(20LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U32>(21LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U32>(22LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U32>(23LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U32>(24LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U32>(25LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U32>(26LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U32>(27LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U32>(28LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U32>(29LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U32>(30LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U32>(31LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U32>(32LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U32>(33LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U32>(34LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U32>(36LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U32>(37LLU)}});
jule::Array<_1c3e42ed3_kindPair,46> _1c3e43753_basicOps = jule::Array<_1c3e42ed3_kindPair,46>({_1c3e42ed3_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U32>(19LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str(":=", 2), ._field_id=static_cast<jule::U32>(38LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U32>(8LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U32>(3LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U32>(5LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U32>(39LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U32>(17LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U32>(40LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U32>(41LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U32>(42LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U32>(43LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U32>(44LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U32>(45LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U32>(46LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U32>(47LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U32>(48LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U32>(49LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U32>(50LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U32>(51LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U32>(52LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U32>(53LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U32>(54LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U32>(55LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U32>(56LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U32>(57LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U32>(58LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U32>(59LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U32>(60LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U32>(61LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U32>(62LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U32>(63LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U32>(64LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U32>(65LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U32>(66LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U32>(67LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U32>(68LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U32>(69LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U32>(70LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U32>(71LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U32>(35LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("{", 1), ._field_id=static_cast<jule::U32>(72LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("}", 1), ._field_id=static_cast<jule::U32>(73LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("[", 1), ._field_id=static_cast<jule::U32>(76LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("]", 1), ._field_id=static_cast<jule::U32>(77LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str("(", 1), ._field_id=static_cast<jule::U32>(74LLU)},_1c3e42ed3_kindPair{._field_kind=jule::Str(")", 1), ._field_id=static_cast<jule::U32>(75LLU)}});
jule::Array<jule::U8,32> _1c4c49822__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1c4c49dd8__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1c4c94d23_floatInfo _1c4c95131_f32info = _1c4c94d23_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1c4c94d23_floatInfo _1c4c953c8_f64info = _1c4c94d23_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1c4c9cd1a_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I32> _1c4c9eb85_powtab = jule::Slice<jule::I32>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1c4ca0757_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1c4ca0a98_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1c4ca3d10_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1c4ca7ad3_leftCheat> _1c4ca8012_leftCheats = jule::Slice<_1c4ca7ad3_leftCheat>::make({_1c4ca7ad3_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1c4ca7ad3_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1c4ca7ad3_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1c4ca7ad3_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1c4ca7ad3_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1c4ca7ad3_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1c4ca7ad3_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1c4ca7ad3_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1c4ca7ad3_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1c4ca7ad3_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1c4ca7ad3_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1c4ca7ad3_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1c4ca7ad3_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1c4ca7ad3_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1c4ca7ad3_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1c4ca7ad3_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1c4ca7ad3_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1c4ca7ad3_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1c4ca7ad3_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1c4ca7ad3_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1c4ca7ad3_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1c4ca7ad3_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1c4ca7ad3_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1c4ca7ad3_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1c4ca7ad3_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1c4ca7ad3_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1c4ca7ad3_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1c4ca7ad3_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1c4ca7ad3_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1c4ca7ad3_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1c4ca7ad3_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1c4ca7ad3_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1c4ca7ad3_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1c4ca7ad3_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1c4ca7ad3_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1c4ca7ad3_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1c4ca7ad3_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1c4ca7ad3_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1c4ca7ad3_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1c4ca7ad3_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1c4ca7ad3_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1c4ca7ad3_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1c4ca7ad3_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1c4ca7ad3_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1c4ca7ad3_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1c4ca7ad3_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1c4ca7ad3_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1c4ca7ad3_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1c4ca7ad3_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1c4ca7ad3_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1c4ca7ad3_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1c4ca7ad3_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1c4ca7ad3_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1c4ca7ad3_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1c4ca7ad3_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1c4ca7ad3_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1c4ca7ad3_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1c4ca7ad3_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1c4ca7ad3_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1c4ca7ad3_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1c4ca7ad3_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I32 _1c4cadde7_BitSize = 0LL;
jule::Str _1c4cae1d3_SysInt = jule::Str();
jule::Str _1c4cae49c_SysUint = jule::Str();
jule::Slice<jule::Str> _1aaaeaa2d_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacd7d6e_primNil = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1aabec1e5_TypeKind> _1aacd817c_primVoid = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("void", 4)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacd8446_primAny = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("any", 3)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacd8754_primStr = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("str", 3)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacd8a1d_primBool = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("bool", 4)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacd8cd7_primUintptr = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("uintptr", 7)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacd90a1_primUint = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("uint", 4)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacd947a_primInt = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("int", 3)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacd9744_primI8 = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("i8", 2)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacd9a0d_primI16 = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("i16", 3)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacd9cc7_primI32 = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("i32", 3)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacda091_primI64 = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("i64", 3)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacda35a_primU8 = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("u8", 2)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacda624_primU16 = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("u16", 3)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacda8dd_primU32 = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("u32", 3)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacdad61_primU64 = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("u64", 3)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacdb12a_primF32 = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("f32", 3)), 20)});
jule::Ptr<_1aabec1e5_TypeKind> _1aacdb3e4_primF64 = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(jule::Str("f64", 3)), 20)});
jule::Str _1ab764894_stdPackageInternalNosafe = jule::Str("std::internal::nosafe", 21);
jule::Map<jule::Uintptr,_1ab764cd4_stdCacheData> _1ab765213_stdCache = nullptr;
jule::Bool _1ab766a83_Copy = false;
jule::Bool _1ab766d91_Deadcode = false;
jule::Bool _1ab76715a_Append = false;
jule::Bool _1ab767468_Math = false;
jule::Bool _1ab767732_Access = false;
jule::Bool _1ab7679eb_Inline = false;
jule::Bool _1ab767cb5_Ptr = false;
jule::Bool _1ab76818e_Cond = false;
jule::Bool _1ab768458_Str = false;
jule::Bool _1ab768722_StdInternalNosafe = false;
jule::Bool _1ac5a563a_exprEnabled = false;
jule::Bool _1ac5a5904_scopeEnabled = false;
jule::Bool _1ac5a5bbd_stdEnabled = false;
jule::Array<jule::U64,12> _1a61866c8_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1a60b0338_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_1de997ca3_RangeTable> _1de941c5d_Upper = _1de934558__LU;
jule::Ptr<_1de997ca3_RangeTable> _1de93a707_Letter = _1de933568__L;





std::ostream &operator<<(std::ostream &_Stream, _1de9972be_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1de9977ec_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1de997ca3_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c387bdd4_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _1c38d3b83_StrBuilder static__1c38d3ea2_New(jule::I32 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _1c38d3b83_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _1c38dc692_Write(_1c38d3b83_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _1c38dc94a_WriteStr(_1c38d3b83_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_206b74495_Stobs(&(_3027_s)));;
}



inline void _1c38dcc03_WriteByte(_1c38d3b83_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _1c38dd242_Str(_1c38d3b83_StrBuilder* _self_) {
	return static_cast<jule::Str>((*(_self_))._field_buf);;
}



inline void _1c38dd440_Clear(_1c38d3b83_StrBuilder* _self_) {
	(*(_self_))._field_buf=(*(_self_))._field_buf.slice(0LL, 0LL);
}



inline jule::I32 _1c38dd6c6_Len(_1c38d3b83_StrBuilder* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _1c38ddbe3_Buf(_1c38d3b83_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1c38dde9b_SetBuf(_1c38d3b83_StrBuilder* _self_, jule::Slice<jule::U8> _7536_buf) {
	(*(_self_))._field_buf=_7536_buf;
}







std::ostream &operator<<(std::ostream &_Stream, _1c38d3b83_StrBuilder _Src) {
	_Stream << _1c38dd242_Str(&_Src);
	return _Stream;
}



inline jule::U8 _1c38ded37_index(_1c38de8d6_lazyBuff* _self_, jule::I32 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _1c38e00e0_append(_1c38de8d6_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1c38e0376_string(_1c38de8d6_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1c38de8d6_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _206b6d2a2_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>>> static__1c38e42ae_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _206b39ceb_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>>>(jule::Any(_206b6b833_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _206b3a0b5_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1a65367d1;
			};
			jule::Str _2517_name = _206b29406_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_206b7b9ca_Status> _2621_stat = ({
				auto except = static__206b6dc86_Of(_1c38e1157_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>>>(except.error);
				} jule::Ptr<_206b7b9ca_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_206b6d2a2_DirEntry>(_206b6d2a2_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat})); };
		}
	_iter_next_1a65367d1:;
	}
	_iter_end_1a65367d1:;;
	_206b3a37e_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__1c38e44e0_Create(jule::Str _3922_path) {
	if ((_206b3ac86_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_206b6b833_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1c38e4721_Remove(jule::Str _5122_path) {
	if ((_206b3b050_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_206b6b833_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _206b6d516_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_206b791d1_File>> static__206b6c1c4_Open(jule::Str _1820_path, jule::I32 _1831_flag, jule::I32 _1844_mode) {
	jule::I32 _1913_handle = _206b3947c_Open((&(_1820_path[0LL])), static_cast<jule::I32>(_1831_flag), _1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_206b791d1_File>>(jule::Any(_206b6b833_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_206b791d1_File>>(jule::Any(), static__206b79610_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__206b6c405_Remove(jule::Str _3022_path) {
	if ((_206b3b319_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_206b6b833_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _206b6c889_Write(_206b791d1_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_206b66883_Write(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_206b6b833_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I32> _206b6cbca_Read(_206b791d1_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_206b660ad_Read(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_206b6b833_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_206b791d1_File> static__206b79610_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_206b791d1_File>(_206b791d1_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_206b791d1_File>> static__206b798c9_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_206b791d1_File>>(jule::Any(), ({
		auto except = static__206b6c1c4_Open(_5622_path, static_cast<jule::I32>(578LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_206b791d1_File>>(except.error);
		} jule::Ptr<_206b791d1_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__206b79b93_Read(jule::Str _6820_path) {
	jule::Ptr<_206b7b9ca_Status> _6913_s = ({
		auto except = static__206b6dc86_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_206b7b9ca_Status>(nullptr);});
	});;
	if ((!(_206b7c13a_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0));
	};
	if ((_206b7c3c1_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_206b791d1_File> _7917_f = ({
		auto except = static__206b6c1c4_Open(_6820_path, static_cast<jule::I32>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_206b791d1_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _206b7ae6e_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I32>(_206b7c3c1_Size(_6913_s.ptr())), static_cast<jule::I32>(_206b7c3c1_Size(_6913_s.ptr())), 0);;
	jule::I32 _8313_n = ({
		auto except = _206b6cbca_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__206b7a039_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I32 _9246_perm) {
	jule::Ptr<_206b791d1_File> _9317_f = ({
		auto except = static__206b6c1c4_Open(_9221_path, static_cast<jule::I32>(577LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_206b791d1_File>(nullptr);});
	});;
	({
		auto except = _206b6c889_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _206b7ae6e_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _206b7ae6e_Close(_206b791d1_File* _self_) {
	if ((_206b66454_Close(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_206b6b833_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _206b791d1_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_206b7b9ca_Status>> static__206b6dc86_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_206b7b9ca_Status>>(jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I32 _1613_code = _206b3904d_Stat((&(_1118_path[0LL])), (&(_1517_handle)));;
	if ((_1613_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_206b7b9ca_Status>>(jule::Any(_206b6b833_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_206b7b9ca_Status> _2017_stat = jule::new_ptr<_206b7b9ca_Status>();;
	_2017_stat.get()._field_size=_1517_handle.st_size;
	if (((_1517_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_1517_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_206b7b9ca_Status>>(jule::Any(), _2017_stat);;
}



inline jule::Bool _206b7bda4_IsDir(_206b7b9ca_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _206b7c13a_IsReg(_206b7b9ca_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _206b7c3c1_Size(_206b7b9ca_Status* _self_) {
	return (*(_self_))._field_size;;
}







std::ostream &operator<<(std::ostream &_Stream, _206b7b9ca_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3a9225e_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3983b45_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1c3e3a96a_Prec(_1c3e3a5e6_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a74e5d99:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a74e6031:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1a74e6097:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1a74e611e:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1a74e6196:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1a74e5728:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a74e567e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1c3e3a5e6_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1c3e4129a_Fill(_1c3e40db0_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1c3e41531_Dir(_1c3e40db0_File* _self_) {
	return _1c38e1d4a_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1c3e417b7_Name(_1c3e40db0_File* _self_) {
	return _1c38e19a4_Base((*(_self_))._field_Path);;
}



inline jule::Str _1c3e41d8e_GetRow(_1c3e40db0_File* _self_, jule::I32 _3821_row) {
	jule::I32 _3917_n = 0LL;;
	jule::I32 _4017_lineStart = 0LL;;
	jule::I32 _4117_i = 0LL;;
	for (; (_4117_i < (*(_self_))._field_Data.len()); (_4117_i)++) {
		{
			if (((*(_self_))._field_Data[_4117_i] != '\n')) {
				goto _iter_next_1a74eb322;
			};
			(_3917_n)++;
			if ((_3917_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4017_lineStart, _4117_i));;
			};
			_4017_lineStart=static_cast<jule::I32>((_4117_i + 1LL));
		}
	_iter_next_1a74eb322:;
	}
	_iter_end_1a74eb322:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3e40db0_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3e42ed3_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1c3e4967c_pushErr(_1c3e490e9_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_1c3983b45_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1c3e43ca3_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1c3e49bdd_lex(_1c3e490e9_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1c3e4be10_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _46221_token = _1c3e4d3ea_token(_self_);;
			if ((_46221_token.get()._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46221_token); };
			};
		}
	_iter_next_1a752a1ec:;
	}
	_iter_end_1a752a1ec:;;
}



inline jule::Str _1c3e4a02e_id(_1c3e490e9_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _47514_r = 0;;
	jule::I32 _47521_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune((*(_47122_ln)));
		_47514_r = __jule_assign_result.__jule_result_arg0;
		_47521_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_47514_r != '_') && (!(_1c3e3dd25_IsLetter(_47514_r))))) {
		return jule::Str();;
	};
	while ((_47521_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48118_pr = 0;;
			jule::I32 _48122_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune((*(_47122_ln)).slice(_47521_i));
				_48118_pr = __jule_assign_result.__jule_result_arg0;
				_48122_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48118_pr != '_') && (!(_1c3e3e3a8_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48118_pr)))))) && (!(_1c3e3dd25_IsLetter(_48118_pr))))) {
				(*(_self_))._field_pos+=_47521_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47521_i));;
			};
			_47521_i+=_48122_n;
		}
	_iter_next_1a752d365:;
	}
	_iter_end_1a752d365:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1c3e4a2b5_resume(_1c3e490e9_lex* _self_) {
	jule::I32 _49617_i = (*(_self_))._field_pos;;
	for (; (_49617_i < (*(_self_))._field_file.get()._field_Data.len()); (_49617_i)++) {
		{
			jule::I32 _49817_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_49617_i]);;
			if (_1c3e3d8a2_IsSpace(_49817_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49817_r };
					
					if (_match_expr == '\n') {
						_case_begin_1a753239c:;
						{
							_1c3e4be10_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1a7532413:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1a7531c70:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1a7531d08:;
				};
				goto _iter_next_1a752d08a;
			};
			jule::I32 _51321_j = _49617_i;;
			for (; (_51321_j < (*(_self_))._field_file.get()._field_Data.len()); (_51321_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_51321_j] == '\n')) {
						goto _iter_end_1a7530ee4;
					};
				}
			_iter_next_1a7530ee4:;
			}
			_iter_end_1a7530ee4:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_49617_i, _51321_j);;
		}
	_iter_next_1a752d08a:;
	}
	_iter_end_1a752d08a:;;
	return nullptr;;
}



inline void _1c3e4a56d_lexLineComment(_1c3e490e9_lex* _self_, jule::Ptr<_1c3e3a5e6_Token>* _52438_token) {
	jule::I32 _52513_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52817_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_52817_r == '\n') || (_52817_r == '\r'))) {
				goto _iter_end_1a75349dc;
			};
		}
	_iter_next_1a75349dc:;
	}
	_iter_end_1a75349dc:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*(_52438_token)).get()._field_Id=static_cast<jule::U32>(15LLU);
		(*(_52438_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_52513_start, (*(_self_))._field_pos));
	};
}



inline void _1c3e4a826_lexRangeComment(_1c3e490e9_lex* _self_, jule::Ptr<_1c3e3a5e6_Token>* _53939_token) {
	jule::I32 _54013_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54317_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_54317_r == '\r')) {
				goto _iter_next_1a75379ce;
			};
			if ((_54317_r == '\n')) {
				_1c3e4be10_newLine(_self_);
				goto _iter_next_1a75379ce;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_54317_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*(_53939_token)).get()._field_Id=static_cast<jule::U32>(15LLU);
					(*(_53939_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_54013_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1a75379ce:;
	}
	_iter_end_1a75379ce:;;
	_1c3e4967c_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1c3e4ab67_num(_1c3e490e9_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1c3e478de_hexNum(_56723_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_1a753ea2a;
	};
	__jule_func_result=_1c3e47625_octalNum(_56723_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_1a753ea2a;
	};
	__jule_func_result=_1c3e45e3c_binaryNum(_56723_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_1a753ea2a;
	};
	__jule_func_result=_1c3e45b73_commonNum(_56723_txt);
	_julec_label_1a753ea2a:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1c3e4aea8_escapeSeq(_1c3e490e9_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59017_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1a7542aa5;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1a7541a0a:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a7541a71:;
			{
				_59017_seq=_1c3e4802c_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1a7541ae8:;
			{
				_59017_seq=_1c3e482e6_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a7541752:;
			{
				_59017_seq=_1c3e485b0_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1a75410d1:;
			{
				_59017_seq=_1c3e48879_byteEscape(_58929_txt);
			}
		}
		_match_end_1a7541642:;
	};
	_julec_label_1a7542aa5:;
	if (_59017_seq.empty()) {
		((*(_self_))._field_pos)++;
		_1c3e4967c_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59017_seq.len();
	return _59017_seq;;
}



inline jule::Str _1c3e4b3a4_getRune(_1c3e490e9_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1c3e4aea8_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _62314_r = 0;;
	jule::I32 _62317_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune((*(_61927_txt)));
		_62314_r = __jule_assign_result.__jule_result_arg0;
		_62317_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62317_n;
	return jule::Str::from_rune(_62314_r);;
}



inline jule::Str _1c3e4b6e5_lexRune(_1c3e490e9_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_1c38d3b83_StrBuilder _62917_run = static__1c38d3ea2_New(8LL);;
	_1c38dcc03_WriteByte(&_62917_run, '\'');
	((*(_self_))._field_column)++;
	jule::I32 _63217_n = 0LL;;
	jule::I32 _63317_i = 1LL;;
	for (; (_63317_i < (*(_62827_txt)).len()); (_63317_i)++) {
		{
			if (((*(_62827_txt))[_63317_i] == '\r')) {
				goto _iter_next_1a7547c97;
			};
			if (((*(_62827_txt))[_63317_i] == '\n')) {
				_1c3e4967c_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1c3e4be10_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64517_part = (*(_62827_txt)).slice(_63317_i);;
			jule::Str _64617_r = _1c3e4b3a4_getRune(_self_, &(_64517_part), false);;
			_1c38dc94a_WriteStr(&_62917_run, _64617_r);
			(*(_self_))._field_column+=_1c387e865_RuneCountStr(_64617_r);
			if (_64617_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1a7547c97;
			};
			if ((_64617_r.len() > 1LL)) {
				_63317_i+=(_64617_r.len() - 1LL);
			};
			(_63217_n)++;
		}
	_iter_next_1a7547c97:;
	}
	_iter_end_1a7547c97:;;
	if ((_63217_n == 0LL)) {
		_1c3e4967c_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63217_n > 1LL)) {
		_1c3e4967c_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _1c38dd242_Str(&_62917_run);;
}



inline jule::Str _1c3e4b97b_lexStr(_1c3e490e9_lex* _self_) {
	_1c38d3b83_StrBuilder _66917_s = static__1c38d3ea2_New(16LL);;
	jule::U8 _67013_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _67213_raw = (_67013_mark == '`');;
	_1c38dcc03_WriteByte(&_66917_s, _67013_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _67717_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_67717_ch == '\r')) {
				goto _iter_next_1a754d242;
			};
			if ((_67717_ch == '\n')) {
				_1c3e4be10_newLine(_self_);
				if ((!(_67213_raw))) {
					_1c3e4967c_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68921_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69017_r = _1c3e4b3a4_getRune(_self_, &(_68921_part), _67213_raw);;
			_1c38dc94a_WriteStr(&_66917_s, _69017_r);
			(*(_self_))._field_column+=_1c387e865_RuneCountStr(_69017_r);
			if ((_67717_ch == _67013_mark)) {
				goto _iter_end_1a754d242;
			};
		}
	_iter_next_1a754d242:;
	}
	_iter_end_1a754d242:;;
	return _1c38dd242_Str(&_66917_s);;
}



inline void _1c3e4be10_newLine(_1c3e490e9_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1c3e4c471_isOp(_1c3e490e9_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U32 _71048_id, jule::Ptr<_1c3e3a5e6_Token>* _71066_t) {
	if ((!(_1c3e4416b_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*(_71066_t)).get()._field_Kind=_71037_kind;
	(*(_71066_t)).get()._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1c3e4c86c_lexBasicOps(_1c3e490e9_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1c3e3a5e6_Token>* _72048_tok) {
	{
		auto expr = &(_1c3e43753_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7554798:;
		if (it != expr_end) {
			_1c3e42ed3_kindPair *_72116_pair = it;
			{
				if (_1c3e4c471_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1a7554798:;
			++it;
			goto _iter_begin_1a7554798;
		}
		_iter_end_1a7554798:;
	};
	return false;;
}



inline jule::Bool _1c3e4cc68_lexId(_1c3e490e9_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1c3e3a5e6_Token>* _72943_t) {
	jule::Str _73013_lex = _1c3e4a02e_id(_self_, _72925_txt);;
	if (_73013_lex.empty()) {
		return false;;
	};
	(*(_72943_t)).get()._field_Kind=_73013_lex;
	(*(_72943_t)).get()._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _1c3e4d164_lexNum(_1c3e490e9_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1c3e3a5e6_Token>* _73944_t) {
	jule::Str _74013_lex = _1c3e4ab67_num(_self_, _73926_txt);;
	if (_74013_lex.empty()) {
		return false;;
	};
	(*(_73944_t)).get()._field_Kind=_74013_lex;
	(*(_73944_t)).get()._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_1c3e3a5e6_Token> _1c3e4d3ea_token(_1c3e490e9_lex* _self_) {
	jule::Ptr<_1c3e3a5e6_Token> _75117_t = jule::new_ptr<_1c3e3a5e6_Token>(_1c3e3a5e6_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _75613_txt = _1c3e4a2b5_resume(_self_);;
	if ((_75613_txt == nullptr)) {
		return _75117_t;;
	};
	_75117_t.get()._field_Column=(*(_self_))._field_column;
	_75117_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_1c3e4d164_lexNum(_self_, &(_75613_txt), &(_75117_t))) {
			_case_begin_1a755b1b7:;
			{
				goto _match_end_1a75592e7;
			}
		}
		else if ((_75613_txt[0LL] == '\'')) {
			_case_begin_1a755a76b:;
			{
				_75117_t.get()._field_Kind=_1c3e4b6e5_lexRune(_self_, &(_75613_txt));
				_75117_t.get()._field_Id=static_cast<jule::U32>(4LLU);
				return _75117_t;;
			}
		}
		else if (((_75613_txt[0LL] == '\"') || (_75613_txt[0LL] == '`'))) {
			_case_begin_1a755a7d2:;
			{
				_75117_t.get()._field_Kind=_1c3e4b97b_lexStr(_self_);
				_75117_t.get()._field_Id=static_cast<jule::U32>(4LLU);
				return _75117_t;;
			}
		}
		else if (_1c3e4416b_bytesHasPrefix(&(_75613_txt), jule::Str("//", 2))) {
			_case_begin_1a755a848:;
			{
				_1c3e4a56d_lexLineComment(_self_, &(_75117_t));
				return _75117_t;;
			}
		}
		else if (_1c3e4416b_bytesHasPrefix(&(_75613_txt), jule::Str("/*", 2))) {
			_case_begin_1a7559bdd:;
			{
				_1c3e4a826_lexRangeComment(_self_, &(_75117_t));
				return _75117_t;;
			}
		}
		else if (_1c3e4c86c_lexBasicOps(_self_, _75613_txt, &(_75117_t))) {
			_case_begin_1a7559c54:;
			{
				goto _match_end_1a75592e7;
			}
		}
		else if (_1c3e4cc68_lexId(_self_, &(_75613_txt), &(_75117_t))) {
			_case_begin_1a7559cba:;
			{
				{
					auto expr = &(_1c3e43412_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a755ca59:;
					if (it != expr_end) {
						_1c3e42ed3_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == _75117_t.get()._field_Kind)) {
								_75117_t.get()._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1a755ca59;
							};
						}
						_iter_next_1a755ca59:;
						++it;
						goto _iter_begin_1a755ca59;
					}
					_iter_end_1a755ca59:;
				};
			}
		}
		else {
			_case_begin_1a7559b77:;
			{
				jule::I32 _79518_r = 0;;
				jule::I32 _79521_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune(_75613_txt);
					_79518_r = __jule_assign_result.__jule_result_arg0;
					_79521_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1c3e4967c_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79518_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79521_sz;
				return _75117_t;;
			}
		}
		_match_end_1a75592e7:;
	};
	(*(_self_))._field_column+=_1c387e865_RuneCountStr(_75117_t.get()._field_Kind);
	return _75117_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3e490e9_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4c94d23_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4c9586d_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ca7ad3_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1c4c9eec6_set(_1c4ca860b_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _23917_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23917_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23917_i] == '+')) {
			_case_begin_1a7a53109:;
			{
				(_23917_i)++;
			}
		}
		else if ((_23822_s[_23917_i] == '-')) {
			_case_begin_1a7a53307:;
			{
				(*(_self_))._field_neg=true;
				(_23917_i)++;
			}
		}
		_match_end_1a7a53219:;
	};
	jule::Bool _25617_sawdot = false;;
	jule::Bool _25717_sawdigits = false;;
	for (; (_23917_i < _23822_s.len()); (_23917_i)++) {
		{
			{
				
				if ((_23822_s[_23917_i] == '_')) {
					_case_begin_1a7a54ca9:;
					{
						goto _iter_next_1a7a54616;
					}
				}
				else if ((_23822_s[_23917_i] == '.')) {
					_case_begin_1a7a54d31:;
					{
						if (_25617_sawdot) {
							return __jule_func_result;;
						};
						_25617_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1a7a54616;
					}
				}
				else if ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9'))) {
					_case_begin_1a7a54da8:;
					{
						_25717_sawdigits=true;
						if (((_23822_s[_23917_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1a7a54616;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23917_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23917_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1a7a54616;
					}
				}
				_match_end_1a7a54b88:;
			};
			goto _iter_end_1a7a54616;
		}
	_iter_next_1a7a54616:;
	}
	_iter_end_1a7a54616:;;
	if ((!(_25717_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25617_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23917_i < _23822_s.len()) && (_1c4c9a466_lower(_23822_s[_23917_i]) == 'e'))) {
		(_23917_i)++;
		if ((_23917_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _30221_esign = 1LL;;
		if ((_23822_s[_23917_i] == '+')) {
			(_23917_i)++;
		} else if ((_23822_s[_23917_i] == '-')) {
			(_23917_i)++;
			_30221_esign=-1LL;
		};
		if ((((_23917_i >= _23822_s.len()) || (_23822_s[_23917_i] < '0')) || (_23822_s[_23917_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _31221_e = 0LL;;
		for (; ((_23917_i < _23822_s.len()) && ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9')) || (_23822_s[_23917_i] == '_'))); (_23917_i)++) {
			{
				if ((_23822_s[_23917_i] == '_')) {
					goto _iter_next_1a7a5aa6d;
				};
				if ((_31221_e < 10000LL)) {
					_31221_e=static_cast<jule::I32>((((_31221_e * 10LL) + static_cast<jule::I32>(_23822_s[_23917_i])) - '0'));
				};
			}
		_iter_next_1a7a5aa6d:;
		}
		_iter_end_1a7a5aa6d:;;
		(*(_self_))._field_dp+=(_31221_e * _30221_esign);
	};
	if ((_23917_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1c4ca0317_floatBits(_1c4ca860b_decimal* _self_, _1c4c94d23_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _33317_exp = 0LL;;
	jule::U64 _33417_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1a7a6a42e;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1a7a61a63;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1a7a6a42e;
	};
	_33317_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _35921_n = 0LL;;
			if (((*(_self_))._field_dp >= _1c4c9eb85_powtab.len())) {
				_35921_n=27LL;
			} else {
				_35921_n=_1c4c9eb85_powtab[(*(_self_))._field_dp];
			};
			_1c4ca8c6b_shift(_self_, static_cast<jule::I32>((-(_35921_n))));
			_33317_exp+=_35921_n;
		}
	_iter_next_1a7a6159b:;
	}
	_iter_end_1a7a6159b:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _36921_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1c4c9eb85_powtab.len())) {
				_36921_n=27LL;
			} else {
				_36921_n=_1c4c9eb85_powtab[(-((*(_self_))._field_dp))];
			};
			_1c4ca8c6b_shift(_self_, _36921_n);
			_33317_exp-=_36921_n;
		}
	_iter_next_1a7a62aec:;
	}
	_iter_end_1a7a62aec:;;
	(_33317_exp)--;
	if ((_33317_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I32 _38617_n = (((*(_33229_flt))._field_bias + 1LL) - _33317_exp);;
		_1c4ca8c6b_shift(_self_, static_cast<jule::I32>((-(_38617_n))));
		_33317_exp+=_38617_n;
	};
	if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1a7a61a63;
	};
	_1c4ca8c6b_shift(_self_, static_cast<jule::I32>(static_cast<jule::I32>((1LL + (*(_33229_flt))._field_mantbits))));
	_33417_mant=static_cast<jule::U64>(_1c4ca981b_roundedInteger(_self_));
	if ((_33417_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33417_mant>>=1LLU;
		(_33317_exp)++;
		if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1a7a61a63;
		};
	};
	if (((_33417_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33317_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1a7a6a42e;
	_julec_label_1a7a61a63:;
	_33417_mant=0LLU;
	_33317_exp=static_cast<jule::I32>(static_cast<jule::I32>((((static_cast<jule::U32>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U32>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1a7a6a42e:;
	jule::U64 _42217_bits = (_33417_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42217_bits|=(static_cast<jule::U64>(((_33317_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42217_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42217_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1c4ca89b3_assign(_1c4ca860b_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>();;
	jule::I32 _15517_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15717_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15717_v1);
			_15217_buf[_15517_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15517_n)++;
			_15129_v=_15717_v1;
		}
	_iter_next_1a7a6e07b:;
	}
	_iter_end_1a7a6e07b:;;
	(*(_self_))._field_nd=0LL;
	(_15517_n)--;
	for (; (_15517_n >= 0LL); (_15517_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15517_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1a7a6e9d8:;
	}
	_iter_end_1a7a6e9d8:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1c4ca9e59_trim(_self_);
}



inline void _1c4ca8c6b_shift(_1c4ca860b_decimal* _self_, jule::I32 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1a7a71996:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1a7a71a1d:;
			{
				while ((_17628_k > 60LL)) {
					{
						_1c4caa9a4_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1a7a72667:;
				}
				_iter_end_1a7a72667:;;
				_1c4caa9a4_leftShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1a7a71a95:;
			{
				while ((_17628_k < -60LL)) {
					{
						_1c4caa245_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1a7a725e0:;
				}
				_iter_end_1a7a725e0:;;
				_1c4caa245_rightShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>((-(_17628_k)))));
			}
		}
		_match_end_1a7a71875:;
	};
}



inline void _1c4ca9024_roundDown(_1c4ca860b_decimal* _self_, jule::I32 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_1c4ca9e59_trim(_self_);
}



inline void _1c4ca92cc_roundUp(_1c4ca860b_decimal* _self_, jule::I32 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _21117_i = (_20526_nd - 1LL);;
	for (; (_21117_i >= 0LL); (_21117_i)--) {
		{
			jule::U8 _21317_c = (*(_self_))._field_d[_21117_i];;
			if ((_21317_c < '9')) {
				((*(_self_))._field_d[_21117_i])++;
				(*(_self_))._field_nd=static_cast<jule::I32>((_21117_i + 1LL));
				return;;
			};
		}
	_iter_next_1a7a75b43:;
	}
	_iter_end_1a7a75b43:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1c4ca9585_round(_1c4ca860b_decimal* _self_, jule::I32 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1c4caad28_shouldRoundUp(_self_, _23224_nd)) {
		_1c4ca92cc_roundUp(_self_, _23224_nd);
	} else {
		_1c4ca9024_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _1c4ca981b_roundedInteger(_1c4ca860b_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _24917_i = 0LL;;
	jule::U64 _25017_n = 0LLU;;
	for (; ((_24917_i < (*(_self_))._field_dp) && (_24917_i < (*(_self_))._field_nd)); (_24917_i)++) {
		{
			_25017_n=static_cast<jule::U64>(((_25017_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24917_i] - '0'))));
		}
	_iter_next_1a7a78a69:;
	}
	_iter_end_1a7a78a69:;;
	for (; (_24917_i < (*(_self_))._field_dp); (_24917_i)++) {
		{
			_25017_n*=10LLU;
		}
	_iter_next_1a7a7a021:;
	}
	_iter_end_1a7a7a021:;;
	if (_1c4caad28_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25017_n)++;
	};
	return _25017_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4ca860b_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1c4cbcda1_Const> static__1c4cbd2e1_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1c4cbcda1_Const>(_1c4cbcda1_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1c4cbcda1_Const> static__1c4cbd5aa_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1c4cbcda1_Const>(_1c4cbcda1_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1c4cbcda1_Const> static__1c4cbd874_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1c4cbcda1_Const>(_1c4cbcda1_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1c4cbcda1_Const> static__1c4cbdb3d_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1c4cbcda1_Const>(_1c4cbcda1_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1c4cbcda1_Const> static__1c4cbde07_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1c4cbcda1_Const>(_1c4cbcda1_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1c4cbcda1_Const> static__1c4cbe116_NewNil(void) {
	return jule::new_ptr<_1c4cbcda1_Const>(_1c4cbcda1_Const{._field_data=nullptr});;
}



inline jule::I64 _1c4cbe776_ReadI64(_1c4cbcda1_Const* _self_) {
	if ((!(_1c4cc1d72_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _1c4cbea0c_ReadU64(_1c4cbcda1_Const* _self_) {
	if ((!(_1c4cc2108_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _1c4cbec93_ReadBool(_1c4cbcda1_Const* _self_) {
	if ((!(_1c4cc238e_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1c4cc0029_ReadStr(_1c4cbcda1_Const* _self_) {
	if ((!(_1c4cc2625_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1c4cc02b0_ReadF64(_1c4cbcda1_Const* _self_) {
	if ((!(_1c4cc28ab_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _1c4cc0546_AsI64(_1c4cbcda1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7aec978:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a7aed638:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a7aed69e:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1a7aed5c2:;
			{
				return 0LL;;
			}
		}
		_match_end_1a7aed56c:;
	};
}



inline jule::U64 _1c4cc07cc_AsU64(_1c4cbcda1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a7aee040:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7aeee53:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a7aeeeb9:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1a7aedd53:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a7aedced:;
	};
}



inline jule::F64 _1c4cc0a63_AsF64(_1c4cbcda1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a7b01c24:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7b007c2:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a7b016d5:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1a7b005d5:;
			{
				return 0LL;;
			}
		}
		_match_end_1a7b00580:;
	};
}



inline void _1c4cc0d1b_SetI64(_1c4cbcda1_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _1c4cc10c4_SetU64(_1c4cbcda1_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _1c4cc137c_SetBool(_1c4cbcda1_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _1c4cc1635_SetStr(_1c4cbcda1_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _1c4cc18dd_SetF64(_1c4cbcda1_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline jule::Bool _1c4cc1d72_IsI64(_1c4cbcda1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7b05464:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7b056ea:;
			{
				return false;;
			}
		}
		_match_end_1a7b05695:;
	};
}



inline jule::Bool _1c4cc2108_IsU64(_1c4cbcda1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a7b05d5a:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7b060ad:;
			{
				return false;;
			}
		}
		_match_end_1a7b06058:;
	};
}



inline jule::Bool _1c4cc238e_IsBool(_1c4cbcda1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a7b067b7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7b06a1a:;
			{
				return false;;
			}
		}
		_match_end_1a7b069b5:;
	};
}



inline jule::Bool _1c4cc2625_IsStr(_1c4cbcda1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a7b07224:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7b07477:;
			{
				return false;;
			}
		}
		_match_end_1a7b07422:;
	};
}



inline jule::Bool _1c4cc28ab_IsF64(_1c4cbcda1_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a7b07b81:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7b07dd4:;
			{
				return false;;
			}
		}
		_match_end_1a7b07d7e:;
	};
}



inline jule::Bool _1c4cc2b42_IsNil(_1c4cbcda1_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1c4cc32c4_And(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _23818_x) {
	{
		
		if ((_1c4cc238e_IsBool(_self_) && _1c4cc238e_IsBool(&_23818_x))) {
			_case_begin_1a7b0c1d5:;
			{
				return (_1c4cbec93_ReadBool(_self_) && _1c4cbec93_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1a7b0c12a:;
			{
				return false;;
			}
		}
		_match_end_1a7b0bc40:;
	};
}



inline jule::Bool _1c4cc3615_Or(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _24917_x) {
	{
		
		if ((_1c4cc238e_IsBool(_self_) && _1c4cc238e_IsBool(&_24917_x))) {
			_case_begin_1a7b0d4e4:;
			{
				return (_1c4cbec93_ReadBool(_self_) || _1c4cbec93_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1a7b0cb86:;
			{
				return false;;
			}
		}
		_match_end_1a7b0cadc:;
	};
}



inline jule::Bool _1c4cc3956_Eq(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _26017_x) {
	{
		
		if (_1c4cc2b42_IsNil(_self_)) {
			_case_begin_1a7b0e825:;
			{
				return _1c4cc2b42_IsNil(&_26017_x);;
			}
		}
		else if (_1c4cc238e_IsBool(_self_)) {
			_case_begin_1a7b0e89c:;
			{
				return (_1c4cc238e_IsBool(&_26017_x) && (_1c4cbec93_ReadBool(_self_) == _1c4cbec93_ReadBool(&_26017_x)));;
			}
		}
		else if (_1c4cc2625_IsStr(_self_)) {
			_case_begin_1a7b0eb22:;
			{
				return (_1c4cc2625_IsStr(&_26017_x) && (_1c4cc0029_ReadStr(_self_) == _1c4cc0029_ReadStr(&_26017_x)));;
			}
		}
		else if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b0eb88:;
			{
				return (_1c4cbe776_ReadI64(_self_) == _1c4cc0546_AsI64(&_26017_x));;
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b0ebee:;
			{
				return (_1c4cbea0c_ReadU64(_self_) == _1c4cc07cc_AsU64(&_26017_x));;
			}
		}
		else if (_1c4cc28ab_IsF64(_self_)) {
			_case_begin_1a7b0ec65:;
			{
				return (_1c4cc02b0_ReadF64(_self_) == _1c4cc0a63_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1a7b0de62:;
			{
				return false;;
			}
		}
		_match_end_1a7b0ddb8:;
	};
}



inline jule::Bool _1c4cc3c97_Lt(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _28717_x) {
	{
		
		if (_1c4cc2625_IsStr(_self_)) {
			_case_begin_1a7b134d8:;
			{
				return (_1c4cc2625_IsStr(&_28717_x) && (_1c4cc0029_ReadStr(_self_) < _1c4cc0029_ReadStr(&_28717_x)));;
			}
		}
		else if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b1354e:;
			{
				return (_1c4cbe776_ReadI64(_self_) < _1c4cc0546_AsI64(&_28717_x));;
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b135c6:;
			{
				return (_1c4cbea0c_ReadU64(_self_) < _1c4cc07cc_AsU64(&_28717_x));;
			}
		}
		else if (_1c4cc28ab_IsF64(_self_)) {
			_case_begin_1a7b13807:;
			{
				return (_1c4cc02b0_ReadF64(_self_) < _1c4cc0a63_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1a7b1020a:;
			{
				return false;;
			}
		}
		_match_end_1a7b1013e:;
	};
}



inline jule::Bool _1c4cc40d8_LtEq(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _31019_x) {
	{
		
		if (_1c4cc2625_IsStr(_self_)) {
			_case_begin_1a7b1619a:;
			{
				return (_1c4cc2625_IsStr(&_31019_x) && (_1c4cc0029_ReadStr(_self_) <= _1c4cc0029_ReadStr(&_31019_x)));;
			}
		}
		else if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b16211:;
			{
				return (_1c4cbe776_ReadI64(_self_) <= _1c4cc0546_AsI64(&_31019_x));;
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b16288:;
			{
				return (_1c4cbea0c_ReadU64(_self_) <= _1c4cc07cc_AsU64(&_31019_x));;
			}
		}
		else if (_1c4cc28ab_IsF64(_self_)) {
			_case_begin_1a7b164b9:;
			{
				return (_1c4cc02b0_ReadF64(_self_) <= _1c4cc0a63_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1a7b13d46:;
			{
				return false;;
			}
		}
		_match_end_1a7b13c7a:;
	};
}



inline jule::Bool _1c4cc4429_Gt(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _33317_x) {
	{
		
		if (_1c4cc2625_IsStr(_self_)) {
			_case_begin_1a7b18d5c:;
			{
				return (_1c4cc2625_IsStr(&_33317_x) && (_1c4cc0029_ReadStr(_self_) > _1c4cc0029_ReadStr(&_33317_x)));;
			}
		}
		else if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b18dc3:;
			{
				return (_1c4cbe776_ReadI64(_self_) > _1c4cc0546_AsI64(&_33317_x));;
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b18e4a:;
			{
				return (_1c4cbea0c_ReadU64(_self_) > _1c4cc07cc_AsU64(&_33317_x));;
			}
		}
		else if (_1c4cc28ab_IsF64(_self_)) {
			_case_begin_1a7b1917b:;
			{
				return (_1c4cc02b0_ReadF64(_self_) > _1c4cc0a63_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1a7b16a08:;
			{
				return false;;
			}
		}
		_match_end_1a7b1693c:;
	};
}



inline jule::Bool _1c4cc476a_GtEq(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _35619_x) {
	{
		
		if (_1c4cc2625_IsStr(_self_)) {
			_case_begin_1a7b1ba1e:;
			{
				return (_1c4cc2625_IsStr(&_35619_x) && (_1c4cc0029_ReadStr(_self_) >= _1c4cc0029_ReadStr(&_35619_x)));;
			}
		}
		else if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b1ba85:;
			{
				return (_1c4cbe776_ReadI64(_self_) >= _1c4cc0546_AsI64(&_35619_x));;
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b1bb0c:;
			{
				return (_1c4cbea0c_ReadU64(_self_) >= _1c4cc07cc_AsU64(&_35619_x));;
			}
		}
		else if (_1c4cc28ab_IsF64(_self_)) {
			_case_begin_1a7b1bd3d:;
			{
				return (_1c4cc02b0_ReadF64(_self_) >= _1c4cc0a63_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1a7b196ba:;
			{
				return false;;
			}
		}
		_match_end_1a7b195ee:;
	};
}



inline jule::Bool _1c4cc4aab_Add(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _37722_x) {
	{
		
		if (_1c4cc2625_IsStr(_self_)) {
			_case_begin_1a7b1e6d1:;
			{
				if ((!(_1c4cc2625_IsStr(&_37722_x)))) {
					return false;;
				};
				_1c4cc1635_SetStr(_self_, (_1c4cc0029_ReadStr(_self_) + _1c4cc0029_ReadStr(&_37722_x)));
			}
		}
		else if (_1c4cc28ab_IsF64(_self_)) {
			_case_begin_1a7b1e747:;
			{
				_1c4cc18dd_SetF64(_self_, static_cast<jule::F64>((_1c4cc02b0_ReadF64(_self_) + _1c4cc0a63_AsF64(&_37722_x))));
			}
		}
		else if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b1e7be:;
			{
				if (_1c4cc28ab_IsF64(&_37722_x)) {
					_1c4cc18dd_SetF64(_self_, static_cast<jule::F64>((_1c4cc0a63_AsF64(_self_) + _1c4cc02b0_ReadF64(&_37722_x))));
				} else {
					_1c4cc0d1b_SetI64(_self_, static_cast<jule::I64>((_1c4cbe776_ReadI64(_self_) + _1c4cc0546_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b1ea00:;
			{
				if (_1c4cc28ab_IsF64(&_37722_x)) {
					_1c4cc18dd_SetF64(_self_, static_cast<jule::F64>((_1c4cc0a63_AsF64(_self_) + _1c4cc02b0_ReadF64(&_37722_x))));
				} else {
					_1c4cc10c4_SetU64(_self_, static_cast<jule::U64>((_1c4cbea0c_ReadU64(_self_) + _1c4cc07cc_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1a7b1c37c:;
			{
				return false;;
			}
		}
		_match_end_1a7b1c2b1:;
	};
	return true;;
}



inline jule::Bool _1c4cc4dec_Sub(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _40622_x) {
	{
		
		if (_1c4cc28ab_IsF64(_self_)) {
			_case_begin_1a7b24609:;
			{
				_1c4cc18dd_SetF64(_self_, static_cast<jule::F64>((_1c4cc02b0_ReadF64(_self_) - _1c4cc0a63_AsF64(&_40622_x))));
			}
		}
		else if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b24681:;
			{
				if (_1c4cc28ab_IsF64(&_40622_x)) {
					_1c4cc18dd_SetF64(_self_, static_cast<jule::F64>((_1c4cc0a63_AsF64(_self_) - _1c4cc02b0_ReadF64(&_40622_x))));
				} else {
					_1c4cc0d1b_SetI64(_self_, static_cast<jule::I64>((_1c4cbe776_ReadI64(_self_) - _1c4cc0546_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b24708:;
			{
				if (_1c4cc28ab_IsF64(&_40622_x)) {
					_1c4cc18dd_SetF64(_self_, static_cast<jule::F64>((_1c4cc0a63_AsF64(_self_) - _1c4cc02b0_ReadF64(&_40622_x))));
				} else {
					_1c4cc10c4_SetU64(_self_, static_cast<jule::U64>((_1c4cbea0c_ReadU64(_self_) - _1c4cc07cc_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1a7b23dcd:;
			{
				return false;;
			}
		}
		_match_end_1a7b23d12:;
	};
	return true;;
}



inline jule::Bool _1c4cc523d_Mul(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _43022_x) {
	{
		
		if (_1c4cc28ab_IsF64(_self_)) {
			_case_begin_1a7b286a7:;
			{
				_1c4cc18dd_SetF64(_self_, static_cast<jule::F64>((_1c4cc02b0_ReadF64(_self_) * _1c4cc0a63_AsF64(&_43022_x))));
			}
		}
		else if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b2872e:;
			{
				if (_1c4cc28ab_IsF64(&_43022_x)) {
					_1c4cc18dd_SetF64(_self_, static_cast<jule::F64>((_1c4cc0a63_AsF64(_self_) * _1c4cc02b0_ReadF64(&_43022_x))));
				} else {
					_1c4cc0d1b_SetI64(_self_, static_cast<jule::I64>((_1c4cbe776_ReadI64(_self_) * _1c4cc0546_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b287a6:;
			{
				if (_1c4cc28ab_IsF64(&_43022_x)) {
					_1c4cc18dd_SetF64(_self_, static_cast<jule::F64>((_1c4cc0a63_AsF64(_self_) * _1c4cc02b0_ReadF64(&_43022_x))));
				} else {
					_1c4cc10c4_SetU64(_self_, static_cast<jule::U64>((_1c4cbea0c_ReadU64(_self_) * _1c4cc07cc_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1a7b27d38:;
			{
				return false;;
			}
		}
		_match_end_1a7b27c6c:;
	};
	return true;;
}



inline jule::Bool _1c4cc557e_Div(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _45822_x) {
	{
		
		if (_1c4cc28ab_IsF64(_self_)) {
			_case_begin_1a7b2c755:;
			{
				jule::F64 _46117_l = _1c4cc0a63_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1c4cc18dd_SetF64(_self_, static_cast<jule::F64>(jule::div(_1c4cc02b0_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b2c7cc:;
			{
				jule::F64 _46717_l = _1c4cc0a63_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1c4cc18dd_SetF64(_self_, static_cast<jule::F64>(jule::div(_1c4cc0a63_AsF64(_self_),_46717_l)));
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b2c854:;
			{
				jule::F64 _47317_l = _1c4cc0a63_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1c4cc18dd_SetF64(_self_, static_cast<jule::F64>(jule::div(_1c4cc0a63_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1a7b2bdd6:;
			{
				return false;;
			}
		}
		_match_end_1a7b2bd1a:;
	};
	return true;;
}



inline jule::Bool _1c4cc58c0_Mod(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _48722_x) {
	{
		
		if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b31935:;
			{
				jule::I64 _49017_l = _1c4cc0546_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1c4cc0d1b_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1c4cbe776_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b319ac:;
			{
				jule::U64 _49617_l = _1c4cc07cc_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1c4cc10c4_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1c4cbea0c_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1a7b3187a:;
			{
				return false;;
			}
		}
		_match_end_1a7b30549:;
	};
	return true;;
}



inline jule::Bool _1c4cc5c11_BitwiseAnd(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _50929_x) {
	{
		
		if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b3485b:;
			{
				_1c4cc0d1b_SetI64(_self_, static_cast<jule::I64>((_1c4cbe776_ReadI64(_self_) & _1c4cc0546_AsI64(&_50929_x))));
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b348d3:;
			{
				_1c4cc10c4_SetU64(_self_, static_cast<jule::U64>((_1c4cbea0c_ReadU64(_self_) & _1c4cc07cc_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1a7b347a1:;
			{
				return false;;
			}
		}
		_match_end_1a7b33470:;
	};
	return true;;
}



inline jule::Bool _1c4cc6052_BitwiseOr(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _52328_x) {
	{
		
		if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b366d7:;
			{
				_1c4cc0d1b_SetI64(_self_, static_cast<jule::I64>((_1c4cbe776_ReadI64(_self_) | _1c4cc0546_AsI64(&_52328_x))));
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b3675e:;
			{
				_1c4cc10c4_SetU64(_self_, static_cast<jule::U64>((_1c4cbea0c_ReadU64(_self_) | _1c4cc07cc_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1a7b3661b:;
			{
				return false;;
			}
		}
		_match_end_1a7b36550:;
	};
	return true;;
}



inline jule::Bool _1c4cc6393_Xor(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _53722_x) {
	{
		
		if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b38563:;
			{
				_1c4cc0d1b_SetI64(_self_, static_cast<jule::I64>((_1c4cbe776_ReadI64(_self_) ^ _1c4cc0546_AsI64(&_53722_x))));
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b385da:;
			{
				_1c4cc10c4_SetU64(_self_, static_cast<jule::U64>((_1c4cbea0c_ReadU64(_self_) ^ _1c4cc07cc_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1a7b38497:;
			{
				return false;;
			}
		}
		_match_end_1a7b383cb:;
	};
	return true;;
}



inline jule::Bool _1c4cc66d4_Lshift(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _55125_x) {
	{
		
		if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b3a3de:;
			{
				jule::I64 _55417_l = _1c4cc0546_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1c4cc07cc_AsU64(&_55125_x);;
					_1c4cc0d1b_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1c4cc6dbb_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b3a466:;
			{
				_1c4cc6dbb_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1a7b3a323:;
			{
				return false;;
			}
		}
		_match_end_1a7b3a257:;
	};
	return true;;
}



inline jule::Bool _1c4cc6a25_Rshift(_1c4cbcda1_Const* _self_, _1c4cbcda1_Const _57125_x) {
	{
		
		if (_1c4cc1d72_IsI64(_self_)) {
			_case_begin_1a7b3c9b8:;
			{
				jule::I64 _57417_l = _1c4cc0546_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1c4cc07cc_AsU64(&_57125_x);;
					_1c4cc0d1b_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1c4cc71eb_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1c4cc2108_IsU64(_self_)) {
			_case_begin_1a7b3ca40:;
			{
				_1c4cc71eb_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1a7b3c8ec:;
			{
				return false;;
			}
		}
		_match_end_1a7b3c831:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1c4cbcda1_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa41996_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa4290e_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa42c61_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa765e1_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa76beb_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa76ee8_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7738e_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7768b_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa77a21_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa77d1d_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaa7847d_IsUnsafe(_1aaa7811a_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7811a_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaa78c20_AutoSized(_1aaa788ac_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa788ac_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7910a_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa794d4_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7a925_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7ac22_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7b2e9_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7b5e6_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7b9c0_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7bd99_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7c350_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7c9d2_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7cdab_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7d285_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7d65e_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7db15_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7e0bb_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaa7eaa0_Unhandled(_1aaa7e72b_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1aaa7ed36_Ignored(_1aaa7e72b_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa7e72b_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa80221_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa80a4b_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa81002_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8182c_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa82025_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa829b5_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa83125_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa83422_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa838c8_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa83ca2_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8417b_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa84478_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa84ad8_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8516b_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8607e_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa866de_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaa872a0_IsSelf(_1aaa86e2b_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa86e2b_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaa886e1_IsAnon(_1aaa8837d_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8837d_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8945b_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa89835_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaa8a33b_IsInf(_1aaa89ec8_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa89ec8_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaa8ab66_IsWhileNext(_1aaa8a803_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8a803_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8b20a_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8b5d4_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8b9ad_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8be64_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8c33d_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8c7e4_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8d031_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8d4d7_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8dc24_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8e53d_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa8e9e4_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa905a5_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa90dd0_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa91540_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa91809_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa92200_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa9293c_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa9309c_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aaa997e0_FieldIns> _1aaa94741_instance(jule::Ptr<_1aaa943bc_Field> _self_) {
	return jule::new_ptr<_1aaa997e0_FieldIns>(_1aaa997e0_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa943bc_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa9639c_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aaa9a390_StructIns> _1aaa97733_instance(jule::Ptr<_1aaa972b0_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1aaa9a390_StructIns> _10017_ins = jule::new_ptr<_1aaa9a390_StructIns>(_1aaa9a390_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1aaa997e0_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1aab68969_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1aaab9546_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e3a436:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = _10017_ins.get()._field_Statics; __jule_push_dest.push(jule::new_ptr<_1aab68969_Var>((*(_10721_s)))); };
			}
			_iter_next_1a7e3a436:;
			++it;
			goto _iter_begin_1a7e3a436;
		}
		_iter_end_1a7e3a436:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e3c36c:;
		if (it != expr_end) {
			jule::Ptr<_1aaa943bc_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaa997e0_FieldIns>> &__jule_push_dest = _10017_ins.get()._field_Fields; __jule_push_dest.push(_1aaa94741_instance(_11121_f)); };
				if ((((!(_11121_f.get()._field_Mutable)) && (_11121_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1aabeda87_Mutable(_11121_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_10017_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1a7e3c36c:;
			++it;
			goto _iter_begin_1a7e3c36c;
		}
		_iter_end_1a7e3c36c:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_10017_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_10017_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1aaab3199_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7e3e43a:;
			if (it != expr_end) {
				jule::Ptr<_1aaab3199_Fn> _12225_f = *it;
				{
					jule::Ptr<_1aaab3199_Fn> _12325_fins = jule::new_ptr<_1aaab3199_Fn>((*(_12225_f)));;
					_12325_fins.get()._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1aaab3199_Fn>> &__jule_push_dest = _10017_ins.get()._field_Methods; __jule_push_dest.push(_12325_fins); };
				}
				_iter_next_1a7e3e43a:;
				++it;
				goto _iter_begin_1a7e3e43a;
			}
			_iter_end_1a7e3e43a:;
		};
	};
	return _10017_ins;;
}



inline jule::Ptr<_1aaa9a390_StructIns> _1aaa97a41_appendInstance(_1aaa972b0_Struct* _self_, jule::Ptr<_1aaa9a390_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e41063:;
		if (it != expr_end) {
			jule::Ptr<_1aaa9a390_StructIns> _14021_ains = *it;
			{
				if (_1aaa9b00b_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1a7e41063:;
			++it;
			goto _iter_begin_1a7e41063;
		}
		_iter_end_1a7e41063:;
	};
	{ jule::Slice<jule::Ptr<_1aaa9a390_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1aaab3199_Fn> _1aaa97e3c_FindMethod(_1aaa972b0_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e42ae2:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _15321_f = *it;
			{
				if (((_15321_f.get()._field_Statically == _15241_statically) && (_15321_f.get()._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1a7e42ae2:;
			++it;
			goto _iter_begin_1a7e42ae2;
		}
		_iter_end_1a7e42ae2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aab68969_Var> _1aaa9827d_FindStatic(_1aaa972b0_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e42a04:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> _16421_v = *it;
			{
				if ((_16421_v.get()._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1a7e42a04:;
			++it;
			goto _iter_begin_1a7e42a04;
		}
		_iter_end_1a7e42a04:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa943bc_Field> _1aaa985be_FindField(_1aaa972b0_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e44ae4:;
		if (it != expr_end) {
			jule::Ptr<_1aaa943bc_Field> _17521_f = *it;
			{
				if ((_17521_f.get()._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1a7e44ae4:;
			++it;
			goto _iter_begin_1a7e44ae4;
		}
		_iter_end_1a7e44ae4:;
	};
	return nullptr;;
}



inline jule::Bool _1aaa98910_IsImplements(_1aaa972b0_Struct* _self_, jule::Ptr<_1aaac6443_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e459d5:;
		if (it != expr_end) {
			jule::Ptr<_1aaac6443_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1a7e459d5:;
			++it;
			goto _iter_begin_1a7e459d5;
		}
		_iter_end_1a7e459d5:;
	};
	return false;;
}



inline jule::Bool _1aaa98c51_IsDerives(_1aaa972b0_Struct* _self_, jule::Str _19424_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e467b6:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42c61_Directive> *_19516_d = it;
			{
				if ((*(_19516_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19516_d)).get()._field_Args.len() == 1LL) && ((*(_19516_d)).get()._field_Args[0LL].get()._field_Kind == _19424_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1a7e467b6:;
			++it;
			goto _iter_begin_1a7e467b6;
		}
		_iter_end_1a7e467b6:;
	};
	return false;;
}



inline jule::Bool _1aaa99092_IsUses(_1aaa972b0_Struct* _self_, jule::Ptr<_1aaa972b0_Struct> _20621_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e4be1a:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> *_20716_u = it;
			{
				while ((_20621_s == (*(_20716_u)))) {
					{
						return true;;
					}
				_iter_next_1a7e4d9cc:;
				}
				_iter_end_1a7e4d9cc:;;
			}
			_iter_next_1a7e4be1a:;
			++it;
			goto _iter_begin_1a7e4be1a;
		}
		_iter_end_1a7e4be1a:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa972b0_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa997e0_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa9e471_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa9e96b_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa9ed45_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa0373_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa0719_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa0a16_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa1099_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa194b_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa1d25_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa22cb_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa26a5_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa2a7e_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa3035_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa35b8_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa3b4b_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa44dc_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa4993_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa4d6c_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa5169_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa56ec_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa59e9_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa5dc3_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa629c_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa6599_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa6973_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa6d4c_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa7303_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa77a9_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa7b83_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa7e80_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa827c_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa88ed_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa8b62_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa903b_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa9338_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa9635_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa9932_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaa9c2e_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaaa108_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaaa405_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaab0d7_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aaab5102_ParamIns> _1aaaabbed_instance(jule::Ptr<_1aaaab868_Param> _self_) {
	return jule::new_ptr<_1aaab5102_ParamIns>(_1aaab5102_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1aaaabe84_IsSelf(_1aaaab868_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1aaaac21a_IsRef(_1aaaab868_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaab868_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaab361c_IsVoid(_1aaab3199_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1aaab38a3_IsMethod(_1aaab3199_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1aaab3b39_IsEntryPoint(_1aaab3199_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1aaab3dc0_IsInit(_1aaab3199_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1aaab4156_IsAnon(_1aaab3199_Fn* _self_) {
	return _1c3e3d31e_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1aaab43dc_AnyVar(_1aaab3199_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1aaab609d_FnIns> _1aaab4673_instanceForce(jule::Ptr<_1aaab3199_Fn> _self_) {
	jule::Ptr<_1aaab609d_FnIns> _10117_ins = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1aab037e4_Scope>(), ._field_Refers=static__1aaab9546_new(), });;
	_10117_ins.get()._field_Params=jule::Slice<jule::Ptr<_1aaab5102_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e628e2:;
		if (it != expr_end) {
			jule::Ptr<_1aaaab868_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaab5102_ParamIns>> &__jule_push_dest = _10117_ins.get()._field_Params; __jule_push_dest.push(_1aaaabbed_instance(_10821_p)); };
			}
			_iter_next_1a7e628e2:;
			++it;
			goto _iter_begin_1a7e628e2;
		}
		_iter_end_1a7e628e2:;
	};
	if ((_10117_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10117_ins.get()._field_Result=_10117_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10117_ins;;
}



inline jule::Ptr<_1aaab609d_FnIns> _1aaab4909_instance(jule::Ptr<_1aaab3199_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1aaab4673_instanceForce(_self_);;
}



inline jule::Ptr<_1aaab609d_FnIns> _1aaab4c17_appendInstance(_1aaab3199_Fn* _self_, jule::Ptr<_1aaab609d_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1aaab609d_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1aaab609d_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e66e8a:;
		if (it != expr_end) {
			jule::Ptr<_1aaab609d_FnIns> _14521_ains = *it;
			{
				if (_1aaab7b0a_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1a7e66e8a:;
			++it;
			goto _iter_begin_1a7e66e8a;
		}
		_iter_end_1a7e66e8a:;
	};
	{ jule::Slice<jule::Ptr<_1aaab609d_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaab3199_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aaab5465_Str(_1aaab5102_ParamIns* _self_) {
	_1c38d3b83_StrBuilder _16717_s = static__1c38d3ea2_New(32LL);;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		_1c38dc94a_WriteStr(&_16717_s, jule::Str("mut ", 4));
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		_1c38dc94a_WriteStr(&_16717_s, jule::Str("&_:", 3));
	};
	if (_1aaaabe84_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1aaaac21a_IsRef((*(_self_))._field_Decl.ptr())) {
			_1c38dcc03_WriteByte(&_16717_s, '&');
		};
		_1c38dc94a_WriteStr(&_16717_s, jule::Str("self", 4));
		return _1c38dd242_Str(&_16717_s);;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		_1c38dc94a_WriteStr(&_16717_s, jule::Str("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1c38dc94a_WriteStr(&_16717_s, _1aabec5ad_Str((*(_self_))._field_Kind.ptr()));
	};
	return _1c38dd242_Str(&_16717_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaab5102_ParamIns _Src) {
	_Stream << _1aaab5465_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaab63de_Str(_1aaab609d_FnIns* _self_) {
	;
	return _1aaab7e4b_GetKindStr(_self_, false);;
}



inline jule::Bool _1aaab6730_Equal(jule::Ptr<_1aaab609d_FnIns> _self_, jule::Ptr<_1aabec1e5_TypeKind> _21821_other) {
	jule::Ptr<_1aaab609d_FnIns> _21913_f = _1aac00dca_Fn(_21821_other.ptr());;
	if ((_21913_f == nullptr)) {
		return false;;
	};
	return _1aaab6bc5_EqualFn(_self_, &(_21913_f));;
}



inline jule::Bool _1aaab6bc5_EqualFn(jule::Ptr<_1aaab609d_FnIns> _self_, jule::Ptr<_1aaab609d_FnIns>* _22924_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22924_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22924_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1aaab361c_IsVoid(_self_.get()._field_Decl.ptr()) != _1aaab361c_IsVoid((*(_22924_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1aaab5102_ParamIns>,jule::Ptr<_1aaab5102_ParamIns>)> _23913_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1aaab5102_ParamIns>,jule::Ptr<_1aaab5102_ParamIns>)>([=](jule::Ptr<_1aaab5102_ParamIns> _23930_p1, jule::Ptr<_1aaab5102_ParamIns> _23945_p2) mutable -> jule::Bool {
		if ((_23930_p1.get()._field_Decl.get()._field_Mutable != _23945_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1aaaabe84_IsSelf(_23930_p1.get()._field_Decl.ptr())) {
			if ((!(_1aaaabe84_IsSelf(_23945_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1aaaac21a_IsRef(_23930_p1.get()._field_Decl.ptr()) != _1aaaac21a_IsRef(_23945_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23930_p1.get()._field_Decl.get()._field_Reference != _23945_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23930_p1.get()._field_Decl.get()._field_Variadic != _23945_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1aabec8ee_Equal(_23930_p1.get()._field_Kind, _23945_p2.get()._field_Kind);;
	});;
	if (((*(_22924_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I32 _27117_i = 0LL;;
	for (; (_27117_i < _self_.get()._field_Params.len()); (_27117_i)++) {
		{
			if ((!(_23913_checkParams(_self_.get()._field_Params[_27117_i], (*(_22924_f)).get()._field_Params[_27117_i])))) {
				return false;;
			};
		}
	_iter_next_1a7e74bce:;
	}
	_iter_end_1a7e74bce:;;
	if ((!(_1aaab361c_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1aabec8ee_Equal(_self_.get()._field_Result, (*(_22924_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1aaab7016_equalTrait(jule::Ptr<_1aaab609d_FnIns> _self_, jule::Ptr<_1aaab609d_FnIns>* _28827_other) {
	if ((_self_.get()._field_Decl.get()._field_Public != (*(_28827_other)).get()._field_Decl.get()._field_Public)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Ident != (*(_28827_other)).get()._field_Decl.get()._field_Ident)) {
		return false;;
	};
	if ((!(_1aaab6bc5_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28827_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> _1aaab729c_Types(_1aaab609d_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1a7e78b39:;
			{
				return nullptr;;
			}
		}
		else if ((_1aac01914_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1a7e78ba0:;
			{
				return jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1a7e78ac3:;
			{
				return _1aac01914_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1a7e78a07:;
	};
}



inline jule::Bool _1aaab7533_IsBuiltin(_1aaab609d_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1aaab77b9_IsAnon(_1aaab609d_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1aaab4156_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1aaab7b0a_Same(_1aaab609d_FnIns* _self_, jule::Ptr<_1aaab609d_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != _33119_f.get()._field_Decl) || (_33119_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e7b4cc:;
		if (it != expr_end) {
			jule::I32 _33613_i = it - expr->begin();
			jule::Ptr<_1aabea80e_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1aabea80e_InsGeneric> _33717_g2 = _33119_f.get()._field_Generics[_33613_i];;
				if ((((*(_33616_g)).get()._field_Kind.get()._field_BindIdent != _33717_g2.get()._field_Kind.get()._field_BindIdent) || (!(_1aabec8ee_Equal((*(_33616_g)).get()._field_Kind, _33717_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1a7e7b4cc:;
			++it;
			_33613_i++;
			goto _iter_begin_1a7e7b4cc;
		}
		_iter_end_1a7e7b4cc:;
	};
	return true;;
}



inline jule::Str _1aaab7e4b_GetKindStr(_1aaab609d_FnIns* _self_, jule::Bool _34825_ident) {
	_1c38d3b83_StrBuilder _34917_s = static__1c38d3ea2_New(32LL);;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		_1c38dc94a_WriteStr(&_34917_s, jule::Str("unsafe ", 7));
	};
	_1c38dc94a_WriteStr(&_34917_s, jule::Str("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1c38dcc03_WriteByte(&_34917_s, ' ');
		_1c38dc94a_WriteStr(&_34917_s, (*(_self_))._field_Decl.get()._field_Ident);
	};
	_1c38dcc03_WriteByte(&_34917_s, '(');
	jule::I32 _36313_n = (*(_self_))._field_Params.len();;
	if ((_36313_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7e81614:;
			if (it != expr_end) {
				jule::I32 _36517_i = it - expr->begin();
				jule::Ptr<_1aaab5102_ParamIns> *_36520_p = it;
				{
					_1c38dc94a_WriteStr(&_34917_s, _1aaab5465_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1c38dcc03_WriteByte(&_34917_s, ',');
					};
				}
				_iter_next_1a7e81614:;
				++it;
				_36517_i++;
				goto _iter_begin_1a7e81614;
			}
			_iter_end_1a7e81614:;
		};
	};
	_1c38dcc03_WriteByte(&_34917_s, ')');
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		_1c38dcc03_WriteByte(&_34917_s, '!');
	};
	if ((!(_1aaab361c_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_1c38dcc03_WriteByte(&_34917_s, ':');
		_1c38dc94a_WriteStr(&_34917_s, _1aabec5ad_Str((*(_self_))._field_Result.ptr()));
	};
	return _1c38dd242_Str(&_34917_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaab609d_FnIns _Src) {
	_Stream << _1aaab63de_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1aaab9249_ReferenceStack> static__1aaab9546_new(void) {
	return jule::new_ptr<_1aaab9249_ReferenceStack>(_1aaab9249_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I32 _1aaab9942_Len(_1aaab9249_ReferenceStack* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1aaab9c83_At(_1aaab9249_ReferenceStack* _self_, jule::I32 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1aaaba03b_Push(_1aaab9249_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1a89c1d02_Exist(_1aaab9249_ReferenceStack* _self_, jule::Ptr<_1aaab609d_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a89c3001:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a89c3001:;
			++it;
			goto _iter_begin_1a89c3001;
		}
		_iter_end_1a89c3001:;
	};
	return false;;
}

inline jule::Bool _1c61a6d49_Exist(_1aaab9249_ReferenceStack* _self_, jule::Ptr<_1aab68969_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61a8004:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1c61a8004:;
			++it;
			goto _iter_begin_1c61a8004;
		}
		_iter_end_1c61a8004:;
	};
	return false;;
}

inline jule::Bool _1a8a37b6a_Exist(_1aaab9249_ReferenceStack* _self_, jule::Ptr<_1aaa9a390_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a38d69:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a8a38d69:;
			++it;
			goto _iter_begin_1a8a38d69;
		}
		_iter_end_1a8a38d69:;
	};
	return false;;
}

inline jule::Bool _1a8c82887_Exist(_1aaab9249_ReferenceStack* _self_, jule::Ptr<_1aaac6443_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c83a20:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1a8c83a20:;
			++it;
			goto _iter_begin_1a8c83a20;
		}
		_iter_end_1a8c83a20:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaab9249_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaba767_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1aaac0bbd_pushErr(_1aaac032c_symbolBuilder* _self_, jule::Ptr<_1c3e3a5e6_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_1c3983b45_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1aab43955_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1aaac144e_pushSuggestion(_1aaac032c_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1aab44e84_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1aaac184a_checkCppUseDeclPath(_1aaac032c_symbolBuilder* _self_, jule::Ptr<_1aaa8e53d_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _1c38e1421_Ext((*(_34556_path)));;
	if (((!(_1c3976ad3_IsValidHeaderExt(_34613_ext))) && (!(_1c3976d9c_IsValidCppExt(_34613_ext))))) {
		_1aaac0bbd_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_206b7b9ca_Status> _35313_info = ({
		auto except = static__206b6dc86_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1aaac0bbd_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_206b7b9ca_Status>(nullptr);});
	});;
	if (_206b7bda4_IsDir(_35313_info.ptr())) {
		_1aaac0bbd_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1aaac1b58_buildCppHeaderImport(_1aaac032c_symbolBuilder* _self_, jule::Ptr<_1aaa8e53d_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*(_36544_decl)).get()._field_LinkPath;;
	if ((!(_1c397682a_IsStdHeaderPath((*(_36544_decl)).get()._field_LinkPath)))) {
		_36617_path=_1c38e1157_Join(jule::Slice<jule::Str>::make({_1c3e41531_Dir((*(_36544_decl)).get()._field_Token.get()._field_File.ptr()),(*(_36544_decl)).get()._field_LinkPath}));
		jule::Bool _37021_ok = _1aaac184a_checkCppUseDeclPath(_self_, _36544_decl, &(_36617_path));;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c38e16da_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_1aaac0bbd_pushErr(_self_, &((*(_36544_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_36544_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_1aab24c33_ImportInfo>(_1aab24c33_ImportInfo{._field_Token=(*(_36544_decl)).get()._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*(_36544_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1aaac1e99_buildStdImport(_1aaac032c_symbolBuilder* _self_, jule::Ptr<_1aaa8e53d_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*(_39338_decl)).get()._field_LinkPath.slice(5LL);;
	_39417_path=_1c38c536c_Replace(_39417_path, jule::Str("::", 2), jule::Str("/", 1), -1LL);
	_39417_path=_1c38e1157_Join(jule::Slice<jule::Str>::make({_1c3a94bbd_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c38e16da_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_1aaac0bbd_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_206b7b9ca_Status> _40413_info = ({
		auto except = static__206b6dc86_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_1aaac0bbd_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_206b7b9ca_Status>(nullptr);});
	});;
	if ((!(_206b7bda4_IsDir(_40413_info.ptr())))) {
		_1aaac0bbd_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _41413_i = (_1c38c06ec_FindLast((*(_39338_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*(_39338_decl)).get()._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_1aab24c33_ImportInfo>(_1aab24c33_ImportInfo{._field_Token=(*(_39338_decl)).get()._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*(_39338_decl)).get()._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*(_39338_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*(_39338_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1aab27b59_Package>(_1aab27b59_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1aaac22da_buildIdentImport(jule::Ptr<_1aaac032c_symbolBuilder> _self_, jule::Ptr<_1aaa8e53d_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _1aab21d1d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aab20d83_GetModPath(_self_.get()._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_1aaac0bbd_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1aaac144e_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*(_43241_decl)).get()._field_LinkPath;;
	_44017_path=_1c38c536c_Replace(_44017_path, jule::Str("::", 2), jule::Str("/", 1), -1LL);
	_44017_path=_1c38e1157_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c38e16da_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_1aaac0bbd_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_206b7b9ca_Status> _45113_info = ({
		auto except = static__206b6dc86_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_1aaac0bbd_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_206b7b9ca_Status>(nullptr);});
	});;
	if ((!(_206b7bda4_IsDir(_45113_info.ptr())))) {
		_1aaac0bbd_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _46113_i = (_1c38c06ec_FindLast((*(_43241_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*(_43241_decl)).get()._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_1aab24c33_ImportInfo>(_1aab24c33_ImportInfo{._field_Token=(*(_43241_decl)).get()._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*(_43241_decl)).get()._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*(_43241_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*(_43241_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1aab27b59_Package>(_1aab27b59_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1aaac262b_buildImport(jule::Ptr<_1aaac032c_symbolBuilder> _self_, jule::Ptr<_1aaa8e53d_UseDecl>* _47936_decl) {
	{
		
		if ((*(_47936_decl)).get()._field_Binded) {
			_case_begin_1a7eb52a2:;
			{
				return _1aaac1b58_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*(_47936_decl)).get()._field_Std) {
			_case_begin_1a7eb4b64:;
			{
				return _1aaac1e99_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1a7eb4aed:;
			{
				return _1aaac22da_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1a7eb4a32:;
	};
}



inline jule::Bool _1aaac296c_checkDuplicateUseDecl(_1aaac032c_symbolBuilder* _self_, jule::Ptr<_1aab24c33_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aab24c33_ImportInfo> _49213_lpkg = _1aabb71d2_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)>([=](jule::Ptr<_1aab24c33_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*(_49041_pkg)).get()._field_Path == _49248_spkg.get()._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1aaac0bbd_pushErr(_self_, &((*(_49041_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_49041_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_1aaac144e_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1aaac2cd0_implImportSelections(_1aaac032c_symbolBuilder* _self_, jule::Ptr<_1aab24c33_ImportInfo>* _50444_imp, jule::Ptr<_1aaa8e53d_UseDecl>* _50467_decl) {
	(*(_50444_imp)).get()._field_Selected=(*(_50467_decl)).get()._field_Selected;
	{
		auto expr = &((*(_50444_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7eb89d1:;
		if (it != expr_end) {
			jule::Ptr<_1c3e3a5e6_Token> _50616_item = *it;
			{
				{
					auto expr = &((*(_50444_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a7eb942c:;
					if (it != expr_end) {
						jule::Ptr<_1c3e3a5e6_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1a7eb942c;
							} else if ((_50616_item.get()._field_Kind == _50720_citem.get()._field_Kind)) {
								_1aaac0bbd_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_50616_item.get()._field_Kind, &__jule_any_type5)}));
								_1aaac144e_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1a7eb942c;
							};
						}
						_iter_next_1a7eb942c:;
						++it;
						goto _iter_begin_1a7eb942c;
					}
					_iter_end_1a7eb942c:;
				};
			}
			_iter_next_1a7eb89d1:;
			++it;
			goto _iter_begin_1a7eb89d1;
		}
		_iter_end_1a7eb89d1:;
	};
}



inline jule::Str _1aaac3121_getAsLinkPath(jule::Ptr<_1aaac032c_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_1c38bdc8e_HasPrefix(_51937_path, _1c3a94bbd_PathStdlib)) {
		(_51937_path).mut_slice(_1c3a94bbd_PathStdlib.len());;
		return (jule::Str("std", 3) + _1c38c536c_Replace(_51937_path, jule::Str("/", 1), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c38e16da_Abs(_1aab21d1d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aab20d83_GetModPath(_self_.get()._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 47LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _1c38c536c_Replace(_51937_path, jule::Str("/", 1), jule::Str("::", 2), -1LL);;
}



inline void _1aaac353e_pushCycleError(jule::Ptr<_1aaac032c_symbolBuilder> _self_, jule::Ptr<_1aaac032c_symbolBuilder>* _53335_sb, jule::Str _53355_path, _1c38d3b83_StrBuilder* _53371_message) {
	;
	jule::Str _53513_refersTo = _1c39840a7_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1aaac3121_getAsLinkPath(_self_, _1c3e41531_Dir((*(_53335_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_1aaac3121_getAsLinkPath(_self_, _53355_path), &__jule_any_type5)}));;
	jule::Slice<jule::U8> _53913_buf = _1c38ddbe3_Buf(_53371_message);;
	_1c38dc94a_WriteStr(_53371_message, _1c38bd497_Repeat(jule::Str(" ", 1), 7LL));
	_1c38dc94a_WriteStr(_53371_message, _53513_refersTo);
	_1c38dcc03_WriteByte(_53371_message, '\n');
	_1c38dc692_Write(_53371_message, _53913_buf);
}



inline void _1aaac395c_pushCrossCycleError(jule::Ptr<_1aaac032c_symbolBuilder> _self_, jule::Ptr<_1aaac032c_symbolBuilder>* _54640_target, jule::Ptr<_1aab24c33_ImportInfo>* _54665_imp, jule::Ptr<_1c3e3a5e6_Token>* _54684_errorToken) {
	_1c38d3b83_StrBuilder _54717_message = static__1c38d3ea2_New(32LL);;
	_1aaac353e_pushCycleError(_self_, &(_self_), (*(_54665_imp)).get()._field_Path, &(_54717_message));
	jule::Ptr<_1aaac032c_symbolBuilder> _55117_owner = _self_.get()._field_owner;;
	jule::Ptr<_1aaac032c_symbolBuilder> _55217_old = _self_;;
	while ((_55117_owner.get()._field_owner != nullptr)) {
		{
			_1aaac353e_pushCycleError(_self_, &(_55217_old.get()._field_owner), _1c3e41531_Dir(_55217_old.get()._field_table.get()._field_File.ptr()), &(_54717_message));
			if ((_55117_owner.get()._field_owner == (*(_54640_target)))) {
				_1aaac353e_pushCycleError(_self_, _54640_target, _1c3e41531_Dir(_55117_owner.get()._field_table.get()._field_File.ptr()), &(_54717_message));
				goto _iter_end_1a7ec1610;
			};
			_55217_old=_55117_owner;
			_55117_owner=_55117_owner.get()._field_owner;
		}
	_iter_next_1a7ec1610:;
	}
	_iter_end_1a7ec1610:;;
	_1aaac0bbd_pushErr(_self_.ptr(), _54684_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_1c38dd242_Str(&_54717_message), &__jule_any_type5)}));
}



inline jule::Bool _1aaac3d58_checkImportCycles(jule::Ptr<_1aaac032c_symbolBuilder> _self_, jule::Ptr<_1aab24c33_ImportInfo> _56937_imp, jule::Ptr<_1aaa8e53d_UseDecl>* _56956_decl) {
	if ((_56937_imp.get()._field_Path == _1c3e41531_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1aaac0bbd_pushErr(_self_.ptr(), &((*(_56956_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1aaac3121_getAsLinkPath(_self_, _56937_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_1c3e41531_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _56937_imp.get()._field_Path)) {
		_1aaac395c_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_56937_imp), &((*(_56956_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_1aaac032c_symbolBuilder> _58417_owner = _self_.get()._field_owner;;
	_julec_label_1a7ec5911:;
	if ((_1c3e41531_Dir(_58417_owner.get()._field_table.get()._field_File.ptr()) == _56937_imp.get()._field_Path)) {
		_1aaac395c_pushCrossCycleError(_self_, &(_58417_owner), &(_56937_imp), &((*(_56956_decl)).get()._field_Token));
		return false;;
	};
	if ((_58417_owner.get()._field_owner != nullptr)) {
		_58417_owner=_58417_owner.get()._field_owner;
		goto _julec_label_1a7ec5911;
	};
	return true;;
}



inline void _1aaac4276_checkPackageAccessibility(_1aaac032c_symbolBuilder* _self_, jule::Ptr<_1aaa8e53d_UseDecl>* _60545_decl, jule::Str* _60562_mod, jule::Str* _60573_path) {
	if (((_1aab21d1d_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1aab20d83_GetModPath((*(_self_))._field_importer) != (*(_60562_mod))) && _1c38c3e92_Contains((*(_60573_path)), jule::Str("internal", 8)))) {
		_1aaac0bbd_pushErr(_self_, &((*(_60545_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1aaac4672_importPackage(jule::Ptr<_1aaac032c_symbolBuilder> _self_, jule::Ptr<_1aab24c33_ImportInfo>* _61138_imp, jule::Ptr<_1aaa8e53d_UseDecl>* _61161_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_61138_imp)).get()._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aab24c33_ImportInfo> _61617_port = _1aab21d1d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aab21515_GetImport(_self_.get()._field_importer, (*(_61138_imp)).get()._field_Path);;
	if ((_61617_port != nullptr)) {
		(*(_61138_imp)).get()._field_Package=_61617_port.get()._field_Package;
		(*(_61138_imp)).get()._field_Duplicate=true;
		jule::Str _62117_oldMod = _1aab21d1d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aab20d83_GetModPath(_self_.get()._field_importer);;
		_1aab21d1d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aab20aec_SetModPath(_self_.get()._field_importer, _1aab21d1d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aab211c4_ModById(_self_.get()._field_importer, (*(_61138_imp)).get()._field_ModId));
		_1aaac4276_checkPackageAccessibility(_self_.ptr(), _61161_decl, &(_62117_oldMod), &(_61617_port.get()._field_Path));
		_1aab21d1d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aab20aec_SetModPath(_self_.get()._field_importer, _62117_oldMod);
	} else {
		if ((!(_1aaac3d58_checkImportCycles(_self_, (*(_61138_imp)), _61161_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63017_oldMod = _1aab21d1d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aab20d83_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1aab21d1d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aab20aec_SetModPath(_self_.get()._field_importer, _63017_oldMod);
		});;
		if ((*(_61138_imp)).get()._field_Std) {
			_1aab21d1d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aab20aec_SetModPath(_self_.get()._field_importer, _1c3a94bbd_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1aaa41996_Ast>> _63522_asts;;
		jule::Slice<_1c3983b45_Log> _63532_errors;;
		({
			__jule_tuple_sx_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1aab21d1d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aab21911_ImportPackage(_self_.get()._field_importer, (*(_61138_imp)).get()._field_Path, (!((*(_61138_imp)).get()._field_Std)));
			_63522_asts = __jule_assign_result.__jule_result_arg0;
			_63532_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63532_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_63532_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1aaac4276_checkPackageAccessibility(_self_.ptr(), _61161_decl, &(_63017_oldMod), &((*(_61138_imp)).get()._field_Path));
		{
			auto expr = &(_63522_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7ed08a5:;
			if (it != expr_end) {
				jule::Ptr<_1aaa41996_Ast> _64325_ast = *it;
				{
					jule::Ptr<_1aabb6be8_SymbolTable> _64425_table = nullptr;;
					({
						__jule_tuple_x_1aabb6be8_SymbolTable__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1aac22b22_buildSymbols(&(_64325_ast), &(_self_.get()._field_importer), _self_);
						_64425_table = __jule_assign_result.__jule_result_arg0;
						_63532_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63532_errors.len() > 0LL)) {
						(_self_.get()._field_errors).append(_63532_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>> &__jule_push_dest = (*(_61138_imp)).get()._field_Package.get()._field_Files; __jule_push_dest.push(_64425_table); };
				}
				_iter_next_1a7ed08a5:;
				++it;
				goto _iter_begin_1a7ed08a5;
			}
			_iter_end_1a7ed08a5:;
		};
	};
	_1aaac2cd0_implImportSelections(_self_.ptr(), _61138_imp, _61161_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1aaac49b3_importUseDecl(jule::Ptr<_1aaac032c_symbolBuilder> _self_, jule::Ptr<_1aaa8e53d_UseDecl>* _65838_decl) {
	jule::Ptr<_1aab24c33_ImportInfo> _65917_imp = _1aaac262b_buildImport(_self_, _65838_decl);;
	if ((_65917_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66517_ok = _1aaac296c_checkDuplicateUseDecl(_self_.ptr(), &(_65917_imp));;
	if ((!(_66517_ok))) {
		return nullptr;;
	};
	_66517_ok=_1aaac4672_importPackage(_self_, &(_65917_imp), _65838_decl);
	{ jule::Slice<jule::Ptr<_1aab24c33_ImportInfo>> &__jule_push_dest = _self_.get()._field_table.get()._field_Imports; __jule_push_dest.push(_65917_imp); };
	if (_66517_ok) {
		_1aab21d1d_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1aab21bb9_Imported(_self_.get()._field_importer, _65917_imp);
		return _65917_imp;;
	};
	return nullptr;;
}



inline void _1aaac4bb1_importUseDecls(jule::Ptr<_1aaac032c_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ed4788:;
		if (it != expr_end) {
			jule::Ptr<_1aaa8e53d_UseDecl> _68021_decl = *it;
			{
				_1aaac49b3_importUseDecl(_self_, &(_68021_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1a7ed4788;
				};
			}
			_iter_next_1a7ed4788:;
			++it;
			goto _iter_begin_1a7ed4788;
		}
		_iter_end_1a7ed4788:;
	};
}



inline void _1aaac4e69_appendNode(_1aaac032c_symbolBuilder* _self_, _1aaa4290e_Node* _68934_node) {
	{
		auto &_match_expr{ (*(_68934_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1a7ed634a:;
			{
				{ jule::Slice<jule::Ptr<_1aaaed3b0_Impl>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Impls; __jule_push_dest.push(_1aaabec66_buildImpl((*(_68934_node))._field_Data.cast_ptr<_1aaa9309c_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a7ed659d:;
			{
				jule::Ptr<_1aabeb403_TypeAlias> _69421_ta = _1aaabb1a2_buildTypeAlias((*(_68934_node))._field_Data.cast_ptr<_1aaa8d031_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeAliases; __jule_push_dest.push(_69421_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a7ed6614:;
			{
				jule::Ptr<_1aaa972b0_Struct> _69721_srct = _1aaabba76_buildStruct((*(_68934_node))._field_Data.cast_ptr<_1aaa92200_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1aaa972b0_Struct>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Structs; __jule_push_dest.push(_69721_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a7ed667a:;
			{
				jule::Ptr<_1aaab3199_Fn> _70021_f = _1aaabc769_buildFunc((*(_68934_node))._field_Data.cast_ptr<_1aaa8837d_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1aaab3199_Fn>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Funcs; __jule_push_dest.push(_70021_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1a7ed66e1:;
			{
				jule::Ptr<_1aaac6443_Trait> _70321_t = _1aaabd0b6_buildTrait((*(_68934_node))._field_Data.cast_ptr<_1aaa9293c_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1aaac6443_Trait>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Traits; __jule_push_dest.push(_70321_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a7ed6e61:;
			{
				jule::Ptr<_1aab68969_Var> _70621_v = _1aaabe6d3_buildVar((*(_68934_node))._field_Data.cast_ptr<_1aaa8945b_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_70621_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1a7ed6ec7:;
			{
				jule::Ptr<_1aaac8b3d_Enum> _70921_e = _1aaabdabc_buildEnum((*(_68934_node))._field_Data.cast_ptr<_1aaa905a5_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1aaac8b3d_Enum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Enums; __jule_push_dest.push(_70921_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1a7ed703d:;
			{
				jule::Ptr<_1aaaca348_TypeEnum> _71221_e = _1aaabe419_buildTypeEnum((*(_68934_node))._field_Data.cast_ptr<_1aaa91540_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1aaaca348_TypeEnum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeEnums; __jule_push_dest.push(_71221_e); };
			}
		}
		else {
			_case_begin_1a7ed6537:;
			{
				_1aaac0bbd_pushErr(_self_, &((*(_68934_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a7ed5899:;
	};
}



inline void _1aaac5167_appendNodes(_1aaac032c_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7eddc9d:;
		if (it != expr_end) {
			_1aaa4290e_Node _72021_node = *it;
			{
				_1aaac4e69_appendNode(_self_, &(_72021_node));
			}
			_iter_next_1a7eddc9d:;
			++it;
			goto _iter_begin_1a7eddc9d;
		}
		_iter_end_1a7eddc9d:;
	};
}



inline void _1aaac5420_pushDirectivePass(_1aaac032c_symbolBuilder* _self_, jule::Ptr<_1aaa42c61_Directive>* _72541_d) {
	if (((*(_72541_d)).get()._field_Args.len() == 0LL)) {
		_1aaac0bbd_pushErr(_self_, &((*(_72541_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_72541_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1c3e3a5e6_Token> _73017_arg = (*(_72541_d)).get()._field_Args[1LL];;
		_1aaac0bbd_pushErr(_self_, &(_73017_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_72541_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1c3e3a5e6_Token> _73413_arg = (*(_72541_d)).get()._field_Args[0LL];;
	if ((_73413_arg.get()._field_Id != static_cast<jule::U32>(4LLU))) {
		_1aaac0bbd_pushErr(_self_, &(_73413_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_73413_arg.get()._field_Kind[0LL] != '\"')) {
		_1aaac0bbd_pushErr(_self_, &(_73413_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1aaaba767_Pass> &__jule_push_dest = (*(_self_))._field_table.get()._field_Passes; __jule_push_dest.push(_1aaaba767_Pass{._field_Token=(*(_72541_d)).get()._field_Tag, ._field_Text=_73413_arg.get()._field_Kind.slice(1LL, (_73413_arg.get()._field_Kind.len() - 1LL))}); };
}



inline void _1aaac561d_appendTopDirectives(_1aaac032c_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ee3753:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42c61_Directive> _75221_d = *it;
			{
				{
					auto &_match_expr{ _75221_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1a7ee59db:;
						{
							_1aaac5420_pushDirectivePass(_self_, &(_75221_d));
						}
					}
					_match_end_1a7ee5942:;
				};
			}
			_iter_next_1a7ee3753:;
			++it;
			goto _iter_begin_1a7ee3753;
		}
		_iter_end_1a7ee3753:;
	};
}



inline void _1aaac581b_build(jule::Ptr<_1aaac032c_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1aabb6be8_SymbolTable>(_1aabb6be8_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1aaac561d_appendTopDirectives(_self_.ptr());
	_1aaac4bb1_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1aaac5167_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aaac032c_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aaac680b_Str(_1aaac6443_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1aaac6b4c_Equal(jule::Ptr<_1aaac6443_Trait> _self_, jule::Ptr<_1aabec1e5_TypeKind> _2521_other) {
	jule::Ptr<_1aaac6443_Trait> _2613_trt = _1aac013e7_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Ptr<_1aaab3199_Fn> _1aaac70e2_FindMethod(_1aaac6443_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7ee8d63:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _3521_f = *it;
			{
				if ((_3521_f.get()._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1a7ee8d63:;
			++it;
			goto _iter_begin_1a7ee8d63;
		}
		_iter_end_1a7ee8d63:;
	};
	return _1aaac7774_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1aaab3199_Fn> _1aaac7774_findMethodInherit(_1aaac6443_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7eeb492:;
		if (it != expr_end) {
			jule::Ptr<_1aac0465e_TypeSymbol> _5621_i = *it;
			{
				if ((_5621_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1a7eeb492;
				};
				jule::Ptr<_1aaac6443_Trait> _6021_t = _1aac013e7_Trait(_5621_i.get()._field_Kind.ptr());;
				if ((_6021_t != nullptr)) {
					jule::Ptr<_1aaab3199_Fn> _6225_f2 = _1aaac70e2_FindMethod(_6021_t.ptr(), (*(_5537_ident)));;
					if ((_6225_f2 != nullptr)) {
						return _6225_f2;;
					};
				};
			}
			_iter_next_1a7eeb492:;
			++it;
			goto _iter_begin_1a7eeb492;
		}
		_iter_end_1a7eeb492:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaac6443_Trait _Src) {
	_Stream << _1aaac680b_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1aaac8478_AutoExpr(_1aaac80c1_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaac80c1_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aaac8eb2_Str(_1aaac8b3d_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1aaac9303_Equal(jule::Ptr<_1aaac8b3d_Enum> _self_, jule::Ptr<_1aabec1e5_TypeKind> _3821_other) {
	jule::Ptr<_1aaac8b3d_Enum> _3913_enm = _1aac00391_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1aaac80c1_EnumItem> _1aaac9732_FindItem(_1aaac8b3d_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7eeed14:;
		if (it != expr_end) {
			jule::Ptr<_1aaac80c1_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1a7eeed14:;
			++it;
			goto _iter_begin_1a7eeed14;
		}
		_iter_end_1a7eeed14:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaac8b3d_Enum _Src) {
	_Stream << _1aaac8eb2_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaac9c71_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aaaca689_Str(_1aaaca348_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1aaaca9ca_Equal(jule::Ptr<_1aaaca348_TypeEnum> _self_, jule::Ptr<_1aabec1e5_TypeKind> _8021_other) {
	jule::Ptr<_1aaaca348_TypeEnum> _8113_tenm = _1aac00627_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1aaac9c71_TypeEnumItem> _1aaacae09_FindItem(_1aaaca348_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8001de3:;
		if (it != expr_end) {
			jule::Ptr<_1aaac9c71_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1a8001de3:;
			++it;
			goto _iter_begin_1a8001de3;
		}
		_iter_end_1a8001de3:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaca348_TypeEnum _Src) {
	_Stream << _1aaaca689_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaaccaa9_Str(_1aaacc6e1_comptimeRange* _self_) {
	return jule::Str("comptimeRange", 13);;
}



inline jule::Bool _1aaaccdea_Equal(jule::Ptr<_1aaacc6e1_comptimeRange> _self_, jule::Ptr<_1aabec1e5_TypeKind> _2521_other) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaacc6e1_comptimeRange _Src) {
	_Stream << _1aaaccaa9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaacd5c1_Str(_1aaacd24c_comptimeStructField* _self_) {
	return jule::Str("comptimeStructField", 19);;
}



inline jule::Bool _1aaacd912_Equal(jule::Ptr<_1aaacd24c_comptimeStructField> _self_, jule::Ptr<_1aabec1e5_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaacde2e__Name(jule::Ptr<_1aaacd24c_comptimeStructField> _self_, jule::Ptr<_1aabbdb12_Eval>* _3926_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _3941_fc) {
	if (((*(_3941_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_3926_e)).ptr(), (*(_3941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _4417_constant = static__1c4cbdb3d_NewStr(_self_.get()._field_field.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Model=jule::Any(_4417_constant, &__jule_any_type19), ._field_Constant=_4417_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaace32a__Type(jule::Ptr<_1aaacd24c_comptimeStructField> _self_, jule::Ptr<_1aabbdb12_Eval>* _5230_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _5245_fc) {
	if (((*(_5245_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_5230_e)).ptr(), (*(_5245_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1aaae9532_buildComptimeTypeInfoData(&((*(_5230_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaace726__Public(jule::Ptr<_1aaacd24c_comptimeStructField> _self_, jule::Ptr<_1aabbdb12_Eval>* _6032_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _6047_fc) {
	if (((*(_6047_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_6032_e)).ptr(), (*(_6047_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _6517_constant = static__1c4cbd874_NewBool(_self_.get()._field_field.get()._field_Decl.get()._field_Public);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_6517_constant, &__jule_any_type19), ._field_Constant=_6517_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaacea67_subIdent(jule::Ptr<_1aaacd24c_comptimeStructField> _self_, jule::Str* _7329_ident) {
	{
		auto &_match_expr{ (*(_7329_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1a800c45e:;
			{
				jule::Ptr<_1aaab609d_FnIns> _7621_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _7733_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _7748_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaacde2e__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_7621_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1a800c4c5:;
			{
				jule::Ptr<_1aaab609d_FnIns> _8321_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _8433_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _8448_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaace726__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_8321_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1a800c53b:;
			{
				jule::Ptr<_1aaab609d_FnIns> _9021_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _9133_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _9148_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaace32a__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_9021_method));;
			}
		}
		else {
			_case_begin_1a800c3e8:;
			{
				return nullptr;;
			}
		}
		_match_end_1a800c371:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aaacd24c_comptimeStructField _Src) {
	_Stream << _1aaacd5c1_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaad0282_Str(_1aaacedec_comptimeStructFields* _self_) {
	return jule::Str("comptimeStructFields", 20);;
}



inline jule::Bool _1aaad05c3_Equal(jule::Ptr<_1aaacedec_comptimeStructFields> _self_, jule::Ptr<_1aabec1e5_TypeKind> _10921_other) {
	return false;;
}



inline void _1aaad0a46_ready(_1aaacedec_comptimeStructFields* _self_, jule::Ptr<_1aab68969_Var>* _11329_keyA, jule::Ptr<_1aab68969_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*(_11329_keyA)).get()._field_Constant=true;
		(*(_11329_keyA)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		(*(_11329_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_11329_keyA)).get()._field_Kind=_1aacdb89a_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*(_11346_keyB)).get()._field_Constant=true;
		(*(_11346_keyB)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		(*(_11346_keyB)).get()._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaacd24c_comptimeStructField>(), 6)})});
	};
}



inline void _1aaad0e64_step(_1aaacedec_comptimeStructFields* _self_, jule::I32 _13523_i, jule::Ptr<_1aab68969_Var>* _13536_keyA, jule::Ptr<_1aab68969_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		_1aac021b7_comptimeStructField((*(_13553_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I32 _1aaad11ea_len(_1aaacedec_comptimeStructFields* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaacedec_comptimeStructFields _Src) {
	_Stream << _1aaad0282_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaad187c_Str(_1aaad1508_comptimeStatic* _self_) {
	return jule::Str("comptimeStatic", 14);;
}



inline jule::Bool _1aaad1bbd_Equal(jule::Ptr<_1aaad1508_comptimeStatic> _self_, jule::Ptr<_1aabec1e5_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaad21da__Name(jule::Ptr<_1aaad1508_comptimeStatic> _self_, jule::Ptr<_1aabbdb12_Eval>* _16326_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _16341_fc) {
	if (((*(_16341_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_16326_e)).ptr(), (*(_16341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _16817_constant = static__1c4cbdb3d_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Model=jule::Any(_16817_constant, &__jule_any_type19), ._field_Constant=_16817_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaad25d6__Type(jule::Ptr<_1aaad1508_comptimeStatic> _self_, jule::Ptr<_1aabbdb12_Eval>* _17630_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _17645_fc) {
	if (((*(_17645_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_17630_e)).ptr(), (*(_17645_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1aaae9532_buildComptimeTypeInfoData(&((*(_17630_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind.get()._field_Kind));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaad29d2__Public(jule::Ptr<_1aaad1508_comptimeStatic> _self_, jule::Ptr<_1aabbdb12_Eval>* _18432_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _18447_fc) {
	if (((*(_18447_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_18432_e)).ptr(), (*(_18447_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _18917_constant = static__1c4cbd874_NewBool(_self_.get()._field_field.get()._field_Public);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_18917_constant, &__jule_any_type19), ._field_Constant=_18917_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaad2d23_subIdent(jule::Ptr<_1aaad1508_comptimeStatic> _self_, jule::Str* _19729_ident) {
	{
		auto &_match_expr{ (*(_19729_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1a8020252:;
			{
				jule::Ptr<_1aaab609d_FnIns> _20021_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _20133_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _20148_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaad21da__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_20021_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1a80202b8:;
			{
				jule::Ptr<_1aaab609d_FnIns> _20721_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _20833_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _20848_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaad29d2__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_20721_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1a802032e:;
			{
				jule::Ptr<_1aaab609d_FnIns> _21421_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _21533_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _21548_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaad25d6__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_21421_method));;
			}
		}
		else {
			_case_begin_1a80201db:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8020164:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aaad1508_comptimeStatic _Src) {
	_Stream << _1aaad187c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaad353d_Str(_1aaad31b9_comptimeStatics* _self_) {
	return jule::Str("comptimeStatics", 15);;
}



inline jule::Bool _1aaad387e_Equal(jule::Ptr<_1aaad31b9_comptimeStatics> _self_, jule::Ptr<_1aabec1e5_TypeKind> _23321_other) {
	return false;;
}



inline void _1aaad3d02_ready(_1aaad31b9_comptimeStatics* _self_, jule::Ptr<_1aab68969_Var>* _23729_keyA, jule::Ptr<_1aab68969_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*(_23729_keyA)).get()._field_Constant=true;
		(*(_23729_keyA)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		(*(_23729_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_23729_keyA)).get()._field_Kind=_1aacdb89a_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*(_23746_keyB)).get()._field_Constant=true;
		(*(_23746_keyB)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		(*(_23746_keyB)).get()._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaad1508_comptimeStatic>(), 8)})});
	};
}



inline void _1aaad4220_step(_1aaad31b9_comptimeStatics* _self_, jule::I32 _25923_i, jule::Ptr<_1aab68969_Var>* _25936_keyA, jule::Ptr<_1aab68969_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		_1aac039c1_comptimeStatic((*(_25953_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I32 _1aaad44a6_len(_1aaad31b9_comptimeStatics* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaad31b9_comptimeStatics _Src) {
	_Stream << _1aaad353d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaad4b38_Str(_1aaad47b4_comptimeEnumField* _self_) {
	return jule::Str("comptimeEnumField", 17);;
}



inline jule::Bool _1aaad4e79_Equal(jule::Ptr<_1aaad47b4_comptimeEnumField> _self_, jule::Ptr<_1aabec1e5_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaad5474__Name(jule::Ptr<_1aaad47b4_comptimeEnumField> _self_, jule::Ptr<_1aabbdb12_Eval>* _28726_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _28741_fc) {
	if (((*(_28741_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_28726_e)).ptr(), (*(_28741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _29217_constant = static__1c4cbdb3d_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Model=jule::Any(_29217_constant, &__jule_any_type19), ._field_Constant=_29217_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaad57b5_subIdent(jule::Ptr<_1aaad47b4_comptimeEnumField> _self_, jule::Str* _30029_ident) {
	{
		auto &_match_expr{ (*(_30029_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1a802e33d:;
			{
				jule::Ptr<_1aaab609d_FnIns> _30321_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _30433_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _30448_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaad5474__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_30321_method));;
			}
		}
		else {
			_case_begin_1a802e2c7:;
			{
				return nullptr;;
			}
		}
		_match_end_1a802e250:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aaad47b4_comptimeEnumField _Src) {
	_Stream << _1aaad4b38_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaad6057_Str(_1aaad5ac3_comptimeEnumFields* _self_) {
	return jule::Str("comptimeEnumFields", 18);;
}



inline jule::Bool _1aaad6398_Equal(jule::Ptr<_1aaad5ac3_comptimeEnumFields> _self_, jule::Ptr<_1aabec1e5_TypeKind> _32221_other) {
	return false;;
}



inline void _1aaad6794_ready(_1aaad5ac3_comptimeEnumFields* _self_, jule::Ptr<_1aab68969_Var>* _32629_keyA, jule::Ptr<_1aab68969_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*(_32629_keyA)).get()._field_Constant=true;
		(*(_32629_keyA)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		(*(_32629_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_32629_keyA)).get()._field_Kind=_1aacdb89a_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*(_32646_keyB)).get()._field_Constant=true;
		(*(_32646_keyB)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		(*(_32646_keyB)).get()._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaad47b4_comptimeEnumField>(), 10)})});
	};
}



inline void _1aaad6bb2_step(_1aaad5ac3_comptimeEnumFields* _self_, jule::I32 _34823_i, jule::Ptr<_1aab68969_Var>* _34836_keyA, jule::Ptr<_1aab68969_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		_1aac026d4_comptimeEnumField((*(_34853_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I32 _1aaad6e48_len(_1aaad5ac3_comptimeEnumFields* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaad5ac3_comptimeEnumFields _Src) {
	_Stream << _1aaad6057_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaad75ca_Str(_1aaad7256_comptimeParam* _self_) {
	return jule::Str("comptimeParam", 13);;
}



inline jule::Bool _1aaad791b_Equal(jule::Ptr<_1aaad7256_comptimeParam> _self_, jule::Ptr<_1aabec1e5_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaad7e49__Name(jule::Ptr<_1aaad7256_comptimeParam> _self_, jule::Ptr<_1aabbdb12_Eval>* _37626_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _37641_fc) {
	if (((*(_37641_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_37626_e)).ptr(), (*(_37641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _38117_constant = static__1c4cbdb3d_NewStr(_self_.get()._field_param.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Model=jule::Any(_38117_constant, &__jule_any_type19), ._field_Constant=_38117_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaad8345__Type(jule::Ptr<_1aaad7256_comptimeParam> _self_, jule::Ptr<_1aabbdb12_Eval>* _38930_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _38945_fc) {
	if (((*(_38945_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_38930_e)).ptr(), (*(_38945_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1aaae9532_buildComptimeTypeInfoData(&((*(_38930_e)).get()._field_s), &(_self_.get()._field_param.get()._field_Kind));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaad8741__Variadic(jule::Ptr<_1aaad7256_comptimeParam> _self_, jule::Ptr<_1aabbdb12_Eval>* _39734_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _39749_fc) {
	if (((*(_39749_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_39734_e)).ptr(), (*(_39749_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Variadic", 8), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _40217_constant = static__1c4cbd874_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Variadic);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_40217_constant, &__jule_any_type19), ._field_Constant=_40217_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaad8b3c__Reference(jule::Ptr<_1aaad7256_comptimeParam> _self_, jule::Ptr<_1aabbdb12_Eval>* _41035_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _41050_fc) {
	if (((*(_41050_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_41035_e)).ptr(), (*(_41050_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Reference", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _41517_constant = static__1c4cbd874_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Reference);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_41517_constant, &__jule_any_type19), ._field_Constant=_41517_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaad8e7d_subIdent(jule::Ptr<_1aaad7256_comptimeParam> _self_, jule::Str* _42329_ident) {
	{
		auto &_match_expr{ (*(_42329_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1a80406b2:;
			{
				jule::Ptr<_1aaab609d_FnIns> _42621_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _42733_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _42748_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaad7e49__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_42621_method));;
			}
		}
		else if (_match_expr == jule::Str("Variadic", 8)) {
			_case_begin_1a8040728:;
			{
				jule::Ptr<_1aaab609d_FnIns> _43321_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _43433_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _43448_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaad8741__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_43321_method));;
			}
		}
		else if (_match_expr == jule::Str("Reference", 9)) {
			_case_begin_1a80407a0:;
			{
				jule::Ptr<_1aaab609d_FnIns> _44021_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _44133_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _44148_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaad8b3c__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_44021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1a8040827:;
			{
				jule::Ptr<_1aaab609d_FnIns> _44721_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _44833_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _44848_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaad8345__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_44721_method));;
			}
		}
		else {
			_case_begin_1a804064b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a80405c4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aaad7256_comptimeParam _Src) {
	_Stream << _1aaad75ca_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaad9841_Str(_1aaad94bc_comptimeParams* _self_) {
	return jule::Str("comptimeParams", 14);;
}



inline jule::Bool _1aaad9b82_Equal(jule::Ptr<_1aaad94bc_comptimeParams> _self_, jule::Ptr<_1aabec1e5_TypeKind> _46621_other) {
	return false;;
}



inline void _1aaada105_ready(_1aaad94bc_comptimeParams* _self_, jule::Ptr<_1aab68969_Var>* _47029_keyA, jule::Ptr<_1aab68969_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*(_47029_keyA)).get()._field_Constant=true;
		(*(_47029_keyA)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		(*(_47029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_47029_keyA)).get()._field_Kind=_1aacdb89a_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*(_47046_keyB)).get()._field_Constant=true;
		(*(_47046_keyB)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		(*(_47046_keyB)).get()._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaad7256_comptimeParam>(), 12)})});
	};
}



inline void _1aaada523_step(_1aaad94bc_comptimeParams* _self_, jule::I32 _49223_i, jule::Ptr<_1aab68969_Var>* _49236_keyA, jule::Ptr<_1aab68969_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		_1aac02c01_comptimeParam((*(_49253_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I32 _1aaada7a9_len(_1aaad94bc_comptimeParams* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_params.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaad94bc_comptimeParams _Src) {
	_Stream << _1aaad9841_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaadae3b_Str(_1aaadaab7_comptimeTypeInfos* _self_) {
	return jule::Str("comptimeTypeInfos", 17);;
}



inline jule::Bool _1aaadb27c_Equal(jule::Ptr<_1aaadaab7_comptimeTypeInfos> _self_, jule::Ptr<_1aabec1e5_TypeKind> _51621_other) {
	return false;;
}



inline void _1aaadb700_ready(_1aaadaab7_comptimeTypeInfos* _self_, jule::Ptr<_1aab68969_Var>* _52029_keyA, jule::Ptr<_1aab68969_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*(_52029_keyA)).get()._field_Constant=true;
		(*(_52029_keyA)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		(*(_52029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_52029_keyA)).get()._field_Kind=_1aacdb89a_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*(_52046_keyB)).get()._field_Constant=true;
		(*(_52046_keyB)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		(*(_52046_keyB)).get()._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaadc1b2_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1aaadbb1d_step(_1aaadaab7_comptimeTypeInfos* _self_, jule::I32 _54223_i, jule::Ptr<_1aab68969_Var>* _54236_keyA, jule::Ptr<_1aab68969_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*(_54253_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1aabebc3e_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I32 _1aaadbda4_len(_1aaadaab7_comptimeTypeInfos* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_types.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaadaab7_comptimeTypeInfos _Src) {
	_Stream << _1aaadae3b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaadc536_Str(_1aaadc1b2_comptimeTypeInfo* _self_) {
	return ((jule::Str("comptimeTypeInfo[", 17) + _1aabec5ad_Str((*(_self_))._field_base.ptr())) + jule::Str("]", 1));;
}



inline jule::Bool _1aaadc877_Equal(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabec1e5_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaadceb5__Str(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _57025_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _57040_fc) {
	if (((*(_57040_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_57025_e)).ptr(), (*(_57040_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Str", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _57517_constant = static__1c4cbdb3d_NewStr(_1aabec5ad_Str(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Model=jule::Any(_57517_constant, &__jule_any_type19), ._field_Constant=_57517_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaadd3b1__Kind(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _58330_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _58345_fc) {
	if (((*(_58345_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_58330_e)).ptr(), (*(_58345_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Kind", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aaac8b3d_Enum> _58817_enm = _1aab2698d_FindEnum(_1aaae91ad_findComptimePackage(&((*(_58330_e)).get()._field_s)).ptr(), jule::Str("Kind", 4));;
	jule::Ptr<_1aaac80c1_EnumItem> _58917_item = nullptr;;
	{
		
		if (_1aabed56a_Void(_self_.get()._field_base.ptr())) {
			_case_begin_1a8059896:;
			{
				_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Void", 4));
			}
		}
		else if ((_1aac01161_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a80594ab:;
			{
				_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Struct", 6));
			}
		}
		else if ((_1aac013e7_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a8059522:;
			{
				_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Trait", 5));
			}
		}
		else if ((_1aac0010a_Ptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a8059588:;
			{
				if (_1aac0cd93_IsUnsafe(_1aac0010a_Ptr(_self_.get()._field_base.ptr()).ptr())) {
					_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("UnsafePtr", 9));
				} else {
					_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Ptr", 3));
				};
			}
		}
		else if ((_1aabeed74_Sptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a80595ee:;
			{
				_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Ref", 3));
			}
		}
		else if ((_1aac00391_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a8059e6d:;
			{
				_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Enum", 4));
			}
		}
		else if ((_1aac0167d_Map(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a8059ed4:;
			{
				_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Map", 3));
			}
		}
		else if ((_1aac00b44_Slc(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a805a04a:;
			{
				_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Slice", 5));
			}
		}
		else if ((_1aac008ad_Arr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a805a0b1:;
			{
				_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Array", 5));
			}
		}
		else if ((_1aac00dca_Fn(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a805a138:;
			{
				_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Func", 4));
			}
		}
		else if ((_1aac01914_Tup(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a805a1b0:;
			{
				_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Tuple", 5));
			}
		}
		else if ((_1aabeeadd_Prim(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a805a237:;
			{
				jule::Ptr<_1aac05066_Prim> _61817_prim = _1aabeeadd_Prim(_self_.get()._field_base.ptr());;
				{
					
					if (_1aac08784_IsAny(_61817_prim.ptr())) {
						_case_begin_1a8062e54:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Any", 3));
						}
					}
					else if (_1aac08267_IsBool(_61817_prim.ptr())) {
						_case_begin_1a8062eba:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Bool", 4));
						}
					}
					else if (_1aac084ed_IsStr(_61817_prim.ptr())) {
						_case_begin_1a8063031:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Str", 3));
						}
					}
					else if (_1aac07497_IsF32(_61817_prim.ptr())) {
						_case_begin_1a8063097:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("F32", 3));
						}
					}
					else if (_1aac0772d_IsF64(_61817_prim.ptr())) {
						_case_begin_1a806396b:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("F64", 3));
						}
					}
					else if (_1aac05e24_IsI8(_61817_prim.ptr())) {
						_case_begin_1a80639d2:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("I8", 2));
						}
					}
					else if (_1aac061aa_IsI16(_61817_prim.ptr())) {
						_case_begin_1a8063a48:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("I16", 3));
						}
					}
					else if (_1aac06441_IsI32(_61817_prim.ptr())) {
						_case_begin_1a8063aae:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("I32", 3));
						}
					}
					else if (_1aac066c7_IsI64(_61817_prim.ptr())) {
						_case_begin_1a8063b25:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("I64", 3));
						}
					}
					else if (_1aac0695d_IsU8(_61817_prim.ptr())) {
						_case_begin_1a8063b8b:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("U8", 2));
						}
					}
					else if (_1aac06be4_IsU16(_61817_prim.ptr())) {
						_case_begin_1a8063c02:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("U16", 3));
						}
					}
					else if (_1aac06e7a_IsU32(_61817_prim.ptr())) {
						_case_begin_1a8063c79:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("U32", 3));
						}
					}
					else if (_1aac07211_IsU64(_61817_prim.ptr())) {
						_case_begin_1a8063d01:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("U64", 3));
						}
					}
					else if (_1aac079b4_IsInt(_61817_prim.ptr())) {
						_case_begin_1a8063d78:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Int", 3));
						}
					}
					else if (_1aac07c4a_IsUint(_61817_prim.ptr())) {
						_case_begin_1a8063e00:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Uint", 4));
						}
					}
					else if (_1aac07ed1_IsUintptr(_61817_prim.ptr())) {
						_case_begin_1a8063e77:;
						{
							_58917_item=_1aaac9732_FindItem(_58817_enm.ptr(), jule::Str("Uintptr", 7));
						}
					}
					else {
						_case_begin_1a8062ddd:;
						{
							jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1aabec5ad_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_1a8062d77:;
				};
			}
		}
		else {
			_case_begin_1a8059445:;
			{
				jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1aabec5ad_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_1a80590c1:;
	};
	return _1aabe9610_evalEnumStatic(&(_58817_enm), &(_58917_item));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaadd7ac__Bits(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _66130_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _66145_fc) {
	if (((*(_66145_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aac05066_Prim> _66613_prim = _1aabeeadd_Prim(_self_.get()._field_base.ptr());;
	if ((_66613_prim == nullptr)) {
		_1aabbe162_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _67113_n = _1c4caeea3_BitsizeOf(_66613_prim.get()._field_Kind);;
	if ((_67113_n == -1LL)) {
		_1aabbe162_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _67617_constant = static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67113_n)));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Model=jule::Any(_67617_constant, &__jule_any_type19), ._field_Constant=_67617_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaaddba8__Elem(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _68430_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _68445_fc) {
	if (((*(_68445_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aac0c359_Ptr> _68917_ptr = _1aac0010a_Ptr(_self_.get()._field_base.ptr());;
	if ((_68917_ptr != nullptr)) {
		if (_1aac0cd93_IsUnsafe(_68917_ptr.ptr())) {
			_1aabbe162_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		return _1aaae9532_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_68917_ptr.get()._field_Elem));;
	};
	jule::Ptr<_1aac08a92_Sptr> _69717_sptr = _1aabeed74_Sptr(_self_.get()._field_base.ptr());;
	if ((_69717_sptr != nullptr)) {
		return _1aaae9532_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_69717_sptr.get()._field_Elem));;
	};
	jule::Ptr<_1aac09565_Slc> _70117_slice = _1aac00b44_Slc(_self_.get()._field_base.ptr());;
	if ((_70117_slice != nullptr)) {
		return _1aaae9532_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70117_slice.get()._field_Elem));;
	};
	jule::Ptr<_1aac0b886_Arr> _70517_array = _1aac008ad_Arr(_self_.get()._field_base.ptr());;
	if ((_70517_array != nullptr)) {
		return _1aaae9532_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70517_array.get()._field_Elem));;
	};
	jule::Ptr<_1aaac8b3d_Enum> _70917_enm = _1aac00391_Enum(_self_.get()._field_base.ptr());;
	if ((_70917_enm != nullptr)) {
		return _1aaae9532_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70917_enm.get()._field_Kind.get()._field_Kind));;
	};
	_1aabbe162_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaade0a4__Size(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _71730_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _71745_fc) {
	if (((*(_71745_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aac0b886_Arr> _72217_arr = _1aac008ad_Arr(_self_.get()._field_base.ptr());;
	if ((_72217_arr == nullptr)) {
		_1aabbe162_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _72717_constant = static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_72217_arr.get()._field_N)));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd947a_primInt, ._field_Model=jule::Any(_72717_constant, &__jule_any_type19), ._field_Constant=_72717_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaade4a0__Key(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _73529_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _73544_fc) {
	if (((*(_73544_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aac0ac09_Map> _74017_m = _1aac0167d_Map(_self_.get()._field_base.ptr());;
	if ((_74017_m == nullptr)) {
		_1aabbe162_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1aaae9532_buildComptimeTypeInfoData(&((*(_73529_e)).get()._field_s), &(_74017_m.get()._field_Key));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaade89b__Value(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _74831_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _74846_fc) {
	if (((*(_74846_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aac0ac09_Map> _75317_m = _1aac0167d_Map(_self_.get()._field_base.ptr());;
	if ((_75317_m == nullptr)) {
		_1aabbe162_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1aaae9532_buildComptimeTypeInfoData(&((*(_74831_e)).get()._field_s), &(_75317_m.get()._field_Val));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaadec97__Fields(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _76132_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _76147_fc) {
	if (((*(_76147_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aaa9a390_StructIns> _76617_s = _1aac01161_Struct(_self_.get()._field_base.ptr());;
	if ((_76617_s != nullptr)) {
		return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaacedec_comptimeStructFields>(_1aaacedec_comptimeStructFields{._field_fields=_76617_s.get()._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1aaac8b3d_Enum> _77617_enm = _1aac00391_Enum(_self_.get()._field_base.ptr());;
	if ((_77617_enm != nullptr)) {
		return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaad5ac3_comptimeEnumFields>(_1aaad5ac3_comptimeEnumFields{._field_fields=_77617_enm.get()._field_Items}), 11)}), });;
	};
	_1aabbe162_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae0193__Statics(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _79033_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _79048_fc) {
	if (((*(_79048_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Statics", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aaa9a390_StructIns> _79517_s = _1aac01161_Struct(_self_.get()._field_base.ptr());;
	if ((_79517_s == nullptr)) {
		_1aabbe162_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaad31b9_comptimeStatics>(_1aaad31b9_comptimeStatics{._field_fields=_79517_s.get()._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae058e__Public(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _80932_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _80947_fc) {
	if (((*(_80947_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Bool _81417_public = false;;
	{
		
		if ((_1aac01161_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a808aaa3:;
			{
				_81417_public=_1aac01161_Struct(_self_.get()._field_base.ptr()).get()._field_Decl.get()._field_Public;
			}
		}
		else if ((_1aac013e7_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a8089ec0:;
			{
				_81417_public=_1aac013e7_Trait(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_1aac00391_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a808a036:;
			{
				_81417_public=_1aac00391_Enum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_1aac00627_TypeEnum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1a808a09c:;
			{
				_81417_public=_1aac00627_TypeEnum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else {
			_case_begin_1a8089b5c:;
			{
				_1aabbe162_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8089a3b:;
	};
	jule::Ptr<_1c4cbcda1_Const> _82817_constant = static__1c4cbd874_NewBool(_81417_public);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_82817_constant, &__jule_any_type19), ._field_Constant=_82817_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae098a__Binded(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _83632_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _83647_fc) {
	if (((*(_83647_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_83632_e)).ptr(), (*(_83647_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Binded", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _84117_constant = static__1c4cbd874_NewBool(_1aabed04d_Binded(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_84117_constant, &__jule_any_type19), ._field_Constant=_84117_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae0d86__Ordered(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _84929_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _84944_fc) {
	if (((*(_84944_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_84929_e)).ptr(), (*(_84944_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Ordered", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _85417_constant = static__1c4cbd874_NewBool(_1aabedd1d_Ordered(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Model=jule::Any(_85417_constant, &__jule_any_type19), ._field_Constant=_85417_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae1282__Comparable(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _86232_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _86247_fc) {
	if (((*(_86247_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_86232_e)).ptr(), (*(_86247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Comparable", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _86717_constant = static__1c4cbd874_NewBool(_1aabed801_Comparable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Model=jule::Any(_86717_constant, &__jule_any_type19), ._field_Constant=_86717_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae167d__Mutable(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _87529_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _87544_fc) {
	if (((*(_87544_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_87529_e)).ptr(), (*(_87544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _88017_constant = static__1c4cbd874_NewBool(_1aabeda87_Mutable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_88017_constant, &__jule_any_type19), ._field_Constant=_88017_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae1a79__Types(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _88831_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _88846_fc) {
	if (((*(_88846_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aac0a159_Tuple> _89317_tup = _1aac01914_Tup(_self_.get()._field_base.ptr());;
	if ((_89317_tup == nullptr)) {
		_1aabbe162_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aaadaab7_comptimeTypeInfos> _89817_infos = jule::new_ptr<_1aaadaab7_comptimeTypeInfos>(_1aaadaab7_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1aaadc1b2_comptimeTypeInfo>>::alloc(0LL, _89317_tup.get()._field_Types.len())});;
	{
		auto expr = &(_89317_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a809a772:;
		if (it != expr_end) {
			jule::Ptr<_1aabec1e5_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaadc1b2_comptimeTypeInfo>> &__jule_push_dest = _89817_infos.get()._field_types; __jule_push_dest.push(_1aab455c2_pushComptimeTypeInfo((*(_88831_e)).get()._field_s.get()._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_1a809a772:;
			++it;
			goto _iter_begin_1a809a772;
		}
		_iter_end_1a809a772:;
	};
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_89817_infos, 14)}), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae1e75__Exceptional(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _91137_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _91152_fc) {
	if (((*(_91152_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aaab609d_FnIns> _91617_f = _1aac00dca_Fn(_self_.get()._field_base.ptr());;
	if ((_91617_f == nullptr)) {
		_1aabbe162_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _92117_constant = static__1c4cbd874_NewBool(((_91617_f.get()._field_Decl != nullptr) && _91617_f.get()._field_Decl.get()._field_Exceptional));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_92117_constant, &__jule_any_type19), ._field_Constant=_92117_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae2371__CanNil(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _92932_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _92947_fc) {
	if (((*(_92947_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_92932_e)).ptr(), (*(_92947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("CanNil", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _93417_constant = static__1c4cbd874_NewBool(_1aabee0a4_NilCompatible(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_93417_constant, &__jule_any_type19), ._field_Constant=_93417_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae276c__Result(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _94232_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _94247_fc) {
	if (((*(_94247_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aaab609d_FnIns> _94717_f = _1aac00dca_Fn(_self_.get()._field_base.ptr());;
	if ((_94717_f == nullptr)) {
		_1aabbe162_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	if ((_94717_f.get()._field_Result == nullptr)) {
		return _1aaae9532_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_1aacd817c_primVoid));;
	};
	return _1aaae9532_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_94717_f.get()._field_Result));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae2b68__Params(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Ptr<_1aabbdb12_Eval>* _95832_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _95847_fc) {
	if (((*(_95847_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aaab609d_FnIns> _96317_f = _1aac00dca_Fn(_self_.get()._field_base.ptr());;
	if ((_96317_f == nullptr)) {
		_1aabbe162_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaad94bc_comptimeParams>(_1aaad94bc_comptimeParams{._field_params=_96317_f.get()._field_Params}), 13)}), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae2ea9_subIdent(jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _self_, jule::Str* _97529_ident) {
	{
		auto &_match_expr{ (*(_97529_ident)) };
		
		if (_match_expr == jule::Str("Str", 3)) {
			_case_begin_1a80ae09e:;
			{
				jule::Ptr<_1aaab609d_FnIns> _97821_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _97933_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _97948_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaadceb5__Str(_self_, _97933_e, _97948_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_97821_method));;
			}
		}
		else if (_match_expr == jule::Str("Bits", 4)) {
			_case_begin_1a80adc6e:;
			{
				jule::Ptr<_1aaab609d_FnIns> _98521_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _98633_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _98648_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaadd7ac__Bits(_self_, _98633_e, _98648_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_98521_method));;
			}
		}
		else if (_match_expr == jule::Str("Elem", 4)) {
			_case_begin_1a80ae2e1:;
			{
				jule::Ptr<_1aaab609d_FnIns> _99221_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _99333_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _99348_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaaddba8__Elem(_self_, _99333_e, _99348_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_99221_method));;
			}
		}
		else if (_match_expr == jule::Str("Size", 4)) {
			_case_begin_1a80ae368:;
			{
				jule::Ptr<_1aaab609d_FnIns> _99921_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _100033_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _100048_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaade0a4__Size(_self_, _100033_e, _100048_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_99921_method));;
			}
		}
		else if (_match_expr == jule::Str("Key", 3)) {
			_case_begin_1a80ae3e0:;
			{
				jule::Ptr<_1aaab609d_FnIns> _100621_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _100733_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _100748_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaade4a0__Key(_self_, _100733_e, _100748_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_100621_method));;
			}
		}
		else if (_match_expr == jule::Str("Value", 5)) {
			_case_begin_1a80ae467:;
			{
				jule::Ptr<_1aaab609d_FnIns> _101321_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _101433_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _101448_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaade89b__Value(_self_, _101433_e, _101448_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_101321_method));;
			}
		}
		else if (_match_expr == jule::Str("Fields", 6)) {
			_case_begin_1a80ae544:;
			{
				jule::Ptr<_1aaab609d_FnIns> _102021_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _102133_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _102148_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaadec97__Fields(_self_, _102133_e, _102148_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_102021_method));;
			}
		}
		else if (_match_expr == jule::Str("Statics", 7)) {
			_case_begin_1a80ae5bb:;
			{
				jule::Ptr<_1aaab609d_FnIns> _102721_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _102833_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _102848_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae0193__Statics(_self_, _102833_e, _102848_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_102721_method));;
			}
		}
		else if (_match_expr == jule::Str("Params", 6)) {
			_case_begin_1a80ae643:;
			{
				jule::Ptr<_1aaab609d_FnIns> _103421_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _103533_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _103548_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae2b68__Params(_self_, _103533_e, _103548_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_103421_method));;
			}
		}
		else if (_match_expr == jule::Str("Types", 5)) {
			_case_begin_1a80ae6ba:;
			{
				jule::Ptr<_1aaab609d_FnIns> _104121_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _104233_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _104248_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae1a79__Types(_self_, _104233_e, _104248_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_104121_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1a80ae742:;
			{
				jule::Ptr<_1aaab609d_FnIns> _104821_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _104933_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _104948_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae058e__Public(_self_, _104933_e, _104948_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_104821_method));;
			}
		}
		else if (_match_expr == jule::Str("Binded", 6)) {
			_case_begin_1a80ae7b9:;
			{
				jule::Ptr<_1aaab609d_FnIns> _105521_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _105633_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _105648_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae098a__Binded(_self_, _105633_e, _105648_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_105521_method));;
			}
		}
		else if (_match_expr == jule::Str("Ordered", 7)) {
			_case_begin_1a80ae841:;
			{
				jule::Ptr<_1aaab609d_FnIns> _106221_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _106333_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _106348_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae0d86__Ordered(_self_, _106333_e, _106348_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_106221_method));;
			}
		}
		else if (_match_expr == jule::Str("Comparable", 10)) {
			_case_begin_1a80ae8b8:;
			{
				jule::Ptr<_1aaab609d_FnIns> _106921_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _107033_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _107048_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae1282__Comparable(_self_, _107033_e, _107048_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_106921_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1a80ae940:;
			{
				jule::Ptr<_1aaab609d_FnIns> _107621_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _107733_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _107748_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae167d__Mutable(_self_, _107733_e, _107748_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_107621_method));;
			}
		}
		else if (_match_expr == jule::Str("Exceptional", 11)) {
			_case_begin_1a80ae9b7:;
			{
				jule::Ptr<_1aaab609d_FnIns> _108321_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _108433_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _108448_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae1e75__Exceptional(_self_, _108433_e, _108448_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_108321_method));;
			}
		}
		else if (_match_expr == jule::Str("CanNil", 6)) {
			_case_begin_1a80aea3e:;
			{
				jule::Ptr<_1aaab609d_FnIns> _109021_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _109133_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _109148_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae2371__CanNil(_self_, _109133_e, _109148_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_109021_method));;
			}
		}
		else if (_match_expr == jule::Str("Result", 6)) {
			_case_begin_1a80aeab6:;
			{
				jule::Ptr<_1aaab609d_FnIns> _109721_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _109833_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _109848_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae276c__Result(_self_, _109833_e, _109848_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_109721_method));;
			}
		}
		else if (_match_expr == jule::Str("Kind", 4)) {
			_case_begin_1a80aeb3d:;
			{
				jule::Ptr<_1aaab609d_FnIns> _110421_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _110533_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _110548_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaadd3b1__Kind(_self_, _110533_e, _110548_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_110421_method));;
			}
		}
		else {
			_case_begin_1a80addc3:;
			{
				return nullptr;;
			}
		}
		_match_end_1a80adaa4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aaadc1b2_comptimeTypeInfo _Src) {
	_Stream << _1aaadc536_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaae363b_Str(_1aaae32b7_comptimeValue* _self_) {
	return jule::Str("comptimeValue", 13);;
}



inline jule::Bool _1aaae397c_Equal(jule::Ptr<_1aaae32b7_comptimeValue> _self_, jule::Ptr<_1aabec1e5_TypeKind> _112321_other) {
	return false;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae3ecc__Unwrap(jule::Ptr<_1aaae32b7_comptimeValue> _self_, jule::Ptr<_1aabbdb12_Eval>* _112732_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _112747_fc) {
	if (((*(_112747_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_112732_e)).ptr(), (*(_112747_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Unwrap", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return _self_.get()._field_data;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae43c8__Type(jule::Ptr<_1aaae32b7_comptimeValue> _self_, jule::Ptr<_1aabbdb12_Eval>* _113530_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _113545_fc) {
	if (((*(_113545_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_113530_e)).ptr(), (*(_113545_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1aaae9532_buildComptimeTypeInfoData(&((*(_113530_e)).get()._field_s), &(_self_.get()._field_data.get()._field_Kind));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae47c4__Lvalue(jule::Ptr<_1aaae32b7_comptimeValue> _self_, jule::Ptr<_1aabbdb12_Eval>* _114332_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _114347_fc) {
	if (((*(_114347_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_114332_e)).ptr(), (*(_114347_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Lvalue", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _114817_constant = static__1c4cbd874_NewBool(_self_.get()._field_data.get()._field_Lvalue);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_114817_constant, &__jule_any_type19), ._field_Constant=_114817_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae4bc0__Mutable(jule::Ptr<_1aaae32b7_comptimeValue> _self_, jule::Ptr<_1aabbdb12_Eval>* _115633_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _115648_fc) {
	if (((*(_115648_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_115633_e)).ptr(), (*(_115648_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _116117_constant = static__1c4cbd874_NewBool(_self_.get()._field_data.get()._field_Mutable);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_116117_constant, &__jule_any_type19), ._field_Constant=_116117_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae50bb__Const(jule::Ptr<_1aaae32b7_comptimeValue> _self_, jule::Ptr<_1aabbdb12_Eval>* _116931_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _116946_fc) {
	if (((*(_116946_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_116931_e)).ptr(), (*(_116946_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Const", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _117417_constant = static__1c4cbd874_NewBool(_1aabbc7e2_IsConst(_self_.get()._field_data.ptr()));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_117417_constant, &__jule_any_type19), ._field_Constant=_117417_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae54b7__Field(jule::Ptr<_1aaae32b7_comptimeValue> _self_, jule::Ptr<_1aabbdb12_Eval>* _118231_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _118246_fc) {
	if (((*(_118246_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aaa9a390_StructIns> _118717_s = _1aac01161_Struct(_self_.get()._field_data.get()._field_Kind.ptr());;
	if ((_118717_s == nullptr)) {
		_1aabbe162_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_self_.get()._field_data.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aaa7a925_Expr> _119217_arg = (*(_118246_fc)).get()._field_Args[0LL];;
	jule::Ptr<_1aabbbe1d_Data> _119317_d = _1aabdbed7_evalExpr((*(_118231_e)), _119217_arg);;
	if ((_119317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aabbc7e2_IsConst(_119317_d.ptr())))) {
		_1aabbe162_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aac05066_Prim> _120113_prim = _1aabeeadd_Prim(_119317_d.get()._field_Kind.ptr());;
	if (((_120113_prim == nullptr) || (!(_1aac084ed_IsStr(_120113_prim.ptr()))))) {
		_1aabbe162_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_119317_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Str _120613_ident = _1c4cc0029_ReadStr(_119317_d.get()._field_Constant.ptr());;
	jule::Ptr<_1aaa997e0_FieldIns> _120717_f = _1aaa9b748_FindField(_118717_s.ptr(), _120613_ident);;
	if ((_120717_f == nullptr)) {
		_1aabbe162_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_118717_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_120613_ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_119317_d=jule::new_ptr<_1aabbbe1d_Data>((*(_self_.get()._field_data)));
	_119317_d=_1aabd4de2_evalStructSubIdentField((*(_118231_e)).ptr(), &(_119317_d), &(_118717_s), &(_119217_arg.get()._field_Token), &(_120717_f));
	return _1aaae9763_buildComptimeValue(&(_119317_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae5808_subIdent(jule::Ptr<_1aaae32b7_comptimeValue> _self_, jule::Str* _121729_ident) {
	{
		auto &_match_expr{ (*(_121729_ident)) };
		
		if (_match_expr == jule::Str("Unwrap", 6)) {
			_case_begin_1a80e8a23:;
			{
				jule::Ptr<_1aaab609d_FnIns> _122021_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _122133_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _122148_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae3ecc__Unwrap(_self_, _122133_e, _122148_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_122021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1a80e8a9a:;
			{
				jule::Ptr<_1aaab609d_FnIns> _122721_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _122833_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _122848_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae43c8__Type(_self_, _122833_e, _122848_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_122721_method));;
			}
		}
		else if (_match_expr == jule::Str("Lvalue", 6)) {
			_case_begin_1a80e8b22:;
			{
				jule::Ptr<_1aaab609d_FnIns> _123421_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _123533_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _123548_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae47c4__Lvalue(_self_, _123533_e, _123548_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_123421_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1a80e8b99:;
			{
				jule::Ptr<_1aaab609d_FnIns> _124121_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _124233_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _124248_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae4bc0__Mutable(_self_, _124233_e, _124248_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_124121_method));;
			}
		}
		else if (_match_expr == jule::Str("Const", 5)) {
			_case_begin_1a80e8dec:;
			{
				jule::Ptr<_1aaab609d_FnIns> _124821_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _124933_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _124948_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae50bb__Const(_self_, _124933_e, _124948_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_124821_method));;
			}
		}
		else if (_match_expr == jule::Str("Field", 5)) {
			_case_begin_1a80e8e74:;
			{
				jule::Ptr<_1aaab609d_FnIns> _125521_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _125633_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _125648_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae54b7__Field(_self_, _125633_e, _125648_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_125521_method));;
			}
		}
		else {
			_case_begin_1a80e899b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a80e8924:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aaae32b7_comptimeValue _Src) {
	_Stream << _1aaae363b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaae5e8a_Str(_1aaae5b16_comptimeFiles* _self_) {
	return jule::Str("comptimeFiles", 13);;
}



inline jule::Bool _1aaae62cb_Equal(jule::Ptr<_1aaae5b16_comptimeFiles> _self_, jule::Ptr<_1aabec1e5_TypeKind> _127421_other) {
	return false;;
}



inline void _1aaae674e_ready(_1aaae5b16_comptimeFiles* _self_, jule::Ptr<_1aab68969_Var>* _127829_keyA, jule::Ptr<_1aab68969_Var>* _127846_keyB) {
	if (((*(_127829_keyA)) != nullptr)) {
		(*(_127829_keyA)).get()._field_Constant=true;
		(*(_127829_keyA)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		(*(_127829_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_127829_keyA)).get()._field_Kind=_1aacdb89a_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_127846_keyB)) != nullptr)) {
		(*(_127846_keyB)).get()._field_Constant=true;
		(*(_127846_keyB)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		(*(_127846_keyB)).get()._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaae7211_comptimeFile>(), 18)})});
	};
}



inline void _1aaae6b6c_step(_1aaae5b16_comptimeFiles* _self_, jule::I32 _130023_i, jule::Ptr<_1aab68969_Var>* _130036_keyA, jule::Ptr<_1aab68969_Var>* _130053_keyB) {
	if (((*(_130036_keyA)) != nullptr)) {
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_130023_i)));
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_130053_keyB)) != nullptr)) {
		(*(_130053_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind.cast_ptr<_1aaae7211_comptimeFile>(18).get()._field_file=(*(_self_))._field_files[_130023_i];
	};
}



inline jule::I32 _1aaae6e03_len(_1aaae5b16_comptimeFiles* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_files.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaae5b16_comptimeFiles _Src) {
	_Stream << _1aaae5e8a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aaae7585_Str(_1aaae7211_comptimeFile* _self_) {
	return jule::Str("comptimeFile", 12);;
}



inline jule::Bool _1aaae78c6_Equal(jule::Ptr<_1aaae7211_comptimeFile> _self_, jule::Ptr<_1aabec1e5_TypeKind> _132421_other) {
	return false;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae7de3__Path(jule::Ptr<_1aaae7211_comptimeFile> _self_, jule::Ptr<_1aabbdb12_Eval>* _132830_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _132845_fc) {
	if (((*(_132845_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_132830_e)).ptr(), (*(_132845_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Path", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _133317_constant = static__1c4cbdb3d_NewStr(_self_.get()._field_file.get()._field_File.get()._field_Path);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Model=jule::Any(_133317_constant, &__jule_any_type19), ._field_Constant=_133317_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae82de__Name(jule::Ptr<_1aaae7211_comptimeFile> _self_, jule::Ptr<_1aabbdb12_Eval>* _134130_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _134145_fc) {
	if (((*(_134145_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_134130_e)).ptr(), (*(_134145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _134617_constant = static__1c4cbdb3d_NewStr(_1c3e417b7_Name(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Model=jule::Any(_134617_constant, &__jule_any_type19), ._field_Constant=_134617_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae86da__Dir(jule::Ptr<_1aaae7211_comptimeFile> _self_, jule::Ptr<_1aabbdb12_Eval>* _135429_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _135444_fc) {
	if (((*(_135444_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_135429_e)).ptr(), (*(_135444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Dir", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1c4cbcda1_Const> _135917_constant = static__1c4cbdb3d_NewStr(_1c3e41531_Dir(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Model=jule::Any(_135917_constant, &__jule_any_type19), ._field_Constant=_135917_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae8a2b_subIdent(jule::Ptr<_1aaae7211_comptimeFile> _self_, jule::Str* _136729_ident) {
	{
		auto &_match_expr{ (*(_136729_ident)) };
		
		if (_match_expr == jule::Str("Path", 4)) {
			_case_begin_1a811307b:;
			{
				jule::Ptr<_1aaab609d_FnIns> _137021_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _137133_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _137148_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae7de3__Path(_self_, _137133_e, _137148_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_137021_method));;
			}
		}
		else if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1a81130e2:;
			{
				jule::Ptr<_1aaab609d_FnIns> _137721_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _137833_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _137848_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae82de__Name(_self_, _137833_e, _137848_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_137721_method));;
			}
		}
		else if (_match_expr == jule::Str("Dir", 3)) {
			_case_begin_1a8113158:;
			{
				jule::Ptr<_1aaab609d_FnIns> _138421_method = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>([=](jule::Ptr<_1aabbdb12_Eval>* _138533_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _138548_fc, jule::Ptr<_1aabbbe1d_Data>* ) mutable -> jule::Ptr<_1aabbbe1d_Data> {
					return _1aaae86da__Dir(_self_, _138533_e, _138548_fc);;
				}), });;
				return _1aaae8da0_buildAsComptimeMethodData(&(_138421_method));;
			}
		}
		else {
			_case_begin_1a8113015:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8112eb0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aaae7211_comptimeFile _Src) {
	_Stream << _1aaae7585_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1aab45c87_Sema>*,jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>*)> _1aaaeb776_readyFn(jule::Ptr<_1aaaeb37a_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1aab45c87_Sema>*,jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>*)>([=](jule::Ptr<_1aab45c87_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a81216e9:;
			if (it != expr_end) {
				jule::I32 _6418_i = it - expr->begin();
				jule::Ptr<_1aaa838c8_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1aabea80e_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1a81216e9;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a812284e:;
						if (it != expr_end) {
							jule::Ptr<_1aaa765e1_TypeDecl> _7029_mask = *it;
							{
								jule::I32 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_1aabec1e5_TypeKind> _7229_kind = _1aab4d850_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1aac21d30_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1a8125654:;
											{
												jule::Ptr<_1aaa76beb_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1aaa76beb_IdentTypeDecl>(&__jule_any_type20);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1aaaeca41_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(_7637_itd.get()._field_Ident), 20)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_1a81266bb;
												};
											}
										}
										_match_end_1a81255ee:;
									};
									return false;;
								};
								_julec_label_1a81266bb:;
								{ jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> &__jule_push_dest = _6525_generic.get()._field_Constraint; __jule_push_dest.push(_7229_kind); };
							}
							_iter_next_1a812284e:;
							++it;
							goto _iter_begin_1a812284e;
						}
						_iter_end_1a812284e:;
					};
				}
				_iter_next_1a81216e9:;
				++it;
				_6418_i++;
				goto _iter_begin_1a81216e9;
			}
			_iter_end_1a81216e9:;
		};
		return true;;
	});;
}



inline jule::Bool _1aaaeba0c_readyFi(jule::Ptr<_1aaaeb37a_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1aab533d2_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _1aaaeb776_readyFn(_self_)));;
}



inline jule::Bool _1aaaebc93_readySi(jule::Ptr<_1aaaeb37a_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1aaaeb776_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _1aaaec029_ready(jule::Ptr<_1aaaeb37a_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1aaaeba0c_readyFi(_self_);;
	};
	return _1aaaebc93_readySi(_self_);;
}



inline jule::Bool _1aaaec2b0_check(jule::Ptr<_1aaaeb37a_constraintChecker> _self_) {
	if ((!(_1aaaec029_ready(_self_)))) {
		return false;;
	};
	_julec_label_1a812b9e0:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a812be63:;
		if (it != expr_end) {
			jule::I32 _11914_i = it - expr->begin();
			jule::Ptr<_1aabea80e_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1a812be63;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a812ccbb:;
					if (it != expr_end) {
						jule::Ptr<_1aabec1e5_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1aac05066_Prim> _12425_prim = _1aabeeadd_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1aac05b8d_IsConstraint(_12425_prim.ptr()))) {
								if (_1aaaec733_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1a812be63;
								};
								goto _iter_next_1a812ccbb;
							};
							if (_1aabec8ee_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1a812be63;
							};
						}
						_iter_next_1a812ccbb:;
						++it;
						goto _iter_begin_1a812ccbb;
					}
					_iter_end_1a812ccbb:;
				};
				_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1a812be63:;
			++it;
			_11914_i++;
			goto _iter_begin_1a812be63;
		}
		_iter_end_1a812be63:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaeb37a_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aaaed778_IsTraitImpl(_1aaaed3b0_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1aaaeda0e_IsStructImpl(_1aaaed3b0_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaaed3b0_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab037e4_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab03c12_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab0400e_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab0442c_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab04729_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab04bd0_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab0562b_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab059b1_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab05d8a_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab06187_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab06561_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab0693a_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab06de1_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab072ba_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab0792a_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab08563_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab08b5c_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab08ee2_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab09652_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab09bd5_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1aab0b08d_SelectPackage(_1aab0aae8_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)> _45832_selector) {
	return _1aab4622c_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1aab68969_Var> _1aab0b489_FindVar(_1aab0aae8_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1aab68969_Var> _47217_v = _1aabb93b0_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47217_v != nullptr)) {
		return _47217_v;;
	};
	jule::Ptr<_1aab0aae8_scopeChecker> _47717_parent = (*(_self_))._field_parent;;
	while ((_47717_parent != nullptr)) {
		{
			_47217_v=_1aabb93b0_findVar(_47717_parent.get()._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47217_v != nullptr)) {
				return _47217_v;;
			};
			_47717_parent=_47717_parent.get()._field_parent;
		}
	_iter_next_1a8158368:;
	}
	_iter_end_1a8158368:;;
	return _1aab46628_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1aabeb403_TypeAlias> _1aab0b885_FindTypeAlias(_1aab0aae8_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1aabeb403_TypeAlias> _49917_ta = _1aabb9866_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49917_ta != nullptr)) {
		return _49917_ta;;
	};
	jule::Ptr<_1aab0aae8_scopeChecker> _50417_parent = (*(_self_))._field_parent;;
	while ((_50417_parent != nullptr)) {
		{
			_49917_ta=_1aabb9866_findTypeAlias(_50417_parent.get()._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49917_ta != nullptr)) {
				return _49917_ta;;
			};
			_50417_parent=_50417_parent.get()._field_parent;
		}
	_iter_next_1a815ad2c:;
	}
	_iter_end_1a815ad2c:;;
	return _1aab46a24_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1aaa972b0_Struct> _1aab0bc81_FindStruct(_1aab0aae8_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1aab46e20_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1aaab3199_Fn> _1aab0c17c_FindFn(_1aab0aae8_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1aab4731b_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1aaac6443_Trait> _1aab0c4bd_FindTrait(_1aab0aae8_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1aab4765c_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1aaac8b3d_Enum> _1aab0c80e_FindEnum(_1aab0aae8_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1aab4799d_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1aaaca348_TypeEnum> _1aab0cb50_FindTypeEnum(_1aab0aae8_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1aab47cde_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1aab0cea2_isUnsafe(jule::Ptr<_1aab0aae8_scopeChecker> _self_) {
	jule::Ptr<_1aab0aae8_scopeChecker> _56517_scope = _self_;;
	_julec_label_1a81600c8:;
	if (_56517_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_56517_scope.get()._field_parent != nullptr)) {
		_56517_scope=_56517_scope.get()._field_parent;
		goto _julec_label_1a81600c8;
	};
	return false;;
}



inline jule::Bool _1aab0d238_isRoot(_1aab0aae8_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1aab0d436_stop(_1aab0aae8_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1aab0d6bc_stopped(_1aab0aae8_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1aab0d953_isDeferred(jule::Ptr<_1aab0aae8_scopeChecker> _self_) {
	jule::Ptr<_1aab0aae8_scopeChecker> _59817_scope = _self_;;
	_julec_label_1a8163010:;
	if (_59817_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_59817_scope.get()._field_parent != nullptr)) {
		_59817_scope=_59817_scope.get()._field_parent;
		goto _julec_label_1a8163010;
	};
	return false;;
}



inline jule::Ptr<_1aab0aae8_scopeChecker> _1aab0dbd9_getRoot(jule::Ptr<_1aab0aae8_scopeChecker> _self_) {
	jule::Ptr<_1aab0aae8_scopeChecker> _61617_root = _self_;;
	while (((_61617_root.get()._field_parent != nullptr) && (_61617_root.get()._field_owner == nullptr))) {
		{
			_61617_root=_61617_root.get()._field_parent;
		}
	_iter_next_1a8164a5b:;
	}
	_iter_end_1a8164a5b:;;
	return _61617_root;;
}



inline jule::Ptr<_1aab0aae8_scopeChecker> _1aab0de70_getHardRoot(jule::Ptr<_1aab0aae8_scopeChecker> _self_) {
	jule::Ptr<_1aab0aae8_scopeChecker> _62617_root = _self_;;
	while ((_62617_root.get()._field_parent != nullptr)) {
		{
			_62617_root=_62617_root.get()._field_parent;
		}
	_iter_next_1a8165a7e:;
	}
	_iter_end_1a8165a7e:;;
	return _62617_root;;
}



inline jule::Ptr<_1aab06187_Label> _1aab0e2b1_findLabel(_1aab0aae8_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81664db:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1a8167212:;
						{
							jule::Ptr<_1aab06187_Label> _64025_label = _63721_st.cast_ptr<_1aab06187_Label>(&__jule_any_type21);;
							if ((_64025_label.get()._field_Ident == (*(_63629_ident)))) {
								return _64025_label;;
							};
						}
					}
					_match_end_1a81671ac:;
				};
			}
			_iter_next_1a81664db:;
			++it;
			goto _iter_begin_1a81664db;
		}
		_iter_end_1a81664db:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aab09652_scopeLabel> _1aab0e602_findLabelScope(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1aab09652_scopeLabel> _65317_label = _1aab0e943_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65317_label != nullptr) && (_65317_label.get()._field_scope == _self_))) {
		return _65317_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1aab09652_scopeLabel> _1aab0e943_findLabelAll(_1aab0aae8_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a816928b:;
		if (it != expr_end) {
			jule::Ptr<_1aab09652_scopeLabel> _66521_lbl = *it;
			{
				if ((_66521_lbl.get()._field_label.get()._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1a816928b:;
			++it;
			goto _iter_begin_1a816928b;
		}
		_iter_end_1a816928b:;
	};
	return nullptr;;
}



inline jule::Bool _1aab0ed3e_isDuplicatedIdent(_1aab0aae8_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1aab68969_Var> _67713_v = _1aab0b489_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_67713_v != nullptr) && (static_cast<jule::Uintptr>(_67713_v) != _67636_itself))) {
		if ((_67713_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_67713_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_1aab481eb_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1aabeb403_TypeAlias> _68513_ta = _1aab0b885_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_68513_ta != nullptr) && (static_cast<jule::Uintptr>(_68513_ta) != _67636_itself))) {
		if ((_68513_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68513_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_1aab481eb_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1aab100e7_checkVarDecl(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8945b_VarDecl> _69636_decl) {
	jule::Ptr<_1aab68969_Var> _69717_v = _1aaabe6d3_buildVar(_69636_decl);;
	_69717_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = _self_.get()._field_table.get()._field_Vars; __jule_push_dest.push(_69717_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_69717_v, &__jule_any_type8)); };
	});;
	if (_1aab0ed3e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69717_v)), &(_69717_v.get()._field_Ident))) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _69717_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_69717_v.get()._field_Ident, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1aab0d436_stop(_self_.ptr());
		return;;
	};
	_1aab5b0bb_checkVarDecl(_self_.get()._field_s, &(_69717_v), jule::Trait<_1aac21d30_Lookup>(_self_, 0));
	if (((!(_1aab69085_IsTypeInferred(_69717_v.ptr()))) && ((_69717_v.get()._field_Kind == nullptr) || (_69717_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1aab60158_evalVarValue(_self_.get()._field_s, &(_69717_v), jule::Trait<_1aac21d30_Lookup>(_self_, 0));
	if (((!(_1aab68cee_IsInitialized(_69717_v.ptr()))) || (_69717_v.get()._field_Value.get()._field_Data == nullptr))) {
		return;;
	};
	_1aab160a9_removeInteriorMutRisk(_self_, &(_69717_v.get()._field_Value.get()._field_Data));
	_1aab5ece5_checkVarValue(_self_.get()._field_s, &(_69717_v));
}



inline void _1aab103a0_checkTypeAliasDecl(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8d031_TypeAliasDecl> _72742_decl) {
	jule::Ptr<_1aabeb403_TypeAlias> _72817_ta = _1aaabb1a2_buildTypeAlias(_72742_decl);;
	if (_1aab0ed3e_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72817_ta)), &(_72817_ta.get()._field_Ident))) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _72817_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_72817_ta.get()._field_Ident, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1aab0d436_stop(_self_.ptr());
		return;;
	};
	_1aab5514d_checkTypeAliasDecl(_self_.get()._field_s, &(_72817_ta), jule::Trait<_1aac21d30_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> &__jule_push_dest = _self_.get()._field_table.get()._field_TypeAliases; __jule_push_dest.push(_72817_ta); };
	if ((_72817_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1aab0d436_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1aab037e4_Scope> _1aab10636_getChild(_1aab0aae8_scopeChecker* _self_) {
	return jule::new_ptr<_1aab037e4_Scope>(_1aab037e4_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1aab10a54_checkChildSsc(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa866de_ScopeTree>* _75138_tree, jule::Ptr<_1aab037e4_Scope>* _75161_s, jule::Ptr<_1aab0aae8_scopeChecker>* _75177_ssc) {
	(*(_75177_ssc)).get()._field_parent=_self_;
	_1aab1c302_check((*(_75177_ssc)), _75138_tree, _75161_s);
}



inline jule::Ptr<_1aab037e4_Scope> _1aab10e50_checkChildSc(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa866de_ScopeTree>* _75637_tree, jule::Ptr<_1aab0aae8_scopeChecker>* _75660_ssc) {
	jule::Ptr<_1aab037e4_Scope> _75717_s = _1aab10636_getChild(_self_.ptr());;
	_1aab10a54_checkChildSsc(_self_, _75637_tree, &(_75717_s), _75660_ssc);
	return _75717_s;;
}



inline jule::Ptr<_1aab037e4_Scope> _1aab11291_checkChild(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa866de_ScopeTree>* _76235_tree) {
	jule::Ptr<_1aab0aae8_scopeChecker> _76317_ssc = _1aab1c588_newChildChecker(_self_);;
	return _1aab10e50_checkChildSc(_self_, _76235_tree, &(_76317_ssc));;
}



inline void _1aab11549_checkAnonScope(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa866de_ScopeTree> _76738_tree) {
	jule::Ptr<_1aab037e4_Scope> _76817_s = _1aab11291_checkChild(_self_, &(_76738_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_76817_s, &__jule_any_type22)); };
}



inline void _1aab118ac_processErrorCall(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaaa903b_BuiltinErrorCallExprModel>* _77241_m, jule::Ptr<_1c3e3a5e6_Token> _77272_err) {
	if (_1aab0d953_isDeferred(_self_)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _77272_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aab0aae8_scopeChecker> _77717_root = _1aab0dbd9_getRoot(_self_);;
	if ((!(_77717_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _77272_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1aab48c35_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_77241_m)).get()._field_Func=_77717_root.get()._field_owner;
}



inline void _1aab11b65_checkExpr(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa7a925_Expr> _78533_expr) {
	jule::Ptr<_1aabbdb12_Eval> _78617_eval = _1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0));;
	_78617_eval.get()._field_ignored=true;
	jule::Ptr<_1aabbbe1d_Data> _78817_d = _1aabdbed7_evalExpr(_78617_eval, _78533_expr);;
	if ((_78817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78817_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a817e89a:;
			{
				jule::Ptr<_1aaaa903b_BuiltinErrorCallExprModel> _79521_m = _78817_d.get()._field_Model.cast_ptr<_1aaaa903b_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1aab118ac_processErrorCall(_self_, &(_79521_m), _78533_expr.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_78817_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_1a8180093:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_78817_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1a817ec74:;
			{
				_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _78533_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a817ec1e:;
	};
}



inline jule::Ptr<_1aab03c12_If> _1aab11ea6_checkIf(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8be64_If> _81531_i) {
	jule::Ptr<_1aab037e4_Scope> _81617_s = _1aab11291_checkChild(_self_, &(_81531_i.get()._field_Scope));;
	jule::Ptr<_1aabbbe1d_Data> _81817_d = _1aabdbed7_evalExpr(_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0)), _81531_i.get()._field_Expr);;
	if ((_81817_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aac05066_Prim> _82317_prim = _1aabeeadd_Prim(_81817_d.get()._field_Kind.ptr());;
	if (((_82317_prim == nullptr) || (!(_1aac08267_IsBool(_82317_prim.ptr()))))) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _81531_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aab03c12_If>(_1aab03c12_If{._field_Expr=_81817_d.get()._field_Model, ._field_Scope=_81617_s});;
}



inline jule::Ptr<_1aab0400e_Else> _1aab122e7_checkElse(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8c33d_Else> _83533_e) {
	return jule::new_ptr<_1aab0400e_Else>(_1aab0400e_Else{._field_Scope=_1aab11291_checkChild(_self_, &(_83533_e.get()._field_Scope))});;
}



inline void _1aab125a0_checkConditional(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8c7e4_Conditional> _84140_conditional) {
	jule::Ptr<_1aab0442c_Conditional> _84217_c = jule::new_ptr<_1aab0442c_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_84217_c, &__jule_any_type36)); };
	_84217_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1aab03c12_If>>::alloc(0LL, (_84140_conditional.get()._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1aab03c12_If>> &__jule_push_dest = _84217_c.get()._field_Elifs; __jule_push_dest.push(_1aab11ea6_checkIf(_self_, _84140_conditional.get()._field_Head)); };
	{
		auto expr = &(_84140_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a81886d9:;
		if (it != expr_end) {
			jule::Ptr<_1aaa8be64_If> _84821_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1aab03c12_If>> &__jule_push_dest = _84217_c.get()._field_Elifs; __jule_push_dest.push(_1aab11ea6_checkIf(_self_, _84821_elif)); };
			}
			_iter_next_1a81886d9:;
			++it;
			goto _iter_begin_1a81886d9;
		}
		_iter_end_1a81886d9:;
	};
	if ((_84140_conditional.get()._field_Default != nullptr)) {
		_84217_c.get()._field_Default=_1aab122e7_checkElse(_self_, _84140_conditional.get()._field_Default);
	};
}



inline void _1aab12a78_checkIterScopeSsc(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Uintptr _85737_it, jule::Ptr<_1aaa866de_ScopeTree> _85754_tree, jule::Ptr<_1aab037e4_Scope>* _85777_s, jule::Ptr<_1aab0aae8_scopeChecker> _85792_ssc) {
	_85792_ssc.get()._field_it=_85737_it;
	_1aab10a54_checkChildSsc(_self_, &(_85754_tree), _85777_s, &(_85792_ssc));
}



inline jule::Ptr<_1aab037e4_Scope> _1aab1302e_checkIterScopeSc(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Uintptr _86236_it, jule::Ptr<_1aaa866de_ScopeTree> _86253_tree, jule::Ptr<_1aab0aae8_scopeChecker> _86275_ssc) {
	jule::Ptr<_1aab037e4_Scope> _86317_scope = _1aab10636_getChild(_self_.ptr());;
	_1aab12a78_checkIterScopeSsc(_self_, _86236_it, _86253_tree, &(_86317_scope), _86275_ssc);
	return _86317_scope;;
}



inline jule::Ptr<_1aab037e4_Scope> _1aab1342a_checkIterScope(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Uintptr _86834_it, jule::Ptr<_1aaa866de_ScopeTree>* _86852_tree) {
	jule::Ptr<_1aab0aae8_scopeChecker> _86917_ssc = _1aab1c588_newChildChecker(_self_);;
	return _1aab1302e_checkIterScopeSc(_self_, _86834_it, (*(_86852_tree)), _86917_ssc);;
}



inline void _1aab136d3_checkInfIter(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa89ec8_Iter>* _87337_it) {
	jule::Ptr<_1aab04729_InfIter> _87417_kind = jule::new_ptr<_1aab04729_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_87417_kind, &__jule_any_type37)); };
	_87417_kind.get()._field_Scope=_1aab1342a_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87417_kind)), &((*(_87337_it)).get()._field_Scope));
}



inline void _1aab1398b_checkWhileIter(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa89ec8_Iter>* _87939_it) {
	jule::Ptr<_1aaa8a803_WhileKind> _88017_wh = (*(_87939_it)).get()._field_Kind.cast_ptr<_1aaa8a803_WhileKind>(&__jule_any_type38);;
	if (((_88017_wh.get()._field_Expr == nullptr) && (_88017_wh.get()._field_Next == nullptr))) {
		_1aab136d3_checkInfIter(_self_, _87939_it);
		return;;
	};
	jule::Ptr<_1aab04bd0_WhileIter> _88617_kind = jule::new_ptr<_1aab04bd0_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_88617_kind, &__jule_any_type39)); };
	_88617_kind.get()._field_Scope=_1aab1342a_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88617_kind)), &((*(_87939_it)).get()._field_Scope));
	if ((_88017_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1aabbbe1d_Data> _89121_d = _1aabdbed7_evalExpr(_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0)), _88017_wh.get()._field_Expr);;
		if ((_89121_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1aac05066_Prim> _89617_prim = _1aabeeadd_Prim(_89121_d.get()._field_Kind.ptr());;
		if ((_89617_prim == nullptr)) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), (*(_87939_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1aac08267_IsBool(_89617_prim.ptr())))) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), (*(_87939_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_88617_kind.get()._field_Expr=_89121_d.get()._field_Model;
	};
	if (_1aaa8ab66_IsWhileNext(_88017_wh.ptr())) {
		if ((!(_1aab02cee_isValidAstStForNextSt(&(_88017_wh.get()._field_Next))))) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _88017_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _91617_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1aab1ae38_checkNode(_self_, &(_88017_wh.get()._field_Next));
		if ((_91617_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91925_st = _self_.get()._field_scope.get()._field_Stmts[_91617_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _91617_n);
			if ((!(_1aab030b8_isValidStForNextSt(&(_91925_st))))) {
				_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _88017_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_88617_kind.get()._field_Next=_91925_st;
		};
	};
}



inline void _1aab13da9_checkComptimeRangeIter(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa89ec8_Iter>* _92947_it, jule::Ptr<_1aab0562b_RangeIter>* _92963_kind, jule::Ptr<_1aabbbe1d_Data>* _92986_d) {
	if (((*(_92963_kind)).get()._field_KeyA != nullptr)) {
		if (((!(_1aab481eb_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1aab0ed3e_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*(_92963_kind)).get()._field_KeyA.get()._field_Ident)))) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), (*(_92963_kind)).get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92963_kind)).get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1aab48c35_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*(_92963_kind)).get()._field_KeyB != nullptr)) {
		if (((!(_1aab481eb_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1aab0ed3e_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*(_92963_kind)).get()._field_KeyB.get()._field_Ident)))) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), (*(_92963_kind)).get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92963_kind)).get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1aab48c35_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1aaacc6e1_comptimeRange> _94317_comptime = _1aac02e87_comptimeRange((*(_92986_d)).get()._field_Kind.ptr());;
	_1aaacc504_comptimeRangeKind_mptr_data[(_94317_comptime.get()._field_kind).type_offset]._1aaacbbeb_ready(_94317_comptime.get()._field_kind, &((*(_92963_kind)).get()._field_KeyA), &((*(_92963_kind)).get()._field_KeyB));
	jule::I32 _94517_i = 0LL;;
	jule::I32 _94613_errors = _self_.get()._field_s.get()._field_errors.len();;
	for (; (_94517_i < _1aaacc504_comptimeRangeKind_mptr_data[(_94317_comptime.get()._field_kind).type_offset]._1aaacc3a0_len(_94317_comptime.get()._field_kind)); (_94517_i)++) {
		{
			jule::Ptr<_1aab0aae8_scopeChecker> _94821_ssc = _1aab1c588_newChildChecker(_self_);;
			jule::Ptr<_1aab037e4_Scope> _94921_scope = _1aab10636_getChild(_self_.ptr());;
			if (((*(_92963_kind)).get()._field_KeyA != nullptr)) {
				(*(_92963_kind)).get()._field_KeyA.get()._field_Scope=_94921_scope;
				{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = _94821_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92963_kind)).get()._field_KeyA); };
			};
			if (((*(_92963_kind)).get()._field_KeyB != nullptr)) {
				(*(_92963_kind)).get()._field_KeyB.get()._field_Scope=_94921_scope;
				{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = _94821_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92963_kind)).get()._field_KeyB); };
			};
			_1aaacc504_comptimeRangeKind_mptr_data[(_94317_comptime.get()._field_kind).type_offset]._1aaacc119_step(_94317_comptime.get()._field_kind, _94517_i, &((*(_92963_kind)).get()._field_KeyA), &((*(_92963_kind)).get()._field_KeyB));
			_1aab10a54_checkChildSsc(_self_, &((*(_92947_it)).get()._field_Scope), &(_94921_scope), &(_94821_ssc));
			if ((_94613_errors != _self_.get()._field_s.get()._field_errors.len())) {
				goto _iter_end_1a819d534;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_94921_scope, &__jule_any_type22)); };
		}
	_iter_next_1a819d534:;
	}
	_iter_end_1a819d534:;;
}



inline void _1aab14162_checkRangeIter(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa89ec8_Iter>* _96839_it) {
	jule::Ptr<_1aaa8b20a_RangeKind> _96917_rang = (*(_96839_it)).get()._field_Kind.cast_ptr<_1aaa8b20a_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_1aabbbe1d_Data> _97117_d = _1aabdbb96_evalExpr1(_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0)), _96917_rang.get()._field_Expr);;
	if ((_97117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1aab0562b_RangeIter> _97617_kind = jule::new_ptr<_1aab0562b_RangeIter>(_1aab0562b_RangeIter{._field_Expr=_97117_d, });;
	_1aabb21cc_rangeChecker _98017_rc = _1aabb21cc_rangeChecker{._field_sc=_self_, ._field_rang=_96917_rang, ._field_Kind=_97617_kind, ._field_d=_97117_d};;
	jule::Bool _98613_ok = _1aabb41e0_check(&_98017_rc);;
	if ((!(_98613_ok))) {
		return;;
	};
	jule::Ptr<_1aaacc6e1_comptimeRange> _99117_comptimeRange = _1aac02e87_comptimeRange(_97117_d.get()._field_Kind.ptr());;
	if ((_99117_comptimeRange != nullptr)) {
		_1aab13da9_checkComptimeRangeIter(_self_, _96839_it, &(_97617_kind), &(_97117_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_97617_kind, &__jule_any_type41)); };
	jule::Ptr<_1aab0aae8_scopeChecker> _99917_ssc = _1aab1c588_newChildChecker(_self_);;
	jule::Ptr<_1aab037e4_Scope> _100017_scope = _1aab10636_getChild(_self_.ptr());;
	if ((_97617_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1aab481eb_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1aab0ed3e_isDuplicatedIdent(_self_.ptr(), 0LLU, &(_97617_kind.get()._field_KeyA.get()._field_Ident)))) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _97617_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_97617_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1aab48c35_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_97617_kind.get()._field_KeyA.get()._field_Scope=_100017_scope;
		{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = _99917_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_97617_kind.get()._field_KeyA); };
	};
	if ((_97617_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1aab481eb_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1aab0ed3e_isDuplicatedIdent(_self_.ptr(), 0LLU, &(_97617_kind.get()._field_KeyB.get()._field_Ident)))) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _97617_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_97617_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1aab48c35_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_97617_kind.get()._field_KeyB.get()._field_Scope=_100017_scope;
		{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = _99917_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_97617_kind.get()._field_KeyB); };
	};
	_1aab12a78_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_97617_kind)), (*(_96839_it)).get()._field_Scope, &(_100017_scope), _99917_ssc);
	_97617_kind.get()._field_Scope=_100017_scope;
}



inline void _1aab1441a_checkIter(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa89ec8_Iter> _102433_it) {
	if (_1aaa8a33b_IsInf(_102433_it.ptr())) {
		_1aab136d3_checkInfIter(_self_, &(_102433_it));
		return;;
	};
	{
		auto &_match_expr{ _102433_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1a81ad91d:;
			{
				_1aab1398b_checkWhileIter(_self_, &(_102433_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1a81ae303:;
			{
				_1aab14162_checkRangeIter(_self_, &(_102433_it));
			}
		}
		else {
			_case_begin_1a81addb3:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1a81ad80d:;
	};
}



inline jule::Bool _1aab1475b_checkValidContLabel(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Uintptr _104039_it) {
	jule::Ptr<_1aab0aae8_scopeChecker> _104117_scope = _self_;;
	_julec_label_1a81b0546:;
	if ((_104117_scope.get()._field_it == _104039_it)) {
		return true;;
	};
	if ((_104117_scope.get()._field_parent != nullptr)) {
		_104117_scope=_104117_scope.get()._field_parent;
		goto _julec_label_1a81b0546;
	};
	return false;;
}



inline jule::Bool _1aab14a9c_checkValidBreakLabel(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Uintptr _105640_ptr) {
	jule::Ptr<_1aab0aae8_scopeChecker> _105717_scope = _self_;;
	_julec_label_1a81b22c3:;
	if ((_105717_scope.get()._field_it == _105640_ptr)) {
		return true;;
	};
	if ((_105717_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _106517_mtch = static_cast<jule::Uintptr>(((_1aab08563_Case*)(_105717_scope.get()._field_cse))->_field_Owner);;
		if ((_106517_mtch == _105640_ptr)) {
			return true;;
		};
	};
	if ((_105717_scope.get()._field_parent != nullptr)) {
		_105717_scope=_105717_scope.get()._field_parent;
		goto _julec_label_1a81b22c3;
	};
	return false;;
}



inline jule::Ptr<_1aab059b1_ContSt> _1aab14ddd_checkContValidScope(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8b9ad_ContSt> _107939_c) {
	if (_1aab0d953_isDeferred(_self_)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _107939_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_107939_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1aab059b1_ContSt>();;
	};
	jule::Ptr<_1aab0aae8_scopeChecker> _108917_scope = _self_;;
	_julec_label_1a81b4ea7:;
	{
		
		if ((((_108917_scope.get()._field_it == 0LLU) && (_108917_scope.get()._field_parent != nullptr)) && (_108917_scope.get()._field_owner == nullptr))) {
			_case_begin_1a81b61d9:;
			{
				_108917_scope=_108917_scope.get()._field_parent;
				goto _julec_label_1a81b4ea7;
			}
		}
		else if ((_108917_scope.get()._field_it != 0LLU)) {
			_case_begin_1a81b6261:;
			{
				return jule::new_ptr<_1aab059b1_ContSt>(_1aab059b1_ContSt{._field_It=_108917_scope.get()._field_it});;
			}
		}
		_match_end_1a81b612e:;
	};
	_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _107939_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1aab15196_checkCont(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8b9ad_ContSt> _110329_c) {
	jule::Ptr<_1aab059b1_ContSt> _110417_cont = _1aab14ddd_checkContValidScope(_self_, _110329_c);;
	if ((_110417_cont == nullptr)) {
		return;;
	};
	if ((_110329_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1aab09652_scopeLabel> _111021_label = _1aab00d0d_findLabelParent(&(_110329_c.get()._field_Label.get()._field_Kind), _self_.get()._field_parent);;
		if ((_111021_label == nullptr)) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _110329_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_110329_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_111021_label.get()._field_used=true;
		if (((_111021_label.get()._field_pos + 1LL) >= _111021_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _110329_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_110329_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I32 _112317_i = (_111021_label.get()._field_pos + 1LL);;
		if ((_112317_i >= _111021_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _110329_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _112725_st = _111021_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_112317_i];;
			{
				auto &_match_expr{ _112725_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1a81be29c:;
					{
						_110417_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112725_st.cast_ptr<_1aab04729_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_1a81bdea0:;
					{
						_110417_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112725_st.cast_ptr<_1aab0562b_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1a81be016:;
					{
						_110417_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112725_st.cast_ptr<_1aab04bd0_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_1a81bde39:;
					{
						_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _110329_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_110329_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1a81bddd4:;
			};
		};
	};
	if ((_110417_cont.get()._field_It != 0LLU)) {
		if ((!(_1aab1475b_checkValidContLabel(_self_, _110417_cont.get()._field_It)))) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _110329_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_110329_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_110417_cont, &__jule_any_type42)); };
}



inline void _1aab1544e_checkLabel(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa83ca2_LabelSt> _115034_l) {
	if ((_1aab0e2b1_findLabel(_self_.ptr(), &(_115034_l.get()._field_Ident)) != nullptr)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _115034_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_115034_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1aab06187_Label> _115617_label = jule::new_ptr<_1aab06187_Label>(_1aab06187_Label{._field_Ident=_115034_l.get()._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_115617_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1aab09652_scopeLabel>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(jule::new_ptr<_1aab09652_scopeLabel>(_1aab09652_scopeLabel{._field_token=_115034_l.get()._field_Token, ._field_label=_115617_label, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1aab15707_pushGoto(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8417b_GotoSt> _116932_gt) {
	jule::Ptr<_1aab06561_GotoSt> _117017_st = jule::new_ptr<_1aab06561_GotoSt>(_1aab06561_GotoSt{._field_Ident=_116932_gt.get()._field_Label.get()._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_117017_st, &__jule_any_type43)); };
	{ jule::Slice<jule::Ptr<_1aab09bd5_scopeGoto>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1aab09bd5_scopeGoto>(_1aab09bd5_scopeGoto{._field_st=_117017_st, ._field_gt=_116932_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})); };
}



inline void _1aab159b0_checkPostfix(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8516b_AssignSt> _118336_a) {
	if ((_118336_a.get()._field_Left.len() > 1LL)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _118336_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aaa7a925_Expr> _118917_expr = _118336_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1aabbbe1d_Data> _119017_d = _1aabdbed7_evalExpr(_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0)), _118917_expr);;
	if ((_119017_d == nullptr)) {
		return;;
	};
	_1aab02a35_checkAssign(&(_self_.get()._field_s), &(_119017_d), nullptr, _118336_a.get()._field_Setter);
	if ((_1aac0010a_Ptr(_119017_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aac0c359_Ptr> _119821_ptr = _1aac0010a_Ptr(_119017_d.get()._field_Kind.ptr());;
		if (_1aac0cd93_IsUnsafe(_119821_ptr.ptr())) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _118336_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_118336_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str(_119017_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_1aabeeadd_Prim(_119017_d.get()._field_Kind.ptr()) == nullptr) || (!(_1c4cbc8c8_IsNum(_1aabeeadd_Prim(_119017_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _118336_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_118336_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str(_119017_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1aab0693a_Postfix>(_1aab0693a_Postfix{._field_Expr=_119017_d.get()._field_Model, ._field_Op=_118336_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type44)); };
}



inline jule::Bool _1aab15d01_isNewAssignIdent(_1aab0aae8_scopeChecker* _self_, jule::Str _121635_ident) {
	if ((_1c3e3d055_IsIgnoreIdent(_121635_ident) || _121635_ident.empty())) {
		return false;;
	};
	return (_1aabb9c62_defByIdent((*(_self_))._field_table.ptr(), &(_121635_ident), false) == nullptr);;
}



inline void _1aab160a9_removeInteriorMutRisk(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aabbbe1d_Data>* _122946_d) {
	jule::Ptr<_1aaa9a390_StructIns> _123013_s = _1aac01161_Struct((*(_122946_d)).get()._field_Kind.ptr());;
	if ((_123013_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1aab0aae8_scopeChecker> _123413_root = _1aab0de70_getHardRoot(_self_);;
	if ((_123413_root.get()._field_owner.get()._field_Owner != _123013_s)) {
		return;;
	};
	(*(_122946_d)).get()._field_Mutable=true;
}



inline jule::Bool _1aab16560_checkStructureAssignOp(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa9a390_StructIns>* _124347_s, jule::Ptr<_1aaa8516b_AssignSt>* _124367_a, jule::Ptr<_1aabbbe1d_Data>* _124386_r) {
	jule::Ptr<_1aaab609d_FnIns> _124617_overload = nullptr;;
	{
		auto &_match_expr{ (*(_124367_a)).get()._field_Setter.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1a81d2733:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1a81d3a42:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1a81d3ab9:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1a81d2b0c:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1a81d2b73:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1a81d2bd9:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1a81d2c61:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1a81d3bb8:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1a81d3c2e:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1a81d3c95:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1a81d2a96:;
			{
				_1aab488c2_pushErr(_self_.get()._field_s.ptr(), (*(_124367_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_124367_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1aaa9a714_Str((*(_124347_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1a81d25bd:;
	};
	if ((_124617_overload == nullptr)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), (*(_124367_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_124367_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1aaa9a714_Str((*(_124347_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1aaab5102_ParamIns> _127817_p = _124617_overload.get()._field_Params[1LL];;
	return _1aab513d0_checkAssignType(_self_.get()._field_s, _127817_p.get()._field_Decl.get()._field_Reference, &(_127817_p.get()._field_Kind), _124386_r, (*(_124367_a)).get()._field_Setter);;
}



inline void _1aab16818_checkSingleAssign(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8516b_AssignSt>* _128242_a) {
	jule::Ptr<_1aabbbe1d_Data> _128317_l = nullptr;;
	if ((!(_1c3e3d055_IsIgnoreIdent((*(_128242_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1aaa7a925_Expr> _128621_expr = (*(_128242_a)).get()._field_Left[0LL].get()._field_Expr;;
		_128317_l=_1aabdbed7_evalExpr(_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0)), _128621_expr);
		if ((_128317_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1aabbdb12_Eval> _129317_eval = nullptr;;
	if ((_128317_l != nullptr)) {
		_129317_eval=_1aab50a2d_evalp(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0), _128317_l.get()._field_Kind);
	} else {
		_129317_eval=_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0));
	};
	_129317_eval.get()._field_unsafety=_1aab0cea2_isUnsafe(_self_);
	jule::Ptr<_1aabbbe1d_Data> _130017_r = _1aabdbed7_evalExpr(_129317_eval, (*(_128242_a)).get()._field_Right);;
	if ((_130017_r == nullptr)) {
		return;;
	};
	_1aab160a9_removeInteriorMutRisk(_self_, &(_130017_r));
	if ((_128317_l == nullptr)) {
		if (_1aabed56a_Void(_130017_r.get()._field_Kind.ptr())) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), (*(_128242_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_130017_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1aab02a35_checkAssign(&(_self_.get()._field_s), &(_128317_l), _130017_r, (*(_128242_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_1aac01914_Tup(_130017_r.get()._field_Kind.ptr()) != nullptr)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), (*(_128242_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aaa9e471_OperandExprModel> _132417_lm = jule::new_ptr<_1aaa9e471_OperandExprModel>(_1aaa9e471_OperandExprModel{._field_Kind=_128317_l.get()._field_Kind, ._field_Model=_128317_l.get()._field_Model});;
	jule::Ptr<_1aaa9e471_OperandExprModel> _132817_rm = jule::new_ptr<_1aaa9e471_OperandExprModel>(_1aaa9e471_OperandExprModel{._field_Kind=_130017_r.get()._field_Kind, ._field_Model=_130017_r.get()._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1aab06de1_Assign>(_1aab06de1_Assign{._field_L=_132417_lm, ._field_R=_132817_rm, ._field_Op=(*(_128242_a)).get()._field_Setter}), &__jule_any_type45)); };
	if (((*(_128242_a)).get()._field_Setter.get()._field_Id != static_cast<jule::U32>(71LLU))) {
		jule::Ptr<_1aaa9a390_StructIns> _133521_strct = _1aac01161_Struct(_128317_l.get()._field_Kind.ptr());;
		if ((_133521_strct != nullptr)) {
			_1aab16560_checkStructureAssignOp(_self_, &(_133521_strct), _128242_a, &(_130017_r));
			return;;
		};
		jule::U32 _134017_id = (*(_128242_a)).get()._field_Setter.get()._field_Id;;
		(*(_128242_a)).get()._field_Setter.get()._field_Id=_1aab1c90c_removeEqFromOp((*(_128242_a)).get()._field_Setter.get()._field_Id);
		_1aabde43a_binaryEval _134221_solver = static__1aabded64_new(_129317_eval, (*(_128242_a)).get()._field_Setter);;
		_130017_r=_1aabe5177_solveExplicit(&_134221_solver, &(_128317_l), &(_130017_r));
		(*(_128242_a)).get()._field_Setter.get()._field_Id=_134017_id;
		if ((_130017_r == nullptr)) {
			return;;
		};
		return;;
	};
	_1aaba59d9_assignTypeChecker _135117_checker = _1aaba59d9_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_128317_l.get()._field_Kind, ._field_d=_130017_r, ._field_errorToken=(*(_128242_a)).get()._field_Setter};;
	if (_1aaba6c4e_check(&_135117_checker)) {
		_132817_rm.get()._field_Model=_130017_r.get()._field_Model;
		_132417_lm.get()._field_Model=_128317_l.get()._field_Model;
	};
}



inline void _1aab16d9b_processEndPartOfMultiAssign(_1aab0aae8_scopeChecker* _self_, jule::Ptr<_1aab072ba_MultiAssign>* _136351_st, jule::Ptr<_1aaa8516b_AssignSt>* _136414_a, jule::Ptr<_1aaa84ad8_AssignLeft>* _136433_lexpr, jule::Ptr<_1aabbbe1d_Data>* _136458_l, jule::Ptr<_1aabbbe1d_Data>* _136473_r) {
	if (((!((*(_136433_lexpr)).get()._field_Reference)) && _1c3e3d055_IsIgnoreIdent((*(_136433_lexpr)).get()._field_Ident))) {
		if (_1aabed56a_Void((*(_136473_r)).get()._field_Kind.ptr())) {
			_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_136414_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1aabbbe1d_Data>> &__jule_push_dest = (*(_136351_st)).get()._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*(_136414_a)).get()._field_Declarative && ((*(_136433_lexpr)).get()._field_Reference || _1aab15d01_isNewAssignIdent(_self_, (*(_136433_lexpr)).get()._field_Ident)))) {
		if (_1aab0ed3e_isDuplicatedIdent(_self_, 0LLU, &((*(_136433_lexpr)).get()._field_Ident))) {
			_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_136433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_136433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_1aab48c35_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1aab0d436_stop(_self_);
			return;;
		};
		if (_1c3e3d055_IsIgnoreIdent((*(_136433_lexpr)).get()._field_Ident)) {
			_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_136433_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1aab68969_Var> _138521_v = jule::new_ptr<_1aab68969_Var>(_1aab68969_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_136433_lexpr)).get()._field_Token, ._field_Ident=(*(_136433_lexpr)).get()._field_Ident, ._field_Mutable=(*(_136433_lexpr)).get()._field_Mutable, ._field_Reference=(*(_136433_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Expr=(*(_136414_a)).get()._field_Right, ._field_Data=(*(_136473_r))}), });;
		_1aab5ece5_checkVarValue((*(_self_))._field_s, &(_138521_v));
		_138521_v.get()._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1aabbbe1d_Data>> &__jule_push_dest = (*(_136351_st)).get()._field_L; __jule_push_dest.push(jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_138521_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_138521_v.get()._field_Mutable, ._field_Reference=_138521_v.get()._field_Reference, ._field_Lvalue=(!(_138521_v.get()._field_Constant)), ._field_Model=jule::Any(_138521_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_138521_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_138521_v, &__jule_any_type8)); };
		return;;
	};
	if (((*(_136433_lexpr)).get()._field_Mutable || (*(_136433_lexpr)).get()._field_Reference)) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_136433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_136433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1aab02a35_checkAssign(&((*(_self_))._field_s), _136458_l, (*(_136473_r)), (*(_136433_lexpr)).get()._field_Token)))) {
		return;;
	};
	;
	_1aab548de_checkValidityForInitExpr((*(_self_))._field_s, (*(_136458_l)).get()._field_Mutable, false, &((*(_136458_l)).get()._field_Kind), _136473_r, &((*(_136414_a)).get()._field_Setter));
	_1aaba59d9_assignTypeChecker _142817_checker = _1aaba59d9_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_136458_l)).get()._field_Kind, ._field_d=(*(_136473_r)), ._field_errorToken=(*(_136414_a)).get()._field_Setter};;
	_1aaba6c4e_check(&_142817_checker);
	{ jule::Slice<jule::Ptr<_1aabbbe1d_Data>> &__jule_push_dest = (*(_136351_st)).get()._field_L; __jule_push_dest.push((*(_136458_l))); };
}



inline void _1aab17154_checkMultiAssign(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8516b_AssignSt>* _143841_a) {
	jule::Ptr<_1aabbbe1d_Data> _143917_rd = _1aabdbed7_evalExpr(_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0)), (*(_143841_a)).get()._field_Right);;
	if ((_143917_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aabbbe1d_Data>> _144317_right = _1aab01b88_getDatasFromTupleData(&(_143917_rd));;
	if ((_144317_right.len() == 1LL)) {
		{
			auto &_match_expr{ _144317_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1a8204c1c:;
				{
					jule::Ptr<_1aaaa22cb_IndexingExprModel> _144725_iem = _144317_right[0LL].get()._field_Model.cast_ptr<_1aaaa22cb_IndexingExprModel>(&__jule_any_type46);;
					if ((_1aac0167d_Map(_144725_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_144317_right=jule::Slice<jule::Ptr<_1aabbbe1d_Data>>::make({jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aac0167d_Map(_144725_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, })});
					};
				}
			}
			_match_end_1a8204b73:;
		};
	};
	{
		
		if (((*(_143841_a)).get()._field_Left.len() > _144317_right.len())) {
			_case_begin_1a8204623:;
			{
				_1aab488c2_pushErr(_self_.get()._field_s.ptr(), (*(_143841_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_143841_a)).get()._field_Left.len() < _144317_right.len())) {
			_case_begin_1a820469a:;
			{
				_1aab488c2_pushErr(_self_.get()._field_s.ptr(), (*(_143841_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a8204810:;
	};
	jule::Ptr<_1aab072ba_MultiAssign> _146617_st = jule::new_ptr<_1aab072ba_MultiAssign>(_1aab072ba_MultiAssign{._field_R=_143917_rd.get()._field_Model});;
	{
		auto expr = &((*(_143841_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82084e5:;
		if (it != expr_end) {
			jule::I32 _146913_i = it - expr->begin();
			{
				jule::Ptr<_1aaa84ad8_AssignLeft> _147021_lexpr = (*(_143841_a)).get()._field_Left[_146913_i];;
				jule::Ptr<_1aabbbe1d_Data> _147121_l = nullptr;;
				if (((!(_1c3e3d055_IsIgnoreIdent(_147021_lexpr.get()._field_Ident))) && ((!((*(_143841_a)).get()._field_Declarative)) || (!(_1aab15d01_isNewAssignIdent(_self_.ptr(), _147021_lexpr.get()._field_Ident)))))) {
					_147121_l=_1aabdbed7_evalExpr(_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0)), _147021_lexpr.get()._field_Expr);
					if ((_147121_l == nullptr)) {
						goto _iter_next_1a82084e5;
					};
				};
				jule::Ptr<_1aabbbe1d_Data> _147921_r = _144317_right[_146913_i];;
				_1aab160a9_removeInteriorMutRisk(_self_, &(_147921_r));
				_1aab16d9b_processEndPartOfMultiAssign(_self_.ptr(), &(_146617_st), _143841_a, &(_147021_lexpr), &(_147121_l), &(_147921_r));
			}
			_iter_next_1a82084e5:;
			++it;
			_146913_i++;
			goto _iter_begin_1a82084e5;
		}
		_iter_end_1a82084e5:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_146617_st, &__jule_any_type47)); };
}



inline void _1aab1740c_singleDeclAssign(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8516b_AssignSt>* _148641_a) {
	jule::Ptr<_1aaa84ad8_AssignLeft> _148717_lexpr = (*(_148641_a)).get()._field_Left[0LL];;
	if (_1aab0ed3e_isDuplicatedIdent(_self_.ptr(), 0LLU, &(_148717_lexpr.get()._field_Ident))) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _148717_lexpr.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_148717_lexpr.get()._field_Ident, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1aab0d436_stop(_self_.ptr());
		return;;
	};
	if (_1c3e3d055_IsIgnoreIdent(_148717_lexpr.get()._field_Ident)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _148717_lexpr.get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aabbbe1d_Data> _149817_r = _1aabdbed7_evalExpr(_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0)), (*(_148641_a)).get()._field_Right);;
	if ((_149817_r == nullptr)) {
		return;;
	};
	_1aab160a9_removeInteriorMutRisk(_self_, &(_149817_r));
	jule::Ptr<_1aab68969_Var> _150617_v = jule::new_ptr<_1aab68969_Var>(_1aab68969_Var{._field_Scope=_self_.get()._field_scope, ._field_Token=_148717_lexpr.get()._field_Token, ._field_Ident=_148717_lexpr.get()._field_Ident, ._field_Mutable=_148717_lexpr.get()._field_Mutable, ._field_Reference=_148717_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Expr=(*(_148641_a)).get()._field_Right, ._field_Data=_149817_r}), });;
	_1aab5ece5_checkVarValue(_self_.get()._field_s, &(_150617_v));
	{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = _self_.get()._field_table.get()._field_Vars; __jule_push_dest.push(_150617_v); };
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_150617_v, &__jule_any_type8)); };
}



inline void _1aab176b5_checkAssignSt(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8516b_AssignSt> _152237_a) {
	{
		
		if (_1c3e40288_IsPostfixOp(_152237_a.get()._field_Setter.get()._field_Id)) {
			_case_begin_1a82184b1:;
			{
				_1aab159b0_checkPostfix(_self_, _152237_a);
			}
		}
		else if ((_152237_a.get()._field_Left.len() == 1LL)) {
			_case_begin_1a82183d4:;
			{
				if (_152237_a.get()._field_Declarative) {
					_1aab1740c_singleDeclAssign(_self_, &(_152237_a));
				} else {
					_1aab16818_checkSingleAssign(_self_, &(_152237_a));
				};
			}
		}
		else {
			_case_begin_1a8217647:;
			{
				_1aab17154_checkMultiAssign(_self_, &(_152237_a));
			}
		}
		_match_end_1a821758c:;
	};
}



inline jule::Ptr<_1aab037e4_Scope> _1aab17ab1_checkCaseScope(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aab08563_Case>* _153735_c, jule::Ptr<_1aaa866de_ScopeTree>* _153750_tree) {
	jule::Ptr<_1aab0aae8_scopeChecker> _153817_ssc = _1aab1c588_newChildChecker(_self_);;
	_153817_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_153735_c))));
	return _1aab10e50_checkChildSc(_self_, _153750_tree, &(_153817_ssc));;
}



inline jule::Ptr<_1aab08563_Case> _1aab18122_checkCase(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aab0792a_Match> _154333_m, jule::I32 _154344_i, jule::Ptr<_1aaa8d4d7_Case> _154356_c, jule::Ptr<_1aabbbe1d_Data> _154375_expr) {
	jule::Ptr<_1aab08563_Case> _154417_case = _154333_m.get()._field_Cases[_154344_i];;
	_154417_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1aabbbe1d_Data>>::alloc(0LL, _154356_c.get()._field_Exprs.len());
	jule::Bool _154617_constMatched = false;;
	jule::Ptr<_1aabbdb12_Eval> _154717_eval = _1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0));;
	{
		auto expr = &(_154356_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a821d076:;
		if (it != expr_end) {
			jule::Ptr<_1aaa7a925_Expr> _154821_e = *it;
			{
				jule::Ptr<_1aabbbe1d_Data> _154921_d = _1aabdb1c3_evalExprKind(_154717_eval, _154821_e.get()._field_Kind);;
				if ((_154921_d == nullptr)) {
					goto _iter_next_1a821d076;
				};
				if (_154333_m.get()._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1aabbbe1d_Data>> &__jule_push_dest = _154417_case.get()._field_Exprs; __jule_push_dest.push(_154921_d); };
					if ((_1aab018be_countMatchType(&(_154333_m), &(_154921_d.get()._field_Kind)) > 1LL)) {
						_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _154821_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_154921_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_154375_expr.get()._field_Kind.get()._field_Generic) {
						_154617_constMatched=(_154617_constMatched || _1aabec8ee_Equal(_154375_expr.get()._field_Kind, _154921_d.get()._field_Kind));
					} else {
						if ((_1aac00627_TypeEnum(_154375_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1aab51886_checkTypeCompatibility(_self_.get()._field_s, &(_154375_expr.get()._field_Kind), &(_154921_d.get()._field_Kind), &(_154821_e.get()._field_Token));
						} else {
							jule::Ptr<_1aaac6443_Trait> _156429_trt = _1aac013e7_Trait(_154375_expr.get()._field_Kind.ptr());;
							if ((_156429_trt != nullptr)) {
								_1aab51886_checkTypeCompatibility(_self_.get()._field_s, &(_154375_expr.get()._field_Kind), &(_154921_d.get()._field_Kind), &(_154821_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1a821d076;
				} else if (_154333_m.get()._field_Comptime) {
					if ((!(_1aabbc7e2_IsConst(_154921_d.ptr())))) {
						_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _154821_e.get()._field_Token, jule::Str("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_154617_constMatched=(_154617_constMatched || _1c4cbec93_ReadBool(_154921_d.get()._field_Constant.ptr()));
					};
				};
				if (_154921_d.get()._field_Decl) {
					_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _154821_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1aab48c35_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1a821d076;
				};
				{ jule::Slice<jule::Ptr<_1aabbbe1d_Data>> &__jule_push_dest = _154417_case.get()._field_Exprs; __jule_push_dest.push(_154921_d); };
				_1aaba59d9_assignTypeChecker _158721_checker = _1aaba59d9_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_154375_expr.get()._field_Kind, ._field_d=_154921_d, ._field_errorToken=_154821_e.get()._field_Token};;
				_1aaba6c4e_check(&_158721_checker);
			}
			_iter_next_1a821d076:;
			++it;
			goto _iter_begin_1a821d076;
		}
		_iter_end_1a821d076:;
	};
	if (((!(_154333_m.get()._field_Comptime)) || _154617_constMatched)) {
		_154417_case.get()._field_Scope=_1aab17ab1_checkCaseScope(_self_, &(_154417_case), &(_154356_c.get()._field_Scope));
	};
	return _154417_case;;
}



inline void _1aab18540_checkCases(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8dc24_MatchCase>* _160135_m, jule::Ptr<_1aab0792a_Match> _160154_rm, jule::Ptr<_1aabbbe1d_Data> _160170_expr) {
	_160154_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1aab08563_Case>>::alloc(0LL, (*(_160135_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_160135_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82273b0:;
		if (it != expr_end) {
			jule::I32 _160313_i = it - expr->begin();
			{
				jule::Ptr<_1aab08563_Case> _160421_case = jule::new_ptr<_1aab08563_Case>(_1aab08563_Case{._field_Owner=_160154_rm, });;
				if ((_160313_i > 0LL)) {
					_160154_rm.get()._field_Cases[(_160313_i - 1LL)].get()._field_Next=_160421_case;
				};
				{ jule::Slice<jule::Ptr<_1aab08563_Case>> &__jule_push_dest = _160154_rm.get()._field_Cases; __jule_push_dest.push(_160421_case); };
			}
			_iter_next_1a82273b0:;
			++it;
			_160313_i++;
			goto _iter_begin_1a82273b0;
		}
		_iter_end_1a82273b0:;
	};
	if (((_160154_rm.get()._field_Default != nullptr) && ((*(_160135_m)).get()._field_Cases.len() > 0LL))) {
		_160154_rm.get()._field_Cases[(_160154_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_160154_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_160135_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82279ed:;
		if (it != expr_end) {
			jule::I32 _161714_i = it - expr->begin();
			jule::Ptr<_1aaa8d4d7_Case> _161721_c = *it;
			{
				_1aab18122_checkCase(_self_, _160154_rm, _161714_i, _161721_c, _160170_expr);
			}
			_iter_next_1a82279ed:;
			++it;
			_161714_i++;
			goto _iter_begin_1a82279ed;
		}
		_iter_end_1a82279ed:;
	};
}



inline jule::Ptr<_1aab08563_Case> _1aab1893b_checkDefault(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aab0792a_Match> _162236_m, jule::Ptr<_1aaa8c33d_Else> _162251_d) {
	jule::Ptr<_1aab08563_Case> _162317_def = jule::new_ptr<_1aab08563_Case>(_1aab08563_Case{._field_Owner=_162236_m, });;
	_162317_def.get()._field_Scope=_1aab17ab1_checkCaseScope(_self_, &(_162317_def), &(_162251_d.get()._field_Scope));
	return _162317_def;;
}



inline void _1aab18c9e_checkComptimePanic(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1c3e3a5e6_Token> _163038_callToken, jule::Ptr<_1aab037e4_Scope>* _163058_s) {
	if (((*(_163058_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _163413_stmt = (*(_163058_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _163413_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a822d1da:;
			{
				jule::Ptr<_1aabbbe1d_Data> _163717_d = _163413_stmt.cast_ptr<_1aabbbe1d_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ _163717_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1a822e076:;
						{
							jule::Ptr<_1aaaa6d4c_BuiltinPanicCallExprModel> _164021_m = _163717_d.get()._field_Model.cast_ptr<_1aaaa6d4c_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ _164021_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1a822eeab:;
									{
										jule::Ptr<_1c4cbcda1_Const> _164325_c = _164021_m.get()._field_Expr.cast_ptr<_1c4cbcda1_Const>(&__jule_any_type19);;
										if (_1c4cc2625_IsStr(_164325_c.ptr())) {
											if ((_163038_callToken == nullptr)) {
												jule::Ptr<_1aab0aae8_scopeChecker> _164637_root = _1aab0de70_getHardRoot(_self_);;
												_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _164637_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1c4cc0029_ReadStr(_164325_c.ptr()), &__jule_any_type5)}));
											} else {
												_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _163038_callToken, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1c4cc0029_ReadStr(_164325_c.ptr()), &__jule_any_type5)}));
											};
											_1aab0d436_stop(_self_.ptr());
										};
									}
								}
								_match_end_1a822ee56:;
							};
						}
					}
					_match_end_1a822e021:;
				};
			}
		}
		_match_end_1a822d185:;
	};
}



inline void _1aab19112_processConstMatch(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aab0792a_Match>* _165842_tm, jule::Ptr<_1aaa8dc24_MatchCase>* _165859_m) {
	{
		auto expr = &((*(_165842_tm)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a822ec36:;
		if (it != expr_end) {
			jule::I32 _165914_i = it - expr->begin();
			jule::Ptr<_1aab08563_Case> _165921_c = *it;
			{
				if ((_165921_c.get()._field_Scope != nullptr)) {
					jule::Ptr<_1c3e3a5e6_Token> _166125_token = nullptr;;
					if (((!((*(_165842_tm)).get()._field_TypeMatch)) && (_165921_c.get()._field_Scope.get()._field_Stmts.len() > 0LL))) {
						_166125_token=(*(_165859_m)).get()._field_Cases[_165914_i].get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
					};
					_1aab18c9e_checkComptimePanic(_self_, _166125_token, &(_165921_c.get()._field_Scope));
					(*(_165842_tm)).get()._field_Default=_165921_c;
					(*(_165842_tm)).get()._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1a822ec36:;
			++it;
			_165914_i++;
			goto _iter_begin_1a822ec36;
		}
		_iter_end_1a822ec36:;
	};
	if (((*(_165859_m)).get()._field_Default != nullptr)) {
		(*(_165842_tm)).get()._field_Cases=nullptr;
		(*(_165842_tm)).get()._field_Default=_1aab1893b_checkDefault(_self_, (*(_165842_tm)), (*(_165859_m)).get()._field_Default);
		if (((*(_165842_tm)).get()._field_Default != nullptr)) {
			jule::Ptr<_1c3e3a5e6_Token> _167525_token = nullptr;;
			if ((!((*(_165842_tm)).get()._field_TypeMatch))) {
				_167525_token=(*(_165859_m)).get()._field_Default.get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
			};
			_1aab18c9e_checkComptimePanic(_self_, _167525_token, &((*(_165842_tm)).get()._field_Default.get()._field_Scope));
		};
	} else {
		(*(_165842_tm)).get()._field_Cases=nullptr;
	};
}



inline void _1aab193ba_checkTypeMatch(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8dc24_MatchCase>* _168739_m) {
	jule::Ptr<_1aabbbe1d_Data> _168817_d = _1aabdb855_eval(_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0)), (*(_168739_m)).get()._field_Expr);;
	if ((_168817_d == nullptr)) {
		return;;
	};
	if (((!(_168817_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1aabeeadd_Prim(_168817_d.get()._field_Kind.ptr()) != nullptr) && _1aac08784_IsAny(_1aabeeadd_Prim(_168817_d.get()._field_Kind.ptr()).ptr())) || (_1aac013e7_Trait(_168817_d.get()._field_Kind.ptr()) != nullptr)) || (_1aac00627_TypeEnum(_168817_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), (*(_168739_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aab0792a_Match> _169917_tm = jule::new_ptr<_1aab0792a_Match>(_1aab0792a_Match{._field_Expr=_168817_d, ._field_TypeMatch=true, });;
	_169917_tm.get()._field_Comptime=_169917_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic;
	if (((!(_169917_tm.get()._field_Comptime)) && ((*(_168739_m)).get()._field_Default != nullptr))) {
		_169917_tm.get()._field_Default=_1aab1893b_checkDefault(_self_, _169917_tm, (*(_168739_m)).get()._field_Default);
	};
	_1aab18540_checkCases(_self_, _168739_m, _169917_tm, _168817_d);
	if (_169917_tm.get()._field_Comptime) {
		_1aab19112_processConstMatch(_self_, &(_169917_tm), _168739_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_169917_tm, &__jule_any_type48)); };
}



inline void _1aab19673_checkCommonMatch(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8dc24_MatchCase>* _172041_m) {
	jule::Ptr<_1aabbbe1d_Data> _172117_d = nullptr;;
	if (((*(_172041_m)).get()._field_Expr == nullptr)) {
		_172117_d=jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Constant=static__1c4cbd874_NewBool(true)});
		_172117_d.get()._field_Model=jule::Any(_172117_d.get()._field_Constant, &__jule_any_type19);
	} else {
		_172117_d=_1aabdbed7_evalExpr(_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0)), (*(_172041_m)).get()._field_Expr);
		if ((_172117_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1aab0792a_Match> _173517_mc = jule::new_ptr<_1aab0792a_Match>(_1aab0792a_Match{._field_Expr=_172117_d, ._field_Comptime=(((((*(_172041_m)).get()._field_Expr != nullptr) && _1aabbc7e2_IsConst(_172117_d.ptr())) && _1c4cc238e_IsBool(_172117_d.get()._field_Constant.ptr())) && _1c4cbec93_ReadBool(_172117_d.get()._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_173517_mc, &__jule_any_type48)); };
	if (((!(_173517_mc.get()._field_Comptime)) && ((*(_172041_m)).get()._field_Default != nullptr))) {
		_173517_mc.get()._field_Default=_1aab1893b_checkDefault(_self_, _173517_mc, (*(_172041_m)).get()._field_Default);
	};
	_1aab18540_checkCases(_self_, _172041_m, _173517_mc, _172117_d);
	if (_173517_mc.get()._field_Comptime) {
		_1aab19112_processConstMatch(_self_, &(_173517_mc), _172041_m);
	};
}



inline void _1aab1992b_checkMatch(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8dc24_MatchCase> _175834_m) {
	if (_175834_m.get()._field_TypeMatch) {
		_1aab193ba_checkTypeMatch(_self_, &(_175834_m));
		return;;
	};
	_1aab19673_checkCommonMatch(_self_, &(_175834_m));
}



inline void _1aab19bd4_checkFall(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa84478_FallSt> _176629_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1aab0d953_isDeferred(_self_))) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _176629_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1aab08563_Case* _177417_case = ((_1aab08563_Case*)(_self_.get()._field_cse));;
	if (_177417_case->_field_Owner.get()._field_Comptime) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _176629_f.get()._field_Token, jule::Str("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if ((_177417_case->_field_Next == nullptr)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _176629_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1aab48c35_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1aab08b5c_FallSt>(_1aab08b5c_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177417_case->_field_Next))}), &__jule_any_type49)); };
}



inline jule::Ptr<_1aab05d8a_BreakSt> _1aab1a025_checkBreakWithLabel(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8b5d4_BreakSt> _178939_b) {
	jule::Ptr<_1aab05d8a_BreakSt> _179017_brk = _1aab1a366_checkPlainBreak(_self_, _178939_b);;
	if ((_179017_brk == nullptr)) {
		return nullptr;;
	};
	_179017_brk.get()._field_It=0LLU;
	_179017_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1aab09652_scopeLabel> _180017_label = _1aab00d0d_findLabelParent(&(_178939_b.get()._field_Label.get()._field_Kind), _self_.get()._field_parent);;
	if ((_180017_label == nullptr)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _178939_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_178939_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_180017_label.get()._field_used=true;
	if (((_180017_label.get()._field_pos + 1LL) >= _180017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _178939_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178939_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _181313_i = (_180017_label.get()._field_pos + 1LL);;
	if ((_181313_i >= _180017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _178939_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178939_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _181721_st = _180017_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_181313_i];;
		{
			auto &_match_expr{ _181721_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1a824e140:;
				{
					_179017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181721_st.cast_ptr<_1aab04729_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1a824dd43:;
				{
					_179017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181721_st.cast_ptr<_1aab0562b_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1a824dda9:;
				{
					_179017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181721_st.cast_ptr<_1aab04bd0_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1a824de20:;
				{
					_179017_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181721_st.cast_ptr<_1aab0792a_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1a824dccc:;
				{
					_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _178939_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178939_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1a824dc77:;
		};
	};
	if ((_179017_brk.get()._field_It != 0LLU)) {
		if ((!(_1aab14a9c_checkValidBreakLabel(_self_, _179017_brk.get()._field_It)))) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _178939_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178939_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_179017_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1aab14a9c_checkValidBreakLabel(_self_, _179017_brk.get()._field_Mtch)))) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _178939_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178939_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _179017_brk;;
}



inline jule::Ptr<_1aab05d8a_BreakSt> _1aab1a366_checkPlainBreak(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8b5d4_BreakSt> _184735_b) {
	if (_1aab0d953_isDeferred(_self_)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _184735_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aab0aae8_scopeChecker> _185317_scope = _self_;;
	_julec_label_1a8253dae:;
	{
		
		if (((((_185317_scope.get()._field_it == 0LLU) && (_185317_scope.get()._field_cse == 0LLU)) && (_185317_scope.get()._field_parent != nullptr)) && (_185317_scope.get()._field_owner == nullptr))) {
			_case_begin_1a8254b6d:;
			{
				_185317_scope=_185317_scope.get()._field_parent;
				goto _julec_label_1a8253dae;
			}
		}
		else if ((_185317_scope.get()._field_it != 0LLU)) {
			_case_begin_1a8254be5:;
			{
				return jule::new_ptr<_1aab05d8a_BreakSt>(_1aab05d8a_BreakSt{._field_It=_185317_scope.get()._field_it, });;
			}
		}
		else if ((_185317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1a8254c6c:;
			{
				return jule::new_ptr<_1aab05d8a_BreakSt>(_1aab05d8a_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1aab08563_Case*)(_185317_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1a8254aa2:;
	};
	_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _184735_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1aab1a61e_checkBreak(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa8b5d4_BreakSt> _186930_b) {
	if ((_186930_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1aab05d8a_BreakSt> _187121_brk = _1aab1a025_checkBreakWithLabel(_self_, _186930_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_187121_brk, &__jule_any_type50)); };
		return;;
	};
	jule::Ptr<_1aab05d8a_BreakSt> _187617_brk = _1aab1a366_checkPlainBreak(_self_, _186930_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_187617_brk, &__jule_any_type50)); };
}



inline void _1aab1a8c7_checkRet(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa89835_RetSt> _188032_r) {
	if (_1aab0d953_isDeferred(_self_)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _188032_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aab08ee2_RetSt> _188517_rt = jule::new_ptr<_1aab08ee2_RetSt>(_1aab08ee2_RetSt{._field_Func=_1aab0dbd9_getRoot(_self_).get()._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_188517_rt, &__jule_any_type51)); };
	jule::Ptr<_1aabb493d_retTypeChecker> _189017_rtc = jule::new_ptr<_1aabb493d_retTypeChecker>(_1aabb493d_retTypeChecker{._field_sc=_self_, ._field_f=_188517_rt.get()._field_Func, ._field_errorToken=_188032_r.get()._field_Token, });;
	jule::Bool _189513_ok = _1aabb5653_check(_189017_rtc.ptr(), &(_188032_r.get()._field_Expr));;
	if ((!(_189513_ok))) {
		return;;
	};
	if ((_188032_r.get()._field_Expr != nullptr)) {
		_188517_rt.get()._field_Expr=_189017_rtc.get()._field_model;
	};
}



inline void _1aab1ab80_checkUseExpr(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa7b2e9_UseExpr> _190532_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _190532_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1aab0d953_isDeferred(_self_)) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _190532_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _190532_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1aab1ae38_checkNode(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Any* _192134_node) {
	{
		auto &_match_expr{ (*(_192134_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1a82612b7:;
			{
				_1aab11549_checkAnonScope(_self_, (*(_192134_node)).cast_ptr<_1aaa866de_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a8261828:;
			{
				_1aab100e7_checkVarDecl(_self_, (*(_192134_node)).cast_ptr<_1aaa8945b_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1a82615e7:;
			{
				_1aab103a0_checkTypeAliasDecl(_self_, (*(_192134_node)).cast_ptr<_1aaa8d031_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a8261a9d:;
			{
				_1aab11b65_checkExpr(_self_, (*(_192134_node)).cast_ptr<_1aaa7a925_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1a8261b14:;
			{
				_1aab125a0_checkConditional(_self_, (*(_192134_node)).cast_ptr<_1aaa8c7e4_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1a8261b7a:;
			{
				_1aab1441a_checkIter(_self_, (*(_192134_node)).cast_ptr<_1aaa89ec8_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1a8261be1:;
			{
				_1aab15196_checkCont(_self_, (*(_192134_node)).cast_ptr<_1aaa8b9ad_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1a8261c57:;
			{
				_1aab1544e_checkLabel(_self_, (*(_192134_node)).cast_ptr<_1aaa83ca2_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1a8261cbd:;
			{
				_1aab15707_pushGoto(_self_, (*(_192134_node)).cast_ptr<_1aaa8417b_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1a8261d34:;
			{
				_1aab176b5_checkAssignSt(_self_, (*(_192134_node)).cast_ptr<_1aaa8516b_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1a8261d9a:;
			{
				_1aab1992b_checkMatch(_self_, (*(_192134_node)).cast_ptr<_1aaa8dc24_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1a8261e11:;
			{
				_1aab19bd4_checkFall(_self_, (*(_192134_node)).cast_ptr<_1aaa84478_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1a8261e77:;
			{
				_1aab1a61e_checkBreak(_self_, (*(_192134_node)).cast_ptr<_1aaa8b5d4_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1a8261edd:;
			{
				_1aab1a8c7_checkRet(_self_, (*(_192134_node)).cast_ptr<_1aaa89835_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a8262054:;
			{
				_1aab1ab80_checkUseExpr(_self_, (*(_192134_node)).cast_ptr<_1aaa7b2e9_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1a8261460:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1a826140a:;
	};
}



inline void _1aab1b136_checkResult(jule::Ptr<_1aab0aae8_scopeChecker> _self_) {
	_1aaa8607e_Stmt _195917_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _195917_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1a8269875:;
			{
				jule::Ptr<_1aaa7b2e9_UseExpr> _196221_ue = _195917_stmt._field_Data.cast_ptr<_1aaa7b2e9_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_1aabbbe1d_Data> _196321_d = _1aabdbed7_evalExpr(_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0)), _196221_ue.get()._field_Expr);;
				if ((_196321_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_196321_d, &__jule_any_type24)); };
				jule::Ptr<_1aabb493d_retTypeChecker> _196821_rtc = jule::new_ptr<_1aabb493d_retTypeChecker>(_1aabb493d_retTypeChecker{._field_sc=_self_, ._field_types=_1aaab729c_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_196221_ue.get()._field_Expr.get()._field_Token, });;
				_1aabb5653_check(_196821_rtc.ptr(), &(_196221_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a8269138:;
			{
				jule::Ptr<_1aaa7a925_Expr> _197521_expr = _195917_stmt._field_Data.cast_ptr<_1aaa7a925_Expr>(&__jule_any_type53);;
				jule::Ptr<_1aabbbe1d_Data> _197621_d = _1aabdbed7_evalExpr(_1aab50d6e_eval(_self_.get()._field_s, jule::Trait<_1aac21d30_Lookup>(_self_, 0)), _197521_expr);;
				if ((_197621_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _197621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1a826dd1e:;
						{
							jule::Ptr<_1aaaa903b_BuiltinErrorCallExprModel> _198225_m = _197621_d.get()._field_Model.cast_ptr<_1aaaa903b_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1aab118ac_processErrorCall(_self_, &(_198225_m), _197521_expr.get()._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_197621_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1a826de0c:;
						{
							return;;
						}
					}
					_match_end_1a826dda7:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1a826919e:;
			{
				_1aab1ae38_checkNode(_self_, &(_195917_stmt._field_Data));
			}
		}
		else {
			_case_begin_1a82690c2:;
			{
				_1aab1ae38_checkNode(_self_, &(_195917_stmt._field_Data));
				return;;
			}
		}
		_match_end_1a8268588:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1aab1b334_checkTree(jule::Ptr<_1aab0aae8_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I32 _200417_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_200417_n)--;
	};
	for (; (_self_.get()._field_i < _200417_n); (_self_.get()._field_i)++) {
		{
			_1aaa8607e_Stmt _201221_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1aab1ae38_checkNode(_self_, &(_201221_stmt._field_Data));
			if (_1aab0d6bc_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1a8271c23:;
	}
	_iter_end_1a8271c23:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1aab1b136_checkResult(_self_);
	};
}



inline void _1aab1b697_checkGoto(_1aab0aae8_scopeChecker* _self_, jule::Ptr<_1aab09bd5_scopeGoto>* _202333_gt, jule::Ptr<_1aab09652_scopeLabel>* _202354_label) {
	jule::Ptr<_1aab0aae8_scopeChecker> _202417_gtsc = (*(_202333_gt)).get()._field_scope;;
	while (((_202417_gtsc.get()._field_childIndex - 1LL) > (*(_202354_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_202417_gtsc=_202417_gtsc.get()._field_parent;
		}
	_iter_next_1a8274660:;
	}
	_iter_end_1a8274660:;;
	jule::I32 _202917_n = 0LL;;
	if ((_202417_gtsc.get()._field_scope == (*(_202354_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_202333_gt)).get()._field_pos > (*(_202354_label)).get()._field_pos)) {
			return;;
		};
		_202917_n=(*(_202333_gt)).get()._field_pos;
	};
	jule::I32 _204217_i = ((*(_202354_label)).get()._field_pos - 1LL);;
	if ((_202917_n == 0LL)) {
		{
			auto expr = &((*(_202354_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8276c06:;
			if (it != expr_end) {
				jule::I32 _204517_j = it - expr->begin();
				jule::Any _204520_stmt = *it;
				{
					if (_1aab0154a_stmtIsGotoScope(&(_204520_stmt), &(_202417_gtsc.get()._field_scope))) {
						_202917_n=_204517_j;
						goto _iter_end_1a8276c06;
					};
				}
				_iter_next_1a8276c06:;
				++it;
				_204517_j++;
				goto _iter_begin_1a8276c06;
			}
			_iter_end_1a8276c06:;
		};
	};
	for (; (_204217_i >= _202917_n); (_204217_i)--) {
		{
			jule::Any _205521_stmt = (*(_202354_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_204217_i];;
			if (_1aab03382_stmtIsDef(&(_205521_stmt))) {
				_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_202333_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_202333_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1a82779c6:;
	}
	_iter_end_1a82779c6:;;
}



inline void _1aab1b895_checkGotos(_1aab0aae8_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8277784:;
		if (it != expr_end) {
			jule::Ptr<_1aab09bd5_scopeGoto> _206421_gt = *it;
			{
				jule::Ptr<_1aab09652_scopeLabel> _206521_label = _1aab0e943_findLabelAll(_self_, &(_206421_gt.get()._field_gt.get()._field_Label.get()._field_Kind));;
				if ((_206521_label == nullptr)) {
					_1aab488c2_pushErr((*(_self_))._field_s.ptr(), _206421_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_206421_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1a8277784;
				};
				_206421_gt.get()._field_st.get()._field_Label=_206521_label.get()._field_label;
				_206521_label.get()._field_used=true;
				_1aab1b697_checkGoto(_self_, &(_206421_gt), &(_206521_label));
			}
			_iter_next_1a8277784:;
			++it;
			goto _iter_begin_1a8277784;
		}
		_iter_end_1a8277784:;
	};
}



inline void _1aab1ba93_checkLabels(_1aab0aae8_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a827aa2e:;
		if (it != expr_end) {
			jule::Ptr<_1aab09652_scopeLabel> _207716_l = *it;
			{
				if ((!(_207716_l.get()._field_used))) {
					_1aab488c2_pushErr((*(_self_))._field_s.ptr(), _207716_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_207716_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1a827aa2e:;
			++it;
			goto _iter_begin_1a827aa2e;
		}
		_iter_end_1a827aa2e:;
	};
}



inline void _1aab1bc91_checkVars(_1aab0aae8_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a827c921:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> _208516_v = *it;
			{
				if (((((!(_208516_v.get()._field_Used)) && (!(_208516_v.get()._field_Constant))) && (!(_1c3e3d055_IsIgnoreIdent(_208516_v.get()._field_Ident)))) && (!(_1c3e3d31e_IsAnonIdent(_208516_v.get()._field_Ident))))) {
					_1aab488c2_pushErr((*(_self_))._field_s.ptr(), _208516_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_208516_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1a827c921:;
			++it;
			goto _iter_begin_1a827c921;
		}
		_iter_end_1a827c921:;
	};
}



inline void _1aab1be8e_checkAliases(_1aab0aae8_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a827d7bd:;
		if (it != expr_end) {
			jule::Ptr<_1aabeb403_TypeAlias> _209316_a = *it;
			{
				if ((((!(_209316_a.get()._field_Used)) && (!(_1c3e3d055_IsIgnoreIdent(_209316_a.get()._field_Ident)))) && (!(_1c3e3d31e_IsAnonIdent(_209316_a.get()._field_Ident))))) {
					_1aab488c2_pushErr((*(_self_))._field_s.ptr(), _209316_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_209316_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1a827d7bd:;
			++it;
			goto _iter_begin_1a827d7bd;
		}
		_iter_end_1a827d7bd:;
	};
}



inline void _1aab1c302_check(jule::Ptr<_1aab0aae8_scopeChecker> _self_, jule::Ptr<_1aaa866de_ScopeTree>* _210130_tree, jule::Ptr<_1aab037e4_Scope>* _210153_s) {
	(*(_210153_s)).get()._field_Deferred=(*(_210130_tree)).get()._field_Deferred;
	(*(_210153_s)).get()._field_Unsafety=(*(_210130_tree)).get()._field_Unsafety;
	jule::I32 _210513_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_210130_tree));
	_self_.get()._field_scope=(*(_210153_s));
	_1aab1b334_checkTree(_self_);
	if ((_210513_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1aab1bc91_checkVars(_self_.ptr());
		_1aab1be8e_checkAliases(_self_.ptr());
		if (_1aab0d238_isRoot(_self_.ptr())) {
			_1aab1b895_checkGotos(_self_.ptr());
			_1aab1ba93_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1aab0aae8_scopeChecker> _1aab1c588_newChildChecker(jule::Ptr<_1aab0aae8_scopeChecker> _self_) {
	jule::Ptr<_1aab0aae8_scopeChecker> _212517_base = _1aab005c1_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_212517_base.get()._field_parent=_self_;
	_212517_base.get()._field_labels=_self_.get()._field_labels;
	_212517_base.get()._field_gotos=_self_.get()._field_gotos;
	_212517_base.get()._field_childIndex=static_cast<jule::I32>((_self_.get()._field_childIndex + 1LL));
	return _212517_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab0aae8_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1aab1d90d_checkCdef(_1aab1d4e0_directiveChecker* _self_, jule::Ptr<_1aaa42c61_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a8285b6b:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1aaab3199_Fn>(&__jule_any_type65).get()._field_Binded) {
					goto _match_end_1a8285dad;
				};
				goto _case_begin_1a8285e13;
			}
		}
		else {
			_case_begin_1a8285e13:;
			{
				_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a8285dad:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1aab1dbb6_checkTypedef(_1aab1d4e0_directiveChecker* _self_, jule::Ptr<_1aaa42c61_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a8288124:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1aaa972b0_Struct>(&__jule_any_type66).get()._field_Binded) {
					goto _match_end_1a8288366;
				};
				goto _case_begin_1a82883bb;
			}
		}
		else {
			_case_begin_1a82883bb:;
			{
				_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a8288366:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1aab1de6e_checkDerive(_1aab1d4e0_directiveChecker* _self_, jule::Ptr<_1aaa42c61_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a828a5aa:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1aaa972b0_Struct>(&__jule_any_type66).get()._field_Binded))) {
					goto _match_end_1a828a81e;
				};
				goto _case_begin_1a828a874;
			}
		}
		else {
			_case_begin_1a828a874:;
			{
				_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a828a81e:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1aab48c35_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1a828dcea:;
		}
		else {
			_case_begin_1a828aba4:;
			{
				_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a828d910:;
	};
}



inline void _1aab1e227_checkNamespace(_1aab1d4e0_directiveChecker* _self_, jule::Ptr<_1aaa42c61_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a8290417:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1aaa972b0_Struct>(&__jule_any_type66).get()._field_Binded))) {
					_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a82900d7:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1aaab3199_Fn>(&__jule_any_type65).get()._field_Binded))) {
					_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a829014d:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1aab68969_Var>(&__jule_any_type8).get()._field_Binded))) {
					_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1a8290071:;
			{
				_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a828da86:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1c3e3a5e6_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U32>(4LLU))) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a8297cb0:;
			{
				if ((_1aabe58e7_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1aaa42c61_Directive> _11625_typedef = jule::new_ptr<_1aaa42c61_Directive>(_1aaa42c61_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					{ jule::Slice<jule::Ptr<_1aaa42c61_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_11625_typedef); };
				};
			}
		}
		_match_end_1a8297c5a:;
	};
}



inline void _1aab1e4d0_checkDeprecated(_1aab1d4e0_directiveChecker* _self_, jule::Ptr<_1aaa42c61_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a8299e9e:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1aaa972b0_Struct>(&__jule_any_type66).get()._field_Binded) {
					_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a829a015:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1aaab3199_Fn>(&__jule_any_type65).get()._field_Binded) {
					_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a829a07b:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1aab68969_Var>(&__jule_any_type8).get()._field_Binded) {
					_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1a82999e8:;
			{
				_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a8299993:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1c3e3a5e6_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U32>(4LLU))) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1aab1e788_checkTest(_1aab1d4e0_directiveChecker* _self_, jule::Ptr<_1aaa42c61_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1a829de1a:;
			{
				jule::Ptr<_1aaab3199_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_1aaab3199_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_Binded)) && (!(_1aaab3dc0_IsInit(_16717_f.ptr())))) && (!(_1aaab3b39_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1a82a2803;
				};
				if (_1aaab38a3_IsMethod(_16717_f.ptr())) {
					_1aab488c2_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1a82a2803;
				};
				goto _case_begin_1a82a2858;
			}
		}
		else {
			_case_begin_1a82a2858:;
			{
				_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a82a2803:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1aab1ea41_checkDirective(_1aab1d4e0_directiveChecker* _self_, jule::Ptr<_1aaa42c61_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1a82a664d:;
			{
				_1aab1d90d_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1a82a62eb:;
			{
				_1aab1dbb6_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1a82a6362:;
			{
				_1aab1de6e_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1a82a63c8:;
			{
				_1aab1e227_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1a82a6450:;
			{
				_1aab1e4d0_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1a82a6ede:;
			{
				_1aab1e788_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1a82a7055:;
			{
				_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1a82a6285:;
			{
				_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1a82a621e:;
	};
}



inline void _1aab1ec3e_check(_1aab1d4e0_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82a9222:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42c61_Directive> _20821_d = *it;
			{
				_1aab1ea41_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1a82a9222:;
			++it;
			goto _iter_begin_1a82a9222;
		}
		_iter_end_1a82a9222:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aab1d4e0_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1aab2521c_SelectPackage(_1aab24c33_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1aab68969_Var> _1aab25618_FindVar(_1aab24c33_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1aab27274_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1aab22219_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1aabeb403_TypeAlias> _1aab25a14_FindTypeAlias(_1aab24c33_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1aab27274_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1aab2268c_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1aaa972b0_Struct> _1aab25e10_FindStruct(_1aab24c33_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1aab27274_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1aab22abb_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1aaab3199_Fn> _1aab2630b_FindFn(_1aab24c33_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1aab27274_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1aab23072_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1aaac6443_Trait> _1aab2664c_FindTrait(_1aab24c33_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1aab27274_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1aab233b3_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1aaac8b3d_Enum> _1aab2698d_FindEnum(_1aab24c33_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1aab27274_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1aab23737_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1aaaca348_TypeEnum> _1aab26cce_FindTypeEnum(_1aab24c33_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1aab27274_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1aab23aab_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_25831_ident));;
}



inline jule::Bool _1aab27274_isLookupable(_1aab24c33_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1aab275b5_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1aab275b5_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1aab275b5_existIdent(_1aab24c33_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82bde18:;
		if (it != expr_end) {
			jule::Ptr<_1c3e3a5e6_Token> *_28816_sident = it;
			{
				if (((*(_28816_sident)).get()._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1a82bde18:;
			++it;
			goto _iter_begin_1a82bde18;
		}
		_iter_end_1a82bde18:;
	};
	return false;;
}



inline jule::Bool _1aab2784b_isAccessibleViaSelection(_1aab24c33_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1aab275b5_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab24c33_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1aab280ee_SelectPackage(_1aab27b59_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1aab68969_Var> _1aab284ea_FindVar(_1aab27b59_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1aab22219_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1aabeb403_TypeAlias> _1aab288e6_FindTypeAlias(_1aab27b59_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1aab2268c_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1aaa972b0_Struct> _1aab28ce2_FindStruct(_1aab27b59_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1aab22abb_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1aaab3199_Fn> _1aab291dd_FindFn(_1aab27b59_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1aab23072_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1aaac6443_Trait> _1aab2952e_FindTrait(_1aab27b59_Package* _self_, jule::Str _33828_ident) {
	return _1aab233b3_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1aaac8b3d_Enum> _1aab29870_FindEnum(_1aab27b59_Package* _self_, jule::Str _34427_ident) {
	return _1aab23737_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1aaaca348_TypeEnum> _1aab29bb1_FindTypeEnum(_1aab27b59_Package* _self_, jule::Str _35031_ident) {
	return _1aab23aab_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab27b59_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _1aab455c2_pushComptimeTypeInfo(_1aab45160_commonSemaMeta* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _21444_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82e612c:;
		if (it != expr_end) {
			jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _21521_t2 = *it;
			{
				if (((_21521_t2.get()._field_base.get()._field_BindIdent == (*(_21444_t)).get()._field_BindIdent) && _1aabec8ee_Equal(_21521_t2.get()._field_base, (*(_21444_t))))) {
					return _21521_t2;;
				};
			}
			_iter_next_1a82e612c:;
			++it;
			goto _iter_begin_1a82e612c;
		}
		_iter_end_1a82e612c:;
	};
	jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _22017_t1 = jule::new_ptr<_1aaadc1b2_comptimeTypeInfo>(_1aaadc1b2_comptimeTypeInfo{._field_base=(*(_21444_t))});;
	{ jule::Slice<jule::Ptr<_1aaadc1b2_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22017_t1); };
	return _22017_t1;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab45160_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1aab4622c_SelectPackage(_1aab45c87_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)> _24332_selector) {
	return _1aabb71d2_SelectPackage((*(_self_))._field_file.ptr(), _24332_selector);;
}



inline jule::Ptr<_1aab68969_Var> _1aab46628_FindVar(_1aab45c87_Sema* _self_, jule::Str _25326_ident, jule::Bool _25338_binded) {
	jule::Ptr<_1aab68969_Var> _25517_v = _1aab22219_findVarInPackage(&((*(_self_))._field_files), &(_25326_ident), _25338_binded);;
	if ((_25517_v != nullptr)) {
		return _25517_v;;
	};
	if ((!(_1aab42d83_IsPub(&(_25326_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82e9817:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _26621_imp = *it;
			{
				if ((!(_1aab43cc9_impIsLookupable(&(_26621_imp), &(_25326_ident))))) {
					goto _iter_next_1a82e9817;
				};
				_25517_v=_1aab25618_FindVar(_26621_imp.ptr(), _25326_ident, _25338_binded);
				if (((_25517_v != nullptr) && _1aab49131_isAccessibleDefine(_self_, _25517_v.get()._field_Public, _25517_v.get()._field_Token))) {
					return _25517_v;;
				};
			}
			_iter_next_1a82e9817:;
			++it;
			goto _iter_begin_1a82e9817;
		}
		_iter_end_1a82e9817:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aabeb403_TypeAlias> _1aab46a24_FindTypeAlias(_1aab45c87_Sema* _self_, jule::Str _28532_ident, jule::Bool _28544_binded) {
	jule::Ptr<_1aabeb403_TypeAlias> _28717_ta = _1aab2268c_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28532_ident), _28544_binded);;
	if ((_28717_ta != nullptr)) {
		return _28717_ta;;
	};
	if ((!(_1aab42d83_IsPub(&(_28532_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82ec331:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _29821_imp = *it;
			{
				if ((!(_1aab43cc9_impIsLookupable(&(_29821_imp), &(_28532_ident))))) {
					goto _iter_next_1a82ec331;
				};
				_28717_ta=_1aab25a14_FindTypeAlias(_29821_imp.ptr(), _28532_ident, _28544_binded);
				if (((_28717_ta != nullptr) && _1aab49131_isAccessibleDefine(_self_, _28717_ta.get()._field_Public, _28717_ta.get()._field_Token))) {
					return _28717_ta;;
				};
			}
			_iter_next_1a82ec331:;
			++it;
			goto _iter_begin_1a82ec331;
		}
		_iter_end_1a82ec331:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa972b0_Struct> _1aab46e20_FindStruct(_1aab45c87_Sema* _self_, jule::Str _31729_ident, jule::Bool _31741_binded) {
	jule::Ptr<_1aaa972b0_Struct> _31917_s = _1aab22abb_findStructInPackage(&((*(_self_))._field_files), &(_31729_ident), _31741_binded);;
	if ((_31917_s != nullptr)) {
		return _31917_s;;
	};
	if ((!(_1aab42d83_IsPub(&(_31729_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82eed4a:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1aab43cc9_impIsLookupable(&(_33021_imp), &(_31729_ident))))) {
					goto _iter_next_1a82eed4a;
				};
				_31917_s=_1aab25e10_FindStruct(_33021_imp.ptr(), _31729_ident, _31741_binded);
				if (((_31917_s != nullptr) && _1aab49131_isAccessibleDefine(_self_, _31917_s.get()._field_Public, _31917_s.get()._field_Token))) {
					return _31917_s;;
				};
			}
			_iter_next_1a82eed4a:;
			++it;
			goto _iter_begin_1a82eed4a;
		}
		_iter_end_1a82eed4a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaab3199_Fn> _1aab4731b_FindFn(_1aab45c87_Sema* _self_, jule::Str _34825_ident, jule::Bool _34837_binded) {
	jule::Ptr<_1aaab3199_Fn> _35017_f = _1aab23072_findFnInPackage(&((*(_self_))._field_files), &(_34825_ident), _34837_binded);;
	if ((_35017_f != nullptr)) {
		return _35017_f;;
	};
	if ((!(_1aab42d83_IsPub(&(_34825_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8302864:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _36121_imp = *it;
			{
				if ((!(_1aab43cc9_impIsLookupable(&(_36121_imp), &(_34825_ident))))) {
					goto _iter_next_1a8302864;
				};
				_35017_f=_1aab2630b_FindFn(_36121_imp.ptr(), _34825_ident, _34837_binded);
				if (((_35017_f != nullptr) && _1aab49131_isAccessibleDefine(_self_, _35017_f.get()._field_Public, _35017_f.get()._field_Token))) {
					return _35017_f;;
				};
			}
			_iter_next_1a8302864:;
			++it;
			goto _iter_begin_1a8302864;
		}
		_iter_end_1a8302864:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaac6443_Trait> _1aab4765c_FindTrait(_1aab45c87_Sema* _self_, jule::Str _38028_ident) {
	jule::Ptr<_1aaac6443_Trait> _38217_t = _1aab233b3_findTraitInPackage(&((*(_self_))._field_files), &(_38028_ident));;
	if ((_38217_t != nullptr)) {
		return _38217_t;;
	};
	if ((!(_1aab42d83_IsPub(&(_38028_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a830512a:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1aab43cc9_impIsLookupable(&(_39321_imp), &(_38028_ident))))) {
					goto _iter_next_1a830512a;
				};
				_38217_t=_1aab2664c_FindTrait(_39321_imp.ptr(), _38028_ident);
				if (((_38217_t != nullptr) && _1aab49131_isAccessibleDefine(_self_, _38217_t.get()._field_Public, _38217_t.get()._field_Token))) {
					return _38217_t;;
				};
			}
			_iter_next_1a830512a:;
			++it;
			goto _iter_begin_1a830512a;
		}
		_iter_end_1a830512a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaac8b3d_Enum> _1aab4799d_FindEnum(_1aab45c87_Sema* _self_, jule::Str _41227_ident) {
	jule::Ptr<_1aaac8b3d_Enum> _41417_e = _1aab23737_findEnumInPackage(&((*(_self_))._field_files), &(_41227_ident));;
	if ((_41417_e != nullptr)) {
		return _41417_e;;
	};
	if ((!(_1aab42d83_IsPub(&(_41227_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83078e1:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _42521_imp = *it;
			{
				if ((!(_1aab43cc9_impIsLookupable(&(_42521_imp), &(_41227_ident))))) {
					goto _iter_next_1a83078e1;
				};
				_41417_e=_1aab2698d_FindEnum(_42521_imp.ptr(), _41227_ident);
				if (((_41417_e != nullptr) && _1aab49131_isAccessibleDefine(_self_, _41417_e.get()._field_Public, _41417_e.get()._field_Token))) {
					return _41417_e;;
				};
			}
			_iter_next_1a83078e1:;
			++it;
			goto _iter_begin_1a83078e1;
		}
		_iter_end_1a83078e1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaaca348_TypeEnum> _1aab47cde_FindTypeEnum(_1aab45c87_Sema* _self_, jule::Str _44431_ident) {
	jule::Ptr<_1aaaca348_TypeEnum> _44617_e = _1aab23aab_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44431_ident));;
	if ((_44617_e != nullptr)) {
		return _44617_e;;
	};
	if ((!(_1aab42d83_IsPub(&(_44431_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a830a1a7:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _45721_imp = *it;
			{
				if ((!(_1aab43cc9_impIsLookupable(&(_45721_imp), &(_44431_ident))))) {
					goto _iter_next_1a830a1a7;
				};
				_44617_e=_1aab26cce_FindTypeEnum(_45721_imp.ptr(), _44431_ident);
				if (((_44617_e != nullptr) && _1aab49131_isAccessibleDefine(_self_, _44617_e.get()._field_Public, _44617_e.get()._field_Token))) {
					return _44617_e;;
				};
			}
			_iter_next_1a830a1a7:;
			++it;
			goto _iter_begin_1a830a1a7;
		}
		_iter_end_1a830a1a7:;
	};
	return nullptr;;
}



inline jule::Bool _1aab481eb_isFlag(_1aab45c87_Sema* _self_, jule::I32 _47321_flags) {
	return (((*(_self_))._field_flags & _47321_flags) == _47321_flags);;
}



inline void _1aab484a4_setCurrentFile(_1aab45c87_Sema* _self_, jule::Ptr<_1aabb6be8_SymbolTable> _47537_f) {
	(*(_self_))._field_file=_47537_f;
}



inline void _1aab488c2_pushErr(_1aab45c87_Sema* _self_, jule::Ptr<_1c3e3a5e6_Token> _47726_token, jule::Str _47741_fmt, jule::Slice<jule::Any> _47754_args) {
	{ jule::Slice<_1c3983b45_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1aab43955_compilerErr(&(_47726_token), true, _47741_fmt, _47754_args)); };
}



inline void _1aab48c35_pushSuggestion(_1aab45c87_Sema* _self_, jule::Str _48233_fmt, jule::Slice<jule::Any> _48246_args) {
	{
		_1aab44e84_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48233_fmt, _48246_args);
	};
}



inline jule::Bool _1aab49131_isAccessibleDefine(_1aab45c87_Sema* _self_, jule::Bool _48733_public, jule::Ptr<_1c3e3a5e6_Token> _48747_token) {
	return ((_48733_public || (_48747_token.get()._field_File == nullptr)) || (_1c3e41531_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _1c3e41531_Dir(_48747_token.get()._field_File.ptr())));;
}



inline jule::Bool _1aab495d7_isDuplicatedIdent(_1aab45c87_Sema* _self_, jule::Uintptr _49432_itself, jule::Str* _49450_ident, jule::Bool _49462_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a831129b:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> *_49516_f = it;
			{
				if (_1aabba218_isDuplicatedIdent((*(_49516_f)).ptr(), _49432_itself, _49450_ident, _49462_binded)) {
					return true;;
				};
				{
					auto expr = &((*(_49516_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8311d3a:;
					if (it != expr_end) {
						jule::Ptr<_1aab24c33_ImportInfo> *_50020_imp = it;
						{
							{
								auto expr = &((*(_50020_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a8312874:;
								if (it != expr_end) {
									jule::Ptr<_1c3e3a5e6_Token> *_50124_selected = it;
									{
										if (((*(_50124_selected)).get()._field_Kind == (*(_49450_ident)))) {
											return true;;
										};
									}
									_iter_next_1a8312874:;
									++it;
									goto _iter_begin_1a8312874;
								}
								_iter_end_1a8312874:;
							};
						}
						_iter_next_1a8311d3a:;
						++it;
						goto _iter_begin_1a8311d3a;
					}
					_iter_end_1a8311d3a:;
				};
			}
			_iter_next_1a831129b:;
			++it;
			goto _iter_begin_1a831129b;
		}
		_iter_end_1a831129b:;
	};
	return false;;
}



inline void _1aab4994a_checkDirectives(jule::Ptr<_1aab45c87_Sema> _self_, jule::Slice<jule::Ptr<_1aaa42c61_Directive>>* _51140_d, jule::Any _51166_o) {
	_1aab1d4e0_directiveChecker _51217_dc = _1aab1d4e0_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1aaa42c61_Directive>>>)((&((*(_51140_d)))))), ._field_o=_51166_o};;
	_1aab1ec3e_check(&_51217_dc);
}



inline jule::Bool _1aab49e01_checkGenericQuantity(_1aab45c87_Sema* _self_, jule::I32 _52039_required, jule::I32 _52054_given, jule::Ptr<_1c3e3a5e6_Token> _52066_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52039_required == 0LL) && (_52054_given > 0LL))) {
			_case_begin_1a8314e4d:;
			{
				_1aab488c2_pushErr(_self_, _52066_token, jule::Str("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52039_required > 0LL) && (_52054_given == 0LL))) {
			_case_begin_1a8314ec5:;
			{
				_1aab488c2_pushErr(_self_, _52066_token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required < _52054_given)) {
			_case_begin_1a831504c:;
			{
				_1aab488c2_pushErr(_self_, _52066_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required > _52054_given)) {
			_case_begin_1a831526c:;
			{
				_1aab488c2_pushErr(_self_, _52066_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a8314d60:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a8314c94:;
	};
}



inline jule::Bool _1aab4a2ec_isDuplicatedImportSelection(_1aab45c87_Sema* _self_, jule::Uintptr _53942_itself, jule::Str* _53960_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83174e4:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> *_54016_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54016_imp))) == _53942_itself)) {
					goto _iter_end_1a83174e4;
				};
				if (_1aab275b5_existIdent((*(_54016_imp)).ptr(), (*(_53960_ident)))) {
					return true;;
				};
			}
			_iter_next_1a83174e4:;
			++it;
			goto _iter_begin_1a83174e4;
		}
		_iter_end_1a83174e4:;
	};
	return false;;
}



inline jule::Any _1aab4a6e8_getImportDef(_1aab45c87_Sema* _self_, jule::Str* _55228_ident, jule::Ptr<_1aab24c33_ImportInfo>* _55245_imp) {
	if ((_1aacdcbcb_findPackageBuiltinDef(&((*(_55245_imp)).get()._field_LinkPath), _55228_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_55245_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8319183:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _55621_f = *it;
			{
				;
				jule::Any _55921_def = _1aabb9c62_defByIdent(_55621_f.ptr(), _55228_ident, false);;
				if ((_55921_def != nullptr)) {
					return _55921_def;;
				};
			}
			_iter_next_1a8319183:;
			++it;
			goto _iter_begin_1a8319183;
		}
		_iter_end_1a8319183:;
	};
	return nullptr;;
}



inline jule::Bool _1a8320541_checkImportSelection(_1aab45c87_Sema* _self_, jule::Ptr<_1c3e3a5e6_Token>* _56743_ident, jule::Ptr<_1aab68969_Var>* _56759_s) {
	if ((!(_1aab49131_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aab240ea_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a8324138_checkImportSelection(_1aab45c87_Sema* _self_, jule::Ptr<_1c3e3a5e6_Token>* _56743_ident, jule::Ptr<_1aabeb403_TypeAlias>* _56759_s) {
	if ((!(_1aab49131_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aab240ea_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a8327bdb_checkImportSelection(_1aab45c87_Sema* _self_, jule::Ptr<_1c3e3a5e6_Token>* _56743_ident, jule::Ptr<_1aaa972b0_Struct>* _56759_s) {
	if ((!(_1aab49131_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aab240ea_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a832b926_checkImportSelection(_1aab45c87_Sema* _self_, jule::Ptr<_1c3e3a5e6_Token>* _56743_ident, jule::Ptr<_1aaac6443_Trait>* _56759_s) {
	if ((!(_1aab49131_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aab240ea_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a83304c9_checkImportSelection(_1aab45c87_Sema* _self_, jule::Ptr<_1c3e3a5e6_Token>* _56743_ident, jule::Ptr<_1aaac8b3d_Enum>* _56759_s) {
	if ((!(_1aab49131_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aab240ea_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a833407c_checkImportSelection(_1aab45c87_Sema* _self_, jule::Ptr<_1c3e3a5e6_Token>* _56743_ident, jule::Ptr<_1aaaca348_TypeEnum>* _56759_s) {
	if ((!(_1aab49131_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aab240ea_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1a8337b30_checkImportSelection(_1aab45c87_Sema* _self_, jule::Ptr<_1c3e3a5e6_Token>* _56743_ident, jule::Ptr<_1aaab3199_Fn>* _56759_s) {
	if ((!(_1aab49131_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1aab240ea_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1aab488c2_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1aab4ae35_checkImportSelectedSelections(_1aab45c87_Sema* _self_, jule::Ptr<_1aab24c33_ImportInfo>* _58153_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_58153_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a831b0b9:;
		if (it != expr_end) {
			jule::Ptr<_1c3e3a5e6_Token> _58316_ident = *it;
			{
				if (_58316_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_1a831b0b9;
				};
				if (_1aab4a2ec_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58153_imp)))), &(_58316_ident.get()._field_Kind))) {
					_1aab488c2_pushErr(_self_, _58316_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_58316_ident.get()._field_Kind, &__jule_any_type5)}));
					_1aab48c35_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1a831b0b9;
				};
				jule::Any _59521_def = _1aab4a6e8_getImportDef(_self_, &(_58316_ident.get()._field_Kind), _58153_imp);;
				{
					auto &_match_expr{ _59521_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1a831d242:;
						{
							goto _iter_next_1a831b0b9;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a831d73c:;
						{
							jule::Ptr<_1aab68969_Var> _60125_v = _59521_def.cast_ptr<_1aab68969_Var>(&__jule_any_type8);;
							__jule_func_result=(_1a8320541_checkImportSelection(_self_, &(_58316_ident), &(_60125_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1a831d7a3:;
						{
							jule::Ptr<_1aabeb403_TypeAlias> _60425_ta = _59521_def.cast_ptr<_1aabeb403_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1a8324138_checkImportSelection(_self_, &(_58316_ident), &(_60425_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1a831d819:;
						{
							jule::Ptr<_1aaa972b0_Struct> _60725_s = _59521_def.cast_ptr<_1aaa972b0_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1a8327bdb_checkImportSelection(_self_, &(_58316_ident), &(_60725_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1a831d880:;
						{
							jule::Ptr<_1aaac6443_Trait> _61025_t = _59521_def.cast_ptr<_1aaac6443_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1a832b926_checkImportSelection(_self_, &(_58316_ident), &(_61025_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1a831e375:;
						{
							jule::Ptr<_1aaac8b3d_Enum> _61325_e = _59521_def.cast_ptr<_1aaac8b3d_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1a83304c9_checkImportSelection(_self_, &(_58316_ident), &(_61325_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1a831e3db:;
						{
							jule::Ptr<_1aaaca348_TypeEnum> _61625_e = _59521_def.cast_ptr<_1aaaca348_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1a833407c_checkImportSelection(_self_, &(_58316_ident), &(_61625_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1a831e452:;
						{
							jule::Ptr<_1aaab3199_Fn> _61925_f = _59521_def.cast_ptr<_1aaab3199_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1a8337b30_checkImportSelection(_self_, &(_58316_ident), &(_61925_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1a831d6c6:;
						{
							_1aab488c2_pushErr(_self_, _58316_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_58316_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1a831b0b9;
						}
					}
					_match_end_1a831d42e:;
				};
			}
			_iter_next_1a831b0b9:;
			++it;
			goto _iter_begin_1a831b0b9;
		}
		_iter_end_1a831b0b9:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1a833ba8a_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema* _self_, jule::Slice<jule::Ptr<_1aab68969_Var>>* _63062_s, jule::Ptr<_1c3e3a5e6_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a833d460:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1a8320541_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1a833d460:;
			++it;
			goto _iter_begin_1a833d460;
		}
		_iter_end_1a833d460:;
	};
	return _63117_ok;;
}

inline jule::Bool _1a833c9ae_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema* _self_, jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>* _63062_s, jule::Ptr<_1c3e3a5e6_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8341056:;
		if (it != expr_end) {
			jule::Ptr<_1aabeb403_TypeAlias> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1a8324138_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1a8341056:;
			++it;
			goto _iter_begin_1a8341056;
		}
		_iter_end_1a8341056:;
	};
	return _63117_ok;;
}

inline jule::Bool _1a83405e9_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema* _self_, jule::Slice<jule::Ptr<_1aaa972b0_Struct>>* _63062_s, jule::Ptr<_1c3e3a5e6_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8343b3b:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1a8327bdb_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1a8343b3b:;
			++it;
			goto _iter_begin_1a8343b3b;
		}
		_iter_end_1a8343b3b:;
	};
	return _63117_ok;;
}

inline jule::Bool _1a834318a_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema* _self_, jule::Slice<jule::Ptr<_1aaab3199_Fn>>* _63062_s, jule::Ptr<_1c3e3a5e6_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8346743:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1a8337b30_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1a8346743:;
			++it;
			goto _iter_begin_1a8346743;
		}
		_iter_end_1a8346743:;
	};
	return _63117_ok;;
}

inline jule::Bool _1a8345cd6_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema* _self_, jule::Slice<jule::Ptr<_1aaac6443_Trait>>* _63062_s, jule::Ptr<_1c3e3a5e6_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83492d4:;
		if (it != expr_end) {
			jule::Ptr<_1aaac6443_Trait> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1a832b926_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1a83492d4:;
			++it;
			goto _iter_begin_1a83492d4;
		}
		_iter_end_1a83492d4:;
	};
	return _63117_ok;;
}

inline jule::Bool _1a8348877_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema* _self_, jule::Slice<jule::Ptr<_1aaac8b3d_Enum>>* _63062_s, jule::Ptr<_1c3e3a5e6_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a834bd75:;
		if (it != expr_end) {
			jule::Ptr<_1aaac8b3d_Enum> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1a83304c9_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1a834bd75:;
			++it;
			goto _iter_begin_1a834bd75;
		}
		_iter_end_1a834bd75:;
	};
	return _63117_ok;;
}

inline jule::Bool _1a834b418_checkImportsAllSelectionsFromCollection(_1aab45c87_Sema* _self_, jule::Slice<jule::Ptr<_1aaaca348_TypeEnum>>* _63062_s, jule::Ptr<_1c3e3a5e6_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a834e99e:;
		if (it != expr_end) {
			jule::Ptr<_1aaaca348_TypeEnum> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1a833407c_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1a834e99e:;
			++it;
			goto _iter_begin_1a834e99e;
		}
		_iter_end_1a834e99e:;
	};
	return _63117_ok;;
}



inline jule::Bool _1aab4b672_checkImportAllSelections(_1aab45c87_Sema* _self_, jule::Ptr<_1aab24c33_ImportInfo>* _64044_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_64044_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83380e7:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> *_64216_file = it;
			{
				__jule_func_result=(_1a833ba8a_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_Vars), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a833c9ae_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_TypeAliases), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a83405e9_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_Structs), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a834318a_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_Funcs), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a8345cd6_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_Traits), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a8348877_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_Enums), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1a834b418_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_TypeEnums), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1a83380e7:;
			++it;
			goto _iter_begin_1a83380e7;
		}
		_iter_end_1a83380e7:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab4b9b3_checkImportSelections(_1aab45c87_Sema* _self_, jule::Ptr<_1aab24c33_ImportInfo>* _65445_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_65445_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1aab4ae35_checkImportSelectedSelections(_self_, _65445_imp);
		return __jule_func_result;;
	} else if ((*(_65445_imp)).get()._field_ImportAll) {
		__jule_func_result = _1aab4b672_checkImportAllSelections(_self_, _65445_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aab4bd04_isUseAliasDuplication(_1aab45c87_Sema* _self_, jule::Ptr<_1aab24c33_ImportInfo>* _66341_imp) {
	if (((*(_66341_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8351e46:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _66821_imp2 = *it;
			{
				if ((_66821_imp2 == (*(_66341_imp)))) {
					goto _iter_end_1a8351e46;
				};
				if ((_66821_imp2.get()._field_Alias == (*(_66341_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_66821_imp2.get()._field_Ident == _66821_imp2.get()._field_LinkPath) && (_66821_imp2.get()._field_Ident == (*(_66341_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1a8351e46:;
			++it;
			goto _iter_begin_1a8351e46;
		}
		_iter_end_1a8351e46:;
	};
	return false;;
}



inline jule::Bool _1aab4c145_checkImport(_1aab45c87_Sema* _self_, jule::Ptr<_1aab24c33_ImportInfo>* _68335_imp) {
	if (((*(_68335_imp)).get()._field_Binded || ((*(_68335_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1aab4bd04_isUseAliasDuplication(_self_, _68335_imp)) {
		_1aab488c2_pushErr(_self_, (*(_68335_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_68335_imp)).get()._field_Alias, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_68335_imp)).get()._field_Duplicate))) {
		jule::Ptr<_1aab45c87_Sema> _69421_sema = jule::new_ptr<_1aab45c87_Sema>(_1aab45c87_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1aab64e93_check(_69421_sema, &((*(_68335_imp)).get()._field_Package.get()._field_Files));
		if ((_69421_sema.get()._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append(_69421_sema.get()._field_errors);;
			_69421_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1aab4b9b3_checkImportSelections(_self_, _68335_imp);;
}



inline void _1aab4c343_checkImports(_1aab45c87_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a835738b:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _70921_file = *it;
			{
				_1aab484a4_setCurrentFile(_self_, _70921_file);
				{
					auto expr = &(_70921_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a83581b1:;
					if (it != expr_end) {
						jule::Ptr<_1aab24c33_ImportInfo> _71125_imp = *it;
						{
							jule::Bool _71221_ok = _1aab4c145_checkImport(_self_, &(_71125_imp));;
							if ((!(_71221_ok))) {
								return;;
							};
						}
						_iter_next_1a83581b1:;
						++it;
						goto _iter_begin_1a83581b1;
					}
					_iter_end_1a83581b1:;
				};
			}
			_iter_next_1a835738b:;
			++it;
			goto _iter_begin_1a835738b;
		}
		_iter_end_1a835738b:;
	};
}



inline void _1aab4c541_implFileImpls(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8358106:;
		if (it != expr_end) {
			jule::Ptr<_1aaaed3b0_Impl> _72221_imp = *it;
			{
				_1aab5ac58_implImpl(_self_, &(_72221_imp));
			}
			_iter_next_1a8358106:;
			++it;
			goto _iter_begin_1a8358106;
		}
		_iter_end_1a8358106:;
	};
}



inline void _1aab4c73e_implImpls(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83599dc:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _72821_file = *it;
			{
				_1aab484a4_setCurrentFile(_self_.ptr(), _72821_file);
				_1aab4c541_implFileImpls(_self_);
			}
			_iter_next_1a83599dc:;
			++it;
			goto _iter_begin_1a83599dc;
		}
		_iter_end_1a83599dc:;
	};
}



inline void _1aab4c93c_checkEnums(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a835a515:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _73521_file = *it;
			{
				_1aab484a4_setCurrentFile(_self_.ptr(), _73521_file);
				{
					
					if ((!(_1aab57194_checkEnumDecls(_self_)))) {
						_case_begin_1a835b857:;
					}
					else if ((!(_1aab5742a_checkTypeEnumDecls(_self_)))) {
						_case_begin_1a835b8ce:;
					}
					_match_end_1a835b7be:;
				};
			}
			_iter_next_1a835a515:;
			++it;
			goto _iter_begin_1a835a515;
		}
		_iter_end_1a835a515:;
	};
}



inline void _1aab4cb3a_checkFileInherits(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a835b082:;
		if (it != expr_end) {
			jule::Ptr<_1aaac6443_Trait> _74521_t = *it;
			{
				jule::Bool _74617_ok = _1aab58cde__checkTraitDeclInherits(_self_, &(_74521_t));;
				if ((!(_74617_ok))) {
					return;;
				};
			}
			_iter_next_1a835b082:;
			++it;
			goto _iter_begin_1a835b082;
		}
		_iter_end_1a835b082:;
	};
}



inline void _1aab4cd38_checkInherits(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a835c68d:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _75421_file = *it;
			{
				_1aab484a4_setCurrentFile(_self_.ptr(), _75421_file);
				_1aab4cb3a_checkFileInherits(_self_);
			}
			_iter_next_1a835c68d:;
			++it;
			goto _iter_begin_1a835c68d;
		}
		_iter_end_1a835c68d:;
	};
}



inline _1aac0e34a_typeChecker _1aab4d2de_typeChecker(jule::Ptr<_1aab45c87_Sema> _self_, jule::Trait<_1aac21d30_Lookup> _76035_l, jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> _76050_generics, jule::Ptr<_1aac0d35a_referencer> _76113_referencer) {
	_1aac0e34a_typeChecker _76217_tc = _1aac0e34a_typeChecker{._field_s=_self_, ._field_rootLookup=_76035_l, ._field_lookup=_76035_l, ._field_referencer=_76113_referencer, ._field_useGenerics=_76050_generics, };;
	{
		auto &_match_expr{ _76035_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a83600b9:;
			{
				jule::Ptr<_1aab0aae8_scopeChecker> _77121_hard = _1aab0de70_getHardRoot(_76035_l.cast_ptr<_1aab0aae8_scopeChecker>(0));;
				_76217_tc._field_refers=_77121_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1a8360064:;
	};
	if (((_76113_referencer != nullptr) && (_76113_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _76113_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1a83614c7:;
				{
					_76217_tc._field_ownerAlias=_76113_referencer.get()._field_owner.cast_ptr<_1aabeb403_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1a8361472:;
		};
	};
	return _76217_tc;;
}



inline jule::Ptr<_1aabec1e5_TypeKind> _1aab4d850_buildTypeWithRefers(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa765e1_TypeDecl>* _78744_t, jule::Trait<_1aac21d30_Lookup> _78767_l, jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> _78813_generics, jule::Ptr<_1aac0d35a_referencer> _78841_referencer) {
	return ({ auto _wrap_copy = _1aab4d2de_typeChecker(_self_, _78767_l, _78813_generics, _78841_referencer); _1aac169e5_checkDecl(&_wrap_copy, _78744_t); });;
}



inline jule::Bool _1aab4ddb1_checkTypeWithRefers(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aac0465e_TypeSymbol>* _79444_t, jule::Trait<_1aac21d30_Lookup> _79464_l, jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> _79513_generics, jule::Ptr<_1aac0d35a_referencer> _79541_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1aac049d3_checked((*(_79444_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_79444_t)).get()._field_Kind=_1aab4d850_buildTypeWithRefers(_self_, &((*(_79444_t)).get()._field_Decl), _79464_l, _79513_generics, _79541_referencer);
	__jule_func_result = _1aac049d3_checked((*(_79444_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1aaaeb37a_constraintChecker> _1aab4e147_constraintChecker(jule::Ptr<_1aab45c87_Sema> _self_) {
	return jule::new_ptr<_1aaaeb37a_constraintChecker>(_1aaaeb37a_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1aab4e543_checkType(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aac0465e_TypeSymbol>* _80934_t, jule::Trait<_1aac21d30_Lookup> _80954_l) {
	return _1aab4ddb1_checkTypeWithRefers(_self_, _80934_t, _80954_l, nullptr, nullptr);;
}



inline jule::Ptr<_1aabec1e5_TypeKind> _1aab4e9e9_buildTypeWithGenerics(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa765e1_TypeDecl>* _81546_t, jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> _81613_generics, jule::Ptr<_1aaab9249_ReferenceStack> _81641_refers) {
	jule::Ptr<_1aac0e34a_typeChecker> _81717_tc = jule::new_ptr<_1aac0e34a_typeChecker>(_1aac0e34a_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1aac21d30_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1aac21d30_Lookup>(_self_, 3), ._field_refers=_81641_refers, ._field_useGenerics=_81613_generics, });;
	return _1aac169e5_checkDecl(_81717_tc.ptr(), _81546_t);;
}



inline jule::Ptr<_1aabec1e5_TypeKind> _1aab5017b_selectType(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa765e1_TypeDecl>* _83335_t) {
	jule::Ptr<_1aac0e34a_typeChecker> _83417_tc = jule::new_ptr<_1aac0e34a_typeChecker>(_1aac0e34a_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1aac21d30_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1aac21d30_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1aac169e5_checkDecl(_83417_tc.ptr(), _83335_t);;
}



inline jule::Ptr<_1aabbdb12_Eval> _1aab50632_evalpd(jule::Ptr<_1aab45c87_Sema> _self_, jule::Trait<_1aac21d30_Lookup> _84530_l, jule::Ptr<_1aabec1e5_TypeKind> _84545_p, jule::Ptr<_1aab68969_Var> _84563_owner) {
	jule::Ptr<_1aabbdb12_Eval> _84617_e = jule::new_ptr<_1aabbdb12_Eval>(_1aabbdb12_Eval{._field_s=_self_, ._field_lookup=_84530_l, ._field_owner=_84563_owner, });;
	{
		auto &_match_expr{ _84530_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a836e86a:;
			{
				_84617_e.get()._field_unsafety=_1aab0cea2_isUnsafe(_84530_l.cast_ptr<_1aab0aae8_scopeChecker>(0));
			}
		}
		_match_end_1a836e815:;
	};
	_84617_e.get()._field_prefix=_84545_p;
	return _84617_e;;
}



inline jule::Ptr<_1aabbdb12_Eval> _1aab50a2d_evalp(jule::Ptr<_1aab45c87_Sema> _self_, jule::Trait<_1aac21d30_Lookup> _86029_l, jule::Ptr<_1aabec1e5_TypeKind> _86044_p) {
	return _1aab50632_evalpd(_self_, _86029_l, _86044_p, nullptr);;
}



inline jule::Ptr<_1aabbdb12_Eval> _1aab50d6e_eval(jule::Ptr<_1aab45c87_Sema> _self_, jule::Trait<_1aac21d30_Lookup> _86528_l) {
	return _1aab50a2d_evalp(_self_, _86528_l, nullptr);;
}



inline jule::Bool _1aab513d0_checkAssignType(jule::Ptr<_1aab45c87_Sema> _self_, jule::Bool _86935_destIsRef, jule::Ptr<_1aabec1e5_TypeKind>* _86957_dest, jule::Ptr<_1aabbbe1d_Data>* _87014_d, jule::Ptr<_1c3e3a5e6_Token> _87028_errorToken) {
	if ((*(_87014_d)).get()._field_Decl) {
		_1aab488c2_pushErr(_self_.ptr(), _87028_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_86935_destIsRef) {
		if ((!(_1aabec8ee_Equal((*(_86957_dest)), (*(_87014_d)).get()._field_Kind)))) {
			_1aab488c2_pushErr(_self_.ptr(), _87028_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_86957_dest)).ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_87014_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_1aaba59d9_assignTypeChecker> _88121_atc = jule::new_ptr<_1aaba59d9_assignTypeChecker>(_1aaba59d9_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_86957_dest)), ._field_d=(*(_87014_d)), ._field_errorToken=_87028_errorToken});;
		jule::Bool _88717_ok = _1aaba6c4e_check(_88121_atc.ptr());;
		if ((!(_88717_ok))) {
			return false;;
		};
	};
	if (((!(_1aabbc7e2_IsConst((*(_87014_d)).ptr()))) || (_1aabeeadd_Prim((*(_86957_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _89717_kind = _1aabeeadd_Prim((*(_86957_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_1c4cbbbe6_IsSigInt(_89717_kind)) {
			_case_begin_1a8375b90:;
			{
				_1c4cc0d1b_SetI64((*(_87014_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c4cc0546_AsI64((*(_87014_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1c4cbc004_IsUnsigInt(_89717_kind)) {
			_case_begin_1a8375c17:;
			{
				_1c4cc10c4_SetU64((*(_87014_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c4cc07cc_AsU64((*(_87014_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1c4cbc60e_IsFloat(_89717_kind)) {
			_case_begin_1a8375c8e:;
			{
				_1c4cc18dd_SetF64((*(_87014_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1c4cc0a63_AsF64((*(_87014_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1a8375ac4:;
	};
	return true;;
}



inline jule::Bool _1aab51886_checkTypeCompatibility(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aabec1e5_TypeKind>* _91147_dest, jule::Ptr<_1aabec1e5_TypeKind>* _91214_src, jule::Ptr<_1c3e3a5e6_Token>* _91235_errorToken) {
	if (((*(_91214_src)) == nullptr)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_91235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_91147_dest)).ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_91214_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_1aac01914_Tup((*(_91214_src)).ptr()) != nullptr)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_91235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_91147_dest)).ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_91214_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_1aaba3c3a_typeCompatibilityChecker _92617_tcc = _1aaba3c3a_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91147_dest)), ._field_src=(*(_91214_src)), ._field_errorToken=(*(_91235_errorToken))};;
	if (_1aaba5401_check(&_92617_tcc)) {
		return true;;
	};
	_1aab488c2_pushErr(_self_.ptr(), (*(_91235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_91147_dest)).ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_91214_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_1aabec1e5_TypeKind> _1aab51d3c_buildNonGenericTypeKind(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa765e1_TypeDecl>* _94748_ast, jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>>* _94814_generics, jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>>* _94850_ignored) {
	jule::Ptr<_1aac0e34a_typeChecker> _94917_tc = jule::new_ptr<_1aac0e34a_typeChecker>(_1aac0e34a_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1aac21d30_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1aac21d30_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_94814_generics)), ._field_ignoredGenerics=(&((*(_94850_ignored)))), });;
	return _1aac169e5_checkDecl(_94917_tc.ptr(), _94748_ast);;
}



inline jule::Bool _1aab52238_buildFnNonGenericTypeKinds(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab609d_FnIns>* _95951_f, jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>>* _95967_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>> _96117_generics = nullptr;;
	if (_1aaab38a3_IsMethod((*(_95951_f)).get()._field_Decl.ptr())) {
		_96117_generics=jule::append((*(_95951_f)).get()._field_Decl.get()._field_Generics,(*(_95951_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_96117_generics=(*(_95951_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_95951_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a837e32a:;
		if (it != expr_end) {
			jule::Ptr<_1aaab5102_ParamIns> _96821_p = *it;
			{
				if ((!(_1aaaabe84_IsSelf(_96821_p.get()._field_Decl.ptr())))) {
					_96821_p.get()._field_Kind=_1aab51d3c_buildNonGenericTypeKind(_self_, &(_96821_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_96117_generics), _95967_ignored);
					__jule_func_result=(__jule_func_result && (_96821_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1a837e32a:;
			++it;
			goto _iter_begin_1a837e32a;
		}
		_iter_end_1a837e32a:;
	};
	if ((!(_1aaab361c_IsVoid((*(_95951_f)).get()._field_Decl.ptr())))) {
		(*(_95951_f)).get()._field_Result=_1aab51d3c_buildNonGenericTypeKind(_self_, &((*(_95951_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_96117_generics), _95967_ignored);
		__jule_func_result=(__jule_func_result && ((*(_95951_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1aaab609d_FnIns> _1aab52579_getTraitCheckFnKind(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab3199_Fn>* _98144_f) {
	if (((*(_98144_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_98144_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_1aaab609d_FnIns> _98517_ins = _1aaab4673_instanceForce((*(_98144_f)));;
	jule::Ptr<_1aac0e34a_typeChecker> _98717_tc = jule::new_ptr<_1aac0e34a_typeChecker>(_1aac0e34a_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1aac21d30_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1aac21d30_Lookup>(_self_, 3), });;
	{
		auto expr = &(_98517_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab76c56c:;
		if (it != expr_end) {
			jule::Ptr<_1aaab5102_ParamIns> _99221_p = *it;
			{
				if ((!(_1aaaabe84_IsSelf(_99221_p.get()._field_Decl.ptr())))) {
					_99221_p.get()._field_Kind=_1aac169e5_checkDecl(_98717_tc.ptr(), &(_99221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1ab76c56c:;
			++it;
			goto _iter_begin_1ab76c56c;
		}
		_iter_end_1ab76c56c:;
	};
	if ((!(_1aaab361c_IsVoid((*(_98144_f)).ptr())))) {
		_98517_ins.get()._field_Result=_1aac169e5_checkDecl(_98717_tc.ptr(), &((*(_98144_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _98517_ins;;
}



inline jule::Bool _1aab52a30_checkConstraintsFn(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab609d_FnIns>* _100443_f, jule::Ptr<_1c3e3a5e6_Token>* _100459_et, jule::Ptr<_1aaab609d_FnIns> _100475_exist) {
	jule::Ptr<_1aaaeb37a_constraintChecker> _100517_cc = _1aab4e147_constraintChecker(_self_);;
	_100517_cc.get()._field_et=(*(_100459_et));
	_100517_cc.get()._field_fi=(*(_100443_f));
	if ((_100475_exist != nullptr)) {
		{
			auto expr = &(_100475_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab7720aa:;
			if (it != expr_end) {
				jule::I32 _100918_i = it - expr->begin();
				jule::Ptr<_1aabea80e_InsGeneric> _100925_g = *it;
				{
					(*(_100443_f)).get()._field_Generics[_100918_i].get()._field_Constraint=_100925_g.get()._field_Constraint;
				}
				_iter_next_1ab7720aa:;
				++it;
				_100918_i++;
				goto _iter_begin_1ab7720aa;
			}
			_iter_end_1ab7720aa:;
		};
	} else {
		_100517_cc.get()._field_uniq=true;
	};
	return _1aaaec2b0_check(_100517_cc);;
}



inline jule::Bool _1aab52ed6_checkConstraintsStruct(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa9a390_StructIns>* _101847_s, jule::Ptr<_1c3e3a5e6_Token>* _101867_et, jule::Ptr<_1aaa9a390_StructIns> _101883_exist) {
	jule::Ptr<_1aaaeb37a_constraintChecker> _101917_cc = _1aab4e147_constraintChecker(_self_);;
	_101917_cc.get()._field_et=(*(_101867_et));
	_101917_cc.get()._field_si=(*(_101847_s));
	if ((_101883_exist != nullptr)) {
		{
			auto expr = &(_101883_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab77482c:;
			if (it != expr_end) {
				jule::I32 _102318_i = it - expr->begin();
				jule::Ptr<_1aabea80e_InsGeneric> _102325_g = *it;
				{
					(*(_101847_s)).get()._field_Generics[_102318_i].get()._field_Constraint=_102325_g.get()._field_Constraint;
				}
				_iter_next_1ab77482c:;
				++it;
				_102318_i++;
				goto _iter_begin_1ab77482c;
			}
			_iter_end_1ab77482c:;
		};
	} else {
		_101917_cc.get()._field_uniq=true;
	};
	return _1aaaec2b0_check(_101917_cc);;
}



inline jule::Bool _1aab533d2_fnEnvironment(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab609d_FnIns>* _103538_f, jule::Fn<jule::Bool(jule::Ptr<_1aab45c87_Sema>*,jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>*)> _103549_algo) {
	jule::Ptr<_1aab45c87_Sema> _103617_sema = (*(_103538_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1aabb6be8_SymbolTable> _103717_old = (*(_103538_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1aab484a4_setCurrentFile((*(_103538_f)).get()._field_Decl.get()._field_sema.ptr(), _103717_old);
	});;
	jule::Ptr<_1aabb6be8_SymbolTable> _103917_file = _1aab449cd_findFile(&((*(_103538_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_103538_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_103917_file != nullptr)) {
		_1aab484a4_setCurrentFile((*(_103538_f)).get()._field_Decl.get()._field_sema.ptr(), _103917_file);
	};
	jule::I32 _104417_size = (*(_103538_f)).get()._field_Generics.len();;
	if ((((*(_103538_f)).get()._field_Decl != nullptr) && ((*(_103538_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_104417_size+=(*(_103538_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> _104917_generics = jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>::alloc(0LL, _104417_size);;
	_1aab44659_appendGenericTypeAliases(&(_104917_generics), _103538_f);
	jule::Bool _105213_ok = _103549_algo(&(_103617_sema), &(_104917_generics));;
	if ((_103617_sema != _self_)) {
		(_self_.get()._field_errors).append(_103617_sema.get()._field_errors);;
		_103617_sema.get()._field_errors=nullptr;
	};
	return _105213_ok;;
}



inline void _1aab5368a_checkFnParamKind(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab5102_ParamIns>* _106241_p) {
	(*(_106241_p)).get()._field_Kind.get()._field_Variadic=(*(_106241_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_106241_p)).get()._field_Decl.get()._field_Reference && (!(_1aac1d7dd_isValidForRef(&((*(_106241_p)).get()._field_Kind)))))) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_106241_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_106241_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _1aab539cb_reloadFnInsTypes(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab609d_FnIns> _106940_f) {
	if ((_1aaab7533_IsBuiltin(_106940_f.ptr()) || _1aaab77b9_IsAnon(_106940_f.ptr()))) {
		return true;;
	};
	return _1aab533d2_fnEnvironment(_self_, &(_106940_f), jule::Fn<jule::Bool(jule::Ptr<_1aab45c87_Sema>*,jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>*)>([=](jule::Ptr<_1aab45c87_Sema>* _107343_sema, jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>* _107361_generics) mutable -> jule::Bool {
		jule::Bool _107421_ok = true;;
		{
			auto expr = &(_106940_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1ab77ed10:;
			if (it != expr_end) {
				jule::Ptr<_1aaab5102_ParamIns> _107525_p = *it;
				{
					if (_1aaaabe84_IsSelf(_107525_p.get()._field_Decl.ptr())) {
						if (_1aaaac21a_IsRef(_107525_p.get()._field_Decl.ptr())) {
							_107525_p.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aac08a92_Sptr>(_1aac08a92_Sptr{._field_Elem=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_106940_f.get()._field_Owner, 0)})}), 21)});
						} else {
							_107525_p.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_106940_f.get()._field_Owner, 0)});
						};
					} else {
						_107525_p.get()._field_Kind=_1aab4e9e9_buildTypeWithGenerics((*(_107343_sema)), &(_107525_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_107361_generics)), _106940_f.get()._field_Refers);
						if ((_107525_p.get()._field_Kind != nullptr)) {
							_1aab5368a_checkFnParamKind(_self_, &(_107525_p));
						} else {
							_107421_ok=false;
						};
					};
				}
				_iter_next_1ab77ed10:;
				++it;
				goto _iter_begin_1ab77ed10;
			}
			_iter_end_1ab77ed10:;
		};
		if ((!(_1aaab361c_IsVoid(_106940_f.get()._field_Decl.ptr())))) {
			_106940_f.get()._field_Result=_1aab4e9e9_buildTypeWithGenerics((*(_107343_sema)), &(_106940_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_107361_generics)), _106940_f.get()._field_Refers);
			_107421_ok=((_106940_f.get()._field_Result != nullptr) && _107421_ok);
		};
		return _107421_ok;;
	}));;
}



inline jule::Bool _1aab53e82_checkRefValidityForInitExpr(jule::Ptr<_1aab45c87_Sema> _self_, jule::Bool _110547_leftMut, jule::Ptr<_1aabbbe1d_Data>* _110567_d, jule::Ptr<_1c3e3a5e6_Token>* _110582_errorToken) {
	{
		auto &_match_expr{ (*(_110567_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ab784c7c:;
			{
				goto _match_end_1ab784908;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1ab785233:;
			{
				jule::Ptr<_1aaaa3b4b_TraitSubIdentExprModel> _111021_model = (*(_110567_d)).get()._field_Model.cast_ptr<_1aaaa3b4b_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_1aab43427_isValidModelForRef(&(_111021_model.get()._field_Expr))))) {
					_1aab488c2_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_111021_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1ab785299:;
			{
				jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> _111621_model = (*(_110567_d)).get()._field_Model.cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_1aab43427_isValidModelForRef(&(_111621_model.get()._field_Expr.get()._field_Model))))) {
					_1aab488c2_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_111621_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1ab785310:;
			{
				_1aab488c2_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1ab7849c4:;
			{
				jule::Ptr<_1aaa9ed45_UnaryExprModel> _112621_unary = (*(_110567_d)).get()._field_Model.cast_ptr<_1aaa9ed45_UnaryExprModel>(&__jule_any_type74);;
				if ((_112621_unary.get()._field_Op.get()._field_Id == static_cast<jule::U32>(62LLU))) {
					if ((!(_1aab43427_isValidModelForRef(&((*(_110567_d)).get()._field_Model))))) {
						_1aab488c2_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1ab784908;
				};
				goto _case_begin_1ab78495d;
			}
		}
		else {
			_case_begin_1ab78495d:;
			{
				_1aab488c2_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1ab784908:;
	};
	if ((_110547_leftMut && (!((*(_110567_d)).get()._field_Mutable)))) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1aab542c3_isMutRiskyStruct(_1aab45c87_Sema* _self_, jule::Ptr<_1aaa9a390_StructIns>* _115132_s) {
	{
		auto expr = &((*(_115132_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab78ae5e:;
		if (it != expr_end) {
			jule::Ptr<_1aaa997e0_FieldIns> *_115216_f = it;
			{
				if ((((*(_115216_f)).get()._field_Decl.get()._field_Mutable && _1aabeda87_Mutable((*(_115216_f)).get()._field_Kind.ptr())) && _1aab49131_isAccessibleDefine(_self_, (*(_115216_f)).get()._field_Decl.get()._field_Public, (*(_115216_f)).get()._field_Decl.get()._field_Token))) {
					return true;;
				};
			}
			_iter_next_1ab78ae5e:;
			++it;
			goto _iter_begin_1ab78ae5e;
		}
		_iter_end_1ab78ae5e:;
	};
	return false;;
}



inline jule::Bool _1aab548de_checkValidityForInitExpr(jule::Ptr<_1aab45c87_Sema> _self_, jule::Bool _117844_leftMut, jule::Bool _117859_leftRef, jule::Ptr<_1aabec1e5_TypeKind>* _117910_leftKind, jule::Ptr<_1aabbbe1d_Data>* _117936_d, jule::Ptr<_1c3e3a5e6_Token>* _117951_errorToken) {
	if ((_117844_leftMut && (!((*(_117936_d)).get()._field_Mutable)))) {
		if (_1aabeda87_Mutable((*(_117936_d)).get()._field_Kind.ptr())) {
			_1aab488c2_pushErr(_self_.ptr(), (*(_117951_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_117936_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
		jule::Ptr<_1aaa9a390_StructIns> _118717_s = _1aac01161_Struct((*(_117936_d)).get()._field_Kind.ptr());;
		if (((_118717_s != nullptr) && _1aab542c3_isMutRiskyStruct(_self_.ptr(), &(_118717_s)))) {
			_1aab488c2_pushErr(_self_.ptr(), (*(_117951_errorToken)), jule::Str("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_117936_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	};
	if (_117859_leftRef) {
		if ((!(_1aab53e82_checkRefValidityForInitExpr(_self_, _117844_leftMut, _117936_d, _117951_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1aaba59d9_assignTypeChecker> _119817_atc = jule::new_ptr<_1aaba59d9_assignTypeChecker>(_1aaba59d9_assignTypeChecker{._field_s=_self_, ._field_d=(*(_117936_d)), ._field_errorToken=(*(_117951_errorToken))});;
	return _1aaba6215_checkValidity(_119817_atc.ptr());;
}



inline jule::Bool _1aab54cda_checkTypeAliasDeclKind(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aabeb403_TypeAlias>* _120647_ta, jule::Trait<_1aac21d30_Lookup> _120667_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aabb6be8_SymbolTable> _120717_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1aab484a4_setCurrentFile(_self_.ptr(), _120717_old);
	});;
	if (((*(_120647_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_1aabb6be8_SymbolTable> _121221_file = _1aab449cd_findFile(&(_self_.get()._field_files), &((*(_120647_ta)).get()._field_Token.get()._field_File));;
		if ((_121221_file != nullptr)) {
			_1aab484a4_setCurrentFile(_self_.ptr(), _121221_file);
		};
	};
	__jule_func_result=_1aab4ddb1_checkTypeWithRefers(_self_, &((*(_120647_ta)).get()._field_Kind), _120667_l, nullptr, jule::new_ptr<_1aac0d35a_referencer>(_1aac0d35a_referencer{._field_ident=(*(_120647_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_120647_ta)), &__jule_any_type67), ._field_refs=(&((*(_120647_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_1aac008ad_Arr((*(_120647_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1aac008ad_Arr((*(_120647_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_120647_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1aab5514d_checkTypeAliasDecl(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aabeb403_TypeAlias>* _122943_ta, jule::Trait<_1aac21d30_Lookup> _122963_l) {
	if (_1c3e3d055_IsIgnoreIdent((*(_122943_ta)).get()._field_Ident)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_122943_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1aab54cda_checkTypeAliasDeclKind(_self_, _122943_ta, _122963_l);
}



inline void _1aab55406_checkTypeAliasDeclDup(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aabeb403_TypeAlias>* _123746_ta) {
	if (_1c3e3d055_IsIgnoreIdent((*(_123746_ta)).get()._field_Ident)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_123746_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1aab495d7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_123746_ta)))), &((*(_123746_ta)).get()._field_Ident), (*(_123746_ta)).get()._field_Binded)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_123746_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_123746_ta)).get()._field_Ident, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1aab54cda_checkTypeAliasDeclKind(_self_, _123746_ta, jule::Trait<_1aac21d30_Lookup>(_self_, 3));
}



inline jule::Bool _1aab5568c_checkTypeAliasDecls(jule::Ptr<_1aab45c87_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7993ce:;
		if (it != expr_end) {
			jule::Ptr<_1aabeb403_TypeAlias> _125021_ta = *it;
			{
				_1aab55406_checkTypeAliasDeclDup(_self_, &(_125021_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab7993ce:;
			++it;
			goto _iter_begin_1ab7993ce;
		}
		_iter_end_1ab7993ce:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1ab7bd07e_checkEnumItemsDup(_1aab45c87_Sema* _self_, jule::Slice<jule::Ptr<_1aaac80c1_EnumItem>> _126139_items) {
	{
		auto expr = &(_126139_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7be349:;
		if (it != expr_end) {
			jule::Ptr<_1aaac80c1_EnumItem> *_126216_item = it;
			{
				if ((*(_126216_item)).get()._field_Ident.empty()) {
					goto _iter_next_1ab7be349;
				} else if (_1c3e3d055_IsIgnoreIdent((*(_126216_item)).get()._field_Ident)) {
					_1aab488c2_pushErr(_self_, (*(_126216_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126139_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab7c0317:;
						if (it != expr_end) {
							jule::Ptr<_1aaac80c1_EnumItem> *_126824_citem = it;
							{
								if (((*(_126216_item)) == (*(_126824_citem)))) {
									goto _iter_end_1ab7c0317;
								} else if (((*(_126216_item)).get()._field_Ident == (*(_126824_citem)).get()._field_Ident)) {
									_1aab488c2_pushErr(_self_, (*(_126216_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_126216_item)).get()._field_Ident, &__jule_any_type5)}));
									_1aab48c35_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ab7c0317;
								};
							}
							_iter_next_1ab7c0317:;
							++it;
							goto _iter_begin_1ab7c0317;
						}
						_iter_end_1ab7c0317:;
					};
				};
			}
			_iter_next_1ab7be349:;
			++it;
			goto _iter_begin_1ab7be349;
		}
		_iter_end_1ab7be349:;
	};
}

inline void _1ab7c75e9_checkEnumItemsDup(_1aab45c87_Sema* _self_, jule::Slice<jule::Ptr<_1aaac9c71_TypeEnumItem>> _126139_items) {
	{
		auto expr = &(_126139_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7c8892:;
		if (it != expr_end) {
			jule::Ptr<_1aaac9c71_TypeEnumItem> *_126216_item = it;
			{
				if ((*(_126216_item)).get()._field_Ident.empty()) {
					goto _iter_next_1ab7c8892;
				} else if (_1c3e3d055_IsIgnoreIdent((*(_126216_item)).get()._field_Ident)) {
					_1aab488c2_pushErr(_self_, (*(_126216_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126139_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab7c9860:;
						if (it != expr_end) {
							jule::Ptr<_1aaac9c71_TypeEnumItem> *_126824_citem = it;
							{
								if (((*(_126216_item)) == (*(_126824_citem)))) {
									goto _iter_end_1ab7c9860;
								} else if (((*(_126216_item)).get()._field_Ident == (*(_126824_citem)).get()._field_Ident)) {
									_1aab488c2_pushErr(_self_, (*(_126216_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_126216_item)).get()._field_Ident, &__jule_any_type5)}));
									_1aab48c35_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1ab7c9860;
								};
							}
							_iter_next_1ab7c9860:;
							++it;
							goto _iter_begin_1ab7c9860;
						}
						_iter_end_1ab7c9860:;
					};
				};
			}
			_iter_next_1ab7c8892:;
			++it;
			goto _iter_begin_1ab7c8892;
		}
		_iter_end_1ab7c8892:;
	};
}



inline void _1aab55bed_checkEnumItemsStr(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaac8b3d_Enum>* _128142_e) {
	jule::Ptr<_1aabbdb12_Eval> _128217_eval = _1aab50d6e_eval(_self_, jule::Trait<_1aac21d30_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_128142_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab799b4e:;
		if (it != expr_end) {
			jule::Ptr<_1aaac80c1_EnumItem> _128321_item = *it;
			{
				if (_1aaac8478_AutoExpr(_128321_item.ptr())) {
					_128321_item.get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Constant=static__1c4cbdb3d_NewStr(_128321_item.get()._field_Ident)})});
					_128321_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_128321_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1aabbbe1d_Data> _129225_d = _1aabdbed7_evalExpr(_128217_eval, _128321_item.get()._field_Value.get()._field_Expr);;
					if ((_129225_d == nullptr)) {
						goto _iter_next_1ab799b4e;
					};
					if ((!(_1aabbc7e2_IsConst(_129225_d.ptr())))) {
						_1aab488c2_pushErr(_self_.ptr(), _128321_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1aab513d0_checkAssignType(_self_, false, &((*(_128142_e)).get()._field_Kind.get()._field_Kind), &(_129225_d), _128321_item.get()._field_Token);
					_128321_item.get()._field_Value.get()._field_Data=_129225_d;
				};
			}
			_iter_next_1ab799b4e:;
			++it;
			goto _iter_begin_1ab799b4e;
		}
		_iter_end_1ab799b4e:;
	};
}



inline void _1ab7a442d_checkEnumItemInt(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aabbdb12_Eval>* _130746_eval, jule::Ptr<_1aaac8b3d_Enum>* _130764_e, jule::Ptr<_1aac05066_Prim>* _130775_prim, jule::Ptr<_1aaac80c1_EnumItem>* _130793_item, jule::U64* _1307115_n) {
	if (_1aaac8478_AutoExpr((*(_130793_item)).ptr())) {
		(*(_130793_item)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		{
			
{
				_case_begin_1ab7a7189:;
				{
					(*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1c4cbd5aa_NewU64((*(_1307115_n)));
				}
			}
			_match_end_1ab7a70ac:;
		};
		(*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1aabbbe1d_Data> _132221_d = _1aabdbed7_evalExpr((*(_130746_eval)), (*(_130793_item)).get()._field_Value.get()._field_Expr);;
		if ((_132221_d == nullptr)) {
			return;;
		};
		if ((!(_1aabbc7e2_IsConst(_132221_d.ptr())))) {
			_1aab488c2_pushErr(_self_.ptr(), (*(_130793_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1aab513d0_checkAssignType(_self_, false, &((*(_130764_e)).get()._field_Kind.get()._field_Kind), &(_132221_d), (*(_130793_item)).get()._field_Token);
		(*(_130793_item)).get()._field_Value.get()._field_Data=_132221_d;
		{
			
{
				_case_begin_1ab7aa412:;
				{
					(*(_1307115_n))=static_cast<jule::U64>(_1c4cbea0c_ReadU64((*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ab7aa324:;
		};
	};
}

inline void _1ab7b1c87_checkEnumItemInt(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aabbdb12_Eval>* _130746_eval, jule::Ptr<_1aaac8b3d_Enum>* _130764_e, jule::Ptr<_1aac05066_Prim>* _130775_prim, jule::Ptr<_1aaac80c1_EnumItem>* _130793_item, jule::I64* _1307115_n) {
	if (_1aaac8478_AutoExpr((*(_130793_item)).ptr())) {
		(*(_130793_item)).get()._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()});
		{
			
{
				_case_begin_1ab7b48d3:;
				{
					(*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1c4cbd2e1_NewI64((*(_1307115_n)));
				}
			}
			_match_end_1ab7b487d:;
		};
		(*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1aabbbe1d_Data> _132221_d = _1aabdbed7_evalExpr((*(_130746_eval)), (*(_130793_item)).get()._field_Value.get()._field_Expr);;
		if ((_132221_d == nullptr)) {
			return;;
		};
		if ((!(_1aabbc7e2_IsConst(_132221_d.ptr())))) {
			_1aab488c2_pushErr(_self_.ptr(), (*(_130793_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1aab513d0_checkAssignType(_self_, false, &((*(_130764_e)).get()._field_Kind.get()._field_Kind), &(_132221_d), (*(_130793_item)).get()._field_Token);
		(*(_130793_item)).get()._field_Value.get()._field_Data=_132221_d;
		{
			
{
				_case_begin_1ab7b7ce3:;
				{
					(*(_1307115_n))=static_cast<jule::I64>(_1c4cbe776_ReadI64((*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ab7b7c7c:;
		};
	};
}



inline void _1ab7a0a01_checkEnumItemsInt1(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aac05066_Prim>* _134244_prim, jule::Ptr<_1aaac8b3d_Enum>* _134262_e) {
	jule::U64 _134317_max = 0LLU;;
	{
		
{
			_case_begin_1ab7a28e3:;
			{
				_134317_max=static_cast<jule::U64>(_1c4cb64a4_MaxU(_1aac053a7_Str((*(_134244_prim)).ptr())));
			}
		}
		_match_end_1ab7a26d4:;
	};
	jule::Ptr<_1aabbdb12_Eval> _135317_eval = _1aab50d6e_eval(_self_, jule::Trait<_1aac21d30_Lookup>(_self_, 3));;
	jule::U64 _135417_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1aaac80c1_EnumItem> _135517_first = (*(_134262_e)).get()._field_Items[0LL];;
	_1ab7a442d_checkEnumItemInt(_self_, &(_135317_eval), _134262_e, _134244_prim, &(_135517_first), &(_135417_n));
	if ((_135517_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ab7a35e7:;
				{
					_135417_n=static_cast<jule::U64>(_1c4cc07cc_AsU64(_135517_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ab7aa379:;
		};
	};
	{
		auto expr = (*(_134262_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab7a5660:;
		if (it != expr_end) {
			jule::Ptr<_1aaac80c1_EnumItem> _136721_item = *it;
			{
				if (((_1aaac8478_AutoExpr(_136721_item.ptr()) && (_135417_n > 0LLU)) && ((_134317_max - _135417_n) <= 0LLU))) {
					_1aab488c2_pushErr(_self_.ptr(), _136721_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ab7a5660;
				};
				(_135417_n)++;
				_1ab7a442d_checkEnumItemInt(_self_, &(_135317_eval), _134262_e, _134244_prim, &(_136721_item), &(_135417_n));
			}
			_iter_next_1ab7a5660:;
			++it;
			goto _iter_begin_1ab7a5660;
		}
		_iter_end_1ab7a5660:;
	};
}

inline void _1ab7a0c87_checkEnumItemsInt1(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aac05066_Prim>* _134244_prim, jule::Ptr<_1aaac8b3d_Enum>* _134262_e) {
	jule::I64 _134317_max = 0LL;;
	{
		
{
			_case_begin_1ab7b003d:;
			{
				_134317_max=static_cast<jule::I64>(_1c4cb61da_MaxI(_1aac053a7_Str((*(_134244_prim)).ptr())));
			}
		}
		_match_end_1ab7aeda6:;
	};
	jule::Ptr<_1aabbdb12_Eval> _135317_eval = _1aab50d6e_eval(_self_, jule::Trait<_1aac21d30_Lookup>(_self_, 3));;
	jule::I64 _135417_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1aaac80c1_EnumItem> _135517_first = (*(_134262_e)).get()._field_Items[0LL];;
	_1ab7b1c87_checkEnumItemInt(_self_, &(_135317_eval), _134262_e, _134244_prim, &(_135517_first), &(_135417_n));
	if ((_135517_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1ab7b26d3:;
				{
					_135417_n=static_cast<jule::I64>(_1c4cc0546_AsI64(_135517_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1ab7b0db8:;
		};
	};
	{
		auto expr = (*(_134262_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1ab7b3591:;
		if (it != expr_end) {
			jule::Ptr<_1aaac80c1_EnumItem> _136721_item = *it;
			{
				if (((_1aaac8478_AutoExpr(_136721_item.ptr()) && (_135417_n > 0LL)) && ((_134317_max - _135417_n) <= 0LL))) {
					_1aab488c2_pushErr(_self_.ptr(), _136721_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1ab7b3591;
				};
				(_135417_n)++;
				_1ab7b1c87_checkEnumItemInt(_self_, &(_135317_eval), _134262_e, _134244_prim, &(_136721_item), &(_135417_n));
			}
			_iter_next_1ab7b3591:;
			++it;
			goto _iter_begin_1ab7b3591;
		}
		_iter_end_1ab7b3591:;
	};
}



inline void _1aab5689c_checkEnumItemsInt(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaac8b3d_Enum>* _137742_e) {
	jule::Ptr<_1aac05066_Prim> _137813_prim = _1aabeeadd_Prim((*(_137742_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_1c4cbbbe6_IsSigInt(_137813_prim.get()._field_Kind)) {
			_case_begin_1ab7acce9:;
			{
				_1ab7a0c87_checkEnumItemsInt1(_self_, &(_137813_prim), _137742_e);
			}
		}
		else {
			_case_begin_1ab7a034c:;
			{
				_1ab7a0a01_checkEnumItemsInt1(_self_, &(_137813_prim), _137742_e);
			}
		}
		_match_end_1ab7a02d6:;
	};
}



inline void _1aab56b55_checkEnumDecl(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaac8b3d_Enum>* _138738_e) {
	if (_1c3e3d055_IsIgnoreIdent((*(_138738_e)).get()._field_Ident)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_138738_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aab495d7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_138738_e)))), &((*(_138738_e)).get()._field_Ident), false)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_138738_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_138738_e)).get()._field_Ident, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_138738_e)).get()._field_Items.len() == 0LL)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_138738_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_138738_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1ab7bd07e_checkEnumItemsDup(_self_.ptr(), (*(_138738_e)).get()._field_Items);
	if (((*(_138738_e)).get()._field_Kind != nullptr)) {
		if ((!(_1aab4e543_checkType(_self_, &((*(_138738_e)).get()._field_Kind), jule::Trait<_1aac21d30_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_138738_e)).get()._field_Kind=_1aacdb89a_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	jule::Ptr<_1aac05066_Prim> _141117_t = _1aabeeadd_Prim((*(_138738_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_141117_t == nullptr)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_138738_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1aac084ed_IsStr(_141117_t.ptr())) {
			_case_begin_1ab7c386a:;
			{
				_1aab55bed_checkEnumItemsStr(_self_, _138738_e);
			}
		}
		else if (_1c4cbc2bd_IsInt(_1aac053a7_Str(_141117_t.ptr()))) {
			_case_begin_1ab7c356d:;
			{
				_1aab5689c_checkEnumItemsInt(_self_, _138738_e);
			}
		}
		else {
			_case_begin_1ab7c3507:;
			{
				_1aab488c2_pushErr(_self_.ptr(), (*(_138738_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1ab7c2d64:;
	};
}



inline void _1aab56e0d_checkTypeEnumDecl(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaaca348_TypeEnum>* _142842_e) {
	if (_1c3e3d055_IsIgnoreIdent((*(_142842_e)).get()._field_Ident)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_142842_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aab495d7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_142842_e)))), &((*(_142842_e)).get()._field_Ident), false)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_142842_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_142842_e)).get()._field_Ident, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_142842_e)).get()._field_Items.len() == 0LL)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_142842_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_142842_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1ab7c75e9_checkEnumItemsDup(_self_.ptr(), (*(_142842_e)).get()._field_Items);
	{
		auto expr = &((*(_142842_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7c4e76:;
		if (it != expr_end) {
			jule::Ptr<_1aaac9c71_TypeEnumItem> _144221_item = *it;
			{
				if ((_144221_item.get()._field_Kind == nullptr)) {
					_1aab488c2_pushErr(_self_.ptr(), _144221_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1ab7c4e76;
				};
				jule::Bool _144717_ok = _1aab4e543_checkType(_self_, &(_144221_item.get()._field_Kind), jule::Trait<_1aac21d30_Lookup>(_self_, 3));;
				if ((!(_144717_ok))) {
					goto _iter_next_1ab7c4e76;
				};
				jule::Ptr<_1aac05066_Prim> _145117_p = _1aabeeadd_Prim(_144221_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_145117_p != nullptr) && _1aac08784_IsAny(_145117_p.ptr()))) {
					_1aab488c2_pushErr(_self_.ptr(), _144221_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1ab7c4e76:;
			++it;
			goto _iter_begin_1ab7c4e76;
		}
		_iter_end_1ab7c4e76:;
	};
	if (((*(_142842_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1aaac9c71_TypeEnumItem> _145721_item = (*(_142842_e)).get()._field_Items[0LL];;
		_1aabec1e5_TypeKind _145817_tk = _1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>((*(_142842_e)), 4)};;
		if (((_145721_item.get()._field_Kind.get()._field_Kind != nullptr) && _1aabec8ee_Equal(_145721_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1aabec1e5_TypeKind>)((&(_145817_tk))))))) {
			_1aab488c2_pushErr(_self_.ptr(), _145721_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1aaaca689_Str((*(_142842_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _1aab57194_checkEnumDecls(jule::Ptr<_1aab45c87_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7d0ee8:;
		if (it != expr_end) {
			jule::Ptr<_1aaac8b3d_Enum> _146921_e = *it;
			{
				_1aab56b55_checkEnumDecl(_self_, &(_146921_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab7d0ee8:;
			++it;
			goto _iter_begin_1ab7d0ee8;
		}
		_iter_end_1ab7d0ee8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aab5742a_checkTypeEnumDecls(jule::Ptr<_1aab45c87_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7d17e0:;
		if (it != expr_end) {
			jule::Ptr<_1aaaca348_TypeEnum> _148121_e = *it;
			{
				_1aab56e0d_checkTypeEnumDecl(_self_, &(_148121_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab7d17e0:;
			++it;
			goto _iter_begin_1ab7d17e0;
		}
		_iter_end_1ab7d17e0:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aab5776b_checkDeclGenerics(_1aab45c87_Sema* _self_, jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>>* _149137_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149137_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7d3814:;
		if (it != expr_end) {
			jule::I32 _149313_i = it - expr->begin();
			jule::Ptr<_1aaa838c8_GenericDecl> *_149316_g = it;
			{
				if (_1c3e3d055_IsIgnoreIdent((*(_149316_g)).get()._field_Ident)) {
					_1aab488c2_pushErr(_self_, (*(_149316_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1ab7d3814;
				};
				_julec_label_1ab7d4936:;
				{
					auto expr = _149137_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7d4e86:;
					if (it != expr_end) {
						jule::I32 _150217_j = it - expr->begin();
						jule::Ptr<_1aaa838c8_GenericDecl> *_150220_ct = it;
						{
							{
								
								if ((_150217_j >= _149313_i)) {
									_case_begin_1ab7d5a47:;
									{
										goto _iter_end_1ab7d4e86;
									}
								}
								else if (((*(_149316_g)).get()._field_Ident == (*(_150220_ct)).get()._field_Ident)) {
									_case_begin_1ab7d5abe:;
									{
										_1aab488c2_pushErr(_self_, (*(_149316_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_149316_g)).get()._field_Ident, &__jule_any_type5)}));
										_1aab48c35_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1ab7d4e86;
									}
								}
								_match_end_1ab7d5948:;
							};
						}
						_iter_next_1ab7d4e86:;
						++it;
						_150217_j++;
						goto _iter_begin_1ab7d4e86;
					}
					_iter_end_1ab7d4e86:;
				};
			}
			_iter_next_1ab7d3814:;
			++it;
			_149313_i++;
			goto _iter_begin_1ab7d3814;
		}
		_iter_end_1ab7d3814:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab57aac_checkFnDeclParamsDup(_1aab45c87_Sema* _self_, jule::Ptr<_1aaab3199_Fn>* _151840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1ab7d6570:;
	{
		auto expr = &((*(_151840_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7d797d:;
		if (it != expr_end) {
			jule::I32 _152113_i = it - expr->begin();
			jule::Ptr<_1aaaab868_Param> *_152116_p = it;
			{
				{
					auto expr = &((*(_151840_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7d7917:;
					if (it != expr_end) {
						jule::Ptr<_1aaa838c8_GenericDecl> *_152320_g = it;
						{
							if (((*(_152116_p)).get()._field_Ident == (*(_152320_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_1aab488c2_pushErr(_self_, (*(_152116_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_152116_p)).get()._field_Ident, &__jule_any_type5)}));
								_1aab48c35_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1ab7d797d;
							};
						}
						_iter_next_1ab7d7917:;
						++it;
						goto _iter_begin_1ab7d7917;
					}
					_iter_end_1ab7d7917:;
				};
				_julec_label_1ab7d8495:;
				{
					auto expr = &((*(_151840_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7d9078:;
					if (it != expr_end) {
						jule::I32 _153317_j = it - expr->begin();
						jule::Ptr<_1aaaab868_Param> *_153320_jp = it;
						{
							{
								
								if ((_153317_j >= _152113_i)) {
									_case_begin_1ab7da80a:;
									{
										goto _iter_end_1ab7d9078;
									}
								}
								else if (_1c3e3d055_IsIgnoreIdent((*(_152116_p)).get()._field_Ident) || _1c3e3d055_IsIgnoreIdent((*(_153320_jp)).get()._field_Ident) || _1c3e3d31e_IsAnonIdent((*(_152116_p)).get()._field_Ident) || _1c3e3d31e_IsAnonIdent((*(_153320_jp)).get()._field_Ident)) {
									_case_begin_1ab7da882:;
									{
										goto _iter_end_1ab7d9078;
									}
								}
								else if (((*(_152116_p)).get()._field_Ident == (*(_153320_jp)).get()._field_Ident)) {
									_case_begin_1ab7da909:;
									{
										__jule_func_result=false;
										_1aab488c2_pushErr(_self_, (*(_152116_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_152116_p)).get()._field_Ident, &__jule_any_type5)}));
										_1aab48c35_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1ab7d797d;
									}
								}
								_match_end_1ab7da6ea:;
							};
						}
						_iter_next_1ab7d9078:;
						++it;
						_153317_j++;
						goto _iter_begin_1ab7d9078;
					}
					_iter_end_1ab7d9078:;
				};
			}
			_iter_next_1ab7d797d:;
			++it;
			_152113_i++;
			goto _iter_begin_1ab7d797d;
		}
		_iter_end_1ab7d797d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab57ded_checkFnDeclResultDup(_1aab45c87_Sema* _self_, jule::Ptr<_1aaab3199_Fn>* _155540_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1aaab361c_IsVoid((*(_155540_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_155540_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7dd2e1:;
		if (it != expr_end) {
			jule::I32 _156213_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> *_156216_v = it;
			{
				if ((_1c3e3d055_IsIgnoreIdent((*(_156216_v)).get()._field_Kind) || _1c3e3d31e_IsAnonIdent((*(_156216_v)).get()._field_Kind))) {
					goto _iter_next_1ab7dd2e1;
				};
				{
					auto expr = &((*(_155540_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7de259:;
					if (it != expr_end) {
						jule::Ptr<_1aaa838c8_GenericDecl> *_156720_g = it;
						{
							if (((*(_156216_v)).get()._field_Kind == (*(_156720_g)).get()._field_Ident)) {
								goto _julec_label_1ab7e0579;
							};
						}
						_iter_next_1ab7de259:;
						++it;
						goto _iter_begin_1ab7de259;
					}
					_iter_end_1ab7de259:;
				};
				{
					auto expr = &((*(_155540_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7e0843:;
					if (it != expr_end) {
						jule::Ptr<_1aaaab868_Param> *_157320_p = it;
						{
							if (((*(_156216_v)).get()._field_Kind == (*(_157320_p)).get()._field_Ident)) {
								goto _julec_label_1ab7e0579;
							};
						}
						_iter_next_1ab7e0843:;
						++it;
						goto _iter_begin_1ab7e0843;
					}
					_iter_end_1ab7e0843:;
				};
				_julec_label_1ab7e1987:;
				{
					auto expr = &((*(_155540_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7e1734:;
					if (it != expr_end) {
						jule::I32 _158117_j = it - expr->begin();
						jule::Ptr<_1c3e3a5e6_Token> *_158120_jv = it;
						{
							{
								
								if ((_158117_j >= _156213_i)) {
									_case_begin_1ab7e2900:;
									{
										goto _iter_end_1ab7e1734;
									}
								}
								else if (((*(_158120_jv)).get()._field_Kind == (*(_156216_v)).get()._field_Kind)) {
									_case_begin_1ab7e2977:;
									{
										goto _julec_label_1ab7e0579;
									}
								}
								_match_end_1ab7e27e0:;
							};
						}
						_iter_next_1ab7e1734:;
						++it;
						_158117_j++;
						goto _iter_begin_1ab7e1734;
					}
					_iter_end_1ab7e1734:;
				};
				goto _iter_next_1ab7dd2e1;
				_julec_label_1ab7e0579:;
				_1aab488c2_pushErr(_self_, (*(_156216_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_156216_v)).get()._field_Kind, &__jule_any_type5)}));
				_1aab48c35_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1ab7dd2e1:;
			++it;
			_156213_i++;
			goto _iter_begin_1ab7dd2e1;
		}
		_iter_end_1ab7dd2e1:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab5823e_checkFnVariadicParam(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab3199_Fn>* _160045_f) {
	if (((*(_160045_f)).get()._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1aaaab868_Param> _160417_param = (*(_160045_f)).get()._field_Params[((*(_160045_f)).get()._field_Params.len() - 1LL)];;
	if ((_160417_param.get()._field_Variadic && _160417_param.get()._field_Reference)) {
		_1aab488c2_pushErr(_self_.ptr(), _160417_param.get()._field_Token, jule::Str("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1aab584e7_checkFnDeclPrototype(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab3199_Fn>* _161345_f) {
	if (((*(_161345_f)).get()._field_Exceptional && (*(_161345_f)).get()._field_Binded)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_161345_f)).get()._field_Token, jule::Str("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_161345_f)).get()._field_Exceptional) {
		if (_1aaab3b39_IsEntryPoint((*(_161345_f)).ptr())) {
			_1aab488c2_pushErr(_self_.ptr(), (*(_161345_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1aaab3dc0_IsInit((*(_161345_f)).ptr())) {
			_1aab488c2_pushErr(_self_.ptr(), (*(_161345_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1aab5776b_checkDeclGenerics(_self_.ptr(), &((*(_161345_f)).get()._field_Generics))))) {
			_case_begin_1ab7e754d:;
		}
		else if ((!(_1aab57aac_checkFnDeclParamsDup(_self_.ptr(), _161345_f)))) {
			_case_begin_1ab7e75b4:;
		}
		else if ((!(_1aab57ded_checkFnDeclResultDup(_self_.ptr(), _161345_f)))) {
			_case_begin_1ab7e762a:;
		}
		else if ((!(_1aab5823e_checkFnVariadicParam(_self_, _161345_f)))) {
			_case_begin_1ab7e8829:;
		}
		_match_end_1ab7e830c:;
	};
}



inline jule::Bool _1aab5899d_catchTraitInheritCycle(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaac6443_Trait> _163542_t1, jule::Ptr<_1aaac6443_Trait> _163558_t2, _1c38d3b83_StrBuilder* _163575_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &(_163558_t2.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7ea52e:;
		if (it != expr_end) {
			jule::Ptr<_1aac0465e_TypeSymbol> _163721_i = *it;
			{
				if ((_163721_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1ab7ea52e;
				};
				jule::Ptr<_1aaac6443_Trait> _164121_t3 = _1aac013e7_Trait(_163721_i.get()._field_Kind.ptr());;
				if ((_163542_t1 == _164121_t3)) {
					_1aab5d72d_pushCycleError(_self_.ptr(), &(_163558_t2.get()._field_Ident), &(_164121_t3.get()._field_Ident), _163575_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1aab5899d_catchTraitInheritCycle(_self_, _163542_t1, _164121_t3, _163575_message)))) {
					_1aab5d72d_pushCycleError(_self_.ptr(), &(_163558_t2.get()._field_Ident), &(_164121_t3.get()._field_Ident), _163575_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab7ea52e:;
			++it;
			goto _iter_begin_1ab7ea52e;
		}
		_iter_end_1ab7ea52e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab58cde__checkTraitDeclInherits(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaac6443_Trait>* _165448_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_165448_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab7ed147:;
		if (it != expr_end) {
			jule::I32 _165614_i = it - expr->begin();
			jule::Ptr<_1aac0465e_TypeSymbol> _165621_it = *it;
			{
				if ((!(_1aab4e543_checkType(_self_, &(_165621_it), jule::Trait<_1aac21d30_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1ab7ed147;
				};
				jule::Ptr<_1aaac6443_Trait> _166121_t2 = _1aac013e7_Trait(_165621_it.get()._field_Kind.ptr());;
				if ((_166121_t2 == nullptr)) {
					_1aab488c2_pushErr(_self_.ptr(), _165621_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*(_165448_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_1aabec5ad_Str(_165621_it.get()._field_Kind.ptr()), &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1ab7ed147;
				};
				{
					auto expr = &((*(_165448_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab7eec70:;
					if (it != expr_end) {
						jule::I32 _166717_j = it - expr->begin();
						jule::Ptr<_1aac0465e_TypeSymbol> _166720_it2 = *it;
						{
							if ((_166717_j >= _165614_i)) {
								goto _iter_end_1ab7eec70;
							};
							if (((_166720_it2.get()._field_Kind != nullptr) && _1aabec8ee_Equal(_165621_it.get()._field_Kind, _166720_it2.get()._field_Kind))) {
								_1aab488c2_pushErr(_self_.ptr(), _165621_it.get()._field_Decl.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_166121_t2.get()._field_Ident, &__jule_any_type5)}));
								__jule_func_result=false;
								goto _iter_end_1ab7eec70;
							};
						}
						_iter_next_1ab7eec70:;
						++it;
						_166717_j++;
						goto _iter_begin_1ab7eec70;
					}
					_iter_end_1ab7eec70:;
				};
				if (((*(_165448_t)) == _166121_t2)) {
					_1aab488c2_pushErr(_self_.ptr(), _165621_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_165448_t)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				} else {
					_1c38d3b83_StrBuilder _168125_message = static__1c38d3ea2_New(64LL);;
					__jule_func_result=(__jule_func_result && _1aab5899d_catchTraitInheritCycle(_self_, (*(_165448_t)), _166121_t2, &(_168125_message)));
					if ((_1c38dd6c6_Len(&_168125_message) > 0LL)) {
						jule::Str _168429_errMsg = _1c38dd242_Str(&_168125_message);;
						_1c38dd440_Clear(&_168125_message);
						_1aab5d72d_pushCycleError(_self_.ptr(), &((*(_165448_t)).get()._field_Ident), &(_166121_t2.get()._field_Ident), &(_168125_message));
						_168429_errMsg+=_1c38dd242_Str(&_168125_message);
						_1aab488c2_pushErr(_self_.ptr(), _165621_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_168429_errMsg, &__jule_any_type5)}));
					};
				};
			}
			_iter_next_1ab7ed147:;
			++it;
			_165614_i++;
			goto _iter_begin_1ab7ed147;
		}
		_iter_end_1ab7ed147:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1aab59097_checkTraitDeclInherits(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaac6443_Trait>* _169547_t) {
	{
		auto expr = &((*(_169547_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab80357b:;
		if (it != expr_end) {
			jule::I32 _169614_i = it - expr->begin();
			jule::Ptr<_1aac0465e_TypeSymbol> _169621_it = *it;
			{
				jule::Ptr<_1aaac6443_Trait> _169721_t1 = _1aac013e7_Trait(_169621_it.get()._field_Kind.ptr());;
				{
					auto expr = &((*(_169547_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab806d87:;
					if (it != expr_end) {
						jule::I32 _169818_j = it - expr->begin();
						jule::Ptr<_1aac0465e_TypeSymbol> _169825_it2 = *it;
						{
							if ((_169818_j == _169614_i)) {
								goto _iter_next_1ab806d87;
							};
							jule::Ptr<_1aaac6443_Trait> _170225_t2 = _1aac013e7_Trait(_169825_it2.get()._field_Kind.ptr());;
							{
								auto expr = &(_169721_t1.get()._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1ab806d21:;
								if (it != expr_end) {
									jule::Ptr<_1aaab3199_Fn> _170329_t1m = *it;
									{
										jule::Ptr<_1aaab3199_Fn> _170429_t2m = _1aaac70e2_FindMethod(_170225_t2.ptr(), _170329_t1m.get()._field_Ident);;
										if ((_170429_t2m == nullptr)) {
											goto _iter_next_1ab806d21;
										};
										jule::Ptr<_1aaab609d_FnIns> _170825_t1f = _1aab52579_getTraitCheckFnKind(_self_, &(_170329_t1m));;
										jule::Ptr<_1aaab609d_FnIns> _170925_t2f = _1aab52579_getTraitCheckFnKind(_self_, &(_170429_t2m));;
										if ((!(_1aaab7016_equalTrait(_170825_t1f, &(_170925_t2f))))) {
											_1aab488c2_pushErr(_self_.ptr(), _169621_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*(_169547_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_170225_t2.get()._field_Ident, &__jule_any_type5),jule::Any(_1aaab7e4b_GetKindStr(_170825_t1f.ptr(), true), &__jule_any_type5),jule::Any(_1aaab7e4b_GetKindStr(_170925_t2f.ptr(), true), &__jule_any_type5)}));
											return;;
										};
									}
									_iter_next_1ab806d21:;
									++it;
									goto _iter_begin_1ab806d21;
								}
								_iter_end_1ab806d21:;
							};
						}
						_iter_next_1ab806d87:;
						++it;
						_169818_j++;
						goto _iter_begin_1ab806d87;
					}
					_iter_end_1ab806d87:;
				};
			}
			_iter_next_1ab80357b:;
			++it;
			_169614_i++;
			goto _iter_begin_1ab80357b;
		}
		_iter_end_1ab80357b:;
	};
}



inline void _1aab59350_checkTraitDeclMethod(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab3199_Fn>* _172045_f) {
	if (_1c3e3d055_IsIgnoreIdent((*(_172045_f)).get()._field_Ident)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_172045_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1c3e3d31e_IsAnonIdent((*(_172045_f)).get()._field_Ident)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_172045_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*(_172045_f)).get()._field_sema=_self_;
	_1aab584e7_checkFnDeclPrototype(_self_, _172045_f);
	jule::Ptr<_1aaab609d_FnIns> _172817_ins = _1aaab4909_instance((*(_172045_f)));;
	_1aab539cb_reloadFnInsTypes(_self_, _172817_ins);
	_172817_ins.get()._field_reloaded=true;
	_1aaab4c17_appendInstance((*(_172045_f)).ptr(), &(_172817_ins));
}



inline void _1aab59608_checkTraitDeclMethods(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaac6443_Trait>* _173446_t) {
	{
		auto expr = &((*(_173446_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab80d60d:;
		if (it != expr_end) {
			jule::I32 _173514_i = it - expr->begin();
			jule::Ptr<_1aaab3199_Fn> _173521_f = *it;
			{
				_1aab59350_checkTraitDeclMethod(_self_, &(_173521_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1aaac7774_findMethodInherit((*(_173446_t)).ptr(), &(_173521_f.get()._field_Ident)) != nullptr)) {
					_1aab488c2_pushErr(_self_.ptr(), _173521_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_173521_f.get()._field_Ident, &__jule_any_type5)}));
					_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1ab80d60d;
				};
				_julec_label_1ab8100c1:;
				{
					auto expr = &((*(_173446_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ab80ed5c:;
					if (it != expr_end) {
						jule::I32 _175117_j = it - expr->begin();
						jule::Ptr<_1aaab3199_Fn> _175120_jf = *it;
						{
							{
								
								if ((_175117_j >= _173514_i)) {
									_case_begin_1ab811798:;
									{
										goto _iter_end_1ab80ed5c;
									}
								}
								else if ((_173521_f.get()._field_Ident == _175120_jf.get()._field_Ident)) {
									_case_begin_1ab811820:;
									{
										_1aab488c2_pushErr(_self_.ptr(), _173521_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_173521_f.get()._field_Ident, &__jule_any_type5)}));
										_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1ab80ed5c;
									}
								}
								_match_end_1ab811688:;
							};
						}
						_iter_next_1ab80ed5c:;
						++it;
						_175117_j++;
						goto _iter_begin_1ab80ed5c;
					}
					_iter_end_1ab80ed5c:;
				};
			}
			_iter_next_1ab80d60d:;
			++it;
			_173514_i++;
			goto _iter_begin_1ab80d60d;
		}
		_iter_end_1ab80d60d:;
	};
}



inline void _1aab598b1_checkTraitDecl(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaac6443_Trait>* _177039_t) {
	if (_1c3e3d055_IsIgnoreIdent((*(_177039_t)).get()._field_Ident)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_177039_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aab495d7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_177039_t)))), &((*(_177039_t)).get()._field_Ident), false)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_177039_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_177039_t)).get()._field_Ident, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1aab59097_checkTraitDeclInherits(_self_, _177039_t);
	_1aab59608_checkTraitDeclMethods(_self_, _177039_t);
}



inline jule::Bool _1aab59b47_checkTraitDecls(jule::Ptr<_1aab45c87_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8152d5:;
		if (it != expr_end) {
			jule::Ptr<_1aaac6443_Trait> _178421_t = *it;
			{
				_1aab598b1_checkTraitDecl(_self_, &(_178421_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1ab8152d5:;
			++it;
			goto _iter_begin_1ab8152d5;
		}
		_iter_end_1ab8152d5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aab5a043_checkTraitImplMethods(_1aab45c87_Sema* _self_, jule::Ptr<_1aaac6443_Trait>* _179445_base, jule::Ptr<_1aaaed3b0_Impl>* _179460_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_179460_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8169ce:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> *_179616_f = it;
			{
				if ((_1aaac70e2_FindMethod((*(_179445_base)).ptr(), (*(_179616_f)).get()._field_Ident) == nullptr)) {
					_1aab488c2_pushErr(_self_, (*(_179616_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_179445_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_179616_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1ab8169ce:;
			++it;
			goto _iter_begin_1ab8169ce;
		}
		_iter_end_1ab8169ce:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab5a43e_implToStruct(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa972b0_Struct>* _180537_dest, jule::Ptr<_1aaaed3b0_Impl>* _180557_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_180557_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab8189c0:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _180921_f = *it;
			{
				if (((_1aaa97e3c_FindMethod((*(_180537_dest)).ptr(), _180921_f.get()._field_Ident, _180921_f.get()._field_Statically) != nullptr) || (_1aaa985be_FindField((*(_180537_dest)).ptr(), _180921_f.get()._field_Ident) != nullptr))) {
					_1aab488c2_pushErr(_self_.ptr(), _180921_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_180537_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_180921_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1ab8189c0;
				};
				if ((((*(_180537_dest)).get()._field_Generics.len() > 0LL) && (_180921_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_180921_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ab81ad13:;
						if (it != expr_end) {
							jule::Ptr<_1aaa838c8_GenericDecl> _181724_fg = *it;
							{
								{
									auto expr = &((*(_180537_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1ab81b5c7:;
									if (it != expr_end) {
										jule::Ptr<_1aaa838c8_GenericDecl> _181828_dg = *it;
										{
											if ((_181724_fg.get()._field_Ident == _181828_dg.get()._field_Ident)) {
												_1aab488c2_pushErr(_self_.ptr(), _181724_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1ab81b5c7:;
										++it;
										goto _iter_begin_1ab81b5c7;
									}
									_iter_end_1ab81b5c7:;
								};
							}
							_iter_next_1ab81ad13:;
							++it;
							goto _iter_begin_1ab81ad13;
						}
						_iter_end_1ab81ad13:;
					};
				};
				_1aab4994a_checkDirectives(_self_, &(_180921_f.get()._field_Directives), jule::Any(_180921_f, &__jule_any_type65));
				_180921_f.get()._field_sema=_self_;
				_180921_f.get()._field_Owner=(*(_180537_dest));
				{ jule::Slice<jule::Ptr<_1aaab3199_Fn>> &__jule_push_dest = (*(_180537_dest)).get()._field_Methods; __jule_push_dest.push(_180921_f); };
			}
			_iter_next_1ab8189c0:;
			++it;
			goto _iter_begin_1ab8189c0;
		}
		_iter_end_1ab8189c0:;
	};
	{
		auto expr = &((*(_180557_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ab81889e:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> _183421_v = *it;
			{
				;
				if (((_1aaa97e3c_FindMethod((*(_180537_dest)).ptr(), _183421_v.get()._field_Ident, true) != nullptr) || (_1aaa9827d_FindStatic((*(_180537_dest)).ptr(), _183421_v.get()._field_Ident) != nullptr))) {
					_1aab488c2_pushErr(_self_.ptr(), _183421_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_180537_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_183421_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1ab81889e;
				};
				{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = (*(_180537_dest)).get()._field_Statics; __jule_push_dest.push(_183421_v); };
			}
			_iter_next_1ab81889e:;
			++it;
			goto _iter_begin_1ab81889e;
		}
		_iter_end_1ab81889e:;
	};
	return __jule_func_result;;
}



inline void _1aab5a6e7_implTrait(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaaed3b0_Impl>* _184734_decl) {
	jule::Ptr<_1aabec1e5_TypeKind> _184817_base_t = _1aab5017b_selectType(_self_, &((*(_184734_decl)).get()._field_Base));;
	if ((_184817_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1aaac6443_Trait> _185217_base = _1aac013e7_Trait(_184817_base_t.ptr());;
	if ((_185217_base == nullptr)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_184734_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_184817_base_t.ptr()), &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aabec1e5_TypeKind> _185917_destT = _1aab5017b_selectType(_self_, &((*(_184734_decl)).get()._field_Dest));;
	if ((_185917_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1aaa9a390_StructIns> _186317_destS = _1aac01161_Struct(_185917_destT.ptr());;
	if ((_186317_destS == nullptr)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_184734_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_185917_destT.ptr()), &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aaa972b0_Struct> _187017_dest = _186317_destS.get()._field_Decl;;
	if ((_1c3e41531_Dir(_187017_dest.get()._field_Token.get()._field_File.ptr()) != _1c3e41531_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_184734_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1aab66c53_pushImplemented(_185217_base, &(_187017_dest));
	_1aab6703e_pushImplements(&(_187017_dest), _185217_base);
	if (((*(_184734_decl)).get()._field_Statics.len() > 0LL)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_184734_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1aab5a043_checkTraitImplMethods(_self_.ptr(), &(_185217_base), _184734_decl)))) {
			_case_begin_1a84cc6cb:;
		}
		else if ((!(_1aab5a43e_implToStruct(_self_, &(_187017_dest), _184734_decl)))) {
			_case_begin_1a84cc753:;
		}
		_match_end_1a84caae7:;
	};
}



inline void _1aab5a9a0_implStruct(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaaed3b0_Impl>* _189035_decl) {
	jule::Ptr<_1aabec1e5_TypeKind> _189117_destT = _1aab5017b_selectType(_self_, &((*(_189035_decl)).get()._field_Dest));;
	if ((_189117_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1aaa9a390_StructIns> _189517_destS = _1aac01161_Struct(_189117_destT.ptr());;
	if ((_189517_destS == nullptr)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_189035_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_189117_destT.ptr()), &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aaa972b0_Struct> _190217_dest = _189517_destS.get()._field_Decl;;
	if ((_1c3e41531_Dir(_190217_dest.get()._field_Token.get()._field_File.ptr()) != _1c3e41531_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_189035_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1aab5a43e_implToStruct(_self_, &(_190217_dest), _189035_decl)))) {
			_case_begin_1a84d1bdb:;
		}
		_match_end_1a84d0d61:;
	};
}



inline void _1aab5ac58_implImpl(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaaed3b0_Impl>* _191433_decl) {
	{
		
		if (_1aaaed778_IsTraitImpl((*(_191433_decl)).ptr())) {
			_case_begin_1a84d26ae:;
			{
				_1aab5a6e7_implTrait(_self_, _191433_decl);
			}
		}
		else if (_1aaaeda0e_IsStructImpl((*(_191433_decl)).ptr())) {
			_case_begin_1a84d2736:;
			{
				_1aab5a9a0_implStruct(_self_, _191433_decl);
			}
		}
		_match_end_1a84d259e:;
	};
}



inline void _1aab5b0bb_checkVarDecl(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aab68969_Var>* _192537_decl, jule::Trait<_1aac21d30_Lookup> _192553_l) {
	if (_1c3e3d055_IsIgnoreIdent((*(_192537_decl)).get()._field_Ident)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_192537_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1aab69085_IsTypeInferred((*(_192537_decl)).ptr())) {
		if ((!(_1aab68cee_IsInitialized((*(_192537_decl)).ptr())))) {
			_1aab488c2_pushErr(_self_.ptr(), (*(_192537_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1aab4e543_checkType(_self_, &((*(_192537_decl)).get()._field_Kind), _192553_l);
	};
	if (((*(_192537_decl)).get()._field_Constant && (*(_192537_decl)).get()._field_Reference)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_192537_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_1aab68cee_IsInitialized((*(_192537_decl)).ptr())))) {
		if ((*(_192537_decl)).get()._field_Constant) {
			_1aab488c2_pushErr(_self_.ptr(), (*(_192537_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_192537_decl)).get()._field_Statically) {
			_1aab488c2_pushErr(_self_.ptr(), (*(_192537_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_192537_decl)).get()._field_Reference) {
			_1aab488c2_pushErr(_self_.ptr(), (*(_192537_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1aab5b374_checkGlobalVarDecl(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aab68969_Var>* _195743_decl) {
	if (_1aab495d7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_195743_decl)))), &((*(_195743_decl)).get()._field_Ident), (*(_195743_decl)).get()._field_Binded)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_195743_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_195743_decl)).get()._field_Ident, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_195743_decl)).get()._field_Binded && (*(_195743_decl)).get()._field_Constant)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_195743_decl)).get()._field_Token, jule::Str("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*(_195743_decl)).get()._field_Binded)) && (!((*(_195743_decl)).get()._field_Constant))) && (!((*(_195743_decl)).get()._field_Statically)))) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_195743_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1aab4994a_checkDirectives(_self_, &((*(_195743_decl)).get()._field_Directives), jule::Any((*(_195743_decl)), &__jule_any_type8));
	_1aab5b0bb_checkVarDecl(_self_, _195743_decl, jule::Trait<_1aac21d30_Lookup>(_self_, 3));
}



inline jule::Bool _1aab5b60a_checkGlobalDecls(jule::Ptr<_1aab45c87_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84db223:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> _197521_decl = *it;
			{
				_1aab5b374_checkGlobalVarDecl(_self_, &(_197521_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a84db223:;
			++it;
			goto _iter_begin_1a84db223;
		}
		_iter_end_1a84db223:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aab5ba06_checkStructTraitImpl(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa972b0_Struct>* _198545_strct, jule::Ptr<_1aaac6443_Trait>* _198566_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_198566_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84dc90b:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _198621_tf = *it;
			{
				jule::Bool _198721_exist = false;;
				jule::Ptr<_1aaab3199_Fn> _198821_sf = _1aaa97e3c_FindMethod((*(_198545_strct)).ptr(), _198621_tf.get()._field_Ident, _198621_tf.get()._field_Statically);;
				jule::Ptr<_1aaab609d_FnIns> _198917_tfK = _1aab52579_getTraitCheckFnKind(_self_, &(_198621_tf));;
				if ((_198821_sf != nullptr)) {
					jule::Ptr<_1aaab609d_FnIns> _199125_sfK = _1aab52579_getTraitCheckFnKind(_self_, &(_198821_sf));;
					_198721_exist=_1aaab7016_equalTrait(_198917_tfK, &(_199125_sfK));
				};
				if (_198721_exist) {
					jule::Ptr<_1aaa42c61_Directive> _199521_d = _1aabe58e7_findDirective(&(_198821_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_199521_d != nullptr)) {
						_1aab488c2_pushErr(_self_.ptr(), _199521_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1aab488c2_pushErr(_self_.ptr(), (*(_198545_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_198566_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_1aaab7e4b_GetKindStr(_198917_tfK.ptr(), true), &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1a84dc90b:;
			++it;
			goto _iter_begin_1a84dc90b;
		}
		_iter_end_1a84dc90b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab5bd47_checkStructImpls(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa972b0_Struct>* _200941_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_200941_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84e2559:;
		if (it != expr_end) {
			jule::Ptr<_1aaac6443_Trait> _201121_trt = *it;
			{
				__jule_func_result=(_1aab5ba06_checkStructTraitImpl(_self_, _200941_s, &(_201121_trt)) && __jule_func_result);
			}
			_iter_next_1a84e2559:;
			++it;
			goto _iter_begin_1a84e2559;
		}
		_iter_end_1a84e2559:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aab5c188_checkStructFields(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa972b0_Struct>* _201742_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_201742_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84e37ad:;
		if (it != expr_end) {
			jule::Ptr<_1aaa943bc_Field> _201921_f = *it;
			{
				_201921_f.get()._field_Owner=(*(_201742_st));
				{
					auto expr = &((*(_201742_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a84e4319:;
					if (it != expr_end) {
						jule::Ptr<_1aaa943bc_Field> _202120_cf = *it;
						{
							if ((_201921_f == _202120_cf)) {
								goto _iter_end_1a84e4319;
							} else if ((_201921_f.get()._field_Ident == _202120_cf.get()._field_Ident)) {
								_1aab488c2_pushErr(_self_.ptr(), _201921_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_201921_f.get()._field_Ident, &__jule_any_type5)}));
								_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1a84e4319:;
						++it;
						goto _iter_begin_1a84e4319;
					}
					_iter_end_1a84e4319:;
				};
			}
			_iter_next_1a84e37ad:;
			++it;
			goto _iter_begin_1a84e37ad;
		}
		_iter_end_1a84e37ad:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1aab5c441_checkStructDecl(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa972b0_Struct>* _203440_s) {
	if (_1c3e3d055_IsIgnoreIdent((*(_203440_s)).get()._field_Ident)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_203440_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aab495d7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_203440_s)))), &((*(_203440_s)).get()._field_Ident), (*(_203440_s)).get()._field_Binded)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_203440_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_203440_s)).get()._field_Ident, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1aab4994a_checkDirectives(_self_, &((*(_203440_s)).get()._field_Directives), jule::Any((*(_203440_s)), &__jule_any_type66));
	{
		
		if ((!(_1aab5776b_checkDeclGenerics(_self_.ptr(), &((*(_203440_s)).get()._field_Generics))))) {
			_case_begin_1a84e7b36:;
		}
		else if ((!(_1aab5c188_checkStructFields(_self_, _203440_s)))) {
			_case_begin_1a84e7b9c:;
		}
		else if ((!(_1aab5bd47_checkStructImpls(_self_, _203440_s)))) {
			_case_begin_1a84e7c13:;
		}
		else if ((!(_1aab5d079_checkFuncDeclsBy(_self_, &((*(_203440_s)).get()._field_Methods))))) {
			_case_begin_1a84e7c8a:;
		}
		_match_end_1a84e7a15:;
	};
}



inline jule::Bool _1aab5c6c7_checkStructDecls(jule::Ptr<_1aab45c87_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84e93c9:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> _205421_s = *it;
			{
				_1aab5c441_checkStructDecl(_self_, &(_205421_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a84e93c9:;
			++it;
			goto _iter_begin_1a84e93c9;
		}
		_iter_end_1a84e93c9:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aab5c980_checkAnonFuncDecl(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab3199_Fn>* _206442_f) {
	(*(_206442_f)).get()._field_sema=_self_;
	_1aab584e7_checkFnDeclPrototype(_self_, _206442_f);
}



inline void _1aab5cc38_checkFuncDecl(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab3199_Fn>* _206938_f) {
	if (_1c3e3d055_IsIgnoreIdent((*(_206938_f)).get()._field_Ident)) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_206938_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aaab4156_IsAnon((*(_206938_f)).ptr())) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_206938_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1aab4994a_checkDirectives(_self_, &((*(_206938_f)).get()._field_Directives), jule::Any((*(_206938_f)), &__jule_any_type65));
	_1aab5c980_checkAnonFuncDecl(_self_, _206938_f);
	if ((((*(_206938_f)).get()._field_Owner == nullptr) && _1aab495d7_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_206938_f)))), &((*(_206938_f)).get()._field_Ident), (*(_206938_f)).get()._field_Binded))) {
		if ((*(_206938_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_1aaab3199_Fn> _208121_init = _1aab4731b_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_208121_init != nullptr)) {
				return;;
			};
		};
		_1aab488c2_pushErr(_self_.ptr(), (*(_206938_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_206938_f)).get()._field_Ident, &__jule_any_type5)}));
		_1aab48c35_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1aab5d079_checkFuncDeclsBy(jule::Ptr<_1aab45c87_Sema> _self_, jule::Slice<jule::Ptr<_1aaab3199_Fn>>* _209141_funcs) {
	{
		auto expr = _209141_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84eed3b:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _209221_f = *it;
			{
				_1aab5cc38_checkFuncDecl(_self_, &(_209221_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1a84eed3b:;
			++it;
			goto _iter_begin_1a84eed3b;
		}
		_iter_end_1a84eed3b:;
	};
	return true;;
}



inline jule::Bool _1aab5d310_checkFuncDecls(jule::Ptr<_1aab45c87_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1aab5d079_checkFuncDeclsBy(_self_, &(_self_.get()._field_file.get()._field_Funcs));
	return __jule_func_result;;
}



inline void _1aab5d72d_pushCycleError(_1aab45c87_Sema* _self_, jule::Str* _210730_st1, jule::Str* _210741_st2, _1c38d3b83_StrBuilder* _210756_message) {
	;
	jule::Str _210913_refersTo = _1c39840a7_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_210730_st1)), &__jule_any_type5),jule::Any((*(_210741_st2)), &__jule_any_type5)}));;
	jule::Slice<jule::U8> _211017_buf = _1c38ddbe3_Buf(_210756_message);;
	_1c38dc94a_WriteStr(_210756_message, _1c38bd497_Repeat(jule::Str(" ", 1), 7LL));
	_1c38dc94a_WriteStr(_210756_message, _210913_refersTo);
	_1c38dcc03_WriteByte(_210756_message, '\n');
	_1c38dc692_Write(_210756_message, _211017_buf);
}



inline jule::Bool _1aab5dbd4_checkCrossCycle(_1aab45c87_Sema* _self_, jule::Ptr<_1aaa972b0_Struct>* _211731_st1, jule::Ptr<_1aaa972b0_Struct>* _211746_st2, _1c38d3b83_StrBuilder* _211765_message) {
	{
		auto expr = &((*(_211746_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85040d7:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> *_211816_u = it;
			{
				if (((*(_211816_u)) == (*(_211731_st1)))) {
					_1aab5d72d_pushCycleError(_self_, &((*(_211746_st2)).get()._field_Ident), &((*(_211816_u)).get()._field_Ident), _211765_message);
					return false;;
				};
				if ((!(_1aab5dbd4_checkCrossCycle(_self_, _211731_st1, _211816_u, _211765_message)))) {
					_1aab5d72d_pushCycleError(_self_, &((*(_211746_st2)).get()._field_Ident), &((*(_211816_u)).get()._field_Ident), _211765_message);
					return false;;
				};
			}
			_iter_next_1a85040d7:;
			++it;
			goto _iter_begin_1a85040d7;
		}
		_iter_end_1a85040d7:;
	};
	return true;;
}



inline jule::Bool _1aab5e18a_checkStructDeriveIllegalCycles(_1aab45c87_Sema* _self_, jule::Str _213149_derive, jule::Ptr<_1aaa972b0_Struct>* _213163_st1, jule::Ptr<_1aabec1e5_TypeKind>* _213182_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aaa972b0_Struct> _213217_st2 = _1aac1e4d1_getStructFromKind((*(_213182_k)));;
	if ((_213217_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_213163_st1)) == _213217_st2)) {
		_1aab488c2_pushErr(_self_, (*(_213163_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_213149_derive, &__jule_any_type5),jule::Any((*(_213163_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1c38d3b83_StrBuilder _214417_message = static__1c38d3ea2_New(32LL);;
	if ((!(_1aab5dbd4_checkCrossCycle(_self_, _213163_st1, &(_213217_st2), &(_214417_message))))) {
		jule::Str _214621_errMsg = _1c38dd242_Str(&_214417_message);;
		_1c38dd440_Clear(&_214417_message);
		_1aab5d72d_pushCycleError(_self_, &((*(_213163_st1)).get()._field_Ident), &(_213217_st2.get()._field_Ident), &(_214417_message));
		_214621_errMsg+=_1c38dd242_Str(&_214417_message);
		_1aab488c2_pushErr(_self_, (*(_213163_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_213149_derive, &__jule_any_type5),jule::Any(_214621_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aab5e4cb_checkStructInsDeriveClone(_1aab45c87_Sema* _self_, jule::Ptr<_1aaa9a390_StructIns> _215648_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1aaa98c51_IsDerives(_215648_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_215648_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a850a297:;
		if (it != expr_end) {
			jule::Ptr<_1aaa997e0_FieldIns> _216021_f = *it;
			{
				if ((_216021_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1a850a297;
				};
				if ((!(_1aabee5c1_SupportsCloning(_216021_f.get()._field_Kind.ptr())))) {
					_1aab488c2_pushErr(_self_, _215648_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_216021_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1aab5e18a_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_215648_st.get()._field_Decl), &(_216021_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a850a297:;
			++it;
			goto _iter_begin_1a850a297;
		}
		_iter_end_1a850a297:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aab5e6c9_checkPackageDecls(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a850c101:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _217821_f = *it;
			{
				_1aab484a4_setCurrentFile(_self_.ptr(), _217821_f);
				if ((!(_1aab5568c_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a850c101:;
			++it;
			goto _iter_begin_1a850c101;
		}
		_iter_end_1a850c101:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a850d641:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _218521_f = *it;
			{
				_1aab484a4_setCurrentFile(_self_.ptr(), _218521_f);
				if ((!(_1aab59b47_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a850d641:;
			++it;
			goto _iter_begin_1a850d641;
		}
		_iter_end_1a850d641:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a850cd8d:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _219221_f = *it;
			{
				_1aab484a4_setCurrentFile(_self_.ptr(), _219221_f);
				if ((!(_1aab5b60a_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1a850cd8d:;
			++it;
			goto _iter_begin_1a850cd8d;
		}
		_iter_end_1a850cd8d:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a850ee6c:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _219921_f = *it;
			{
				_1aab484a4_setCurrentFile(_self_.ptr(), _219921_f);
				{
					
					if ((!(_1aab5d310_checkFuncDecls(_self_)))) {
						_case_begin_1a851080d:;
					}
					else if ((!(_1aab5c6c7_checkStructDecls(_self_)))) {
						_case_begin_1a8510874:;
					}
					else {
						_case_begin_1a8510797:;
						{
							goto _iter_next_1a850ee6c;
						}
					}
					_match_end_1a8510742:;
				};
				return;;
			}
			_iter_next_1a850ee6c:;
			++it;
			goto _iter_begin_1a850ee6c;
		}
		_iter_end_1a850ee6c:;
	};
}



inline void _1aab5ea3c_checkDataForTypeInference(_1aab45c87_Sema* _self_, jule::Ptr<_1aabbbe1d_Data>* _221145_d, jule::Ptr<_1c3e3a5e6_Token>* _221156_err_token) {
	{
		
		if (_1aabbc2c5_IsNil((*(_221145_d)).ptr())) {
			_case_begin_1a8511732:;
			{
				_1aab488c2_pushErr(_self_, (*(_221156_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1aabbc55b_IsVoid((*(_221145_d)).ptr())) {
			_case_begin_1a85117a9:;
			{
				_1aab488c2_pushErr(_self_, (*(_221156_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_221145_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_1a8511831:;
			{
				_1aab488c2_pushErr(_self_, (*(_221156_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8511611:;
	};
}



inline void _1aab5ece5_checkVarValue(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aab68969_Var>* _222338_v) {
	if (_1aab69085_IsTypeInferred((*(_222338_v)).ptr())) {
		(*(_222338_v)).get()._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=(*(_222338_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_1aab5ea3c_checkDataForTypeInference(_self_.ptr(), &((*(_222338_v)).get()._field_Value.get()._field_Data), &((*(_222338_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_1aab548de_checkValidityForInitExpr(_self_, (*(_222338_v)).get()._field_Mutable, (*(_222338_v)).get()._field_Reference, &((*(_222338_v)).get()._field_Kind.get()._field_Kind), &((*(_222338_v)).get()._field_Value.get()._field_Data), &((*(_222338_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_1aac0b886_Arr> _223621_arr = _1aac008ad_Arr((*(_222338_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_223621_arr != nullptr)) {
			if (_223621_arr.get()._field_Auto) {
				jule::Ptr<_1aac0b886_Arr> _223925_dataArr = _1aac008ad_Arr((*(_222338_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_223925_dataArr != nullptr)) {
					_223621_arr.get()._field_N=_223925_dataArr.get()._field_N;
				};
			};
		};
		if (_1aab513d0_checkAssignType(_self_, (*(_222338_v)).get()._field_Reference, &((*(_222338_v)).get()._field_Kind.get()._field_Kind), &((*(_222338_v)).get()._field_Value.get()._field_Data), (*(_222338_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1aab548de_checkValidityForInitExpr(_self_, (*(_222338_v)).get()._field_Mutable, (*(_222338_v)).get()._field_Reference, &((*(_222338_v)).get()._field_Kind.get()._field_Kind), &((*(_222338_v)).get()._field_Value.get()._field_Data), &((*(_222338_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_222338_v)).get()._field_Reference && (!(_1aac1d7dd_isValidForRef(&((*(_222338_v)).get()._field_Kind.get()._field_Kind)))))) {
		_1aab488c2_pushErr(_self_.ptr(), (*(_222338_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_222338_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_222338_v)).get()._field_Constant) {
		jule::Bool _226117_comptime = _1aac01b9a_comptime((*(_222338_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
		if (((!(_1aabbc7e2_IsConst((*(_222338_v)).get()._field_Value.get()._field_Data.ptr()))) && (!(_226117_comptime)))) {
			_1aab488c2_pushErr(_self_.ptr(), (*(_222338_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_226117_comptime && (_1aac02e87_comptimeRange((*(_222338_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()) != nullptr))) {
			_1aab488c2_pushErr(_self_.ptr(), (*(_222338_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_222338_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		(*(_222338_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1aac01914_Tup((*(_222338_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_222338_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1aab60158_evalVarValue(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aab68969_Var>* _227937_decl, jule::Trait<_1aac21d30_Lookup> _227953_l) {
	if ((!(_1aab68cee_IsInitialized((*(_227937_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1aabbdb12_Eval> _228417_eval = nullptr;;
	if (((*(_227937_decl)).get()._field_Kind != nullptr)) {
		_228417_eval=_1aab50632_evalpd(_self_, _227953_l, (*(_227937_decl)).get()._field_Kind.get()._field_Kind, (*(_227937_decl)));
	} else {
		_228417_eval=_1aab50632_evalpd(_self_, _227953_l, nullptr, (*(_227937_decl)));
	};
	_228417_eval.get()._field_immutable=(!((*(_227937_decl)).get()._field_Mutable));
	(*(_227937_decl)).get()._field_Value.get()._field_Data=_1aabdbed7_evalExpr(_228417_eval, (*(_227937_decl)).get()._field_Value.get()._field_Expr);
}



inline void _1aab604bb_checkVar(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aab68969_Var>* _229633_decl, jule::Trait<_1aac21d30_Lookup> _229649_l) {
	_1aab60158_evalVarValue(_self_, _229633_decl, _229649_l);
	if (((*(_229633_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1aab5ece5_checkVarValue(_self_, _229633_decl);
}



inline void _1aab606b9_checkGlobals(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8521d4c:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> _230621_decl = *it;
			{
				if (_230621_decl.get()._field_Binded) {
					goto _iter_next_1a8521d4c;
				};
				if (((_1aab68cee_IsInitialized(_230621_decl.ptr()) && (_230621_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1aab69085_IsTypeInferred(_230621_decl.ptr()) && (_230621_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1aab604bb_checkVar(_self_, &(_230621_decl), jule::Trait<_1aac21d30_Lookup>(_self_, 3));
				};
			}
			_iter_next_1a8521d4c:;
			++it;
			goto _iter_begin_1a8521d4c;
		}
		_iter_end_1a8521d4c:;
	};
}



inline jule::Ptr<_1aaab609d_FnIns> _1aab60ab5_readyToCheckFn(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa9a390_StructIns>* _232039_s, jule::Ptr<_1aaab3199_Fn>* _232059_f) {
	jule::Ptr<_1aaab609d_FnIns> _232117_ins = _1aaab4909_instance((*(_232059_f)));;
	if (((*(_232059_f)).get()._field_Instances.len() != 0LL)) {
		return _232117_ins;;
	};
	_232117_ins.get()._field_Owner=(*(_232039_s));
	_1aaab4c17_appendInstance((*(_232059_f)).ptr(), &(_232117_ins));
	_232117_ins.get()._field_reloaded=true;
	if (_1aab539cb_reloadFnInsTypes(_self_, _232117_ins)) {
		return _232117_ins;;
	};
	return nullptr;;
}



inline void _1aab60e28_checkTypeMethod(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa9a390_StructIns>* _233440_s, jule::Ptr<_1aaab3199_Fn>* _233460_f) {
	if (((*(_233460_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1aaab609d_FnIns> _233917_ins = (*(_233460_f)).get()._field_Instances[0LL];;
	if ((_233917_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1aab638cb_checkFnIns(_self_, &(_233917_ins));
}



inline jule::Ptr<_1aaab609d_FnIns> _1aab613ce_checkStructInsOp(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa9a390_StructIns>* _234741_s, jule::Ptr<_1aaab3199_Fn>* _234761_f, jule::Fn<jule::Bool(jule::Ptr<_1aaab3199_Fn>)> _234769_p) {
	if (((((*(_234761_f)) == nullptr) || ((*(_234761_f)).get()._field_Generics.len() > 0LL)) || (!(_234769_p((*(_234761_f))))))) {
		return nullptr;;
	};
	return (*(_234761_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _1aab617ca_checkStructEnv(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa9a390_StructIns>* _235739_s, jule::Ptr<_1c3e3a5e6_Token> _235758_errorToken) {
	jule::Bool __jule_func_result = false;
	_1aac0e34a_typeChecker _235817_tc = _1aac0e34a_typeChecker{._field_s=(*(_235739_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1aac21d30_Lookup>((*(_235739_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1aac21d30_Lookup>((*(_235739_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1aac0d35a_referencer>(_1aac0d35a_referencer{._field_ident=(*(_235739_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_235739_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_235739_s)).get()._field_Refers, };;
	if (((*(_235739_s)).get()._field_Generics.len() > 0LL)) {
		_235817_tc._field_useGenerics=jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>::alloc(0LL, (*(_235739_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_235739_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a852acbd:;
			if (it != expr_end) {
				jule::I32 _237118_i = it - expr->begin();
				jule::Ptr<_1aabea80e_InsGeneric> _237125_g = *it;
				{
					jule::Ptr<_1aaa838c8_GenericDecl> _237225_decl = (*(_235739_s)).get()._field_Decl.get()._field_Generics[_237118_i];;
					{ jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> &__jule_push_dest = _235817_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1aabeb403_TypeAlias>(_1aabeb403_TypeAlias{._field_Token=_237225_decl.get()._field_Token, ._field_Ident=_237225_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=_237125_g.get()._field_Kind}), })); };
				}
				_iter_next_1a852acbd:;
				++it;
				_237118_i++;
				goto _iter_begin_1a852acbd;
			}
			_iter_end_1a852acbd:;
		};
	};
	jule::Ptr<_1aabb6be8_SymbolTable> _238117_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1aab484a4_setCurrentFile(_self_.ptr(), _238117_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_235739_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1aabb6be8_SymbolTable> _238521_file = _1aab449cd_findFile(&(_self_.get()._field_files), &((*(_235739_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_238521_file != nullptr)) {
			_1aab484a4_setCurrentFile(_self_.ptr(), _238521_file);
		};
	};
	if (((*(_235739_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1aaaeb37a_constraintChecker> _239221_cc = _1aab4e147_constraintChecker(_self_);;
		_239221_cc.get()._field_et=_235758_errorToken;
		_239221_cc.get()._field_si=(*(_235739_s));
		_239221_cc.get()._field_genericsA=_235817_tc._field_useGenerics;
		_239221_cc.get()._field_uniq=true;
		if ((!(_1aaaec2b0_check(_239221_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_235739_s)).get()._field_Statics.len() > 0LL)) {
		jule::I32 _240521_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_235817_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_235739_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8531eb1:;
			if (it != expr_end) {
				jule::Ptr<_1aab68969_Var> _240725_v = *it;
				{
					_1aab5b0bb_checkVarDecl(_self_, &(_240725_v), jule::Trait<_1aac21d30_Lookup>(_self_, 3));
					_1aab604bb_checkVar(_self_, &(_240725_v), jule::Trait<_1aac21d30_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _240521_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1a8531eb1:;
				++it;
				goto _iter_begin_1a8531eb1;
			}
			_iter_end_1a8531eb1:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_235817_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1aabbdb12_Eval> _241817_eval = _1aab50d6e_eval(_self_, jule::Trait<_1aac21d30_Lookup>(_self_, 3));;
	(*(_235739_s)).get()._field_Comparable=(!((*(_235739_s)).get()._field_Decl.get()._field_Binded));
	{
		auto expr = &((*(_235739_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8534cb6:;
		if (it != expr_end) {
			jule::Ptr<_1aaa997e0_FieldIns> _242021_f = *it;
			{
				jule::Ptr<_1aabec1e5_TypeKind> _242121_kind = _1aac169e5_checkDecl(&_235817_tc, &(_242021_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_242121_kind != nullptr) && __jule_func_result);
				if ((_242121_kind == nullptr)) {
					if (((_self_ != (*(_235739_s)).get()._field_Decl.get()._field_sema) && ((*(_235739_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						(_self_.get()._field_errors).append((*(_235739_s)).get()._field_Decl.get()._field_sema.get()._field_errors);;
						(*(_235739_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1a8534cb6;
				};
				_242021_f.get()._field_Kind=_242121_kind;
				(*(_235739_s)).get()._field_Mutable=((*(_235739_s)).get()._field_Mutable || ((!(_242021_f.get()._field_Decl.get()._field_Mutable)) && _1aabeda87_Mutable(_242021_f.get()._field_Kind.ptr())));
				(*(_235739_s)).get()._field_Comparable=((*(_235739_s)).get()._field_Comparable && _1aabed801_Comparable(_242021_f.get()._field_Kind.ptr()));
				_1aab5e4cb_checkStructInsDeriveClone(_self_.ptr(), (*(_235739_s)));
				if ((_242021_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1a8534cb6;
				};
				_241817_eval.get()._field_prefix=_242021_f.get()._field_Kind;
				_241817_eval.get()._field_field=_242021_f;
				_242021_f.get()._field_Default=_1aabdbed7_evalExpr(_241817_eval, _242021_f.get()._field_Decl.get()._field_Default);
				if ((_242021_f.get()._field_Default == nullptr)) {
					goto _iter_next_1a8534cb6;
				};
				;
				_1aab513d0_checkAssignType(_self_, false, &(_242021_f.get()._field_Kind), &(_242021_f.get()._field_Default), _242021_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1a8534cb6:;
			++it;
			goto _iter_begin_1a8534cb6;
		}
		_iter_end_1a8534cb6:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aab61bc6_precheckStructIns(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa9a390_StructIns>* _245542_s, jule::Ptr<_1c3e3a5e6_Token> _245561_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1aab617ca_checkStructEnv(_self_, _245542_s, _245561_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_245542_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a853bd12:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _246021_f = *it;
			{
				if ((_246021_f.get()._field_Generics.len() == 0LL)) {
					if ((_1aab60ab5_readyToCheckFn(_self_, _245542_s, &(_246021_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1a853bd12:;
			++it;
			goto _iter_begin_1a853bd12;
		}
		_iter_end_1a853bd12:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aab61e7e_checkStructIns(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa9a390_StructIns>* _247039_s) {
	{
		auto expr = &((*(_247039_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a853c5e8:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _247121_f = *it;
			{
				_1aab60e28_checkTypeMethod(_self_, _247039_s, &(_247121_f));
			}
			_iter_next_1a853c5e8:;
			++it;
			goto _iter_begin_1a853c5e8;
		}
		_iter_end_1a853c5e8:;
	};
}



inline void _1aab62237_checkTypeStruct(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa972b0_Struct>* _247640_s) {
	if ((*(_247640_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_247640_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_247640_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a853e683:;
		if (it != expr_end) {
			jule::Ptr<_1aaa9a390_StructIns> _248921_ins = *it;
			{
				_1aab61e7e_checkStructIns(_self_, &(_248921_ins));
			}
			_iter_next_1a853e683:;
			++it;
			goto _iter_begin_1a853e683;
		}
		_iter_end_1a853e683:;
	};
}



inline void _1aab62435_checkStructTypes(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85402cc:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> _249521_s = *it;
			{
				_1aab62237_checkTypeStruct(_self_, &(_249521_s));
			}
			_iter_next_1a85402cc:;
			++it;
			goto _iter_begin_1a85402cc;
		}
		_iter_end_1a85402cc:;
	};
}



inline void _1aab626dd_checkStructInsOperators(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa9a390_StructIns> _250047_s) {
	{
		auto expr = &(_250047_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85413dd:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _250121_m = *it;
			{
				{
					auto &_match_expr{ _250121_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1a8542158:;
						{
							_250047_s.get()._field_Operators._field_Eq=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6a7c3_Eq);
							_250047_s.get()._field_Comparable=(_250047_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1a85421d0:;
						{
							_250047_s.get()._field_Operators._field_Gt=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6aa8c_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1a8542257:;
						{
							_250047_s.get()._field_Operators._field_GtEq=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6ad56_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1a85422ce:;
						{
							_250047_s.get()._field_Operators._field_Lt=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6b120_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1a8542356:;
						{
							_250047_s.get()._field_Operators._field_LtEq=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6b3d9_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1a85423cd:;
						{
							_250047_s.get()._field_Operators._field_Shl=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6ba27_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1a8542455:;
						{
							_250047_s.get()._field_Operators._field_Shr=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6bce1_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1a85424cc:;
						{
							_250047_s.get()._field_Operators._field_Add=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6c0aa_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1a8542554:;
						{
							_250047_s.get()._field_Operators._field_Sub=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6c374_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1a85425cb:;
						{
							_250047_s.get()._field_Operators._field_Div=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6c63d_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1a8542653:;
						{
							_250047_s.get()._field_Operators._field_Mul=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6c907_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1a85426ca:;
						{
							_250047_s.get()._field_Operators._field_Mod=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6cbc1_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1a8542752:;
						{
							_250047_s.get()._field_Operators._field_BitAnd=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6ce8a_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1a85427c9:;
						{
							_250047_s.get()._field_Operators._field_BitOr=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6d254_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1a8542851:;
						{
							_250047_s.get()._field_Operators._field_BitXor=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6d51d_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1a85428c8:;
						{
							_250047_s.get()._field_Operators._field_Neg=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6db5b_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1a8542950:;
						{
							_250047_s.get()._field_Operators._field_Pos=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6de25_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1a85429c7:;
						{
							_250047_s.get()._field_Operators._field_BitNot=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6e1de_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1a8542a4e:;
						{
							_250047_s.get()._field_Operators._field_AddAssign=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6e82c_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1a8542ac6:;
						{
							_250047_s.get()._field_Operators._field_SubAssign=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6eae6_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1a8542b4d:;
						{
							_250047_s.get()._field_Operators._field_DivAssign=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab6edb0_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1a8542bc5:;
						{
							_250047_s.get()._field_Operators._field_MulAssign=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab70179_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1a8542c4c:;
						{
							_250047_s.get()._field_Operators._field_ModAssign=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab70443_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1a8542cc4:;
						{
							_250047_s.get()._field_Operators._field_ShlAssign=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab7070c_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1a8542d4b:;
						{
							_250047_s.get()._field_Operators._field_ShrAssign=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab709c6_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1a8542dc3:;
						{
							_250047_s.get()._field_Operators._field_BitOrAssign=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab70c90_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1a8542e4a:;
						{
							_250047_s.get()._field_Operators._field_BitAndAssign=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab71059_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1a8542ec2:;
						{
							_250047_s.get()._field_Operators._field_BitXorAssign=_1aab613ce_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1aab71323_BitXorAssign);
						}
					}
					_match_end_1a8541de4:;
				};
			}
			_iter_next_1a85413dd:;
			++it;
			goto _iter_begin_1a85413dd;
		}
		_iter_end_1a85413dd:;
	};
}



inline void _1aab62996_precheckStructType(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaa972b0_Struct>* _256443_s) {
	if ((*(_256443_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_256443_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_256443_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1aaa9a390_StructIns> _257521_ins = _1aaa97733_instance((*(_256443_s)));;
		_257521_ins.get()._field_Checked=true;
		_1aaa97a41_appendInstance((*(_256443_s)).ptr(), &(_257521_ins));
		_1aab61bc6_precheckStructIns(_self_, &(_257521_ins), nullptr);
	};
	_1aab626dd_checkStructInsOperators(_self_, (*(_256443_s)).get()._field_Instances[0LL]);
}



inline void _1aab62b94_precheckStructTypes(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8554313:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> _258521_s = *it;
			{
				_1aab62996_precheckStructType(_self_, &(_258521_s));
			}
			_iter_next_1a8554313:;
			++it;
			goto _iter_begin_1a8554313;
		}
		_iter_end_1a8554313:;
	};
}



inline void _1aab62e4c_checkRets(_1aab45c87_Sema* _self_, jule::Ptr<_1aaab609d_FnIns>* _259033_f) {
	if (_1aaab361c_IsVoid((*(_259033_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_1aab653c2_missingRetChecker _259413_mrc = static__1aab6578a_new();;
	jule::Bool _259513_ok = _1aab668ac_check(&_259413_mrc, (*(_259033_f)).get()._field_Scope);;
	if ((!(_259513_ok))) {
		_1aab488c2_pushErr(_self_, (*(_259033_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1aab632b0_checkFnInsSc(_1aab45c87_Sema* _self_, jule::Ptr<_1aaab609d_FnIns>* _260136_f, jule::Ptr<_1aab0aae8_scopeChecker>* _260152_sc) {
	_1aab44082_appendRetVars(&((*(_260152_sc)).get()._field_table.get()._field_Vars), _260136_f);
	_1aab4436d_appendParamVars(&((*(_260152_sc)).get()._field_table.get()._field_Vars), _260136_f);
	_1aab44659_appendGenericTypeAliases(&((*(_260152_sc)).get()._field_table.get()._field_TypeAliases), _260136_f);
	_1aab1c302_check((*(_260152_sc)), &((*(_260136_f)).get()._field_Decl.get()._field_Scope), &((*(_260136_f)).get()._field_Scope));
	if ((!(_1aab0d6bc_stopped((*(_260152_sc)).ptr())))) {
		_1aab62e4c_checkRets(_self_, _260136_f);
	};
}



inline void _1aab63623_checkFnInsCaller(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab609d_FnIns>* _261441_f, jule::Ptr<_1c3e3a5e6_Token> _261456_caller) {
	if ((*(_261441_f)).get()._field_Decl.get()._field_Binded) {
		return;;
	};
	jule::Ptr<_1aabb6be8_SymbolTable> _261917_old = (*(_261441_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1aab484a4_setCurrentFile((*(_261441_f)).get()._field_Decl.get()._field_sema.ptr(), _261917_old);
	});;
	jule::Ptr<_1aabb6be8_SymbolTable> _262117_file = _1aab449cd_findFile(&((*(_261441_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_261441_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_262117_file != nullptr)) {
		_1aab484a4_setCurrentFile((*(_261441_f)).get()._field_Decl.get()._field_sema.ptr(), _262117_file);
	};
	jule::Ptr<_1aab0aae8_scopeChecker> _262617_sc = _1aab00989_newScopeChecker(&((*(_261441_f)).get()._field_Decl.get()._field_sema), (*(_261441_f)));;
	_262617_sc.get()._field_calledFrom=_261456_caller;
	_1aab632b0_checkFnInsSc(_self_.ptr(), _261441_f, &(_262617_sc));
	if (((*(_261441_f)).get()._field_Decl.get()._field_sema != _self_)) {
		(_self_.get()._field_errors).append((*(_261441_f)).get()._field_Decl.get()._field_sema.get()._field_errors);;
		(*(_261441_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1aab638cb_checkFnIns(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab609d_FnIns>* _263635_f) {
	_1aab63623_checkFnInsCaller(_self_, _263635_f, nullptr);
}



inline void _1aab63b84_checkFunc(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab3199_Fn>* _264034_f) {
	if ((*(_264034_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_264034_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_264034_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a855dac0:;
		if (it != expr_end) {
			jule::Ptr<_1aaab609d_FnIns> _265021_ins = *it;
			{
				_1aab638cb_checkFnIns(_self_, &(_265021_ins));
			}
			_iter_next_1a855dac0:;
			++it;
			goto _iter_begin_1a855dac0;
		}
		_iter_end_1a855dac0:;
	};
}



inline void _1aab63e3c_checkTestFn(_1aab45c87_Sema* _self_, jule::Ptr<_1aaab609d_FnIns>* _265535_f) {
	if ((*(_265535_f)).get()._field_Decl.get()._field_Public) {
		_1aab488c2_pushErr(_self_, (*(_265535_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1aab48c35_pushSuggestion(_self_, jule::Str("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_265535_f)).get()._field_Decl.get()._field_Unsafety || (!(_1aaab361c_IsVoid((*(_265535_f)).get()._field_Decl.ptr())))) || ((*(_265535_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_265535_f)).get()._field_Params.len() != 1LL)) || (*(_265535_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_265535_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_1aab488c2_pushErr(_self_, (*(_265535_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1aab48c35_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aac08a92_Sptr> _267317_sptr = _1aabeed74_Sptr((*(_265535_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_267317_sptr == nullptr)) {
		_1aab488c2_pushErr(_self_, (*(_265535_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1aab48c35_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aaa9a390_StructIns> _268013_s = _1aac01161_Struct(_267317_sptr.get()._field_Elem.ptr());;
	if (((_268013_s == nullptr) || (!(_1aab2a134_isStdPackage(&(_268013_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path), jule::Str("testing", 7)))))) {
		_1aab488c2_pushErr(_self_, (*(_265535_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1aab48c35_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1aab641e5_precheckFunc(jule::Ptr<_1aab45c87_Sema> _self_, jule::Ptr<_1aaab3199_Fn>* _268837_f) {
	if ((*(_268837_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_268837_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_268837_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1aaab609d_FnIns> _269921_ins = _1aaab4673_instanceForce((*(_268837_f)));;
		{ jule::Slice<jule::Ptr<_1aaab609d_FnIns>> &__jule_push_dest = (*(_268837_f)).get()._field_Instances; __jule_push_dest.push(_269921_ins); };
		jule::Bool _270117_ok = _1aab539cb_reloadFnInsTypes(_self_, _269921_ins);;
		_269921_ins.get()._field_reloaded=true;
		if ((_270117_ok && _1aac180ac_hasDirective(&((*(_268837_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_1aab63e3c_checkTestFn(_self_.ptr(), &(_269921_ins));
		};
	};
}



inline void _1aab643e3_precheckFuncs(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8568bda:;
		if (it != expr_end) {
			jule::Ptr<_1aaac6443_Trait> _271221_decl = *it;
			{
				{
					auto expr = &(_271221_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8569603:;
					if (it != expr_end) {
						jule::Ptr<_1aaab3199_Fn> _271325_m = *it;
						{
							_1aab641e5_precheckFunc(_self_, &(_271325_m));
						}
						_iter_next_1a8569603:;
						++it;
						goto _iter_begin_1a8569603;
					}
					_iter_end_1a8569603:;
				};
			}
			_iter_next_1a8568bda:;
			++it;
			goto _iter_begin_1a8568bda;
		}
		_iter_end_1a8568bda:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8569e83:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _271721_decl = *it;
			{
				_1aab641e5_precheckFunc(_self_, &(_271721_decl));
			}
			_iter_next_1a8569e83:;
			++it;
			goto _iter_begin_1a8569e83;
		}
		_iter_end_1a8569e83:;
	};
}



inline void _1aab645e1_checkFuncs(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a856a37e:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _272421_decl = *it;
			{
				_1aab63b84_checkFunc(_self_, &(_272421_decl));
			}
			_iter_next_1a856a37e:;
			++it;
			goto _iter_begin_1a856a37e;
		}
		_iter_end_1a856a37e:;
	};
}



inline void _1aab647de_checkPackageTypes(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a856aeea:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _273221_f = *it;
			{
				_1aab484a4_setCurrentFile(_self_.ptr(), _273221_f);
				_1aab606b9_checkGlobals(_self_);
				_1aab643e3_precheckFuncs(_self_);
				_1aab62b94_precheckStructTypes(_self_);
			}
			_iter_next_1a856aeea:;
			++it;
			goto _iter_begin_1a856aeea;
		}
		_iter_end_1a856aeea:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a856c68e:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _274321_f = *it;
			{
				_1aab484a4_setCurrentFile(_self_.ptr(), _274321_f);
				_1aab645e1_checkFuncs(_self_);
				_1aab62435_checkStructTypes(_self_);
			}
			_iter_next_1a856c68e:;
			++it;
			goto _iter_begin_1a856c68e;
		}
		_iter_end_1a856c68e:;
	};
}



inline void _1aab649dc_setFileSemaFields(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a856ce97:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _275121_f = *it;
			{
				_275121_f.get()._field_sema=_self_;
			}
			_iter_next_1a856ce97:;
			++it;
			goto _iter_begin_1a856ce97;
		}
		_iter_end_1a856ce97:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a856e11e:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> _275421_st = *it;
			{
				_275421_st.get()._field_sema=_self_;
			}
			_iter_next_1a856e11e:;
			++it;
			goto _iter_begin_1a856e11e;
		}
		_iter_end_1a856e11e:;
	};
}



inline void _1aab64bda_setSemaFields(jule::Ptr<_1aab45c87_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a856e817:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _276021_file = *it;
			{
				_1aab484a4_setCurrentFile(_self_.ptr(), _276021_file);
				_1aab649dc_setFileSemaFields(_self_);
			}
			_iter_next_1a856e817:;
			++it;
			goto _iter_begin_1a856e817;
		}
		_iter_end_1a856e817:;
	};
}



inline void _1aab64e93_check(jule::Ptr<_1aab45c87_Sema> _self_, jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>* _276630_files) {
	_self_.get()._field_files=(*(_276630_files));
	_1aab4c343_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1aab64bda_setSemaFields(_self_);
	_1aab4cd38_checkInherits(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1aab4c73e_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1aab4c93c_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1aab5e6c9_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1aab647de_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1aab45c87_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1aab653c2_missingRetChecker static__1aab6578a_new(void) {
	return _1aab653c2_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1aab65a98_checkConditional(_1aab653c2_missingRetChecker* _self_, jule::Ptr<_1aab0442c_Conditional> _281435_c) {
	{
		auto expr = &(_281435_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a857394d:;
		if (it != expr_end) {
			jule::Ptr<_1aab03c12_If> _281521_elif = *it;
			{
				if ((_281521_elif == nullptr)) {
					return false;;
				};
				if ((!(_1aab6656b_checkScope(_self_, _281521_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1a857394d:;
			++it;
			goto _iter_begin_1a857394d;
		}
		_iter_end_1a857394d:;
	};
	return ((_281435_c.get()._field_Default != nullptr) && _1aab6656b_checkScope(_self_, _281435_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1aab65dd9_checkMatch(_1aab653c2_missingRetChecker* _self_, jule::Ptr<_1aab0792a_Match> _282629_m) {
	{
		auto expr = &(_282629_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8574de4:;
		if (it != expr_end) {
			jule::Ptr<_1aab08563_Case> _282721_c = *it;
			{
				if ((_282721_c == nullptr)) {
					return false;;
				};
				jule::I32 _283117_n = (*(_self_))._field_breaked.len();;
				jule::Bool _283217_ok = _1aab6656b_checkScope(_self_, _282721_c.get()._field_Scope);;
				{
					
					if ((_283117_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1a8577600:;
						{
							return false;;
						}
					}
					else if ((!(_283217_ok))) {
						_case_begin_1a8577677:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1a85776ee;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1a85776ee:;
						{
							(*(_self_))._field_falled=false;
							if ((_282721_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1a8574de4;
						}
					}
					_match_end_1a8577534:;
				};
			}
			_iter_next_1a8574de4:;
			++it;
			goto _iter_begin_1a8574de4;
		}
		_iter_end_1a8574de4:;
	};
	return ((_282629_m.get()._field_Default != nullptr) && _1aab6656b_checkScope(_self_, _282629_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1aab6622a_checkInfIter(_1aab653c2_missingRetChecker* _self_, jule::Ptr<_1aab04729_InfIter> _285231_it) {
	jule::I32 _285313_n = (*(_self_))._field_breaked.len();;
	if (_1aab6656b_checkScope(_self_, _285231_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _285313_n);
		return true;;
	};
	if ((_285313_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _285917_itaddr = static_cast<jule::Uintptr>(_285231_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_285313_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a857ae1c:;
			if (it != expr_end) {
				jule::Uintptr _286020_addr = *it;
				{
					if ((_285917_itaddr == _286020_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _285313_n);
						return false;;
					};
				}
				_iter_next_1a857ae1c:;
				++it;
				goto _iter_begin_1a857ae1c;
			}
			_iter_end_1a857ae1c:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _285313_n);
	};
	return true;;
}



inline jule::Bool _1aab6656b_checkScope(_1aab653c2_missingRetChecker* _self_, jule::Ptr<_1aab037e4_Scope> _287129_s) {
	if ((_287129_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_287129_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a857c490:;
		if (it != expr_end) {
			jule::Any _287521_st = *it;
			{
				{
					auto &_match_expr{ _287521_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1a857d194:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1a857d20a:;
						{
							jule::Uintptr _288121_addr = _287521_st.cast_ptr<_1aab05d8a_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_288121_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_288121_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1a857d271:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1a857d2e8:;
						{
							if (_1aab6622a_checkInfIter(_self_, _287521_st.cast_ptr<_1aab04729_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1a857d370:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1a857d3e7:;
						{
							if (_1aab6656b_checkScope(_self_, _287521_st.cast_ptr<_1aab037e4_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1a857d46e:;
						{
							{
								auto &_match_expr{ _287521_st.cast_ptr<_1aabbbe1d_Data>(&__jule_any_type24).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1a8581d68:;
									{
										return true;;
									}
								}
								_match_end_1a8581d13:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1a857d4e6:;
						{
							if (_1aab65a98_checkConditional(_self_, _287521_st.cast_ptr<_1aab0442c_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1a857d56d:;
						{
							if (_1aab65dd9_checkMatch(_self_, _287521_st.cast_ptr<_1aab0792a_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_1a857d084:;
				};
			}
			_iter_next_1a857c490:;
			++it;
			goto _iter_begin_1a857c490;
		}
		_iter_end_1a857c490:;
	};
	return false;;
}



inline jule::Bool _1aab668ac_check(_1aab653c2_missingRetChecker* _self_, jule::Ptr<_1aab037e4_Scope> _291724_s) {
	return _1aab6656b_checkScope(_self_, _291724_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab653c2_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab677ae_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aab68cee_IsInitialized(_1aab68969_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1aab69085_IsTypeInferred(_1aab68969_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1aab6931b_untypedConstant(_1aab68969_Var* _self_) {
	return (_1aab69085_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab68969_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1aab69dbb_Dispose(jule::Ptr<_1aaab3199_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1aaab361c_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1aaaac21a_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1aab6a185_Str(jule::Ptr<_1aaab3199_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1aaab361c_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1aaaac21a_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1aaab609d_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1aac05066_Prim> _3913_prim = _1aabeeadd_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1aac084ed_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1aab6a509_logical(jule::Ptr<_1aaab3199_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _1aaab361c_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _1aaaac21a_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1aaab609d_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_1aac05066_Prim> _6413_prim = _1aabeeadd_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1aac08267_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1aac01161_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1aab6a7c3_Eq(jule::Ptr<_1aaab3199_Fn> _7218_f) {
	return static__1aab6a509_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__1aab6aa8c_Gt(jule::Ptr<_1aaab3199_Fn> _7718_f) {
	return static__1aab6a509_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__1aab6ad56_GtEq(jule::Ptr<_1aaab3199_Fn> _8220_f) {
	return static__1aab6a509_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__1aab6b120_Lt(jule::Ptr<_1aaab3199_Fn> _8718_f) {
	return static__1aab6a509_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__1aab6b3d9_LtEq(jule::Ptr<_1aaab3199_Fn> _9220_f) {
	return static__1aab6a509_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__1aab6b75d_result(jule::Ptr<_1aaab3199_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _1aaab361c_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _1aaaac21a_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1aaab609d_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_1aac01161_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1aab6ba27_Shl(jule::Ptr<_1aaab3199_Fn> _11819_f) {
	return static__1aab6b75d_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__1aab6bce1_Shr(jule::Ptr<_1aaab3199_Fn> _12319_f) {
	return static__1aab6b75d_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__1aab6c0aa_Add(jule::Ptr<_1aaab3199_Fn> _12819_f) {
	return static__1aab6b75d_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__1aab6c374_Sub(jule::Ptr<_1aaab3199_Fn> _13319_f) {
	return static__1aab6b75d_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__1aab6c63d_Div(jule::Ptr<_1aaab3199_Fn> _13819_f) {
	return static__1aab6b75d_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__1aab6c907_Mul(jule::Ptr<_1aaab3199_Fn> _14319_f) {
	return static__1aab6b75d_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__1aab6cbc1_Mod(jule::Ptr<_1aaab3199_Fn> _14819_f) {
	return static__1aab6b75d_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__1aab6ce8a_BitAnd(jule::Ptr<_1aaab3199_Fn> _15322_f) {
	return static__1aab6b75d_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1aab6d254_BitOr(jule::Ptr<_1aaab3199_Fn> _15821_f) {
	return static__1aab6b75d_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__1aab6d51d_BitXor(jule::Ptr<_1aaab3199_Fn> _16322_f) {
	return static__1aab6b75d_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__1aab6d892_unary(jule::Ptr<_1aaab3199_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _1aaab361c_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _1aaaac21a_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1aaab609d_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_1aac01161_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1aab6db5b_Neg(jule::Ptr<_1aaab3199_Fn> _18719_f) {
	return static__1aab6d892_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__1aab6de25_Pos(jule::Ptr<_1aaab3199_Fn> _19219_f) {
	return static__1aab6d892_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__1aab6e1de_BitNot(jule::Ptr<_1aaab3199_Fn> _19722_f) {
	return static__1aab6d892_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__1aab6e563_assign(jule::Ptr<_1aaab3199_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_1aaab361c_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _1aaaac21a_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1aab6e82c_AddAssign(jule::Ptr<_1aaab3199_Fn> _22125_f) {
	return static__1aab6e563_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1aab6eae6_SubAssign(jule::Ptr<_1aaab3199_Fn> _22625_f) {
	return static__1aab6e563_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1aab6edb0_DivAssign(jule::Ptr<_1aaab3199_Fn> _23125_f) {
	return static__1aab6e563_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1aab70179_MulAssign(jule::Ptr<_1aaab3199_Fn> _23625_f) {
	return static__1aab6e563_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1aab70443_ModAssign(jule::Ptr<_1aaab3199_Fn> _24125_f) {
	return static__1aab6e563_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1aab7070c_ShlAssign(jule::Ptr<_1aaab3199_Fn> _24625_f) {
	return static__1aab6e563_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1aab709c6_ShrAssign(jule::Ptr<_1aaab3199_Fn> _25125_f) {
	return static__1aab6e563_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1aab70c90_BitOrAssign(jule::Ptr<_1aaab3199_Fn> _25627_f) {
	return static__1aab6e563_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1aab71059_BitAndAssign(jule::Ptr<_1aaab3199_Fn> _26128_f) {
	return static__1aab6e563_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1aab71323_BitXorAssign(jule::Ptr<_1aaab3199_Fn> _26628_f) {
	return static__1aab6e563_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aab6977d_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1aaba4235_pushErr(_1aaba3c3a_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _1aaba44bb_checkTrait(_1aaba3c3a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1aabed2d4_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aaac6443_Trait> _12617_trt = _1aac013e7_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12717_ref = false;;
	{
		
		if ((_1aabeed74_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1a85b144c:;
			{
				_12717_ref=true;
				(*(_self_))._field_src=_1aabeed74_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_1aac01161_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1a85b14c4;
			}
		}
		else if ((_1aac01161_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1a85b14c4:;
			{
				jule::Ptr<_1aaa9a390_StructIns> _13717_s = _1aac01161_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1aaa98910_IsImplements(_13717_s.get()._field_Decl.ptr(), _12617_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12717_ref)) && _1aaba280a_traitHasReferenceReceiver(&(_12617_trt)))) {
					_1aaba4235_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aac013e7_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1a85b154b:;
			{
				jule::Ptr<_1aaac6443_Trait> _14721_base = _1aac013e7_Trait((*(_self_))._field_src.ptr());;
				if ((_12617_trt == _14721_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1a85b5484:;
				{
					auto expr = &(_14721_base.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a85b586e:;
					if (it != expr_end) {
						jule::Ptr<_1aaa972b0_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &(_12617_trt.get()._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a85b61cc:;
								if (it != expr_end) {
									jule::Ptr<_1aaa972b0_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_1a85b586e;
										};
									}
									_iter_next_1a85b61cc:;
									++it;
									goto _iter_begin_1a85b61cc;
								}
								_iter_end_1a85b61cc:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1a85b586e:;
						++it;
						goto _iter_begin_1a85b586e;
					}
					_iter_end_1a85b586e:;
				};
				{
					auto expr = &(_12617_trt.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a85b561b:;
					if (it != expr_end) {
						jule::Ptr<_1aaab3199_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_1aaab3199_Fn> _16125_m2 = _1aaac70e2_FindMethod(_14721_base.ptr(), _16025_m1.get()._field_Ident);;
							if ((_16125_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1aaab609d_FnIns> _16521_m1k = _1aab52579_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_1aaab609d_FnIns> _16621_m2k = _1aab52579_getTraitCheckFnKind((*(_self_))._field_s, &(_16125_m2));;
							if ((!(_1aaab7016_equalTrait(_16521_m1k, &(_16621_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1a85b561b:;
						++it;
						goto _iter_begin_1a85b561b;
					}
					_iter_end_1a85b561b:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a85b1392:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a85b133c:;
	};
}



inline jule::Bool _1aaba4752_checkPtr(_1aaba3c3a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1aabed2d4_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac0c359_Ptr> _18117_dest = _1aac0010a_Ptr((*(_self_))._field_dest.ptr());;
	if (_1aac0cd93_IsUnsafe(_18117_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1aabec8ee_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1aaba49d8_checkPrim(_1aaba3c3a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1aac05066_Prim> _19017_prim = _1aabeeadd_Prim((*(_self_))._field_dest.ptr());;
		if (((_19017_prim != nullptr) && _1aac08784_IsAny(_19017_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1aabec8ee_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1aaba4dd4_typeEnum(_1aaba3c3a_typeCompatibilityChecker* _self_, jule::Ptr<_1aaaca348_TypeEnum>* _19828_e, jule::Ptr<_1aabec1e5_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_19828_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85bc47a:;
		if (it != expr_end) {
			jule::Ptr<_1aaac9c71_TypeEnumItem> _19921_item = *it;
			{
				if (_1aabec8ee_Equal(_19921_item.get()._field_Kind.get()._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1aaaca348_TypeEnum> _20321_ke = _1aac00627_TypeEnum(_19921_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_20321_ke == nullptr)) {
					goto _iter_next_1a85bc47a;
				};
				if (_1aaba4dd4_typeEnum(_self_, &(_20321_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1a85bc47a:;
			++it;
			goto _iter_begin_1a85bc47a;
		}
		_iter_end_1a85bc47a:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aaba516a_checkTypeEnum(_1aaba3c3a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1aabec8ee_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1aaaca348_TypeEnum> _21817_e = _1aac00627_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1aaba4dd4_typeEnum(_self_, &(_21817_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1aaba5401_check(_1aaba3c3a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1aac0010a_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1aaba4752_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1aabee0a4_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1aabed2d4_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1aabeeadd_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1a85c20b7:;
			{
				__jule_func_result = _1aaba49d8_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1aac00627_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1a85c17e2:;
			{
				__jule_func_result = _1aaba516a_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1aac013e7_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1a85c1858:;
			{
				__jule_func_result = _1aaba44bb_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a85c114e:;
			{
				__jule_func_result = _1aabec8ee_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1a85c102d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aaba3c3a_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1aaba5e7e_pushErr(_1aaba59d9_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_1aab488c2_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _1aaba6215_checkValidity(_1aaba59d9_assignTypeChecker* _self_) {
	jule::Bool _25917_valid = true;;
	{
		
		if ((_1aac00dca_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a85c495a:;
			{
				jule::Ptr<_1aaab609d_FnIns> _26217_f = _1aac00dca_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1aaab7533_IsBuiltin(_26217_f.ptr())) {
						_case_begin_1a85c5d46:;
						{
							_1aaba5e7e_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					else if (_26217_f.get()._field_Decl.get()._field_Binded) {
						_case_begin_1a85c5dbd:;
						{
							_1aaba5e7e_pushErr(_self_, jule::Str("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					else if (((!(_26217_f.get()._field_Decl.get()._field_Statically)) && _1aaab38a3_IsMethod(_26217_f.get()._field_Decl.ptr()))) {
						_case_begin_1a85c5e45:;
						{
							_1aaba5e7e_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					else if (((_26217_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_26217_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1a85c5ebc:;
						{
							_1aaba5e7e_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1aab48c35_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					_match_end_1a85c5c7a:;
				};
			}
		}
		else if ((_1aac01914_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a85c49d2:;
			{
				_1aaba5e7e_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25917_valid=false;
			}
		}
		_match_end_1a85c48a0:;
	};
	return _25917_valid;;
}



inline jule::Bool _1aaba649b_checkConst(_1aaba59d9_assignTypeChecker* _self_) {
	if (((((!(_1aabbc7e2_IsConst((*(_self_))._field_d.ptr()))) || (_1aabeeadd_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1aabeeadd_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1c4cbc8c8_IsNum(_1aabeeadd_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _29913_kind = _1aabeeadd_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1c4cbc60e_IsFloat(_29913_kind)) {
			_case_begin_1a85cc039:;
			{
				if ((!(_1aaba2b90_floatAssignable(&(_29913_kind), &((*(_self_))._field_d))))) {
					_1aaba5e7e_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29913_kind;
			}
		}
		else if (_1c4cbc2bd_IsInt(_29913_kind)) {
			_case_begin_1a85cc0b1:;
			{
				if ((!(_1aaba3751_intAssignable(_29913_kind, &((*(_self_))._field_d))))) {
					_1aaba5e7e_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29913_kind;
			}
		}
		else {
			_case_begin_1a85cbe90:;
			{
				return false;;
			}
		}
		_match_end_1a85cbe3a:;
	};
	return true;;
}



inline jule::Bool _1aaba6732_isPrim(_1aaba59d9_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1aabed04d_Binded((*(_self_))._field_dest.ptr()) || _1aabed04d_Binded((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1aabeeadd_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1aabeeadd_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1aaba69b8_checkCompatibility(_1aaba59d9_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a85d12c4:;
			{
				return false;;
			}
		}
		else if ((!(_1aaba6215_checkValidity(_self_)))) {
			_case_begin_1a85d134b:;
			{
				return false;;
			}
		}
		else if (_1aaba649b_checkConst(_self_)) {
			_case_begin_1a85d13c3:;
			{
				return true;;
			}
		}
		else if ((_1aac00391_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a85d144a:;
			{
				jule::Ptr<_1aabec1e5_TypeKind> _34321_dkind = (*(_self_))._field_dest;;
				if ((_1aac00391_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34321_dkind=_1aac00391_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1aabeeadd_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1a85d1192;
				};
				if (_1c4cb8e35_TypesAreCompatible(_1aabeeadd_Prim(_1aac00391_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _1aabeeadd_Prim(_34321_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1aaba6732_isPrim(_self_)) {
			_case_begin_1a85d14c2:;
			{
				jule::Ptr<_1aac05066_Prim> _35317_dest = _1aabeeadd_Prim((*(_self_))._field_dest.ptr());;
				if (_1aac08784_IsAny(_35317_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1aac05066_Prim> _35721_src = _1aabeeadd_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1c4cb8e35_TypesAreCompatible(_35317_dest.get()._field_Kind, _35721_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1a85d1192:;
	};
	return _1aab51886_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1aaba6c4e_check(_1aaba59d9_assignTypeChecker* _self_) {
	jule::Bool _36613_ok = _1aaba69b8_checkCompatibility(_self_);;
	if ((_36613_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1aac1e7bc_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36613_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaba59d9_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a85e82b9_annotateConstraintElem(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1a85e98b4:;
			{
				jule::Ptr<_1aabec1e5_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1a85ea71c:;
						{
							_38921_elem=_1aac008ad_Arr((*(_38649_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1a85ea662:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aaa788ac_ArrTypeDecl>(&__jule_any_type75).get()._field_Elem;
				return _1aaba8d61_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1a85e985e:;
	};
	return false;;
}

inline jule::Bool _1a85e7a05_annotateConstraintElem(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a85ecc2a:;
			{
				jule::Ptr<_1aabec1e5_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1a85edae9:;
						{
							_38921_elem=_1aac00b44_Slc((*(_38649_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1a85ed9c8:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aaa77a21_SlcTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _1aaba8d61_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1a85ecbc5:;
	};
	return false;;
}

inline jule::Bool _1a85e7d8a_annotateConstraintElem(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1a860115c:;
			{
				jule::Ptr<_1aabec1e5_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1a8602092:;
						{
							_38921_elem=_1aac0010a_Ptr((*(_38649_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1a8601e0a:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aaa7811a_PtrTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _1aaba8d61_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1a8601107:;
	};
	return false;;
}

inline jule::Bool _1a85eede7_annotateConstraintElem(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1a860413d:;
			{
				jule::Ptr<_1aabec1e5_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1a86050d9:;
						{
							_38921_elem=_1aabeed74_Sptr((*(_38649_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1a8604ddb:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aaa7768b_SptrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1aaba8d61_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1a86040d8:;
	};
	return false;;
}



inline jule::Bool _1aaba804c_annotateConstraintMap(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _40645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a85d881a:;
			{
				jule::Ptr<_1aac0ac09_Map> _40921_m = _1aac0167d_Map((*(_40645_k)).ptr());;
				jule::Ptr<_1aaa7910a_MapTypeDecl> _41021_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aaa7910a_MapTypeDecl>(&__jule_any_type79);;
				(*(_self_))._field_c=_41021_m2.get()._field_Key;
				if ((!(_1aaba8d61_annotateConstraint(_self_, &(_40921_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_41021_m2.get()._field_Val;
				__jule_func_result = _1aaba8d61_annotateConstraint(_self_, &(_40921_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1a85d87b5:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aaba838d_annotateConstraintTup(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _42145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a85daec1:;
			{
				jule::Ptr<_1aaa77d1d_TupleTypeDecl> _42421_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aaa77d1d_TupleTypeDecl>(&__jule_any_type80);;
				jule::Ptr<_1aac0a159_Tuple> _42521_tup2 = _1aac01914_Tup((*(_42145_k)).ptr());;
				{
					auto expr = &(_42521_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a85dc258:;
					if (it != expr_end) {
						jule::Ptr<_1aabec1e5_TypeKind> _42625_t2 = *it;
						{
							{
								auto expr = &(_42421_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a85dc038:;
								if (it != expr_end) {
									jule::Ptr<_1aaa765e1_TypeDecl> _42729_t = *it;
									{
										(*(_self_))._field_c=_42729_t;
										if (_1aaba8d61_annotateConstraint(_self_, &(_42625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1a85dc038:;
									++it;
									goto _iter_begin_1a85dc038;
								}
								_iter_end_1a85dc038:;
							};
						}
						_iter_next_1a85dc258:;
						++it;
						goto _iter_begin_1a85dc258;
					}
					_iter_end_1a85dc258:;
				};
			}
		}
		_match_end_1a85dae6b:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aaba86ce_annotateConstraintFn(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _43844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a85dc940:;
			{
				jule::Ptr<_1aaa8837d_FnDecl> _44121_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aaa8837d_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1aaab609d_FnIns> _44221_f = _1aac00dca_Fn((*(_43844_k)).ptr());;
				{
					auto expr = &(_44221_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a85deb40:;
					if (it != expr_end) {
						jule::I32 _44318_i = it - expr->begin();
						jule::Ptr<_1aaab5102_ParamIns> _44325_fp = *it;
						{
							(*(_self_))._field_c=_44121_pf.get()._field_Params[_44318_i].get()._field_Kind;
							if (_1aaba8d61_annotateConstraint(_self_, &(_44325_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1a85deb40:;
						++it;
						_44318_i++;
						goto _iter_begin_1a85deb40;
					}
					_iter_end_1a85deb40:;
				};
				if ((_44121_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_44121_pf.get()._field_Result.get()._field_Kind;
					if (_1aaba8d61_annotateConstraint(_self_, &(_44221_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1a85dc8da:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aaba8a20_annotateConstraintIdent(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _45947_k) {
	jule::Ptr<_1aaa76beb_IdentTypeDecl> _46017_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1aaa76beb_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1aaa9a390_StructIns> _46117_s = _1aac01161_Struct((*(_45947_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85e2758:;
		if (it != expr_end) {
			jule::I32 _46213_i = it - expr->begin();
			jule::Ptr<_1aaa838c8_GenericDecl> _46216_g = *it;
			{
				if ((_46216_g.get()._field_Ident == _46017_ident.get()._field_Ident)) {
					jule::Ptr<_1aabea80e_InsGeneric> _46425_fg = (*(_self_))._field_f.get()._field_Generics[_46213_i];;
					if ((_46425_fg != nullptr)) {
						return false;;
					};
					_1aaba91c4_pushGeneric(_self_, _45947_k, _46213_i);
					return true;;
				};
				if ((_46117_s == nullptr)) {
					goto _iter_next_1a85e2758;
				};
				jule::Ptr<_1aaa765e1_TypeDecl> _47421_c = (*(_self_))._field_c;;
				{
					auto expr = &(_46017_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a85e3506:;
					if (it != expr_end) {
						jule::Ptr<_1aaa765e1_TypeDecl> _47525_ig = *it;
						{
							(*(_self_))._field_c=_47525_ig;
							{
								auto expr = &(_46117_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a85e5a58:;
								if (it != expr_end) {
									jule::Ptr<_1aabea80e_InsGeneric> _47729_sg = *it;
									{
										if (_1aaba8d61_annotateConstraint(_self_, &(_47729_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1a85e5a58:;
									++it;
									goto _iter_begin_1a85e5a58;
								}
								_iter_end_1a85e5a58:;
							};
						}
						_iter_next_1a85e3506:;
						++it;
						goto _iter_begin_1a85e3506;
					}
					_iter_end_1a85e3506:;
				};
				(*(_self_))._field_c=_47421_c;
			}
			_iter_next_1a85e2758:;
			++it;
			_46213_i++;
			goto _iter_begin_1a85e2758;
		}
		_iter_end_1a85e2758:;
	};
	return false;;
}



inline jule::Bool _1aaba8d61_annotateConstraint(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _48842_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a85e5607:;
			{
				return _1aaba8a20_annotateConstraintIdent(_self_, _48842_k);;
			}
		}
		_match_end_1a85e55a2:;
	};
	{
		
		if ((_1aac008ad_Arr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1a85e6b36:;
			{
				return _1a85e82b9_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1aac00b44_Slc((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1a85e6bad:;
			{
				return _1a85e7a05_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1aac0010a_Ptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1a85e6c35:;
			{
				return _1a85e7d8a_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1aabeed74_Sptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1a85e741c:;
			{
				return _1a85eede7_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1aac0167d_Map((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1a85e7483:;
			{
				return _1aaba804c_annotateConstraintMap(_self_, _48842_k);;
			}
		}
		else if ((_1aac00dca_Fn((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1a85e74e9:;
			{
				return _1aaba86ce_annotateConstraintFn(_self_, _48842_k);;
			}
		}
		else if ((_1aac01914_Tup((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1a85e7560:;
			{
				return _1aaba838d_annotateConstraintTup(_self_, _48842_k);;
			}
		}
		else {
			_case_begin_1a85e6ecc:;
			{
				return false;;
			}
		}
		_match_end_1a85e6e77:;
	};
}



inline void _1aaba91c4_pushGeneric(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _51335_k, jule::I32 _51349_i) {
	(*(_self_))._field_f.get()._field_Generics[_51349_i]=jule::new_ptr<_1aabea80e_InsGeneric>(_1aabea80e_InsGeneric{._field_Kind=(*(_51335_k)), });
	jule::Ptr<_1aaa838c8_GenericDecl> _51517_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_51349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a86075e7:;
		if (it != expr_end) {
			jule::Ptr<_1aabec1e5_TypeKind> _51621_ignored = *it;
			{
				if ((_51517_gd.get()._field_Ident == _1aabec5ad_Str(_51621_ignored.ptr()))) {
					_51621_ignored.get()._field_Kind=(*(_51335_k)).get()._field_Kind;
				};
			}
			_iter_next_1a86075e7:;
			++it;
			goto _iter_begin_1a86075e7;
		}
		_iter_end_1a86075e7:;
	};
	if (((_51517_gd.get()._field_Constraint == nullptr) || (_51517_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_51517_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1aaba8d61_annotateConstraint(_self_, _51335_k);
}



inline jule::Bool _1aaba9515_annotatePrim(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _52843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1aabab539_annotateAny(_self_, _52843_k);
	return __jule_func_result;;
}



inline jule::Bool _1aaba9856_annotateArr(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _53242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aac0b886_Arr> _53317_parr = _1aac008ad_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53317_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac0b886_Arr> _53717_arr = _1aac008ad_Arr((*(_53242_k)).ptr());;
	(*(_self_))._field_k=(&(_53317_parr.get()._field_Elem));
	__jule_func_result = _1aabab87a_annotateKind(_self_, &(_53717_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aaba9b97_annotateSlc(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _54242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aac09565_Slc> _54317_pslc = _1aac00b44_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54317_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac09565_Slc> _54717_slc = _1aac00b44_Slc((*(_54242_k)).ptr());;
	(*(_self_))._field_k=(&(_54317_pslc.get()._field_Elem));
	__jule_func_result = _1aabab87a_annotateKind(_self_, &(_54717_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aabaa093_checkMapKey(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _55241_k, jule::Ptr<_1aabec1e5_TypeKind>* _55261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aabec1e5_TypeKind>* _55317_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55241_k;
	__jule_func_result=_1aabab87a_annotateKind(_self_, _55261_ck);
	(*(_self_))._field_k=_55317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aabaa3d4_annotateMap(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _56042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aac0ac09_Map> _56117_pmap = _1aac0167d_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56117_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac0ac09_Map> _56517_m = _1aac0167d_Map((*(_56042_k)).ptr());;
	__jule_func_result = (_1aabaa093_checkMapKey(_self_, (&(_56117_pmap.get()._field_Key)), &(_56517_m.get()._field_Key)) && _1aabaa093_checkMapKey(_self_, (&(_56117_pmap.get()._field_Val)), &(_56517_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1aabaa725_annotateFn(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _57041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aaab609d_FnIns> _57117_pf = _1aac00dca_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57117_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aaab609d_FnIns> _57517_f = _1aac00dca_Fn((*(_57041_k)).ptr());;
	{
		
		if ((_57117_pf.get()._field_Params.len() != _57517_f.get()._field_Params.len())) {
			_case_begin_1a8613290:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1aaab361c_IsVoid(_57117_pf.get()._field_Decl.ptr()) != _1aaab361c_IsVoid(_57517_f.get()._field_Decl.ptr()))) {
			_case_begin_1a8613306:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1a861323a:;
	};
	__jule_func_result=true;
	jule::Ptr<_1aabec1e5_TypeKind>* _58417_old = (*(_self_))._field_k;;
	{
		auto expr = &(_57517_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a86133b1:;
		if (it != expr_end) {
			jule::I32 _58514_i = it - expr->begin();
			jule::Ptr<_1aaab5102_ParamIns> _58521_fp = *it;
			{
				(*(_self_))._field_k=(&(_57117_pf.get()._field_Params[_58514_i].get()._field_Kind));
				__jule_func_result=(_1aabab87a_annotateKind(_self_, &(_58521_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_1a86133b1:;
			++it;
			_58514_i++;
			goto _iter_begin_1a86133b1;
		}
		_iter_end_1a86133b1:;
	};
	if ((!(_1aaab361c_IsVoid(_57117_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_57117_pf.get()._field_Result));
		__jule_func_result=(_1aabab87a_annotateKind(_self_, &(_57517_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58417_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aabaaa66_annotatePtr(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _59942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aac0c359_Ptr> _60017_pptr = _1aac0010a_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_60017_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac0c359_Ptr> _60417_ptr = _1aac0010a_Ptr((*(_59942_k)).ptr());;
	(*(_self_))._field_k=(&(_60017_pptr.get()._field_Elem));
	__jule_func_result = _1aabab87a_annotateKind(_self_, &(_60417_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aabaada7_annotateSptr(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _60943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aac08a92_Sptr> _61017_ssptr = _1aabeed74_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_61017_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aac08a92_Sptr> _61417_sptr = _1aabeed74_Sptr((*(_60943_k)).ptr());;
	(*(_self_))._field_k=(&(_61017_ssptr.get()._field_Elem));
	__jule_func_result = _1aabab87a_annotateKind(_self_, &(_61417_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1aabab1e8_annotateStruct(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _61945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aaa9a390_StructIns> _62017_s = _1aac01161_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_62017_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aaa9a390_StructIns> _62417_s2 = _1aac01161_Struct((*(_61945_k)).ptr());;
	if ((_62017_s.get()._field_Generics.len() != _62417_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_62017_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c617e77d:;
		if (it != expr_end) {
			jule::I32 _62814_i = it - expr->begin();
			jule::Ptr<_1aabea80e_InsGeneric> _62821_g = *it;
			{
				jule::Ptr<_1aabea80e_InsGeneric> _62921_g2 = _62417_s2.get()._field_Generics[_62814_i];;
				if (_1aabec8ee_Equal(_62821_g.get()._field_Kind, _62921_g2.get()._field_Kind)) {
					goto _iter_next_1c617e77d;
				};
				(*(_self_))._field_k=(&(_62821_g.get()._field_Kind));
				if ((!(_1aabab87a_annotateKind(_self_, &(_62921_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c617e77d:;
			++it;
			_62814_i++;
			goto _iter_begin_1c617e77d;
		}
		_iter_end_1c617e77d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aabab539_annotateAny(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _64142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64213_kind = _1aabec5ad_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c618240c:;
		if (it != expr_end) {
			jule::I32 _64313_i = it - expr->begin();
			jule::Ptr<_1aaa838c8_GenericDecl> _64316_g = *it;
			{
				if ((_64213_kind != _64316_g.get()._field_Ident)) {
					goto _iter_next_1c618240c;
				};
				jule::Ptr<_1aabea80e_InsGeneric> _64717_t = (*(_self_))._field_f.get()._field_Generics[_64313_i];;
				{
					
					if ((_64717_t == nullptr) || (_64717_t.get()._field_Kind == nullptr)) {
						_case_begin_1c6183d37:;
						{
							_1aaba91c4_pushGeneric(_self_, _64142_k, _64313_i);
						}
					}
					else if ((!(_1aabec8ee_Equal(_64717_t.get()._field_Kind, (*(_64142_k)))))) {
						_case_begin_1c6183dae:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1c6183c05:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_64142_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1c618240c:;
			++it;
			_64313_i++;
			goto _iter_begin_1c618240c;
		}
		_iter_end_1c618240c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aabab87a_annotateKind(_1aaba7656_dynamicTypeAnnotation* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _66243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1aabab539_annotateAny(_self_, _66243_k)) {
			_case_begin_1c6185dc2:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1aabeeadd_Prim((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1c6185e49:;
			{
				__jule_func_result = _1aaba9515_annotatePrim(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac008ad_Arr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1c61861ad:;
			{
				__jule_func_result = _1aaba9856_annotateArr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac00b44_Slc((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1c6186224:;
			{
				__jule_func_result = _1aaba9b97_annotateSlc(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac0167d_Map((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1c618628a:;
			{
				__jule_func_result = _1aabaa3d4_annotateMap(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac00dca_Fn((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1c6186312:;
			{
				__jule_func_result = _1aabaa725_annotateFn(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac0010a_Ptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1c6186389:;
			{
				__jule_func_result = _1aabaaa66_annotatePtr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aabeed74_Sptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1c6186499:;
			{
				__jule_func_result = _1aabaada7_annotateSptr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1aac01161_Struct((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1c6186510:;
			{
				__jule_func_result = _1aabab1e8_annotateStruct(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c6185ca1:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c618580b:;
	};
}



inline jule::Bool _1aababb11_annotate(_1aaba7656_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _1aabab87a_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaba7656_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1aabaca57_pushErrToken(_1aabac4b3_fnCallArgChecker* _self_, jule::Ptr<_1c3e3a5e6_Token> _70731_token, jule::Str _70746_fmt, jule::Slice<jule::Any> _70759_args) {
	_1aab488c2_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _70731_token, _70746_fmt, _70759_args);
}



inline void _1aabacdba_pushErr(_1aabac4b3_fnCallArgChecker* _self_, jule::Str _71126_fmt, jule::Slice<jule::Any> _71139_args) {
	_1aabaca57_pushErrToken(_self_, (*(_self_))._field_errorToken, _71126_fmt, _71139_args);
}



inline jule::Slice<jule::Ptr<_1aaab5102_ParamIns>> _1aabad151_getParams(_1aabac4b3_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1aaaabe84_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _1aabad45e_checkCounts(_1aabac4b3_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1aaab5102_ParamIns>>* _72431_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _72517_n = (*(_72431_params)).len();;
	if (((_72517_n > 0LL) && _1aaaabe84_IsSelf((*(_72431_params))[0LL].get()._field_Decl.ptr()))) {
		(_72517_n)--;
	};
	jule::I32 _73017_diff = (_72517_n - (*(_self_))._field_args.len());;
	jule::Str _73117_log = jule::Str();;
	{
		
		if ((_73017_diff == 0LL)) {
			_case_begin_1c61915d6:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72517_n > 0LL) && (*(_72431_params))[(_72517_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1c6191509:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_73017_diff < 0LL) || (_73017_diff > (*(_72431_params)).len()))) {
			_case_begin_1c619120c:;
			{
				_73117_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1c6191196:;
			{
				_73117_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_1c6191141:;
	};
	_1c38d3b83_StrBuilder _74217_err = static__1c38d3ea2_New(32LL);;
	_1c38dc94a_WriteStr(&_74217_err, (*(_self_))._field_f.get()._field_Decl.get()._field_Ident);
	_1c38dc94a_WriteStr(&_74217_err, jule::Str("\n       wanted (", 16));
	{
		auto expr = _72431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73a5275:;
		if (it != expr_end) {
			jule::I32 _74513_i = it - expr->begin();
			jule::Ptr<_1aaab5102_ParamIns> *_74516_p = it;
			{
				_1c38dc94a_WriteStr(&_74217_err, _1aabec5ad_Str((*(_74516_p)).get()._field_Kind.ptr()));
				if ((((*(_72431_params)).len() - _74513_i) > 1LL)) {
					_1c38dc94a_WriteStr(&_74217_err, jule::Str(", ", 2));
				};
			}
			_iter_next_1a73a5275:;
			++it;
			_74513_i++;
			goto _iter_begin_1a73a5275;
		}
		_iter_end_1a73a5275:;
	};
	_1c38dcc03_WriteByte(&_74217_err, ')');
	_1aabacdba_pushErr(_self_, _73117_log, jule::Slice<jule::Any>::make({jule::Any(_74217_err, &__jule_any_type81)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1aabad915_checkArg(_1aabac4b3_fnCallArgChecker* _self_, jule::Ptr<_1aaab5102_ParamIns>* _75632_p, jule::Ptr<_1aabbbe1d_Data>* _75651_arg, jule::Ptr<_1c3e3a5e6_Token>* _75668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1aaab837a_parameterUsesGenerics(_75632_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=((!((*(_75632_p)).get()._field_Decl.get()._field_Variadic)) && _1aabb5d07_isGoodValueToInfer(_75651_arg));
		if (__jule_func_result) {
			_1aaba7656_dynamicTypeAnnotation _76125_dta = _1aaba7656_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75632_p)), ._field_a=(*(_75651_arg)), ._field_errorToken=(*(_75668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1aababb11_annotate(&_76125_dta);
		};
		if ((!(__jule_func_result))) {
			_1aabaca57_pushErrToken(_self_, (*(_75668_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1aab548de_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_75632_p)).get()._field_Decl.get()._field_Mutable, (*(_75632_p)).get()._field_Decl.get()._field_Reference, &((*(_75632_p)).get()._field_Kind), _75651_arg, _75668_errorToken)) {
		_1aab513d0_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_75632_p)).get()._field_Decl.get()._field_Reference, &((*(_75632_p)).get()._field_Kind), _75651_arg, (*(_75668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aabadd11_push(_1aabac4b3_fnCallArgChecker* _self_, jule::Ptr<_1aaab5102_ParamIns>* _78528_p, jule::Ptr<_1aaa7a925_Expr> _78546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aabec1e5_TypeKind> _78617_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _78713_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_78528_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_78528_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_78528_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_1aabbbe1d_Data> _79517_d = _1aabdbed7_evalExpr((*(_self_))._field_e, _78546_arg);;
	(*(_self_))._field_e.get()._field_prefix=_78617_old;
	(*(_self_))._field_e.get()._field_immutable=_78713_oldImmut;
	if ((_79517_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1aabad915_checkArg(_self_, _78528_p, &(_79517_d), &(_78546_arg.get()._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_79517_d.get()._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1aabae20c_pushVariadic(_1aabac4b3_fnCallArgChecker* _self_, jule::Ptr<_1aaab5102_ParamIns>* _80936_p, jule::I32 _80954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _81117_variadiced = false;;
	jule::Bool _81213_more = ((_80954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1aaaa1d25_SliceExprModel> _81317_model = jule::new_ptr<_1aaaa1d25_SliceExprModel>(_1aaaa1d25_SliceExprModel{._field_ElemKind=(*(_80936_p)).get()._field_Kind, });;
	jule::Ptr<_1aabec1e5_TypeKind> _81717_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _82213_variadic = (*(_80936_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_80936_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_80936_p)).get()._field_Kind.get()._field_Variadic=_82213_variadic;
	});;
	for (; (_80954_i < (*(_self_))._field_args.len()); (_80954_i)++) {
		{
			jule::Ptr<_1aaa7a925_Expr> _82921_arg = (*(_self_))._field_args[_80954_i];;
			{
				auto &_match_expr{ _82921_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type82) {
					_case_begin_1a861bb4a:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aac09565_Slc>(_1aac09565_Slc{._field_Elem=(*(_80936_p)).get()._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1a861bd9d:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_80936_p)).get()._field_Kind;
					}
				}
				_match_end_1a861bd48:;
			};
			jule::Ptr<_1aabbbe1d_Data> _84221_d = _1aabdb855_eval((*(_self_))._field_e, _82921_arg);;
			if ((_84221_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1a861aa4a;
			};
			if (_84221_d.get()._field_Kind.get()._field_Variadic) {
				_81117_variadiced=true;
				(*(_80936_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1aabad915_checkArg(_self_, _80936_p, &(_84221_d), &(_82921_arg.get()._field_Token)));
				{
					auto &_match_expr{ _84221_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1a861eed3:;
						{
							_81317_model=_84221_d.get()._field_Model.cast_ptr<_1aaaa1d25_SliceExprModel>(&__jule_any_type83);
							_81317_model.get()._field_ElemKind=(*(_80936_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_1a861eb1a:;
						{
							_81317_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_84221_d.get()._field_Model); };
						}
					}
					_match_end_1a861eab5:;
				};
				(_80954_i)++;
				goto _iter_end_1a861aa4a;
			};
			__jule_func_result=(__jule_func_result && _1aabad915_checkArg(_self_, _80936_p, &(_84221_d), &(_82921_arg.get()._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = _81317_model.get()._field_Elems; __jule_push_dest.push(_84221_d.get()._field_Model); };
		}
	_iter_next_1a861aa4a:;
	}
	_iter_end_1a861aa4a:;;
	(*(_self_))._field_e.get()._field_prefix=_81717_old;
	if ((_81117_variadiced && _81213_more)) {
		_1aabaca57_pushErrToken(_self_, (*(_self_))._field_args[_80954_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81317_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81317_model, &__jule_any_type83)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aabae54d_checkArgs(_1aabac4b3_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1aaab5102_ParamIns>>* _88533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88613_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I32 _89017_i = 0LL;;
	if ((((*(_88533_params)).len() > 0LL) && _1aaaabe84_IsSelf((*(_88533_params))[0LL].get()._field_Decl.ptr()))) {
		(_89017_i)++;
	};
	_julec_label_1a8623e0a:;
	while ((_89017_i < (*(_88533_params)).len())) {
		{
			jule::Ptr<_1aaab5102_ParamIns> _89721_p = (*(_88533_params))[_89017_i];;
			{
				
				if (_89721_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1a862577a:;
					{
						__jule_func_result=(_1aabae20c_pushVariadic(_self_, &(_89721_p), _89017_i) && __jule_func_result);
						goto _iter_end_1a8624218;
					}
				}
				else if (((*(_self_))._field_args.len() <= _89017_i)) {
					_case_begin_1a8625868:;
					{
						__jule_func_result=false;
						goto _iter_end_1a8624218;
					}
				}
				else {
					_case_begin_1a86253d4:;
					{
						__jule_func_result=(_1aabadd11_push(_self_, &(_89721_p), (*(_self_))._field_args[_89017_i]) && __jule_func_result);
					}
				}
				_match_end_1a862536d:;
			};
			(_89017_i)++;
		}
	_iter_next_1a8624218:;
	}
	_iter_end_1a8624218:;;
	(*(_self_))._field_e.get()._field_arg=_88613_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aabae7d4_checkDynamicTypeAnnotation(_1aabac4b3_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8627419:;
		if (it != expr_end) {
			jule::Ptr<_1aabea80e_InsGeneric> _91716_g = *it;
			{
				if ((_91716_g == nullptr)) {
					_1aabacdba_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1a8627419:;
			++it;
			goto _iter_begin_1a8627419;
		}
		_iter_end_1a8627419:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1aabaea6a_check(_1aabac4b3_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1aaab5102_ParamIns>> _92717_params = _1aabad151_getParams(_self_);;
	__jule_func_result=_1aabad45e_checkCounts(_self_, &(_92717_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1aabae54d_checkArgs(_self_, &(_92717_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1aabae7d4_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aabac4b3_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1aabb094a_pushErr(_1aabb03ea_structLitChecker* _self_, jule::Ptr<_1c3e3a5e6_Token> _96526_token, jule::Str _96541_fmt, jule::Slice<jule::Any> _96554_args) {
	_1aabbe162_pushErr((*(_self_))._field_e.ptr(), _96526_token, _96541_fmt, _96554_args);
}



inline void _1aabb0cad_pushSuggestion(_1aabb03ea_structLitChecker* _self_, jule::Str _97033_fmt, jule::Slice<jule::Any> _97046_args) {
	_1aabbe4c5_pushSuggestion((*(_self_))._field_e.ptr(), _97033_fmt, _97046_args);
}



inline void _1aabb11cb_pushMatch(_1aabb03ea_structLitChecker* _self_, jule::Ptr<_1aaa997e0_FieldIns>* _97433_f, jule::Ptr<_1aabbbe1d_Data>* _97452_d, jule::Ptr<_1c3e3a5e6_Token>* _97467_errorToken) {
	;
	jule::Bool _98013_mutable = ((!((*(_self_))._field_e.get()._field_immutable)) || ((*(_97433_f)).get()._field_Decl.get()._field_Mutable && ((*(_self_))._field_s.get()._field_Methods.len() > 0LL)));;
	if (_1aab548de_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, _98013_mutable, false, &((*(_97433_f)).get()._field_Kind), _97452_d, _97467_errorToken)) {
		_1aab513d0_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_97433_f)).get()._field_Kind), _97452_d, (*(_97467_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1aaaa0373_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1aaaa0373_StructArgExprModel>(_1aaaa0373_StructArgExprModel{._field_Token=(*(_97467_errorToken)), ._field_Field=(*(_97433_f)), ._field_Expr=(*(_97452_d))})); };
}



inline void _1aabb153e_checkPair(_1aabb03ea_structLitChecker* _self_, jule::Ptr<_1aaa80221_FieldExprPair>* _99333_pair, jule::Slice<jule::Ptr<_1aaa7a925_Expr>>* _99360_exprs) {
	jule::Ptr<_1aaa997e0_FieldIns> _99517_f = _1aaa9b748_FindField((*(_self_))._field_s.ptr(), (*(_99333_pair)).get()._field_Field.get()._field_Kind);;
	if ((_99517_f == nullptr)) {
		_1aabb094a_pushErr(_self_, (*(_99333_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_99333_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _99517_f.get()._field_Decl.get()._field_Public, _99517_f.get()._field_Decl.get()._field_Token)))) {
		_1aabb094a_pushErr(_self_, (*(_99333_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_99333_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_1aabb0cad_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1a88ed2a0:;
	{
		auto expr = _99360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a88ed789:;
		if (it != expr_end) {
			jule::Ptr<_1aaa7a925_Expr> _100721_expr = *it;
			{
				{
					auto &_match_expr{ _100721_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1a88ee15d:;
						{
							jule::Ptr<_1aaa80221_FieldExprPair> _101025_dpair = _100721_expr.get()._field_Kind.cast_ptr<_1aaa80221_FieldExprPair>(&__jule_any_type84);;
							{
								
								if (((*(_99333_pair)) == _101025_dpair)) {
									_case_begin_1a88eeea5:;
									{
										goto _iter_end_1a88ed789;
									}
								}
								else if (((*(_99333_pair)).get()._field_Field.get()._field_Kind == _101025_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1a890002c:;
									{
										_1aabb094a_pushErr(_self_, (*(_99333_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_99333_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_1a88ed789;
									}
								}
								_match_end_1a88eedea:;
							};
						}
					}
					_match_end_1a88ee108:;
				};
			}
			_iter_next_1a88ed789:;
			++it;
			goto _iter_begin_1a88ed789;
		}
		_iter_end_1a88ed789:;
	};
	jule::Ptr<_1aabec1e5_TypeKind> _102117_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_102117_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_99517_f.get()._field_Kind;
	jule::Ptr<_1aabbbe1d_Data> _102517_d = _1aabdbed7_evalExpr((*(_self_))._field_e, (*(_99333_pair)).get()._field_Expr);;
	if ((_102517_d == nullptr)) {
		return;;
	};
	_1aabb11cb_pushMatch(_self_, &(_99517_f), &(_102517_d), &((*(_99333_pair)).get()._field_Field));
}



inline jule::Bool _1aabb1880_readyExprs(_1aabb03ea_structLitChecker* _self_, jule::Slice<jule::Ptr<_1aaa7a925_Expr>>* _103234_exprs) {
	jule::Bool _103317_ok = true;;
	{
		auto expr = _103234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8903360:;
		if (it != expr_end) {
			jule::I32 _103414_i = it - expr->begin();
			jule::Ptr<_1aaa7a925_Expr> _103421_expr = *it;
			{
				{
					auto &_match_expr{ _103421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1a890400e:;
						{
							jule::Ptr<_1aaa8182c_KeyValPair> _103725_pair = _103421_expr.get()._field_Kind.cast_ptr<_1aaa8182c_KeyValPair>(&__jule_any_type85);;
							{
								auto &_match_expr{ _103725_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type86) {
									_case_begin_1a8904be1:;
									{
										goto _match_end_1a8904ebb;
									}
								}
								else {
									_case_begin_1a8905021:;
									{
										_1aabb094a_pushErr(_self_, _103725_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_103317_ok=false;
										goto _iter_next_1a8903360;
									}
								}
								_match_end_1a8904ebb:;
							};
							(*(_103234_exprs))[_103414_i].get()._field_Kind=jule::Any(jule::new_ptr<_1aaa80221_FieldExprPair>(_1aaa80221_FieldExprPair{._field_Field=_103725_pair.get()._field_Key.get()._field_Token, ._field_Expr=_103725_pair.get()._field_Val}), &__jule_any_type84);
						}
					}
					_match_end_1a8903ea9:;
				};
			}
			_iter_next_1a8903360:;
			++it;
			_103414_i++;
			goto _iter_begin_1a8903360;
		}
		_iter_end_1a8903360:;
	};
	return _103317_ok;;
}



inline void _1aabb1b38_check(_1aabb03ea_structLitChecker* _self_, jule::Slice<jule::Ptr<_1aaa7a925_Expr>>* _105629_exprs) {
	if (((*(_105629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1aabb1880_readyExprs(_self_, _105629_exprs)))) {
		return;;
	};
	jule::Bool _106317_paired = false;;
	{
		auto expr = _105629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8907243:;
		if (it != expr_end) {
			jule::I32 _106414_i = it - expr->begin();
			jule::Ptr<_1aaa7a925_Expr> _106421_expr = *it;
			{
				{
					auto &_match_expr{ _106421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1a8909894:;
						{
							jule::Ptr<_1aaa80221_FieldExprPair> _106725_pair = _106421_expr.get()._field_Kind.cast_ptr<_1aaa80221_FieldExprPair>(&__jule_any_type84);;
							if (((_106414_i > 0LL) && (!(_106317_paired)))) {
								_1aabb094a_pushErr(_self_, _106725_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_106317_paired=true;
							_1aabb153e_checkPair(_self_, &(_106725_pair), _105629_exprs);
						}
					}
					else {
						_case_begin_1a8907d48:;
						{
							if (_106317_paired) {
								_1aabb094a_pushErr(_self_, _106421_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_106414_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_1aabb094a_pushErr(_self_, _106421_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1a8907243;
							};
							jule::Ptr<_1aaa997e0_FieldIns> _108225_field = (*(_self_))._field_s.get()._field_Fields[_106414_i];;
							if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _108225_field.get()._field_Decl.get()._field_Public, _108225_field.get()._field_Decl.get()._field_Token)))) {
								_1aabb094a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1aabb0cad_pushSuggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1aabec1e5_TypeKind> _109025_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_109025_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_108225_field.get()._field_Kind;
							jule::Ptr<_1aabbbe1d_Data> _109425_d = _1aabdbed7_evalExpr((*(_self_))._field_e, _106421_expr);;
							if ((_109425_d == nullptr)) {
								goto _iter_next_1a8907243;
							};
							_1aabb11cb_pushMatch(_self_, &(_108225_field), &(_109425_d), &(_106421_expr.get()._field_Token));
						}
					}
					_match_end_1a8907ce3:;
				};
			}
			_iter_next_1a8907243:;
			++it;
			_106414_i++;
			goto _iter_begin_1a8907243;
		}
		_iter_end_1a8907243:;
	};
	if ((!(_106317_paired))) {
		jule::I32 _110517_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I32 _110621_diff = (_110517_n - (*(_105629_exprs)).len());;
		{
			
			if ((_110621_diff <= 0LL)) {
				_case_begin_1a890e8aa:;
				{
					return;;
				}
			}
			_match_end_1a890e789:;
		};
		_1c38d3b83_StrBuilder _111221_idents = static__1c38d3ea2_New(32LL);;
		for (; (_110621_diff > 0LL); (_110621_diff)--) {
			{
				_1c38dc94a_WriteStr(&_111221_idents, jule::Str(", ", 2));
				_1c38dc94a_WriteStr(&_111221_idents, (*(_self_))._field_s.get()._field_Fields[(_110517_n - _110621_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1a891012a:;
		}
		_iter_end_1a891012a:;;
		_1aabb094a_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_1c38ddbe3_Buf(&_111221_idents).slice(2LL)), &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aabb03ea_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aab68969_Var> _1aabb26b6_buildVar(_1aabb21cc_rangeChecker* _self_, jule::Ptr<_1aaa8945b_VarDecl>* _113228_decl) {
	jule::Ptr<_1aab68969_Var> _113317_v = _1aaabe6d3_buildVar((*(_113228_decl)));;
	return _113317_v;;
}



inline void _1aabb28b4_setSizeKey(_1aabb21cc_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1c3e3d055_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_1aabb26b6_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=_1aacdb89a_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a8913e53:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1aab677ae_IterRelation>(_1aab677ae_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_1aab68969_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1a8913ded:;
	};
}



inline void _1aabb2cd2_checkRangeExprValidity(_1aabb21cc_rangeChecker* _self_, jule::Ptr<_1aabbbe1d_Data>* _115946_d, jule::Ptr<_1aab68969_Var>* _115957_key, jule::Ptr<_1aabec1e5_TypeKind>* _115973_k) {
	jule::Bool _116017__mut = (*(_115957_key)).get()._field_Mutable;;
	if ((_116017__mut && (!(_1aabeda87_Mutable((*(_115973_k)).ptr()))))) {
		_116017__mut=false;
	};
	_1aab548de_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _116017__mut, (*(_115957_key)).get()._field_Reference, &((*(_115957_key)).get()._field_Kind.get()._field_Kind), _115946_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _1aabb2ed0_checkSlice(_1aabb21cc_rangeChecker* _self_) {
	_1aabb28b4_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1c3e3d055_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1aac09565_Slc> _117817_slc = _1aac00b44_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1aabb26b6_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=_117817_slc.get()._field_Elem});
	_1aabb2cd2_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_117817_slc.get()._field_Elem));
}



inline void _1aabb31cd_checkArray(_1aabb21cc_rangeChecker* _self_) {
	_1aabb28b4_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1c3e3d055_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1aac0b886_Arr> _119117_arr = _1aac008ad_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1aabb26b6_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=_119117_arr.get()._field_Elem});
	_1aabb2cd2_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_119117_arr.get()._field_Elem));
}



inline void _1aabb33cb_checkMapKeyA(_1aabb21cc_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1c3e3d055_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1aac0ac09_Map> _120317_m = _1aac0167d_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_1aabb26b6_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=_120317_m.get()._field_Key});
	jule::Ptr<_1aabbbe1d_Data> _120717_d = jule::new_ptr<_1aabbbe1d_Data>((*((*(_self_))._field_d)));;
	_120717_d.get()._field_Kind=_120317_m.get()._field_Key;
	_1aabb2cd2_checkRangeExprValidity(_self_, &(_120717_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_120317_m.get()._field_Key));
}



inline void _1aabb35c9_checkMapKeyB(_1aabb21cc_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1c3e3d055_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1aac0ac09_Map> _121817_m = _1aac0167d_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1aabb26b6_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=_121817_m.get()._field_Val});
	jule::Ptr<_1aabbbe1d_Data> _122217_d = jule::new_ptr<_1aabbbe1d_Data>((*((*(_self_))._field_d)));;
	_122217_d.get()._field_Kind=_121817_m.get()._field_Val;
	_1aabb2cd2_checkRangeExprValidity(_self_, &(_122217_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_121817_m.get()._field_Val));
}



inline void _1aabb37c7_checkMap(_1aabb21cc_rangeChecker* _self_) {
	_1aabb33cb_checkMapKeyA(_self_);
	_1aabb35c9_checkMapKeyB(_self_);
}



inline void _1aabb39c5_checkStr(_1aabb21cc_rangeChecker* _self_) {
	_1aabb28b4_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1c3e3d055_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1aabb26b6_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=_1aacdb89a_findBuiltinTypeAlias(jule::Str("u8", 2)).get()._field_Kind;
}



inline void _1aabb3bc3_checkComptime(_1aabb21cc_rangeChecker* _self_) {
	_1aabb28b4_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyA != nullptr) && (*(_self_))._field_rang.get()._field_KeyA.get()._field_Mutable)) {
		_1aab488c2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyA.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB != nullptr) && (*(_self_))._field_rang.get()._field_KeyB.get()._field_Mutable)) {
		_1aab488c2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyB.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1c3e3d055_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1aabb26b6_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
}



inline jule::Bool _1aabb3e59_checkComptimeRange(_1aabb21cc_rangeChecker* _self_) {
	jule::Ptr<_1aaacc6e1_comptimeRange> _125717_range = _1aac02e87_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _125717_range.get()._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1a892a244:;
			{
				_1aabb3bc3_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1a8929d8c:;
			{
				_1aab488c2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a8929b17:;
	};
}



inline jule::Bool _1aabb41e0_check(_1aabb21cc_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1a892c93e:;
		}
		else if ((_1aac00b44_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a892bb6e:;
			{
				_1aabb2ed0_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1aac008ad_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a892bbd5:;
			{
				_1aabb31cd_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1aac0167d_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a892bc4b:;
			{
				_1aabb37c7_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1aac02e87_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a892bcb2:;
			{
				return _1aabb3e59_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1a892b410:;
			{
				jule::Ptr<_1aac05066_Prim> _128917_prim = _1aabeeadd_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_128917_prim != nullptr) && _1aac084ed_IsStr(_128917_prim.ptr()))) {
					_1aabb39c5_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1a892b2cd:;
	};
	_1aab488c2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aabb21cc_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1aabb4d5b_prepareTypes(_1aabb493d_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1aaab729c_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1aabb5114_prepareExprs(_1aabb493d_retTypeChecker* _self_, jule::Ptr<_1aaa7a925_Expr>* _131736_e) {
	if (((*(_131736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_131736_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a89323d3:;
			{
				(*(_self_))._field_exprs=(*(_131736_e)).get()._field_Kind.cast_ptr<_1aaa7b5e6_TupleExpr>(&__jule_any_type87).get()._field_Expr;
			}
		}
		else {
			_case_begin_1a8932548:;
			{
				{ jule::Slice<jule::Ptr<_1aaa7a925_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_131736_e))); };
			}
		}
		_match_end_1a89324e3:;
	};
}



inline void _1aabb5312_checkExprs(_1aabb493d_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aabbbe1d_Data>> _133317_datas = jule::Slice<jule::Ptr<_1aabbbe1d_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1aabbdb12_Eval> _133417_eval = _1aab50d6e_eval((*(_self_))._field_sc.get()._field_s, jule::Trait<_1aac21d30_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8932d62:;
		if (it != expr_end) {
			jule::I32 _133514_i = it - expr->begin();
			jule::Ptr<_1aaa7a925_Expr> _133521_expr = *it;
			{
				if ((_133514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1a8932d62;
				};
				jule::Ptr<_1aabec1e5_TypeKind> _134021_t = (*(_self_))._field_types[_133514_i];;
				_133417_eval.get()._field_prefix=_134021_t;
				jule::Ptr<_1aabbbe1d_Data> _134321_d = _1aabdbed7_evalExpr(_133417_eval, _133521_expr);;
				if ((_134321_d == nullptr)) {
					goto _iter_next_1a8932d62;
				};
				{ jule::Slice<jule::Ptr<_1aabbbe1d_Data>> &__jule_push_dest = _133317_datas; __jule_push_dest.push(_134321_d); };
				if (((!(_134321_d.get()._field_Mutable)) && _1aabeda87_Mutable(_134321_d.get()._field_Kind.ptr()))) {
					_1aab488c2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1aaba59d9_assignTypeChecker _135521_ac = _1aaba59d9_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_134021_t, ._field_d=_134321_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1aaba6c4e_check(&_135521_ac);
			}
			_iter_next_1a8932d62:;
			++it;
			_133514_i++;
			goto _iter_begin_1a8932d62;
		}
		_iter_end_1a8932d62:;
	};
	if ((_133317_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1aaaa59e9_TupleExprModel>(_1aaaa59e9_TupleExprModel{._field_Datas=_133317_datas}), &__jule_any_type88);
	} else if ((_133317_datas.len() == 1LL)) {
		(*(_self_))._field_model=_133317_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1aabb5653_check(_1aabb493d_retTypeChecker* _self_, jule::Ptr<_1aaa7a925_Expr>* _137429_e) {
	_1aabb4d5b_prepareTypes(_self_);
	_1aabb5114_prepareExprs(_self_, _137429_e);
	jule::I32 _137813_n = (*(_self_))._field_exprs.len();;
	if (((_137813_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1aaab43dc_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_1aab488c2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_137813_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1aaab361c_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_1aab488c2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_137813_n > (*(_self_))._field_types.len())) {
		_1aab488c2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_137813_n < (*(_self_))._field_types.len())) {
		_1aab488c2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1aabb5312_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aabb493d_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1aabb71d2_SelectPackage(_1aabb6be8_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a893eb82:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1a893eb82:;
			++it;
			goto _iter_begin_1a893eb82;
		}
		_iter_end_1a893eb82:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aab68969_Var> _1aabb75cd_FindVar(_1aabb6be8_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1aabb93b0_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1aabeb403_TypeAlias> _1aabb79c9_FindTypeAlias(_1aabb6be8_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1aabb9866_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1aaa972b0_Struct> _1aabb7dc5_FindStruct(_1aabb6be8_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a89423c1:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> _5421_s = *it;
			{
				if (((_5421_s.get()._field_Ident == _5329_ident) && (_5421_s.get()._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1a89423c1:;
			++it;
			goto _iter_begin_1a89423c1;
		}
		_iter_end_1a89423c1:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaab3199_Fn> _1aabb82c1_FindFn(_1aabb6be8_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8943768:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _6521_f = *it;
			{
				if (((_6521_f.get()._field_Ident == _6425_ident) && (_6521_f.get()._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1a8943768:;
			++it;
			goto _iter_begin_1a8943768;
		}
		_iter_end_1a8943768:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaac6443_Trait> _1aabb8612_FindTrait(_1aabb6be8_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a894367a:;
		if (it != expr_end) {
			jule::Ptr<_1aaac6443_Trait> _7621_t = *it;
			{
				if ((_7621_t.get()._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1a894367a:;
			++it;
			goto _iter_begin_1a894367a;
		}
		_iter_end_1a894367a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaac8b3d_Enum> _1aabb8953_FindEnum(_1aabb6be8_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a894576a:;
		if (it != expr_end) {
			jule::Ptr<_1aaac8b3d_Enum> _8721_e = *it;
			{
				if ((_8721_e.get()._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1a894576a:;
			++it;
			goto _iter_begin_1a894576a;
		}
		_iter_end_1a894576a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaaca348_TypeEnum> _1aabb8c94_FindTypeEnum(_1aabb6be8_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a894665b:;
		if (it != expr_end) {
			jule::Ptr<_1aaaca348_TypeEnum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1a894665b:;
			++it;
			goto _iter_begin_1a894665b;
		}
		_iter_end_1a894665b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aab68969_Var> _1aabb93b0_findVar(_1aabb6be8_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I32 _11021_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1aab68969_Var> _11225_v = (*(_self_))._field_Vars[_11021_i];;
				if (((_11225_v.get()._field_Ident == (*(_10827_ident))) && (_11225_v.get()._field_Binded == _10839_binded))) {
					return _11225_v;;
				};
			}
		_iter_next_1a8948097:;
		}
		_iter_end_1a8948097:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a894851a:;
			if (it != expr_end) {
				jule::Ptr<_1aab68969_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_Ident == (*(_10827_ident))) && (_11825_v.get()._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1a894851a:;
				++it;
				goto _iter_begin_1a894851a;
			}
			_iter_end_1a894851a:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1aabeb403_TypeAlias> _1aabb9866_findTypeAlias(_1aabb6be8_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I32 _12921_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1aabeb403_TypeAlias> _13125_ta = (*(_self_))._field_TypeAliases[_12921_i];;
				if (((_13125_ta.get()._field_Ident == (*(_12733_ident))) && (_13125_ta.get()._field_Binded == _12745_binded))) {
					return _13125_ta;;
				};
			}
		_iter_next_1a894b023:;
		}
		_iter_end_1a894b023:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a894b496:;
			if (it != expr_end) {
				jule::Ptr<_1aabeb403_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_Ident == (*(_12733_ident))) && (_13725_ta.get()._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1a894b496:;
				++it;
				goto _iter_begin_1a894b496;
			}
			_iter_end_1a894b496:;
		};
	};
	return nullptr;;
}



inline jule::Any _1aabb9c62_defByIdent(_1aabb6be8_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a894ccb1:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_Ident == (*(_14830_ident))) && (_14921_v.get()._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1a894ccb1:;
			++it;
			goto _iter_begin_1a894ccb1;
		}
		_iter_end_1a894ccb1:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a894e39a:;
		if (it != expr_end) {
			jule::Ptr<_1aabeb403_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_Ident == (*(_14830_ident))) && (_15521_ta.get()._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type67);;
				};
			}
			_iter_next_1a894e39a:;
			++it;
			goto _iter_begin_1a894e39a;
		}
		_iter_end_1a894e39a:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a894dd8e:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_Ident == (*(_14830_ident))) && (_16121_s.get()._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type66);;
				};
			}
			_iter_next_1a894dd8e:;
			++it;
			goto _iter_begin_1a894dd8e;
		}
		_iter_end_1a894dd8e:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8950c5e:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_Ident == (*(_14830_ident))) && (_16721_f.get()._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type65);;
				};
			}
			_iter_next_1a8950c5e:;
			++it;
			goto _iter_begin_1a8950c5e;
		}
		_iter_end_1a8950c5e:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8951314:;
		if (it != expr_end) {
			jule::Ptr<_1aaac6443_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1a8951314:;
			++it;
			goto _iter_begin_1a8951314;
		}
		_iter_end_1a8951314:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8951237:;
		if (it != expr_end) {
			jule::Ptr<_1aaac8b3d_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type68);;
				};
			}
			_iter_next_1a8951237:;
			++it;
			goto _iter_begin_1a8951237;
		}
		_iter_end_1a8951237:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a895349d:;
		if (it != expr_end) {
			jule::Ptr<_1aaaca348_TypeEnum> _18921_te = *it;
			{
				if ((_18921_te.get()._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type69);;
				};
			}
			_iter_next_1a895349d:;
			++it;
			goto _iter_begin_1a895349d;
		}
		_iter_end_1a895349d:;
	};
	return nullptr;;
}



inline jule::Bool _1aabba218_isDuplicatedIdent(_1aabb6be8_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8954306:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*(_20216_v)).get()._field_Ident == (*(_20150_ident)))) && ((*(_20216_v)).get()._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1a8954306:;
			++it;
			goto _iter_begin_1a8954306;
		}
		_iter_end_1a8954306:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a895502c:;
		if (it != expr_end) {
			jule::Ptr<_1aabeb403_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*(_20816_ta)).get()._field_Ident == (*(_20150_ident)))) && ((*(_20816_ta)).get()._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1a895502c:;
			++it;
			goto _iter_begin_1a895502c;
		}
		_iter_end_1a895502c:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8955e51:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*(_21416_s)).get()._field_Ident == (*(_20150_ident)))) && ((*(_21416_s)).get()._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1a8955e51:;
			++it;
			goto _iter_begin_1a8955e51;
		}
		_iter_end_1a8955e51:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8955aaa:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*(_22016_f)).get()._field_Ident == (*(_20150_ident)))) && ((*(_22016_f)).get()._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1a8955aaa:;
			++it;
			goto _iter_begin_1a8955aaa;
		}
		_iter_end_1a8955aaa:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8957705:;
		if (it != expr_end) {
			jule::Ptr<_1aaac6443_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*(_23016_t)).get()._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1a8957705:;
			++it;
			goto _iter_begin_1a8957705;
		}
		_iter_end_1a8957705:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8957628:;
		if (it != expr_end) {
			jule::Ptr<_1aaac8b3d_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*(_23616_e)).get()._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1a8957628:;
			++it;
			goto _iter_begin_1a8957628;
		}
		_iter_end_1a8957628:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8959916:;
		if (it != expr_end) {
			jule::Ptr<_1aaaca348_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*(_24216_te)).get()._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1a8959916:;
			++it;
			goto _iter_begin_1a8959916;
		}
		_iter_end_1a8959916:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aabb6be8_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1aabbc2c5_IsNil(_1aabbbe1d_Data* _self_) {
	return _1aabed2d4_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1aabbc55b_IsVoid(_1aabbbe1d_Data* _self_) {
	return _1aabed56a_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1aabbc7e2_IsConst(_1aabbbe1d_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1aabbcb33_GoodOperand(_1aabbbe1d_Data* _self_, jule::Ptr<_1aabbbe1d_Data>* _10231_other) {
	if ((_1aac00627_TypeEnum((*(_10231_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1aabeeadd_Prim((*(_10231_other)).get()._field_Kind.ptr()) == nullptr) || (!(_1aac08784_IsAny(_1aabeeadd_Prim((*(_10231_other)).get()._field_Kind.ptr()).ptr())))) && (_1aac013e7_Trait((*(_10231_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_1aabed2d4_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aabbbe1d_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aabbd062_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1aabbe162_pushErr(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _13326_token, jule::Str _13341_fmt, jule::Slice<jule::Any> _13354_args) {
	_1aab488c2_pushErr((*(_self_))._field_s.ptr(), _13326_token, _13341_fmt, _13354_args);
}



inline void _1aabbe4c5_pushSuggestion(_1aabbdb12_Eval* _self_, jule::Str _13833_fmt, jule::Slice<jule::Any> _13846_args) {
	_1aab48c35_pushSuggestion((*(_self_))._field_s.ptr(), _13833_fmt, _13846_args);
}



inline void _1aabbe6c3_allowBuiltin(_1aabbdb12_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1aabbe8c1_disallowBuiltin(_1aabbdb12_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1aabbeb57_isUnsafe(_1aabbdb12_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1aabbeddd_isGlobal(_1aabbdb12_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a898d6a3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a898da6b:;
			{
				return false;;
			}
		}
		_match_end_1a898da16:;
	};
}



inline jule::Bool _1aabc01eb_applyNumericPrefix(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data>* _16542_d) {
	if ((((((*(_16542_d)) == nullptr) || (!(_1aabbc7e2_IsConst((*(_16542_d)).ptr())))) || (_1aabeeadd_Prim((*(_16542_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1aac05066_Prim> _17213_prim = _1aabeeadd_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17213_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1c4cbc60e_IsFloat(_1aac053a7_Str(_17213_prim.ptr()))) {
			_case_begin_1a8991002:;
			{
				(*(_16542_d)).get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>((*((*(_self_))._field_prefix)));
				_1c4cc18dd_SetF64((*(_16542_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1c4cc0a63_AsF64((*(_16542_d)).get()._field_Constant.ptr())));
				(*(_16542_d)).get()._field_Constant.get()._field_Kind=_17213_prim.get()._field_Kind;
			}
		}
		else if (_1c4cbbbe6_IsSigInt(_1aac053a7_Str(_17213_prim.ptr()))) {
			_case_begin_1a8991068:;
			{
				if ((!(_1aaba3014_sigAssignable(_1aac053a7_Str(_17213_prim.ptr()), _16542_d)))) {
					return false;;
				};
				(*(_16542_d)).get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>((*((*(_self_))._field_prefix)));
				_1c4cc0d1b_SetI64((*(_16542_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c4cc0546_AsI64((*(_16542_d)).get()._field_Constant.ptr())));
				(*(_16542_d)).get()._field_Constant.get()._field_Kind=_17213_prim.get()._field_Kind;
			}
		}
		else if (_1c4cbc004_IsUnsigInt(_1aac053a7_Str(_17213_prim.ptr()))) {
			_case_begin_1a89910ce:;
			{
				if ((!(_1aaba33cc_unsigAssignable(_1aac053a7_Str(_17213_prim.ptr()), _16542_d)))) {
					return false;;
				};
				(*(_16542_d)).get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>((*((*(_self_))._field_prefix)));
				_1c4cc10c4_SetU64((*(_16542_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c4cc07cc_AsU64((*(_16542_d)).get()._field_Constant.ptr())));
				(*(_16542_d)).get()._field_Constant.get()._field_Kind=_17213_prim.get()._field_Kind;
			}
		}
		_match_end_1a8990c38:;
	};
	return true;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc053c_litStr(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa7b9c0_LitExpr>* _20022_l) {
	jule::Str _20117_s = (*(_20022_l)).get()._field_Value.slice(1LL, ((*(_20022_l)).get()._field_Value.len() - 1LL));;
	if (_1c3e3ba15_IsRawStr((*(_20022_l)).get()._field_Value)) {
		_20117_s=_1aaba1298_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20117_s));
	} else {
		_20117_s=_1aaba15d9_ToStr(static_cast<jule::Slice<jule::U8>>(_20117_s));
	};
	jule::Ptr<_1c4cbcda1_Const> _20717_constant = static__1c4cbdb3d_NewStr(_20117_s);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_20717_constant, &__jule_any_type19), ._field_Constant=_20717_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc087d_litRune(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa7b9c0_LitExpr>* _21723_l) {
	jule::Str _21913_lt = (*(_21723_l)).get()._field_Value.slice(1LL, ((*(_21723_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _22013_r = _1aaba10de_ToRune(static_cast<jule::Slice<jule::U8>>(_21913_lt));;
	jule::Ptr<_1aabbbe1d_Data> _22117_data = jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Constant=static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_22013_r)))});;
	jule::Bool _22513_isAscii = _1aab88758_IsAscii(_22013_r);;
	if (_22513_isAscii) {
		_22117_data.get()._field_Kind=_1aacda35a_primU8;
	} else {
		_22117_data.get()._field_Kind=_1aacd9cc7_primI32;
	};
	_22117_data.get()._field_Mutable=true;
	_22117_data.get()._field_Model=jule::Any(jule::new_ptr<_1aaaa9932_RuneExprModel>(_1aaaa9932_RuneExprModel{._field_Code=_22013_r}), &__jule_any_type89);
	_22117_data.get()._field_IsRune=true;
	_22117_data.get()._field_untyped=true;
	return _22117_data;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc0bbe_litFloat(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa7b9c0_LitExpr>* _23924_l) {
	jule::F64 _24013_f = ({
		auto except = _1c4ca2c21_ParseFloat((*(_23924_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1c4cbcda1_Const> _24117_constant = static__1c4cbde07_NewF64(_24013_f);;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_untyped=true, ._field_Kind=_1aacdb3e4_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24117_constant, &__jule_any_type19), ._field_Constant=_24117_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc1010_litInt(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa7b9c0_LitExpr>* _25126_l) {
	;
	jule::Str _25417_lit = (*(_25126_l)).get()._field_Value;;
	jule::I32 _25517_base = 0LL;;
	{
		
		if (_1c38bdc8e_HasPrefix(_25417_lit, jule::Str("0x", 2))) {
			_case_begin_1a899dc46:;
			{
				(_25417_lit).mut_slice(2LL);;
				_25517_base=16LLU;
			}
		}
		else if (_1c38bdc8e_HasPrefix(_25417_lit, jule::Str("0b", 2))) {
			_case_begin_1a899dd34:;
			{
				(_25417_lit).mut_slice(2LL);;
				_25517_base=2LLU;
			}
		}
		else if (_1c38bdc8e_HasPrefix(_25417_lit, jule::Str("0o", 2))) {
			_case_begin_1a899d938:;
			{
				(_25417_lit).mut_slice(2LL);;
				_25517_base=8LLU;
			}
		}
		else if (((_25417_lit[0LL] == '0') && (_25417_lit.len() > 1LL))) {
			_case_begin_1a899d99e:;
			{
				(_25417_lit).mut_slice(1LL);;
				_25517_base=8LLU;
			}
		}
		else {
			_case_begin_1a899d8c2:;
			{
				_25517_base=10LLU;
			}
		}
		_match_end_1a899d86c:;
	};
	jule::Ptr<_1aabbbe1d_Data> _27517_d = jule::new_ptr<_1aabbbe1d_Data>();;
	jule::Bool _27717_ok = true;;
	jule::I64 _27813_sig = ({
		auto except = _1c4c9b2be_ParseInt(_25417_lit, _25517_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27717_ok=false;

			0LL;
		});
	});;
	if (_27717_ok) {
		_27517_d.get()._field_Constant=static__1c4cbd2e1_NewI64(_27813_sig);
		_27517_d.get()._field_Kind=_1aacd947a_primInt;
	} else {
		jule::U64 _28617_unsig = ({
			auto except = _1c4c9ad18_ParseUint(_25417_lit, _25517_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1aabbe162_pushErr(_self_, (*(_25126_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1aabbe4c5_pushSuggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_27517_d.get()._field_Constant=static__1c4cbd5aa_NewU64(_28617_unsig);
		_27517_d.get()._field_Kind=_1aacd90a1_primUint;
	};
	_27517_d.get()._field_Model=jule::Any(_27517_d.get()._field_Constant, &__jule_any_type19);
	if ((!(_1aabc01eb_applyNumericPrefix(_self_, &(_27517_d))))) {
		_1aabe5ee1_fitBitsize(&(_27517_d));
	};
	_27517_d.get()._field_Mutable=true;
	_27517_d.get()._field_untyped=true;
	return _27517_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc1351_litNum(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa7b9c0_LitExpr>* _30726_l) {
	{
		
		if (_1c3e3c708_IsFloat((*(_30726_l)).get()._field_Value)) {
			_case_begin_1a89a5c2b:;
			{
				return _1aabc0bbe_litFloat(_self_, _30726_l);;
			}
		}
		else {
			_case_begin_1a89a5577:;
			{
				return _1aabc1010_litInt(_self_, _30726_l);;
			}
		}
		_match_end_1a89a54cd:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc1692_evalLit(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa7b9c0_LitExpr> _31626_lit) {
	{
		
		if (_1c3e3b74b_IsStr(_31626_lit.get()._field_Value)) {
			_case_begin_1a89a66aa:;
			{
				return _1aabc053c_litStr(_self_, &(_31626_lit));;
			}
		}
		else if (_1c3e3bcce_IsRune(_31626_lit.get()._field_Value)) {
			_case_begin_1a89a6732:;
			{
				return _1aabc087d_litRune(_self_, &(_31626_lit));;
			}
		}
		else if (_1c3e3c9c2_IsNum(_31626_lit.get()._field_Value)) {
			_case_begin_1a89a67a9:;
			{
				return _1aabc1351_litNum(_self_, &(_31626_lit));;
			}
		}
		else {
			_case_begin_1a89a6369:;
			{
				return nullptr;;
			}
		}
		_match_end_1a89a62c0:;
	};
}



inline jule::Any _1aabc19d3_findBuiltins(_1aabbdb12_Eval* _self_, jule::Str* _32932_ident) {
	if (_1aab42d83_IsPub(_32932_ident)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1a89a86ac:;
				{
					jule::Any _33325_def = _1aabe5cb0_findBuiltinsImport(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1aab24c33_ImportInfo>(1));;
					if ((_33325_def != nullptr)) {
						return _33325_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1a89a8723:;
				{
					jule::Any _33825_def = _1aabe6a19_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1aab45c87_Sema>(3));;
					if ((_33825_def != nullptr)) {
						return _33825_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1a89a8789:;
				{
					jule::Any _34325_def = _1aabe6a19_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1aab0aae8_scopeChecker>(0).get()._field_s);;
					if ((_34325_def != nullptr)) {
						return _34325_def;;
					};
				}
			}
			_match_end_1a89a8657:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1aacdbb64_findBuiltinDef(_32932_ident);;
}



inline jule::Any _1aabc1dce_getDef(_1aabbdb12_Eval* _self_, jule::Str* _35626_ident, jule::Bool _35638_binded) {
	jule::Ptr<_1aab68969_Var> _36117_v = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac20515_FindVar((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36117_v != nullptr)) {
		return jule::Any(_36117_v, &__jule_any_type8);;
	};
	jule::Ptr<_1aabeb403_TypeAlias> _36617_ta = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac20911_FindTypeAlias((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36617_ta != nullptr)) {
		return jule::Any(_36617_ta, &__jule_any_type67);;
	};
	if ((!(_35638_binded))) {
		jule::Ptr<_1aaac8b3d_Enum> _37221_enm = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac2188a_FindEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37221_enm != nullptr)) {
			return jule::Any(_37221_enm, &__jule_any_type68);;
		};
		jule::Ptr<_1aaaca348_TypeEnum> _37721_tenm = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac21bcb_FindTypeEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37721_tenm != nullptr)) {
			return jule::Any(_37721_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_1aaab3199_Fn> _38317_f = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac21208_FindFn((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38317_f != nullptr)) {
		return jule::Any(_38317_f, &__jule_any_type65);;
	};
	jule::Ptr<_1aaa972b0_Struct> _38817_s = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac20d0c_FindStruct((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38817_s != nullptr)) {
		return jule::Any(_38817_s, &__jule_any_type66);;
	};
	return _1aabc19d3_findBuiltins(_self_, _35626_ident);;
}



inline void _1a89be3e8_pushReference(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaab609d_FnIns>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c6190b8a:;
			{
				jule::Ptr<_1aab0aae8_scopeChecker> _39921_sc = _1aab0de70_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1aab0aae8_scopeChecker>(0));;
				if ((!(_1a89c1d02_Exist(_39921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1aaaba03b_Push(_39921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1a89c086c:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1a89c1d02_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1aaaba03b_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1a89c0817:;
	};
}

inline void _1c61a4484_pushReference(_1aabbdb12_Eval* _self_, jule::Ptr<_1aab68969_Var>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c61a5e36:;
			{
				jule::Ptr<_1aab0aae8_scopeChecker> _39921_sc = _1aab0de70_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1aab0aae8_scopeChecker>(0));;
				if ((!(_1c61a6d49_Exist(_39921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1aaaba03b_Push(_39921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1c61a58b4:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1c61a6d49_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1aaaba03b_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1c61a585e:;
	};
}

inline void _1a8a35272_pushReference(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa9a390_StructIns>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a8a36c57:;
			{
				jule::Ptr<_1aab0aae8_scopeChecker> _39921_sc = _1aab0de70_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1aab0aae8_scopeChecker>(0));;
				if ((!(_1a8a37b6a_Exist(_39921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1aaaba03b_Push(_39921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1a8a366d5:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1a8a37b6a_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1aaaba03b_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1a8a36680:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc24c8__evalEnum(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaac8b3d_Enum> _41328_enm) {
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_41328_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc28c4_evalEnum(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaac8b3d_Enum> _42231_enm, jule::Ptr<_1c3e3a5e6_Token> _42243_errorToken) {
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), _42231_enm.get()._field_Public, _42231_enm.get()._field_Token)))) {
		_1aabbe162_pushErr(_self_, _42243_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_42231_enm.get()._field_Ident, &__jule_any_type5)}));
		_1aabbe4c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1aabc24c8__evalEnum(_self_, _42231_enm);;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc2c15__evalTypeEnum(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaaca348_TypeEnum> _43132_enm) {
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_43132_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc3111_evalTypeEnum(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaaca348_TypeEnum> _44035_enm, jule::Ptr<_1c3e3a5e6_Token> _44051_errorToken) {
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), _44035_enm.get()._field_Public, _44035_enm.get()._field_Token)))) {
		_1aabbe162_pushErr(_self_, _44051_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_44035_enm.get()._field_Ident, &__jule_any_type5)}));
		_1aabbe4c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1aabc2c15__evalTypeEnum(_self_, _44035_enm);;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc3452__evalStruct(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa9a390_StructIns> _44930_s) {
	jule::Ptr<_1aabbbe1d_Data> _45017_d = jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_44930_s, 0)}), ._field_Model=jule::Any(_44930_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_44930_s.get()._field_Decl != nullptr) && _44930_s.get()._field_Decl.get()._field_Binded)) {
		_45017_d.get()._field_Kind.get()._field_BindIdent=_44930_s.get()._field_Decl.get()._field_Ident;
	};
	return _45017_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc384d_evalStruct(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa9a390_StructIns> _46333_s, jule::Ptr<_1c3e3a5e6_Token> _46348_errorToken) {
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), _46333_s.get()._field_Decl.get()._field_Public, _46333_s.get()._field_Decl.get()._field_Token)))) {
		_1aabbe162_pushErr(_self_, _46348_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_46333_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_1aabbe4c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aabc4002_checkDeprecated(_self_, &(_46333_s.get()._field_Decl.get()._field_Directives), _46348_errorToken);
	return _1aabc3452__evalStruct(_self_, _46333_s);;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc3b8e_evalFnIns(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaab609d_FnIns> _47328_f) {
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_47328_f, 1)}), ._field_Model=jule::Any(_47328_f, &__jule_any_type7), });;
}



inline void _1aabc4002_checkDeprecated(_1aabbdb12_Eval* _self_, jule::Slice<jule::Ptr<_1aaa42c61_Directive>>* _48239_directives, jule::Ptr<_1c3e3a5e6_Token> _48270_tok) {
	if (_1aabbeb57_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1aaa42c61_Directive> _48713_d = _1aabe58e7_findDirective(_48239_directives, jule::Str("deprecated", 10));;
	if ((_48713_d != nullptr)) {
		if ((_48713_d.get()._field_Args.len() == 0LL)) {
			_1aabbe162_pushErr(_self_, _48270_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_1aabbe162_pushErr(_self_, _48270_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_48713_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_1aabbe4c5_pushSuggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc43ed_evalFn(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaab3199_Fn> _49829_f, jule::Ptr<_1c3e3a5e6_Token> _49837_errorToken) {
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), _49829_f.get()._field_Public, _49829_f.get()._field_Token)))) {
		_1aabbe162_pushErr(_self_, _49837_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_49829_f.get()._field_Ident, &__jule_any_type5)}));
		_1aabbe4c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aabc4002_checkDeprecated(_self_, &(_49829_f.get()._field_Directives), _49837_errorToken);
	jule::Ptr<_1aaab609d_FnIns> _50717_ins = _1aaab4909_instance(_49829_f);;
	_1a89be3e8_pushReference(_self_, &(_50717_ins));
	return _1aabc3b8e_evalFnIns(_self_, _50717_ins);;
}



inline void _1aabc481b_pushIllegalCycleError(_1aabbdb12_Eval* _self_, jule::Ptr<_1aab68969_Var>* _51241_v1, jule::Ptr<_1aab68969_Var>* _51252_v2, _1c38d3b83_StrBuilder* _51267_message) {
	;
	jule::Str _51413_refers_to = _1c39840a7_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_51241_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_51252_v2)).get()._field_Ident, &__jule_any_type5)}));;
	jule::Slice<jule::U8> _51513_buf = _1c38ddbe3_Buf(_51267_message);;
	_1c38dc94a_WriteStr(_51267_message, _1c38bd497_Repeat(jule::Str(" ", 1), 7LL));
	_1c38dc94a_WriteStr(_51267_message, _51413_refers_to);
	_1c38dcc03_WriteByte(_51267_message, '\n');
	_1c38dc692_Write(_51267_message, _51513_buf);
}



inline jule::Bool _1aabc4c17_checkCrossCycle(_1aabbdb12_Eval* _self_, jule::Ptr<_1aab68969_Var>* _52235_v, _1c38d3b83_StrBuilder* _52249_message) {
	{
		auto expr = &((*(_52235_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61969e8:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> *_52316_d = it;
			{
				if (((*(_52316_d)) == (*(_self_))._field_owner)) {
					_1aabc481b_pushIllegalCycleError(_self_, _52235_v, _52316_d, _52249_message);
					return false;;
				};
				if ((!(_1aabc4c17_checkCrossCycle(_self_, _52316_d, _52249_message)))) {
					_1aabc481b_pushIllegalCycleError(_self_, _52235_v, _52316_d, _52249_message);
					return false;;
				};
			}
			_iter_next_1c61969e8:;
			++it;
			goto _iter_begin_1c61969e8;
		}
		_iter_end_1c61969e8:;
	};
	return true;;
}



inline jule::Bool _1aabc5113_checkIllegalCycles(_1aabbdb12_Eval* _self_, jule::Ptr<_1aab68969_Var>* _53942_v, jule::Ptr<_1c3e3a5e6_Token> _53951_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*(_self_))._field_owner.get()._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53942_v)))) {
		_1aabbe162_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1c38d3b83_StrBuilder _55217_message = static__1c38d3ea2_New(32LL);;
	if ((!(_1aabc4c17_checkCrossCycle(_self_, _53942_v, &(_55217_message))))) {
		jule::Str _55521_errMsg = _1c38dd242_Str(&_55217_message);;
		_1c38dd440_Clear(&_55217_message);
		_1aabc481b_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53942_v, &(_55217_message));
		_55521_errMsg+=_1c38dd242_Str(&_55217_message);
		_1aabbe162_pushErr(_self_, _53951_declToken, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = (*(_self_))._field_owner.get()._field_Depends; __jule_push_dest.push((*(_53942_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc550e_evalVar(_1aabbdb12_Eval* _self_, jule::Ptr<_1aab68969_Var> _56730_v, jule::Ptr<_1c3e3a5e6_Token> _56739_errorToken) {
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), _56730_v.get()._field_Public, _56730_v.get()._field_Token)))) {
		_1aabbe162_pushErr(_self_, _56739_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_56730_v.get()._field_Ident, &__jule_any_type5)}));
		_1aabbe4c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aabc4002_checkDeprecated(_self_, &(_56730_v.get()._field_Directives), _56739_errorToken);
	if ((_56730_v.get()._field_Token == nullptr)) {
		goto _julec_label_1c61ac5e1;
	};
	_56730_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1c61a06d3:;
			{
				jule::Bool _58617_ok = _1aabc5113_checkIllegalCycles(_self_, &(_56730_v), _56739_errorToken);;
				if ((!(_58617_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1c61a0749:;
			{
				if (((!(_56730_v.get()._field_Reference)) || _1aabbeb57_isUnsafe(_self_))) {
					goto _match_end_1c61a067d;
				};
				jule::Ptr<_1aab0aae8_scopeChecker> _59421_s = (*(_self_))._field_lookup.cast_ptr<_1aab0aae8_scopeChecker>(0);;
				while (((_59421_s.get()._field_owner == nullptr) && (_59421_s.get()._field_parent != nullptr))) {
					{
						_59421_s=_59421_s.get()._field_parent;
					}
				_iter_next_1c61a1ad0:;
				}
				_iter_end_1c61a1ad0:;;
				if ((((_59421_s.get()._field_owner != nullptr) && _59421_s.get()._field_owner.get()._field_Anon) && (_56730_v.get()._field_Scope != _59421_s.get()._field_owner.get()._field_Scope))) {
					_1aabbe162_pushErr(_self_, _56739_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_56730_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_1c61a067d:;
	};
	if ((_56730_v.get()._field_Scope == nullptr)) {
		_1c61a4484_pushReference(_self_, &(_56730_v));
	};
	if (((!(_56730_v.get()._field_Binded)) && ((_56730_v.get()._field_Value == nullptr) || (_56730_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_56730_v.get()._field_Constant) {
			_1aab604bb_checkVar((*(_self_))._field_s, &(_56730_v), jule::Trait<_1aac21d30_Lookup>((*(_self_))._field_s, 3));
			if (((_56730_v.get()._field_Value == nullptr) || (_56730_v.get()._field_Value.get()._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if (((_56730_v.get()._field_Kind == nullptr) || (_56730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_56730_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1aab604bb_checkVar((*(_self_))._field_s, &(_56730_v), (*(_self_))._field_lookup);
		if (((_56730_v.get()._field_Kind == nullptr) || (_56730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1c61ac5e1:;
	jule::Ptr<_1aabbbe1d_Data> _63817_d = jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_56730_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_56730_v.get()._field_Mutable, ._field_Reference=_56730_v.get()._field_Reference, ._field_Lvalue=(!(_56730_v.get()._field_Constant)), ._field_Model=jule::Any(_56730_v, &__jule_any_type8), });;
	if ((((!(_56730_v.get()._field_Binded)) && _1aab68cee_IsInitialized(_56730_v.ptr())) && (_56730_v.get()._field_Value.get()._field_Data != nullptr))) {
		_63817_d.get()._field_IsRune=_56730_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_56730_v.get()._field_Constant && (_56730_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_63817_d.get()._field_Constant=jule::new_ptr<_1c4cbcda1_Const>((*(_56730_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_63817_d.get()._field_Model=jule::Any(_63817_d.get()._field_Constant, &__jule_any_type19);
		if (_1aab6931b_untypedConstant(_56730_v.ptr())) {
			_1aabc01eb_applyNumericPrefix(_self_, &(_63817_d));
			_63817_d.get()._field_untyped=true;
		};
	};
	return _63817_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc590a_evalTypeAlias(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabeb403_TypeAlias> _66236_ta, jule::Ptr<_1c3e3a5e6_Token> _66252_errorToken) {
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), _66236_ta.get()._field_Public, _66236_ta.get()._field_Token)))) {
		_1aabbe162_pushErr(_self_, _66252_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_66236_ta.get()._field_Ident, &__jule_any_type5)}));
		_1aabbe4c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_66236_ta.get()._field_Used=true;
	jule::Trait<_1aabebc3e_Kind> _67117_kind = _66236_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1aabbbe1d_Data> _67217_d = nullptr;;
	{
		auto &_match_expr{ _67117_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1c61b560a:;
			{
				_67217_d=_1aabc3452__evalStruct(_self_, _67117_kind.cast_ptr<_1aaa9a390_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1c61b3e33:;
			{
				_67217_d=_1aabc24c8__evalEnum(_self_, _67117_kind.cast_ptr<_1aaac8b3d_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1c61b3e99:;
			{
				_67217_d=_1aabc2c15__evalTypeEnum(_self_, _67117_kind.cast_ptr<_1aaaca348_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1c61b3dbc:;
			{
				_67217_d=jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=_66236_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_66236_ta.get()._field_Binded) {
					_67217_d.get()._field_Kind.get()._field_BindIdent=_66236_ta.get()._field_Ident;
				} else {
					_67217_d.get()._field_Kind.get()._field_BindIdent=_66236_ta.get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
				};
				_67217_d.get()._field_Model=jule::Any(_67217_d.get()._field_Kind, &__jule_any_type90);
			}
		}
		_match_end_1c61b3d67:;
	};
	_67217_d.get()._field_Kind.get()._field_Generic=_66236_ta.get()._field_Generic;
	return _67217_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc5d06_evalDef(_1aabbdb12_Eval* _self_, jule::Any* _69831_def, jule::Ptr<_1c3e3a5e6_Token> _69841_ident) {
	{
		auto &_match_expr{ (*(_69831_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c61b80ad:;
			{
				return _1aabc550e_evalVar(_self_, (*(_69831_def)).cast_ptr<_1aab68969_Var>(&__jule_any_type8), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c61b8124:;
			{
				return _1aabc28c4_evalEnum(_self_, (*(_69831_def)).cast_ptr<_1aaac8b3d_Enum>(&__jule_any_type68), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1c61b818a:;
			{
				return _1aabc3111_evalTypeEnum(_self_, (*(_69831_def)).cast_ptr<_1aaaca348_TypeEnum>(&__jule_any_type69), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c61b8201:;
			{
				return _1aabc384d_evalStruct(_self_, _1aaa97733_instance((*(_69831_def)).cast_ptr<_1aaa972b0_Struct>(&__jule_any_type66)), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c61b8267:;
			{
				jule::Ptr<_1aaab3199_Fn> _70921_f = (*(_69831_def)).cast_ptr<_1aaab3199_Fn>(&__jule_any_type65);;
				if ((!_70921_f.get()._field_Ident.equal("init", 4))) {
					return _1aabc43ed_evalFn(_self_, _70921_f, _69841_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c61b82cd:;
			{
				return _1aabc3b8e_evalFnIns(_self_, (*(_69831_def)).cast_ptr<_1aaab609d_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c61b8344:;
			{
				return _1aabc590a_evalTypeAlias(_self_, (*(_69831_def)).cast_ptr<_1aabeb403_TypeAlias>(&__jule_any_type67), _69841_ident);;
			}
		}
		_match_end_1c61b8058:;
	};
	_1aabbe162_pushErr(_self_, _69841_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_69841_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc6147_evalIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa7c350_IdentExpr> _72228_ident) {
	jule::Any _72317_def = _1aabc1dce_getDef(_self_, &(_72228_ident.get()._field_Ident), _72228_ident.get()._field_Binded);;
	return _1aabc5d06_evalDef(_self_, &(_72317_def), _72228_ident.get()._field_Token);;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc6488_evalUnary(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7c9d2_UnaryExpr> _72733_u) {
	_1aabdc49e_unaryEval _72817_unary = static__1aabdc8de_new(_self_);;
	return _1aabddd1e_eval(&_72817_unary, _72733_u);;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc67c9_evalVariadic(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7cdab_VariadicExpr> _73236_v) {
	if ((_73236_v.get()._field_Expr == nullptr)) {
		_1aabbe162_pushErr(_self_.ptr(), _73236_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aabec1e5_TypeKind> _73817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_73817_prefix;
	});;
	jule::Ptr<_1aabbbe1d_Data> _74217_d = _1aabdbed7_evalExpr(_self_, _73236_v.get()._field_Expr);;
	if ((_74217_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aabee857_Variadicable(_74217_d.get()._field_Kind.ptr())))) {
		_1aabbe162_pushErr(_self_.ptr(), _73236_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_74217_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aac09565_Slc> _75217_slc = _1aac00b44_Slc(_74217_d.get()._field_Kind.ptr());;
	_74217_d.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_BindIdent=_75217_slc.get()._field_Elem.get()._field_BindIdent, ._field_Generic=_75217_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_75217_slc.get()._field_Elem.get()._field_Kind});
	return _74217_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc6b1a_evalUnsafe(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7bd99_UnsafeExpr> _76234_u) {
	jule::Bool _76313_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1aabbbe1d_Data> _76517_d = _1aabdbed7_evalExpr(_self_, _76234_u.get()._field_Expr);;
	_self_.get()._field_unsafety=_76313_unsafety;
	return _76517_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc6e5b_evalArr(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa82025_SliceExpr> _77031_s) {
	jule::Ptr<_1aac0b886_Arr> _77217_pt = _1aac008ad_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1aac0b886_Arr> _77417_arr = jule::new_ptr<_1aac0b886_Arr>(_1aac0b886_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_77217_pt.get()._field_Elem});;
	jule::Bool _78017_filled = false;;
	if ((_77031_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _77031_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1a5cd9d10:;
				{
					if ((_77031_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1aaa7cdab_VariadicExpr>(&__jule_any_type82).get()._field_Expr != nullptr)) {
						goto _match_end_1a5cd9c66;
					};
					if (_77217_pt.get()._field_Auto) {
						_1aabbe162_pushErr(_self_.ptr(), _77031_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78017_filled=true;
					_77031_s.get()._field_Exprs=_77031_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1a5cd9c66:;
		};
	};
	_77417_arr.get()._field_N=static_cast<jule::I32>(_77031_s.get()._field_Exprs.len());
	if ((!(_77217_pt.get()._field_Auto))) {
		if ((_77417_arr.get()._field_N > _77217_pt.get()._field_N)) {
			_1aabbe162_pushErr(_self_.ptr(), _77031_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_77417_arr.get()._field_N < _77217_pt.get()._field_N)) {
			_77417_arr.get()._field_N=_77217_pt.get()._field_N;
		};
	};
	jule::Ptr<_1aaaa4d6c_ArrayExprModel> _80917_model = jule::new_ptr<_1aaaa4d6c_ArrayExprModel>(_1aaaa4d6c_ArrayExprModel{._field_Kind=_77417_arr, });;
	if (_78017_filled) {
		_80917_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_80917_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _77031_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1aabec1e5_TypeKind> _81817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_77417_arr.get()._field_Elem;
	{
		auto expr = &(_77031_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5cdd8d5:;
		if (it != expr_end) {
			jule::Ptr<_1aaa7a925_Expr> _82021_elem = *it;
			{
				jule::Ptr<_1aabbbe1d_Data> _82121_d = _1aabdbed7_evalExpr(_self_, _82021_elem);;
				if ((_82121_d == nullptr)) {
					goto _iter_next_1a5cdd8d5;
				};
				_1aab513d0_checkAssignType(_self_.get()._field_s, false, &(_77417_arr.get()._field_Elem), &(_82121_d), _77031_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _80917_model.get()._field_Elems; __jule_push_dest.push(_82121_d.get()._field_Model); };
			}
			_iter_next_1a5cdd8d5:;
			++it;
			goto _iter_begin_1a5cdd8d5;
		}
		_iter_end_1a5cdd8d5:;
	};
	_self_.get()._field_prefix=_81817_prefix;
	if (_78017_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _80917_model.get()._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_77417_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_80917_model, &__jule_any_type91), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc7412_evalExpSlc(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa82025_SliceExpr> _84434_s, jule::Ptr<_1aabec1e5_TypeKind> _84453_t, jule::Any _84471_first) {
	jule::Ptr<_1aac09565_Slc> _84517_slc = jule::new_ptr<_1aac09565_Slc>(_1aac09565_Slc{._field_Elem=_84453_t});;
	jule::I32 _84917_i = 0LL;;
	jule::Ptr<_1aaaa1d25_SliceExprModel> _85017_model = jule::new_ptr<_1aaaa1d25_SliceExprModel>(_1aaaa1d25_SliceExprModel{._field_ElemKind=_84453_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _84434_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84471_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _85017_model.get()._field_Elems; __jule_push_dest.push(_84471_first); };
		_84917_i=1LL;
	};
	jule::Ptr<_1aabec1e5_TypeKind> _85917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_84517_slc.get()._field_Elem;
	{
		auto expr = _84434_s.get()._field_Exprs.slice(_84917_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a89c5a09:;
		if (it != expr_end) {
			jule::Ptr<_1aaa7a925_Expr> _86121_elem = *it;
			{
				jule::Ptr<_1aabbbe1d_Data> _86221_d = _1aabdbed7_evalExpr(_self_, _86121_elem);;
				if ((_86221_d == nullptr)) {
					goto _iter_next_1a89c5a09;
				};
				_1aab513d0_checkAssignType(_self_.get()._field_s, false, &(_84517_slc.get()._field_Elem), &(_86221_d), _84434_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _85017_model.get()._field_Elems; __jule_push_dest.push(_86221_d.get()._field_Model); };
			}
			_iter_next_1a89c5a09:;
			++it;
			goto _iter_begin_1a89c5a09;
		}
		_iter_end_1a89c5a09:;
	};
	_self_.get()._field_prefix=_85917_prefix;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_84517_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85017_model, &__jule_any_type83), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabc7753_evalSliceExpr(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa82025_SliceExpr> _88037_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1aac008ad_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a89c947a:;
				{
					return _1aabc6e5b_evalArr(_self_, _88037_s);;
				}
			}
			else if ((_1aac00b44_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1a89c9502:;
				{
					jule::Ptr<_1aac09565_Slc> _88625_pt = _1aac00b44_Slc(_self_.get()._field_prefix.ptr());;
					return _1aabc7412_evalExpSlc(_self_, _88037_s, _88625_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_1a89c936a:;
		};
	};
	jule::Ptr<_1aabec1e5_TypeKind> _89117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_88037_s.get()._field_Exprs.len() == 0LL)) {
		_1aabbe162_pushErr(_self_.ptr(), _88037_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aabbbe1d_Data> _89917_firstElem = _1aabdbed7_evalExpr(_self_, _88037_s.get()._field_Exprs[0LL]);;
	if ((_89917_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aabbbe1d_Data> _90417_d = _1aabc7412_evalExpSlc(_self_, _88037_s, _89917_firstElem.get()._field_Kind, _89917_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_89117_prefix;
	return _90417_d;;
}



inline void _1aabc7ab6_checkIntegerIndexingByData(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data>* _91050_d, jule::Ptr<_1c3e3a5e6_Token> _91060_token) {
	jule::Str _91113_err_key = _1aabe80d1_checkDataForIntegerIndexing(_91050_d);;
	{
		auto &_match_expr{ _91113_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a89ce87b:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1a89cdd86:;
			{
				_1aabbe162_pushErr(_self_, _91060_token, _91113_err_key, jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_91050_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1a89ce293:;
			{
				_1aabbe162_pushErr(_self_, _91060_token, _91113_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1a89ce23d:;
	};
}



inline void _1aabc7ed4_indexingPtr(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data>* _92235_d, jule::Ptr<_1aabbbe1d_Data>* _92250_index, jule::Ptr<_1aaa829b5_IndexingExpr>* _92265_i) {
	_1aabc7ab6_checkIntegerIndexingByData(_self_, _92250_index, (*(_92265_i)).get()._field_Token);
	(*(_92235_d)).get()._field_Lvalue=true;
	jule::Ptr<_1aac0c359_Ptr> _92617_ptr = _1aac0010a_Ptr((*(_92235_d)).get()._field_Kind.ptr());;
	{
		
		if (_1aac0cd93_IsUnsafe(_92617_ptr.ptr())) {
			_case_begin_1a89d1927:;
			{
				_1aabbe162_pushErr(_self_, (*(_92265_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1aabbeb57_isUnsafe(_self_)))) {
			_case_begin_1a89d199e:;
			{
				_1aabbe162_pushErr(_self_, (*(_92265_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a89d18c2:;
	};
	(*(_92235_d)).get()._field_Kind=_92617_ptr.get()._field_Elem;
}



inline void _1aabc8402_indexingArr(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data>* _93835_d, jule::Ptr<_1aabbbe1d_Data>* _93850_index, jule::Ptr<_1aaa829b5_IndexingExpr>* _93865_i) {
	jule::Ptr<_1aac0b886_Arr> _93917_arr = _1aac008ad_Arr((*(_93835_d)).get()._field_Kind.ptr());;
	(*(_93835_d)).get()._field_Kind=_93917_arr.get()._field_Elem;
	_1aabc7ab6_checkIntegerIndexingByData(_self_, _93850_index, (*(_93865_i)).get()._field_Token);
	(*(_93835_d)).get()._field_Lvalue=true;
	if ((_1aabbc7e2_IsConst((*(_93850_index)).ptr()) && (_1c4cc0a63_AsF64((*(_93850_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_93917_arr.get()._field_N)))) {
		_1aabbe162_pushErr(_self_, (*(_93865_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1aabc8820_indexingSlc(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data>* _94835_d, jule::Ptr<_1aabbbe1d_Data>* _94850_index, jule::Ptr<_1aaa829b5_IndexingExpr>* _94865_i) {
	jule::Ptr<_1aac09565_Slc> _94917_slc = _1aac00b44_Slc((*(_94835_d)).get()._field_Kind.ptr());;
	(*(_94835_d)).get()._field_Kind=_94917_slc.get()._field_Elem;
	_1aabc7ab6_checkIntegerIndexingByData(_self_, _94850_index, (*(_94865_i)).get()._field_Token);
	(*(_94835_d)).get()._field_Lvalue=true;
	if ((!(_1aabbc7e2_IsConst((*(_94850_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_94835_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a89d728a:;
			{
				jule::Ptr<_1aaaa1d25_SliceExprModel> _96021_m = (*(_94835_d)).get()._field_Model.cast_ptr<_1aaaa1d25_SliceExprModel>(&__jule_any_type83);;
				jule::F64 _96117_indx = _1c4cc0a63_AsF64((*(_94850_index)).get()._field_Constant.ptr());;
				if ((_96117_indx >= static_cast<jule::F64>(_96021_m.get()._field_Elems.len()))) {
					_1aabbe162_pushErr(_self_, (*(_94865_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_94835_d)).get()._field_Model=_96021_m.get()._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_96117_indx))];
					(*(_94835_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_1a89d7235:;
	};
}



inline void _1aabc8c3d_indexingMap(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data>* _97135_d, jule::Ptr<_1aabbbe1d_Data>* _97150_index, jule::Ptr<_1aaa829b5_IndexingExpr>* _97169_i) {
	(*(_97135_d)).get()._field_Lvalue=true;
	if (((*(_97150_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1aac0ac09_Map> _97617_m = _1aac0167d_Map((*(_97135_d)).get()._field_Kind.ptr());;
	_1aaba59d9_assignTypeChecker _97717_atc = _1aaba59d9_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_97617_m.get()._field_Key, ._field_d=(*(_97150_index)), ._field_errorToken=(*(_97169_i)).get()._field_Token};;
	_1aaba6c4e_check(&_97717_atc);
	(*(_97135_d)).get()._field_Kind=_97617_m.get()._field_Val;
}



inline void _1aabc915b_indexingStr(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data>* _98735_d, jule::Ptr<_1aabbbe1d_Data>* _98750_index, jule::Ptr<_1aaa829b5_IndexingExpr>* _98765_i) {
	(*(_98735_d)).get()._field_Kind=_1aacda35a_primU8;
	(*(_98735_d)).get()._field_Mutable=false;
	(*(_98735_d)).get()._field_Lvalue=true;
	if (((*(_98750_index)) == nullptr)) {
		return;;
	};
	_1aabc7ab6_checkIntegerIndexingByData(_self_, _98750_index, (*(_98765_i)).get()._field_Token);
	if ((!(_1aabbc7e2_IsConst((*(_98750_index)).ptr())))) {
		(*(_98735_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_1aabbc7e2_IsConst((*(_98735_d)).ptr())) {
		jule::Ptr<_1c3e3a5e6_Token> _100417_errorToken = (*(_98765_i)).get()._field_Token;;
		jule::I64 _100517_j = _1c4cc0546_AsI64((*(_98750_index)).get()._field_Constant.ptr());;
		jule::Str _100617_s = _1c4cc0029_ReadStr((*(_98735_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I32>(_100517_j) >= _100617_s.len())) {
			_1aabbe162_pushErr(_self_, _100417_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1c4cc10c4_SetU64((*(_98735_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100617_s[static_cast<jule::I32>(_100517_j)])));
		};
	};
}



inline void _1aabc9579_toIndexing(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data>* _101534_d, jule::Ptr<_1aabbbe1d_Data>* _101549_index, jule::Ptr<_1aaa829b5_IndexingExpr>* _101568_i) {
	{
		
		if ((_1aac0010a_Ptr((*(_101534_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a89e144d:;
			{
				_1aabc7ed4_indexingPtr(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1aac008ad_Arr((*(_101534_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a89e14c5:;
			{
				_1aabc8402_indexingArr(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1aac00b44_Slc((*(_101534_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a89e154c:;
			{
				_1aabc8820_indexingSlc(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1aac0167d_Map((*(_101534_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a89e15c4:;
			{
				_1aabc8c3d_indexingMap(_self_, _101534_d, _101549_index, _101568_i);
				return;;
			}
		}
		else if ((_1aabeeadd_Prim((*(_101534_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a89e164b:;
			{
				jule::Ptr<_1aac05066_Prim> _103017_prim = _1aabeeadd_Prim((*(_101534_d)).get()._field_Kind.ptr());;
				{
					
					if (_1aac084ed_IsStr(_103017_prim.ptr())) {
						_case_begin_1a89e4b9e:;
						{
							_1aabc915b_indexingStr(_self_, _101534_d, _101549_index, _101568_i);
							return;;
						}
					}
					_match_end_1a89e4b16:;
				};
			}
		}
		_match_end_1a89e130a:;
	};
	_1aabbe162_pushErr(_self_, (*(_101568_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_101534_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _1aabc9a30_pushGenericsFromExprSubIdent(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7db15_SubIdentExpr>* _104053_sexpr, jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>>* _104114_generics, jule::Ptr<_1aaa7a925_Expr>* _104142_expr) {
	jule::Ptr<_1aaa76ee8_SubIdentTypeDecl> _104217_t = jule::new_ptr<_1aaa76ee8_SubIdentTypeDecl>();;
	if ((!(_1aabe8ec2_pushSubIdentFromExpr(jule::Any((*(_104053_sexpr)), &__jule_any_type92), &(_104217_t))))) {
		_1aabbe162_pushErr(_self_.ptr(), (*(_104142_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> &__jule_push_dest = (*(_104114_generics)); __jule_push_dest.push(jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Kind=jule::Any(_104217_t, &__jule_any_type93)})); };
	return true;;
}



inline jule::Bool _1aabc9e2b_pushGenericsFromData(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>>* _105145_generics, jule::Ptr<_1aaa7a925_Expr>* _105173_expr) {
	{
		auto &_match_expr{ (*(_105173_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a89e7b19:;
			{
				jule::Ptr<_1aaa7c9d2_UnaryExpr> _105421_u = (*(_105173_expr)).get()._field_Kind.cast_ptr<_1aaa7c9d2_UnaryExpr>(&__jule_any_type94);;
				{
					auto &_match_expr{ _105421_u.get()._field_Op.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_1a89e9ab6:;
						{
							jule::Ptr<_1aaa7811a_PtrTypeDecl> _105725_kind = jule::new_ptr<_1aaa7811a_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> _105825__generics = jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>>::alloc(0LL, 1LL);;
							_1aabc9e2b_pushGenericsFromData(_self_, &(_105825__generics), &(_105421_u.get()._field_Expr));
							_105725_kind.get()._field_Elem=_105825__generics[0LL];
							{ jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=(*(_105173_expr)).get()._field_Token, ._field_Kind=jule::Any(_105725_kind, &__jule_any_type77)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_1a89ea149:;
						{
							jule::Ptr<_1aaa7768b_SptrTypeDecl> _106625_kind = jule::new_ptr<_1aaa7768b_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> _106725__generics = jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>>::alloc(0LL, 1LL);;
							_1aabc9e2b_pushGenericsFromData(_self_, &(_106725__generics), &(_105421_u.get()._field_Expr));
							_106625_kind.get()._field_Elem=_106725__generics[0LL];
							{ jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=(*(_105173_expr)).get()._field_Token, ._field_Kind=jule::Any(_106625_kind, &__jule_any_type78)})); };
						}
					}
					else {
						_case_begin_1a89e9753:;
						{
							_1aabbe162_pushErr(_self_.ptr(), _105421_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1a89e96ed:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a89e871e:;
			{
				{ jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push((*(_105173_expr)).get()._field_Kind.cast_ptr<_1aaa765e1_TypeDecl>(&__jule_any_type95)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a89e8785:;
			{
				jule::Ptr<_1aaa7db15_SubIdentExpr> _108121_sexpr = (*(_105173_expr)).get()._field_Kind.cast_ptr<_1aaa7db15_SubIdentExpr>(&__jule_any_type92);;
				return _1aabc9a30_pushGenericsFromExprSubIdent(_self_, &(_108121_sexpr), _105145_generics, _105173_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a89e87eb:;
			{
				jule::Ptr<_1aaa7c350_IdentExpr> _108421_ident = (*(_105173_expr)).get()._field_Kind.cast_ptr<_1aaa7c350_IdentExpr>(&__jule_any_type86);;
				{ jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1aaa76beb_IdentTypeDecl>(_1aaa76beb_IdentTypeDecl{._field_Token=_108421_ident.get()._field_Token, ._field_Ident=_108421_ident.get()._field_Ident, ._field_Binded=_108421_ident.get()._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a89e7d7d:;
			{
				{
					auto expr = &((*(_105173_expr)).get()._field_Kind.cast_ptr<_1aaa7b5e6_TupleExpr>(&__jule_any_type87).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8a005d3:;
					if (it != expr_end) {
						jule::Ptr<_1aaa7a925_Expr> _109325_texpr = *it;
						{
							if ((!(_1aabc9e2b_pushGenericsFromData(_self_, _105145_generics, &(_109325_texpr))))) {
								return false;;
							};
						}
						_iter_next_1a8a005d3:;
						++it;
						goto _iter_begin_1a8a005d3;
					}
					_iter_end_1a8a005d3:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a89e7de4:;
			{
				jule::Ptr<_1aaa7d65e_NsSelectionExpr> _109921_ns = (*(_105173_expr)).get()._field_Kind.cast_ptr<_1aaa7d65e_NsSelectionExpr>(&__jule_any_type96);;
				jule::Ptr<_1aaa76beb_IdentTypeDecl> _110021_decl = jule::new_ptr<_1aaa76beb_IdentTypeDecl>(_1aaa76beb_IdentTypeDecl{._field_Token=_109921_ns.get()._field_Ident, ._field_Ident=_109921_ns.get()._field_Ident.get()._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> &__jule_push_dest = (*(_105145_generics)); __jule_push_dest.push(jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=_110021_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1aaa7738e_NamespaceTypeDecl>(_1aaa7738e_NamespaceTypeDecl{._field_Idents=_109921_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=_110021_decl.get()._field_Token, ._field_Kind=jule::Any(_110021_decl, &__jule_any_type20)})}), &__jule_any_type97)})); };
			}
		}
		else {
			_case_begin_1a89e7d17:;
			{
				_1aabbe162_pushErr(_self_.ptr(), (*(_105173_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1a89e7cb2:;
	};
	return true;;
}



inline void _1aabca28e_evalIdentDeclFromIndexing(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aabbbe1d_Data>* _112150_d, jule::Ptr<_1aaa829b5_IndexingExpr>* _112165_i) {
	jule::Ptr<_1aaa9a390_StructIns> _112217_s = _1aac01161_Struct((*(_112150_d)).get()._field_Kind.ptr());;
	if ((_112217_s == nullptr)) {
		_1aabbe162_pushErr(_self_.ptr(), (*(_112165_i)).get()._field_Expr.get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_112150_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_112150_d))=nullptr;
		return;;
	};
	jule::Ptr<_1aaa76beb_IdentTypeDecl> _112917_decl = nullptr;;
	{
		auto &_match_expr{ (*(_112165_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a8a05e13:;
			{
				jule::Ptr<_1aaa7c350_IdentExpr> _113221_expr = (*(_112165_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1aaa7c350_IdentExpr>(&__jule_any_type86);;
				_112917_decl=jule::new_ptr<_1aaa76beb_IdentTypeDecl>(_1aaa76beb_IdentTypeDecl{._field_Token=_113221_expr.get()._field_Token, ._field_Ident=_113221_expr.get()._field_Ident, ._field_Binded=_113221_expr.get()._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a8a06c49:;
			{
				jule::Ptr<_1aaa7d65e_NsSelectionExpr> _113921_expr = (*(_112165_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1aaa7d65e_NsSelectionExpr>(&__jule_any_type96);;
				_112917_decl=jule::new_ptr<_1aaa76beb_IdentTypeDecl>(_1aaa76beb_IdentTypeDecl{._field_Token=_113921_expr.get()._field_Ident, ._field_Ident=_113921_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1a8a06133:;
			{
				_1aabbe162_pushErr(_self_.ptr(), (*(_112165_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112150_d))=nullptr;
				return;;
			}
		}
		_match_end_1a8a035d6:;
	};
	if ((!(_1aabc9e2b_pushGenericsFromData(_self_, &(_112917_decl.get()._field_Generics), &((*(_112165_i)).get()._field_Index))))) {
		(*(_112150_d))=nullptr;
		return;;
	};
	_112217_s=({ auto _wrap_copy = _1aabd1c8a_typeChecker(_self_.ptr()); _1aac13294_fromStruct(&_wrap_copy, &(_112917_decl), &(_112217_s.get()._field_Decl)); });
	if ((_112217_s == nullptr)) {
		(*(_112150_d))=nullptr;
		return;;
	};
	(*(_112150_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1aabebc3e_Kind>(_112217_s, 0);
}



inline jule::Bool _1aabca745_checkGenericFn(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaab609d_FnIns>* _116439_f, jule::Ptr<_1c3e3a5e6_Token>* _116455_et, jule::Any* _116472_model) {
	jule::Bool _116513_ok = _1aab539cb_reloadFnInsTypes(_self_.get()._field_s, (*(_116439_f)));;
	(*(_116439_f)).get()._field_reloaded=true;
	if ((!(_116513_ok))) {
		return false;;
	};
	jule::Ptr<_1aaab609d_FnIns> _117017_existInstance = _1aaab4c17_appendInstance((*(_116439_f)).get()._field_Decl.ptr(), _116439_f);;
	if ((!(_1aab52a30_checkConstraintsFn(_self_.get()._field_s, _116439_f, _116455_et, _117017_existInstance)))) {
		return false;;
	};
	if ((_117017_existInstance != nullptr)) {
		(*(_116439_f))=_117017_existInstance;
		_1aabe8b4d_updateModelToGenericIns(_116472_model, &(_117017_existInstance));
	} else {
		_1aab63623_checkFnInsCaller(_self_.get()._field_s, _116439_f, (*(_116455_et)));
	};
	return true;;
}



inline void _1aabcaaa8_evalFnGenericFromIndexing(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aabbbe1d_Data>* _118950_d, jule::Ptr<_1aaa829b5_IndexingExpr>* _118965_i) {
	jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> _119017_generics = jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1aabc9e2b_pushGenericsFromData(_self_, &(_119017_generics), &((*(_118965_i)).get()._field_Index))))) {
		(*(_118950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1aaab609d_FnIns> _119617_f = _1aac00dca_Fn((*(_118950_d)).get()._field_Kind.ptr());;
	jule::I32 _119717_genericsLen = 0LL;;
	if ((_119617_f.get()._field_Decl != nullptr)) {
		_119717_genericsLen=static_cast<jule::I32>(_119617_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1aab49e01_checkGenericQuantity(_self_.get()._field_s.ptr(), _119717_genericsLen, static_cast<jule::I32>(_119017_generics.len()), (*(_118965_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_118950_d))=nullptr;
		return;;
	};
	_119617_f.get()._field_Generics=jule::Slice<jule::Ptr<_1aabea80e_InsGeneric>>::alloc(0LL, _119617_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_119017_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8a1165a:;
		if (it != expr_end) {
			jule::Ptr<_1aaa765e1_TypeDecl> _120821_g = *it;
			{
				jule::Ptr<_1aabbbe1d_Data> _120921_k = _1aabd20cb_evalType(_self_.ptr(), _120821_g);;
				if ((_120921_k == nullptr)) {
					(*(_118950_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1aabea80e_InsGeneric>> &__jule_push_dest = _119617_f.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_1aabea80e_InsGeneric>(_1aabea80e_InsGeneric{._field_Kind=_120921_k.get()._field_Kind, })); };
			}
			_iter_next_1a8a1165a:;
			++it;
			goto _iter_begin_1a8a1165a;
		}
		_iter_end_1a8a1165a:;
	};
	if (_1aaab7533_IsBuiltin(_119617_f.ptr())) {
		return;;
	};
	if (_1aabca745_checkGenericFn(_self_, &(_119617_f), &((*(_118965_i)).get()._field_Expr.get()._field_Token), &((*(_118950_d)).get()._field_Model))) {
		(*(_118950_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1aabebc3e_Kind>(_119617_f, 1);
	} else {
		(*(_118950_d))=nullptr;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabcade9_evalIndexing(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa829b5_IndexingExpr> _122836_i) {
	jule::Ptr<_1aabec1e5_TypeKind> _122917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_122917_prefix;
	});;
	jule::Ptr<_1aabbbe1d_Data> _123317_d = _1aabdb1c3_evalExprKind(_self_, _122836_i.get()._field_Expr.get()._field_Kind);;
	if ((_123317_d == nullptr)) {
		return nullptr;;
	};
	if (_123317_d.get()._field_Decl) {
		_1aabca28e_evalIdentDeclFromIndexing(_self_, &(_123317_d), &(_122836_i));
		return _123317_d;;
	};
	if ((_1aac00dca_Fn(_123317_d.get()._field_Kind.ptr()) != nullptr)) {
		_1aabcaaa8_evalFnGenericFromIndexing(_self_, &(_123317_d), &(_122836_i));
		return _123317_d;;
	};
	_1aabbbe1d_Data _124917_oldData = (*(_123317_d));;
	jule::Ptr<_1aabbbe1d_Data> _125117_index = _1aabdbed7_evalExpr(_self_, _122836_i.get()._field_Index);;
	if ((_125117_index == nullptr)) {
		return nullptr;;
	};
	_123317_d.get()._field_Decl=false;
	_1aabc9579_toIndexing(_self_.ptr(), &(_123317_d), &(_125117_index), &(_122836_i));
	if (_1aabbc7e2_IsConst(_123317_d.ptr())) {
		_123317_d.get()._field_Decl=false;
		_123317_d.get()._field_Model=jule::Any(_123317_d.get()._field_Constant, &__jule_any_type19);
	} else if (_123317_d.get()._field_Decl) {
		_123317_d.get()._field_Decl=false;
	} else {
		_123317_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaaa22cb_IndexingExprModel>(_1aaaa22cb_IndexingExprModel{._field_Token=_122836_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1aabbbe1d_Data>(_124917_oldData), ._field_Index=_125117_index}), &__jule_any_type46);
	};
	return _123317_d;;
}



inline __jule_tuple_x_1aabbbe1d_Data__jule_tuple_x_1aabbbe1d_Data _1aabcb23a_evalSlicingExprs(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa83125_SlicingExpr>* _128241_s) {
	__jule_tuple_x_1aabbbe1d_Data__jule_tuple_x_1aabbbe1d_Data __jule_func_result;
	jule::Ptr<_1aabec1e5_TypeKind> _128317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_128317_prefix;
	});;
	jule::Ptr<_1aabbbe1d_Data> _128717_l = nullptr;;
	jule::Ptr<_1aabbbe1d_Data> _128817_r = nullptr;;
	if (((*(_128241_s)).get()._field_Start != nullptr)) {
		_128717_l=_1aabdbed7_evalExpr(_self_, (*(_128241_s)).get()._field_Start);
		if ((_128717_l != nullptr)) {
			_1aabc7ab6_checkIntegerIndexingByData(_self_.ptr(), &(_128717_l), (*(_128241_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_128717_l=jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd947a_primInt, ._field_Constant=static__1c4cbd2e1_NewI64(0LL)});
		_128717_l.get()._field_Constant.get()._field_Kind=jule::Str("int", 3);
		_128717_l.get()._field_Model=jule::Any(_128717_l.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_128241_s)).get()._field_To != nullptr)) {
		_128817_r=_1aabdbed7_evalExpr(_self_, (*(_128241_s)).get()._field_To);
		if ((_128817_r != nullptr)) {
			_1aabc7ab6_checkIntegerIndexingByData(_self_.ptr(), &(_128817_r), (*(_128241_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _128717_l;
	__jule_func_result.__jule_result_arg1 = _128817_r;
	return __jule_func_result;;
}



inline void _1aabcb4e3_slicingArr(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data>* _131830_d) {
	jule::Ptr<_1aabec1e5_TypeKind> _131917_elemType = _1aac008ad_Arr((*(_131830_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_131830_d)).get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aac09565_Slc>(_1aac09565_Slc{._field_Elem=_131917_elemType}), 22)});
	(*(_131830_d)).get()._field_Lvalue=false;
	(*(_131830_d)).get()._field_Mutable=((*(_131830_d)).get()._field_Mutable || (!(_1aabeda87_Mutable(_131917_elemType.ptr()))));
}



inline void _1aabcb911_slicingStr(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data>* _133330_d, jule::Ptr<_1aabbbe1d_Data>* _133341_l, jule::Ptr<_1aabbbe1d_Data>* _133352_r) {
	(*(_133330_d)).get()._field_Lvalue=false;
	(*(_133330_d)).get()._field_Mutable=true;
	if ((!(_1aabbc7e2_IsConst((*(_133330_d)).ptr())))) {
		return;;
	};
	if ((((*(_133341_l)) == nullptr) || ((*(_133352_r)) == nullptr))) {
		(*(_133330_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_1aabbc7e2_IsConst((*(_133341_l)).ptr()) && _1aabbc7e2_IsConst((*(_133352_r)).ptr()))) {
		jule::I64 _134617_left = _1c4cc0546_AsI64((*(_133341_l)).get()._field_Constant.ptr());;
		if ((_134617_left < 0LL)) {
			return;;
		};
		jule::Str _135117_s = _1c4cc0029_ReadStr((*(_133330_d)).get()._field_Constant.ptr());;
		jule::I64 _135221_right = 0LL;;
		if (((*(_133352_r)) == nullptr)) {
			_135221_right=static_cast<jule::I64>(static_cast<jule::I64>(_135117_s.len()));
		} else {
			_135221_right=static_cast<jule::I64>(_1c4cc0546_AsI64((*(_133352_r)).get()._field_Constant.ptr()));
		};
		if ((_134617_left > _135221_right)) {
			return;;
		};
		_1c4cc1635_SetStr((*(_133330_d)).get()._field_Constant.ptr(), _135117_s.slice(static_cast<jule::I32>(_134617_left), static_cast<jule::I32>(_135221_right)));
		(*(_133330_d)).get()._field_Decl=true;
	} else {
		(*(_133330_d)).get()._field_Constant=nullptr;
	};
}



inline void _1aabcbdd9_checkSlicing(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data>* _136936_d, jule::Ptr<_1aabbbe1d_Data>* _136947_l, jule::Ptr<_1aabbbe1d_Data>* _136958_r, jule::Ptr<_1aaa83125_SlicingExpr>* _136969_s) {
	{
		
		if ((_1aac008ad_Arr((*(_136936_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8a2641c:;
			{
				_1aabcb4e3_slicingArr(_self_, _136936_d);
				return;;
			}
		}
		else if ((_1aac00b44_Slc((*(_136936_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8a26494:;
			{
				return;;
			}
		}
		else if ((_1aabeeadd_Prim((*(_136936_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8a2651b:;
			{
				jule::Ptr<_1aac05066_Prim> _137717_prim = _1aabeeadd_Prim((*(_136936_d)).get()._field_Kind.ptr());;
				{
					
					if (_1aac084ed_IsStr(_137717_prim.ptr())) {
						_case_begin_1a8a2840d:;
						{
							_1aabcb911_slicingStr(_self_, _136936_d, _136947_l, _136958_r);
							return;;
						}
					}
					_match_end_1a8a28375:;
				};
			}
		}
		_match_end_1a8a262eb:;
	};
	_1aabbe162_pushErr(_self_, (*(_136969_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_136936_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabcc22a_evalSlicing(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa83125_SlicingExpr> _138835_s) {
	jule::Ptr<_1aabbbe1d_Data> _138917_d = _1aabdbed7_evalExpr(_self_, _138835_s.get()._field_Expr);;
	if ((_138917_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aabbbe1d_Data> _139418_l;;
	jule::Ptr<_1aabbbe1d_Data> _139425_r;;
	({
		__jule_tuple_x_1aabbbe1d_Data__jule_tuple_x_1aabbbe1d_Data __jule_assign_result = _1aabcb23a_evalSlicingExprs(_self_, &(_138835_s));
		_139418_l = __jule_assign_result.__jule_result_arg0;
		_139425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_139418_l == nullptr)) {
		return _138917_d;;
	};
	_138917_d.get()._field_Decl=false;
	_1aabcbdd9_checkSlicing(_self_.ptr(), &(_138917_d), &(_139418_l), &(_139425_r), &(_138835_s));
	if (_1aabbc7e2_IsConst(_138917_d.ptr())) {
		_138917_d.get()._field_Decl=false;
		_138917_d.get()._field_Model=jule::Any(_138917_d.get()._field_Constant, &__jule_any_type19);
	} else if (_138917_d.get()._field_Decl) {
		_138917_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1aaaa35b8_SlicingExprModel> _141221_model = jule::new_ptr<_1aaaa35b8_SlicingExprModel>(_1aaaa35b8_SlicingExprModel{._field_Token=_138835_s.get()._field_Token, ._field_Expr=_138917_d.get()._field_Model, ._field_Left=_139418_l.get()._field_Model, });;
		if ((_139425_r != nullptr)) {
			_141221_model.get()._field_Right=_139425_r.get()._field_Model;
		};
		_138917_d.get()._field_Model=jule::Any(_141221_model, &__jule_any_type98);
	};
	return _138917_d;;
}



inline void _1aabcc648_castPtr(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabec1e5_TypeKind> _142530_t, jule::Ptr<_1aabbbe1d_Data> _142548_d, jule::Ptr<_1c3e3a5e6_Token> _142558_errorToken) {
	_142548_d.get()._field_Constant=nullptr;
	jule::Ptr<_1aac08a92_Sptr> _142713_sptr = _1aabeed74_Sptr(_142548_d.get()._field_Kind.ptr());;
	if ((_142713_sptr != nullptr)) {
		if ((!(_1aabec8ee_Equal(_1aac0010a_Ptr(_142530_t.ptr()).get()._field_Elem, _142713_sptr.get()._field_Elem)))) {
			_1aabbe162_pushErr(_self_, _142558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_142548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_142530_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_1aabbeb57_isUnsafe(_self_)))) {
		_1aabbe162_pushErr(_self_, _142558_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aac05066_Prim> _144013_prim = _1aabeeadd_Prim(_142548_d.get()._field_Kind.ptr());;
	if (((_1aac0010a_Ptr(_142548_d.get()._field_Kind.ptr()) == nullptr) && ((_144013_prim == nullptr) || (!(_1c4cbc2bd_IsInt(_1aac053a7_Str(_144013_prim.ptr()))))))) {
		_1aabbe162_pushErr(_self_, _142558_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_142548_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_142530_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1aabcca66_castStruct(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabec1e5_TypeKind> _144633_t, jule::Ptr<_1aabbbe1d_Data> _144651_d, jule::Ptr<_1c3e3a5e6_Token> _144661_errorToken) {
	_144651_d.get()._field_Constant=nullptr;
	jule::Ptr<_1aaac6443_Trait> _144817_tr = _1aac013e7_Trait(_144651_d.get()._field_Kind.ptr());;
	if ((_144817_tr == nullptr)) {
		_1aabbe162_pushErr(_self_, _144661_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_144651_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_144633_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1aaa9a390_StructIns> _145417_s = _1aac01161_Struct(_144633_t.ptr());;
	_1a8a35272_pushReference(_self_, &(_145417_s));
	if ((!(_1aaa98910_IsImplements(_145417_s.get()._field_Decl.ptr(), _144817_tr)))) {
		_1aabbe162_pushErr(_self_, _144661_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_144651_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_144633_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1aabcce84_castRef(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabec1e5_TypeKind> _146230_t, jule::Ptr<_1aabbbe1d_Data> _146248_d, jule::Ptr<_1c3e3a5e6_Token> _146258_errorToken) {
	_146248_d.get()._field_Constant=nullptr;
	jule::Ptr<_1aac08a92_Sptr> _146417_sptr = _1aabeed74_Sptr(_146230_t.ptr());;
	jule::Ptr<_1aac0c359_Ptr> _146617_ptr = _1aac0010a_Ptr(_146248_d.get()._field_Kind.ptr());;
	if (((_146617_ptr != nullptr) && _1aabec8ee_Equal(_146417_sptr.get()._field_Elem, _146617_ptr.get()._field_Elem))) {
		if ((!(_1aabbeb57_isUnsafe(_self_)))) {
			_1aabbe162_pushErr(_self_, _146258_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1aac01161_Struct(_146417_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1aabcca66_castStruct(_self_, _146417_sptr.get()._field_Elem, _146248_d, _146258_errorToken);
		return;;
	};
	_1aabbe162_pushErr(_self_, _146258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_146248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_146230_t.ptr()), &__jule_any_type5)}));
}



inline void _1aabcd3a2_castSlc(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabec1e5_TypeKind> _148430_t, jule::Ptr<_1aabbbe1d_Data> _148448_d, jule::Ptr<_1c3e3a5e6_Token> _148458_errorToken) {
	jule::Ptr<_1c4cbcda1_Const> _148513_c = _148448_d.get()._field_Constant;;
	_148448_d.get()._field_Constant=nullptr;
	if ((_1aac00391_Enum(_148448_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1aabeeadd_Prim(_1aac00391_Enum(_148448_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1aac084ed_IsStr(_1aabeeadd_Prim(_1aac00391_Enum(_148448_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1aabbe162_pushErr(_self_, _148458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_148448_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_148430_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_1aabeeadd_Prim(_148448_d.get()._field_Kind.ptr()) == nullptr) || (!(_1aac084ed_IsStr(_1aabeeadd_Prim(_148448_d.get()._field_Kind.ptr()).ptr()))))) {
		_1aabbe162_pushErr(_self_, _148458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_148448_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_148430_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_148430_t=_1aac00b44_Slc(_148430_t.ptr()).get()._field_Elem;
	jule::Ptr<_1aac05066_Prim> _149913_prim = _1aabeeadd_Prim(_148430_t.ptr());;
	if (((_149913_prim == nullptr) || ((!(_1aac0695d_IsU8(_149913_prim.ptr()))) && (!(_1aac06441_IsI32(_149913_prim.ptr())))))) {
		_1aabbe162_pushErr(_self_, _148458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_148448_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_148430_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	if ((_148513_c != nullptr)) {
		{
			
			if (_1aac0695d_IsU8(_149913_prim.ptr())) {
				_case_begin_1a8a467c2:;
				{
					jule::Str _150921_s = _1c4cc0029_ReadStr(_148513_c.ptr());;
					jule::Ptr<_1aaaa1d25_SliceExprModel> _151025_model = jule::new_ptr<_1aaaa1d25_SliceExprModel>(_1aaaa1d25_SliceExprModel{._field_ElemKind=_148430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _150921_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_150921_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a8a47edd:;
						if (it != expr_end) {
							jule::U8 *_151424_b = it;
							{
								jule::Ptr<_1c4cbcda1_Const> _151529_bc = static__1c4cbd5aa_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_151424_b)))));;
								_151529_bc.get()._field_Kind=_149913_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _151025_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_151529_bc, &__jule_any_type19)); };
							}
							_iter_next_1a8a47edd:;
							++it;
							goto _iter_begin_1a8a47edd;
						}
						_iter_end_1a8a47edd:;
					};
					_148448_d.get()._field_Model=jule::Any(_151025_model, &__jule_any_type83);
					_148448_d.get()._field_Decl=true;
				}
			}
			else if (_1aac06441_IsI32(_149913_prim.ptr())) {
				_case_begin_1a8a46849:;
				{
					jule::Slice<jule::I32> _152221_runes = static_cast<jule::Slice<jule::I32>>(_1c4cc0029_ReadStr(_148513_c.ptr()));;
					jule::Ptr<_1aaaa1d25_SliceExprModel> _152325_model = jule::new_ptr<_1aaaa1d25_SliceExprModel>(_1aaaa1d25_SliceExprModel{._field_ElemKind=_148430_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _152221_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_152221_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a8a4a9c4:;
						if (it != expr_end) {
							jule::I32 *_152724_r = it;
							{
								jule::Ptr<_1c4cbcda1_Const> _152829_rc = static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_152724_r)))));;
								_152829_rc.get()._field_Kind=_149913_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _152325_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_152829_rc, &__jule_any_type19)); };
							}
							_iter_next_1a8a4a9c4:;
							++it;
							goto _iter_begin_1a8a4a9c4;
						}
						_iter_end_1a8a4a9c4:;
					};
					_148448_d.get()._field_Model=jule::Any(_152325_model, &__jule_any_type83);
					_148448_d.get()._field_Decl=true;
				}
			}
			_match_end_1a8a466b2:;
		};
	};
}



inline void _1aabcd715_castStr(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data> _153830_d, jule::Ptr<_1c3e3a5e6_Token> _153840_errorToken) {
	if ((_1aac00391_Enum(_153830_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aaac8b3d_Enum> _154021_e = _1aac00391_Enum(_153830_d.get()._field_Kind.ptr());;
		if (((_1aabeeadd_Prim(_154021_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1aac084ed_IsStr(_1aabeeadd_Prim(_154021_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1c4cbcda1_Const> _154613_c = _153830_d.get()._field_Constant;;
	_153830_d.get()._field_Constant=nullptr;
	if ((_1aabeeadd_Prim(_153830_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aac05066_Prim> _154917_prim = _1aabeeadd_Prim(_153830_d.get()._field_Kind.ptr());;
		if (((!(_1aac0695d_IsU8(_154917_prim.ptr()))) && (!(_1aac06441_IsI32(_154917_prim.ptr()))))) {
			_1aabbe162_pushErr(_self_, _153840_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_153830_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
		if ((_154613_c != nullptr)) {
			{
				
				if (_1aac0695d_IsU8(_154917_prim.ptr())) {
					_case_begin_1a8a5125a:;
					{
						_153830_d.get()._field_Constant=static__1c4cbdb3d_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1c4cc07cc_AsU64(_154613_c.ptr()))));
						_153830_d.get()._field_Model=jule::Any(_153830_d.get()._field_Constant, &__jule_any_type19);
						_153830_d.get()._field_Decl=true;
					}
				}
				else if (_1aac06441_IsI32(_154917_prim.ptr())) {
					_case_begin_1a8a512d2:;
					{
						_153830_d.get()._field_Constant=static__1c4cbdb3d_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1c4cc0546_AsI64(_154613_c.ptr()))));
						_153830_d.get()._field_Model=jule::Any(_153830_d.get()._field_Constant, &__jule_any_type19);
						_153830_d.get()._field_Decl=true;
					}
				}
				_match_end_1a8a5115b:;
			};
		};
		return;;
	};
	jule::Ptr<_1aac09565_Slc> _157017_s = _1aac00b44_Slc(_153830_d.get()._field_Kind.ptr());;
	if ((_157017_s == nullptr)) {
		_1aabbe162_pushErr(_self_, _153840_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_153830_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1aabec1e5_TypeKind> _157617_t = _157017_s.get()._field_Elem;;
	jule::Ptr<_1aac05066_Prim> _157713_prim = _1aabeeadd_Prim(_157617_t.ptr());;
	if (((_157713_prim == nullptr) || ((!(_1aac0695d_IsU8(_157713_prim.ptr()))) && (!(_1aac06441_IsI32(_157713_prim.ptr())))))) {
		_1aabbe162_pushErr(_self_, _153840_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_153830_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
}



inline void _1aabcdb33_castInt(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabec1e5_TypeKind> _158430_t, jule::Ptr<_1aabbbe1d_Data> _158448_d, jule::Ptr<_1c3e3a5e6_Token> _158458_errorToken) {
	if (_1aabbc7e2_IsConst(_158448_d.ptr())) {
		jule::Ptr<_1aac05066_Prim> _158617_prim = _1aabeeadd_Prim(_158430_t.ptr());;
		{
			
			if (_1c4cbbbe6_IsSigInt(_158617_prim.get()._field_Kind)) {
				_case_begin_1a8a5c5c9:;
				{
					_1c4cc0d1b_SetI64(_158448_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1c4cc0546_AsI64(_158448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1c4cbc004_IsUnsigInt(_158617_prim.get()._field_Kind)) {
				_case_begin_1a8a5c651:;
				{
					_1c4cc10c4_SetU64(_158448_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1c4cc07cc_AsU64(_158448_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1a8a5c51e:;
		};
	} else {
		_158448_d.get()._field_Constant=nullptr;
	};
	if ((_1aac00391_Enum(_158448_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aaac8b3d_Enum> _159817_e = _1aac00391_Enum(_158448_d.get()._field_Kind.ptr());;
		if (_1c4cbc8c8_IsNum(_1aabec5ad_Str(_159817_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1aabeed74_Sptr(_158448_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aac05066_Prim> _160517_prim = _1aabeeadd_Prim(_158430_t.ptr());;
		if ((!(_1aac07ed1_IsUintptr(_160517_prim.ptr())))) {
			_1aabbe162_pushErr(_self_, _158458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_158448_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_158430_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1aac0010a_Ptr(_158448_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aac05066_Prim> _161217_prim = _1aabeeadd_Prim(_158430_t.ptr());;
		if (_1aac07ed1_IsUintptr(_161217_prim.ptr())) {
		} else if ((!(_1aabbeb57_isUnsafe(_self_)))) {
			_1aabbe162_pushErr(_self_, _158458_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1aac05066_Prim> _162113_prim = _1aabeeadd_Prim(_158448_d.get()._field_Kind.ptr());;
	if (((_162113_prim != nullptr) && _1c4cbc8c8_IsNum(_1aac053a7_Str(_162113_prim.ptr())))) {
		return;;
	};
	_1aabbe162_pushErr(_self_, _158458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_158448_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_158430_t.ptr()), &__jule_any_type5)}));
}



inline void _1aabce051_castNum(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabec1e5_TypeKind> _162930_t, jule::Ptr<_1aabbbe1d_Data> _162948_d, jule::Ptr<_1c3e3a5e6_Token> _162958_errorToken) {
	if (_1aabbc7e2_IsConst(_162948_d.ptr())) {
		jule::Ptr<_1aac05066_Prim> _163117_prim = _1aabeeadd_Prim(_162930_t.ptr());;
		{
			
			if (_1c4cbc60e_IsFloat(_163117_prim.get()._field_Kind)) {
				_case_begin_1a8a65a55:;
				{
					_1c4cc18dd_SetF64(_162948_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1c4cc0a63_AsF64(_162948_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1c4cbbbe6_IsSigInt(_163117_prim.get()._field_Kind)) {
				_case_begin_1a8a65acc:;
				{
					_1c4cc0d1b_SetI64(_162948_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1c4cc0546_AsI64(_162948_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1c4cbc004_IsUnsigInt(_163117_prim.get()._field_Kind)) {
				_case_begin_1a8a65b54:;
				{
					_1c4cc10c4_SetU64(_162948_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1c4cc07cc_AsU64(_162948_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1a8a65989:;
		};
	} else {
		_162948_d.get()._field_Constant=nullptr;
	};
	if ((_1aac00391_Enum(_162948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aaac8b3d_Enum> _164517_e = _1aac00391_Enum(_162948_d.get()._field_Kind.ptr());;
		if (_1c4cbc8c8_IsNum(_1aabec5ad_Str(_164517_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1aac05066_Prim> _165113_prim = _1aabeeadd_Prim(_162948_d.get()._field_Kind.ptr());;
	if (((_165113_prim != nullptr) && _1c4cbc8c8_IsNum(_1aac053a7_Str(_165113_prim.ptr())))) {
		return;;
	};
	_1aabbe162_pushErr(_self_, _162958_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_162948_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_162930_t.ptr()), &__jule_any_type5)}));
}



inline void _1aabce46e_castPrim(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabec1e5_TypeKind> _165931_t, jule::Ptr<_1aabbbe1d_Data> _165949_d, jule::Ptr<_1c3e3a5e6_Token> _165959_errorToken) {
	jule::Ptr<_1aac05066_Prim> _166013_prim = _1aabeeadd_Prim(_165931_t.ptr());;
	{
		
		if (_1aac08784_IsAny(_166013_prim.ptr())) {
			_case_begin_1a8a6b9d4:;
			{
				_165949_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1aac084ed_IsStr(_166013_prim.ptr())) {
			_case_begin_1a8a6ba4a:;
			{
				_1aabcd715_castStr(_self_, _165949_d, _165959_errorToken);
			}
		}
		else if (_1c4cbc2bd_IsInt(_1aac053a7_Str(_166013_prim.ptr()))) {
			_case_begin_1a8a6b671:;
			{
				_1aabcdb33_castInt(_self_, _165931_t, _165949_d, _165959_errorToken);
			}
		}
		else if (_1c4cbc8c8_IsNum(_1aac053a7_Str(_166013_prim.ptr()))) {
			_case_begin_1a8a6b6d7:;
			{
				_1aabce051_castNum(_self_, _165931_t, _165949_d, _165959_errorToken);
			}
		}
		else {
			_case_begin_1a8a6b60a:;
			{
				_1aabbe162_pushErr(_self_, _165959_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_165931_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_1a8a6b5a5:;
	};
}



inline void _1aabce7d2_castConstant(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _167636_t, jule::Ptr<_1aabbbe1d_Data>* _167655_d) {
	if ((((*(_167655_d)) == nullptr) || (!(_1aabbc7e2_IsConst((*(_167655_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1aac05066_Prim> _168013_prim = _1aabeeadd_Prim((*(_167636_t)).ptr());;
	_1aabe86a8_castConstByType(&(_168013_prim.get()._field_Kind), _167655_d);
	(*(_167655_d)).get()._field_Model=jule::Any((*(_167655_d)).get()._field_Constant, &__jule_any_type19);
}



inline void _1aabcec00_castTypeEnum(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _168536_t, jule::Ptr<_1aabbbe1d_Data>* _168555_d, jule::Ptr<_1c3e3a5e6_Token>* _168570_errorToken) {
	jule::I32 _168613_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1aab51886_checkTypeCompatibility((*(_self_))._field_s, &((*(_168555_d)).get()._field_Kind), _168536_t, _168570_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _168613_n);
		_1aabbe162_pushErr(_self_, (*(_168570_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_168555_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_168536_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_168555_d)).get()._field_Constant=nullptr;
}



inline void _1aabd011d_castTypeEnumT(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _169437_t, jule::Ptr<_1aabbbe1d_Data>* _169456_d, jule::Ptr<_1c3e3a5e6_Token>* _169471_errorToken) {
	jule::I32 _169513_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1aab51886_checkTypeCompatibility((*(_self_))._field_s, _169437_t, &((*(_169456_d)).get()._field_Kind), _169471_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _169513_n);
		_1aabbe162_pushErr(_self_, (*(_169471_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_169456_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_169437_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_169456_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd05c4_evalCastByTypeNData(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabec1e5_TypeKind> _170342_t, jule::Ptr<_1aabbbe1d_Data> _170360_d, jule::Ptr<_1c3e3a5e6_Token> _170374_errorToken) {
	if (((_170360_d != nullptr) && _170360_d.get()._field_Decl)) {
		_1aabbe162_pushErr(_self_, _170374_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1aabbc2c5_IsNil(_170360_d.ptr())) {
			_case_begin_1a8a766d1:;
			{
				if ((!(_1aabee0a4_NilCompatible(_170342_t.ptr())))) {
					_1aabbe162_pushErr(_self_, _170374_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_170342_t.ptr()), &__jule_any_type5)}));
				};
				_170360_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1aabeeadd_Prim(_170360_d.get()._field_Kind.ptr()) != nullptr) && _1aac08784_IsAny(_1aabeeadd_Prim(_170360_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a8a7648e:;
			{
				if ((_1aac00391_Enum(_170342_t.ptr()) != nullptr)) {
					_1aabbe162_pushErr(_self_, _170374_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1aabbe4c5_pushSuggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1aac00627_TypeEnum(_170342_t.ptr()) != nullptr)) {
					_1aabbe162_pushErr(_self_, _170374_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_170360_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1aac00627_TypeEnum(_170360_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8a76505:;
			{
				_1aabcec00_castTypeEnum(_self_, &(_170342_t), &(_170360_d), &(_170374_errorToken));
			}
		}
		else if ((_1aac00627_TypeEnum(_170342_t.ptr()) != nullptr)) {
			_case_begin_1a8a77072:;
			{
				_1aabd011d_castTypeEnumT(_self_, &(_170342_t), &(_170360_d), &(_170374_errorToken));
			}
		}
		else if ((_1aac0010a_Ptr(_170342_t.ptr()) != nullptr)) {
			_case_begin_1a8a770d8:;
			{
				_1aabcc648_castPtr(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1aabeed74_Sptr(_170342_t.ptr()) != nullptr)) {
			_case_begin_1a8a7714e:;
			{
				_1aabcce84_castRef(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1aac00b44_Slc(_170342_t.ptr()) != nullptr)) {
			_case_begin_1a8a771b5:;
			{
				_1aabcd3a2_castSlc(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1aac01161_Struct(_170342_t.ptr()) != nullptr)) {
			_case_begin_1a8a7722b:;
			{
				_1aabcca66_castStruct(_self_, _170342_t, _170360_d, _170374_errorToken);
			}
		}
		else if ((_1aabeeadd_Prim(_170342_t.ptr()) != nullptr)) {
			_case_begin_1a8a77292:;
			{
				_1aabce46e_castPrim(_self_, _170342_t, _170360_d, _170374_errorToken);
				_1aabce7d2_castConstant(_self_, &(_170342_t), &(_170360_d));
			}
		}
		else {
			_case_begin_1a8a75b0e:;
			{
				_1aabbe162_pushErr(_self_, _170374_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_170342_t.ptr()), &__jule_any_type5)}));
				_170360_d=nullptr;
			}
		}
		_match_end_1a8a75c41:;
	};
	if ((_170360_d == nullptr)) {
		return nullptr;;
	};
	_170360_d.get()._field_Mutable=(_170360_d.get()._field_Mutable || (!(_1aabeda87_Mutable(_170360_d.get()._field_Kind.ptr()))));
	if (((!(_170360_d.get()._field_Decl)) && ((_1aac00391_Enum(_170360_d.get()._field_Kind.ptr()) == nullptr) || (!(_1aabec8ee_Equal(_1aac00391_Enum(_170360_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _170342_t)))))) {
		_1aabe7b08_applyCastKind(&(_170360_d), &(_170342_t));
		_170360_d.get()._field_Model.cast_ptr<_1aaaa1099_CastingExprModel>(&__jule_any_type99).get()._field_Token=_170374_errorToken;
	} else {
		_170360_d.get()._field_Kind=_170342_t;
	};
	_170360_d.get()._field_Decl=false;
	_170360_d.get()._field_Lvalue=false;
	_170360_d.get()._field_untyped=false;
	if (_1aabbc7e2_IsConst(_170360_d.ptr())) {
		_170360_d.get()._field_Constant.get()._field_Kind=_1aabeeadd_Prim(_170342_t.ptr()).get()._field_Kind;
	};
	return _170360_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd0a7a_evalCastT(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aabec1e5_TypeKind>* _177434_t, jule::Ptr<_1aaa7a925_Expr>* _177453_e, jule::Ptr<_1c3e3a5e6_Token>* _177468_et) {
	jule::Ptr<_1aabec1e5_TypeKind> _177517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_177517_prefix;
	});;
	if ((_1aac00b44_Slc((*(_177434_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_177453_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1a8a834e0:;
				{
					_self_.get()._field_prefix=(*(_177434_t));
				}
			}
			_match_end_1a8a8348a:;
		};
	};
	jule::Ptr<_1aabbbe1d_Data> _178417_d = _1aabdbed7_evalExpr(_self_, (*(_177453_e)));;
	if (((_178417_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _178417_d;;
	};
	return _1aabd05c4_evalCastByTypeNData(_self_.ptr(), (*(_177434_t)), _178417_d, (*(_177468_et)));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd0dbb_evalCast(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7d285_CastExpr> _179132_c) {
	jule::Ptr<_1aac0465e_TypeSymbol> _179217_t = _1aaabaaca_buildType(_179132_c.get()._field_Kind);;
	jule::Bool _179313_ok = _1aab4e543_checkType(_self_.get()._field_s, &(_179217_t), _self_.get()._field_lookup);;
	if ((!(_179313_ok))) {
		return nullptr;;
	};
	return _1aabd0a7a_evalCastT(_self_, &(_179217_t.get()._field_Kind), &(_179132_c.get()._field_Expr), &(_179132_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd120c_evalNsSelection(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa7d65e_NsSelectionExpr> _180034_s) {
	jule::Str _180113_path = _1aac1dd71_buildLinkPathByTokens(&(_180034_s.get()._field_Ns));;
	jule::Ptr<_1aab24c33_ImportInfo> _180217_imp = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac20119_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)>([=](jule::Ptr<_1aab24c33_ImportInfo> _180252_imp) mutable -> jule::Bool {
		if (((_180034_s.get()._field_Ns.len() == 1LL) && (_180252_imp.get()._field_Alias == _180113_path))) {
			return true;;
		};
		return ((_180252_imp.get()._field_LinkPath == _180113_path) && _1aab2784b_isAccessibleViaSelection(_180252_imp.ptr()));;
	}));;
	if ((_180217_imp == nullptr)) {
		_1aabbe162_pushErr(_self_, _180034_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_180113_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_1aac21d30_Lookup> _181417_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1aac21d30_Lookup>(_180217_imp, 1);
	;
	_1aabbe8c1_disallowBuiltin(_self_);
	jule::Any _181917_def = _1aabc1dce_getDef(_self_, &(_180034_s.get()._field_Ident.get()._field_Kind), false);;
	_1aabbe6c3_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_181417_lookup;
	jule::Ptr<_1aabbbe1d_Data> _182217_d = _1aabc5d06_evalDef(_self_, &(_181917_def), _180034_s.get()._field_Ident);;
	return _182217_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd16b3_evalStructLitExplicit(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa9a390_StructIns> _182645_s, jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _182713_exprs, jule::Ptr<_1c3e3a5e6_Token> _182733_errorToken) {
	jule::Bool _182813_ok = _1aab49e01_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_182645_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_182645_s.get()._field_Generics.len()), _182733_errorToken);;
	if ((!(_182813_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _182645_s.get()._field_Decl))) {
		_1aabbe162_pushErr(_self_.ptr(), _182733_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_182645_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_1a8a35272_pushReference(_self_.ptr(), &(_182645_s));
	_1aabc4002_checkDeprecated(_self_.ptr(), &(_182645_s.get()._field_Decl.get()._field_Directives), _182733_errorToken);
	_1aabb03ea_structLitChecker _184117_slc = _1aabb03ea_structLitChecker{._field_e=_self_, ._field_errorToken=_182733_errorToken, ._field_s=_182645_s, };;
	_1aabb1b38_check(&_184117_slc, &(_182713_exprs));
	jule::Ptr<_1aabbbe1d_Data> _184817_d = jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_182645_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1aaaa0719_StructLitExprModel>(_1aaaa0719_StructLitExprModel{._field_Strct=_182645_s, ._field_Args=_184117_slc._field_args}), &__jule_any_type101), });;
	if (_182645_s.get()._field_Decl.get()._field_Binded) {
		_184817_d.get()._field_Kind.get()._field_BindIdent=_182645_s.get()._field_Decl.get()._field_Ident;
	};
	return _184817_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd1a04_evalStructLit(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa80a4b_StructLit> _186437_lit) {
	jule::Ptr<_1aac0465e_TypeSymbol> _186517_t = _1aaabaaca_buildType(_186437_lit.get()._field_Kind);;
	jule::Bool _186613_ok = _1aab4e543_checkType(_self_.get()._field_s, &(_186517_t), _self_.get()._field_lookup);;
	if ((!(_186613_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1aaa9a390_StructIns> _187117_s = _1aac01161_Struct(_186517_t.get()._field_Kind.ptr());;
	if ((_187117_s == nullptr)) {
		if ((_1aabeed74_Sptr(_186517_t.get()._field_Kind.ptr()) != nullptr)) {
			_187117_s=_1aac01161_Struct(_1aabeed74_Sptr(_186517_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_187117_s != nullptr)) {
				goto _julec_label_1a73b45a3;
			};
		};
		_1aabbe162_pushErr(_self_.ptr(), _186437_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1a73b45a3:;
	jule::Ptr<_1aabbbe1d_Data> _188417_d = _1aabd16b3_evalStructLitExplicit(_self_, _187117_s, _186437_lit.get()._field_Exprs, _186437_lit.get()._field_Kind.get()._field_Token);;
	if ((_1aabeed74_Sptr(_186517_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1aaaa0719_StructLitExprModel> _188621_model = _188417_d.get()._field_Model.cast_ptr<_1aaaa0719_StructLitExprModel>(&__jule_any_type101);;
		_1aabe6321_makeStructLitAlloc(&(_188417_d), &(_188621_model));
	};
	return _188417_d;;
}



inline _1aac0e34a_typeChecker _1aabd1c8a_typeChecker(_1aabbdb12_Eval* _self_) {
	return _1aab4d2de_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd20cb_evalType(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa765e1_TypeDecl> _189631_t) {
	jule::Ptr<_1aac0465e_TypeSymbol> _189717_tk = _1aaabaaca_buildType(_189631_t);;
	jule::Bool _189813_ok = _1aab4e543_checkType((*(_self_))._field_s, &(_189717_tk), (*(_self_))._field_lookup);;
	if ((!(_189813_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_189717_tk.get()._field_Kind, ._field_Model=jule::Any(_189717_tk.get()._field_Kind, &__jule_any_type90), ._field_Decl=true, });;
}



inline void _1aabd243e_callTypeFn(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7e72b_FnCallExpr>* _190935_fc, jule::Ptr<_1aabbbe1d_Data>* _190957_d) {
	if (((*(_190935_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr(_self_.ptr(), (*(_190935_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_190935_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr(_self_.ptr(), (*(_190935_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_190957_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_190935_fc)).get()._field_IsCo) {
		_1aabbe162_pushErr(_self_.ptr(), (*(_190935_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_190957_d))=nullptr;
		return;;
	} else if (((*(_190935_fc)).get()._field_Exception != nullptr)) {
		_1aabbe162_pushErr(_self_.ptr(), (*(_190935_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_190957_d))=nullptr;
		return;;
	};
	if (((*(_190935_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1aaa7a925_Expr> _192521_arg = (*(_190935_fc)).get()._field_Args[0LL];;
		(*(_190957_d))=_1aabd0a7a_evalCastT(_self_, &((*(_190957_d)).get()._field_Kind), &(_192521_arg), &(_192521_arg.get()._field_Token));
		return;;
	};
	if (((*(_190957_d)) != nullptr)) {
		(*(_190957_d)).get()._field_Decl=false;
	};
}



inline void _1aabd27a2_callBuiltinFn(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7e72b_FnCallExpr>* _193538_fc, jule::Ptr<_1aabbbe1d_Data>* _193560_d) {
	if ((!(_1aaa7eaa0_Unhandled((*(_193538_fc)).ptr())))) {
		_1aabbe162_pushErr(_self_.ptr(), (*(_193538_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_193560_d))=_1aac00dca_Fn((*(_193560_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _193538_fc, _193560_d);
	if (((*(_193560_d)) == nullptr)) {
		return;;
	};
	(*(_193560_d)).get()._field_Mutable=true;
}



inline void _1aabd2b15_checkFnOfConcurrentCall(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaab609d_FnIns>* _194743_f, jule::Ptr<_1c3e3a5e6_Token> _194754_errorToken) {
	if (_1aabbeb57_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_194743_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a73c059d:;
		if (it != expr_end) {
			jule::Ptr<_1aaab5102_ParamIns> *_195116_p = it;
			{
				if (_1aaaabe84_IsSelf((*(_195116_p)).get()._field_Decl.ptr())) {
					if ((!(_1aaaac21a_IsRef((*(_195116_p)).get()._field_Decl.ptr())))) {
						_1aabbe162_pushErr(_self_, _194754_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1aabbe4c5_pushSuggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_195116_p)).get()._field_Decl.get()._field_Reference) {
					_1aabbe162_pushErr(_self_, _194754_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1aabbe4c5_pushSuggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1a73c059d:;
			++it;
			goto _iter_begin_1a73c059d;
		}
		_iter_end_1a73c059d:;
	};
}



inline void _1aabd3033_processExceptionalHandler(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaab609d_FnIns>* _196649_f, jule::Ptr<_1aaa7e72b_FnCallExpr>* _196665_fc, jule::Ptr<_1aabbbe1d_Data>* _196687_d) {
	jule::Bool _196713_resultNeeded = ((!(_1aaab361c_IsVoid((*(_196649_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1aab0aae8_scopeChecker> _196817_csc = nullptr;;
	jule::Ptr<_1aab037e4_Scope> _196917_ch = nullptr;;
	jule::Ptr<_1aaaa194b_FnCallExprModel> _197117_model = (*(_196687_d)).get()._field_Model.cast_ptr<_1aaaa194b_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_1aab0aae8_scopeChecker> _197517_sc = (*(_self_))._field_lookup.cast_ptr<_1aab0aae8_scopeChecker>(0);;
	_196817_csc=_1aab1c588_newChildChecker(_197517_sc);
	if (_196713_resultNeeded) {
		_196817_csc.get()._field_result=(*(_196649_f));
	};
	_196917_ch=_1aab10636_getChild(_197517_sc.ptr());
	(*(_196665_fc)).get()._field_Exception.get()._field_Parent=_197517_sc.get()._field_tree;
	{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = _196817_csc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_1aabe6695_buildErrorVar(&(_196917_ch), _196665_fc)); };
	_1aab10a54_checkChildSsc(_197517_sc, &((*(_196665_fc)).get()._field_Exception), &(_196917_ch), &(_196817_csc));
	_197117_model.get()._field_Assigned=_196713_resultNeeded;
	_197117_model.get()._field_Except=_196917_ch;
	if ((_196713_resultNeeded && (_196817_csc.get()._field_result != nullptr))) {
		_1aabbe162_pushErr(_self_, (*(_196665_fc)).get()._field_Token, jule::Str("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1aabd3396_callFn(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7e72b_FnCallExpr>* _199331_fc, jule::Ptr<_1aabbbe1d_Data>* _199353_d) {
	jule::Ptr<_1aaab609d_FnIns> _199417_f = _1aac00dca_Fn((*(_199353_d)).get()._field_Kind.ptr());;
	if (_1aaab7533_IsBuiltin(_199417_f.ptr())) {
		_1aabd27a2_callBuiltinFn(_self_, _199331_fc, _199353_d);
		return;;
	};
	if ((_1aabbeddd_isGlobal(_self_.ptr()) && _199417_f.get()._field_Decl.get()._field_Exceptional)) {
		_1aabbe162_pushErr(_self_.ptr(), (*(_199331_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1aabbe4c5_pushSuggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_199353_d))=nullptr;
		return;;
	};
	if (((!(_1aaab38a3_IsMethod(_199417_f.get()._field_Decl.ptr()))) && _1aac180ac_hasDirective(&(_199417_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_1aabbe162_pushErr(_self_.ptr(), (*(_199331_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_199353_d))=nullptr;
		return;;
	};
	if (((((!((*(_199353_d)).get()._field_Mutable)) && _1aaab38a3_IsMethod(_199417_f.get()._field_Decl.ptr())) && (!(_199417_f.get()._field_Decl.get()._field_Statically))) && _199417_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		if ((!(_self_.get()._field_immutable))) {
			_1aabbe162_pushErr(_self_.ptr(), (*(_199331_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1aaaa0719_StructLitExprModel> _202021_lit = _1aabe98c9_isLitBased(&((*(_199353_d)).get()._field_Model));;
			if ((_202021_lit == nullptr)) {
				_1aabbe162_pushErr(_self_.ptr(), (*(_199331_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1aabaee11_checkMutRiskOfStructLit(&(_self_.get()._field_s), &(_202021_lit));
			};
		};
	} else if (((!(_1aabbeb57_isUnsafe(_self_.ptr()))) && _199417_f.get()._field_Decl.get()._field_Unsafety)) {
		_1aabbe162_pushErr(_self_.ptr(), (*(_199331_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _203217_dynamicAnnotation = (((_199417_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_199417_f.get()._field_Generics.len() == 0LL)) && (_199417_f.get()._field_Params.len() > 0LL));;
	if (_203217_dynamicAnnotation) {
		_199417_f.get()._field_Generics=jule::Slice<jule::Ptr<_1aabea80e_InsGeneric>>::alloc(_199417_f.get()._field_Decl.get()._field_Generics.len(), _199417_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_199417_f.get()._field_Generics.len() != _199417_f.get()._field_Decl.get()._field_Generics.len())) {
		_1aab49e01_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_199417_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_199417_f.get()._field_Generics.len()), (*(_199331_fc)).get()._field_Token);
		(*(_199353_d))=nullptr;
		return;;
	};
	jule::Ptr<_1aab45c87_Sema> _204117_old = _self_.get()._field_s;;
	if ((_199417_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_199417_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_204117_old != _self_.get()._field_s)) {
			(_204117_old.get()._field_errors).append(_self_.get()._field_s.get()._field_errors);;
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_204117_old;
	});;
	_1aabac4b3_fnCallArgChecker _205417_fcac = _1aabac4b3_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_199331_fc)).get()._field_Args, ._field_errorToken=(*(_199331_fc)).get()._field_Token, ._field_dynamicAnnotation=_203217_dynamicAnnotation, };;
	if ((!(_203217_dynamicAnnotation))) {
		if ((!(_199417_f.get()._field_reloaded))) {
			jule::Bool _206321_ok = _1aab539cb_reloadFnInsTypes(_self_.get()._field_s, _199417_f);;
			_199417_f.get()._field_reloaded=true;
			if ((!(_206321_ok))) {
				(*(_199353_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1aaab609d_FnIns> _207021_existInstance = _1aaab4c17_appendInstance(_199417_f.get()._field_Decl.ptr(), &(_199417_f));;
		if ((_207021_existInstance != nullptr)) {
			_199417_f=_207021_existInstance;
		};
	} else if ((!(_1aab52238_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_199417_f), &(_205417_fcac._field_ignored))))) {
		(*(_199353_d))=nullptr;
		return;;
	};
	_205417_fcac._field_f=_199417_f;
	jule::Bool _208117_ok = false;;
	if ((_199417_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1aab45c87_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1aab45c87_Sema> _1___jule_assign_arg = _204117_old;
			_204117_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_208117_ok=_1aabaea6a_check(&_205417_fcac);
		({
			jule::Ptr<_1aab45c87_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1aab45c87_Sema> _1___jule_assign_arg = _204117_old;
			_204117_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_208117_ok=_1aabaea6a_check(&_205417_fcac);
	};
	if (_203217_dynamicAnnotation) {
		if ((!(_208117_ok))) {
			(*(_199353_d))=nullptr;
			return;;
		};
		if ((!(_1aabca745_checkGenericFn(_self_, &(_199417_f), &((*(_199331_fc)).get()._field_Token), &((*(_199353_d)).get()._field_Model))))) {
			(*(_199353_d))=nullptr;
			return;;
		};
	};
	jule::Any _210117_callModel = (*(_199353_d)).get()._field_Model;;
	if (_1aaab361c_IsVoid(_199417_f.get()._field_Decl.ptr())) {
		(*(_199353_d))=_1aabe7d17_buildVoidData();
	} else {
		(*(_199353_d)).get()._field_Kind=_199417_f.get()._field_Result;
		(*(_199353_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_1aaaa194b_FnCallExprModel> _211017_model = jule::new_ptr<_1aaaa194b_FnCallExprModel>(_1aaaa194b_FnCallExprModel{._field_Token=(*(_199331_fc)).get()._field_Token, ._field_Func=_199417_f, ._field_IsCo=(*(_199331_fc)).get()._field_IsCo, ._field_Expr=_210117_callModel, ._field_Args=_205417_fcac._field_argModels, });;
	(*(_199353_d)).get()._field_Model=jule::Any(_211017_model, &__jule_any_type35);
	(*(_199353_d)).get()._field_Mutable=true;
	if (_199417_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_199331_fc)).get()._field_IsCo) {
			_1aab488c2_pushErr(_self_.get()._field_s.ptr(), (*(_199331_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1aab48c35_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1aaa7eaa0_Unhandled((*(_199331_fc)).ptr())) {
				_case_begin_1a73dba70:;
				{
					_1aabbe162_pushErr(_self_.ptr(), (*(_199331_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1aabbe4c5_pushSuggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1aaa7ed36_Ignored((*(_199331_fc)).ptr())) {
				_case_begin_1a73dc741:;
				{
					goto _match_end_1a73db872;
				}
			}
			else {
				_case_begin_1a73db8c7:;
				{
					_1aabd3033_processExceptionalHandler(_self_.ptr(), &(_199417_f), _199331_fc, _199353_d);
				}
			}
			_match_end_1a73db872:;
		};
	} else if ((!(_1aaa7eaa0_Unhandled((*(_199331_fc)).ptr())))) {
		_1aabbe162_pushErr(_self_.ptr(), (*(_199331_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_199331_fc)).get()._field_IsCo) {
		_1aabd2b15_checkFnOfConcurrentCall(_self_.ptr(), &(_211017_model.get()._field_Func), (*(_199331_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd36d7_evalFnCall(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7e72b_FnCallExpr> _214534_fc) {
	jule::Ptr<_1aabec1e5_TypeKind> _214617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_214617_prefix;
	});;
	{
		auto &_match_expr{ _214534_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a73e05bd:;
			{
				if (_214534_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _1aacddcdc_builtinCallerError(&(_self_), &(_214534_fc));;
				};
			}
		}
		_match_end_1a73e0568:;
	};
	jule::Ptr<_1aabbbe1d_Data> _215917_d = _1aabdb1c3_evalExprKind(_self_, _214534_fc.get()._field_Expr.get()._field_Kind);;
	if ((_215917_d == nullptr)) {
		return nullptr;;
	};
	if (_215917_d.get()._field_Decl) {
		_1aabd243e_callTypeFn(_self_, &(_214534_fc), &(_215917_d));
		return _215917_d;;
	};
	if ((_1aac00dca_Fn(_215917_d.get()._field_Kind.ptr()) == nullptr)) {
		_1aabbe162_pushErr(_self_.ptr(), _214534_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1aabd3396_callFn(_self_, &(_214534_fc), &(_215917_d));
	return _215917_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd3ad3_evalEnumStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaac8b3d_Enum> _217837_enm, jule::Ptr<_1c3e3a5e6_Token> _217849_ident) {
	jule::Ptr<_1aaac80c1_EnumItem> _217917_item = _1aaac9732_FindItem(_217837_enm.ptr(), _217849_ident.get()._field_Kind);;
	if ((_217917_item == nullptr)) {
		_1aabbe162_pushErr(_self_, _217849_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_217837_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_217849_ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _1aabe9610_evalEnumStatic(&(_217837_enm), &(_217917_item));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd3ece_evalTypeEnumStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaaca348_TypeEnum> _218641_enm, jule::Ptr<_1c3e3a5e6_Token> _218657_ident) {
	jule::Ptr<_1aaac9c71_TypeEnumItem> _218717_item = _1aaacae09_FindItem(_218641_enm.ptr(), _218657_ident.get()._field_Kind);;
	if ((_218717_item == nullptr)) {
		_1aabbe162_pushErr(_self_, _218657_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_218641_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_218657_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_1aac00391_Enum(_218717_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a73e6aad:;
			{
				return _1aabc24c8__evalEnum(_self_, _1aac00391_Enum(_218717_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1aac00627_TypeEnum(_218717_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a73e7284:;
			{
				return _1aabc2c15__evalTypeEnum(_self_, _1aac00627_TypeEnum(_218717_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1aac01161_Struct(_218717_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a73e72ea:;
			{
				return _1aabc3452__evalStruct(_self_, _1aac01161_Struct(_218717_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1a73e59be:;
			{
				jule::Ptr<_1aabbbe1d_Data> _220021_d = jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_218717_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_220021_d.get()._field_Model=jule::Any(_220021_d.get()._field_Kind, &__jule_any_type90);
				return _220021_d;;
			}
		}
		_match_end_1a73e5b9a:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd43ca_evalStructStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaa9a390_StructIns> _220939_s, jule::Ptr<_1c3e3a5e6_Token> _220954_ident) {
	jule::Ptr<_1aabbbe1d_Data> _221017_d = jule::new_ptr<_1aabbbe1d_Data>();;
	;
	jule::Ptr<_1aaab3199_Fn> _221417_method = _1aaa9b407_FindMethod(_220939_s.ptr(), _220954_ident.get()._field_Kind, true);;
	if ((_221417_method != nullptr)) {
		if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), _221417_method.get()._field_Public, _221417_method.get()._field_Token)))) {
			_1aabbe162_pushErr(_self_, _220954_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_220954_ident.get()._field_Kind, &__jule_any_type5)}));
			_1aabbe4c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1aaab609d_FnIns> _222121_ins = _1aaab4909_instance(_221417_method);;
		_222121_ins.get()._field_Owner=_220939_s;
		_1a89be3e8_pushReference(_self_, &(_222121_ins));
		_221017_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaaa4993_StructStaticIdentExprModel>(_1aaaa4993_StructStaticIdentExprModel{._field_Structure=_220939_s, ._field_Expr=_221017_d.get()._field_Model, ._field_Method=_222121_ins}), &__jule_any_type102);
		_221017_d.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_222121_ins, 1)});
		return _221017_d;;
	};
	jule::Ptr<_1aab68969_Var> _223517_sttc = _1aaa9ba89_FindStatic(_220939_s.ptr(), _220954_ident.get()._field_Kind);;
	if ((_223517_sttc != nullptr)) {
		return _1aabc550e_evalVar(_self_, _223517_sttc, _220954_ident);;
	};
	_1aabbe162_pushErr(_self_, _220954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_220939_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_220954_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd4881_evalTraitSubIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data> _224440_d, jule::Ptr<_1aaac6443_Trait> _224454_trt, jule::Ptr<_1c3e3a5e6_Token> _224471_ident) {
	jule::Ptr<_1aaab3199_Fn> _224517_f = _1aaac70e2_FindMethod(_224454_trt.ptr(), _224471_ident.get()._field_Kind);;
	if ((_224517_f == nullptr)) {
		_1aabbe162_pushErr(_self_, _224471_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_224454_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_224471_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aaab4909_instance(_224517_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1aaaa3b4b_TraitSubIdentExprModel>(_1aaaa3b4b_TraitSubIdentExprModel{._field_Token=_224471_ident, ._field_Expr=_224440_d.get()._field_Model, ._field_Method=_224517_f, ._field_Trt=_224454_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd4de2_evalStructSubIdentField(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data>* _226447_d, jule::Ptr<_1aaa9a390_StructIns>* _226462_s, jule::Ptr<_1c3e3a5e6_Token>* _226482_tok, jule::Ptr<_1aaa997e0_FieldIns>* _2264100_f) {
	jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> _226517_model = jule::new_ptr<_1aaaa44dc_StructSubIdentExprModel>(_1aaaa44dc_StructSubIdentExprModel{._field_Token=(*(_226482_tok)), ._field_Expr=jule::new_ptr<_1aabbbe1d_Data>((*((*(_226447_d))))), ._field_Field=(*(_2264100_f)), ._field_Owner=(*(_226462_s))});;
	(*(_226447_d)).get()._field_Model=jule::Any(_226517_model, &__jule_any_type71);
	(*(_226447_d)).get()._field_Kind=(*(_2264100_f)).get()._field_Kind;
	(*(_226447_d)).get()._field_Lvalue=true;
	if (((*(_2264100_f)).get()._field_Decl.get()._field_Mutable && (!((*(_226447_d)).get()._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1a7405803:;
				{
					jule::Ptr<_1aab0aae8_scopeChecker> _227921_scope = _1aab0dbd9_getRoot((*(_self_))._field_lookup.cast_ptr<_1aab0aae8_scopeChecker>(0));;
					(*(_226447_d)).get()._field_Mutable=((_227921_scope.get()._field_owner != nullptr) && (_227921_scope.get()._field_owner.get()._field_Owner == (*(_226462_s))));
				}
			}
			_match_end_1a740579d:;
		};
	};
	return (*(_226447_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd5453_evalStructSubIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data> _228741_d, jule::Ptr<_1aaa9a390_StructIns> _228755_s, jule::Ptr<_1aaa7db15_SubIdentExpr> _228774_si, jule::Bool _228793_ref) {
	jule::Ptr<_1aaa997e0_FieldIns> _228817_f = _1aaa9b748_FindField(_228755_s.ptr(), _228774_si.get()._field_Ident.get()._field_Kind);;
	if ((_228817_f != nullptr)) {
		if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), _228817_f.get()._field_Decl.get()._field_Public, _228817_f.get()._field_Decl.get()._field_Token)))) {
			_1aabbe162_pushErr(_self_, _228774_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_228817_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_1aabbe4c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1aabd4de2_evalStructSubIdentField(_self_, &(_228741_d), &(_228755_s), &(_228774_si.get()._field_Ident), &(_228817_f));;
	};
	;
	jule::Ptr<_1aaab3199_Fn> _229817_m = _1aaa9b407_FindMethod(_228755_s.ptr(), _228774_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_229817_m == nullptr)) {
		_1aabbe162_pushErr(_self_, _228774_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_228755_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_228774_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), _229817_m.get()._field_Public, _229817_m.get()._field_Token)))) {
		_1aabbe162_pushErr(_self_, _228774_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_229817_m.get()._field_Ident, &__jule_any_type5)}));
		_1aabbe4c5_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1aaaac21a_IsRef(_229817_m.get()._field_Params[0LL].ptr()) && (!(_228793_ref)))) {
		_1aabbe162_pushErr(_self_, _228774_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1aabc4002_checkDeprecated(_self_, &(_229817_m.get()._field_Directives), _228774_si.get()._field_Ident);
	jule::Ptr<_1aaab609d_FnIns> _231417_ins = _1aaab4909_instance(_229817_m);;
	_231417_ins.get()._field_Owner=_228755_s;
	_1a89be3e8_pushReference(_self_, &(_231417_ins));
	jule::Ptr<_1aabbbe1d_Data> _231717_model = jule::new_ptr<_1aabbbe1d_Data>((*(_228741_d)));;
	_228741_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaaa44dc_StructSubIdentExprModel>(_1aaaa44dc_StructSubIdentExprModel{._field_Token=_228774_si.get()._field_Ident, ._field_Expr=_231717_model, ._field_Method=_231417_ins, ._field_Owner=_228755_s}), &__jule_any_type71);
	_228741_d.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_231417_ins, 1)});
	return _228741_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd584e_evalSliceSubIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data> _232840_d, jule::Ptr<_1c3e3a5e6_Token> _232854_ident) {
	{
		auto &_match_expr{ _232854_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a8a91025:;
			{
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_Params=jule::Slice<jule::Ptr<_1aaab5102_ParamIns>>::make({jule::new_ptr<_1aaab5102_ParamIns>(_1aaab5102_ParamIns{._field_Decl=jule::new_ptr<_1aaaab868_Param>(_1aaaab868_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_1aabb59a5_lenKind()}),jule::new_ptr<_1aaab5102_ParamIns>(_1aaab5102_ParamIns{._field_Decl=jule::new_ptr<_1aaaab868_Param>(_1aaaab868_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_1aabb59a5_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aacdd968_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_232840_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1aaaa56ec_CommonSubIdentExprModel>(_1aaaa56ec_CommonSubIdentExprModel{._field_ExprKind=_232840_d.get()._field_Kind, ._field_Expr=_232840_d.get()._field_Model, ._field_Token=_232854_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1a8a91278:;
			{
				_1aabbe162_pushErr(_self_, _232854_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_232840_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_232854_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8a91201:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd5c4a_evalArraySubIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data> _236540_d, jule::Ptr<_1c3e3a5e6_Token> _236554_ident) {
	{
		auto &_match_expr{ _236554_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1a8a92202:;
			{
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_Params=jule::Slice<jule::Ptr<_1aaab5102_ParamIns>>::make({jule::new_ptr<_1aaab5102_ParamIns>(_1aaab5102_ParamIns{._field_Decl=jule::new_ptr<_1aaaab868_Param>(_1aaaab868_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_1aabb59a5_lenKind()}),jule::new_ptr<_1aaab5102_ParamIns>(_1aaab5102_ParamIns{._field_Decl=jule::new_ptr<_1aaaab868_Param>(_1aaaab868_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_1aabb59a5_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aacdd968_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_236540_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1aaaa56ec_CommonSubIdentExprModel>(_1aaaa56ec_CommonSubIdentExprModel{._field_ExprKind=_236540_d.get()._field_Kind, ._field_Expr=_236540_d.get()._field_Model, ._field_Token=_236554_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1a8a94d1a:;
			{
				_1aabbe162_pushErr(_self_, _236554_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_236540_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_236554_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8a94c93:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd608b_evalIntTypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _240236_ident) {
	;
	{
		auto &_match_expr{ _240236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8a98978:;
			{
				jule::Ptr<_1c4cbcda1_Const> _240621_c = static__1c4cbd2e1_NewI64(static_cast<jule::I64>(_1c4cb61da_MaxI(jule::Str("int", 3))));;
				_240621_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd947a_primInt, ._field_Model=jule::Any(_240621_c, &__jule_any_type19), ._field_Constant=_240621_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a8a99715:;
			{
				jule::Ptr<_1c4cbcda1_Const> _241421_c = static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1c4cb66d5_Min(jule::Str("int", 3)))));;
				_241421_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd947a_primInt, ._field_Model=jule::Any(_241421_c, &__jule_any_type19), ._field_Constant=_241421_c});;
			}
		}
		else {
			_case_begin_1a8a98ba9:;
			{
				_1aabbe162_pushErr(_self_, _240236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_240236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8a98b54:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd63cc_evalUintTypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _242737_ident) {
	;
	{
		auto &_match_expr{ _242737_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8a98db8:;
			{
				jule::Ptr<_1c4cbcda1_Const> _243121_c = static__1c4cbd5aa_NewU64(static_cast<jule::U64>(_1c4cb64a4_MaxU(jule::Str("uint", 4))));;
				_243121_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd90a1_primUint, ._field_Model=jule::Any(_243121_c, &__jule_any_type19), ._field_Constant=_243121_c});;
			}
		}
		else {
			_case_begin_1a8a9c273:;
			{
				_1aabbe162_pushErr(_self_, _242737_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_242737_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8a9c21d:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd671d_evalI8TypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _244435_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _244435_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8aa02a9:;
			{
				jule::Ptr<_1c4cbcda1_Const> _245021_c = static__1c4cbd2e1_NewI64(127LL);;
				_245021_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd9744_primI8, ._field_Model=jule::Any(_245021_c, &__jule_any_type19), ._field_Constant=_245021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a8aa0a29:;
			{
				jule::Ptr<_1c4cbcda1_Const> _245821_c = static__1c4cbd2e1_NewI64(-128LL);;
				_245821_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd9744_primI8, ._field_Model=jule::Any(_245821_c, &__jule_any_type19), ._field_Constant=_245821_c});;
			}
		}
		else {
			_case_begin_1a8a9ee46:;
			{
				_1aabbe162_pushErr(_self_, _244435_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_244435_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8a9ede1:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd6a5e_evalI16TypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _247136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _247136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8aa3d07:;
			{
				jule::Ptr<_1c4cbcda1_Const> _247721_c = static__1c4cbd2e1_NewI64(32767LL);;
				_247721_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd9a0d_primI16, ._field_Model=jule::Any(_247721_c, &__jule_any_type19), ._field_Constant=_247721_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a8aa4577:;
			{
				jule::Ptr<_1c4cbcda1_Const> _248521_c = static__1c4cbd2e1_NewI64(-32768LL);;
				_248521_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd9a0d_primI16, ._field_Model=jule::Any(_248521_c, &__jule_any_type19), ._field_Constant=_248521_c});;
			}
		}
		else {
			_case_begin_1a8aa3994:;
			{
				_1aabbe162_pushErr(_self_, _247136_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_247136_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8aa393e:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd6da0_evalI32TypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _249836_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _249836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8aa7855:;
			{
				jule::Ptr<_1c4cbcda1_Const> _250421_c = static__1c4cbd2e1_NewI64(2147483647LL);;
				_250421_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd9cc7_primI32, ._field_Model=jule::Any(_250421_c, &__jule_any_type19), ._field_Constant=_250421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a8aa80c5:;
			{
				jule::Ptr<_1c4cbcda1_Const> _251221_c = static__1c4cbd2e1_NewI64(-2147483648LL);;
				_251221_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd9cc7_primI32, ._field_Model=jule::Any(_251221_c, &__jule_any_type19), ._field_Constant=_251221_c});;
			}
		}
		else {
			_case_begin_1a8aa74e2:;
			{
				_1aabbe162_pushErr(_self_, _249836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_249836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8aa748c:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd71e1_evalI64TypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _252536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _252536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8aab3a3:;
			{
				jule::Ptr<_1c4cbcda1_Const> _253121_c = static__1c4cbd2e1_NewI64(jule::MAX_I64);;
				_253121_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacda091_primI64, ._field_Model=jule::Any(_253121_c, &__jule_any_type19), ._field_Constant=_253121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a8aabb23:;
			{
				jule::Ptr<_1c4cbcda1_Const> _253921_c = static__1c4cbd2e1_NewI64(jule::MIN_I64);;
				_253921_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacda091_primI64, ._field_Model=jule::Any(_253921_c, &__jule_any_type19), ._field_Constant=_253921_c});;
			}
		}
		else {
			_case_begin_1a8aab040:;
			{
				_1aabbe162_pushErr(_self_, _252536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_252536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8aaaeda:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd7532_evalU8TypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _255235_ident) {
	;
	;
	{
		auto &_match_expr{ _255235_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8aae9c2:;
			{
				jule::Ptr<_1c4cbcda1_Const> _255721_c = static__1c4cbd5aa_NewU64(255LLU);;
				_255721_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacda35a_primU8, ._field_Model=jule::Any(_255721_c, &__jule_any_type19), ._field_Constant=_255721_c});;
			}
		}
		else {
			_case_begin_1a8aae351:;
			{
				_1aabbe162_pushErr(_self_, _255235_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_255235_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8aae609:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd7873_evalU16TypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _257036_ident) {
	;
	;
	{
		auto &_match_expr{ _257036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8ab2211:;
			{
				jule::Ptr<_1c4cbcda1_Const> _257521_c = static__1c4cbd5aa_NewU64(65535LLU);;
				_257521_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacda624_primU16, ._field_Model=jule::Any(_257521_c, &__jule_any_type19), ._field_Constant=_257521_c});;
			}
		}
		else {
			_case_begin_1a8ab1a90:;
			{
				_1aabbe162_pushErr(_self_, _257036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_257036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8ab1d48:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd7bb4_evalU32TypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _258836_ident) {
	;
	;
	{
		auto &_match_expr{ _258836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8ab4950:;
			{
				jule::Ptr<_1c4cbcda1_Const> _259321_c = static__1c4cbd5aa_NewU64(4294967295LLU);;
				_259321_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacda8dd_primU32, ._field_Model=jule::Any(_259321_c, &__jule_any_type19), ._field_Constant=_259321_c});;
			}
		}
		else {
			_case_begin_1a8ab42ce:;
			{
				_1aabbe162_pushErr(_self_, _258836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_258836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8ab4587:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd8005_evalU64TypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _260636_ident) {
	;
	;
	{
		auto &_match_expr{ _260636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8ab718e:;
			{
				jule::Ptr<_1c4cbcda1_Const> _261121_c = static__1c4cbd5aa_NewU64(jule::MAX_U64);;
				_261121_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacdad61_primU64, ._field_Model=jule::Any(_261121_c, &__jule_any_type19), ._field_Constant=_261121_c});;
			}
		}
		else {
			_case_begin_1a8ab6a1d:;
			{
				_1aabbe162_pushErr(_self_, _260636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_260636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8ab6cc6:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd8346_evalF32TypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _262436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _262436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8aba15e:;
			{
				jule::Ptr<_1c4cbcda1_Const> _263121_c = static__1c4cbde07_NewF64(340282346638528860000000000000000000000.0);;
				_263121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacdb12a_primF32, ._field_Model=jule::Any(_263121_c, &__jule_any_type19), ._field_Constant=_263121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a8aba8ce:;
			{
				jule::Ptr<_1c4cbcda1_Const> _263921_c = static__1c4cbde07_NewF64(-340282346638528860000000000000000000000.0);;
				_263921_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacdb12a_primF32, ._field_Model=jule::Any(_263921_c, &__jule_any_type19), ._field_Constant=_263921_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1a8aba945:;
			{
				jule::Ptr<_1c4cbcda1_Const> _264721_c = static__1c4cbde07_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_264721_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacdb12a_primF32, ._field_Model=jule::Any(_264721_c, &__jule_any_type19), ._field_Constant=_264721_c});;
			}
		}
		else {
			_case_begin_1a8ab9cc9:;
			{
				_1aabbe162_pushErr(_self_, _262436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type5),jule::Any(_262436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8ab9aed:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd8687_evalF64TypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1c3e3a5e6_Token> _266036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _266036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1a8abee55:;
			{
				jule::Ptr<_1c4cbcda1_Const> _266721_c = static__1c4cbde07_NewF64(jule::MAX_F64);;
				_266721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacdb3e4_primF64, ._field_Model=jule::Any(_266721_c, &__jule_any_type19), ._field_Constant=_266721_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1a8ac06c5:;
			{
				jule::Ptr<_1c4cbcda1_Const> _267521_c = static__1c4cbde07_NewF64(jule::MIN_F64);;
				_267521_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacdb3e4_primF64, ._field_Model=jule::Any(_267521_c, &__jule_any_type19), ._field_Constant=_267521_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1a8ac073b:;
			{
				jule::Ptr<_1c4cbcda1_Const> _268321_c = static__1c4cbde07_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_268321_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacdb3e4_primF64, ._field_Model=jule::Any(_268321_c, &__jule_any_type19), ._field_Constant=_268321_c});;
			}
		}
		else {
			_case_begin_1a8abeac0:;
			{
				_1aabbe162_pushErr(_self_, _266036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type5),jule::Any(_266036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8abe8e4:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd8a83_evalPrimStatic(_1aabbdb12_Eval* _self_, jule::Str _269633_kind, jule::Ptr<_1c3e3a5e6_Token> _269644_ident) {
	{
		auto &_match_expr{ _269633_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a8ac380a:;
			{
				return _1aabd608b_evalIntTypeStatic(_self_, _269644_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a8ac39b4:;
			{
				return _1aabd63cc_evalUintTypeStatic(_self_, _269644_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a8ac3a2a:;
			{
				return _1aabd671d_evalI8TypeStatic(_self_, _269644_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a8ac3a91:;
			{
				return _1aabd6a5e_evalI16TypeStatic(_self_, _269644_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a8ac3b07:;
			{
				return _1aabd6da0_evalI32TypeStatic(_self_, _269644_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a8ac45db:;
			{
				return _1aabd71e1_evalI64TypeStatic(_self_, _269644_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a8ac4652:;
			{
				return _1aabd7532_evalU8TypeStatic(_self_, _269644_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a8ac46b8:;
			{
				return _1aabd7873_evalU16TypeStatic(_self_, _269644_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a8ac472e:;
			{
				return _1aabd7bb4_evalU32TypeStatic(_self_, _269644_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a8ac4795:;
			{
				return _1aabd8005_evalU64TypeStatic(_self_, _269644_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a8ac480b:;
			{
				return _1aabd8346_evalF32TypeStatic(_self_, _269644_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a8ac4872:;
			{
				return _1aabd8687_evalF64TypeStatic(_self_, _269644_ident);;
			}
		}
		else {
			_case_begin_1a8abecce:;
			{
				_1aabbe162_pushErr(_self_, _269644_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_269633_kind, &__jule_any_type5),jule::Any(_269644_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8abec79:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd8e7e_evalTypeStatic(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data> _272837_d, jule::Ptr<_1aaa7db15_SubIdentExpr> _272851_si) {
	{
		
		if ((_1aabeeadd_Prim(_272837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8ac8d0a:;
			{
				return _1aabd8a83_evalPrimStatic(_self_, _1aac053a7_Str(_1aabeeadd_Prim(_272837_d.get()._field_Kind.ptr()).ptr()), _272851_si.get()._field_Ident);;
			}
		}
		else if ((_1aac00391_Enum(_272837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8ac9701:;
			{
				return _1aabd3ad3_evalEnumStatic(_self_, _1aac00391_Enum(_272837_d.get()._field_Kind.ptr()), _272851_si.get()._field_Ident);;
			}
		}
		else if ((_1aac00627_TypeEnum(_272837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8ac9767:;
			{
				return _1aabd3ece_evalTypeEnumStatic(_self_, _1aac00627_TypeEnum(_272837_d.get()._field_Kind.ptr()), _272851_si.get()._field_Ident);;
			}
		}
		else if ((_1aac01161_Struct(_272837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8ac97cd:;
			{
				return _1aabd43ca_evalStructStatic(_self_, _1aac01161_Struct(_272837_d.get()._field_Kind.ptr()), _272851_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1a8ac8953:;
			{
				_1aabbe162_pushErr(_self_, _272851_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_272837_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8ac88a9:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1a8ad0152_comptimeObjSubIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaadc1b2_comptimeTypeInfo>* _274457_ct, jule::Ptr<_1aabbbe1d_Data>* _274477_d, jule::Ptr<_1aaa7db15_SubIdentExpr>* _274488_si) {
	jule::Ptr<_1aabbbe1d_Data> _274517_cd = _1aaae2ea9_subIdent((*(_274457_ct)), &((*(_274488_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274517_cd == nullptr)) {
		_1aabbe162_pushErr(_self_, (*(_274488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_274477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_274488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274517_cd;;
}

inline jule::Ptr<_1aabbbe1d_Data> _1a8ad3771_comptimeObjSubIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaacd24c_comptimeStructField>* _274457_ct, jule::Ptr<_1aabbbe1d_Data>* _274477_d, jule::Ptr<_1aaa7db15_SubIdentExpr>* _274488_si) {
	jule::Ptr<_1aabbbe1d_Data> _274517_cd = _1aaacea67_subIdent((*(_274457_ct)), &((*(_274488_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274517_cd == nullptr)) {
		_1aabbe162_pushErr(_self_, (*(_274488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_274477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_274488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274517_cd;;
}

inline jule::Ptr<_1aabbbe1d_Data> _1a8ad6d4b_comptimeObjSubIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaad47b4_comptimeEnumField>* _274457_ct, jule::Ptr<_1aabbbe1d_Data>* _274477_d, jule::Ptr<_1aaa7db15_SubIdentExpr>* _274488_si) {
	jule::Ptr<_1aabbbe1d_Data> _274517_cd = _1aaad57b5_subIdent((*(_274457_ct)), &((*(_274488_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274517_cd == nullptr)) {
		_1aabbe162_pushErr(_self_, (*(_274488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_274477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_274488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274517_cd;;
}

inline jule::Ptr<_1aabbbe1d_Data> _1a8ada6e0_comptimeObjSubIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaad7256_comptimeParam>* _274457_ct, jule::Ptr<_1aabbbe1d_Data>* _274477_d, jule::Ptr<_1aaa7db15_SubIdentExpr>* _274488_si) {
	jule::Ptr<_1aabbbe1d_Data> _274517_cd = _1aaad8e7d_subIdent((*(_274457_ct)), &((*(_274488_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274517_cd == nullptr)) {
		_1aabbe162_pushErr(_self_, (*(_274488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_274477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_274488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274517_cd;;
}

inline jule::Ptr<_1aabbbe1d_Data> _1a8addcba_comptimeObjSubIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaad1508_comptimeStatic>* _274457_ct, jule::Ptr<_1aabbbe1d_Data>* _274477_d, jule::Ptr<_1aaa7db15_SubIdentExpr>* _274488_si) {
	jule::Ptr<_1aabbbe1d_Data> _274517_cd = _1aaad2d23_subIdent((*(_274457_ct)), &((*(_274488_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274517_cd == nullptr)) {
		_1aabbe162_pushErr(_self_, (*(_274488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_274477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_274488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274517_cd;;
}

inline jule::Ptr<_1aabbbe1d_Data> _1a8ae2395_comptimeObjSubIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaae32b7_comptimeValue>* _274457_ct, jule::Ptr<_1aabbbe1d_Data>* _274477_d, jule::Ptr<_1aaa7db15_SubIdentExpr>* _274488_si) {
	jule::Ptr<_1aabbbe1d_Data> _274517_cd = _1aaae5808_subIdent((*(_274457_ct)), &((*(_274488_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274517_cd == nullptr)) {
		_1aabbe162_pushErr(_self_, (*(_274488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_274477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_274488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274517_cd;;
}

inline jule::Ptr<_1aabbbe1d_Data> _1a8ae5970_comptimeObjSubIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aaae7211_comptimeFile>* _274457_ct, jule::Ptr<_1aabbbe1d_Data>* _274477_d, jule::Ptr<_1aaa7db15_SubIdentExpr>* _274488_si) {
	jule::Ptr<_1aabbbe1d_Data> _274517_cd = _1aaae8a2b_subIdent((*(_274457_ct)), &((*(_274488_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274517_cd == nullptr)) {
		_1aabbe162_pushErr(_self_, (*(_274488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_274477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_274488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274517_cd;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd9831_evalObjSubIdent(_1aabbdb12_Eval* _self_, jule::Ptr<_1aabbbe1d_Data> _275238_d, jule::Ptr<_1aaa7db15_SubIdentExpr> _275252_si) {
	if (_1c3e3d055_IsIgnoreIdent(_275252_si.get()._field_Ident.get()._field_Kind)) {
		_1aabbe162_pushErr(_self_, _275252_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if ((_1aac034a4_comptimeTypeInfo(_275238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8acd8c0:;
			{
				jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _276021_ct = _1aac034a4_comptimeTypeInfo(_275238_d.get()._field_Kind.ptr());;
				return _1a8ad0152_comptimeObjSubIdent(_self_, &(_276021_ct), &(_275238_d), &(_275252_si));;
			}
		}
		else if ((_1aac021b7_comptimeStructField(_275238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8acd936:;
			{
				jule::Ptr<_1aaacd24c_comptimeStructField> _276321_ct = _1aac021b7_comptimeStructField(_275238_d.get()._field_Kind.ptr());;
				return _1a8ad3771_comptimeObjSubIdent(_self_, &(_276321_ct), &(_275238_d), &(_275252_si));;
			}
		}
		else if ((_1aac026d4_comptimeEnumField(_275238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8acd99c:;
			{
				jule::Ptr<_1aaad47b4_comptimeEnumField> _276621_ct = _1aac026d4_comptimeEnumField(_275238_d.get()._field_Kind.ptr());;
				return _1a8ad6d4b_comptimeObjSubIdent(_self_, &(_276621_ct), &(_275238_d), &(_275252_si));;
			}
		}
		else if ((_1aac02c01_comptimeParam(_275238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8acda13:;
			{
				jule::Ptr<_1aaad7256_comptimeParam> _276921_ct = _1aac02c01_comptimeParam(_275238_d.get()._field_Kind.ptr());;
				return _1a8ada6e0_comptimeObjSubIdent(_self_, &(_276921_ct), &(_275238_d), &(_275252_si));;
			}
		}
		else if ((_1aac039c1_comptimeStatic(_275238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8acda79:;
			{
				jule::Ptr<_1aaad1508_comptimeStatic> _277221_ct = _1aac039c1_comptimeStatic(_275238_d.get()._field_Kind.ptr());;
				return _1a8addcba_comptimeObjSubIdent(_self_, &(_277221_ct), &(_275238_d), &(_275252_si));;
			}
		}
		else if ((_1aac03c57_comptimeValue(_275238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8acdae0:;
			{
				jule::Ptr<_1aaae32b7_comptimeValue> _277521_ct = _1aac03c57_comptimeValue(_275238_d.get()._field_Kind.ptr());;
				return _1a8ae2395_comptimeObjSubIdent(_self_, &(_277521_ct), &(_275238_d), &(_275252_si));;
			}
		}
		else if ((_1aac03edd_comptimeFile(_275238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8acdb67:;
			{
				jule::Ptr<_1aaae7211_comptimeFile> _277821_ct = _1aac03edd_comptimeFile(_275238_d.get()._field_Kind.ptr());;
				return _1a8ae5970_comptimeObjSubIdent(_self_, &(_277821_ct), &(_275238_d), &(_275252_si));;
			}
		}
		_match_end_1a8acd13e:;
	};
	jule::Ptr<_1aabec1e5_TypeKind> _278217_kind = _275238_d.get()._field_Kind;;
	{
		
		if ((_1aac0010a_Ptr(_275238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8ae7e5b:;
			{
				jule::Ptr<_1aac0c359_Ptr> _278517_ptr = _1aac0010a_Ptr(_275238_d.get()._field_Kind.ptr());;
				if (_1aac0cd93_IsUnsafe(_278517_ptr.ptr())) {
					goto _match_end_1a8ae5486;
				};
				if (((!(_275252_si.get()._field_IsSelf)) && (!(_1aabbeb57_isUnsafe(_self_))))) {
					_1aabbe162_pushErr(_self_, _275252_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_278217_kind=_1aac0010a_Ptr(_275238_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1aabeed74_Sptr(_275238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8ae7d5c:;
			{
				_278217_kind=_1aabeed74_Sptr(_275238_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1a8ae5486:;
	};
	{
		
		if ((_1aac013e7_Trait(_275238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8aea8cb:;
			{
				return _1aabd4881_evalTraitSubIdent(_self_, _275238_d, _1aac013e7_Trait(_275238_d.get()._field_Kind.ptr()), _275252_si.get()._field_Ident);;
			}
		}
		else if ((_1aac01161_Struct(_278217_kind.ptr()) != nullptr)) {
			_case_begin_1a8aea953:;
			{
				jule::Ptr<_1aaa9a390_StructIns> _280117_s = _1aac01161_Struct(_278217_kind.ptr());;
				if (_1aabe71ac_isInstancedStruct(_280117_s)) {
					jule::Bool _280325_usedReferenceElem = (_1aabeed74_Sptr(_275238_d.get()._field_Kind.ptr()) != nullptr);;
					return _1aabd5453_evalStructSubIdent(_self_, _275238_d, _1aac01161_Struct(_278217_kind.ptr()), _275252_si, _280325_usedReferenceElem);;
				};
			}
		}
		else if ((_1aac00b44_Slc(_278217_kind.ptr()) != nullptr)) {
			_case_begin_1a8aea9ca:;
			{
				return _1aabd584e_evalSliceSubIdent(_self_, _275238_d, _275252_si.get()._field_Ident);;
			}
		}
		else if ((_1aac008ad_Arr(_278217_kind.ptr()) != nullptr)) {
			_case_begin_1a8aeaa52:;
			{
				return _1aabd5c4a_evalArraySubIdent(_self_, _275238_d, _275252_si.get()._field_Ident);;
			}
		}
		_match_end_1a8aea810:;
	};
	_1aabbe162_pushErr(_self_, _275252_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_275238_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd9b72_evalSubIdent(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7db15_SubIdentExpr> _281536_si) {
	jule::Ptr<_1aabec1e5_TypeKind> _281617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_281617_prefix;
	});;
	jule::Ptr<_1aabbbe1d_Data> _281917_d = _1aabdb1c3_evalExprKind(_self_, _281536_si.get()._field_Expr.get()._field_Kind);;
	if ((_281917_d == nullptr)) {
		return nullptr;;
	};
	if (_281917_d.get()._field_Decl) {
		return _1aabd8e7e_evalTypeStatic(_self_.ptr(), _281917_d, _281536_si);;
	};
	return _1aabd9831_evalObjSubIdent(_self_.ptr(), _281917_d, _281536_si);;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabd9eb3_evalTuple(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7b5e6_TupleExpr> _282933_tup) {
	jule::Ptr<_1aac0a159_Tuple> _283017_tupT = jule::new_ptr<_1aac0a159_Tuple>();;
	_283017_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>>::alloc(0LL, _282933_tup.get()._field_Expr.len());
	jule::Ptr<_1aaaa59e9_TupleExprModel> _283317_model = jule::new_ptr<_1aaaa59e9_TupleExprModel>(_1aaaa59e9_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1aabbbe1d_Data>>::alloc(0LL, _282933_tup.get()._field_Expr.len())});;
	jule::Bool _283717_ok = true;;
	{
		auto expr = &(_282933_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b03b15:;
		if (it != expr_end) {
			jule::Ptr<_1aaa7a925_Expr> _283821_expr = *it;
			{
				jule::Ptr<_1aabbbe1d_Data> _283921_d = _1aabdbed7_evalExpr(_self_, _283821_expr);;
				if ((_283921_d == nullptr)) {
					_283717_ok=false;
					goto _iter_next_1a8b03b15;
				};
				{ jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> &__jule_push_dest = _283017_tupT.get()._field_Types; __jule_push_dest.push(_283921_d.get()._field_Kind); };
				{ jule::Slice<jule::Ptr<_1aabbbe1d_Data>> &__jule_push_dest = _283317_model.get()._field_Datas; __jule_push_dest.push(_283921_d); };
			}
			_iter_next_1a8b03b15:;
			++it;
			goto _iter_begin_1a8b03b15;
		}
		_iter_end_1a8b03b15:;
	};
	if ((!(_283717_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_283017_tupT, 23)}), ._field_Model=jule::Any(_283317_model, &__jule_any_type88), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabda3ae_evalMap(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aac0ac09_Map> _285831_m, jule::Ptr<_1aaa81002_BraceLit> _285844_lit) {
	jule::Ptr<_1aaaa3035_MapExprModel> _285917_model = jule::new_ptr<_1aaaa3035_MapExprModel>(_1aaaa3035_MapExprModel{._field_KeyKind=_285831_m.get()._field_Key, ._field_ValKind=_285831_m.get()._field_Val, });;
	{
		auto expr = &(_285844_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8b06e26:;
		if (it != expr_end) {
			jule::Ptr<_1aaa7a925_Expr> _286421_expr = *it;
			{
				{
					auto &_match_expr{ _286421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1a8b07685:;
						{
							goto _match_end_1a8b078c7;
						}
					}
					else {
						_case_begin_1a8b0792c:;
						{
							_1aabbe162_pushErr(_self_.ptr(), _285844_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1a8b078c7:;
				};
				jule::Ptr<_1aaa8182c_KeyValPair> _287421_pair = _286421_expr.get()._field_Kind.cast_ptr<_1aaa8182c_KeyValPair>(&__jule_any_type85);;
				jule::Ptr<_1aabbbe1d_Data> _287621_key = _1aabdbed7_evalExpr(_self_, _287421_pair.get()._field_Key);;
				if ((_287621_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1aabbbe1d_Data> _288121_val = _1aabdbed7_evalExpr(_self_, _287421_pair.get()._field_Val);;
				if ((_288121_val == nullptr)) {
					return nullptr;;
				};
				_1aab513d0_checkAssignType(_self_.get()._field_s, false, &(_285831_m.get()._field_Key), &(_287621_key), _287421_pair.get()._field_Colon);
				_1aab513d0_checkAssignType(_self_.get()._field_s, false, &(_285831_m.get()._field_Val), &(_288121_val), _287421_pair.get()._field_Colon);
				{ jule::Slice<jule::Ptr<_1aaaa2a7e_KeyValPairExprModel>> &__jule_push_dest = _285917_model.get()._field_Entries; __jule_push_dest.push(jule::new_ptr<_1aaaa2a7e_KeyValPairExprModel>(_1aaaa2a7e_KeyValPairExprModel{._field_Key=_287621_key.get()._field_Model, ._field_Val=_288121_val.get()._field_Model})); };
			}
			_iter_next_1a8b06e26:;
			++it;
			goto _iter_begin_1a8b06e26;
		}
		_iter_end_1a8b06e26:;
	};
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_285831_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_285917_model, &__jule_any_type103), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabda700_evalBraceLit(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa81002_BraceLit> _290236_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1a8b0c8aa:;
			{
				_1aabbe162_pushErr(_self_.ptr(), _290236_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1aac0167d_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a8b0c228:;
			{
				return _1aabda3ae_evalMap(_self_, _1aac0167d_Map(_self_.get()._field_prefix.ptr()), _290236_lit);;
			}
		}
		else if ((_1aac01161_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1a8b0c28e:;
			{
				return _1aabd16b3_evalStructLitExplicit(_self_, _1aac01161_Struct(_self_.get()._field_prefix.ptr()), _290236_lit.get()._field_Exprs, _290236_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1a8b0bd71:;
			{
				_1aabbe162_pushErr(_self_.ptr(), _290236_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8b0baa7:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabdaa41_evalAnonFunc(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa8837d_FnDecl> _291736_decl) {
	_1aac0e34a_typeChecker _291817_tc = _1aac0e34a_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1aaab609d_FnIns> _292317_ins = _1aac16022_buildFunc(&_291817_tc, _291736_decl);;
	if ((_292317_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a8b10c65:;
			{
				jule::Ptr<_1aab0aae8_scopeChecker> _292921_sc = _self_.get()._field_lookup.cast_ptr<_1aab0aae8_scopeChecker>(0);;
				jule::Ptr<_1aab0aae8_scopeChecker> _293021_scc = _1aab1c588_newChildChecker(_292921_sc);;
				_293021_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1aab09652_scopeLabel>>>(nullptr);
				_293021_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1aab09bd5_scopeGoto>>>(nullptr);
				_293021_scc.get()._field_owner=nullptr;
				_293021_scc.get()._field_childIndex=0LL;
				_293021_scc.get()._field_it=0LLU;
				_293021_scc.get()._field_cse=0LLU;
				_293021_scc.get()._field_owner=_292317_ins;
				_1aab632b0_checkFnInsSc(_self_.get()._field_s.ptr(), &(_292317_ins), &(_293021_scc));
			}
		}
		else {
			_case_begin_1a8b111e9:;
			{
				_1aab638cb_checkFnIns(_self_.get()._field_s, &(_292317_ins));
			}
		}
		_match_end_1a8b11194:;
	};
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_292317_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1aaaa26a5_AnonFnExprModel>(_1aaaa26a5_AnonFnExprModel{._field_Func=_292317_ins, ._field_Global=_1aabbeddd_isGlobal(_self_.ptr())}), &__jule_any_type104), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabdad82_evalBinop(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7e0bb_BinopExpr> _295233_op) {
	_1aabde43a_binaryEval _295317_bs = static__1aabdea23_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1aac05066_Prim> _295617_prim = _1aabeeadd_Prim(_self_.get()._field_prefix.ptr());;
		if (((_295617_prim == nullptr) || (!(_1c4cbc8c8_IsNum(_1aac053a7_Str(_295617_prim.ptr())))))) {
			jule::Ptr<_1aabec1e5_TypeKind> _295825_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_295825_prefix;
			});;
			return _1aabe54b8_eval(&_295317_bs, &(_295233_op));;
		};
	};
	return _1aabe54b8_eval(&_295317_bs, &(_295233_op));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabdb1c3_evalExprKind(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Any _296736_kind) {
	{
		auto &_match_expr{ _296736_kind };
		
		if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1a8b18102:;
			{
				jule::Ptr<_1aaa7ac22_RangeExpr> _297021_e = _296736_kind.cast_ptr<_1aaa7ac22_RangeExpr>(&__jule_any_type105);;
				return _1aabdb1c3_evalExprKind(_self_, _297021_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1a8b17d05:;
			{
				return _1aabc1692_evalLit(_self_.ptr(), _296736_kind.cast_ptr<_1aaa7b9c0_LitExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a8b18333:;
			{
				return _1aabc6147_evalIdent(_self_.ptr(), _296736_kind.cast_ptr<_1aaa7c350_IdentExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1a8b183aa:;
			{
				return _1aabc6488_evalUnary(_self_, _296736_kind.cast_ptr<_1aaa7c9d2_UnaryExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1a8b18432:;
			{
				return _1aabc67c9_evalVariadic(_self_, _296736_kind.cast_ptr<_1aaa7cdab_VariadicExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1a8b184a9:;
			{
				return _1aabc6b1a_evalUnsafe(_self_, _296736_kind.cast_ptr<_1aaa7bd99_UnsafeExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1a8b18586:;
			{
				return _1aabc7753_evalSliceExpr(_self_, _296736_kind.cast_ptr<_1aaa82025_SliceExpr>(&__jule_any_type100));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1a8b1860d:;
			{
				return _1aabcade9_evalIndexing(_self_, _296736_kind.cast_ptr<_1aaa829b5_IndexingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1a8b18685:;
			{
				return _1aabcc22a_evalSlicing(_self_, _296736_kind.cast_ptr<_1aaa83125_SlicingExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1a8b1870c:;
			{
				return _1aabd0dbb_evalCast(_self_, _296736_kind.cast_ptr<_1aaa7d285_CastExpr>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1a8b18784:;
			{
				return _1aabd120c_evalNsSelection(_self_.ptr(), _296736_kind.cast_ptr<_1aaa7d65e_NsSelectionExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1a8b1880b:;
			{
				return _1aabd1a04_evalStructLit(_self_, _296736_kind.cast_ptr<_1aaa80a4b_StructLit>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1a8b18883:;
			{
				return _1aabd20cb_evalType(_self_.ptr(), _296736_kind.cast_ptr<_1aaa765e1_TypeDecl>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a8b1890a:;
			{
				return _1aabd36d7_evalFnCall(_self_, _296736_kind.cast_ptr<_1aaa7e72b_FnCallExpr>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a8b18982:;
			{
				return _1aabd9b72_evalSubIdent(_self_, _296736_kind.cast_ptr<_1aaa7db15_SubIdentExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1a8b18a09:;
			{
				return _1aabd9eb3_evalTuple(_self_, _296736_kind.cast_ptr<_1aaa7b5e6_TupleExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1a8b18a81:;
			{
				return _1aabda700_evalBraceLit(_self_, _296736_kind.cast_ptr<_1aaa81002_BraceLit>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a8b18b08:;
			{
				return _1aabdaa41_evalAnonFunc(_self_, _296736_kind.cast_ptr<_1aaa8837d_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1a8b18b80:;
			{
				return _1aabdad82_evalBinop(_self_, _296736_kind.cast_ptr<_1aaa7e0bb_BinopExpr>(&__jule_any_type114));;
			}
		}
		else {
			_case_begin_1a8b17e26:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8b17882:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabdb514_eval1(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7a925_Expr> _301529_expr) {
	jule::Ptr<_1aabbbe1d_Data> _301617_d = _1aabdb1c3_evalExprKind(_self_, _301529_expr.get()._field_Kind);;
	if (((_301617_d == nullptr) || (_301617_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1aac00dca_Fn(_301617_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8b230b8:;
			{
				jule::Ptr<_1aaab609d_FnIns> _302321_f = _1aac00dca_Fn(_301617_d.get()._field_Kind.ptr());;
				if (_1aaab7533_IsBuiltin(_302321_f.ptr())) {
					_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _301529_expr.get()._field_Token, jule::Str("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1a8b227e3;
				};
				if ((_302321_f.get()._field_Generics.len() != _302321_f.get()._field_Decl.get()._field_Generics.len())) {
					_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _301529_expr.get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!(_302321_f.get()._field_Decl.get()._field_Statically)) && _1aaab38a3_IsMethod(_302321_f.get()._field_Decl.ptr()))) {
					_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _301529_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1a8b227e3:;
	};
	return _301617_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabdb855_eval(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7a925_Expr> _304228_expr) {
	jule::Ptr<_1aabbbe1d_Data> _304317_d = _1aabdb514_eval1(_self_, _304228_expr);;
	if ((_304317_d == nullptr)) {
		return nullptr;;
	};
	if ((((_self_.get()._field_owner == nullptr) || (!(_self_.get()._field_owner.get()._field_Constant))) && _1aac01b9a_comptime(_304317_d.get()._field_Kind.ptr()))) {
		_1aab488c2_pushErr(_self_.get()._field_s.ptr(), _304228_expr.get()._field_Token, jule::Str("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _304317_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabdbb96_evalExpr1(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7a925_Expr> _305733_expr) {
	jule::Ptr<_1aabbbe1d_Data> _305817_d = _1aabdb514_eval1(_self_, _305733_expr);;
	{
		
		if ((_305817_d == nullptr)) {
			_case_begin_1a8b28c4a:;
			{
				return nullptr;;
			}
		}
		else if (_305817_d.get()._field_Decl) {
			_case_begin_1a8b28cc2:;
			{
				_1aabbe162_pushErr(_self_.ptr(), _305733_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a8b28b7e:;
			{
				return _305817_d;;
			}
		}
		_match_end_1a8b28b18:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabdbed7_evalExpr(jule::Ptr<_1aabbdb12_Eval> _self_, jule::Ptr<_1aaa7a925_Expr> _307332_expr) {
	jule::Ptr<_1aabbbe1d_Data> _307417_d = _1aabdb855_eval(_self_, _307332_expr);;
	{
		
		if ((_307417_d == nullptr)) {
			_case_begin_1a8b2a730:;
			{
				return nullptr;;
			}
		}
		else if (_307417_d.get()._field_Decl) {
			_case_begin_1a8b2a7a7:;
			{
				_1aabbe162_pushErr(_self_.ptr(), _307332_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1a8b2a664:;
			{
				return _307417_d;;
			}
		}
		_match_end_1a8b2a5ed:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aabbdb12_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1aabdc49e_unaryEval static__1aabdc8de_new(jule::Ptr<_1aabbdb12_Eval> _309423_e) {
	return _1aabdc49e_unaryEval{._field_e=_309423_e, };;
}



inline void _1aabdcadc_minus(_1aabdc49e_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1a8b2c0b1:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1aabeeadd_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8b2bca3:;
			{
				if ((!(_1c4cbc8c8_IsNum(_1aabec5ad_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1aac01161_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8b2bd19:;
			{
				if ((_1aac01161_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a8b2ae6c:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a8b2bb4e:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1aabbc7e2_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1c4cc28ab_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a8b309bb:;
				{
					_1c4cc18dd_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1c4cc02b0_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c4cc1d72_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a8b30bb9:;
				{
					_1c4cc0d1b_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1c4cbe776_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c4cc2108_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a8b30c30:;
				{
					_1c4cc0d1b_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1c4cc0546_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1a8b30625:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3132:17"));;
				}
			}
			_match_end_1a8b3056a:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaa9ed45_UnaryExprModel>(_1aaa9ed45_UnaryExprModel{._field_Expr=jule::new_ptr<_1aabbbe1d_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1aabdccda_plus(_1aabdc49e_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1a8b34a47:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1aabeeadd_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8b34717:;
			{
				if ((!(_1c4cbc8c8_IsNum(_1aabec5ad_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1aac01161_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8b3477d:;
			{
				if ((_1aac01161_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a8b346a1:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a8b345d5:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1aabbc7e2_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1c4cc28ab_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a8b38452:;
				{
					_1c4cc18dd_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1c4cc02b0_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c4cc1d72_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a8b38650:;
				{
					_1c4cc0d1b_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1c4cbe776_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c4cc2108_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a8b386b6:;
				{
					_1c4cc0d1b_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1c4cc0546_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1a8b380ab:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3177:17"));;
				}
			}
			_match_end_1a8b38001:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaa9ed45_UnaryExprModel>(_1aaa9ed45_UnaryExprModel{._field_Expr=jule::new_ptr<_1aabbbe1d_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1aabdced8_caret(_1aabdc49e_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1a8b3c4cd:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1aabeeadd_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8b3c19d:;
			{
				if ((!(_1c4cbc2bd_IsInt(_1aabec5ad_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1aac01161_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8b3c214:;
			{
				if ((_1aac01161_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1a8b3c137:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a8b3c06b:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1aabbc7e2_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1c4cc1d72_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a8b40dd8:;
				{
					_1c4cc0d1b_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1c4cbe776_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1c4cc2108_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a8b410d6:;
				{
					_1c4cc10c4_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1c4cbea0c_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1a8b40a42:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3220:17"));;
				}
			}
			_match_end_1a8b40987:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaa9ed45_UnaryExprModel>(_1aaa9ed45_UnaryExprModel{._field_Expr=jule::new_ptr<_1aabbbe1d_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1aabdd1d6_excl(_1aabdc49e_unaryEval* _self_) {
	jule::Ptr<_1aac05066_Prim> _323413_t = _1aabeeadd_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_323413_t == nullptr) || (!(_1aac08267_IsBool(_323413_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1aabbc7e2_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1c4cc238e_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1a8b45b24:;
				{
					_1c4cc137c_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_1c4cbec93_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1a8b4577d:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3248:17"));;
				}
			}
			_match_end_1a8b456b2:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaa9ed45_UnaryExprModel>(_1aaa9ed45_UnaryExprModel{._field_Expr=jule::new_ptr<_1aabbbe1d_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1aabdd3d4_star(_1aabdc49e_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaa9ed45_UnaryExprModel>(_1aaa9ed45_UnaryExprModel{._field_Expr=jule::new_ptr<_1aabbbe1d_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_1aac0010a_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8b487a3:;
			{
				if ((!(_1aabbeb57_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1aac0c359_Ptr> _327321_t = _1aac0010a_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1aac0cd93_IsUnsafe(_327321_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_327321_t.get()._field_Elem;
				(*(_self_))._field_d.get()._field_Mutable=true;
			}
		}
		else if ((_1aabeed74_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8b48484:;
			{
				(*(_self_))._field_d.get()._field_Kind=_1aabeed74_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1a8b4841d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a8b476c5:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _1aabdd5d2_amper(_1aabdc49e_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a8b4ede7:;
			{
				jule::Ptr<_1aaaa0719_StructLitExprModel> _329421_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_1aaaa0719_StructLitExprModel>(&__jule_any_type101);;
				_1aabe6321_makeStructLitAlloc(&((*(_self_))._field_d), &(_329421_lit));
			}
		}
		else {
			_case_begin_1a8b4c862:;
			{
				{
					
					if (_1aac18376_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1a8b4c4ee:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aac0c359_Ptr>(_1aac0c359_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 26)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaa9ed45_UnaryExprModel>(_1aaa9ed45_UnaryExprModel{._field_Expr=jule::new_ptr<_1aabbbe1d_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_1a8b4cd6d:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1a8b4cca2:;
				};
			}
		}
		_match_end_1a8b4c80c:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
}



inline void _1aabdd7d0_typeDecl(_1aabdc49e_unaryEval* _self_) {
	_1aac0e34a_typeChecker _331817_tc = _1aac0e34a_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a8b5149d:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac1473a_buildPtrFromType(&_331817_tc, &((*(_self_))._field_d.get()._field_Kind)), 26)});
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8b53b43:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aac140a8_buildSptrFromType(&_331817_tc, &((*(_self_))._field_d.get()._field_Kind)), 21)});
			}
		}
		else {
			_case_begin_1a8b525d1:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1a8b5257b:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _1aabdd9cd_evalData(_1aabdc49e_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8b56063:;
			{
				jule::Ptr<_1aabec1e5_TypeKind> _334121_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_1aabdb855_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
				(*(_self_))._field_e.get()._field_prefix=_334121_prefix;
			}
		}
		else {
			_case_begin_1a8b55b78:;
			{
				(*(_self_))._field_d=_1aabdb855_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
			}
		}
		_match_end_1a8b55b01:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabddd1e_eval(_1aabdc49e_unaryEval* _self_, jule::Ptr<_1aaa7c9d2_UnaryExpr> _335027_u) {
	(*(_self_))._field_u=_335027_u;
	_1aabdd9cd_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_1aabdd7d0_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1aabec1e5_TypeKind> _336113_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1a8b59c9d:;
			{
				_1aabdcadc_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1a8b599a1:;
			{
				_1aabdccda_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a8b59a17:;
			{
				_1aabdced8_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1a8b59a7d:;
			{
				_1aabdd1d6_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a8b59ae4:;
			{
				_1aabdd3d4_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8b5a100:;
			{
				_1aabdd5d2_amper(_self_);
			}
		}
		else {
			_case_begin_1a8b5993a:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1a8b598d5:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1a8b5a166:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str(_336113_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_1aabbc7e2_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1a8b5b8c6:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1a8b5b871:;
	};
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aabdc49e_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1aabde43a_binaryEval static__1aabdea23_newPlain(jule::Ptr<_1aabbdb12_Eval> _339828_e) {
	return _1aabde43a_binaryEval{._field_e=_339828_e, };;
}



inline _1aabde43a_binaryEval static__1aabded64_new(jule::Ptr<_1aabbdb12_Eval> _340423_e, jule::Ptr<_1c3e3a5e6_Token> _340437_op) {
	return _1aabde43a_binaryEval{._field_e=_340423_e, ._field_op=_340437_op};;
}



inline jule::Bool _1aabe00ea_checkTypeCompatibility(_1aabde43a_binaryEval* _self_) {
	return _1aab51886_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1aabe0381_checkStructCommonOperatorCompatibility(_1aabde43a_binaryEval* _self_) {
	jule::Ptr<_1aaab609d_FnIns> _341817_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1a8b60a73:;
			{
				_341817_overload=_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1a8b62190:;
			{
				_341817_overload=_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1a8b62206:;
			{
				_341817_overload=_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1a8b610b2:;
			{
				_341817_overload=_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1a8b61128:;
			{
				_341817_overload=_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a8b6118e:;
			{
				_341817_overload=_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a8b61205:;
			{
				_341817_overload=_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8b622e4:;
			{
				_341817_overload=_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1a8b6235a:;
			{
				_341817_overload=_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a8b623c1:;
			{
				_341817_overload=_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1a8b6104b:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1a8b60ee6:;
	};
	if ((_341817_overload == nullptr)) {
		_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1aaab5102_ParamIns> _345017_p = _341817_overload.get()._field_Params[1LL];;
	return _1aab513d0_checkAssignType((*(_self_))._field_e.get()._field_s, _345017_p.get()._field_Decl.get()._field_Reference, &(_345017_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe0617_evalComptimeTypeInfo(_1aabde43a_binaryEval* _self_) {
	jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _345517_r = _1aac034a4_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((_345517_r == nullptr)) {
		_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("comptimeTypeInfo", 16), &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _346017_l = _1aac034a4_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1a8b6bcb0:;
			{
				jule::Ptr<_1c4cbcda1_Const> _346321_constant = static__1c4cbd874_NewBool(_1aabec8ee_Equal(_346017_l.get()._field_base, _345517_r.get()._field_base));;
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_346321_constant, &__jule_any_type19), ._field_Constant=_346321_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8b6d124:;
			{
				jule::Ptr<_1c4cbcda1_Const> _347021_constant = static__1c4cbd874_NewBool((!(_1aabec8ee_Equal(_346017_l.get()._field_base, _345517_r.get()._field_base))));;
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, ._field_Model=jule::Any(_347021_constant, &__jule_any_type19), ._field_Constant=_347021_constant});;
			}
		}
		else {
			_case_begin_1a8b6c002:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8b69571:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe089d_evalNil(_1aabde43a_binaryEval* _self_) {
	if ((!(_1aabee0a4_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8b705cc:;
			{
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else {
			_case_begin_1a8b715cd:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8b71578:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe0b34_evalEnum(_1aabde43a_binaryEval* _self_) {
	jule::Ptr<_1aaac8b3d_Enum> _350117_enm = _1aac00391_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8b73514:;
			{
				jule::Ptr<_1aabec1e5_TypeKind> _350521_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_1aac00391_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_350521_rkind=_1aac00391_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1aab51886_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_350117_enm.get()._field_Kind.get()._field_Kind), &(_350521_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		_match_end_1a8b734ae:;
	};
	if (((_1aac00391_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_350117_enm != _1aac00391_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_350117_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a8b72b2e:;
			{
				if ((!(_1c4cbc8c8_IsNum(_1aabec5ad_Str(_350117_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_350117_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8b7822d:;
			{
				jule::Ptr<_1aaac80c1_EnumItem> _353517_first = _350117_enm.get()._field_Items[0LL];;
				{
					
					if (_1c4cc1d72_IsI64(_353517_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1a8b7ace1:;
						{
							if ((_1c4cbe776_ReadI64(_353517_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_1a8b7dd05;
							};
							goto _julec_label_1a8b7c82b;
						}
					}
					else if (_1c4cc2108_IsU64(_353517_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1a8b7ad68:;
						{
							if ((_1c4cbea0c_ReadU64(_353517_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_1a8b7dd05;
							};
							goto _julec_label_1a8b7c82b;
						}
					}
					else {
						_case_begin_1a8b7a906:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3548:17"));;
						}
					}
					_match_end_1a8b7a890:;
				};
				_julec_label_1a8b7c82b:;
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_350117_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_1aabbe4c5_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1a8b7dd05:;
				goto _case_begin_1a8b78294;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a8b78294:;
			{
				if (((_1aabeeadd_Prim(_350117_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1c4cbc2bd_IsInt(_1aac053a7_Str(_1aabeeadd_Prim(_350117_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_350117_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a8b77370:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_350117_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8b7731a:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe0dba_evalTypeEnum(_1aabde43a_binaryEval* _self_) {
	jule::Ptr<_1aaaca348_TypeEnum> _356817_enm = _1aac00627_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_1aabe00ea_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8b8327c:;
			{
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else {
			_case_begin_1a8b826bb:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aaaca689_Str(_356817_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8b82db4:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe1151_evalSptr(_1aabde43a_binaryEval* _self_) {
	if ((!(_1aabe00ea_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8b84080:;
			{
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else {
			_case_begin_1a8b84c40:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8b84bda:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe13d7_evalPtr(_1aabde43a_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1a8b8634b:;
			{
				if ((!(_1aabe00ea_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1a8b87858:;
			{
				if ((_1aac0010a_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_1aac0cd93_IsUnsafe(_1aac0010a_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_1aabe7531_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a8b86109:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8b860a4:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe166d_evalArr(_1aabde43a_binaryEval* _self_) {
	if ((!(_1aabe00ea_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8b81ba4:;
			{
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else {
			_case_begin_1a8b8c8c4:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8b8c86e:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe1904_evalSlc(_1aabde43a_binaryEval* _self_) {
	if ((!(_1aabe00ea_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8b8db7d:;
			{
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else {
			_case_begin_1a8b8e83d:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8b8e7d8:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe1b8a_evalStruct(_1aabde43a_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1a8b90c6d:;
			{
				if ((_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1a8b90ce5:;
			{
				if ((_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1a8b91488:;
			{
				if ((_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a8b914ee:;
			{
				if ((_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8b91565:;
			{
				if ((!(_1aabe00ea_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		_match_end_1a8b90ba2:;
	};
	if ((!(_1aabe0381_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe1e21_evalTrait(_1aabde43a_binaryEval* _self_) {
	if ((!(_1aabe00ea_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8b99062:;
			{
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else {
			_case_begin_1a8b997c1:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8b9976b:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe21a7_evalAny(_1aabde43a_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8b9adcc:;
			{
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else {
			_case_begin_1a8b9ab8a:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8b9ab35:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe243d_evalBool(_1aabde43a_binaryEval* _self_) {
	if ((!(_1aabe00ea_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1a8b9c32e:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a8b9cede:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8b9ce89:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe26c4_evalStr(_1aabde43a_binaryEval* _self_) {
	jule::Str _376717_rk = _1aabec5ad_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_376717_rk.equal("str", 3))) {
		_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_376717_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1a8ba1388:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a8ba1e49:;
			{
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		else {
			_case_begin_1a8ba0dd2:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8ba03a9:;
	};
}



inline void _1aabe28c2_setTypeToGreater(_1aabde43a_binaryEval* _self_) {
	jule::Ptr<_1aac05066_Prim> _379213_lp = _1aabeeadd_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1aac05066_Prim> _379313_rp = _1aabeeadd_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_1aabbc7e2_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1aabbc7e2_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_379313_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_1a8ba58cb;
	};
	if (_1aabbc7e2_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_379213_lp.get()._field_Kind;
		return;;
	};
	_julec_label_1a8ba58cb:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1aabbc7e2_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_379313_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1c4cbab90_IsGreater(_379313_rp.get()._field_Kind, _379213_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1aabbc7e2_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_379313_rp.get()._field_Kind;
		};
	};
}



inline void _1aabe2b7a_checkModData(_1aabde43a_binaryEval* _self_, jule::Ptr<_1aabbbe1d_Data>* _382536_d) {
	if ((!(_1aabbc7e2_IsConst((*(_382536_d)).ptr())))) {
		if (((_1aabeeadd_Prim((*(_382536_d)).get()._field_Kind.ptr()) == nullptr) || (!(_1c4cbc2bd_IsInt(_1aabeeadd_Prim((*(_382536_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1aaba3014_sigAssignable(jule::Str("i64", 3), _382536_d)) {
			_case_begin_1a8bab56e:;
			{
				_1c4cc0d1b_SetI64((*(_382536_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c4cc0546_AsI64((*(_382536_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1aaba33cc_unsigAssignable(jule::Str("u64", 3), _382536_d)) {
			_case_begin_1a8bab5d5:;
			{
				_1c4cc10c4_SetU64((*(_382536_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c4cc07cc_AsU64((*(_382536_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1a8ba9d0e:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a8ba9ca9:;
	};
}



inline void _1aabe2d78_mod(_1aabde43a_binaryEval* _self_) {
	_1aabe2b7a_checkModData(_self_, &((*(_self_))._field_l));
	_1aabe2b7a_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1aabe3274_numbersAreCompatibile(_1aabde43a_binaryEval* _self_, jule::Str* _384737_lk, jule::Str* _384747_rk) {
	if ((!(_1c4cbc8c8_IsNum((*(_384747_rk)))))) {
		return false;;
	};
	if ((_1aabbc7e2_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_384737_lk)).equal("f32", 3)) {
		if ((_1aabbc7e2_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_384747_rk)).equal("f32", 3);;
	};
	if ((*(_384737_lk)).equal("f64", 3)) {
		if ((_1aabbc7e2_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_384747_rk)).equal("f64", 3);;
	};
	if ((_1aabbc7e2_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_384737_lk)) == (*(_384747_rk)));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe350a_evalFloat(_1aabde43a_binaryEval* _self_) {
	jule::Str _387313_lk = _1aabeeadd_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _387413_rk = _1aabeeadd_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1aabe3274_numbersAreCompatibile(_self_, &(_387313_lk), &(_387413_rk))))) {
		_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_387313_lk, &__jule_any_type5),jule::Any(_387413_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1a8bb8e94:;
			{
				if (((!(_1aabbc7e2_IsConst((*(_self_))._field_l.ptr()))) || (!(_1aaba3751_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_387313_lk, &__jule_any_type5),jule::Any(_387413_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_1aabbc7e2_IsConst((*(_self_))._field_r.ptr()))) || (!(_1aaba3751_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_387313_lk, &__jule_any_type5),jule::Any(_387413_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1c4cc0d1b_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1c4cc0546_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_1c4cc10c4_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1c4cc07cc_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_1aabe6cd3_isOkForShifting(&((*(_self_))._field_r))))) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1a8bb8e3e:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a8bb947d:;
			{
				_1aabe28c2_setTypeToGreater(_self_);
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		_match_end_1a8bbd87d:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1a8bb8405:;
			{
				_1aabe28c2_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a8bc0709:;
			{
				if ((!(_1c4cbc2bd_IsInt(_387413_rk)))) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_387313_lk, &__jule_any_type5),jule::Any(_387413_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1aabe2d78_mod(_self_);
				_1aabe28c2_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1a8bbed02:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8bbec9c:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe3791_evalInt(_1aabde43a_binaryEval* _self_) {
	jule::Str _393713_lk = _1aabeeadd_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _393813_rk = _1aabeeadd_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1a8bc36b8:;
			{
				if (((!(_1c4cbc2bd_IsInt(_393713_lk))) || (!(_1c4cbc2bd_IsInt(_393813_rk))))) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_393713_lk, &__jule_any_type5),jule::Any(_393813_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_1aabe6cd3_isOkForShifting(&((*(_self_))._field_r))))) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1a8bc394e:;
	};
	if ((!(_1aabe3274_numbersAreCompatibile(_self_, &(_393713_lk), &(_393813_rk))))) {
		_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_393713_lk, &__jule_any_type5),jule::Any(_393813_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a8bc6787:;
			{
				return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8a1d_primBool, });;
			}
		}
		_match_end_1a8bc6732:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a8bc3a92:;
			{
				_1aabe28c2_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a8bc8602:;
			{
				_1aabe2d78_mod(_self_);
				_1aabe28c2_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1a8bc78a9:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8bc7854:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe3a27_evalPrim(_1aabde43a_binaryEval* _self_) {
	jule::Ptr<_1aac05066_Prim> _399413_prim = _1aabeeadd_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1aac08267_IsBool(_399413_prim.ptr())) {
			_case_begin_1a8bca824:;
			{
				return _1aabe243d_evalBool(_self_);;
			}
		}
		else if (_1aac084ed_IsStr(_399413_prim.ptr())) {
			_case_begin_1a8bca89b:;
			{
				return _1aabe26c4_evalStr(_self_);;
			}
		}
		_match_end_1a8bca79c:;
	};
	if ((_1aabeeadd_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aac053a7_Str(_399413_prim.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_1c4cbc60e_IsFloat(_399413_prim.get()._field_Kind)) {
			_case_begin_1a8bcc89d:;
			{
				return _1aabe350a_evalFloat(_self_);;
			}
		}
		else if (_1c4cbc2bd_IsInt(_399413_prim.get()._field_Kind)) {
			_case_begin_1a8bcc925:;
			{
				return _1aabe3791_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1a8bcc804:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8bca956:;
	};
}



inline void _1aabe3c25_checkSpecialCases(_1aabde43a_binaryEval* _self_) {
	if (((!(_1aabed801_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_1aabed2d4_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_1aabed801_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_1aabed2d4_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe3eab_evalOp(_1aabde43a_binaryEval* _self_) {
	_1aabe3c25_checkSpecialCases(_self_);
	{
		
		if (_1aabed56a_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1a8bd1c7b:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if ((_1aac034a4_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd164e:;
			{
				({
					jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a8bd1e24;
			}
		}
		else if ((_1aac034a4_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd1e24:;
			{
				return _1aabe0617_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1aabeeadd_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _1aac08784_IsAny(_1aabeeadd_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a8bd2c05:;
			{
				({
					jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a8bd2c6b;
			}
		}
		else if (_1aabed2d4_IsNil((*(_self_))._field_r.get()._field_Kind.ptr())) {
			_case_begin_1a8bd2c6b:;
			{
				({
					jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a8bd2d59;
			}
		}
		else if (_1aabed2d4_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1a8bd2d59:;
			{
				return _1aabe089d_evalNil(_self_);;
			}
		}
		else if (((_1aabeeadd_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _1aac08784_IsAny(_1aabeeadd_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a8bd2dc0:;
			{
				return _1aabe21a7_evalAny(_self_);;
			}
		}
		else if ((_1aac00627_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd2e36:;
			{
				({
					jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a8bd2e9c;
			}
		}
		else if ((_1aac00627_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd2e9c:;
			{
				return _1aabe0dba_evalTypeEnum(_self_);;
			}
		}
		else if ((_1aac00391_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd3013:;
			{
				({
					jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a8bd3079;
			}
		}
		else if ((_1aac00391_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd3079:;
			{
				return _1aabe0b34_evalEnum(_self_);;
			}
		}
		else if ((_1aabeed74_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd3101:;
			{
				({
					jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a8bd3178;
			}
		}
		else if ((_1aabeed74_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd3178:;
			{
				return _1aabe1151_evalSptr(_self_);;
			}
		}
		else if ((_1aac0010a_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd3200:;
			{
				({
					jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a8bd3277;
			}
		}
		else if ((_1aac0010a_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd3277:;
			{
				return _1aabe13d7_evalPtr(_self_);;
			}
		}
		else if ((_1aac008ad_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd32ee:;
			{
				return _1aabe166d_evalArr(_self_);;
			}
		}
		else if ((_1aac00b44_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd3376:;
			{
				return _1aabe1904_evalSlc(_self_);;
			}
		}
		else if ((_1aac013e7_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd33ed:;
			{
				({
					jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1a8bd3475;
			}
		}
		else if ((_1aac013e7_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd3475:;
			{
				return _1aabe1e21_evalTrait(_self_);;
			}
		}
		else if ((_1aac01161_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd34ec:;
			{
				return _1aabe1b8a_evalStruct(_self_);;
			}
		}
		else if ((_1aabeeadd_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8bd3574:;
			{
				return _1aabe3a27_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1a8bd1a7d:;
			{
				_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1aabec5ad_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8bd1a17:;
	};
}



inline void _1aabe4264_evalConst(_1aabde43a_binaryEval* _self_, jule::Ptr<_1aabbbe1d_Data>* _408533_d) {
	{
		
		if (((*(_408533_d)) == nullptr) || ((*(_self_))._field_l.get()._field_Model == nullptr) || ((*(_self_))._field_r.get()._field_Model == nullptr)) {
			_case_begin_1a8be2a8e:;
			{
				return;;
			}
		}
		else if ((!(_1aabbc7e2_IsConst((*(_self_))._field_l.ptr()))) || (!(_1aabbc7e2_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1a8be2ce2:;
			{
				(*(_408533_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1a8be29b2:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1a8be4882:;
			{
				(*(_408533_d)).get()._field_Constant=static__1c4cbd874_NewBool(_1c4cc3956_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a8be48e8:;
			{
				(*(_408533_d)).get()._field_Constant=static__1c4cbd874_NewBool((!(_1c4cc3956_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1a8be495e:;
			{
				(*(_408533_d)).get()._field_Constant=static__1c4cbd874_NewBool(_1c4cc3615_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1a8be49c5:;
			{
				(*(_408533_d)).get()._field_Constant=static__1c4cbd874_NewBool(_1c4cc32c4_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1a8be4a3b:;
			{
				(*(_408533_d)).get()._field_Constant=static__1c4cbd874_NewBool(_1c4cc4429_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1a8be4aa2:;
			{
				(*(_408533_d)).get()._field_Constant=static__1c4cbd874_NewBool(_1c4cc3c97_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1a8be4b18:;
			{
				(*(_408533_d)).get()._field_Constant=static__1c4cbd874_NewBool(_1c4cc476a_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1a8be4b7e:;
			{
				(*(_408533_d)).get()._field_Constant=static__1c4cbd874_NewBool(_1c4cc40d8_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1a8be4be5:;
			{
				_1c4cc4aab_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408533_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1a8be4c5b:;
			{
				_1c4cc4dec_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408533_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a8be4cc2:;
			{
				_1c4cc523d_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408533_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1a8be4d38:;
			{
				jule::Bool _412417_ok = _1c4cc557e_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_412417_ok)) && (_1c4cc0a63_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_408533_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_1aac05066_Prim> _412921_prim = _1aabeeadd_Prim((*(_408533_d)).get()._field_Kind.ptr());;
				{
					
					if (_1c4cbbbe6_IsSigInt(_412921_prim.get()._field_Kind)) {
						_case_begin_1a8c0185b:;
						{
							_1c4cc0d1b_SetI64((*(_408533_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c4cc0546_AsI64((*(_408533_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_1c4cbc004_IsUnsigInt(_412921_prim.get()._field_Kind)) {
						_case_begin_1a8c018d3:;
						{
							_1c4cc10c4_SetU64((*(_408533_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c4cc07cc_AsU64((*(_408533_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_1a8c017c3:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a8be4db0:;
			{
				jule::Bool _413717_ok = _1c4cc58c0_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_413717_ok)) && (_1c4cc0a63_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_408533_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1a8be4e37:;
			{
				_1c4cc6052_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408533_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a8be4eae:;
			{
				_1c4cc5c11_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408533_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a8be5036:;
			{
				_1c4cc6393_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408533_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1a8be50ad:;
			{
				_1c4cc66d4_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408533_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1a8be5135:;
			{
				_1c4cc6a25_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408533_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_1a8be4178:;
	};
	(*(_408533_d)).get()._field_Model=jule::Any((*(_408533_d)).get()._field_Constant, &__jule_any_type19);
	_1aabe83bc_applyCastModelByEnum(_408533_d, _1aac00391_Enum((*(_408533_d)).get()._field_Kind.ptr()));
}



inline void _1aabe451c_checkData(_1aabde43a_binaryEval* _self_, jule::Ptr<_1aabbbe1d_Data>* _416233_d) {
	jule::Ptr<_1aaab609d_FnIns> _416313_f = _1aac00dca_Fn((*(_416233_d)).get()._field_Kind.ptr());;
	if ((((_416313_f != nullptr) && (_416313_f.get()._field_Decl != nullptr)) && _1aaab38a3_IsMethod(_416313_f.get()._field_Decl.ptr()))) {
		_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1aabe471a_checkDatas(_1aabde43a_binaryEval* _self_) {
	_1aabe451c_checkData(_self_, &((*(_self_))._field_l));
	_1aabe451c_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1aabe49c3_setModel(_1aabde43a_binaryEval* _self_, jule::Ptr<_1aabbbe1d_Data>* _417432_d) {
	if (_1aabbc7e2_IsConst((*(_417432_d)).ptr())) {
		if (((_1aabbc7e2_IsConst((*(_self_))._field_l.ptr()) && _1aabbc7e2_IsConst((*(_self_))._field_r.ptr())) || (((*(_self_))._field_l.get()._field_Model == nullptr) && ((*(_self_))._field_r.get()._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1aabbbe1d_Data> _418318_l;;
	jule::Ptr<_1aabbbe1d_Data> _418325_r;;
	({
		jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_418318_l = ___jule_assign_arg;
		_418325_r = _1___jule_assign_arg;
	});
	if ((!(_1aabbcb33_GoodOperand(_418318_l.ptr(), &(_418325_r))))) {
		({
			jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = _418325_r;
			jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = _418318_l;
			_418318_l = ___jule_assign_arg;
			_418325_r = _1___jule_assign_arg;
		});
	};
	(*(_417432_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaa9e96b_BinopExprModel>(_1aaa9e96b_BinopExprModel{._field_Left=jule::new_ptr<_1aaa9e471_OperandExprModel>(_1aaa9e471_OperandExprModel{._field_Kind=_418318_l.get()._field_Kind, ._field_Model=_418318_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1aaa9e471_OperandExprModel>(_1aaa9e471_OperandExprModel{._field_Kind=_418325_r.get()._field_Kind, ._field_Model=_418325_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type115);
}



inline void _1aabe4c7b_postEval(_1aabde43a_binaryEval* _self_, jule::Ptr<_1aabbbe1d_Data>* _420132_d) {
	(*(_420132_d)).get()._field_Lvalue=false;
	_1aabe49c3_setModel(_self_, _420132_d);
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe5177_solveExplicit(_1aabde43a_binaryEval* _self_, jule::Ptr<_1aabbbe1d_Data>* _420637_l, jule::Ptr<_1aabbbe1d_Data>* _420652_r) {
	({
		jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = (*(_420637_l));
		jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = (*(_420652_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1aabe471a_checkDatas(_self_);
	jule::Ptr<_1aabbbe1d_Data> _421117_d = _1aabe3eab_evalOp(_self_);;
	({
		jule::Ptr<_1aabbbe1d_Data> ___jule_assign_arg = (*(_420637_l));
		jule::Ptr<_1aabbbe1d_Data> _1___jule_assign_arg = (*(_420652_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1aabe4264_evalConst(_self_, &(_421117_d));
	if ((_421117_d != nullptr)) {
		_421117_d.get()._field_Mutable=true;
		_1aabe4c7b_postEval(_self_, &(_421117_d));
	};
	return _421117_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe54b8_eval(_1aabde43a_binaryEval* _self_, jule::Ptr<_1aaa7e0bb_BinopExpr>* _422628_op) {
	if (((*(_422628_op)).get()._field_Op.get()._field_Id == static_cast<jule::U32>(71LLU))) {
		_1aabbe162_pushErr((*(_self_))._field_e.ptr(), (*(_422628_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1aabbe4c5_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aabbbe1d_Data> _423317_l = _1aabdbb96_evalExpr1((*(_self_))._field_e, (*(_422628_op)).get()._field_Left);;
	if (((_423317_l == nullptr) || (_423317_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1aabec1e5_TypeKind> _423817_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_423317_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_423817_prefix;
	});;
	jule::Ptr<_1aabbbe1d_Data> _424117_r = _1aabdbb96_evalExpr1((*(_self_))._field_e, (*(_422628_op)).get()._field_Right);;
	if (((_424117_r == nullptr) || (_424117_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_422628_op)).get()._field_Op;
	jule::Ptr<_1aabbbe1d_Data> _424817_d = _1aabe5177_solveExplicit(_self_, &(_423317_l), &(_424117_r));;
	if ((((_424817_d != nullptr) && _423317_l.get()._field_IsRune) && _424117_r.get()._field_IsRune)) {
		_424817_d.get()._field_IsRune=true;
	};
	return _424817_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aabde43a_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aabea80e_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aabeb403_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aabec5ad_Str(_1aabec1e5_TypeKind* _self_) {
	if (_1aabed2d4_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	_1c38d3b83_StrBuilder _7417_kind = static__1c38d3ea2_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1c38dc94a_WriteStr(&_7417_kind, jule::Str("...", 3));
	};
	if (_1aabed04d_Binded(_self_)) {
		_1c38dc94a_WriteStr(&_7417_kind, jule::Str("cpp.", 4));
		_1c38dc94a_WriteStr(&_7417_kind, (*(_self_))._field_BindIdent);
	} else {
		_1c38dc94a_WriteStr(&_7417_kind, _1aabebc3e_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1aabeb799_Str((*(_self_))._field_Kind));
	};
	return _1c38dd242_Str(&_7417_kind);;
}



inline jule::Bool _1aabec8ee_Equal(jule::Ptr<_1aabec1e5_TypeKind> _self_, jule::Ptr<_1aabec1e5_TypeKind> _9021_other) {
	if (_1aabed2d4_IsNil(_self_.ptr())) {
		return _1aabed2d4_IsNil(_9021_other.ptr());;
	};
	if (_1aabed04d_Binded(_self_.ptr())) {
		return (_1aabed04d_Binded(_9021_other.ptr()) && (_self_.get()._field_BindIdent == _9021_other.get()._field_BindIdent));;
	};
	return _1aabebc3e_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1aabebada_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1aabed04d_Binded(_1aabec1e5_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1aabed2d4_IsNil(_1aabec1e5_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1aabed56a_Void(_1aabec1e5_TypeKind* _self_) {
	jule::Ptr<_1aac05066_Prim> _11013_prim = _1aabeeadd_Prim(_self_);;
	return ((_11013_prim != nullptr) && _11013_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _1aabed801_Comparable(_1aabec1e5_TypeKind* _self_) {
	{
		_1aabec1e5_TypeKind* _11721__self = (&((*(_self_))));;
		if ((_1aac01161_Struct(_11721__self) != nullptr)) {
			return _1aac01161_Struct(_11721__self).get()._field_Comparable;;
		};
		return (((_1aac0167d_Map(_11721__self) == nullptr) && (_1aac00b44_Slc(_11721__self) == nullptr)) && (_1aac00dca_Fn(_11721__self) == nullptr));;
	};
}



inline jule::Bool _1aabeda87_Mutable(_1aabec1e5_TypeKind* _self_) {
	{
		_1aabec1e5_TypeKind* _12821__self = (&((*(_self_))));;
		if ((_1aac01161_Struct(_12821__self) != nullptr)) {
			return _1aac01161_Struct(_12821__self).get()._field_Mutable;;
		};
		if ((_1aac013e7_Trait(_12821__self) != nullptr)) {
			return true;;
		};
		if ((_1aabeeadd_Prim(_12821__self) != nullptr)) {
			jule::Ptr<_1aac05066_Prim> _13621_p = _1aabeeadd_Prim(_12821__self);;
			return _1aac08784_IsAny(_13621_p.ptr());;
		};
		if ((_1aac008ad_Arr(_12821__self) != nullptr)) {
			return _1aabeda87_Mutable(_1aac008ad_Arr(_12821__self).get()._field_Elem.ptr());;
		};
		return (((_1aac00b44_Slc(_12821__self) != nullptr) || (_1aac0010a_Ptr(_12821__self) != nullptr)) || (_1aabeed74_Sptr(_12821__self) != nullptr));;
	};
}



inline jule::Bool _1aabedd1d_Ordered(_1aabec1e5_TypeKind* _self_) {
	{
		_1aabec1e5_TypeKind* _15121__self = (&((*(_self_))));;
		jule::Ptr<_1aac05066_Prim> _15217_prim = _1aabeeadd_Prim(_15121__self);;
		if ((_15217_prim != nullptr)) {
			return (_1c4cbc8c8_IsNum(_15217_prim.get()._field_Kind) || _1aac084ed_IsStr(_15217_prim.ptr()));;
		};
		if ((_1aac0010a_Ptr(_15121__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1aaa9a390_StructIns> _15917_s = _1aac01161_Struct(_15121__self);;
		if ((_15917_s != nullptr)) {
			return ((((_15917_s.get()._field_Operators._field_Gt != nullptr) && (_15917_s.get()._field_Operators._field_GtEq != nullptr)) && (_15917_s.get()._field_Operators._field_Lt != nullptr)) && (_15917_s.get()._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1aaac8b3d_Enum> _16617_enm = _1aac00391_Enum(_15121__self);;
		if ((_16617_enm != nullptr)) {
			return _1c4cbc8c8_IsNum(_1aabec5ad_Str(_16617_enm.get()._field_Kind.get()._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1aabee0a4_NilCompatible(_1aabec1e5_TypeKind* _self_) {
	{
		_1aabec1e5_TypeKind* _17721__self = (&((*(_self_))));;
		jule::Ptr<_1aac05066_Prim> _17917_prim = _1aabeeadd_Prim(_17721__self);;
		if (((_17917_prim != nullptr) && _1aac08784_IsAny(_17917_prim.ptr()))) {
			return true;;
		};
		return (((((((_1aabed2d4_IsNil(_17721__self) || (_1aac00dca_Fn(_17721__self) != nullptr)) || (_1aabeed74_Sptr(_17721__self) != nullptr)) || (_1aac0010a_Ptr(_17721__self) != nullptr)) || (_1aac013e7_Trait(_17721__self) != nullptr)) || (_1aac00b44_Slc(_17721__self) != nullptr)) || (_1aac0167d_Map(_17721__self) != nullptr)) || (_1aac00627_TypeEnum(_17721__self) != nullptr));;
	};
}



inline jule::Bool _1aabee33a_PerformsRC(_1aabec1e5_TypeKind* _self_) {
	{
		_1aabec1e5_TypeKind* _19821__self = (&((*(_self_))));;
		jule::Ptr<_1aac05066_Prim> _19917_prim = _1aabeeadd_Prim(_19821__self);;
		if ((_19917_prim != nullptr)) {
			return (_1aac08784_IsAny(_19917_prim.ptr()) || _1aac084ed_IsStr(_19917_prim.ptr()));;
		};
		return (((_1aabeed74_Sptr(_19821__self) != nullptr) || (_1aac00b44_Slc(_19821__self) != nullptr)) || (_1aac013e7_Trait(_19821__self) != nullptr));;
	};
}



inline jule::Bool _1aabee5c1_SupportsCloning(_1aabec1e5_TypeKind* _self_) {
	{
		_1aabec1e5_TypeKind* _21021__self = (&((*(_self_))));;
		{
			
			if ((_1aabeeadd_Prim(_21021__self) != nullptr)) {
				_case_begin_1a8c412c4:;
				{
					return (!(_1aac08784_IsAny(_1aabeeadd_Prim(_21021__self).ptr())));;
				}
			}
			else if ((_1aac00391_Enum(_21021__self) != nullptr)) {
				_case_begin_1a8c4134b:;
				{
					return true;;
				}
			}
			else if ((_1aac00dca_Fn(_21021__self) != nullptr)) {
				_case_begin_1a8c415c1:;
				{
					return true;;
				}
			}
			else if ((_1aac0010a_Ptr(_21021__self) != nullptr)) {
				_case_begin_1a8c41637:;
				{
					return true;;
				}
			}
			else if ((_1aac00b44_Slc(_21021__self) != nullptr)) {
				_case_begin_1a8c4169d:;
				{
					return _1aabee5c1_SupportsCloning(_1aac00b44_Slc(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1aac0167d_Map(_21021__self) != nullptr)) {
				_case_begin_1a8c41725:;
				{
					jule::Ptr<_1aac0ac09_Map> _22321_m = _1aac0167d_Map(_21021__self);;
					return (_1aabee5c1_SupportsCloning(_22321_m.get()._field_Key.ptr()) && _1aabee5c1_SupportsCloning(_22321_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1aac008ad_Arr(_21021__self) != nullptr)) {
				_case_begin_1a8c4179c:;
				{
					return _1aabee5c1_SupportsCloning(_1aac008ad_Arr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1aabeed74_Sptr(_21021__self) != nullptr)) {
				_case_begin_1a8c418ac:;
				{
					return _1aabee5c1_SupportsCloning(_1aabeed74_Sptr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1aac01161_Struct(_21021__self) != nullptr)) {
				_case_begin_1a8c41923:;
				{
					jule::Ptr<_1aaa9a390_StructIns> _23025_s = _1aac01161_Struct(_21021__self);;
					return (((_23025_s.get()._field_Decl != nullptr) && (!(_23025_s.get()._field_Decl.get()._field_Binded))) && _1aaa98c51_IsDerives(_23025_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1a8c41181:;
				{
					return false;;
				}
			}
			_match_end_1a8c4111a:;
		};
	};
}



inline jule::Bool _1aabee857_Variadicable(_1aabec1e5_TypeKind* _self_) {
	{
		_1aabec1e5_TypeKind* _24121__self = (&((*(_self_))));;
		return (_1aac00b44_Slc(_24121__self) != nullptr);;
	};
}



inline jule::Ptr<_1aac05066_Prim> _1aabeeadd_Prim(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1a8c46c14:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aac05066_Prim>(20);;
			}
		}
		else {
			_case_begin_1a8c47a4a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c479e5:;
	};
}



inline jule::Ptr<_1aac08a92_Sptr> _1aabeed74_Sptr(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1a8c483db:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aac08a92_Sptr>(21);;
			}
		}
		else {
			_case_begin_1a8c487d7:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c48782:;
	};
}



inline jule::Ptr<_1aac0c359_Ptr> _1aac0010a_Ptr(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1a8c490bd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aac0c359_Ptr>(26);;
			}
		}
		else {
			_case_begin_1a8c494b9:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c49464:;
	};
}



inline jule::Ptr<_1aaac8b3d_Enum> _1aac00391_Enum(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a8c49ca0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaac8b3d_Enum>(3);;
			}
		}
		else {
			_case_begin_1a8c4a19b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c4a146:;
	};
}



inline jule::Ptr<_1aaaca348_TypeEnum> _1aac00627_TypeEnum(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1a8c4a993:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaaca348_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1a8c4ada0:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c4ad4a:;
	};
}



inline jule::Ptr<_1aac0b886_Arr> _1aac008ad_Arr(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1a8c4b697:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aac0b886_Arr>(25);;
			}
		}
		else {
			_case_begin_1a8c4baa4:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c4ba4e:;
	};
}



inline jule::Ptr<_1aac09565_Slc> _1aac00b44_Slc(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1a8c4c39b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aac09565_Slc>(22);;
			}
		}
		else {
			_case_begin_1a8c4c7a8:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c4c753:;
	};
}



inline jule::Ptr<_1aaab609d_FnIns> _1aac00dca_Fn(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1a8c4d08e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaab609d_FnIns>(1);;
			}
		}
		else {
			_case_begin_1a8c4d48a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c4d435:;
	};
}



inline jule::Ptr<_1aaa9a390_StructIns> _1aac01161_Struct(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a8c4dc71:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaa9a390_StructIns>(0);;
			}
		}
		else {
			_case_begin_1a8c4e16c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c4e117:;
	};
}



inline jule::Ptr<_1aaac6443_Trait> _1aac013e7_Trait(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1a8c4e964:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaac6443_Trait>(2);;
			}
		}
		else {
			_case_begin_1a8c4ed71:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c4ed1b:;
	};
}



inline jule::Ptr<_1aac0ac09_Map> _1aac0167d_Map(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1a8c50668:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aac0ac09_Map>(24);;
			}
		}
		else {
			_case_begin_1a8c50a75:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c50a20:;
	};
}



inline jule::Ptr<_1aac0a159_Tuple> _1aac01914_Tup(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1a838133d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aac0a159_Tuple>(23);;
			}
		}
		else {
			_case_begin_1a8c51779:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c51724:;
	};
}



inline jule::Bool _1aac01b9a_comptime(_1aabec1e5_TypeKind* _self_) {
	return ((((((((((((((_1aac0321d_comptimeTypeInfos(_self_) != nullptr) || (_1aac034a4_comptimeTypeInfo(_self_) != nullptr)) || (_1aac01e31_comptimeStructFields(_self_) != nullptr)) || (_1aac021b7_comptimeStructField(_self_) != nullptr)) || (_1aac0244d_comptimeEnumFields(_self_) != nullptr)) || (_1aac026d4_comptimeEnumField(_self_) != nullptr)) || (_1aac0373a_comptimeStatics(_self_) != nullptr)) || (_1aac039c1_comptimeStatic(_self_) != nullptr)) || (_1aac0296a_comptimeParams(_self_) != nullptr)) || (_1aac02c01_comptimeParam(_self_) != nullptr)) || (_1aac02e87_comptimeRange(_self_) != nullptr)) || (_1aac03c57_comptimeValue(_self_) != nullptr)) || (_1aac04274_comptimeFiles(_self_) != nullptr)) || (_1aac03edd_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1aaacedec_comptimeStructFields> _1aac01e31_comptimeStructFields(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1a8c53050:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaacedec_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1a8c532e7:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c53292:;
	};
}



inline jule::Ptr<_1aaacd24c_comptimeStructField> _1aac021b7_comptimeStructField(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1a8c537ae:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaacd24c_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1a8c53b99:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c53b44:;
	};
}



inline jule::Ptr<_1aaad5ac3_comptimeEnumFields> _1aac0244d_comptimeEnumFields(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1a8c54491:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaad5ac3_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1a8c5489d:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c54848:;
	};
}



inline jule::Ptr<_1aaad47b4_comptimeEnumField> _1aac026d4_comptimeEnumField(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1a8c54936:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaad47b4_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1a8c55580:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c5552a:;
	};
}



inline jule::Ptr<_1aaad94bc_comptimeParams> _1aac0296a_comptimeParams(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1a8c55d77:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaad94bc_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1a8c56284:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c5622e:;
	};
}



inline jule::Ptr<_1aaad7256_comptimeParam> _1aac02c01_comptimeParam(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1a8c56a6a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaad7256_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1a8c56e66:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c56e11:;
	};
}



inline jule::Ptr<_1aaacc6e1_comptimeRange> _1aac02e87_comptimeRange(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1a8c5775d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaacc6e1_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1a8c57b6a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c57b15:;
	};
}



inline jule::Ptr<_1aaadaab7_comptimeTypeInfos> _1aac0321d_comptimeTypeInfos(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1a8c58462:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaadaab7_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1a8c5886e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c58819:;
	};
}



inline jule::Ptr<_1aaadc1b2_comptimeTypeInfo> _1aac034a4_comptimeTypeInfo(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1a8c58907:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaadc1b2_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1a8c59551:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c594eb:;
	};
}



inline jule::Ptr<_1aaad31b9_comptimeStatics> _1aac0373a_comptimeStatics(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1a8c59d48:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaad31b9_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1a8c5a255:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c5a200:;
	};
}



inline jule::Ptr<_1aaad1508_comptimeStatic> _1aac039c1_comptimeStatic(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1a8c5a2dd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaad1508_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1a8c5ae37:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c5add2:;
	};
}



inline jule::Ptr<_1aaae32b7_comptimeValue> _1aac03c57_comptimeValue(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1a8c5b72e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaae32b7_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1a8c5bb3b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c5bad6:;
	};
}



inline jule::Ptr<_1aaae7211_comptimeFile> _1aac03edd_comptimeFile(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1a8c5c433:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaae7211_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1a8c5c840:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c5c7da:;
	};
}



inline jule::Ptr<_1aaae5b16_comptimeFiles> _1aac04274_comptimeFiles(_1aabec1e5_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1a8c5d137:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1aaae5b16_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1a8c5d544:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c5d4de:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aabec1e5_TypeKind _Src) {
	_Stream << _1aabec5ad_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1aac049d3_checked(_1aac0465e_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac0465e_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aac053a7_Str(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1aac056e8_Equal(jule::Ptr<_1aac05066_Prim> _self_, jule::Ptr<_1aabec1e5_TypeKind> _53821_other) {
	jule::Ptr<_1aac05066_Prim> _53913_prim = _1aabeeadd_Prim(_53821_other.ptr());;
	if ((_53913_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _53913_prim.get()._field_Kind);;
}



inline jule::Bool _1aac05b8d_IsConstraint(_1aac05066_Prim* _self_) {
	return ((((!(_1aac084ed_IsStr(_self_))) && (!(_1aac08784_IsAny(_self_)))) && (!(_1aac08267_IsBool(_self_)))) && (!(_1c4cbc8c8_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1aac05e24_IsI8(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1aac061aa_IsI16(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1aac06441_IsI32(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1aac066c7_IsI64(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1aac0695d_IsU8(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1aac06be4_IsU16(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1aac06e7a_IsU32(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1aac07211_IsU64(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1aac07497_IsF32(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1aac0772d_IsF64(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1aac079b4_IsInt(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1aac07c4a_IsUint(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1aac07ed1_IsUintptr(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1aac08267_IsBool(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1aac084ed_IsStr(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1aac08784_IsAny(_1aac05066_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac05066_Prim _Src) {
	_Stream << _1aac053a7_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aac08e16_Str(_1aac08a92_Sptr* _self_) {
	return (jule::Str("&", 1) + _1aabec5ad_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1aac09257_Equal(jule::Ptr<_1aac08a92_Sptr> _self_, jule::Ptr<_1aabec1e5_TypeKind> _61521_other) {
	jule::Ptr<_1aac08a92_Sptr> _61613_sptr = _1aabeed74_Sptr(_61521_other.ptr());;
	if ((_61613_sptr == nullptr)) {
		return false;;
	};
	return _1aabec8ee_Equal(_self_.get()._field_Elem, _61613_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac08a92_Sptr _Src) {
	_Stream << _1aac08e16_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aac099e9_Str(_1aac09565_Slc* _self_) {
	return (jule::Str("[]", 2) + _1aabec5ad_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1aac09d3a_Equal(jule::Ptr<_1aac09565_Slc> _self_, jule::Ptr<_1aabec1e5_TypeKind> _63421_other) {
	jule::Ptr<_1aac09565_Slc> _63513_slc = _1aac00b44_Slc(_63421_other.ptr());;
	if ((_63513_slc == nullptr)) {
		return false;;
	};
	return _1aabec8ee_Equal(_self_.get()._field_Elem, _63513_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac09565_Slc _Src) {
	_Stream << _1aac099e9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aac0a4cd_Str(_1aac0a159_Tuple* _self_) {
	_1c38d3b83_StrBuilder _65117_s = static__1c38d3ea2_New(16LL);;
	_1c38dcc03_WriteByte(&_65117_s, '(');
	_1c38dc94a_WriteStr(&_65117_s, _1aabec5ad_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a8c6cc18:;
		if (it != expr_end) {
			jule::Ptr<_1aabec1e5_TypeKind> *_65416_t = it;
			{
				_1c38dcc03_WriteByte(&_65117_s, ',');
				_1c38dc94a_WriteStr(&_65117_s, _1aabec5ad_Str((*(_65416_t)).ptr()));
			}
			_iter_next_1a8c6cc18:;
			++it;
			goto _iter_begin_1a8c6cc18;
		}
		_iter_end_1a8c6cc18:;
	};
	_1c38dcc03_WriteByte(&_65117_s, ')');
	return _1c38dd242_Str(&_65117_s);;
}



inline jule::Bool _1aac0a81e_Equal(jule::Ptr<_1aac0a159_Tuple> _self_, jule::Ptr<_1aabec1e5_TypeKind> _66321_other) {
	jule::Ptr<_1aac0a159_Tuple> _66413_tup = _1aac01914_Tup(_66321_other.ptr());;
	if ((_66413_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _66413_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I32 _67117_i = 0LL;;
	for (; (_67117_i < _self_.get()._field_Types.len()); (_67117_i)++) {
		{
			if ((!(_1aabec8ee_Equal(_self_.get()._field_Types[_67117_i], _66413_tup.get()._field_Types[_67117_i])))) {
				return false;;
			};
		}
	_iter_next_1a8c707a9:;
	}
	_iter_end_1a8c707a9:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac0a159_Tuple _Src) {
	_Stream << _1aac0a4cd_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aac0b07d_Str(_1aac0ac09_Map* _self_) {
	_1c38d3b83_StrBuilder _69117_s = static__1c38d3ea2_New(16LL);;
	_1c38dc94a_WriteStr(&_69117_s, jule::Str("map[", 4));
	_1c38dc94a_WriteStr(&_69117_s, _1aabec5ad_Str((*(_self_))._field_Key.ptr()));
	_1c38dcc03_WriteByte(&_69117_s, ']');
	_1c38dc94a_WriteStr(&_69117_s, _1aabec5ad_Str((*(_self_))._field_Val.ptr()));
	return _1c38dd242_Str(&_69117_s);;
}



inline jule::Bool _1aac0b3be_Equal(jule::Ptr<_1aac0ac09_Map> _self_, jule::Ptr<_1aabec1e5_TypeKind> _70021_other) {
	jule::Ptr<_1aac0ac09_Map> _70113_m = _1aac0167d_Map(_70021_other.ptr());;
	if ((_70113_m == nullptr)) {
		return false;;
	};
	return (_1aabec8ee_Equal(_self_.get()._field_Key, _70113_m.get()._field_Key) && _1aabec8ee_Equal(_self_.get()._field_Val, _70113_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac0ac09_Map _Src) {
	_Stream << _1aac0b07d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aac0bc0a_Str(_1aac0b886_Arr* _self_) {
	_1c38d3b83_StrBuilder _71917_s = static__1c38d3ea2_New(16LL);;
	_1c38dcc03_WriteByte(&_71917_s, '[');
	_1c38dc94a_WriteStr(&_71917_s, _1c4cacb3d_Itoa((*(_self_))._field_N));
	_1c38dcc03_WriteByte(&_71917_s, ']');
	_1c38dc94a_WriteStr(&_71917_s, _1aabec5ad_Str((*(_self_))._field_Elem.ptr()));
	return _1c38dd242_Str(&_71917_s);;
}



inline jule::Bool _1aac0c04b_Equal(jule::Ptr<_1aac0b886_Arr> _self_, jule::Ptr<_1aabec1e5_TypeKind> _72821_other) {
	jule::Ptr<_1aac0b886_Arr> _72913_arr = _1aac008ad_Arr(_72821_other.ptr());;
	if ((_72913_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _72913_arr.get()._field_N) && _1aabec8ee_Equal(_self_.get()._field_Elem, _72913_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac0b886_Arr _Src) {
	_Stream << _1aac0bc0a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1aac0c6cd_Str(_1aac0c359_Ptr* _self_) {
	if (_1aac0cd93_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1aabec5ad_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1aac0ca1e_Equal(jule::Ptr<_1aac0c359_Ptr> _self_, jule::Ptr<_1aabec1e5_TypeKind> _75221_other) {
	jule::Ptr<_1aac0c359_Ptr> _75313_ptr = _1aac0010a_Ptr(_75221_other.ptr());;
	if ((_75313_ptr == nullptr)) {
		return false;;
	};
	return _1aabec8ee_Equal(_self_.get()._field_Elem, _75313_ptr.get()._field_Elem);;
}



inline jule::Bool _1aac0cd93_IsUnsafe(_1aac0c359_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac0c359_Ptr _Src) {
	_Stream << _1aac0c6cd_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac0d35a_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1aac0ea87_pushErr(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1c3e3a5e6_Token> _83826_token, jule::Str _83841_fmt, jule::Slice<jule::Any> _83854_args) {
	_1aab488c2_pushErr((*(_self_))._field_s.ptr(), _83826_token, _83841_fmt, _83854_args);
}



inline void _1aac0ec85_allowBuiltin(_1aac0e34a_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1aac0ee83_disallowBuiltin(_1aac0e34a_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1a8c7d201_pushReference(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa9a390_StructIns>* _85040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a8a37b6a_Exist((*(_self_))._field_refers.ptr(), (*(_85040_t)))) {
		return;;
	};
	_1aaaba03b_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85040_t)), &__jule_any_type9));
}

inline void _1a8c80c5e_pushReference(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaac6443_Trait>* _85040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1a8c82887_Exist((*(_self_))._field_refers.ptr(), (*(_85040_t)))) {
		return;;
	};
	_1aaaba03b_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85040_t)), &__jule_any_type10));
}



inline void _1aac104e4_pushReferenceByKind(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _86043_k) {
	{
		
		if ((_1aac01161_Struct((*(_86043_k)).ptr()) != nullptr)) {
			_case_begin_1a8c7bee1:;
			{
				jule::Ptr<_1aaa9a390_StructIns> _86321_t = _1aac01161_Struct((*(_86043_k)).ptr());;
				_1a8c7d201_pushReference(_self_, &(_86321_t));
			}
		}
		else if ((_1aac013e7_Trait((*(_86043_k)).ptr()) != nullptr)) {
			_case_begin_1a8c7c068:;
			{
				jule::Ptr<_1aaac6443_Trait> _86621_t = _1aac013e7_Trait((*(_86043_k)).ptr());;
				_1a8c80c5e_pushReference(_self_, &(_86621_t));
			}
		}
		_match_end_1a8c7bdd1:;
	};
}



inline void _1aac10912_pushCycleError(_1aac0e34a_typeChecker* _self_, jule::Any _87129_def1, jule::Any _87140_def2, _1c38d3b83_StrBuilder* _87156_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _87313_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _87328_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_87328_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1a8c853c3:;
				{
					return (*(_87328_def)).cast_ptr<_1aabeb403_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1a8c85978:;
				{
					return (*(_87328_def)).cast_ptr<_1aaa972b0_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1a8c8556b:;
				{
					return jule::Str();;
				}
			}
			_match_end_1a8c85516:;
		};
	});;
	jule::Slice<jule::U8> _88313_buf = _1c38ddbe3_Buf(_87156_message);;
	jule::Str _88413_def1Ident = _87313_getIdent(&(_87129_def1));;
	jule::Str _88513_def2Ident = _87313_getIdent(&(_87140_def2));;
	jule::Str _88613_refersTo = _1c39840a7_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_88413_def1Ident, &__jule_any_type5),jule::Any(_88513_def2Ident, &__jule_any_type5)}));;
	_1c38dc94a_WriteStr(_87156_message, _1c38bd497_Repeat(jule::Str(" ", 1), 7LL));
	_1c38dc94a_WriteStr(_87156_message, _88613_refersTo);
	_1c38dcc03_WriteByte(_87156_message, '\n');
	_1c38dc692_Write(_87156_message, _88313_buf);
}



inline jule::Bool _1aac10d0d_checkCrossCycle(_1aac0e34a_typeChecker* _self_, jule::Any _89330_decl, _1c38d3b83_StrBuilder* _89346_message) {
	{
		auto &_match_expr{ _89330_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a8c88915:;
			{
				jule::Ptr<_1aabeb403_TypeAlias> _89617_ta = _89330_decl.cast_ptr<_1aabeb403_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_89617_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8c89608:;
					if (it != expr_end) {
						jule::Any *_89720_d = it;
						{
							{
								
								if (((*(_89720_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_1a8c8a043:;
									{
										_1aac10912_pushCycleError(_self_, jule::Any(_89617_ta, &__jule_any_type67), (*(_89720_d)), _89346_message);
										return false;;
									}
								}
								else if ((!(_1aac10d0d_checkCrossCycle(_self_, (*(_89720_d)), _89346_message)))) {
									_case_begin_1a8c8a0ba:;
									{
										_1aac10912_pushCycleError(_self_, jule::Any(_89617_ta, &__jule_any_type67), (*(_89720_d)), _89346_message);
										return false;;
									}
								}
								_match_end_1a8c89e33:;
							};
						}
						_iter_next_1a8c89608:;
						++it;
						goto _iter_begin_1a8c89608;
					}
					_iter_end_1a8c89608:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a8c8897b:;
			{
				jule::Ptr<_1aaa972b0_Struct> _90817_s = _89330_decl.cast_ptr<_1aaa972b0_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_90817_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8c89c35:;
					if (it != expr_end) {
						jule::Ptr<_1aaa972b0_Struct> *_90920_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_90920_d))))) {
									_case_begin_1a8c8c078:;
									{
										_1aac10912_pushCycleError(_self_, jule::Any(_90817_s, &__jule_any_type66), jule::Any((*(_90920_d)), &__jule_any_type66), _89346_message);
										return false;;
									}
								}
								else if ((!(_1aac10d0d_checkCrossCycle(_self_, jule::Any((*(_90920_d)), &__jule_any_type66), _89346_message)))) {
									_case_begin_1a8c8c100:;
									{
										_1aac10912_pushCycleError(_self_, jule::Any(_90817_s, &__jule_any_type66), jule::Any((*(_90920_d)), &__jule_any_type66), _89346_message);
										return false;;
									}
								}
								_match_end_1a8c8be68:;
							};
						}
						_iter_next_1a8c89c35:;
						++it;
						goto _iter_begin_1a8c89c35;
					}
					_iter_end_1a8c89c35:;
				};
			}
		}
		_match_end_1a8c888b0:;
	};
	return true;;
}



inline jule::Bool _1aac11209_checkIllegalCycles(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa76beb_IdentTypeDecl>* _92738_ident, jule::Any _92765_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92765_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a8c8de48:;
			{
				if (_92765_decl.cast_ptr<_1aaa972b0_Struct>(&__jule_any_type66).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a8c8deae:;
			{
				if (_92765_decl.cast_ptr<_1aabeb403_TypeAlias>(&__jule_any_type67).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a8c8dde3:;
	};
	if ((_92765_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_1aac0ea87_pushErr(_self_, (*(_92738_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1c38d3b83_StrBuilder _95017_message = static__1c38d3ea2_New(32LL);;
	if ((!(_1aac10d0d_checkCrossCycle(_self_, _92765_decl, &(_95017_message))))) {
		jule::Str _95321_errMsg = _1c38dd242_Str(&_95017_message);;
		_1c38dd440_Clear(&_95017_message);
		_1aac10912_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _92765_decl, &(_95017_message));
		_95321_errMsg+=_1c38dd242_Str(&_95017_message);
		_1aac0ea87_pushErr(_self_, (*(_92738_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_95321_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1a8c92c93:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*(_self_))._field_referencer.get()._field_refs; __jule_push_dest->push(_92765_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a8c92d09:;
			{
				{
					auto &_match_expr{ _92765_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1a8c93678:;
						{
							jule::Ptr<_1aaa972b0_Struct> _96925_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1aaa972b0_Struct>(&__jule_any_type66);;
							{ jule::Slice<jule::Ptr<_1aaa972b0_Struct>> &__jule_push_dest = _96925_s.get()._field_Depends; __jule_push_dest.push(_92765_decl.cast_ptr<_1aaa972b0_Struct>(&__jule_any_type66)); };
						}
					}
					_match_end_1a8c9317d:;
				};
			}
		}
		_match_end_1a8c92c3d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1aabebc3e_Kind> _1aac11605_fromTypeAlias(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa76beb_IdentTypeDecl>* _97733_decl, jule::Ptr<_1aabeb403_TypeAlias>* _97760_ta) {
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_97760_ta)).get()._field_Public, (*(_97760_ta)).get()._field_Token)))) {
		_1aac0ea87_pushErr(_self_, (*(_97733_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_97733_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_97760_ta)).get()._field_Used=true;
	if (((*(_97733_decl)).get()._field_Generics.len() > 0LL)) {
		_1aac0ea87_pushErr(_self_, (*(_97733_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_97733_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8c9746d:;
			if (it != expr_end) {
				jule::Ptr<_1aabeb403_TypeAlias> _99420_bg = *it;
				{
					if (((_99420_bg == (*(_97760_ta))) || (((*(_97760_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _1aabec8ee_Equal((*(_97760_ta)).get()._field_Kind.get()._field_Kind, _99420_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1a8c9746d;
					};
				}
				_iter_next_1a8c9746d:;
				++it;
				goto _iter_begin_1a8c9746d;
			}
			_iter_end_1a8c9746d:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a8c98161:;
			if (it != expr_end) {
				jule::Ptr<_1aabeb403_TypeAlias> _100520_bg = *it;
				{
					if ((_100520_bg == (*(_97760_ta)))) {
						_1aac0ea87_pushErr(_self_, (*(_97733_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97733_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_97760_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a8c9a493:;
						if (it != expr_end) {
							jule::Ptr<_1aabeb403_TypeAlias> _101024_dg = *it;
							{
								if ((_100520_bg == _101024_dg)) {
									_1aac0ea87_pushErr(_self_, (*(_97733_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97733_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_1a8c9a493:;
							++it;
							goto _iter_begin_1a8c9a493;
						}
						_iter_end_1a8c9a493:;
					};
				}
				_iter_next_1a8c98161:;
				++it;
				goto _iter_begin_1a8c98161;
			}
			_iter_end_1a8c98161:;
		};
	};
	jule::Bool _101917_ok = _1aac11209_checkIllegalCycles(_self_, _97733_decl, jule::Any((*(_97760_ta)), &__jule_any_type67));;
	if ((!(_101917_ok))) {
		return nullptr;;
	};
	if (((*(_97760_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_101917_ok=_1aab54cda_checkTypeAliasDeclKind((*(_self_))._field_s, _97760_ta, (*(_self_))._field_lookup);
		if ((!(_101917_ok))) {
			return nullptr;;
		};
	};
	if (((*(_97760_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> &__jule_push_dest = (*(_self_))._field_ownerAlias.get()._field_Generics; __jule_push_dest.push((*(_97760_ta))); };
	};
	jule::Ptr<_1aabec1e5_TypeKind> _103817_tk = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Generic=(*(_97760_ta)).get()._field_Generic, ._field_Kind=(*(_97760_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1aac104e4_pushReferenceByKind(_self_, &(_103817_tk));
	if ((*(_97760_ta)).get()._field_Binded) {
		_103817_tk.get()._field_BindIdent=(*(_97760_ta)).get()._field_Ident;
	} else {
		_103817_tk.get()._field_BindIdent=(*(_97760_ta)).get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
	};
	return jule::Trait<_1aabebc3e_Kind>(_103817_tk, 19);;
}



inline jule::Ptr<_1aaac8b3d_Enum> _1aac11a01_fromEnum(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa76beb_IdentTypeDecl>* _105128_decl, jule::Ptr<_1aaac8b3d_Enum>* _105155_e) {
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_105155_e)).get()._field_Public, (*(_105155_e)).get()._field_Token)))) {
		_1aac0ea87_pushErr(_self_, (*(_105128_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_105128_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_105128_decl)).get()._field_Generics.len() > 0LL)) {
		_1aac0ea87_pushErr(_self_, (*(_105128_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_105128_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_105155_e));;
}



inline jule::Ptr<_1aaaca348_TypeEnum> _1aac11dec_fromTypeEnum(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa76beb_IdentTypeDecl>* _106332_decl, jule::Ptr<_1aaaca348_TypeEnum>* _106359_e) {
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_106359_e)).get()._field_Public, (*(_106359_e)).get()._field_Token)))) {
		_1aac0ea87_pushErr(_self_, (*(_106332_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106332_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_106332_decl)).get()._field_Generics.len() > 0LL)) {
		_1aac0ea87_pushErr(_self_, (*(_106332_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_106332_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_106359_e));;
}



inline jule::Ptr<_1aaac6443_Trait> _1aac122e8_fromTrait(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa76beb_IdentTypeDecl>* _107529_decl, jule::Ptr<_1aaac6443_Trait>* _107556_t) {
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_107556_t)).get()._field_Public, (*(_107556_t)).get()._field_Token)))) {
		_1aac0ea87_pushErr(_self_, (*(_107529_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_107529_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_107529_decl)).get()._field_Generics.len() > 0LL)) {
		_1aac0ea87_pushErr(_self_, (*(_107529_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_107529_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_1a8c80c5e_pushReference(_self_, _107556_t);
	return (*(_107556_t));;
}



inline jule::Bool _1aac126e4_checkStructIns(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa9a390_StructIns>* _108838_ins, jule::Ptr<_1c3e3a5e6_Token>* _108860_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_108838_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_108838_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_108838_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1aab61bc6_precheckStructIns((*(_self_))._field_s, _108838_ins, (*(_108860_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_108838_ins)).get()._field_Generics.len() > 0LL)) {
		_1aab626dd_checkStructInsOperators((*(_self_))._field_s, (*(_108838_ins)));
		_1aab61e7e_checkStructIns((*(_self_))._field_s, _108838_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1aac1299c_appendUsedStructReference(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa972b0_Struct>* _110949_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1a8ca99ad:;
			{
				jule::Ptr<_1aaa972b0_Struct> _111521_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1aaa972b0_Struct>(&__jule_any_type66);;
				if ((!(_1aaa99092_IsUses(_111521_refS.ptr(), (*(_110949_s)))))) {
					{ jule::Slice<jule::Ptr<_1aaa972b0_Struct>> &__jule_push_dest = _111521_refS.get()._field_Uses; __jule_push_dest.push((*(_110949_s))); };
				};
			}
		}
		_match_end_1a8ca9958:;
	};
}



inline jule::Ptr<_1aaa9a390_StructIns> _1aac12d98_buildStructInstance(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa76beb_IdentTypeDecl>* _112243_decl, jule::Ptr<_1aaa972b0_Struct>* _112270_s) {
	jule::Ptr<_1aac0d35a_referencer> _112417_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> _112617_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1a8cac50a:;
				{
					jule::Ptr<_1aab0aae8_scopeChecker> _113325_sc = (*(_self_))._field_lookup.cast_ptr<_1aab0aae8_scopeChecker>(0);;
					jule::Ptr<_1aab0aae8_scopeChecker> _113425_hard = _1aab0de70_getHardRoot(_113325_sc);;
					if (((_113425_hard.get()._field_owner.get()._field_Owner == nullptr) || (_113425_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_112270_s))))) {
						goto _match_end_1a8cac4a5;
					};
					jule::I32 _113821_n = (_113425_hard.get()._field_owner.get()._field_Generics.len() + _113425_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_113425_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _113821_n);
				}
			}
			_match_end_1a8cac4a5:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1aac21d30_Lookup> _114817_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1aaa9a390_StructIns> _115217_ins = _1aaa97733_instance((*(_112270_s)));;
	_115217_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1aabea80e_InsGeneric>>::alloc(0LL, (*(_112243_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_112243_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cb1278:;
		if (it != expr_end) {
			jule::Ptr<_1aaa765e1_TypeDecl> _115421_g = *it;
			{
				jule::Ptr<_1aabec1e5_TypeKind> _115521_kind = _1aac166a4_build(_self_, &(_115421_g.get()._field_Kind));;
				if ((_115521_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1aabea80e_InsGeneric>> &__jule_push_dest = _115217_ins.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_1aabea80e_InsGeneric>(_1aabea80e_InsGeneric{._field_Kind=_115521_kind, })); };
			}
			_iter_next_1a8cb1278:;
			++it;
			goto _iter_begin_1a8cb1278;
		}
		_iter_end_1a8cb1278:;
	};
	(*(_self_))._field_lookup=_114817_lookup;
	(*(_self_))._field_bannedGenerics=_112617_bannedGenerics;
	(*(_self_))._field_referencer=_112417_referencer;
	return _115217_ins;;
}



inline jule::Ptr<_1aaa9a390_StructIns> _1aac13294_fromStruct(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa76beb_IdentTypeDecl>* _117034_decl, jule::Ptr<_1aaa972b0_Struct>* _117061_s) {
	if ((!(_1aab49131_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_117061_s)).get()._field_Public, (*(_117061_s)).get()._field_Token)))) {
		_1aac0ea87_pushErr(_self_, (*(_117034_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_117034_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_117034_decl)).get()._field_Generics.len() > 0LL)) {
			_1aac0ea87_pushErr(_self_, (*(_117034_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1aaa9a390_StructIns>(_1aaa9a390_StructIns{._field_Decl=(*(_117061_s)), });;
	};
	jule::Bool _118817_ok = _1aac11209_checkIllegalCycles(_self_, _117034_decl, jule::Any((*(_117061_s)), &__jule_any_type66));;
	if ((!(_118817_ok))) {
		return nullptr;;
	};
	_1aac1299c_appendUsedStructReference(_self_, _117061_s);
	jule::Ptr<_1aaa9a390_StructIns> _119417_ins = _1aac12d98_buildStructInstance(_self_, _117034_decl, _117061_s);;
	if ((_119417_ins == nullptr)) {
		return nullptr;;
	};
	_118817_ok=_1aab49e01_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I32>(_119417_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_119417_ins.get()._field_Generics.len()), (*(_117034_decl)).get()._field_Token);
	if ((!(_118817_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1aaa9a390_StructIns> _120417_existInstance = _1aaa97a41_appendInstance((*(_117061_s)).ptr(), &(_119417_ins));;
	if ((_120417_existInstance != nullptr)) {
		if ((!(_1aab52ed6_checkConstraintsStruct((*(_self_))._field_s, &(_119417_ins), &((*(_117034_decl)).get()._field_Token), _120417_existInstance)))) {
			return nullptr;;
		};
		_1a8c7d201_pushReference(_self_, &(_120417_existInstance));
		return _120417_existInstance;;
	};
	if ((!(_1aac126e4_checkStructIns(_self_, &(_119417_ins), &((*(_117034_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_1a8c7d201_pushReference(_self_, &(_119417_ins));
	return _119417_ins;;
}



inline jule::Trait<_1aabebc3e_Kind> _1aac135d5_getDef(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa76beb_IdentTypeDecl>* _122830_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cba3b4:;
		if (it != expr_end) {
			jule::Ptr<_1aaa838c8_GenericDecl> _122916_g = *it;
			{
				if ((_122916_g.get()._field_Ident == (*(_122830_decl)).get()._field_Ident)) {
					return jule::Trait<_1aabebc3e_Kind>(_1aac1e217_buildPrimType(_122916_g.get()._field_Ident), 20);;
				};
			}
			_iter_next_1a8cba3b4:;
			++it;
			goto _iter_begin_1a8cba3b4;
		}
		_iter_end_1a8cba3b4:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cbad65:;
		if (it != expr_end) {
			jule::Ptr<_1aabeb403_TypeAlias> _123521_g = *it;
			{
				if ((_123521_g.get()._field_Ident == (*(_122830_decl)).get()._field_Ident)) {
					if (((*(_122830_decl)).get()._field_Generics.len() > 0LL)) {
						_1aac0ea87_pushErr(_self_, (*(_122830_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_122830_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_1aaa9a390_StructIns> _124125_st = _1aac01161_Struct(_123521_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_124125_st != nullptr)) {
						jule::Bool _124325_ok = _1aac11209_checkIllegalCycles(_self_, _122830_decl, jule::Any(_124125_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_124325_ok))) {
							return nullptr;;
						};
					};
					return _123521_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1a8cbad65:;
			++it;
			goto _iter_begin_1a8cbad65;
		}
		_iter_end_1a8cbad65:;
	};
	if ((!((*(_122830_decl)).get()._field_Binded))) {
		jule::Ptr<_1aaac8b3d_Enum> _125321_e = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac2188a_FindEnum((*(_self_))._field_lookup, (*(_122830_decl)).get()._field_Ident);;
		if ((_125321_e != nullptr)) {
			return jule::Trait<_1aabebc3e_Kind>(_1aac11a01_fromEnum(_self_, _122830_decl, &(_125321_e)), 3);;
		};
		jule::Ptr<_1aaaca348_TypeEnum> _125821_te = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac21bcb_FindTypeEnum((*(_self_))._field_lookup, (*(_122830_decl)).get()._field_Ident);;
		if ((_125821_te != nullptr)) {
			return jule::Trait<_1aabebc3e_Kind>(_1aac11dec_fromTypeEnum(_self_, _122830_decl, &(_125821_te)), 4);;
		};
		jule::Ptr<_1aaac6443_Trait> _126321_t = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac21549_FindTrait((*(_self_))._field_lookup, (*(_122830_decl)).get()._field_Ident);;
		if ((_126321_t != nullptr)) {
			return jule::Trait<_1aabebc3e_Kind>(_1aac122e8_fromTrait(_self_, _122830_decl, &(_126321_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1aac0ea87_pushErr(_self_, (*(_122830_decl)).get()._field_Token, jule::Str("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aaa972b0_Struct> _127217_s = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac20d0c_FindStruct((*(_self_))._field_lookup, (*(_122830_decl)).get()._field_Ident, (*(_122830_decl)).get()._field_Binded);;
	if ((_127217_s != nullptr)) {
		return jule::Trait<_1aabebc3e_Kind>(_1aac13294_fromStruct(_self_, _122830_decl, &(_127217_s)), 0);;
	};
	jule::Ptr<_1aabeb403_TypeAlias> _127717_ta = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac20911_FindTypeAlias((*(_self_))._field_lookup, (*(_122830_decl)).get()._field_Ident, (*(_122830_decl)).get()._field_Binded);;
	if (((_127717_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_127717_ta=_1aacdb89a_findBuiltinTypeAlias((*(_122830_decl)).get()._field_Ident);
	};
	if ((_127717_ta != nullptr)) {
		return _1aac11605_fromTypeAlias(_self_, _122830_decl, &(_127717_ta));;
	};
	_1aac0ea87_pushErr(_self_, (*(_122830_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_122830_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_1aabebc3e_Kind> _1aac13926_buildIdent(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa76beb_IdentTypeDecl> _128933_decl) {
	return _1aac135d5_getDef(_self_, &(_128933_decl));;
}



inline jule::Trait<_1aabebc3e_Kind> _1aac13c67_buildSubIdent(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa76ee8_SubIdentTypeDecl> _129336_decl) {
	jule::Trait<_1aabebc3e_Kind> _129417_ident = _1aac13926_buildIdent(_self_, _129336_decl.get()._field_Idents[0LL]);;
	if ((_129417_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _129417_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1a8cc6c1c:;
			{
				goto _match_end_1a8cc6689;
			}
		}
		else {
			_case_begin_1a8cc66de:;
			{
				_1aac0ea87_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8cc6689:;
	};
	jule::Ptr<_1aaaca348_TypeEnum> _130517_t = _129417_ident.cast_ptr<_1aaaca348_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1aaa76beb_IdentTypeDecl>> _130617_idents = _129336_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_130617_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8cc7bc9:;
		if (it != expr_end) {
			jule::I32 _130713_i = it - expr->begin();
			jule::Ptr<_1aaa76beb_IdentTypeDecl> _130716_id = *it;
			{
				jule::Ptr<_1aaac9c71_TypeEnumItem> _130821_item = _1aaacae09_FindItem(_130517_t.ptr(), _130716_id.get()._field_Ident);;
				if ((_130821_item == nullptr)) {
					_1aac0ea87_pushErr(_self_, _130716_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_130517_t.get()._field_Ident, &__jule_any_type5),jule::Any(_130716_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_130617_idents.len() - _130713_i) == 1LL)) {
					_1aac104e4_pushReferenceByKind(_self_, &(_130821_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_1aabebc3e_Kind>(_130821_item.get()._field_Kind.get()._field_Kind, 19);;
				};
				_130517_t=_1aac00627_TypeEnum(_130821_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_130517_t == nullptr)) {
					_1aac0ea87_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1a8cc7bc9:;
			++it;
			_130713_i++;
			goto _iter_begin_1a8cc7bc9;
		}
		_iter_end_1a8cc7bc9:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aac08a92_Sptr> _1aac140a8_buildSptrFromType(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _132741_elem) {
	{
		
		if (((*(_132741_elem)) == nullptr)) {
			_case_begin_1a8ccb590:;
			{
				return nullptr;;
			}
		}
		else if ((_1aac01161_Struct((*(_132741_elem)).ptr()) != nullptr)) {
			_case_begin_1a8ccb617:;
			{
				jule::Ptr<_1aaa9a390_StructIns> _133317_s = _1aac01161_Struct((*(_132741_elem)).ptr());;
				if (((_133317_s.get()._field_Decl != nullptr) && _133317_s.get()._field_Decl.get()._field_Binded)) {
					_1aac0ea87_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1aac008ad_Arr((*(_132741_elem)).ptr()) != nullptr) && _1aac008ad_Arr((*(_132741_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1a8ccb68e:;
			{
				_1aac0ea87_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8ccaced:;
	};
	return jule::new_ptr<_1aac08a92_Sptr>(_1aac08a92_Sptr{._field_Elem=(*(_132741_elem))});;
}



inline jule::Ptr<_1aac08a92_Sptr> _1aac143e9_buildSptr(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa7768b_SptrTypeDecl> _134732_decl) {
	jule::Bool _134813_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_134813_cycleRisk;
	});;
	jule::Ptr<_1aabec1e5_TypeKind> _135217_elem = _1aac169e5_checkDecl(_self_, &(_134732_decl.get()._field_Elem));;
	return _1aac140a8_buildSptrFromType(_self_, &(_135217_elem));;
}



inline jule::Ptr<_1aac0c359_Ptr> _1aac1473a_buildPtrFromType(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _135640_elem) {
	{
		
		if (((*(_135640_elem)) == nullptr)) {
			_case_begin_1a8cd0c8c:;
			{
				return nullptr;;
			}
		}
		else if (((_1aac008ad_Arr((*(_135640_elem)).ptr()) != nullptr) && _1aac008ad_Arr((*(_135640_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1a8cd0d14:;
			{
				_1aac0ea87_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1aac0c359_Ptr>();;
			}
		}
		_match_end_1a8cd0b7c:;
	};
	return jule::new_ptr<_1aac0c359_Ptr>(_1aac0c359_Ptr{._field_Elem=(*(_135640_elem))});;
}



inline jule::Ptr<_1aac0c359_Ptr> _1aac14a7b_buildPtr(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa7811a_PtrTypeDecl> _137131_decl) {
	jule::Bool _137213_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_137213_cycleRisk;
	});;
	jule::Ptr<_1aabec1e5_TypeKind> _137617_elem = nullptr;;
	if ((!(_1aaa7847d_IsUnsafe(_137131_decl.ptr())))) {
		_137617_elem=_1aac169e5_checkDecl(_self_, &(_137131_decl.get()._field_Elem));
		return _1aac1473a_buildPtrFromType(_self_, &(_137617_elem));;
	};
	return jule::new_ptr<_1aac0c359_Ptr>(_1aac0c359_Ptr{._field_Elem=_137617_elem});;
}



inline jule::Ptr<_1aac09565_Slc> _1aac14dbc_buildSlc(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa77a21_SlcTypeDecl> _138831_decl) {
	jule::Bool _138913_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_138913_cycleRisk;
	});;
	jule::Ptr<_1aabec1e5_TypeKind> _139317_elem = _1aac169e5_checkDecl(_self_, &(_138831_decl.get()._field_Elem));;
	{
		
		if ((_139317_elem == nullptr)) {
			_case_begin_1a8cd5797:;
			{
				return nullptr;;
			}
		}
		else if (((_1aac008ad_Arr(_139317_elem.ptr()) != nullptr) && _1aac008ad_Arr(_139317_elem.ptr()).get()._field_Auto)) {
			_case_begin_1a8cd581e:;
			{
				_1aac0ea87_pushErr(_self_, _138831_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8cd5742:;
	};
	return jule::new_ptr<_1aac09565_Slc>(_1aac09565_Slc{._field_Elem=_139317_elem});;
}



inline jule::Ptr<_1aac0b886_Arr> _1aac1520d_buildArr(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa788ac_ArrTypeDecl> _140931_decl) {
	jule::I32 _141017_n = 0LL;;
	if ((!(_1aaa78c20_AutoSized(_140931_decl.ptr())))) {
		jule::Ptr<_1aabbbe1d_Data> _141321_size = _1aabdbed7_evalExpr(_1aab50d6e_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _140931_decl.get()._field_Size);;
		if ((_141321_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1aabbc7e2_IsConst(_141321_size.ptr())))) {
			_1aac0ea87_pushErr(_self_, _140931_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1aabeeadd_Prim(_141321_size.get()._field_Kind.ptr()) == nullptr) || (!(_1c4cbc2bd_IsInt(_1aabeeadd_Prim(_141321_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1aac0ea87_pushErr(_self_, _140931_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_141017_n=static_cast<jule::I32>(static_cast<jule::I32>(_1c4cc0546_AsI64(_141321_size.get()._field_Constant.ptr())));
		if ((_141017_n < 0LL)) {
			_1aac0ea87_pushErr(_self_, _140931_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _143121_max = _1c4cb61da_MaxI(jule::Str("int", 3));;
			if (((_1c4cadde7_BitSize != 64LL) && (static_cast<jule::I64>(_141017_n) > _143121_max))) {
				_1aac0ea87_pushErr(_self_, _140931_decl.get()._field_Size.get()._field_Token, jule::Str("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1aabe928b_constoa(&(_141321_size.get()._field_Constant)), &__jule_any_type5),jule::Any(_1c4cac874_FmtInt(_143121_max, 10LL), &__jule_any_type5)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1aabec1e5_TypeKind> _144017_elem = _1aac169e5_checkDecl(_self_, &(_140931_decl.get()._field_Elem));;
	{
		
		if ((_144017_elem == nullptr)) {
			_case_begin_1a8cdd409:;
			{
				return nullptr;;
			}
		}
		else if (((_1aac008ad_Arr(_144017_elem.ptr()) != nullptr) && _1aac008ad_Arr(_144017_elem.ptr()).get()._field_Auto)) {
			_case_begin_1a8cdd470:;
			{
				_1aac0ea87_pushErr(_self_, _140931_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8cdd11d:;
	};
	return jule::new_ptr<_1aac0b886_Arr>(_1aac0b886_Arr{._field_Auto=_1aaa78c20_AutoSized(_140931_decl.ptr()), ._field_N=_141017_n, ._field_Elem=_144017_elem});;
}



inline jule::Ptr<_1aac0ac09_Map> _1aac1554e_buildMap(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa7910a_MapTypeDecl> _145831_decl) {
	jule::Bool _145913_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_145913_cycleRisk;
	});;
	jule::Ptr<_1aabec1e5_TypeKind> _146317_key = _1aac169e5_checkDecl(_self_, &(_145831_decl.get()._field_Key));;
	if ((_146317_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aabec1e5_TypeKind> _146817_val = _1aac169e5_checkDecl(_self_, &(_145831_decl.get()._field_Val));;
	if ((_146817_val == nullptr)) {
		return nullptr;;
	};
	if ((_1aac00391_Enum(_146817_val.ptr()) != nullptr)) {
		_1aac0ea87_pushErr(_self_, _145831_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1aac0ac09_Map>(_1aac0ac09_Map{._field_Key=_146317_key, ._field_Val=_146817_val});;
}



inline jule::Ptr<_1aac0a159_Tuple> _1aac15890_buildTuple(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa77d1d_TupleTypeDecl> _148233_decl) {
	jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> _148317_types = jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>>::alloc(0LL, _148233_decl.get()._field_Types.len());;
	{
		auto expr = &(_148233_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ce393c:;
		if (it != expr_end) {
			jule::Ptr<_1aaa765e1_TypeDecl> _148421_t = *it;
			{
				jule::Ptr<_1aabec1e5_TypeKind> _148521_kind = _1aac169e5_checkDecl(_self_, &(_148421_t));;
				if ((_148521_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> &__jule_push_dest = _148317_types; __jule_push_dest.push(_148521_kind); };
			}
			_iter_next_1a8ce393c:;
			++it;
			goto _iter_begin_1a8ce393c;
		}
		_iter_end_1a8ce393c:;
	};
	return jule::new_ptr<_1aac0a159_Tuple>(_1aac0a159_Tuple{._field_Types=_148317_types});;
}



inline jule::Bool _1aac15bd1_checkFuncTypes(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaab609d_FnIns>* _149538_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_149538_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ce4d7d:;
		if (it != expr_end) {
			jule::Ptr<_1aaab5102_ParamIns> _149621_p = *it;
			{
				_149621_p.get()._field_Kind=_1aac166a4_build(_self_, &(_149621_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_149621_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1aab5368a_checkFnParamKind((*(_self_))._field_s, &(_149621_p));
			}
			_iter_next_1a8ce4d7d:;
			++it;
			goto _iter_begin_1a8ce4d7d;
		}
		_iter_end_1a8ce4d7d:;
	};
	if ((!(_1aaab361c_IsVoid((*(_149538_f)).get()._field_Decl.ptr())))) {
		(*(_149538_f)).get()._field_Result=_1aac166a4_build(_self_, &((*(_149538_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_149538_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1aaab609d_FnIns> _1aac16022_buildFunc(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa8837d_FnDecl> _151332_decl) {
	jule::Bool _151413_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_151413_cycleRisk;
	});;
	if ((_151332_decl.get()._field_Generics.len() > 0LL)) {
		_1aac0ea87_pushErr(_self_, _151332_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aaab3199_Fn> _152317_f = _1aaabc769_buildFunc(_151332_decl);;
	jule::I32 _152513_n = (*(_self_))._field_s.get()._field_errors.len();;
	_1aab5c980_checkAnonFuncDecl((*(_self_))._field_s, &(_152317_f));
	if ((_152513_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1aaab609d_FnIns> _153117_ins = _1aaab4673_instanceForce(_152317_f);;
	_153117_ins.get()._field_Anon=true;
	jule::Bool _153413_ok = _1aac15bd1_checkFuncTypes(_self_, &(_153117_ins));;
	if ((!(_153413_ok))) {
		return nullptr;;
	};
	return _153117_ins;;
}



inline jule::Trait<_1aabebc3e_Kind> _1aac16363_buildByNamespace(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa7738e_NamespaceTypeDecl> _154239_decl) {
	jule::Str _154313_path = _1aac1dd71_buildLinkPathByTokens(&(_154239_decl.get()._field_Idents));;
	jule::Ptr<_1aab24c33_ImportInfo> _154417_imp = _1aac21d30_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1aac20119_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)>([=](jule::Ptr<_1aab24c33_ImportInfo> _154452_imp) mutable -> jule::Bool {
		if (((_154239_decl.get()._field_Idents.len() == 1LL) && (_154452_imp.get()._field_Alias == _154313_path))) {
			return true;;
		};
		return ((_154452_imp.get()._field_LinkPath == _154313_path) && _1aab2784b_isAccessibleViaSelection(_154452_imp.ptr()));;
	}));;
	jule::Str _155113_selfIdent = jule::Str("self", 4);;
	if (((_154417_imp == nullptr) || (!(_1aab27274_isLookupable(_154417_imp.ptr(), &(_155113_selfIdent)))))) {
		_1aac0ea87_pushErr(_self_, _154239_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_154313_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_1aac0ee83_disallowBuiltin(_self_);
	jule::Trait<_1aac21d30_Lookup> _155817_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1aac21d30_Lookup>(_154417_imp, 1);
	jule::Ptr<_1aabec1e5_TypeKind> _156017_kind = _1aac169e5_checkDecl(_self_, &(_154239_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_155817_lookup;
	_1aac0ec85_allowBuiltin(_self_);
	return jule::Trait<_1aabebc3e_Kind>(_156017_kind, 19);;
}



inline jule::Ptr<_1aabec1e5_TypeKind> _1aac166a4_build(_1aac0e34a_typeChecker* _self_, jule::Any* _156629_declKind) {
	jule::Trait<_1aabebc3e_Kind> _156717_kind = nullptr;;
	{
		auto &_match_expr{ (*(_156629_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a8d02ece:;
			{
				jule::Trait<_1aabebc3e_Kind> _157021_t = _1aac13926_buildIdent(_self_, (*(_156629_declKind)).cast_ptr<_1aaa76beb_IdentTypeDecl>(&__jule_any_type20));;
				if ((_157021_t != nullptr)) {
					_156717_kind=_157021_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a8d02396:;
			{
				jule::Trait<_1aabebc3e_Kind> _157521_t = _1aac13c67_buildSubIdent(_self_, (*(_156629_declKind)).cast_ptr<_1aaa76ee8_SubIdentTypeDecl>(&__jule_any_type93));;
				if ((_157521_t != nullptr)) {
					_156717_kind=_157521_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1a8d02594:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aac08a92_Sptr> _158121_t = _1aac143e9_buildSptr(_self_, (*(_156629_declKind)).cast_ptr<_1aaa7768b_SptrTypeDecl>(&__jule_any_type78));;
				if ((_158121_t != nullptr)) {
					_156717_kind=jule::Trait<_1aabebc3e_Kind>(_158121_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1a8d0260a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aac0c359_Ptr> _158721_t = _1aac14a7b_buildPtr(_self_, (*(_156629_declKind)).cast_ptr<_1aaa7811a_PtrTypeDecl>(&__jule_any_type77));;
				if ((_158721_t != nullptr)) {
					_156717_kind=jule::Trait<_1aabebc3e_Kind>(_158721_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1a8d02671:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aac09565_Slc> _159321_t = _1aac14dbc_buildSlc(_self_, (*(_156629_declKind)).cast_ptr<_1aaa77a21_SlcTypeDecl>(&__jule_any_type76));;
				if ((_159321_t != nullptr)) {
					_156717_kind=jule::Trait<_1aabebc3e_Kind>(_159321_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1a8d026d7:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aac0b886_Arr> _159921_t = _1aac1520d_buildArr(_self_, (*(_156629_declKind)).cast_ptr<_1aaa788ac_ArrTypeDecl>(&__jule_any_type75));;
				if ((_159921_t != nullptr)) {
					_156717_kind=jule::Trait<_1aabebc3e_Kind>(_159921_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1a8d030ab:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aac0ac09_Map> _160521_t = _1aac1554e_buildMap(_self_, (*(_156629_declKind)).cast_ptr<_1aaa7910a_MapTypeDecl>(&__jule_any_type79));;
				if ((_160521_t != nullptr)) {
					_156717_kind=jule::Trait<_1aabebc3e_Kind>(_160521_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1a8d03122:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aac0a159_Tuple> _161121_t = _1aac15890_buildTuple(_self_, (*(_156629_declKind)).cast_ptr<_1aaa77d1d_TupleTypeDecl>(&__jule_any_type80));;
				if ((_161121_t != nullptr)) {
					_156717_kind=jule::Trait<_1aabebc3e_Kind>(_161121_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a8d03188:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1aaab609d_FnIns> _161721_t = _1aac16022_buildFunc(_self_, (*(_156629_declKind)).cast_ptr<_1aaa8837d_FnDecl>(&__jule_any_type14));;
				if ((_161721_t != nullptr)) {
					_156717_kind=jule::Trait<_1aabebc3e_Kind>(_161721_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1a8d031ee:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1aabebc3e_Kind> _162321_t = _1aac16363_buildByNamespace(_self_, (*(_156629_declKind)).cast_ptr<_1aaa7738e_NamespaceTypeDecl>(&__jule_any_type97));;
				if ((_162321_t != nullptr)) {
					_156717_kind=_162321_t;
				};
			}
		}
		else {
			_case_begin_1a8d0252d:;
			{
				_1aac0ea87_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8d024c8:;
	};
	if ((_156717_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _156717_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1a8d0e11c:;
			{
				return _156717_kind.cast_ptr<_1aabec1e5_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1a8d034a7:;
			{
				jule::Ptr<_1aabec1e5_TypeKind> _163821_tk = jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=_156717_kind});;
				{
					auto &_match_expr{ _156717_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1a8d0e282:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_163821_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1a8d0e309:;
						{
							jule::Ptr<_1aaa9a390_StructIns> _164521_s = _156717_kind.cast_ptr<_1aaa9a390_StructIns>(0);;
							if (((_164521_s.get()._field_Decl != nullptr) && _164521_s.get()._field_Decl.get()._field_Binded)) {
								_163821_tk.get()._field_BindIdent=_164521_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1a8d0e21b:;
				};
				return _163821_tk;;
			}
		}
		_match_end_1a8d0d2e7:;
	};
}



inline jule::Ptr<_1aabec1e5_TypeKind> _1aac169e5_checkDecl(_1aac0e34a_typeChecker* _self_, jule::Ptr<_1aaa765e1_TypeDecl>* _165433_decl) {
	jule::Ptr<_1c3e3a5e6_Token> _165617_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_165433_decl)).get()._field_Token;
	jule::Ptr<_1aabec1e5_TypeKind> _165917_kind = _1aac166a4_build(_self_, &((*(_165433_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_165617_errorToken;
	return _165917_kind;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aac0e34a_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1aac17441_prim(jule::Str* _168121_ident, jule::Ptr<_1aac05066_Prim> _168133_t) {
	return (_168133_t.get()._field_Kind == (*(_168121_ident)));;
}



inline jule::Bool static__1aac177b5_exist(jule::Str* _168522_ident, jule::Ptr<_1aabec1e5_TypeKind>* _168539_k) {
	{
		
		if ((_1aabeeadd_Prim((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1a8d14d15:;
			{
				return static__1aac17441_prim(_168522_ident, _1aabeeadd_Prim((*(_168539_k)).ptr()));;
			}
		}
		else if ((_1aabeed74_Sptr((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1a8d14d8c:;
			{
				jule::Ptr<_1aac08a92_Sptr> _169021_sptr = _1aabeed74_Sptr((*(_168539_k)).ptr());;
				return static__1aac177b5_exist(_168522_ident, &(_169021_sptr.get()._field_Elem));;
			}
		}
		else if ((_1aac0010a_Ptr((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1a8d15112:;
			{
				jule::Ptr<_1aac0c359_Ptr> _169321_ptr = _1aac0010a_Ptr((*(_168539_k)).ptr());;
				return static__1aac177b5_exist(_168522_ident, &(_169321_ptr.get()._field_Elem));;
			}
		}
		else if ((_1aac00b44_Slc((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1a8d15178:;
			{
				jule::Ptr<_1aac09565_Slc> _169621_slc = _1aac00b44_Slc((*(_168539_k)).ptr());;
				return static__1aac177b5_exist(_168522_ident, &(_169621_slc.get()._field_Elem));;
			}
		}
		else if ((_1aac008ad_Arr((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1a8d151de:;
			{
				jule::Ptr<_1aac0b886_Arr> _169921_arr = _1aac008ad_Arr((*(_168539_k)).ptr());;
				return static__1aac177b5_exist(_168522_ident, &(_169921_arr.get()._field_Elem));;
			}
		}
		else if ((_1aac0167d_Map((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1a8d15266:;
			{
				jule::Ptr<_1aac0ac09_Map> _170221_m = _1aac0167d_Map((*(_168539_k)).ptr());;
				return (static__1aac177b5_exist(_168522_ident, &(_170221_m.get()._field_Key)) || static__1aac177b5_exist(_168522_ident, &(_170221_m.get()._field_Val)));;
			}
		}
		else if ((_1aac01161_Struct((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1a8d152dd:;
			{
				jule::Ptr<_1aaa9a390_StructIns> _170621_s = _1aac01161_Struct((*(_168539_k)).ptr());;
				{
					auto expr = &(_170621_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8d2055c:;
					if (it != expr_end) {
						jule::Ptr<_1aabea80e_InsGeneric> _170725_g = *it;
						{
							if (static__1aac177b5_exist(_168522_ident, &(_170725_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1a8d2055c:;
						++it;
						goto _iter_begin_1a8d2055c;
					}
					_iter_end_1a8d2055c:;
				};
				return false;;
			}
		}
		else if ((_1aac00dca_Fn((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1a8d153ed:;
			{
				jule::Ptr<_1aaab609d_FnIns> _171421_f = _1aac00dca_Fn((*(_168539_k)).ptr());;
				{
					auto expr = &(_171421_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8d21c67:;
					if (it != expr_end) {
						jule::Ptr<_1aaab5102_ParamIns> _171525_p = *it;
						{
							if (_1aaaabe84_IsSelf(_171525_p.get()._field_Decl.ptr())) {
								goto _iter_next_1a8d21c67;
							};
							if (static__1aac177b5_exist(_168522_ident, &(_171525_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1a8d21c67:;
						++it;
						goto _iter_begin_1a8d21c67;
					}
					_iter_end_1a8d21c67:;
				};
				if ((_171421_f.get()._field_Result != nullptr)) {
					return static__1aac177b5_exist(_168522_ident, &(_171421_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1aac01914_Tup((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1a8d15464:;
			{
				jule::Ptr<_1aac0a159_Tuple> _172821_tup = _1aac01914_Tup((*(_168539_k)).ptr());;
				{
					auto expr = &(_172821_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8d23c25:;
					if (it != expr_end) {
						jule::Ptr<_1aabec1e5_TypeKind> _172925_t = *it;
						{
							if (static__1aac177b5_exist(_168522_ident, &(_172925_t))) {
								return true;;
							};
						}
						_iter_next_1a8d23c25:;
						++it;
						goto _iter_begin_1a8d23c25;
					}
					_iter_end_1a8d23c25:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1a8d14bc2:;
			{
				return false;;
			}
		}
		_match_end_1a8d14b17:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aac16ece_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab6d1943_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab7284a1_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1ab7294a2_stop(_1ab728d42_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1ab729738_stopped(_1ab728d42_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1ab7299be_finished(_1ab728d42_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1ab729c55_isLastSt(_1ab728d42_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1ab72a0b8_pushErr(_1ab728d42_scopeParser* _self_, jule::Ptr<_1c3e3a5e6_Token> _18926_token, jule::Str _18941_fmt) {
	_1ab7479ba_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1ab72a42b_pushSuggestion(_1ab728d42_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1ab747d2d_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1ab72a6d4_insertAsNext(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1ab7284a1_stmt>(_1ab7284a1_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1ab7284a1_stmt> _1ab72a96a_next(_1ab728d42_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1aaa866de_ScopeTree> _1ab72ad66_buildScope(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _20834_tokens, jule::Ptr<_1c3e3a5e6_Token> _20856_end) {
	jule::Ptr<_1aaa866de_ScopeTree> _20917_s = _1ab72723b_newScope();;
	_20917_s.get()._field_Parent=(*(_self_))._field_s;
	_20917_s.get()._field_End=_20856_end;
	_1ab728d42_scopeParser _21217_ssp = _1ab728d42_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1ab735898_build(&_21217_ssp, _20834_tokens, &(_20917_s));
	return _20917_s;;
}



inline jule::Ptr<_1aaa8945b_VarDecl> _1ab72b1a7_buildVarSt(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _21934_tokens) {
	jule::Ptr<_1aaa8945b_VarDecl> _22017_v = _1ab74a847_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	_22017_v.get()._field_Scope=(*(_self_))._field_s;
	return _22017_v;;
}



inline jule::Ptr<_1aaa89835_RetSt> _1ab72b4e8_buildRetSt(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _22533_tokens) {
	jule::Ptr<_1aaa89835_RetSt> _22617_st = jule::new_ptr<_1aaa89835_RetSt>(_1aaa89835_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		_22533_tokens=_22533_tokens.slice(1LL);
		_22617_st.get()._field_Expr=_1ab74816e_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22617_st;;
}



inline jule::Ptr<_1aaa89ec8_Iter> _1ab72b839_buildWhileNextIter(_1ab728d42_scopeParser* _self_, jule::Ptr<_1ab7284a1_stmt>* _23642_s) {
	jule::Ptr<_1aaa89ec8_Iter> _23717_it = jule::new_ptr<_1aaa89ec8_Iter>(_1aaa89ec8_Iter{._field_Token=(*(_23642_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _24017_tokens = (*(_23642_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_1aaa8a803_WhileKind> _24117_kind = jule::new_ptr<_1aaa8a803_WhileKind>();;
	if ((_24017_tokens.len() > 0LL)) {
		_24117_kind.get()._field_Expr=_1ab74816e_buildExpr((*(_self_))._field_p, &(_24017_tokens));
	};
	if (_1ab729c55_isLastSt(_self_)) {
		_1ab72a0b8_pushErr(_self_, _23717_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24017_tokens=_1ab72a96a_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _25317_stTokens = _1ab742212_getBlockExpr(&(_24017_tokens));;
	if ((_25317_stTokens.len() > 0LL)) {
		jule::Ptr<_1ab7284a1_stmt> _25521_stmt = jule::new_ptr<_1ab7284a1_stmt>(_1ab7284a1_stmt{._field_tokens=_25317_stTokens, ._field_terminated=(*(_23642_s)).get()._field_terminated});;
		_24117_kind.get()._field_NextToken=_25317_stTokens[0LL];
		_24117_kind.get()._field_Next=_1ab735535_buildSt(_self_, &(_25521_stmt));
	};
	jule::I32 _26317_i = _25317_stTokens.len();;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _26417_blockTokens = _1ab745402_range(&(_26317_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_24017_tokens));;
	if ((_26417_blockTokens == nullptr)) {
		_1ab7294a2_stop(_self_);
		_1ab72a0b8_pushErr(_self_, _23717_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1ab72a42b_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26317_i < _24017_tokens.len())) {
		_1ab72a0b8_pushErr(_self_, _24017_tokens[_26317_i], jule::Str("invalid syntax", 14));
	};
	_23717_it.get()._field_Scope=_1ab72ad66_buildScope(_self_, &(_26417_blockTokens), _24017_tokens[(_26317_i - 1LL)]);
	_23717_it.get()._field_Kind=jule::Any(_24117_kind, &__jule_any_type38);
	return _23717_it;;
}



inline jule::Ptr<_1aaa8a803_WhileKind> _1ab72bb7a_buildWhileIterKind(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _28142_tokens) {
	return jule::new_ptr<_1aaa8a803_WhileKind>(_1aaa8a803_WhileKind{._field_Expr=_1ab74816e_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _1ab72bebb_getRangeKindKeysTokens(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _28818_vars;;
	jule::Slice<_1c3983b45_Log> _28824_errs;;
	({
		__jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab745b72_parts(_28746_toks, static_cast<jule::U32>(5LLU), true);
		_28818_vars = __jule_assign_result.__jule_result_arg0;
		_28824_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_28824_errs);;
	return _28818_vars;;
}



inline jule::Ptr<_1aaa8945b_VarDecl> _1ab72c30c_buildRangeKindKey(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1aaa8945b_VarDecl> _29717_key = jule::new_ptr<_1aaa8945b_VarDecl>(_1aaa8945b_VarDecl{._field_Token=(*(_29341_tokens))[0LL], });;
	if ((_29717_key.get()._field_Token.get()._field_Id == static_cast<jule::U32>(32LLU))) {
		_29717_key.get()._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1ab72a0b8_pushErr(_self_, _29717_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29717_key.get()._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1ab72a0b8_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29717_key.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab72a0b8_pushErr(_self_, _29717_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1ab72a42b_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29717_key.get()._field_Ident=_29717_key.get()._field_Token.get()._field_Kind;
	return _29717_key;;
}



inline jule::Slice<jule::Ptr<_1aaa8945b_VarDecl>> _1ab72c64d_buildRangeKindKeys(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_1aaa8945b_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8eae762:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaa8945b_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1ab72c30c_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1a8eae762:;
			++it;
			goto _iter_begin_1a8eae762;
		}
		_iter_end_1a8eae762:;
	};
	return _31917_keys;;
}



inline void _1ab72c9b1_setupRangeKindKeysPlain(_1ab728d42_scopeParser* _self_, jule::Ptr<_1aaa8b20a_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _32717_keyTokens = _1ab72bebb_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32717_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32717_keyTokens.len() > 2LL)) {
		_1ab72a0b8_pushErr(_self_, (*(_32647_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1aaa8945b_VarDecl>> _33417_keys = _1ab72c64d_buildRangeKindKeys(_self_, &(_32717_keyTokens));;
	(*(_32647_rng)).get()._field_KeyA=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		(*(_32647_rng)).get()._field_KeyB=_33417_keys[1LL];
	};
}



inline void _1ab72cd24_setupRangeKindKeysExplicit(_1ab728d42_scopeParser* _self_, jule::Ptr<_1aaa8b20a_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _34172_tokens) {
	jule::I32 _34217_i = 0LL;;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _34317_rang = _1ab745402_range(&(_34217_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _34172_tokens);;
	if ((_34217_i < (*(_34172_tokens)).len())) {
		_1ab72a0b8_pushErr(_self_, (*(_34150_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1ab72c9b1_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34317_rang));
}



inline void _1ab72d187_setupRangeKindKeys(_1ab728d42_scopeParser* _self_, jule::Ptr<_1aaa8b20a_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _35064_tokens) {
	if (((*(_35064_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(74LLU))) {
		_1ab72cd24_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1ab72c9b1_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_1aaa8b20a_RangeKind> _1ab72d63d_buildRangeIterKind(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _35914_exprTokens, jule::Ptr<_1c3e3a5e6_Token>* _35941_inToken) {
	jule::Ptr<_1aaa8b20a_RangeKind> _36017_rng = jule::new_ptr<_1aaa8b20a_RangeKind>(_1aaa8b20a_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1ab72a0b8_pushErr(_self_, _36017_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36017_rng;;
	};
	_36017_rng.get()._field_Expr=_1ab74816e_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1ab72d187_setupRangeKindKeys(_self_, &(_36017_rng), _35842_var_tokens);
	};
	return _36017_rng;;
}



inline jule::Any _1ab72da39_buildCommonIterKind(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _37443_tokens, jule::Ptr<_1c3e3a5e6_Token>* _37462_err_tok) {
	jule::I32 _37517_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a838299e:;
		if (it != expr_end) {
			jule::I32 _37614_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ _37621_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a83834e9:;
						{
							(_37517_braceN)++;
							goto _iter_next_1a838299e;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a8383560:;
						{
							(_37517_braceN)--;
						}
					}
					_match_end_1a8383494:;
				};
				if ((_37517_braceN != 0LL)) {
					goto _iter_next_1a838299e;
				};
				{
					auto &_match_expr{ _37621_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_1a83832b8:;
						{
							jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _39325_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _39425_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1ab72d63d_buildRangeIterKind(_self_, &(_39325_declTokens), &(_39425_exprTokens), &(_37621_tok)), &__jule_any_type40);;
						}
					}
					_match_end_1a838453e:;
				};
			}
			_iter_next_1a838299e:;
			++it;
			_37614_i++;
			goto _iter_begin_1a838299e;
		}
		_iter_end_1a838299e:;
	};
	return jule::Any(_1ab72bb7a_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_1aaa89ec8_Iter> _1ab72dd7a_buildCommonIter(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _40138_tokens) {
	jule::Ptr<_1aaa89ec8_Iter> _40217_it = jule::new_ptr<_1aaa89ec8_Iter>(_1aaa89ec8_Iter{._field_Token=_40138_tokens[0LL], });;
	_40138_tokens=_40138_tokens.slice(1LL);
	if ((_40138_tokens.len() == 0LL)) {
		_1ab7294a2_stop(_self_);
		_1ab72a0b8_pushErr(_self_, _40217_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1ab72a42b_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _41217_exprTokens = _1ab742212_getBlockExpr(&(_40138_tokens));;
	if ((_41217_exprTokens.len() > 0LL)) {
		_40217_it.get()._field_Kind=_1ab72da39_buildCommonIterKind(_self_, &(_41217_exprTokens), &(_40217_it.get()._field_Token));
	};
	jule::I32 _41617_i = _41217_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _41717_scopeTokens = _1ab745402_range(&(_41617_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_40138_tokens));;
	if ((_41717_scopeTokens == nullptr)) {
		_1ab7294a2_stop(_self_);
		_1ab72a0b8_pushErr(_self_, _40217_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1ab72a42b_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41617_i < _40138_tokens.len())) {
		_1ab72a0b8_pushErr(_self_, _40138_tokens[_41617_i], jule::Str("invalid syntax", 14));
	};
	_40217_it.get()._field_Scope=_1ab72ad66_buildScope(_self_, &(_41717_scopeTokens), _40138_tokens[(_41617_i - 1LL)]);
	return _40217_it;;
}



inline jule::Ptr<_1aaa89ec8_Iter> _1ab72e1bb_buildIterSt(_1ab728d42_scopeParser* _self_, jule::Ptr<_1ab7284a1_stmt>* _43135_st) {
	if ((*(_43135_st)).get()._field_terminated) {
		return _1ab72b839_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1ab72dd7a_buildCommonIter(_self_, (*(_43135_st)).get()._field_tokens);;
}



inline jule::Ptr<_1aaa8b5d4_BreakSt> _1ab72e50c_buildBreakSt(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _43836_tokens) {
	jule::Ptr<_1aaa8b5d4_BreakSt> _43917_brk = jule::new_ptr<_1aaa8b5d4_BreakSt>(_1aaa8b5d4_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*(_43836_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ab72a0b8_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1ab72a42b_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_43917_brk.get()._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1ab72a0b8_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _43917_brk;;
}



inline jule::Ptr<_1aaa8b9ad_ContSt> _1ab72e84d_buildContSt(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _45635_tokens) {
	jule::Ptr<_1aaa8b9ad_ContSt> _45717_cont = jule::new_ptr<_1aaa8b9ad_ContSt>(_1aaa8b9ad_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*(_45635_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ab72a0b8_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1ab72a42b_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_45717_cont.get()._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1ab72a0b8_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _45717_cont;;
}



inline jule::Ptr<_1aaa8be64_If> _1ab72eb8e_buildIf(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _47431_tokens) {
	jule::Ptr<_1aaa8be64_If> _47517_model = jule::new_ptr<_1aaa8be64_If>(_1aaa8be64_If{._field_Token=(*(_47431_tokens))[0LL], });;
	(*(_47431_tokens))=(*(_47431_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _47917_exprTokens = _1ab742212_getBlockExpr(_47431_tokens);;
	jule::I32 _48017_i = 0LL;;
	if ((_47917_exprTokens.len() == 0LL)) {
		_1ab72a0b8_pushErr(_self_, _47517_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48017_i=static_cast<jule::I32>(_47917_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _48617_scopeTokens = _1ab745402_range(&(_48017_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47431_tokens);;
	if ((_48617_scopeTokens == nullptr)) {
		_1ab7294a2_stop(_self_);
		_1ab72a0b8_pushErr(_self_, _47517_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1ab72a42b_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c3e3a5e6_Token> _49317_end = (*(_47431_tokens))[(_48017_i - 1LL)];;
	if ((_48017_i < (*(_47431_tokens)).len())) {
		if (((*(_47431_tokens))[_48017_i].get()._field_Id == static_cast<jule::U32>(14LLU))) {
			(*(_47431_tokens))=(*(_47431_tokens)).slice(_48017_i);
		} else {
			_1ab72a0b8_pushErr(_self_, (*(_47431_tokens))[_48017_i], jule::Str("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	_47517_model.get()._field_Expr=_1ab74816e_buildExpr((*(_self_))._field_p, &(_47917_exprTokens));
	_47517_model.get()._field_Scope=_1ab72ad66_buildScope(_self_, &(_48617_scopeTokens), _49317_end);
	return _47517_model;;
}



inline jule::Ptr<_1aaa8c33d_Else> _1ab72eed0_buildElse(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _50733_tokens) {
	jule::Ptr<_1aaa8c33d_Else> _50817_els = jule::new_ptr<_1aaa8c33d_Else>(_1aaa8c33d_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	(*(_50733_tokens))=(*(_50733_tokens)).slice(1LL);
	jule::I32 _51217_i = 0LL;;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _51317_scopeTokens = _1ab745402_range(&(_51217_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _50733_tokens);;
	if ((_51317_scopeTokens == nullptr)) {
		if ((_51217_i < (*(_50733_tokens)).len())) {
			_1ab72a0b8_pushErr(_self_, _50817_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1ab7294a2_stop(_self_);
			_1ab72a0b8_pushErr(_self_, _50817_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1ab72a42b_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51217_i < (*(_50733_tokens)).len())) {
		_1ab72a0b8_pushErr(_self_, (*(_50733_tokens))[_51217_i], jule::Str("invalid syntax", 14));
	};
	_50817_els.get()._field_Scope=_1ab72ad66_buildScope(_self_, &(_51317_scopeTokens), (*(_50733_tokens))[(_51217_i - 1LL)]);
	return _50817_els;;
}



inline jule::Ptr<_1aaa8c7e4_Conditional> _1ab730321_buildIfElseChain(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _53139_tokens) {
	jule::Ptr<_1aaa8c7e4_Conditional> _53217_chain = jule::new_ptr<_1aaa8c7e4_Conditional>(_1aaa8c7e4_Conditional{._field_Head=_1ab72eb8e_buildIf(_self_, &(_53139_tokens)), });;
	if ((_53217_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if ((_53139_tokens[0LL].get()._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_1a839c777;
			};
			if (((_53139_tokens.len() > 1LL) && (_53139_tokens[1LL].get()._field_Id == static_cast<jule::U32>(13LLU)))) {
				_53139_tokens=_53139_tokens.slice(1LL);
				jule::Ptr<_1aaa8be64_If> _54425_elif = _1ab72eb8e_buildIf(_self_, &(_53139_tokens));;
				{ jule::Slice<jule::Ptr<_1aaa8be64_If>> &__jule_push_dest = _53217_chain.get()._field_Tail; __jule_push_dest.push(_54425_elif); };
				goto _iter_next_1a839c777;
			};
			_53217_chain.get()._field_Default=_1ab72eed0_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1a839c777;
		}
	_iter_next_1a839c777:;
	}
	_iter_end_1a839c777:;;
	return _53217_chain;;
}



inline jule::Ptr<_1aaa7a925_Expr> _1ab730662_buildCoCallSt(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _55436_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _55513_token = _55436_tokens[0LL];;
	_55436_tokens=_55436_tokens.slice(1LL);
	jule::Ptr<_1aaa7a925_Expr> _55717_e = _1ab74816e_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55717_e == nullptr)) {
		return _55717_e;;
	};
	{
		auto &_match_expr{ _55717_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a83a14c3:;
			{
				_55717_e.get()._field_Kind.cast_ptr<_1aaa7e72b_FnCallExpr>(&__jule_any_type112).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1a83a179d:;
			{
				_1ab72a0b8_pushErr(_self_, _55513_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1a83a1748:;
	};
	return _55717_e;;
}



inline jule::Ptr<_1aaa8417b_GotoSt> _1ab7309a3_buildGotoSt(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _57035_tokens) {
	jule::Ptr<_1aaa8417b_GotoSt> _57117_gt = jule::new_ptr<_1aaa8417b_GotoSt>(_1aaa8417b_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1ab72a0b8_pushErr(_self_, _57117_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1ab72a0b8_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1c3e3a5e6_Token> _58017_identToken = (*(_57035_tokens))[1LL];;
	if ((_58017_identToken.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab72a0b8_pushErr(_self_, _58017_identToken, jule::Str("invalid syntax", 14));
		_1ab72a42b_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57117_gt;;
	};
	_57117_gt.get()._field_Label=_58017_identToken;
	return _57117_gt;;
}



inline jule::Ptr<_1aaa84478_FallSt> _1ab730ce4_buildFallSt(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _59035_tokens) {
	jule::Ptr<_1aaa84478_FallSt> _59117_fll = jule::new_ptr<_1aaa84478_FallSt>(_1aaa84478_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1ab72a0b8_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59117_fll;;
}



inline jule::Ptr<_1aaa8d031_TypeAliasDecl> _1ab731135_buildTypeAliasSt(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _60040_tokens) {
	jule::Ptr<_1aaa8d031_TypeAliasDecl> _60117_tad = _1ab749912_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	_60117_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60117_tad;;
}



inline void _1ab73160d_pushCaseExpr(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _60635_tokens, jule::Ptr<_1c3e3a5e6_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1aaa7a925_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I32 _61321_i = 0LL;;
		jule::Ptr<_1aaa765e1_TypeDecl> _61422_t;;
		jule::Bool _61425_ok = false;;
		({
			__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61321_i)), true);
			_61422_t = __jule_assign_result.__jule_result_arg0;
			_61425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61425_ok) {
			{ jule::Slice<jule::Ptr<_1aaa7a925_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_1aaa7a925_Expr>(_1aaa7a925_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61422_t, &__jule_any_type95)})); };
			if ((_61321_i < _60635_tokens.len())) {
				_1ab72a0b8_pushErr(_self_, _60635_tokens[_61321_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1aaa7a925_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_1ab74816e_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _1ab731ab4_buildCaseExprs(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _63038_tokens, jule::Ptr<_1c3e3a5e6_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1aaa7a925_Expr>>::alloc(0LL, 1LL);;
	jule::I32 _63317_braceN = 0LL;;
	jule::I32 _63417_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83abd08:;
		if (it != expr_end) {
			jule::I32 _63514_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> _63521_tok = *it;
			{
				{
					auto &_match_expr{ _63521_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1a83ad7bb:;
						{
							(_63317_braceN)++;
							goto _iter_next_1a83abd08;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1a83ad843:;
						{
							(_63317_braceN)--;
							goto _iter_next_1a83abd08;
						}
					}
					_match_end_1a83ad733:;
				};
				if ((_63317_braceN != 0LL)) {
					goto _iter_next_1a83abd08;
				};
				{
					
					if ((_63521_tok.get()._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_1a83aebeb:;
						{
							jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _65421_exprTokens = (*(_63038_tokens)).slice(_63417_j, _63514_i);;
							if ((_65421_exprTokens.len() == 0LL)) {
								_1ab72a0b8_pushErr(_self_, _63521_tok, jule::Str("expression missing", 18));
							} else {
								_1ab73160d_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63417_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63117_exprs));
							};
							_63417_j=static_cast<jule::I32>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_1a83aec73:;
						{
							(*(_63061_colon))=_63521_tok;
							_1ab73160d_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63417_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63117_exprs));
							(*(_63038_tokens))=(*(_63038_tokens)).slice((_63514_i + 1LL));
							return _63117_exprs;;
						}
					}
					_match_end_1a83ae6ce:;
				};
			}
			_iter_next_1a83abd08:;
			++it;
			_63514_i++;
			goto _iter_begin_1a83abd08;
		}
		_iter_end_1a83abd08:;
	};
	_1ab72a0b8_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1aaa866de_ScopeTree> _1ab731e05_buildCaseScope(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _67338_tokens) {
	jule::I32 _67417_n = 0LL;;
	for (;;) {
		{
			jule::I32 _67621_i = 0LL;;
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _67722_next;;
			({
				__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_bool __jule_assign_result = _1ab728171_skipSt(&(_67621_i), (*(_67338_tokens)).slice(_67417_n));
				_67722_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67722_next.len() == 0LL)) {
				goto _iter_end_1a83b2e1e;
			};
			jule::Ptr<_1c3e3a5e6_Token> _68117_tok = _67722_next[0LL];;
			if ((_68117_tok.get()._field_Id != static_cast<jule::U32>(66LLU))) {
				_67417_n+=_67621_i;
				goto _iter_next_1a83b2e1e;
			};
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _68621_scopeTokens = (*(_67338_tokens)).slice(0LL, _67417_n);;
			jule::Ptr<_1aaa866de_ScopeTree> _68721_scope = _1ab72ad66_buildScope(_self_, &(_68621_scopeTokens), (*(_67338_tokens))[_67417_n]);;
			(*(_67338_tokens))=(*(_67338_tokens)).slice(_67417_n);
			return _68721_scope;;
		}
	_iter_next_1a83b2e1e:;
	}
	_iter_end_1a83b2e1e:;;
	jule::Ptr<_1c3e3a5e6_Token> _69117_end;;
	if (((*(_67338_tokens)).len() > 0LL)) {
		_69117_end=(*(_67338_tokens))[((*(_67338_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1aaa866de_ScopeTree> _69517_scope = _1ab72ad66_buildScope(_self_, _67338_tokens, _69117_end);;
	(*(_67338_tokens))=nullptr;
	return _69517_scope;;
}



inline __jule_tuple_x_1aaa8d4d7_Case__jule_tuple_bool _1ab732301_buildCase(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _70033_tokens, jule::Bool _70051_typeMatch) {
	__jule_tuple_x_1aaa8d4d7_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aaa8d4d7_Case> _70117_c = jule::new_ptr<_1aaa8d4d7_Case>(_1aaa8d4d7_Case{._field_Token=(*(_70033_tokens))[0LL], });;
	(*(_70033_tokens))=(*(_70033_tokens)).slice(1LL);
	jule::Ptr<_1c3e3a5e6_Token> _70517_colon = nullptr;;
	_70117_c.get()._field_Exprs=_1ab731ab4_buildCaseExprs(_self_, _70033_tokens, &(_70517_colon), _70051_typeMatch);
	_70117_c.get()._field_Scope=_1ab731e05_buildCaseScope(_self_, _70033_tokens);
	if ((_70117_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70117_c.get()._field_Scope.get()._field_End=_70517_colon;
	};
	jule::Bool _71113_isDefault = (_70117_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70117_c;
	__jule_func_result.__jule_result_arg1 = _71113_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1aaa8d4d7_Case__jule_tuple_x_1aaa8c33d_Else _1ab7326ec_buildCases(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _71533_tokens, jule::Bool _71551_typeMatch) {
	__jule_tuple_sx_1aaa8d4d7_Case__jule_tuple_x_1aaa8c33d_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1aaa8d4d7_Case>> _71617_cases = nullptr;;
	jule::Ptr<_1aaa8c33d_Else> _71717_def = nullptr;;
	jule::Bool _71817_defNotLast = false;;
	while ((_71533_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _72021_tok = _71533_tokens[0LL];;
			if ((_72021_tok.get()._field_Id != static_cast<jule::U32>(66LLU))) {
				_1ab72a0b8_pushErr(_self_, _72021_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1a83ba542;
			};
			jule::Ptr<_1aaa8d4d7_Case> _72522_c;;
			jule::Bool _72525_isDefault = false;;
			({
				__jule_tuple_x_1aaa8d4d7_Case__jule_tuple_bool __jule_assign_result = _1ab732301_buildCase(_self_, &(_71533_tokens), _71551_typeMatch);
				_72522_c = __jule_assign_result.__jule_result_arg0;
				_72525_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72525_isDefault) {
				_72522_c.get()._field_Token=_72021_tok;
				if ((_71717_def == nullptr)) {
					_71717_def=jule::new_ptr<_1aaa8c33d_Else>(_1aaa8c33d_Else{._field_Token=_72522_c.get()._field_Token, ._field_Scope=_72522_c.get()._field_Scope});
				} else {
					_1ab72a0b8_pushErr(_self_, _72021_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_71817_defNotLast=(_71817_defNotLast || (_71717_def != nullptr));
				{ jule::Slice<jule::Ptr<_1aaa8d4d7_Case>> &__jule_push_dest = _71617_cases; __jule_push_dest.push(_72522_c); };
			};
		}
	_iter_next_1a83ba542:;
	}
	_iter_end_1a83ba542:;;
	if (_71817_defNotLast) {
		_1ab72a0b8_pushErr(_self_, _71717_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71617_cases;
	__jule_func_result.__jule_result_arg1 = _71717_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1aaa8dc24_MatchCase> _1ab732a3d_buildMatchCase(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _74937_tokens) {
	jule::Ptr<_1aaa8dc24_MatchCase> _75017_m = jule::new_ptr<_1aaa8dc24_MatchCase>(_1aaa8dc24_MatchCase{._field_Token=_74937_tokens[0LL], });;
	_74937_tokens=_74937_tokens.slice(1LL);
	if (((_74937_tokens.len() > 0LL) && (_74937_tokens[0LL].get()._field_Id == static_cast<jule::U32>(7LLU)))) {
		_75017_m.get()._field_TypeMatch=true;
		_74937_tokens=_74937_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _76017_exprTokens = _1ab742212_getBlockExpr(&(_74937_tokens));;
	if ((_76017_exprTokens.len() > 0LL)) {
		_75017_m.get()._field_Expr=_1ab74816e_buildExpr((*(_self_))._field_p, &(_76017_exprTokens));
	} else if (_75017_m.get()._field_TypeMatch) {
		_1ab72a0b8_pushErr(_self_, _75017_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I32 _76717_i = _76017_exprTokens.len();;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _76817_blockToks = _1ab745402_range(&(_76717_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_74937_tokens));;
	if ((_76817_blockToks == nullptr)) {
		_1ab7294a2_stop(_self_);
		_1ab72a0b8_pushErr(_self_, _75017_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1ab72a42b_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76717_i < _74937_tokens.len())) {
		_1ab72a0b8_pushErr(_self_, _74937_tokens[_76717_i], jule::Str("invalid syntax", 14));
	};
	_75017_m.get()._field_End=_74937_tokens[(_76717_i - 1LL)];
	({
		__jule_tuple_sx_1aaa8d4d7_Case__jule_tuple_x_1aaa8c33d_Else __jule_assign_result = _1ab7326ec_buildCases(_self_, _76817_blockToks, _75017_m.get()._field_TypeMatch);
		_75017_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75017_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75017_m;;
}



inline jule::Ptr<_1aaa866de_ScopeTree> _1ab732d7e_buildScopeSt(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _78235_tokens) {
	jule::Bool _78317_isUnsafe = false;;
	jule::Bool _78417_isDeferred = false;;
	jule::Ptr<_1c3e3a5e6_Token> _78517_token = _78235_tokens[0LL];;
	if ((_78517_token.get()._field_Id == static_cast<jule::U32>(31LLU))) {
		_78317_isUnsafe=true;
		_78235_tokens=_78235_tokens.slice(1LL);
		if ((_78235_tokens.len() == 0LL)) {
			_1ab72a0b8_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78517_token=_78235_tokens[0LL];
		if ((_78517_token.get()._field_Id == static_cast<jule::U32>(33LLU))) {
			_78417_isDeferred=true;
			_78235_tokens=_78235_tokens.slice(1LL);
			if ((_78235_tokens.len() == 0LL)) {
				_1ab72a0b8_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78517_token.get()._field_Id == static_cast<jule::U32>(33LLU))) {
		_78417_isDeferred=true;
		_78235_tokens=_78235_tokens.slice(1LL);
		if ((_78235_tokens.len() == 0LL)) {
			_1ab72a0b8_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I32 _81117_i = 0LL;;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _81217_scopeTokens = _1ab745402_range(&(_81117_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_78235_tokens));;
	if ((_81217_scopeTokens == nullptr)) {
		_1ab72a0b8_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81117_i < _78235_tokens.len())) {
		_1ab72a0b8_pushErr(_self_, _78235_tokens[_81117_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1aaa866de_ScopeTree> _81917_scope = _1ab72ad66_buildScope(_self_, &(_81217_scopeTokens), _78235_tokens[(_81117_i - 1LL)]);;
	_81917_scope.get()._field_Unsafety=_78317_isUnsafe;
	_81917_scope.get()._field_Deferred=_78417_isDeferred;
	return _81917_scope;;
}



inline jule::Ptr<_1aaa83ca2_LabelSt> _1ab7331c0_buildLabelSt(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _82536_tokens) {
	jule::Ptr<_1aaa83ca2_LabelSt> _82617_lbl = jule::new_ptr<_1aaa83ca2_LabelSt>(_1aaa83ca2_LabelSt{._field_Token=(*(_82536_tokens))[0LL], ._field_Ident=(*(_82536_tokens))[0LL].get()._field_Kind});;
	if (((*(_82536_tokens)).len() > 2LL)) {
		(*(_82536_tokens))=(*(_82536_tokens)).slice(2LL);
		_1ab72a6d4_insertAsNext(_self_, _82536_tokens);
	};
	return _82617_lbl;;
}



inline __jule_tuple__1aaa85d2b_StmtData__jule_tuple_bool _1ab733511_buildIdSt(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _84033_tokens) {
	__jule_tuple__1aaa85d2b_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84033_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c3e3a5e6_Token> _84517_token = (*(_84033_tokens))[1LL];;
	{
		auto &_match_expr{ _84517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1a83ce578:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1ab7331c0_buildLabelSt(_self_, _84033_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a83ceaa6:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1ab743873_assignInfo> _1ab733852_buildAssignInfo(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _85439_tokens) {
	jule::Ptr<_1ab743873_assignInfo> _85517_info = jule::new_ptr<_1ab743873_assignInfo>(_1ab743873_assignInfo{._field_ok=true});;
	jule::I32 _85817_braceN = 0LL;;
	{
		auto expr = _85439_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83d13c1:;
		if (it != expr_end) {
			jule::I32 _85914_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> _85921_token = *it;
			{
				{
					auto &_match_expr{ _85921_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a83d214c:;
						{
							(_85817_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a83d21c4:;
						{
							(_85817_braceN)--;
						}
					}
					_match_end_1a83d20b4:;
				};
				{
					
					if ((_85817_braceN > 0LL)) {
						_case_begin_1a83d303d:;
						{
							goto _iter_next_1a83d13c1;
						}
					}
					else if (((!(_1c3e40552_IsAssignOp(_85921_token.get()._field_Id))) && (_85921_token.get()._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_1a83d30b5:;
						{
							goto _iter_next_1a83d13c1;
						}
					}
					_match_end_1a83d2eb6:;
				};
				_85517_info.get()._field_l=(*(_85439_tokens)).slice(0LL, _85914_i);
				if ((_85517_info.get()._field_l.len() == 0LL)) {
					_85517_info.get()._field_ok=false;
				};
				_85517_info.get()._field_setter=_85921_token;
				if (((_85914_i + 1LL) >= (*(_85439_tokens)).len())) {
					_85517_info.get()._field_r=nullptr;
					_85517_info.get()._field_ok=_1c3e40288_IsPostfixOp(_85517_info.get()._field_setter.get()._field_Id);
					goto _iter_end_1a83d13c1;
				};
				_85517_info.get()._field_r=(*(_85439_tokens)).slice((_85914_i + 1LL));
				if (_1c3e40288_IsPostfixOp(_85517_info.get()._field_setter.get()._field_Id)) {
					if ((_85517_info.get()._field_r.len() > 0LL)) {
						_1ab72a0b8_pushErr(_self_, _85517_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85517_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1a83d13c1;
			}
			_iter_next_1a83d13c1:;
			++it;
			_85914_i++;
			goto _iter_begin_1a83d13c1;
		}
		_iter_end_1a83d13c1:;
	};
	return _85517_info;;
}



inline jule::Ptr<_1aaa84ad8_AssignLeft> _1ab733b93_buildAssignL(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _89936_tokens) {
	jule::Ptr<_1aaa84ad8_AssignLeft> _90017_l = jule::new_ptr<_1aaa84ad8_AssignLeft>(_1aaa84ad8_AssignLeft{._field_Token=(*(_89936_tokens))[0LL], });;
	if (((*(_89936_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(1LLU))) {
		_90017_l.get()._field_Ident=_90017_l.get()._field_Token.get()._field_Kind;
	};
	_90017_l.get()._field_Expr=_1ab74816e_buildExpr((*(_self_))._field_p, _89936_tokens);
	return _90017_l;;
}



inline jule::Slice<jule::Ptr<_1aaa84ad8_AssignLeft>> _1ab733ed4_buildAssignLs(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>>* _91037_parts) {
	jule::Slice<jule::Ptr<_1aaa84ad8_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto expr = _91037_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83d9286:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _91221_part = *it;
			{
				jule::Ptr<_1aaa84ad8_AssignLeft> _91321_l = _1ab733b93_buildAssignL(_self_, &(_91221_part));;
				{ jule::Slice<jule::Ptr<_1aaa84ad8_AssignLeft>> &__jule_push_dest = _91117_lefts; __jule_push_dest.push(_91321_l); };
			}
			_iter_next_1a83d9286:;
			++it;
			goto _iter_begin_1a83d9286;
		}
		_iter_end_1a83d9286:;
	};
	return _91117_lefts;;
}



inline __jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool _1ab734325_buildPlainAssign(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _92040_tokens) {
	__jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1ab743873_assignInfo> _92117_info = _1ab733852_buildAssignInfo(_self_, _92040_tokens);;
	if ((!(_92117_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aaa8516b_AssignSt> _92617_assign = jule::new_ptr<_1aaa8516b_AssignSt>(_1aaa8516b_AssignSt{._field_Setter=_92117_info.get()._field_setter, });;
	if ((_92117_info.get()._field_setter.get()._field_Id == static_cast<jule::U32>(38LLU))) {
		_92617_assign.get()._field_Declarative=true;
		_92617_assign.get()._field_Right=_1ab74816e_buildExpr((*(_self_))._field_p, &(_92117_info.get()._field_r));
		jule::Bool _93417_ok = _1ab734721_buildDeclAssign1(_self_, &(_92117_info.get()._field_l), &(_92617_assign));;
		__jule_func_result.__jule_result_arg0 = _92617_assign;
		__jule_func_result.__jule_result_arg1 = _93417_ok;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _93818_parts;;
	jule::Slice<_1c3983b45_Log> _93825_errs;;
	({
		__jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab745b72_parts(&(_92117_info.get()._field_l), static_cast<jule::U32>(5LLU), true);
		_93818_parts = __jule_assign_result.__jule_result_arg0;
		_93825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93825_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_93825_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_92617_assign.get()._field_Left=_1ab733ed4_buildAssignLs(_self_, &(_93818_parts));
	if ((_92117_info.get()._field_r != nullptr)) {
		_92617_assign.get()._field_Right=_1ab74816e_buildExpr((*(_self_))._field_p, &(_92117_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _92617_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1ab734721_buildDeclAssign1(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _95240_lefts, jule::Ptr<_1aaa8516b_AssignSt>* _95262_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _95418_parts;;
	jule::Slice<_1c3983b45_Log> _95425_errs;;
	({
		__jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab745b72_parts(_95240_lefts, static_cast<jule::U32>(5LLU), true);
		_95418_parts = __jule_assign_result.__jule_result_arg0;
		_95425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95425_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_95425_errs);;
		return false;;
	};
	{
		auto expr = &(_95418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a83e158a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _96021_part = *it;
			{
				jule::Bool _96121_isMut = false;;
				jule::Bool _96221_isRef = false;;
				jule::Ptr<_1c3e3a5e6_Token> _96417_token = _96021_part[0LL];;
				if ((_96417_token.get()._field_Id == static_cast<jule::U32>(32LLU))) {
					_96121_isMut=true;
					_96021_part=_96021_part.slice(1LL);
					if ((_96021_part.len() == 0LL)) {
						_1ab72a0b8_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1a83e158a;
					};
				};
				if ((_96021_part[0LL].get()._field_Id == static_cast<jule::U32>(65LLU))) {
					_96221_isRef=true;
					_96021_part=_96021_part.slice(1LL);
					if ((_96021_part.len() == 0LL)) {
						_1ab72a0b8_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1a83e158a;
					};
				};
				if (((_96021_part[0LL].get()._field_Id != static_cast<jule::U32>(1LLU)) && (_96021_part[0LL].get()._field_Id != static_cast<jule::U32>(74LLU)))) {
					_1ab72a0b8_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1a83e158a;
				};
				jule::Ptr<_1aaa84ad8_AssignLeft> _98821_l = _1ab733b93_buildAssignL(_self_, &(_96021_part));;
				_98821_l.get()._field_Mutable=_96121_isMut;
				_98821_l.get()._field_Reference=_96221_isRef;
				{ jule::Slice<jule::Ptr<_1aaa84ad8_AssignLeft>> &__jule_push_dest = (*(_95262_assign)).get()._field_Left; __jule_push_dest.push(_98821_l); };
			}
			_iter_next_1a83e158a:;
			++it;
			goto _iter_begin_1a83e158a;
		}
		_iter_end_1a83e158a:;
	};
	return true;;
}



inline __jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool _1ab734a62_buildDeclAssign(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _99738_tokens) {
	__jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99738_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_99738_tokens=_99738_tokens.slice(1LL);
	jule::Ptr<_1c3e3a5e6_Token> _100317_token = _99738_tokens[0LL];;
	if ((_100317_token.get()._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1aaa8516b_AssignSt> _100817_assign = jule::new_ptr<_1aaa8516b_AssignSt>(_1aaa8516b_AssignSt{._field_Declarative=true, });;
	jule::I32 _101217_i = 0LL;;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _101317_rang = _1ab745402_range(&(_101217_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_99738_tokens));;
	if ((_101317_rang == nullptr)) {
		_1ab72a0b8_pushErr(_self_, _100317_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_101217_i + 1LL) < _99738_tokens.len())) {
		_100817_assign.get()._field_Setter=_99738_tokens[_101217_i];
		if ((_100817_assign.get()._field_Setter.get()._field_Id != static_cast<jule::U32>(71LLU))) {
			_1ab72a0b8_pushErr(_self_, _100817_assign.get()._field_Setter, jule::Str("invalid syntax", 14));
		};
		(_101217_i)++;
		jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _102321_exprTokens = _99738_tokens.slice(_101217_i);;
		_100817_assign.get()._field_Right=_1ab74816e_buildExpr((*(_self_))._field_p, &(_102321_exprTokens));
	};
	jule::Bool _102713_ok = _1ab734721_buildDeclAssign1(_self_, &(_101317_rang), &(_100817_assign));;
	__jule_func_result.__jule_result_arg0 = _100817_assign;
	__jule_func_result.__jule_result_arg1 = _102713_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool _1ab734da3_buildAssignSt(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _103137_tokens) {
	__jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1ab743c2a_checkAssignTokens(_103137_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_103137_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1a83edb2a:;
			{
				({
					__jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool __jule_assign_result = _1ab734a62_buildDeclAssign(_self_, (*(_103137_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a83ed72e:;
			{
				({
					__jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool __jule_assign_result = _1ab734325_buildPlainAssign(_self_, _103137_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a83ed6b8:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1aaa7b2e9_UseExpr> _1ab7351e4_buildUseExpr(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _104636_tokens) {
	if (((*(_104636_tokens)).len() == 1LL)) {
		_1ab72a0b8_pushErr(_self_, (*(_104636_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1aaa7b2e9_UseExpr> _105117_ue = jule::new_ptr<_1aaa7b2e9_UseExpr>(_1aaa7b2e9_UseExpr{._field_Token=(*(_104636_tokens))[0LL], });;
	(*(_104636_tokens))=(*(_104636_tokens)).slice(1LL);
	_105117_ue.get()._field_Expr=_1ab74816e_buildExpr((*(_self_))._field_p, _104636_tokens);
	return _105117_ue;;
}



inline jule::Any _1ab735535_buildSt(_1ab728d42_scopeParser* _self_, jule::Ptr<_1ab7284a1_stmt>* _105931_st) {
	jule::Ptr<_1c3e3a5e6_Token> _106017_token = (*(_105931_st)).get()._field_tokens[0LL];;
	if ((_106017_token.get()._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _106222_s = jule::Any(nullptr);;
		jule::Bool _106225_ok = false;;
		({
			__jule_tuple__1aaa85d2b_StmtData__jule_tuple_bool __jule_assign_result = _1ab733511_buildIdSt(_self_, &((*(_105931_st)).get()._field_tokens));
			_106222_s = __jule_assign_result.__jule_result_arg0;
			_106225_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_106225_ok) {
			return _106222_s;;
		};
	};
	jule::Ptr<_1aaa8516b_AssignSt> _106818_s;;
	jule::Bool _106821_ok = false;;
	({
		__jule_tuple_x_1aaa8516b_AssignSt__jule_tuple_bool __jule_assign_result = _1ab734da3_buildAssignSt(_self_, &((*(_105931_st)).get()._field_tokens));
		_106818_s = __jule_assign_result.__jule_result_arg0;
		_106821_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106821_ok) {
		return jule::Any(_106818_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _106017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1a840346a:;
			{
				return jule::Any(_1ab7351e4_buildUseExpr(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1a8403aa8:;
			{
				return jule::Any(_1ab72b1a7_buildVarSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1a8403b1e:;
			{
				return jule::Any(_1ab72b4e8_buildRetSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1a8403b85:;
			{
				return jule::Any(_1ab72e1bb_buildIterSt(_self_, _105931_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1a8403beb:;
			{
				return jule::Any(_1ab72e50c_buildBreakSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1a8403c62:;
			{
				return jule::Any(_1ab72e84d_buildContSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1a8403cc8:;
			{
				return jule::Any(_1ab730321_buildIfElseChain(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1a8403d3e:;
			{
				return jule::Any(_1ab730662_buildCoCallSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_1a8403da5:;
			{
				return jule::Any(_1ab7309a3_buildGotoSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1a8403e1b:;
			{
				return jule::Any(_1ab730ce4_buildFallSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1a8403e82:;
			{
				return jule::Any(_1ab731135_buildTypeAliasSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1a8403ee8:;
			{
				return jule::Any(_1ab732a3d_buildMatchCase(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU) || _match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1a8404070:;
			{
				return jule::Any(_1ab732d7e_buildScopeSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1a84040e7:;
			{
				return jule::Any(_1ab732d7e_buildScopeSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		_match_end_1a8403668:;
	};
	jule::Ptr<_1aaa7a925_Expr> _110717_expr = _1ab74816e_buildExpr((*(_self_))._field_p, &((*(_105931_st)).get()._field_tokens));;
	if ((_110717_expr != nullptr)) {
		return jule::Any(_110717_expr, &__jule_any_type53);;
	};
	_1ab72a0b8_pushErr(_self_, _106017_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1ab735898_build(_1ab728d42_scopeParser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _111529_tokens, jule::Ptr<_1aaa866de_ScopeTree>* _111552_s) {
	if (((*(_111552_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1ab728858_splitStmts(_111529_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_111552_s));
	while (((!(_1ab729c55_isLastSt(_self_))) && (!(_1ab7299be_finished(_self_))))) {
		{
			jule::Ptr<_1ab7284a1_stmt> _112321_st = _1ab72a96a_next(_self_);;
			jule::Any _112421_data = _1ab735535_buildSt(_self_, &(_112321_st));;
			if ((_112421_data != nullptr)) {
				{ jule::Slice<_1aaa8607e_Stmt> &__jule_push_dest = (*(_self_))._field_s.get()._field_Stmts; __jule_push_dest.push(_1aaa8607e_Stmt{._field_Token=_112321_st.get()._field_tokens[0LL], ._field_Data=_112421_data}); };
			};
			if (_1ab729738_stopped(_self_)) {
				goto _iter_end_1a840c144;
			};
		}
	_iter_next_1a840c144:;
	}
	_iter_end_1a840c144:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab728d42_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1ab736bc9_pushErr(_1ab736415_exprBuilder* _self_, jule::Ptr<_1c3e3a5e6_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1ab7479ba_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1ab73703c_pushSuggestion(_1ab736415_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1ab747d2d_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1aaa7b5e6_TupleExpr> _1ab73737d_buildTuple(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>>* _5434_parts) {
	jule::Ptr<_1aaa7b5e6_TupleExpr> _5517_tuple = jule::new_ptr<_1aaa7b5e6_TupleExpr>(_1aaa7b5e6_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1aaa7a925_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84297d2:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaa7a925_Expr>> &__jule_push_dest = _5517_tuple.get()._field_Expr; __jule_push_dest.push(_1ab741772_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1a84297d2:;
			++it;
			goto _iter_begin_1a84297d2;
		}
		_iter_end_1a84297d2:;
	};
	return _5517_tuple;;
}



inline jule::Ptr<_1aaa7b9c0_LitExpr> _1ab7376be_buildLit(_1ab736415_exprBuilder* _self_, jule::Ptr<_1c3e3a5e6_Token> _6427_token) {
	return jule::new_ptr<_1aaa7b9c0_LitExpr>(_1aaa7b9c0_LitExpr{._field_Token=_6427_token, ._field_Value=_6427_token.get()._field_Kind});;
}



inline jule::Any _1ab737d51_buildSingle(_1ab736415_exprBuilder* _self_, jule::Ptr<_1c3e3a5e6_Token> _7534_token) {
	{
		auto &_match_expr{ _7534_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1a842b54d:;
			{
				return jule::Any(_1ab7376be_buildLit(_self_, _7534_token), &__jule_any_type106);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1a842b5b4:;
			{
				return jule::Any(jule::new_ptr<_1aaa7cdab_VariadicExpr>(_1aaa7cdab_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type82);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1a842b63b:;
			{
				return jule::Any(_1ab742b5d_buildIdentExpr(&(_7534_token)), &__jule_any_type86);;
			}
		}
		_match_end_1a842b4a4:;
	};
	_1ab736bc9_pushErr(_self_, _7534_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1aaa7c350_IdentExpr> _1ab738192_buildBindIdent(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _9238_tokens) {
	if (((*(_9238_tokens))[0LL].get()._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*(_9238_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(17LLU))) {
		_1ab736bc9_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab73703c_pushSuggestion(_self_, jule::Str("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c3e3a5e6_Token> _10017_token = (*(_9238_tokens))[2LL];;
	if ((_10017_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab736bc9_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab73703c_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aaa7c350_IdentExpr> _10617_expr = _1ab742b5d_buildIdentExpr(&(_10017_token));;
	_10617_expr.get()._field_Binded=true;
	return _10617_expr;;
}



inline jule::Ptr<_1aaa7c9d2_UnaryExpr> _1ab7384d3_buildUnary(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _11133_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _11217_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1ab736bc9_pushErr(_self_, _11217_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1c3e3ad33_IsUnaryOp(_11217_op.get()._field_Id)))) {
		_1ab736bc9_pushErr(_self_, _11217_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11217_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11133_tokens=_11133_tokens.slice(1LL);
	return jule::new_ptr<_1aaa7c9d2_UnaryExpr>(_1aaa7c9d2_UnaryExpr{._field_Op=_11217_op, ._field_Expr=_1ab741772_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1aaa7db15_SubIdentExpr> _1ab738824_buildObjSubIdent(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _13239_tokens) {
	jule::I32 _13317_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1c3e3a5e6_Token> _13417_identToken = _13239_tokens[_13317_i];;
	(_13317_i)--;
	_13239_tokens=_13239_tokens.slice(0LL, _13317_i);
	if ((_13239_tokens.len() == 0LL)) {
		_1ab736bc9_pushErr(_self_, _13417_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aaa7db15_SubIdentExpr>(_1aaa7db15_SubIdentExpr{._field_Expr=_1ab741772_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13417_identToken});;
}



inline jule::Ptr<_1aaa7d65e_NsSelectionExpr> _1ab738b65_buildNsSubIdent(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _14739_tokens) {
	jule::Ptr<_1aaa7d65e_NsSelectionExpr> _14817_ns = jule::new_ptr<_1aaa7d65e_NsSelectionExpr>();;
	{
		auto expr = _14739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a843658b:;
		if (it != expr_end) {
			jule::I32 _14914_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> _14921_token = *it;
			{
				if (((_14914_i & 1LL) == 0LL)) {
					if ((_14921_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
						_1ab736bc9_pushErr(_self_, _14921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1ab73703c_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					{ jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> &__jule_push_dest = _14817_ns.get()._field_Ns; __jule_push_dest.push(_14921_token); };
				} else if ((_14921_token.get()._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ab736bc9_pushErr(_self_, _14921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1ab73703c_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1a843658b:;
			++it;
			_14914_i++;
			goto _iter_begin_1a843658b;
		}
		_iter_end_1a843658b:;
	};
	_14817_ns.get()._field_Ident=_14817_ns.get()._field_Ns[(_14817_ns.get()._field_Ns.len() - 1LL)];
	_14817_ns.get()._field_Ns=_14817_ns.get()._field_Ns.slice(0LL, (_14817_ns.get()._field_Ns.len() - 1LL));
	return _14817_ns;;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab738ea6_buildType(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _16633_tokens) {
	jule::I32 _16717_i = 0LL;;
	jule::Ptr<_1aaa765e1_TypeDecl> _16818_t;;
	jule::Bool _16821_ok = false;;
	({
		__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType((*(_self_))._field_p, _16633_tokens, (&(_16717_i)), false);
		_16818_t = __jule_assign_result.__jule_result_arg0;
		_16821_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_16821_ok))) {
		_1ab736bc9_pushErr(_self_, (*(_16633_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16717_i < (*(_16633_tokens)).len())) {
		_1ab736bc9_pushErr(_self_, (*(_16633_tokens))[_16717_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _16818_t;;
}



inline jule::Any _1ab7392e7_buildSubIdent(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _18037_tokens) {
	jule::I32 _18113_i = ((*(_18037_tokens)).len() - 2LL);;
	jule::Ptr<_1c3e3a5e6_Token> _18213_token = (*(_18037_tokens))[_18113_i];;
	{
		auto &_match_expr{ _18213_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_1a843cd34:;
			{
				return jule::Any(_1ab738824_buildObjSubIdent(_self_, (*(_18037_tokens))), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1a843d362:;
			{
				return jule::Any(_1ab738b65_buildNsSubIdent(_self_, _18037_tokens), &__jule_any_type96);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1a843d3c8:;
			{
				return jule::Any(_1ab738ea6_buildType(_self_, _18037_tokens), &__jule_any_type95);;
			}
		}
		_match_end_1a843d252:;
	};
	_1ab736bc9_pushErr(_self_, _18213_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1aaa7cdab_VariadicExpr> _1ab739638_buildVariadic(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _19636_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _19717_token = _19636_tokens[(_19636_tokens.len() - 1LL)];;
	_19636_tokens=_19636_tokens.slice(0LL, (_19636_tokens.len() - 1LL));
	return jule::new_ptr<_1aaa7cdab_VariadicExpr>(_1aaa7cdab_VariadicExpr{._field_Token=_19717_token, ._field_Expr=_1ab741772_buildFromTokens(_self_, _19636_tokens)});;
}



inline jule::Ptr<_1aaa7ac22_RangeExpr> _1ab739979_buildBetweenParentheses(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _20546_tokens) {
	if ((_20546_tokens.len() == 2LL)) {
		_1ab736bc9_pushErr(_self_, _20546_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1ab73703c_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20546_tokens=_20546_tokens.slice(1LL, (_20546_tokens.len() - 1LL));
	return jule::new_ptr<_1aaa7ac22_RangeExpr>(_1aaa7ac22_RangeExpr{._field_Expr=_1ab741772_buildFromTokens(_self_, _20546_tokens)});;
}



inline jule::Ptr<_1aaa7d285_CastExpr> _1ab739cba_tryBuildCast(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _21736_tokens) {
	jule::I32 _21817_rangeN = 0LL;;
	{
		auto expr = _21736_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8443433:;
		if (it != expr_end) {
			jule::I32 _21913_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> _21916_token = *it;
			{
				{
					auto &_match_expr{ _21916_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a8444115:;
						{
							(_21817_rangeN)++;
							goto _iter_next_1a8443433;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a844418c:;
						{
							(_21817_rangeN)--;
						}
					}
					_match_end_1a844407c:;
				};
				if ((_21817_rangeN > 0LL)) {
					goto _iter_next_1a8443433;
				} else if (((_21913_i + 1LL) == (*(_21736_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _23821_typeTokens = (*(_21736_tokens)).slice(0LL, (_21913_i + 1LL));;
				jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _23921_exprTokens = (*(_21736_tokens)).slice((_21913_i + 1LL));;
				if ((_23921_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1c3e3a5e6_Token> _24617_tok = _23921_exprTokens[0LL];;
				if ((_24617_tok.get()._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1aaa7d285_CastExpr> _25121_cast = jule::new_ptr<_1aaa7d285_CastExpr>(_1aaa7d285_CastExpr{});;
				if ((_23921_exprTokens.len() == 2LL)) {
					_1ab736bc9_pushErr(_self_, _23921_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1ab73703c_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_23821_typeTokens.len() == 2LL)) {
					_1ab736bc9_pushErr(_self_, _23821_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1ab73703c_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_23821_typeTokens=_23821_typeTokens.slice(1LL, (_23821_typeTokens.len() - 1LL));
					jule::I32 _26525_typeIndex = 0LL;;
					jule::Ptr<_1aaa765e1_TypeDecl> _26626_t;;
					jule::Bool _26629_ok = false;;
					({
						__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType((*(_self_))._field_p, &(_23821_typeTokens), (&(_26525_typeIndex)), true);
						_26626_t = __jule_assign_result.__jule_result_arg0;
						_26629_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_26629_ok && (_26525_typeIndex < _23821_typeTokens.len()))) {
						_1ab736bc9_pushErr(_self_, _23821_typeTokens[_26525_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_26629_ok))) {
						return _25121_cast;;
					};
					_25121_cast.get()._field_Kind=_26626_t;
					if ((_23921_exprTokens.len() > 2LL)) {
						jule::I32 _27629_j = 0LL;;
						_1ab745402_range(&(_27629_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_23921_exprTokens));
						if ((_27629_j < _23921_exprTokens.len())) {
							return nullptr;;
						};
						_23921_exprTokens=_23921_exprTokens.slice(0LL, _27629_j);
						_25121_cast.get()._field_Expr=_1ab741772_buildFromTokens(_self_, _23921_exprTokens);
					};
				};
				return _25121_cast;;
			}
			_iter_next_1a8443433:;
			++it;
			_21913_i++;
			goto _iter_begin_1a8443433;
		}
		_iter_end_1a8443433:;
	};
	return nullptr;;
}



inline void _1ab73a1d8_pushArg(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aaa7a925_Expr>>* _29131_args, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _29150_tokens, jule::Ptr<_1c3e3a5e6_Token> _29168_err_token) {
	if ((_29150_tokens.len() == 0LL)) {
		_1ab736bc9_pushErr(_self_, _29168_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab73703c_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1aaa7a925_Expr>> &__jule_push_dest = (*(_29131_args)); __jule_push_dest.push(_1ab741772_buildFromTokens(_self_, _29150_tokens)); };
}



inline jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _1ab73a529_buildArgs(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _30032_tokens) {
	if ((_30032_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _30617_args = nullptr;;
	jule::I32 _30717_last = 0LL;;
	jule::I32 _30817_rangeN = 0LL;;
	_30032_tokens=_30032_tokens.slice(1LL, (_30032_tokens.len() - 1LL));
	{
		auto expr = &(_30032_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8450d58:;
		if (it != expr_end) {
			jule::I32 _31013_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> _31016_token = *it;
			{
				{
					auto &_match_expr{ _31016_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a8451d26:;
						{
							(_30817_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a8451d9d:;
						{
							(_30817_rangeN)--;
						}
					}
					_match_end_1a8451c8d:;
				};
				if (((_30817_rangeN > 0LL) || (_31016_token.get()._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1a8450d58;
				};
				_1ab73a1d8_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last, _31013_i), _31016_token);
				_30717_last=static_cast<jule::I32>((_31013_i + 1LL));
			}
			_iter_next_1a8450d58:;
			++it;
			_31013_i++;
			goto _iter_begin_1a8450d58;
		}
		_iter_end_1a8450d58:;
	};
	if ((_30717_last < _30032_tokens.len())) {
		if ((_30717_last == 0LL)) {
			if ((_30032_tokens.len() > 0LL)) {
				_1ab73a1d8_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last), _30032_tokens[_30717_last]);
			};
		} else {
			_1ab73a1d8_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last), _30032_tokens[(_30717_last - 1LL)]);
		};
	};
	return _30617_args;;
}



inline jule::Ptr<_1aaa7e72b_FnCallExpr> _1ab73ad21_buildFnCall(_1ab736415_exprBuilder* _self_, jule::Ptr<_1c3e3a5e6_Token>* _36635_token, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _36655_expr, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _36676_args) {
	return jule::new_ptr<_1aaa7e72b_FnCallExpr>(_1aaa7e72b_FnCallExpr{._field_Token=(*(_36635_token)), ._field_Expr=_1ab741772_buildFromTokens(_self_, (*(_36655_expr))), ._field_Args=_1ab73a529_buildArgs(_self_, (*(_36676_args))), });;
}



inline jule::Any _1ab73b162_buildParenthesesRange(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _37445_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _37517_token = (*(_37445_tokens))[0LL];;
	if ((_37517_token.get()._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_1aaa7d285_CastExpr> _37721_expr = _1ab739cba_tryBuildCast(_self_, _37445_tokens);;
		if ((_37721_expr != nullptr)) {
			return jule::Any(_37721_expr, &__jule_any_type110);;
		};
	};
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _38218_exprTokens;;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _38234_args_tokens;;
	({
		__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_sx_1c3e3a5e6_Token __jule_assign_result = _1ab7456bb_rangeLast(_37445_tokens);
		_38218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38218_exprTokens.len() == 0LL)) {
		return jule::Any(_1ab739979_buildBetweenParentheses(_self_, _38234_args_tokens), &__jule_any_type105);;
	};
	return jule::Any(_1ab73ad21_buildFnCall(_self_, &(_37517_token), &(_38218_exprTokens), &(_38234_args_tokens)), &__jule_any_type112);;
}



inline jule::Ptr<_1aaa7bd99_UnsafeExpr> _1ab73b4a3_buildUnsafeExpr(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _39138_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _39217_token = _39138_tokens[0LL];;
	_39138_tokens=_39138_tokens.slice(1LL);
	jule::I32 _39417_i = 0LL;;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _39517_rangeTokens = _1ab745402_range(&(_39417_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_39138_tokens));;
	if ((_39517_rangeTokens.len() == 0LL)) {
		_1ab736bc9_pushErr(_self_, _39138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aaa7bd99_UnsafeExpr>(_1aaa7bd99_UnsafeExpr{._field_Token=_39217_token, ._field_Expr=_1ab741772_buildFromTokens(_self_, _39517_rangeTokens)});;
}



inline jule::Ptr<_1aaa8837d_FnDecl> _1ab73b7e4_buildAnonFn(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _40635_tokens) {
	jule::Ptr<_1aaa8837d_FnDecl> _40717_f = _1ab74dc13_buildFn((*(_self_))._field_p, _40635_tokens, false, false);;
	if ((!(_1aaa886e1_IsAnon(_40717_f.ptr())))) {
		_1ab736bc9_pushErr(_self_, _40717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab73703c_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _40717_f;;
}



inline jule::Any _1ab73bb35_buildUnsafe(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _41535_tokens) {
	{
		auto &_match_expr{ (*(_41535_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1a8462111:;
			{
				return jule::Any(_1ab73b7e4_buildAnonFn(_self_, _41535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1a846252e:;
			{
				return jule::Any(_1ab73b4a3_buildUnsafeExpr(_self_, (*(_41535_tokens))), &__jule_any_type107);;
			}
		}
		_match_end_1a8462463:;
	};
}



inline void _1ab73c053_pushRangeLitPart(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _42539_part, jule::Ptr<_1c3e3a5e6_Token> _4269_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>>* _42634_parts) {
	if ((_42539_part.len() == 0LL)) {
		_1ab736bc9_pushErr(_self_, _4269_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab73703c_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> &__jule_push_dest = (*(_42634_parts)); __jule_push_dest.push(_42539_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _1ab73c394_getBraceRangeLitExprParts(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _43648_tokens) {
	if ((_43648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _44217_parts = nullptr;;
	jule::I32 _44417_last = 0LL;;
	jule::I32 _44517_rangeN = 0LL;;
	_43648_tokens=_43648_tokens.slice(1LL, (_43648_tokens.len() - 1LL));
	{
		auto expr = &(_43648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8466137:;
		if (it != expr_end) {
			jule::I32 _44713_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> _44716_token = *it;
			{
				{
					auto &_match_expr{ _44716_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a8467105:;
						{
							(_44517_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a846717c:;
						{
							(_44517_rangeN)--;
						}
					}
					_match_end_1a846706c:;
				};
				if (((_44517_rangeN > 0LL) || (_44716_token.get()._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1a8466137;
				};
				_1ab73c053_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last, _44713_i), _44716_token, &(_44217_parts));
				_44417_last=static_cast<jule::I32>((_44713_i + 1LL));
			}
			_iter_next_1a8466137:;
			++it;
			_44713_i++;
			goto _iter_begin_1a8466137;
		}
		_iter_end_1a8466137:;
	};
	if ((_44417_last < _43648_tokens.len())) {
		if ((_44417_last == 0LL)) {
			if ((_43648_tokens.len() > 0LL)) {
				_1ab73c053_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last), _43648_tokens[_44417_last], &(_44217_parts));
			};
		} else {
			_1ab73c053_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last), _43648_tokens[(_44417_last - 1LL)], &(_44217_parts));
		};
	};
	return _44217_parts;;
}



inline jule::Ptr<_1aaa80221_FieldExprPair> _1ab73c6d5_buildFieldExprPair(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _47841_tokens) {
	if (((_47841_tokens.len() - 2LL) == 0LL)) {
		_1ab736bc9_pushErr(_self_, _47841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aaa80221_FieldExprPair> _48317_pair = jule::new_ptr<_1aaa80221_FieldExprPair>(_1aaa80221_FieldExprPair{._field_Field=_47841_tokens[0LL], });;
	_47841_tokens=_47841_tokens.slice(2LL);
	_48317_pair.get()._field_Expr=_1ab741772_buildFromTokens(_self_, _47841_tokens);
	return _48317_pair;;
}



inline jule::Ptr<_1aaa7a925_Expr> _1ab73ca26_buildStructLitExpr(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _49142_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _49217_token = (*(_49142_tokens))[0LL];;
	if (((_49217_token.get()._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_49142_tokens)).len() > 1LL))) {
		_49217_token=(*(_49142_tokens))[1LL];
		if ((_49217_token.get()._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_1aaa7a925_Expr>(_1aaa7a925_Expr{._field_Token=_49217_token, ._field_End=(*(_49142_tokens))[((*(_49142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1ab73c6d5_buildFieldExprPair(_self_, (*(_49142_tokens))), &__jule_any_type84)});;
		};
	};
	return _1ab741772_buildFromTokens(_self_, (*(_49142_tokens)));;
}



inline jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _1ab73cd67_buildStructLitExprs(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _50643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _50717_parts = _1ab73c394_getBraceRangeLitExprParts(_self_, (*(_50643_tokens)));;
	if ((_50717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aaa7a925_Expr>> _51217_pairs = jule::Slice<jule::Ptr<_1aaa7a925_Expr>>::alloc(0LL, _50717_parts.len());;
	{
		auto expr = &(_50717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84702a6:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _51321_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaa7a925_Expr>> &__jule_push_dest = _51217_pairs; __jule_push_dest.push(_1ab73ca26_buildStructLitExpr(_self_, &(_51321_part))); };
			}
			_iter_next_1a84702a6:;
			++it;
			goto _iter_begin_1a84702a6;
		}
		_iter_end_1a84702a6:;
	};
	return _51217_pairs;;
}



inline jule::Ptr<_1aaa80a4b_StructLit> _1ab73d1a8_buildTypedStructLiteral(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _51946_tokens) {
	jule::I32 _52017_i = 0LL;;
	jule::Ptr<_1aaa765e1_TypeDecl> _52118_t;;
	jule::Bool _52121_ok = false;;
	({
		__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType((*(_self_))._field_p, &(_51946_tokens), (&(_52017_i)), true);
		_52118_t = __jule_assign_result.__jule_result_arg0;
		_52121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52121_ok))) {
		return nullptr;;
	} else if ((_52017_i >= _51946_tokens.len())) {
		_1ab736bc9_pushErr(_self_, _51946_tokens[_52017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_51946_tokens=_51946_tokens.slice(_52017_i);
	jule::Ptr<_1c3e3a5e6_Token> _53013_token = _51946_tokens[0LL];;
	if ((_53013_token.get()._field_Id != static_cast<jule::U32>(72LLU))) {
		_1ab736bc9_pushErr(_self_, _53013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aaa80a4b_StructLit>(_1aaa80a4b_StructLit{._field_End=_51946_tokens[(_51946_tokens.len() - 1LL)], ._field_Kind=_52118_t, ._field_Exprs=_1ab73cd67_buildStructLitExprs(_self_, &(_51946_tokens))});;
}



inline jule::Ptr<_1aaa7a925_Expr> _1ab73d4e9_buildBraceLitPart(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _54341_tokens) {
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _54418_l;;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _54425_r;;
	({
		__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_sx_1c3e3a5e6_Token __jule_assign_result = _1ab7425ca_splitDelim(_54341_tokens, static_cast<jule::U32>(8LLU));
		_54418_l = __jule_assign_result.__jule_result_arg0;
		_54425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54418_l != nullptr)) {
		return jule::new_ptr<_1aaa7a925_Expr>(_1aaa7a925_Expr{._field_Token=(*(_54341_tokens))[0LL], ._field_End=(*(_54341_tokens))[((*(_54341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1aaa8182c_KeyValPair>(_1aaa8182c_KeyValPair{._field_Key=_1ab741772_buildFromTokens(_self_, _54418_l), ._field_Val=_1ab741772_buildFromTokens(_self_, _54425_r), ._field_Colon=(*(_54341_tokens))[_54418_l.len()]}), &__jule_any_type85)});;
	};
	return _1ab741772_buildFromTokens(_self_, (*(_54341_tokens)));;
}



inline jule::Ptr<_1aaa81002_BraceLit> _1ab73d83a_buildBraceLit(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _56037_tokens) {
	jule::Ptr<_1aaa81002_BraceLit> _56117_lit = jule::new_ptr<_1aaa81002_BraceLit>(_1aaa81002_BraceLit{._field_Token=(*(_56037_tokens))[0LL], ._field_End=(*(_56037_tokens))[((*(_56037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _56617_parts = _1ab73c394_getBraceRangeLitExprParts(_self_, (*(_56037_tokens)));;
	if ((_56617_parts == nullptr)) {
		return _56117_lit;;
	};
	_56117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1aaa7a925_Expr>>::alloc(0LL, _56617_parts.len());
	{
		auto expr = &(_56617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a847969a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _57221_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaa7a925_Expr>> &__jule_push_dest = _56117_lit.get()._field_Exprs; __jule_push_dest.push(_1ab73d4e9_buildBraceLitPart(_self_, &(_57221_part))); };
			}
			_iter_next_1a847969a:;
			++it;
			goto _iter_begin_1a847969a;
		}
		_iter_end_1a847969a:;
	};
	return _56117_lit;;
}



inline jule::Any _1ab73db7b_buildBraceRange(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _57939_tokens) {
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _58018_exprTokens;;
	jule::I32 _58030_rangeN = 0;;
	({
		__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_int __jule_assign_result = _1ab742e27_getRangeExprTokens(_57939_tokens);
		_58018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58018_exprTokens.len() == 0LL)) {
			_case_begin_1a847a228:;
			{
				return jule::Any(_1ab73d83a_buildBraceLit(_self_, _57939_tokens), &__jule_any_type113);;
			}
		}
		else if ((_58030_rangeN > 0LL)) {
			_case_begin_1a847ad1c:;
			{
				_1ab736bc9_pushErr(_self_, (*(_57939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a847a338:;
	};
	jule::Ptr<_1c3e3a5e6_Token> _59113_elseToken = _58018_exprTokens[(_58018_exprTokens.len() - 1LL)];;
	if ((_58018_exprTokens[(_58018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U32>(14LLU))) {
		_58018_exprTokens=_58018_exprTokens.slice(0LL, (_58018_exprTokens.len() - 1LL));
		jule::Any _59421_d = _1ab7410e0_build(_self_, &(_58018_exprTokens));;
		if ((_59421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _59421_d };
			
			if (_match_expr.type == &__jule_any_type112) {
				_case_begin_1a847e00c:;
				{
					(*(_57939_tokens))=(*(_57939_tokens)).slice((_58018_exprTokens.len() + 1LL));
					jule::I32 _60125_i = 0LL;;
					jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _60225_rangeTokens = _1ab745402_range(&(_60125_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _57939_tokens);;
					jule::Ptr<_1aaa7e72b_FnCallExpr> _60325_model = _59421_d.cast_ptr<_1aaa7e72b_FnCallExpr>(&__jule_any_type112);;
					if (_1aaa7ed36_Ignored(_60325_model.ptr())) {
						_1ab736bc9_pushErr(_self_, _59113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1ab73703c_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_60325_model.get()._field_Exception=_1ab748b64_buildScope((*(_self_))._field_p, &(_60225_rangeTokens), (*(_57939_tokens))[(_60125_i - 1LL)]);
					return _59421_d;;
				}
			}
			else {
				_case_begin_1a847d9ce:;
				{
					_1ab736bc9_pushErr(_self_, _58018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1a847d979:;
		};
	};
	{
		auto &_match_expr{ _58018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1a848294a:;
			{
				return _1ab73bb35_buildUnsafe(_self_, _57939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1a8483077:;
			{
				return jule::Any(_1ab73b7e4_buildAnonFn(_self_, _57939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1a84830dd:;
			{
				return jule::Any(_1ab73d1a8_buildTypedStructLiteral(_self_, (*(_57939_tokens))), &__jule_any_type111);;
			}
		}
		else {
			_case_begin_1a847e4b3:;
			{
				_1ab736bc9_pushErr(_self_, _58018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8482450:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _1ab73debc_getEnumerableParts(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _63141_tokens) {
	_63141_tokens=_63141_tokens.slice(1LL, (_63141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _63318_parts;;
	jule::Slice<_1c3983b45_Log> _63325_errors;;
	({
		__jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab745b72_parts(&(_63141_tokens), static_cast<jule::U32>(5LLU), true);
		_63318_parts = __jule_assign_result.__jule_result_arg0;
		_63325_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_63325_errors);;
	return _63318_parts;;
}



inline jule::Ptr<_1aaa82025_SliceExpr> _1ab73e30d_buildSlice(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _63833_tokens) {
	jule::Ptr<_1aaa82025_SliceExpr> _63917_slc = jule::new_ptr<_1aaa82025_SliceExpr>(_1aaa82025_SliceExpr{._field_Token=_63833_tokens[0LL], ._field_End=_63833_tokens[(_63833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _64417_parts = _1ab73debc_getEnumerableParts(_self_, _63833_tokens);;
	if ((_64417_parts.len() == 0LL)) {
		return _63917_slc;;
	};
	_63917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1aaa7a925_Expr>>::alloc(0LL, _64417_parts.len());
	{
		auto expr = &(_64417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8487aa4:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _65021_p = *it;
			{
				if ((_65021_p.len() == 0LL)) {
					goto _iter_next_1a8487aa4;
				};
				{ jule::Slice<jule::Ptr<_1aaa7a925_Expr>> &__jule_push_dest = _63917_slc.get()._field_Exprs; __jule_push_dest.push(_1ab741772_buildFromTokens(_self_, _65021_p)); };
			}
			_iter_next_1a8487aa4:;
			++it;
			goto _iter_begin_1a8487aa4;
		}
		_iter_end_1a8487aa4:;
	};
	return _63917_slc;;
}



inline jule::Ptr<_1aaa829b5_IndexingExpr> _1ab73e7b4_buildIndexing(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _66036_exprTokens, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _66113_tokens, jule::Ptr<_1c3e3a5e6_Token> _66135_errorToken) {
	jule::Ptr<_1c3e3a5e6_Token> _66217_end = _66113_tokens[(_66113_tokens.len() - 1LL)];;
	_66113_tokens=_66113_tokens.slice(1LL, (_66113_tokens.len() - 1LL));
	if ((_66113_tokens.len() == 0LL)) {
		_1ab736bc9_pushErr(_self_, _66135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aaa7a925_Expr> _66817_expr = _1ab741772_buildFromTokens(_self_, _66036_exprTokens);;
	if ((_66817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aaa7a925_Expr> _67217_index = _1ab741772_buildFromTokens(_self_, _66113_tokens);;
	if ((_67217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aaa829b5_IndexingExpr>(_1aaa829b5_IndexingExpr{._field_Token=_66135_errorToken, ._field_End=_66217_end, ._field_Expr=_66817_expr, ._field_Index=_67217_index});;
}



inline jule::Ptr<_1aaa83125_SlicingExpr> _1ab73edd0_buildSlicing(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _68436_exprTokens, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _68463_start, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _68514_to, jule::Ptr<_1c3e3a5e6_Token>* _68533_errorToken, jule::Ptr<_1c3e3a5e6_Token> _68557_end) {
	jule::Ptr<_1aaa83125_SlicingExpr> _68617_slc = jule::new_ptr<_1aaa83125_SlicingExpr>(_1aaa83125_SlicingExpr{._field_Token=(*(_68533_errorToken)), ._field_End=_68557_end, ._field_Expr=_1ab741772_buildFromTokens(_self_, (*(_68436_exprTokens))), });;
	if (((*(_68463_start)).len() > 0LL)) {
		_68617_slc.get()._field_Start=_1ab741772_buildFromTokens(_self_, (*(_68463_start)));
	};
	if (((*(_68514_to)).len() > 0LL)) {
		_68617_slc.get()._field_To=_1ab741772_buildFromTokens(_self_, (*(_68514_to)));
	};
	return _68617_slc;;
}



inline jule::Any _1ab740221_buildBracketRange(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _70040_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _70117_errorToken = _70040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _70218_exprTokens;;
	jule::I32 _70230_rangeN = 0;;
	({
		__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_int __jule_assign_result = _1ab742e27_getRangeExprTokens(&(_70040_tokens));
		_70218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70218_exprTokens.len() == 0LL)) {
		return jule::Any(_1ab73e30d_buildSlice(_self_, _70040_tokens), &__jule_any_type100);;
	} else if ((_70230_rangeN > 0LL)) {
		_1ab736bc9_pushErr(_self_, _70117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_70040_tokens=_70040_tokens.slice(_70218_exprTokens.len());
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _71717_splitTokens = _70040_tokens.slice(1LL, (_70040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _71818_start;;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _71829_to;;
	({
		__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_sx_1c3e3a5e6_Token __jule_assign_result = _1ab7425ca_splitDelim(&(_71717_splitTokens), static_cast<jule::U32>(8LLU));
		_71818_start = __jule_assign_result.__jule_result_arg0;
		_71829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_71818_start != nullptr) || (_71829_to != nullptr))) {
		return jule::Any(_1ab73edd0_buildSlicing(_self_, &(_70218_exprTokens), &(_71818_start), &(_71829_to), &(_70117_errorToken), _70040_tokens[(_70040_tokens.len() - 1LL)]), &__jule_any_type109);;
	};
	return jule::Any(_1ab73e7b4_buildIndexing(_self_, _70218_exprTokens, _70040_tokens, _70117_errorToken), &__jule_any_type108);;
}



inline jule::Any _1ab740562_buildExclRight(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _72538_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _72613_token = (*(_72538_tokens))[((*(_72538_tokens)).len() - 1LL)];;
	(*(_72538_tokens))=(*(_72538_tokens)).slice(0LL, ((*(_72538_tokens)).len() - 1LL));
	jule::Any _72817_d = _1ab7410e0_build(_self_, _72538_tokens);;
	if ((_72817_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _72817_d };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1a84951aa:;
			{
				_72817_d.cast_ptr<_1aaa7e72b_FnCallExpr>(&__jule_any_type112).get()._field_Exception=jule::new_ptr<_1aaa866de_ScopeTree>(_1aaa866de_ScopeTree{._field_Deferred=true, });
				return _72817_d;;
			}
		}
		_match_end_1a8494e35:;
	};
	_1ab736bc9_pushErr(_self_, _72613_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ab7408a3_buildData(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _74333_tokens) {
	{
		auto _match_expr{ (*(_74333_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a8496761:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a84967c7:;
			{
				return _1ab737d51_buildSingle(_self_, (*(_74333_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1a849684e:;
			{
				if (((*(_74333_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_1ab738192_buildBindIdent(_self_, _74333_tokens), &__jule_any_type86);;
				};
			}
		}
		_match_end_1a8496574:;
	};
	jule::Ptr<_1c3e3a5e6_Token> _75517_token = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
	if ((_75517_token.get()._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_1ab739638_buildVariadic(_self_, (*(_74333_tokens))), &__jule_any_type82);;
	};
	_75517_token=(*(_74333_tokens))[0LL];
	if (_1c3e3ad33_IsUnaryOp(_75517_token.get()._field_Id)) {
		if (((*(_74333_tokens)).len() > 1LL)) {
			_75517_token=(*(_74333_tokens))[1LL];
			if ((_75517_token.get()._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_1ab738ea6_buildType(_self_, _74333_tokens), &__jule_any_type95);;
			};
		};
		return jule::Any(_1ab7384d3_buildUnary(_self_, (*(_74333_tokens))), &__jule_any_type94);;
	};
	if (((*(_74333_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ _75517_token.get()._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_1a849aa0c:;
				{
					if (((*(_74333_tokens)).len() > 3LL)) {
						jule::Ptr<_1c3e3a5e6_Token> _78125_t = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
						if ((_78125_t.get()._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_1a849a985;
						};
					};
					jule::Ptr<_1c3e3a5e6_Token> _78721_next = (*(_74333_tokens))[1LL];;
					if ((_78721_next.get()._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_1a849a985;
					};
					return jule::Any(_1ab738ea6_buildType(_self_, _74333_tokens), &__jule_any_type95);;
				}
			}
			_match_end_1a849a985:;
		};
	};
	_75517_token=(*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _75517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1a849d6e1:;
			{
				return _1ab7392e7_buildSubIdent(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1a849d757:;
			{
				return _1ab740562_buildExclRight(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1a849d7bd:;
			{
				return _1ab73b162_buildParenthesesRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1a849d845:;
			{
				return _1ab73db7b_buildBraceRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1a849d8bc:;
			{
				return _1ab740221_buildBracketRange(_self_, (*(_74333_tokens)));;
			}
		}
		_match_end_1a8498488:;
	};
	if ((_75517_token.get()._field_Id == static_cast<jule::U32>(29LLU))) {
		return jule::Any(_1ab738ea6_buildType(_self_, _74333_tokens), &__jule_any_type95);;
	};
	_1ab736bc9_pushErr(_self_, _75517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1ab740c9e_buildBinop(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _81834_tokens, jule::I32 _81852_i) {
	jule::Ptr<_1c3e3a5e6_Token> _81917_op = (*(_81834_tokens))[_81852_i];;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _82017_leftTokens = (*(_81834_tokens)).slice(0LL, _81852_i);;
	if ((_1ab741b3a_isTypeOp(&(_81917_op.get()._field_Id)) && _1ab741e48_isTypeRange(&(_82017_leftTokens)))) {
		return jule::Any(_1ab738ea6_buildType(_self_, _81834_tokens), &__jule_any_type95);;
	};
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _82517_rightTokens = (*(_81834_tokens)).slice((_81852_i + 1LL));;
	if ((_82017_leftTokens.len() == 0LL)) {
		_1ab736bc9_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab73703c_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82517_rightTokens.len() == 0LL)) {
		_1ab736bc9_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab73703c_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1aaa7e0bb_BinopExpr>(_1aaa7e0bb_BinopExpr{._field_Left=_1ab741772_buildFromTokens(_self_, _82017_leftTokens), ._field_Right=_1ab741772_buildFromTokens(_self_, _82517_rightTokens), ._field_Op=_81917_op}), &__jule_any_type114);;
}



inline jule::Any _1ab7410e0_build(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _84329_tokens) {
	if (((*(_84329_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_1ab738ea6_buildType(_self_, _84329_tokens), &__jule_any_type95);;
	};
	jule::I32 _84713_i = _1ab742894_findLowestPrecOp(_84329_tokens);;
	if ((_84713_i == -1LL)) {
		return _1ab7408a3_buildData(_self_, _84329_tokens);;
	};
	return _1ab740c9e_buildBinop(_self_, _84329_tokens, _84713_i);;
}



inline jule::Any _1ab741431_buildKind(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _85433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _85518_parts;;
	jule::Slice<_1c3983b45_Log> _85525_errors;;
	({
		__jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab745b72_parts(_85433_tokens, static_cast<jule::U32>(5LLU), true);
		_85518_parts = __jule_assign_result.__jule_result_arg0;
		_85525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85525_errors != nullptr)) {
		((*(_self_))._field_p.get()._field_errors).append(_85525_errors);;
		return nullptr;;
	} else if ((_85518_parts.len() > 1LL)) {
		return jule::Any(_1ab73737d_buildTuple(_self_, &(_85518_parts)), &__jule_any_type87);;
	};
	return _1ab7410e0_build(_self_, _85433_tokens);;
}



inline jule::Ptr<_1aaa7a925_Expr> _1ab741772_buildFromTokens(_1ab736415_exprBuilder* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _86538_tokens) {
	if ((_86538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _86917_kind = _1ab741431_buildKind(_self_, &(_86538_tokens));;
	if ((_86917_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aaa7a925_Expr>(_1aaa7a925_Expr{._field_Token=_86538_tokens[0LL], ._field_End=_86538_tokens[(_86538_tokens.len() - 1LL)], ._field_Kind=_86917_kind});;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab736415_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab743873_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1ab747316_stop(_1ab747019_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1ab74759c_stopped(_1ab747019_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1ab7479ba_pushErr(_1ab747019_parser* _self_, jule::Ptr<_1c3e3a5e6_Token> _23626_token, jule::Str _23641_fmt, jule::Slice<jule::Any> _23654_args) {
	{ jule::Slice<_1c3983b45_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1ab74636a_compilerErr(&(_23626_token), &(_23641_fmt), _23654_args)); };
}



inline void _1ab747d2d_pushSuggestion(_1ab747019_parser* _self_, jule::Str _24133_fmt, jule::Slice<jule::Any> _24146_args) {
	{
		_1ab746711_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _24133_fmt, _24146_args);
	};
}



inline jule::Ptr<_1aaa7a925_Expr> _1ab74816e_buildExpr(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _24534_tokens) {
	return _1ab741772_buildFromTokens(_self_.get()._field_ep.ptr(), (*(_24534_tokens)));;
}



inline jule::Ptr<_1aaa42c61_Directive> _1ab7484b0_buildDirective(_1ab747019_parser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _24937_tokens) {
	if ((_24937_tokens.len() == 1LL)) {
		_1ab7479ba_pushErr(_self_, _24937_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_24937_tokens[1LL].get()._field_Column != (_24937_tokens[0LL].get()._field_Column + 1LL))) {
		_1ab7479ba_pushErr(_self_, _24937_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aaa42c61_Directive>(_1aaa42c61_Directive{._field_Tag=_24937_tokens[1LL], ._field_Args=_24937_tokens.slice(2LL)});;
}



inline void _1ab748768_pushDirective(_1ab747019_parser* _self_, jule::Ptr<_1aaa42c61_Directive> _26436_d) {
	if ((_26436_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a90db65d:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42c61_Directive> _26916_pd = *it;
			{
				if ((_26436_d.get()._field_Tag.get()._field_Kind == _26916_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1a90db65d:;
			++it;
			goto _iter_begin_1a90db65d;
		}
		_iter_end_1a90db65d:;
	};
	{ jule::Slice<jule::Ptr<_1aaa42c61_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_26436_d); };
}



inline jule::Ptr<_1aaa866de_ScopeTree> _1ab748b64_buildScope(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _27735_tokens, jule::Ptr<_1c3e3a5e6_Token> _27757_end) {
	jule::Ptr<_1aaa866de_ScopeTree> _27817_s = _1ab72723b_newScope();;
	_27817_s.get()._field_End=_27757_end;
	_1ab728d42_scopeParser _28017_sp = _1ab728d42_scopeParser{._field_p=_self_, };;
	_1ab735898_build(&_28017_sp, _27735_tokens, &(_27817_s));
	return _27817_s;;
}



inline __jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool _1ab74911a__buildType(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _28742_tokens, jule::I32* _28813_i, jule::Bool _28822_err) {
	__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1ab758d83_typeBuilder _28917_tb = _1ab758d83_typeBuilder{._field_p=_self_, ._field_tokens=(*(_28742_tokens)), ._field_i=_28813_i, ._field_err=_28822_err};;
	jule::Ptr<_1aaa765e1_TypeDecl> _29518_decl;;
	jule::Bool _29524_ok = false;;
	({
		__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab75bd64_build(&_28917_tb);
		_29518_decl = __jule_assign_result.__jule_result_arg0;
		_29524_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _29518_decl;
	__jule_func_result.__jule_result_arg1 = _29524_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool _1ab7495c1_buildType(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _30041_tokens, jule::I32* _30113_i, jule::Bool _30122_err) {
	__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1c3e3a5e6_Token> _30213_token = (*(_30041_tokens))[(*(_30113_i))];;
	jule::Ptr<_1aaa765e1_TypeDecl> _30318_t;;
	jule::Bool _30321_ok = false;;
	({
		__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab74911a__buildType(_self_, _30041_tokens, _30113_i, _30122_err);
		_30318_t = __jule_assign_result.__jule_result_arg0;
		_30321_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_30122_err && (!(_30321_ok)))) {
		_1ab7479ba_pushErr(_self_.ptr(), _30213_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _30318_t;
	__jule_func_result.__jule_result_arg1 = _30321_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1aaa8d031_TypeAliasDecl> _1ab749912_buildTypeAliasDecl(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _31043_tokens) {
	jule::I32 _31117_i = 1LL;;
	if ((_31117_i >= (*(_31043_tokens)).len())) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aaa8d031_TypeAliasDecl> _31617_tad = jule::new_ptr<_1aaa8d031_TypeAliasDecl>(_1aaa8d031_TypeAliasDecl{._field_Token=(*(_31043_tokens))[1LL], ._field_Ident=(*(_31043_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_1c3e3a5e6_Token> _32017_token = (*(_31043_tokens))[_31117_i];;
	if ((_32017_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab7479ba_pushErr(_self_.ptr(), _32017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_31117_i)++;
	if ((_31117_i >= (*(_31043_tokens)).len())) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _31617_tad;;
	};
	_32017_token=(*(_31043_tokens))[_31117_i];
	if ((_32017_token.get()._field_Id != static_cast<jule::U32>(8LLU))) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _31617_tad;;
	};
	(_31117_i)++;
	if ((_31117_i >= (*(_31043_tokens)).len())) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _31617_tad;;
	};
	jule::Ptr<_1aaa765e1_TypeDecl> _34118_t;;
	jule::Bool _34121_ok = false;;
	({
		__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, _31043_tokens, (&(_31117_i)), true);
		_34118_t = __jule_assign_result.__jule_result_arg0;
		_34121_ok = __jule_assign_result.__jule_result_arg1;
	});
	_31617_tad.get()._field_Kind=_34118_t;
	if ((_34121_ok && (_31117_i < (*(_31043_tokens)).len()))) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_31043_tokens))[_31117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_31617_tad.get()._field_Public=_1aab42d83_IsPub(&(_31617_tad.get()._field_Ident));
	return _31617_tad;;
}



inline void _1ab749c75_buildVarTypeAndExpr(jule::Ptr<_1ab747019_parser> _self_, jule::Ptr<_1aaa8945b_VarDecl>* _35044_v, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _35062_tokens) {
	jule::I32 _35117_i = 0LL;;
	jule::Ptr<_1c3e3a5e6_Token> _35217_tok = (*(_35062_tokens))[_35117_i];;
	if ((_35217_tok.get()._field_Id == static_cast<jule::U32>(8LLU))) {
		(_35117_i)++;
		if (((_35117_i >= (*(_35062_tokens)).len()) || ((*(_35062_tokens))[_35117_i].get()._field_Id == static_cast<jule::U32>(71LLU)))) {
			_1ab7479ba_pushErr(_self_.ptr(), _35217_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1aaa765e1_TypeDecl> _35922_t;;
		jule::Bool _35925_ok = false;;
		({
			__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, _35062_tokens, (&(_35117_i)), true);
			_35922_t = __jule_assign_result.__jule_result_arg0;
			_35925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_35925_ok) {
			(*(_35044_v)).get()._field_Kind=_35922_t;
			if ((_35117_i >= (*(_35062_tokens)).len())) {
				return;;
			};
			_35217_tok=(*(_35062_tokens))[_35117_i];
		};
	};
	if ((_35217_tok.get()._field_Id != static_cast<jule::U32>(71LLU))) {
		_1ab7479ba_pushErr(_self_.ptr(), _35217_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _37417_exprTokens = (*(_35062_tokens)).slice((_35117_i + 1LL));;
	if ((_37417_exprTokens.len() == 0LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), _35217_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_35044_v)).get()._field_Expr=_1ab74816e_buildExpr(_self_, &(_37417_exprTokens));
}



inline void _1ab74a0d8_buildVarCommon(jule::Ptr<_1ab747019_parser> _self_, jule::Ptr<_1aaa8945b_VarDecl>* _38239_v, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _38256_tokens) {
	(*(_38239_v)).get()._field_Token=_38256_tokens[0LL];
	if (((*(_38239_v)).get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_38239_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_38239_v)).get()._field_Ident=(*(_38239_v)).get()._field_Token.get()._field_Kind;
	(*(_38239_v)).get()._field_Public=_1aab42d83_IsPub(&((*(_38239_v)).get()._field_Ident));
	(*(_38239_v)).get()._field_Kind=nullptr;
	if ((_38256_tokens.len() > 1LL)) {
		_38256_tokens=_38256_tokens.slice(1LL);
		_1ab749c75_buildVarTypeAndExpr(_self_, _38239_v, &(_38256_tokens));
	};
}



inline void _1ab74a506_buildVarBegin(_1ab747019_parser* _self_, jule::Ptr<_1aaa8945b_VarDecl>* _39837_v, jule::I32* _39855_i, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _39864_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _39913_tok = (*(_39864_tokens))[(*(_39855_i))];;
	{
		auto &_match_expr{ _39913_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1a9103103:;
			{
				(*(_39837_v)).get()._field_Statically=true;
				goto _case_begin_1a9103dc3;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1a9103dc3:;
			{
				((*(_39855_i)))++;
				if (((*(_39855_i)) >= (*(_39864_tokens)).len())) {
					_1ab7479ba_pushErr(_self_, _39913_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_39864_tokens))[(*(_39855_i))].get()._field_Id == static_cast<jule::U32>(32LLU))) {
					(*(_39837_v)).get()._field_Mutable=true;
					((*(_39855_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1a9103642:;
			{
				((*(_39855_i)))++;
				(*(_39837_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1a91035cb:;
			{
				_1ab7479ba_pushErr(_self_, _39913_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1a9103576:;
	};
	if (((*(_39855_i)) >= (*(_39864_tokens)).len())) {
		_1ab7479ba_pushErr(_self_, _39913_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1aaa8945b_VarDecl> _1ab74a847_buildVar(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _42832_tokens) {
	jule::I32 _42917_i = 0LL;;
	jule::Ptr<_1aaa8945b_VarDecl> _43017_v = jule::new_ptr<_1aaa8945b_VarDecl>(_1aaa8945b_VarDecl{._field_Token=_42832_tokens[0LL], });;
	_1ab74a506_buildVarBegin(_self_.ptr(), &(_43017_v), &(_42917_i), &(_42832_tokens));
	if ((_42917_i >= _42832_tokens.len())) {
		return nullptr;;
	};
	_42832_tokens=_42832_tokens.slice(_42917_i);
	if ((_42832_tokens[0LL].get()._field_Id == static_cast<jule::U32>(65LLU))) {
		_43017_v.get()._field_Reference=true;
		if ((_42832_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_42832_tokens=_42832_tokens.slice(1LL);
	};
	_1ab74a0d8_buildVarCommon(_self_, &(_43017_v), _42832_tokens);
	return _43017_v;;
}



inline jule::Ptr<_1aaa838c8_GenericDecl> _1ab74ab88_buildGeneric(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _45037_tokens) {
	jule::Ptr<_1aaa838c8_GenericDecl> _45117_g = jule::new_ptr<_1aaa838c8_GenericDecl>(_1aaa838c8_GenericDecl{._field_Token=(*(_45037_tokens))[0LL], });;
	if ((_45117_g.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab7479ba_pushErr(_self_.ptr(), _45117_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_45117_g.get()._field_Ident=_45117_g.get()._field_Token.get()._field_Kind;
	if (((*(_45037_tokens)).len() > 1LL)) {
		if (((*(_45037_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(8LLU))) {
			_1ab7479ba_pushErr(_self_.ptr(), (*(_45037_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_45037_tokens)).len() == 2LL)) {
			_1ab7479ba_pushErr(_self_.ptr(), (*(_45037_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _46821_constraintTokens = (*(_45037_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _46922_parts;;
		jule::Slice<_1c3983b45_Log> _46929_errors;;
		({
			__jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab745b72_parts(&(_46821_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_46922_parts = __jule_assign_result.__jule_result_arg0;
			_46929_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_46929_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_46929_errors);;
			return nullptr;;
		};
		_45117_g.get()._field_Constraint=jule::new_ptr<_1aaa83422_Constraint>(_1aaa83422_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>>::alloc(0LL, _46922_parts.len())});
		{
			auto expr = &(_46922_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a910de77:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _47525_part = *it;
				{
					jule::I32 _47625_i = 0LL;;
					jule::Ptr<_1aaa765e1_TypeDecl> _47726_kind;;
					({
						__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, &(_47525_part), (&(_47625_i)), true);
						_47726_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> &__jule_push_dest = _45117_g.get()._field_Constraint.get()._field_Mask; __jule_push_dest.push(_47726_kind); };
					if ((_47625_i < _47525_part.len())) {
						_1ab7479ba_pushErr(_self_.ptr(), _47525_part[_47625_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1a910de77:;
				++it;
				goto _iter_begin_1a910de77;
			}
			_iter_end_1a910de77:;
		};
	};
	return _45117_g;;
}



inline jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>> _1ab74b084_buildGenerics(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _48738_tokens, jule::Ptr<_1c3e3a5e6_Token>* _48757_errorToken) {
	if (((*(_48738_tokens)).len() == 0LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_48757_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _49318_parts;;
	jule::Slice<_1c3983b45_Log> _49325_errors;;
	({
		__jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab745b72_parts(_48738_tokens, static_cast<jule::U32>(5LLU), true);
		_49318_parts = __jule_assign_result.__jule_result_arg0;
		_49325_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_49325_errors.len() > 0LL)) {
		(_self_.get()._field_errors).append(_49325_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>> _49917_generics = jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>>::alloc(0LL, _49318_parts.len());;
	{
		auto expr = &(_49318_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9113b5d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _50021_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>> &__jule_push_dest = _49917_generics; __jule_push_dest.push(_1ab74ab88_buildGeneric(_self_, &(_50021_part))); };
			}
			_iter_next_1a9113b5d:;
			++it;
			goto _iter_begin_1a9113b5d;
		}
		_iter_end_1a9113b5d:;
	};
	return _49917_generics;;
}



inline jule::Ptr<_1aaa86e2b_ParamDecl> _1ab74b3c5_buildSelfParam(_1ab747019_parser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _50737_tokens) {
	if ((_50737_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1aaa86e2b_ParamDecl> _51217_param = jule::new_ptr<_1aaa86e2b_ParamDecl>();;
	jule::I32 _51517_i = 0LL;;
	if ((_50737_tokens[_51517_i].get()._field_Id == static_cast<jule::U32>(32LLU))) {
		_51217_param.get()._field_Mutable=true;
		(_51517_i)++;
		if ((_51517_i >= _50737_tokens.len())) {
			_1ab7479ba_pushErr(_self_, _50737_tokens[(_51517_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_1c38d3b83_StrBuilder _52517_ident = static__1c38d3ea2_New(5LL);;
	if ((_50737_tokens[_51517_i].get()._field_Id == static_cast<jule::U32>(65LLU))) {
		_1c38dc94a_WriteStr(&_52517_ident, jule::Str("&", 1));
		(_51517_i)++;
		if ((_51517_i >= _50737_tokens.len())) {
			_1ab7479ba_pushErr(_self_, _50737_tokens[(_51517_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_50737_tokens[_51517_i].get()._field_Id == static_cast<jule::U32>(24LLU))) {
		_1c38dc94a_WriteStr(&_52517_ident, jule::Str("self", 4));
		_51217_param.get()._field_Token=_50737_tokens[_51517_i];
		(_51517_i)++;
		if ((_51517_i < _50737_tokens.len())) {
			_1ab7479ba_pushErr(_self_, _50737_tokens[_51517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	_51217_param.get()._field_Ident=_1c38dd242_Str(&_52517_ident);
	return _51217_param;;
}



inline void _1ab74b7e3_paramTypeBegin(_1ab747019_parser* _self_, jule::Ptr<_1aaa86e2b_ParamDecl>* _54938_param, jule::I32* _54962_i, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _54971_tokens) {
	for (; ((*(_54962_i)) < (*(_54971_tokens)).len()); ((*(_54962_i)))++) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _55117_token = (*(_54971_tokens))[(*(_54962_i))];;
			if ((_55117_token.get()._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*(_54938_param)).get()._field_Variadic) {
				_1ab7479ba_pushErr(_self_, _55117_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1a911a7ad;
			};
			(*(_54938_param)).get()._field_Variadic=true;
		}
	_iter_next_1a911a7ad:;
	}
	_iter_end_1a911a7ad:;;
}



inline void _1ab74bb56_buildParamType(jule::Ptr<_1ab747019_parser> _self_, jule::Ptr<_1aaa86e2b_ParamDecl>* _56439_param, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _56463_tokens) {
	jule::I32 _56517_i = 0LL;;
	_1ab74b7e3_paramTypeBegin(_self_.ptr(), _56439_param, &(_56517_i), _56463_tokens);
	if ((_56517_i >= (*(_56463_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, _56463_tokens, (&(_56517_i)), true);
		(*(_56439_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_56517_i < (*(_56463_tokens)).len())) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_56463_tokens))[_56517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1ab74beb9_buildParamBody(jule::Ptr<_1ab747019_parser> _self_, jule::Ptr<_1aaa86e2b_ParamDecl>* _57739_param, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _57762_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _57817_tok = _57762_tokens[0LL];;
	if ((_57762_tokens.len() == 1LL)) {
		(*(_57739_param)).get()._field_Ident=_57817_tok.get()._field_Kind;
		return;;
	} else if ((_57762_tokens.len() < 3LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), _57817_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_57762_tokens[1LL].get()._field_Id != static_cast<jule::U32>(8LLU))) {
		(*(_57739_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_1ab74bb56_buildParamType(_self_, _57739_param, &(_57762_tokens));
		return;;
	};
	(*(_57739_param)).get()._field_Ident=_57817_tok.get()._field_Kind;
	_57762_tokens=_57762_tokens.slice(2LL);
	_1ab74bb56_buildParamType(_self_, _57739_param, &(_57762_tokens));
}



inline jule::Ptr<_1aaa86e2b_ParamDecl> _1ab74c30a_buildParam(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _59734_tokens) {
	jule::Ptr<_1aaa86e2b_ParamDecl> _59817_param = jule::new_ptr<_1aaa86e2b_ParamDecl>(_1aaa86e2b_ParamDecl{._field_Token=_59734_tokens[0LL], });;
	if ((_59817_param.get()._field_Token.get()._field_Id == static_cast<jule::U32>(32LLU))) {
		_59817_param.get()._field_Mutable=true;
		if ((_59734_tokens.len() == 1LL)) {
			_1ab7479ba_pushErr(_self_.ptr(), _59734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_59734_tokens=_59734_tokens.slice(1LL);
		_59817_param.get()._field_Token=_59734_tokens[0LL];
	};
	if ((_59734_tokens.len() >= 3LL)) {
		if ((_59817_param.get()._field_Token.get()._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_59734_tokens.len() == 1LL)) {
				_1ab7479ba_pushErr(_self_.ptr(), _59734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_59734_tokens[1LL].get()._field_Id == static_cast<jule::U32>(1LLU)) && (_59734_tokens[2LL].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
				_59817_param.get()._field_Reference=true;
				_59734_tokens=_59734_tokens.slice(1LL);
				_59817_param.get()._field_Token=_59734_tokens[0LL];
			};
		};
	};
	if ((_59817_param.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_59817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1ab74bb56_buildParamType(_self_, &(_59817_param), &(_59734_tokens));
	} else {
		_1ab74beb9_buildParamBody(_self_, &(_59817_param), _59734_tokens);
	};
	return _59817_param;;
}



inline void _1ab74c5b3_checkParams(_1ab747019_parser* _self_, jule::Slice<jule::Ptr<_1aaa86e2b_ParamDecl>>* _64035_params) {
	{
		auto expr = _64035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9128117:;
		if (it != expr_end) {
			jule::Ptr<_1aaa86e2b_ParamDecl> _64121_param = *it;
			{
				if ((_1aaa872a0_IsSelf(_64121_param.ptr()) || (_64121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1a9128117;
				};
				if ((_64121_param.get()._field_Token == nullptr)) {
					_1ab7479ba_pushErr(_self_, _64121_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_64121_param.get()._field_Kind=jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=_64121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1aaa76beb_IdentTypeDecl>(_1aaa76beb_IdentTypeDecl{._field_Token=_64121_param.get()._field_Token, ._field_Ident=_64121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type20)});
					_64121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1a9128117:;
			++it;
			goto _iter_begin_1a9128117;
		}
		_iter_end_1a9128117:;
	};
}



inline jule::Slice<jule::Ptr<_1aaa86e2b_ParamDecl>> _1ab74c9ae_buildParams(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _66036_tokens, jule::Bool _66054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _66118_parts;;
	jule::Slice<_1c3983b45_Log> _66125_errs;;
	({
		__jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab745b72_parts(_66036_tokens, static_cast<jule::U32>(5LLU), true);
		_66118_parts = __jule_assign_result.__jule_result_arg0;
		_66125_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_66125_errs);;
	if ((_66118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aaa86e2b_ParamDecl>> _66717_params = nullptr;;
	if ((_66054_method && (_66118_parts.len() > 0LL))) {
		jule::Ptr<_1aaa86e2b_ParamDecl> _66921_param = _1ab74b3c5_buildSelfParam(_self_.ptr(), _66118_parts[0LL]);;
		if (((_66921_param != nullptr) && _1aaa872a0_IsSelf(_66921_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1aaa86e2b_ParamDecl>> &__jule_push_dest = _66717_params; __jule_push_dest.push(_66921_param); };
			_66118_parts=_66118_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_66118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a912d194:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _67621_part = *it;
			{
				jule::Ptr<_1aaa86e2b_ParamDecl> _67721_param = _1ab74c30a_buildParam(_self_, _67621_part);;
				if ((_67721_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1aaa86e2b_ParamDecl>> &__jule_push_dest = _66717_params; __jule_push_dest.push(_67721_param); };
				};
			}
			_iter_next_1a912d194:;
			++it;
			goto _iter_begin_1a912d194;
		}
		_iter_end_1a912d194:;
	};
	_1ab74c5b3_checkParams(_self_.ptr(), &(_66717_params));
	return _66717_params;;
}



inline __jule_tuple_x_1aaa794d4_RetTypeDecl__jule_tuple_bool _1ab74cdaa_buildMultiRetType(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _68742_tokens, jule::I32* _68765_i) {
	__jule_tuple_x_1aaa794d4_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1aaa794d4_RetTypeDecl>();
	((*(_68765_i)))++;
	if (((*(_68765_i)) >= (*(_68742_tokens)).len())) {
		((*(_68765_i)))--;
		({
			__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, _68742_tokens, (&((*(_68765_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_68765_i)))--;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _69717_rangeTokens = _1ab745402_range(_68765_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _68742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _69918_parts;;
	jule::Slice<_1c3983b45_Log> _69925_errs;;
	({
		__jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab745b72_parts(&(_69717_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_69918_parts = __jule_assign_result.__jule_result_arg0;
		_69925_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_69925_errs);;
	if ((_69918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> _70517_types = jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>>::alloc(0LL, _69918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>::alloc(0LL, _69918_parts.len());
	{
		auto expr = &(_69918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9133919:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _70721_part = *it;
			{
				jule::Ptr<_1c3e3a5e6_Token> _70821_token = _70721_part[0LL];;
				jule::I32 _70921_offset = 0LL;;
				if ((_70721_part.len() > 1LL)) {
					_70821_token=_70721_part[1LL];
					if ((_70821_token.get()._field_Id == static_cast<jule::U32>(8LLU))) {
						_70921_offset=2LL;
						if ((_70721_part.len() < 3LL)) {
							_1ab7479ba_pushErr(_self_.ptr(), _70821_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1a9133919;
						};
					};
				};
				_70821_token=_70721_part[0LL];
				if ((_70921_offset != 2LL)) {
					jule::Ptr<_1c3e3a5e6_Token> _72525_newToken = jule::new_ptr<_1c3e3a5e6_Token>((*(_70821_token)));;
					_72525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_72525_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_70821_token); };
				};
				jule::Ptr<_1aaa765e1_TypeDecl> _73222_tk;;
				({
					__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, &(_70721_part), (&(_70921_offset)), true);
					_73222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_70921_offset < _70721_part.len())) {
					_1ab7479ba_pushErr(_self_.ptr(), _70721_part[_70921_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> &__jule_push_dest = _70517_types; __jule_push_dest.push(_73222_tk); };
			}
			_iter_next_1a9133919:;
			++it;
			goto _iter_begin_1a9133919;
		}
		_iter_end_1a9133919:;
	};
	if ((_70517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=(*(_68742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1aaa77d1d_TupleTypeDecl>(_1aaa77d1d_TupleTypeDecl{._field_Types=_70517_types}), &__jule_any_type80)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_70517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aaa794d4_RetTypeDecl__jule_tuple_bool _1ab74d2a6_buildRetType(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _75537_tokens, jule::I32* _75560_i) {
	__jule_tuple_x_1aaa794d4_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1aaa794d4_RetTypeDecl>();
	if (((*(_75560_i)) >= (*(_75537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1c3e3a5e6_Token> _76117_token = (*(_75537_tokens))[(*(_75560_i))];;
	{
		auto &_match_expr{ _76117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1a913b4e3:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1a913b56a:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1a913b5e2:;
			{
				if ((((*(_75560_i)) + 1LL) >= (*(_75537_tokens)).len())) {
					_1ab7479ba_pushErr(_self_.ptr(), _76117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_75560_i)))++;
				_76117_token=(*(_75537_tokens))[(*(_75560_i))];
				{
					auto &_match_expr{ _76117_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a913d193:;
						{
							({
								__jule_tuple_x_1aaa794d4_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ab74cdaa_buildMultiRetType(_self_, _75537_tokens, _75560_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1a913d209:;
						{
							_1ab7479ba_pushErr(_self_.ptr(), _76117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1a913d13d:;
				};
				({
					__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, _75537_tokens, (&((*(_75560_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1a913aa75:;
	};
	((*(_75560_i)))++;
	_1ab7479ba_pushErr(_self_.ptr(), _76117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1aaa8837d_FnDecl> _1ab74d75c_buildFnPrototype(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _79441_tokens, jule::I32* _79464_i, jule::Bool _79472_method) {
	jule::Ptr<_1aaa8837d_FnDecl> _79517_f = jule::new_ptr<_1aaa8837d_FnDecl>(_1aaa8837d_FnDecl{._field_Token=(*(_79441_tokens))[(*(_79464_i))], });;
	if ((_79517_f.get()._field_Token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		_79517_f.get()._field_Statically=true;
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1ab7479ba_pushErr(_self_.ptr(), _79517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_79517_f.get()._field_Token=(*(_79441_tokens))[(*(_79464_i))];
	};
	if ((_79517_f.get()._field_Token.get()._field_Id == static_cast<jule::U32>(31LLU))) {
		_79517_f.get()._field_Unsafety=true;
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1ab7479ba_pushErr(_self_.ptr(), _79517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_79517_f.get()._field_Token=(*(_79441_tokens))[(*(_79464_i))];
	};
	((*(_79464_i)))++;
	if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
		_1ab7479ba_pushErr(_self_.ptr(), _79517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1c3e3a5e6_Token> _82813_tok = (*(_79441_tokens))[(*(_79464_i))];;
	if ((_82813_tok.get()._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1ab7479ba_pushErr(_self_.ptr(), _79517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_79517_f.get()._field_Ident=_82813_tok.get()._field_Kind;
	} else {
		_79517_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1c3e3a5e6_Token> _84013_errorToken = (*(_79441_tokens))[(*(_79464_i))];;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _84117_genericsTokens = _1ab745402_range(_79464_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _79441_tokens);;
	if ((_84117_genericsTokens != nullptr)) {
		_79517_f.get()._field_Generics=_1ab74b084_buildGenerics(_self_, &(_84117_genericsTokens), &(_84013_errorToken));
	};
	if (((*(_79441_tokens))[(*(_79464_i))].get()._field_Id != static_cast<jule::U32>(74LLU))) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_79441_tokens))[(*(_79464_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _85117_paramsToks = _1ab745402_range(_79464_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _79441_tokens);;
	if ((_85117_paramsToks.len() > 0LL)) {
		_79517_f.get()._field_Params=_1ab74c9ae_buildParams(_self_, &(_85117_paramsToks), _79472_method);
	};
	if (((*(_79464_i)) < (*(_79441_tokens)).len())) {
		jule::Ptr<_1c3e3a5e6_Token> _85717_token = (*(_79441_tokens))[(*(_79464_i))];;
		if ((_85717_token.get()._field_Id == static_cast<jule::U32>(68LLU))) {
			_79517_f.get()._field_Exceptional=true;
			((*(_79464_i)))++;
		};
	};
	_79517_f.get()._field_Public=_1aab42d83_IsPub(&(_79517_f.get()._field_Ident));
	({
		__jule_tuple_x_1aaa794d4_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1ab74d2a6_buildRetType(_self_, _79441_tokens, _79464_i);
		_79517_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _79517_f;;
}



inline jule::Ptr<_1aaa8837d_FnDecl> _1ab74dc13_buildFn(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _87132_tokens, jule::Bool _87150_method, jule::Bool _87164_prototype) {
	jule::I32 _87217_i = 0LL;;
	jule::Ptr<_1aaa8837d_FnDecl> _87317_f = _1ab74d75c_buildFnPrototype(_self_, _87132_tokens, &(_87217_i), _87150_method);;
	if (_87164_prototype) {
		if ((_87217_i < (*(_87132_tokens)).len())) {
			_1ab7479ba_pushErr(_self_.ptr(), (*(_87132_tokens))[(_87217_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _87317_f;;
	} else if ((_87317_f == nullptr)) {
		return _87317_f;;
	};
	if ((_87217_i >= (*(_87132_tokens)).len())) {
		_1ab747316_stop(_self_.ptr());
		_1ab7479ba_pushErr(_self_.ptr(), _87317_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _88917_blockTokens = _1ab745402_range(&(_87217_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _87132_tokens);;
	if ((_88917_blockTokens != nullptr)) {
		_87317_f.get()._field_Scope=_1ab748b64_buildScope(_self_, &(_88917_blockTokens), (*(_87132_tokens))[(_87217_i - 1LL)]);
		_87317_f.get()._field_Scope.get()._field_Unsafety=_87317_f.get()._field_Unsafety;
		if ((_87217_i < (*(_87132_tokens)).len())) {
			_1ab7479ba_pushErr(_self_.ptr(), (*(_87132_tokens))[_87217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1ab747316_stop(_self_.ptr());
		_1ab7479ba_pushErr(_self_.ptr(), _87317_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _87317_f;;
}



inline jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _1ab74e054_getUseDeclSelectors(_1ab747019_parser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _90542_tokens) {
	jule::I32 _90617_i = 0LL;;
	_90542_tokens=_1ab745402_range(&(_90617_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_90542_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _90818_parts;;
	jule::Slice<_1c3983b45_Log> _90825_errs;;
	({
		__jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab745b72_parts(&(_90542_tokens), static_cast<jule::U32>(5LLU), true);
		_90818_parts = __jule_assign_result.__jule_result_arg0;
		_90825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_90825_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_90825_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _91417_selectors = jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>::alloc(0LL, _90818_parts.len());;
	{
		auto expr = &(_90818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9152d12:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _91521_part = *it;
			{
				if ((_91521_part.len() > 1LL)) {
					_1ab7479ba_pushErr(_self_, _91521_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1c3e3a5e6_Token> _91921_tok = _91521_part[0LL];;
				if (((_91921_tok.get()._field_Id != static_cast<jule::U32>(1LLU)) && (_91921_tok.get()._field_Id != static_cast<jule::U32>(24LLU)))) {
					_1ab7479ba_pushErr(_self_, _91921_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1ab747d2d_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1a9152d12;
				};
				{ jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> &__jule_push_dest = _91417_selectors; __jule_push_dest.push(_91921_tok); };
			}
			_iter_next_1a9152d12:;
			++it;
			goto _iter_begin_1a9152d12;
		}
		_iter_end_1a9152d12:;
	};
	return _91417_selectors;;
}



inline void _1ab74e3b7_buildBindUseDecl(_1ab747019_parser* _self_, jule::Ptr<_1aaa8e53d_UseDecl>* _93040_decl, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _93057_tokens) {
	if (((*(_93057_tokens)).len() > 1LL)) {
		_1ab7479ba_pushErr(_self_, (*(_93057_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1c3e3a5e6_Token> _93413_token = (*(_93057_tokens))[0LL];;
	if (((_93413_token.get()._field_Id != static_cast<jule::U32>(4LLU)) || ((_93413_token.get()._field_Kind[0LL] != '`') && (_93413_token.get()._field_Kind[0LL] != '\"')))) {
		_1ab7479ba_pushErr(_self_, _93413_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_93040_decl)).get()._field_Binded=true;
	(*(_93040_decl)).get()._field_LinkPath=_93413_token.get()._field_Kind.slice(1LL, (_93413_token.get()._field_Kind.len() - 1LL));
}



inline void _1ab74e72a_buildStdUseDecl(_1ab747019_parser* _self_, jule::Ptr<_1aaa8e53d_UseDecl>* _94339_decl, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _94359_tokens) {
	(*(_94339_decl)).get()._field_Std=true;
	jule::Ptr<_1c3e3a5e6_Token> _94617_token = _94359_tokens[0LL];;
	if ((_94359_tokens.len() < 3LL)) {
		_1ab7479ba_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_94359_tokens=_94359_tokens.slice(2LL);
	_94617_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _94617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1a915a688:;
			{
				_1ab7479ba_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1a915a6ee:;
			{
				jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _95921_selectors = nullptr;;
				({
					__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_sx_1c3e3a5e6_Token __jule_assign_result = _1ab7456bb_rangeLast(&(_94359_tokens));
					_94359_tokens = __jule_assign_result.__jule_result_arg0;
					_95921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_94339_decl)).get()._field_Selected=_1ab74e054_getUseDeclSelectors(_self_, _95921_selectors);
				if ((_94359_tokens.len() == 0LL)) {
					_1ab7479ba_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94617_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
				if ((_94617_token.get()._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ab7479ba_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94359_tokens=_94359_tokens.slice(0LL, (_94359_tokens.len() - 1LL));
				if ((_94359_tokens.len() == 0LL)) {
					_1ab7479ba_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a915a765:;
			{
				_94359_tokens=_94359_tokens.slice(0LL, (_94359_tokens.len() - 1LL));
				if ((_94359_tokens.len() == 0LL)) {
					_1ab7479ba_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94617_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
				if ((_94617_token.get()._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ab7479ba_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94359_tokens=_94359_tokens.slice(0LL, (_94359_tokens.len() - 1LL));
				if ((_94359_tokens.len() == 0LL)) {
					_1ab7479ba_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_94339_decl)).get()._field_Full=true;
			}
		}
		_match_end_1a915a633:;
	};
	(*(_94339_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1ab746aa7_tokstoa(&(_94359_tokens)));
}



inline void _1ab74ea8d_buildIdentUseDecl(_1ab747019_parser* _self_, jule::Ptr<_1aaa8e53d_UseDecl>* _99741_decl, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _99761_tokens) {
	(*(_99741_decl)).get()._field_Std=false;
	jule::Ptr<_1c3e3a5e6_Token> _100017_token = _99761_tokens[(_99761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _100017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1a916300e:;
			{
				_1ab7479ba_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1a916366e:;
			{
				jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _100621_selectors = nullptr;;
				({
					__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_sx_1c3e3a5e6_Token __jule_assign_result = _1ab7456bb_rangeLast(&(_99761_tokens));
					_99761_tokens = __jule_assign_result.__jule_result_arg0;
					_100621_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_99741_decl)).get()._field_Selected=_1ab74e054_getUseDeclSelectors(_self_, _100621_selectors);
				if ((_99761_tokens.len() == 0LL)) {
					_1ab7479ba_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100017_token=_99761_tokens[(_99761_tokens.len() - 1LL)];
				if ((_100017_token.get()._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ab7479ba_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99761_tokens=_99761_tokens.slice(0LL, (_99761_tokens.len() - 1LL));
				if ((_99761_tokens.len() == 0LL)) {
					_1ab7479ba_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a91636d5:;
			{
				_99761_tokens=_99761_tokens.slice(0LL, (_99761_tokens.len() - 1LL));
				if ((_99761_tokens.len() == 0LL)) {
					_1ab7479ba_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100017_token=_99761_tokens[(_99761_tokens.len() - 1LL)];
				if ((_100017_token.get()._field_Id != static_cast<jule::U32>(19LLU))) {
					_1ab7479ba_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99761_tokens=_99761_tokens.slice(0LL, (_99761_tokens.len() - 1LL));
				if ((_99761_tokens.len() == 0LL)) {
					_1ab7479ba_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_99741_decl)).get()._field_Full=true;
			}
		}
		_match_end_1a91633d8:;
	};
	(*(_99741_decl)).get()._field_LinkPath=_1ab746aa7_tokstoa(&(_99761_tokens));
}



inline void _1ab74ee01_parseUseDecl(_1ab747019_parser* _self_, jule::Ptr<_1aaa8e53d_UseDecl>* _104536_decl, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _104556_tokens) {
	if ((*(_104536_decl)).get()._field_Binded) {
		_1ab74e3b7_buildBindUseDecl(_self_, _104536_decl, &(_104556_tokens));
		return;;
	};
	jule::Ptr<_1c3e3a5e6_Token> _105117_token = _104556_tokens[0LL];;
	if ((_105117_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab7479ba_pushErr(_self_, _105117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_104556_tokens.len() > 2LL) && (_104556_tokens[1LL].get()._field_Id == static_cast<jule::U32>(9LLU)))) {
		(*(_104536_decl)).get()._field_Alias=_105117_token.get()._field_Kind;
		if ((_104556_tokens[2LL].get()._field_Id != static_cast<jule::U32>(1LLU))) {
			_1ab7479ba_pushErr(_self_, _105117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1ab747d2d_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_104556_tokens=_104556_tokens.slice(2LL);
		_105117_token=_104556_tokens[0LL];
	};
	;
	{
		
		if (_105117_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_1a916c359:;
			{
				_1ab74e72a_buildStdUseDecl(_self_, _104536_decl, _104556_tokens);
			}
		}
		else {
			_case_begin_1a916bdc5:;
			{
				_1ab74ea8d_buildIdentUseDecl(_self_, _104536_decl, _104556_tokens);
			}
		}
		_match_end_1a916bd5e:;
	};
}



inline jule::Ptr<_1aaa8e53d_UseDecl> _1ab7502ec_buildUseDecl(_1ab747019_parser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _107935_tokens, jule::Bool _107953_binded) {
	jule::Ptr<_1aaa8e53d_UseDecl> _108017_decl = jule::new_ptr<_1aaa8e53d_UseDecl>(_1aaa8e53d_UseDecl{._field_Token=_107935_tokens[0LL], ._field_Binded=_107953_binded, });;
	if ((_107935_tokens.len() < 2LL)) {
		_1ab7479ba_pushErr(_self_, _108017_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_107935_tokens=_107935_tokens.slice(1LL);
	_1ab74ee01_parseUseDecl(_self_, &(_108017_decl), _107935_tokens);
	return _108017_decl;;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab7506e8_buildTypeEnumItemKind(jule::Ptr<_1ab747019_parser> _self_, jule::I32* _109346_i, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _109359_tokens) {
	jule::I32 _109417_braceN = 0LL;;
	jule::I32 _109513_exprStart = (*(_109346_i));;
	for (; ((*(_109346_i)) < (*(_109359_tokens)).len()); ((*(_109346_i)))++) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _109717_t = (*(_109359_tokens))[(*(_109346_i))];;
			{
				auto &_match_expr{ _109717_t.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a917136e:;
					{
						(_109417_braceN)++;
						goto _iter_next_1a9170758;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a91713e6:;
					{
						(_109417_braceN)--;
					}
				}
				_match_end_1a9170da7:;
			};
			if ((_109417_braceN > 0LL)) {
				goto _iter_next_1a9170758;
			};
			if (((_109717_t.get()._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_109346_i)) + 1LL) >= (*(_109359_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _111325_kindTokens = nullptr;;
				if ((_109717_t.get()._field_Id == static_cast<jule::U32>(5LLU))) {
					_111325_kindTokens=(*(_109359_tokens)).slice(_109513_exprStart, (*(_109346_i)));
				} else {
					_111325_kindTokens=(*(_109359_tokens)).slice(_109513_exprStart);
				};
				jule::I32 _111925_j = 0LL;;
				jule::Ptr<_1aaa765e1_TypeDecl> _112026_kind;;
				({
					__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, &(_111325_kindTokens), (&(_111925_j)), true);
					_112026_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_111925_j < _111325_kindTokens.len())) {
					_1ab7479ba_pushErr(_self_.ptr(), _111325_kindTokens[_111925_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112026_kind;;
			};
		}
	_iter_next_1a9170758:;
	}
	_iter_end_1a9170758:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1aaa90dd0_TypeEnumItemDecl>> _1ab750a39_buildTypeEnumItems(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _113043_tokens) {
	jule::Slice<jule::Ptr<_1aaa90dd0_TypeEnumItemDecl>> _113117_items = jule::Slice<jule::Ptr<_1aaa90dd0_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _113217_i = 0LL;;
	for (; (_113217_i < (*(_113043_tokens)).len()); (_113217_i)++) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _113421_t = (*(_113043_tokens))[_113217_i];;
			jule::Ptr<_1aaa90dd0_TypeEnumItemDecl> _113521_item = jule::new_ptr<_1aaa90dd0_TypeEnumItemDecl>();;
			_113521_item.get()._field_Token=_113421_t;
			if (((_113521_item.get()._field_Token.get()._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_113043_tokens)).len() - _113217_i) > 2LL))) {
				_113421_t=(*(_113043_tokens))[(_113217_i + 1LL)];
				if ((_113421_t.get()._field_Id == static_cast<jule::U32>(8LLU))) {
					_113521_item.get()._field_Ident=_113521_item.get()._field_Token.get()._field_Kind;
					_113217_i+=2LL;
					if (((_113217_i >= (*(_113043_tokens)).len()) || ((*(_113043_tokens))[_113217_i].get()._field_Id == static_cast<jule::U32>(5LLU)))) {
						_1ab7479ba_pushErr(_self_.ptr(), _113421_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1a9176220;
					};
				};
			};
			_113521_item.get()._field_Kind=_1ab7506e8_buildTypeEnumItemKind(_self_, &(_113217_i), _113043_tokens);
			{ jule::Slice<jule::Ptr<_1aaa90dd0_TypeEnumItemDecl>> &__jule_push_dest = _113117_items; __jule_push_dest.push(_113521_item); };
		}
	_iter_next_1a9176220:;
	}
	_iter_end_1a9176220:;;
	return _113117_items;;
}



inline jule::Ptr<_1aaa91540_TypeEnumDecl> _1ab750d7a_buildTypeEnumDecl(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _115442_tokens) {
	jule::I32 _115517_i = 1LL;;
	jule::Ptr<_1aaa91540_TypeEnumDecl> _115617_e = jule::new_ptr<_1aaa91540_TypeEnumDecl>(_1aaa91540_TypeEnumDecl{._field_Token=(*(_115442_tokens))[_115517_i], });;
	if ((_115617_e.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab7479ba_pushErr(_self_.ptr(), _115617_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_115617_e.get()._field_Ident=_115617_e.get()._field_Token.get()._field_Kind;
	_115517_i+=3LL;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _116617_itemTokens = _1ab745402_range(&(_115517_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _115442_tokens);;
	if ((_116617_itemTokens == nullptr)) {
		_1ab747316_stop(_self_.ptr());
		_1ab7479ba_pushErr(_self_.ptr(), _115617_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _115617_e;;
	} else if ((_115517_i < (*(_115442_tokens)).len())) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_115442_tokens))[_115517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_115617_e.get()._field_Public=_1aab42d83_IsPub(&(_115617_e.get()._field_Ident));
	_115617_e.get()._field_End=(*(_115442_tokens))[(_115517_i - 1LL)];
	_115617_e.get()._field_Items=_1ab750a39_buildTypeEnumItems(_self_, &(_116617_itemTokens));
	return _115617_e;;
}



inline jule::Ptr<_1aaa7a925_Expr> _1ab751276_buildEnumItemExpr(jule::Ptr<_1ab747019_parser> _self_, jule::I32* _118142_i, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _118155_tokens) {
	jule::I32 _118217_braceN = 0LL;;
	jule::I32 _118313_exprStart = (*(_118142_i));;
	for (; ((*(_118142_i)) < (*(_118155_tokens)).len()); ((*(_118142_i)))++) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _118517_t = (*(_118155_tokens))[(*(_118142_i))];;
			{
				auto &_match_expr{ _118517_t.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a9181714:;
					{
						(_118217_braceN)++;
						goto _iter_next_1a9180aed;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a918178b:;
					{
						(_118217_braceN)--;
					}
				}
				_match_end_1a918124c:;
			};
			if ((_118217_braceN > 0LL)) {
				goto _iter_next_1a9180aed;
			};
			if (((_118517_t.get()._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_118142_i)) + 1LL) >= (*(_118155_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _120125_exprTokens = nullptr;;
				if ((_118517_t.get()._field_Id == static_cast<jule::U32>(5LLU))) {
					_120125_exprTokens=(*(_118155_tokens)).slice(_118313_exprStart, (*(_118142_i)));
				} else {
					_120125_exprTokens=(*(_118155_tokens)).slice(_118313_exprStart);
				};
				return _1ab74816e_buildExpr(_self_, &(_120125_exprTokens));;
			};
		}
	_iter_next_1a9180aed:;
	}
	_iter_end_1a9180aed:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1aaa8e9e4_EnumItemDecl>> _1ab7515b7_buildEnumItems(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _121339_tokens) {
	jule::Slice<jule::Ptr<_1aaa8e9e4_EnumItemDecl>> _121417_items = jule::Slice<jule::Ptr<_1aaa8e9e4_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _121517_i = 0LL;;
	for (; (_121517_i < (*(_121339_tokens)).len()); (_121517_i)++) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _121721_t = (*(_121339_tokens))[_121517_i];;
			jule::Ptr<_1aaa8e9e4_EnumItemDecl> _121821_item = jule::new_ptr<_1aaa8e9e4_EnumItemDecl>();;
			_121821_item.get()._field_Token=_121721_t;
			if ((_121821_item.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
				_1ab7479ba_pushErr(_self_.ptr(), _121821_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_121821_item.get()._field_Ident=_121821_item.get()._field_Token.get()._field_Kind;
			if ((((_121517_i + 1LL) >= (*(_121339_tokens)).len()) || ((*(_121339_tokens))[(_121517_i + 1LL)].get()._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_121517_i + 1LL) < (*(_121339_tokens)).len())) {
					(_121517_i)++;
				};
				{ jule::Slice<jule::Ptr<_1aaa8e9e4_EnumItemDecl>> &__jule_push_dest = _121417_items; __jule_push_dest.push(_121821_item); };
				goto _iter_next_1a918541b;
			};
			(_121517_i)++;
			_121721_t=(*(_121339_tokens))[_121517_i];
			(_121517_i)++;
			if ((_121721_t.get()._field_Id != static_cast<jule::U32>(8LLU))) {
				_1ab7479ba_pushErr(_self_.ptr(), _121721_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1a918541b;
			};
			if (((_121517_i >= (*(_121339_tokens)).len()) || ((*(_121339_tokens))[_121517_i].get()._field_Id == static_cast<jule::U32>(5LLU)))) {
				_1ab7479ba_pushErr(_self_.ptr(), _121721_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1a918541b;
			};
			_121821_item.get()._field_Expr=_1ab751276_buildEnumItemExpr(_self_, &(_121517_i), _121339_tokens);
			{ jule::Slice<jule::Ptr<_1aaa8e9e4_EnumItemDecl>> &__jule_push_dest = _121417_items; __jule_push_dest.push(_121821_item); };
		}
	_iter_next_1a918541b:;
	}
	_iter_end_1a918541b:;;
	return _121417_items;;
}



inline jule::Ptr<_1aaa905a5_EnumDecl> _1ab751908_buildEnumDecl(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _125038_tokens) {
	if (((*(_125038_tokens)).len() < 3LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_125038_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aaa905a5_EnumDecl> _125517_e = jule::new_ptr<_1aaa905a5_EnumDecl>(_1aaa905a5_EnumDecl{._field_Token=(*(_125038_tokens))[1LL], });;
	if ((_125517_e.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab7479ba_pushErr(_self_.ptr(), _125517_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_125517_e.get()._field_Ident=_125517_e.get()._field_Token.get()._field_Kind;
	jule::I32 _126317_i = 2LL;;
	if (((*(_125038_tokens))[_126317_i].get()._field_Id == static_cast<jule::U32>(8LLU))) {
		(_126317_i)++;
		if ((_126317_i >= (*(_125038_tokens)).len())) {
			_1ab7479ba_pushErr(_self_.ptr(), (*(_125038_tokens))[(_126317_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _125517_e;;
		};
		({
			__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, _125038_tokens, (&(_126317_i)), true);
			_125517_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_126317_i >= (*(_125038_tokens)).len())) {
			_1ab747316_stop(_self_.ptr());
			_1ab7479ba_pushErr(_self_.ptr(), _125517_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _125517_e;;
		};
	} else {
		_125517_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _128017_itemTokens = _1ab745402_range(&(_126317_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _125038_tokens);;
	if ((_128017_itemTokens == nullptr)) {
		_1ab747316_stop(_self_.ptr());
		_1ab7479ba_pushErr(_self_.ptr(), _125517_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _125517_e;;
	} else if ((_126317_i < (*(_125038_tokens)).len())) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_125038_tokens))[_126317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_125517_e.get()._field_Public=_1aab42d83_IsPub(&(_125517_e.get()._field_Ident));
	_125517_e.get()._field_End=(*(_125038_tokens))[(_126317_i - 1LL)];
	_125517_e.get()._field_Items=_1ab7515b7_buildEnumItems(_self_, &(_128017_itemTokens));
	return _125517_e;;
}



inline jule::Any _1ab751c49_buildNodeEnumDecl(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _129542_tokens) {
	if ((((*(_129542_tokens)).len() > 3LL) && ((*(_129542_tokens))[2LL].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*(_129542_tokens))[3LL].get()._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_1ab750d7a_buildTypeEnumDecl(_self_, _129542_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1ab751908_buildEnumDecl(_self_, _129542_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1aaa91809_FieldDecl> _1ab75208a_buildField(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _130434_tokens) {
	jule::Ptr<_1aaa91809_FieldDecl> _130517_f = jule::new_ptr<_1aaa91809_FieldDecl>();;
	_130517_f.get()._field_Mutable=(_130434_tokens[0LL].get()._field_Id == static_cast<jule::U32>(32LLU));
	if (_130517_f.get()._field_Mutable) {
		if ((_130434_tokens.len() == 1LL)) {
			_1ab7479ba_pushErr(_self_.ptr(), _130434_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_130434_tokens=_130434_tokens.slice(1LL);
	};
	_130517_f.get()._field_Token=_130434_tokens[0LL];
	if ((_130517_f.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab7479ba_pushErr(_self_.ptr(), _130517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_130517_f.get()._field_Ident=_130517_f.get()._field_Token.get()._field_Kind;
	if ((_130434_tokens.len() == 1LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), _130434_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_130434_tokens.len() < 3LL) || (_130434_tokens[1LL].get()._field_Id != static_cast<jule::U32>(8LLU)))) {
		_1ab7479ba_pushErr(_self_.ptr(), _130434_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_130434_tokens=_130434_tokens.slice(2LL);
	jule::I32 _133317_i = 0LL;;
	({
		__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, &(_130434_tokens), (&(_133317_i)), true);
		_130517_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_133317_i < _130434_tokens.len())) {
		jule::Ptr<_1c3e3a5e6_Token> _133617_token = _130434_tokens[_133317_i];;
		if ((_133617_token.get()._field_Id != static_cast<jule::U32>(71LLU))) {
			_1ab7479ba_pushErr(_self_.ptr(), _130434_tokens[_133317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_133317_i)++;
		if ((_133317_i >= _130434_tokens.len())) {
			_1ab7479ba_pushErr(_self_.ptr(), _133617_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_130434_tokens=_130434_tokens.slice(_133317_i);
		_130517_f.get()._field_Default=_1ab74816e_buildExpr(_self_, &(_130434_tokens));
	};
	_130517_f.get()._field_Public=_1aab42d83_IsPub(&(_130517_f.get()._field_Ident));
	return _130517_f;;
}



inline jule::Slice<jule::Ptr<_1aaa91809_FieldDecl>> _1ab7523cb_buildStructDeclFields(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _135345_tokens) {
	jule::Slice<jule::Ptr<_1aaa91809_FieldDecl>> _135417_fields = nullptr;;
	jule::Slice<jule::Ptr<_1ab7284a1_stmt>> _135517_stmts = _1ab728858_splitStmts(&(_135345_tokens));;
	{
		auto expr = &(_135517_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a919e721:;
		if (it != expr_end) {
			jule::Ptr<_1ab7284a1_stmt> _135621_stmt = *it;
			{
				_135345_tokens=_135621_stmt.get()._field_tokens;
				jule::Ptr<_1aaa91809_FieldDecl> _135821_f = _1ab75208a_buildField(_self_, _135345_tokens);;
				{ jule::Slice<jule::Ptr<_1aaa91809_FieldDecl>> &__jule_push_dest = _135417_fields; __jule_push_dest.push(_135821_f); };
			}
			_iter_next_1a919e721:;
			++it;
			goto _iter_begin_1a919e721;
		}
		_iter_end_1a919e721:;
	};
	return _135417_fields;;
}



inline jule::Ptr<_1aaa92200_StructDecl> _1ab75271c_buildStructDecl(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _136440_tokens) {
	if (((*(_136440_tokens)).len() < 3LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_136440_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _137017_i = 1LL;;
	jule::Ptr<_1aaa92200_StructDecl> _137117_s = jule::new_ptr<_1aaa92200_StructDecl>(_1aaa92200_StructDecl{._field_Token=(*(_136440_tokens))[_137017_i], });;
	if ((_137117_s.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab7479ba_pushErr(_self_.ptr(), _137117_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137017_i)++;
	if ((_137017_i >= (*(_136440_tokens)).len())) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_136440_tokens))[_137017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137117_s;;
	};
	_137117_s.get()._field_Ident=_137117_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1c3e3a5e6_Token> _138513_errorToken = (*(_136440_tokens))[_137017_i];;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _138617_genericsTokens = _1ab745402_range(&(_137017_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _136440_tokens);;
	if ((_138617_genericsTokens != nullptr)) {
		_137117_s.get()._field_Generics=_1ab74b084_buildGenerics(_self_, &(_138617_genericsTokens), &(_138513_errorToken));
	};
	if ((_137017_i >= (*(_136440_tokens)).len())) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_136440_tokens))[(_137017_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137117_s;;
	};
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _139617_bodyTokens = _1ab745402_range(&(_137017_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _136440_tokens);;
	if ((_139617_bodyTokens == nullptr)) {
		_1ab747316_stop(_self_.ptr());
		_1ab7479ba_pushErr(_self_.ptr(), _137117_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137117_s;;
	};
	if ((_137017_i < (*(_136440_tokens)).len())) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_136440_tokens))[_137017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_137117_s.get()._field_Public=_1aab42d83_IsPub(&(_137117_s.get()._field_Ident));
	_137117_s.get()._field_Fields=_1ab7523cb_buildStructDeclFields(_self_, _139617_bodyTokens);
	_137117_s.get()._field_End=(*(_136440_tokens))[(_137017_i - 1LL)];
	return _137117_s;;
}



inline void _1ab7529c5_checkMethodReceiver(_1ab747019_parser* _self_, jule::Ptr<_1aaa8837d_FnDecl>* _141239_f) {
	if ((*(_141239_f)).get()._field_Statically) {
		if ((((*(_141239_f)).get()._field_Params.len() > 0LL) && _1aaa872a0_IsSelf((*(_141239_f)).get()._field_Params[0LL].ptr()))) {
			_1ab7479ba_pushErr(_self_, (*(_141239_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_141239_f)).get()._field_Params.len() == 0LL)) {
		_1ab7479ba_pushErr(_self_, (*(_141239_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1aaa86e2b_ParamDecl> _142413_param = (*(_141239_f)).get()._field_Params[0LL];;
	if ((!(_1aaa872a0_IsSelf(_142413_param.ptr())))) {
		_1ab7479ba_pushErr(_self_, (*(_141239_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1ab752d38_buildTraitBody(jule::Ptr<_1ab747019_parser> _self_, jule::Ptr<_1aaa9293c_TraitDecl>* _143139_t, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _143158_tokens) {
	jule::Slice<jule::Ptr<_1ab7284a1_stmt>> _143217_stmts = _1ab728858_splitStmts(&(_143158_tokens));;
	{
		auto expr = &(_143217_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91ac641:;
		if (it != expr_end) {
			jule::Ptr<_1ab7284a1_stmt> _143321_stmt = *it;
			{
				_143158_tokens=_143321_stmt.get()._field_tokens;
				if ((_143158_tokens.len() == 0LL)) {
					goto _iter_next_1a91ac641;
				};
				{
					auto &_match_expr{ _143158_tokens[0LL].get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_1a91b0215:;
						{
							jule::Ptr<_1aaa8837d_FnDecl> _144025_f = _1ab74dc13_buildFn(_self_, &(_143158_tokens), true, true);;
							if ((_144025_f == nullptr)) {
								goto _match_end_1a91ad884;
							};
							_1ab7529c5_checkMethodReceiver(_self_.ptr(), &(_144025_f));
							if ((_144025_f.get()._field_Generics.len() > 0LL)) {
								_1ab7479ba_pushErr(_self_.ptr(), _144025_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1aaa8837d_FnDecl>> &__jule_push_dest = (*(_143139_t)).get()._field_Methods; __jule_push_dest.push(_144025_f); };
						}
					}
					else {
						_case_begin_1a91ad268:;
						{
							jule::I32 _145025_i = 0LL;;
							jule::Ptr<_1aaa765e1_TypeDecl> _145126_ti;;
							jule::Bool _145130_ok = false;;
							({
								__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, &(_143158_tokens), (&(_145025_i)), true);
								_145126_ti = __jule_assign_result.__jule_result_arg0;
								_145130_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145130_ok))) {
								goto _match_end_1a91ad884;
							};
							if ((_145025_i < _143158_tokens.len())) {
								_1ab7479ba_pushErr(_self_.ptr(), _143158_tokens[_145025_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> &__jule_push_dest = (*(_143139_t)).get()._field_Inherits; __jule_push_dest.push(_145126_ti); };
						}
					}
					_match_end_1a91ad884:;
				};
			}
			_iter_next_1a91ac641:;
			++it;
			goto _iter_begin_1a91ac641;
		}
		_iter_end_1a91ac641:;
	};
}



inline jule::Ptr<_1aaa9293c_TraitDecl> _1ab753179_buildTraitDecl(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _146339_tokens) {
	if (((*(_146339_tokens)).len() < 3LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_146339_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aaa9293c_TraitDecl> _146817_t = jule::new_ptr<_1aaa9293c_TraitDecl>(_1aaa9293c_TraitDecl{._field_Token=(*(_146339_tokens))[1LL], });;
	if ((_146817_t.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab7479ba_pushErr(_self_.ptr(), _146817_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_146817_t.get()._field_Ident=_146817_t.get()._field_Token.get()._field_Kind;
	jule::I32 _147617_i = 2LL;;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _147717_bodyTokens = _1ab745402_range(&(_147617_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _146339_tokens);;
	if ((_147717_bodyTokens == nullptr)) {
		_1ab747316_stop(_self_.ptr());
		_1ab7479ba_pushErr(_self_.ptr(), _146817_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_147617_i < (*(_146339_tokens)).len())) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_146339_tokens))[_147617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_146817_t.get()._field_Public=_1aab42d83_IsPub(&(_146817_t.get()._field_Ident));
	_1ab752d38_buildTraitBody(_self_, &(_146817_t), _147717_bodyTokens);
	_146817_t.get()._field_End=(*(_146339_tokens))[(_147617_i - 1LL)];
	return _146817_t;;
}



inline jule::Ptr<_1aaa8837d_FnDecl> _1ab7534ba_buildBindFn(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _149335_tokens) {
	_149335_tokens=_149335_tokens.slice(1LL);
	jule::Ptr<_1aaa8837d_FnDecl> _149517_f = _1ab74dc13_buildFn(_self_, &(_149335_tokens), false, true);;
	if ((_149517_f != nullptr)) {
		_149517_f.get()._field_Public=false;
		_149517_f.get()._field_Binded=true;
	};
	return _149517_f;;
}



inline jule::Ptr<_1aaa8945b_VarDecl> _1ab75380b_buildBindVar(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _150336_tokens) {
	_150336_tokens=_150336_tokens.slice(1LL);
	jule::Ptr<_1aaa8945b_VarDecl> _150517_v = _1ab74a847_buildVar(_self_, _150336_tokens);;
	if ((_150517_v != nullptr)) {
		_150517_v.get()._field_Public=false;
		_150517_v.get()._field_Binded=true;
		if ((_150517_v.get()._field_Expr != nullptr)) {
			_1ab7479ba_pushErr(_self_.ptr(), _150517_v.get()._field_Token, jule::Str("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _150517_v;;
}



inline jule::Ptr<_1aaa92200_StructDecl> _1ab753b4c_buildBindStruct(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _151639_tokens) {
	_151639_tokens=_151639_tokens.slice(1LL);
	jule::Ptr<_1aaa92200_StructDecl> _151817_s = _1ab75271c_buildStructDecl(_self_, &(_151639_tokens));;
	if ((_151817_s != nullptr)) {
		_151817_s.get()._field_Public=false;
		{
			auto expr = &(_151817_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a91bc19a:;
			if (it != expr_end) {
				jule::Ptr<_1aaa91809_FieldDecl> _152125_f = *it;
				{
					_152125_f.get()._field_Public=true;
				}
				_iter_next_1a91bc19a:;
				++it;
				goto _iter_begin_1a91bc19a;
			}
			_iter_end_1a91bc19a:;
		};
		_151817_s.get()._field_Binded=true;
	};
	return _151817_s;;
}



inline jule::Ptr<_1aaa8d031_TypeAliasDecl> _1ab753e8d_buildBindTypeAlias(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _153042_tokens) {
	_153042_tokens=_153042_tokens.slice(1LL);
	jule::Ptr<_1aaa8d031_TypeAliasDecl> _153217_t = _1ab749912_buildTypeAliasDecl(_self_, &(_153042_tokens));;
	if ((_153217_t != nullptr)) {
		_153217_t.get()._field_Public=false;
		_153217_t.get()._field_Binded=true;
	};
	return _153217_t;;
}



inline jule::Ptr<_1aaa8e53d_UseDecl> _1ab7542ce_buildBindUse(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _154036_tokens) {
	if ((_154036_tokens.len() == 1LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), _154036_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_154036_tokens=_154036_tokens.slice(1LL);
	;
	return _1ab7502ec_buildUseDecl(_self_.ptr(), _154036_tokens, true);;
}



inline jule::Any _1ab754620_buildBind(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _155134_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _155217_token = (*(_155134_tokens))[0LL];;
	if (((*(_155134_tokens)).len() == 1LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), _155217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155217_token=(*(_155134_tokens))[1LL];
	{
		auto &_match_expr{ _155217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1a91c258a:;
			{
				return jule::Any(_1ab7534ba_buildBindFn(_self_, (*(_155134_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1a91c228d:;
			{
				return jule::Any(_1ab75380b_buildBindVar(_self_, (*(_155134_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1a91c2304:;
			{
				return jule::Any(_1ab753b4c_buildBindStruct(_self_, (*(_155134_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1a91c236a:;
			{
				return jule::Any(_1ab753e8d_buildBindTypeAlias(_self_, (*(_155134_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1a91c2227:;
			{
				_1ab7479ba_pushErr(_self_.ptr(), _155217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a91c21c2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa8837d_FnDecl> _1ab754961_getMethod(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _157534_tokens) {
	jule::I32 _157617_i = 0LL;;
	jule::Ptr<_1c3e3a5e6_Token> _157717_token = (*(_157534_tokens))[_157617_i];;
	if ((_157717_token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_157617_i + 1LL) >= (*(_157534_tokens)).len())) {
			_1ab7479ba_pushErr(_self_.ptr(), _157717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157617_i)++;
		_157717_token=(*(_157534_tokens))[_157617_i];
	};
	if ((_157717_token.get()._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_157617_i + 1LL) >= (*(_157534_tokens)).len())) {
			_1ab7479ba_pushErr(_self_.ptr(), _157717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157617_i)++;
		_157717_token=(*(_157534_tokens))[_157617_i];
	};
	if ((_157717_token.get()._field_Id != static_cast<jule::U32>(29LLU))) {
		_1ab7479ba_pushErr(_self_.ptr(), _157717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1ab74dc13_buildFn(_self_, _157534_tokens, true, false);;
}



inline void _1ab754cc4_parseImplBody(jule::Ptr<_1ab747019_parser> _self_, jule::Ptr<_1aaa9309c_Impl>* _160438_ipl, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _160455_tokens) {
	jule::Slice<jule::Ptr<_1ab7284a1_stmt>> _160517_stmts = _1ab728858_splitStmts(_160455_tokens);;
	{
		auto expr = &(_160517_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a91c8bce:;
		if (it != expr_end) {
			jule::Ptr<_1ab7284a1_stmt> _160621_stmt = *it;
			{
				(*(_160455_tokens))=_160621_stmt.get()._field_tokens;
				jule::Ptr<_1c3e3a5e6_Token> _160821_token = (*(_160455_tokens))[0LL];;
				{
					auto &_match_expr{ _160821_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1a91c9a48:;
						{
							_1ab748768_pushDirective(_self_.ptr(), _1ab7484b0_buildDirective(_self_.ptr(), (*(_160455_tokens))));
							goto _iter_next_1a91c8bce;
						}
					}
					_match_end_1a91c9c24:;
				};
				{
					auto &_match_expr{ _160821_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_1a91cac36:;
						{
							jule::Ptr<_1aaa8945b_VarDecl> _161725_v = _1ab74a847_buildVar(_self_, (*(_160455_tokens)));;
							if ((_161725_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1aaa8945b_VarDecl>> &__jule_push_dest = (*(_160438_ipl)).get()._field_Statics; __jule_push_dest.push(_161725_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1a91ca384:;
						{
							jule::Ptr<_1aaa8837d_FnDecl> _162425_f = _1ab754961_getMethod(_self_, _160455_tokens);;
							if ((_162425_f != nullptr)) {
								_1ab7529c5_checkMethodReceiver(_self_.ptr(), &(_162425_f));
								_1ab75570e_applyFnMeta(_self_.ptr(), &(_162425_f));
								{ jule::Slice<jule::Ptr<_1aaa8837d_FnDecl>> &__jule_push_dest = (*(_160438_ipl)).get()._field_Methods; __jule_push_dest.push(_162425_f); };
							};
						}
					}
					else {
						_case_begin_1a91ca31d:;
						{
							_1ab7479ba_pushErr(_self_.ptr(), _160821_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1a91c8bce;
						}
					}
					_match_end_1a91ca2b8:;
				};
			}
			_iter_next_1a91c8bce:;
			++it;
			goto _iter_begin_1a91c8bce;
		}
		_iter_end_1a91c8bce:;
	};
}



inline jule::Ptr<_1aaa9309c_Impl> _1ab755115_buildImpl(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _163733_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _163817_token = _163733_tokens[0LL];;
	if ((_163733_tokens.len() < 2LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), _163817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _164417_i = 1LL;;
	jule::Ptr<_1aaa765e1_TypeDecl> _164618_base;;
	jule::Bool _164628_ok = false;;
	({
		__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, &(_163733_tokens), (&(_164417_i)), true);
		_164618_base = __jule_assign_result.__jule_result_arg0;
		_164628_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164628_ok))) {
		return nullptr;;
	};
	if ((_164417_i >= _163733_tokens.len())) {
		_1ab7479ba_pushErr(_self_.ptr(), _163817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aaa9309c_Impl> _165517_ipl = jule::new_ptr<_1aaa9309c_Impl>(_1aaa9309c_Impl{._field_Base=_164618_base, });;
	_163817_token=_163733_tokens[_164417_i];
	if ((_163817_token.get()._field_Id != static_cast<jule::U32>(9LLU))) {
		if ((_163817_token.get()._field_Id == static_cast<jule::U32>(72LLU))) {
			({
				jule::Ptr<_1aaa765e1_TypeDecl> ___jule_assign_arg = _165517_ipl.get()._field_Dest;
				jule::Ptr<_1aaa765e1_TypeDecl> _1___jule_assign_arg = _165517_ipl.get()._field_Base;
				_165517_ipl.get()._field_Base = ___jule_assign_arg;
				_165517_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_1a91d5e50;
		};
		_1ab747316_stop(_self_.ptr());
		_1ab7479ba_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_164417_i)++;
	if ((_164417_i >= _163733_tokens.len())) {
		_1ab747316_stop(_self_.ptr());
		_1ab7479ba_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType(_self_, &(_163733_tokens), (&(_164417_i)), true);
		_165517_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_164628_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164628_ok))) {
		return nullptr;;
	};
	if ((_164417_i >= _163733_tokens.len())) {
		_1ab747316_stop(_self_.ptr());
		_1ab7479ba_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1a91d5e50:;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _169317_bodyTokens = _1ab745402_range(&(_164417_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_163733_tokens));;
	if ((_169317_bodyTokens == nullptr)) {
		_1ab747316_stop(_self_.ptr());
		_1ab7479ba_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_164417_i < _163733_tokens.len())) {
		_1ab7479ba_pushErr(_self_.ptr(), _163733_tokens[_164417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_165517_ipl.get()._field_End=_163733_tokens[(_164417_i - 1LL)];
	_1ab754cc4_parseImplBody(_self_, &(_165517_ipl), &(_169317_bodyTokens));
	return _165517_ipl;;
}



inline jule::Any _1ab755456_buildNodeData(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _170838_tokens) {
	jule::Ptr<_1c3e3a5e6_Token> _170917_token = (*(_170838_tokens))[0LL];;
	{
		auto &_match_expr{ _170917_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1a91d99d1:;
			{
				jule::Ptr<_1aaa8837d_FnDecl> _171321_f = _1ab74dc13_buildFn(_self_, _170838_tokens, false, false);;
				if ((_171321_f != nullptr)) {
					_171321_f.get()._field_Global=true;
				};
				return jule::Any(_171321_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1a91d93e8:;
			{
				return jule::Any(_1ab74a847_buildVar(_self_, (*(_170838_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1a91da00e:;
			{
				return jule::Any(_1ab749912_buildTypeAliasDecl(_self_, _170838_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1a91d96a1:;
			{
				return _1ab751c49_buildNodeEnumDecl(_self_, _170838_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1a91d9717:;
			{
				return jule::Any(_1ab75271c_buildStructDecl(_self_, _170838_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1a91d977d:;
			{
				return jule::Any(_1ab753179_buildTraitDecl(_self_, _170838_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1a91d97e4:;
			{
				return jule::Any(_1ab755115_buildImpl(_self_, (*(_170838_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1a91da10d:;
			{
				return _1ab754620_buildBind(_self_, _170838_tokens);;
			}
		}
		else {
			_case_begin_1a91d963a:;
			{
				_1ab7479ba_pushErr(_self_.ptr(), _170917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a91d95d5:;
	};
}



inline void _1ab75570e_applyFnMeta(_1ab747019_parser* _self_, jule::Ptr<_1aaa8837d_FnDecl>* _174135_f) {
	(*(_174135_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1ab7559b7_applyMeta(_1ab747019_parser* _self_, _1aaa4290e_Node* _174633_node) {
	{
		auto &_match_expr{ (*(_174633_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1a91ded16:;
			{
				jule::Ptr<_1aaa8945b_VarDecl> _174921_v = (*(_174633_node))._field_Data.cast_ptr<_1aaa8945b_VarDecl>(&__jule_any_type16);;
				if ((_174921_v == nullptr)) {
					return;;
				};
				_174921_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1a91ded7c:;
			{
				jule::Ptr<_1aaa8837d_FnDecl> _175621_f = (*(_174633_node))._field_Data.cast_ptr<_1aaa8837d_FnDecl>(&__jule_any_type14);;
				if ((_175621_f == nullptr)) {
					return;;
				};
				_1ab75570e_applyFnMeta(_self_, &(_175621_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1a91dee04:;
			{
				jule::Ptr<_1aaa92200_StructDecl> _176221_sd = (*(_174633_node))._field_Data.cast_ptr<_1aaa92200_StructDecl>(&__jule_any_type13);;
				if ((_176221_sd == nullptr)) {
					return;;
				};
				_176221_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1a91decb1:;
	};
}



inline void _1ab755c70_pushUseDecl(jule::Ptr<_1ab747019_parser> _self_, jule::Ptr<_1aaa8e53d_UseDecl>* _177136_decl) {
	{ jule::Slice<jule::Ptr<_1aaa8e53d_UseDecl>> &__jule_push_dest = _self_.get()._field_ast.get()._field_UseDecls; __jule_push_dest.push((*(_177136_decl))); };
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), (*(_177136_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1ab747d2d_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1ab7560b1_pushMetaNodes(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _177938_tokens) {
	{
		auto &_match_expr{ (*(_177938_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1a91e5327:;
			{
				;
				jule::Ptr<_1aaa8e53d_UseDecl> _178321_decl = _1ab7502ec_buildUseDecl(_self_.ptr(), (*(_177938_tokens)), false);;
				_1ab755c70_pushUseDecl(_self_, &(_178321_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1a91e539e:;
			{
				if ((((*(_177938_tokens)).len() > 1LL) && ((*(_177938_tokens))[1LL].get()._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_1aaa8e53d_UseDecl> _178825_decl = _1ab7542ce_buildBindUse(_self_, (*(_177938_tokens)));;
					_1ab755c70_pushUseDecl(_self_, &(_178825_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1a91e5426:;
			{
				_1ab748768_pushDirective(_self_.ptr(), _1ab7484b0_buildDirective(_self_.ptr(), (*(_177938_tokens))));
				return true;;
			}
		}
		_match_end_1a91e5206:;
	};
	return false;;
}



inline _1aaa4290e_Node _1ab756402_parseNode(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _179934_st) {
	_1aaa4290e_Node _180017_node = _1aaa4290e_Node{._field_Token=(*(_179934_st))[0LL], };;
	if (_1ab7560b1_pushMetaNodes(_self_, _179934_st)) {
		return _180017_node;;
	};
	jule::Any _180817_data = _1ab755456_buildNodeData(_self_, _179934_st);;
	if ((_180817_data == nullptr)) {
		return _180017_node;;
	};
	_180017_node._field_Data=_180817_data;
	_1ab7559b7_applyMeta(_self_.ptr(), &(_180017_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _180017_node;;
}



inline void _1ab7566aa_appendNode(jule::Ptr<_1ab747019_parser> _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _182335_st) {
	if (((*(_182335_st)).len() == 0LL)) {
		return;;
	};
	_1aaa4290e_Node _182717_node = _1ab756402_parseNode(_self_, _182335_st);;
	if (((_182717_node._field_Data == nullptr) || _1ab74759c_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1aaa4290e_Node> &__jule_push_dest = _self_.get()._field_ast.get()._field_Nodes; __jule_push_dest.push(_182717_node); };
}



inline void _1ab756b83_removeRange(_1ab747019_parser* _self_, jule::I32 _183430_i, jule::U32 _183438_id, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _183452_tokens, jule::Slice<jule::I32>* _183475_ranges) {
	jule::U32 _183513_close = _1ab745e3b_getCloseOfBrace(_183438_id);;
	for (; (_183430_i >= 0LL); (_183430_i)--) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _183717_tok = (*(_183452_tokens))[(*(_183475_ranges))[_183430_i]];;
			if ((_183717_tok.get()._field_Id != _183513_close)) {
				goto _iter_next_1a91edcc0;
			};
			(*(_183475_ranges))=jule::append((*(_183475_ranges)).slice(0LL, _183430_i),(*(_183475_ranges)).slice((_183430_i + 1LL)));
			goto _iter_end_1a91edcc0;
		}
	_iter_next_1a91edcc0:;
	}
	_iter_end_1a91edcc0:;;
}



inline void _1ab7570a1_pushWrongOrderCloseErr(_1ab747019_parser* _self_, jule::Ptr<_1c3e3a5e6_Token>* _184642_t, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _184654_tokens, jule::Slice<jule::I32>* _184673_ranges) {
	{
		auto &_match_expr{ (*(_184654_tokens))[(*(_184673_ranges))[((*(_184673_ranges)).len() - 1LL)]].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_1a9200dd2:;
			{
				_1ab7479ba_pushErr(_self_, (*(_184642_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1a9200e59:;
			{
				_1ab7479ba_pushErr(_self_, (*(_184642_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1a9200ed1:;
			{
				_1ab7479ba_pushErr(_self_, (*(_184642_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1a9200cb1:;
	};
}



inline void _1ab757579_pushRangeClose(_1ab747019_parser* _self_, jule::Ptr<_1c3e3a5e6_Token> _185733_t, jule::U32 _185744_left, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _185760_tokens, jule::Slice<jule::I32>* _185783_ranges) {
	jule::I32 _185813_n = (*(_185783_ranges)).len();;
	if ((_185813_n == 0LL)) {
		{
			auto &_match_expr{ _185733_t.get()._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_1a92038da:;
				{
					_1ab7479ba_pushErr(_self_, _185733_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_1a9203962:;
				{
					_1ab7479ba_pushErr(_self_, _185733_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_1a92039d9:;
				{
					_1ab7479ba_pushErr(_self_, _185733_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1a9203841:;
		};
		return;;
	} else if (((*(_185760_tokens))[(*(_185783_ranges))[(_185813_n - 1LL)]].get()._field_Id != _185744_left)) {
		_1ab7570a1_pushWrongOrderCloseErr(_self_, &(_185733_t), _185760_tokens, _185783_ranges);
	};
	_1ab756b83_removeRange(_self_, static_cast<jule::I32>((_185813_n - 1LL)), _185733_t.get()._field_Id, _185760_tokens, _185783_ranges);
}



inline void _1ab757832_checkRanges(_1ab747019_parser* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _187531_tokens) {
	jule::Slice<jule::I32> _187617_ranges = nullptr;;
	{
		auto expr = _187531_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9206811:;
		if (it != expr_end) {
			jule::I32 _187813_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> *_187816_token = it;
			{
				{
					auto &_match_expr{ (*(_187816_token)).get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1a9207515:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _187617_ranges; __jule_push_dest.push(_187813_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a920758c:;
						{
							_1ab757579_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U32>(74LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_1a9207614:;
						{
							_1ab757579_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U32>(72LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1a920768b:;
						{
							_1ab757579_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U32>(76LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					_match_end_1a920745a:;
				};
			}
			_iter_next_1a9206811:;
			++it;
			_187813_i++;
			goto _iter_begin_1a9206811;
		}
		_iter_end_1a9206811:;
	};
	{
		auto expr = &(_187617_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a920679a:;
		if (it != expr_end) {
			jule::I32 _189316_i = *it;
			{
				jule::Ptr<_1c3e3a5e6_Token> _189417_token = (*(_187531_tokens))[_189316_i];;
				{
					auto &_match_expr{ _189417_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a920a0a6:;
						{
							_1ab7479ba_pushErr(_self_, _189417_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1a920a11c:;
						{
							_1ab7479ba_pushErr(_self_, _189417_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1a920a194:;
						{
							_1ab7479ba_pushErr(_self_, _189417_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1a920a051:;
				};
			}
			_iter_next_1a920679a:;
			++it;
			goto _iter_begin_1a920679a;
		}
		_iter_end_1a920679a:;
	};
}



inline void _1ab757ada_parse(jule::Ptr<_1ab747019_parser> _self_, jule::Ptr<_1c3e40db0_File>* _190630_f) {
	_self_.get()._field_ast=jule::new_ptr<_1aaa41996_Ast>(_1aaa41996_Ast{._field_File=(*(_190630_f)), });
	_self_.get()._field_ep=jule::new_ptr<_1ab736415_exprBuilder>(_1ab736415_exprBuilder{._field_p=_self_});
	_1ab757832_checkRanges(_self_.ptr(), &((*(_190630_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1ab7284a1_stmt>> _191917_stmts = _1ab728858_splitStmts(&((*(_190630_f)).get()._field_Tokens));;
	jule::I32 _192217_i = 0LL;;
	for (; (_192217_i < _191917_stmts.len()); (_192217_i)++) {
		{
			jule::Ptr<_1ab7284a1_stmt> _192421_stmt = _191917_stmts[_192217_i];;
			if ((_192421_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_192421_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_1a920d384;
			};
			if ((!(_1c398a94e_IsTopDirective(_192421_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1a920d384;
			};
			{ jule::Slice<jule::Ptr<_1aaa42c61_Directive>> &__jule_push_dest = _self_.get()._field_ast.get()._field_TopDirectives; __jule_push_dest.push(_1ab7484b0_buildDirective(_self_.ptr(), _192421_stmt.get()._field_tokens)); };
		}
	_iter_next_1a920d384:;
	}
	_iter_end_1a920d384:;;
	_self_.get()._field_errors=nullptr;
	for (; (_192217_i < _191917_stmts.len()); (_192217_i)++) {
		{
			jule::Ptr<_1ab7284a1_stmt> _194121_stmt = _191917_stmts[_192217_i];;
			_1ab7566aa_appendNode(_self_, &(_194121_stmt.get()._field_tokens));
			if (_1ab74759c_stopped(_self_.ptr())) {
				goto _iter_end_1a920d708;
			};
		}
	_iter_next_1a920d708:;
	}
	_iter_end_1a920d708:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1ab7479ba_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ab747019_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1ab759427_pushErr(_1ab758d83_typeBuilder* _self_, jule::Ptr<_1c3e3a5e6_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1ab7479ba_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1ab75978a_pushSuggestion(_1ab758d83_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1ab747d2d_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab759a21_buildNamespace(_1ab758d83_typeBuilder* _self_) {
	jule::Ptr<_1aaa765e1_TypeDecl> _5517_t = jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1aaa7738e_NamespaceTypeDecl> _5917_nst = jule::new_ptr<_1aaa7738e_NamespaceTypeDecl>();;
	jule::I32 _6017_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _6221_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6017_n & 1LL) == 0LL)) {
				if ((_6221_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
					_1ab759427_pushErr(_self_, _6221_token, jule::Str("invalid syntax", 14));
					_1ab75978a_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> &__jule_push_dest = _5917_nst.get()._field_Idents; __jule_push_dest.push(_6221_token); };
			} else if ((_6221_token.get()._field_Id != static_cast<jule::U32>(19LLU))) {
				goto _iter_end_1a9215897;
			};
			(_6017_n)++;
		}
	_iter_next_1a9215897:;
	}
	_iter_end_1a9215897:;;
	_5917_nst.get()._field_Idents=_5917_nst.get()._field_Idents.slice(0LL, (_5917_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_5917_nst.get()._field_Kind=_1ab75a2c4_buildIdent(_self_);
	_5517_t.get()._field_Kind=jule::Any(_5917_nst, &__jule_any_type97);
	return _5517_t;;
}



inline jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> _1ab759ca7_buildGenerics(_1ab758d83_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1c3e3a5e6_Token> _8813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((_8813_token.get()._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _9317_parts = _1ab75a03d_identGenerics(_self_);;
	if ((_9317_parts.len() == 0LL)) {
		_1ab759427_pushErr(_self_, _8813_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> _9917_types = jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>>::alloc(0LL, _9317_parts.len());;
	{
		auto expr = &(_9317_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a921b88c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _10021_part = *it;
			{
				jule::I32 _10121_j = 0LL;;
				jule::Ptr<_1aaa765e1_TypeDecl> _10222_t;;
				({
					__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType((*(_self_))._field_p, &(_10021_part), (&(_10121_j)), true);
					_10222_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10121_j < _10021_part.len())) {
					_1ab759427_pushErr(_self_, _10021_part[_10121_j], jule::Str("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>> &__jule_push_dest = _9917_types; __jule_push_dest.push(_10222_t); };
			}
			_iter_next_1a921b88c:;
			++it;
			goto _iter_begin_1a921b88c;
		}
		_iter_end_1a921b88c:;
	};
	return _9917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _1ab75a03d_identGenerics(_1ab758d83_typeBuilder* _self_) {
	jule::I32 _11213_first = (*((*(_self_))._field_i));;
	jule::I32 _11317_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _11517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ _11517_token.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_1a9220bc1:;
					{
						(_11317_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1a9220c48:;
					{
						(_11317_rangeN)--;
					}
				}
				_match_end_1a92204a6:;
			};
			if ((_11317_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1a921ece1;
			};
		}
	_iter_next_1a921ece1:;
	}
	_iter_end_1a921ece1:;;
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _12717_tokens = (*(_self_))._field_tokens.slice((_11213_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _12818_parts;;
	jule::Slice<_1c3983b45_Log> _12825_errors;;
	({
		__jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab745b72_parts(&(_12717_tokens), static_cast<jule::U32>(5LLU), true);
		_12818_parts = __jule_assign_result.__jule_result_arg0;
		_12825_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*(_self_))._field_p.get()._field_errors).append(_12825_errors);;
	};
	return _12818_parts;;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75a2c4_buildIdent(_1ab758d83_typeBuilder* _self_) {
	jule::Bool _13617_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13617_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _1ab759a21_buildNamespace(_self_);;
	};
	jule::Ptr<_1c3e3a5e6_Token> _14017_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1aaa76beb_IdentTypeDecl> _14117_it = jule::new_ptr<_1aaa76beb_IdentTypeDecl>(_1aaa76beb_IdentTypeDecl{._field_Token=_14017_token, ._field_Ident=_14017_token.get()._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1aaa765e1_TypeDecl> _14717_itd = jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=_14017_token, ._field_Kind=jule::Any(_14117_it, &__jule_any_type20)});;
	if (((!(_13617_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U32>(17LLU)))) {
		_14117_it.get()._field_Generics=_1ab759ca7_buildGenerics(_self_);
		return _14717_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1ab759427_pushErr(_self_, _14017_token, jule::Str("invalid syntax", 14));
		return _14717_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1ab759427_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _14717_itd;;
	};
	jule::Ptr<_1aaa76ee8_SubIdentTypeDecl> _16417_sit = jule::new_ptr<_1aaa76ee8_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1aaa76beb_IdentTypeDecl>> &__jule_push_dest = _16417_sit.get()._field_Idents; __jule_push_dest.push(_14117_it); };
	jule::Ptr<_1aaa765e1_TypeDecl> _16617_ident = _1ab75a2c4_buildIdent(_self_);;
	{
		auto &_match_expr{ _16617_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1a922a89b:;
			{
				{ jule::Slice<jule::Ptr<_1aaa76beb_IdentTypeDecl>> &__jule_push_dest = _16417_sit.get()._field_Idents; __jule_push_dest.push(_16617_ident.get()._field_Kind.cast_ptr<_1aaa76beb_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1a922a912:;
			{
				(_16417_sit.get()._field_Idents).append(_16617_ident.get()._field_Kind.cast_ptr<_1aaa76ee8_SubIdentTypeDecl>(&__jule_any_type93).get()._field_Idents);;
			}
		}
		_match_end_1a922a846:;
	};
	return jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=_14017_token, ._field_Kind=jule::Any(_16417_sit, &__jule_any_type93)});;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75a55a_buildCppLink(_1ab758d83_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U32>(17LLU)))) {
		_1ab759427_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1aaa765e1_TypeDecl> _18517_t = _1ab75a2c4_buildIdent(_self_);;
	_18517_t.get()._field_Kind.cast_ptr<_1aaa76beb_IdentTypeDecl>(&__jule_any_type20).get()._field_Binded=true;
	return _18517_t;;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75a7e1_buildFn(_1ab758d83_typeBuilder* _self_) {
	jule::Ptr<_1c3e3a5e6_Token> _19117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1aaa8837d_FnDecl> _19217_f = _1ab74d75c_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19217_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aaa886e1_IsAnon(_19217_f.ptr())))) {
		_1ab759427_pushErr(_self_, _19217_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=_19117_token, ._field_Kind=jule::Any(_19217_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75aa77_buildPtr(_1ab758d83_typeBuilder* _self_) {
	jule::Ptr<_1c3e3a5e6_Token> _20617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ab759427_pushErr(_self_, _20617_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=_20617_token, ._field_Kind=jule::Any(jule::new_ptr<_1aaa7811a_PtrTypeDecl>(_1aaa7811a_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type77)});;
	};
	jule::Ptr<_1aaa765e1_TypeDecl> _22317_elem = _1ab75bacd_step(_self_);;
	if ((_22317_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=_20617_token, ._field_Kind=jule::Any(jule::new_ptr<_1aaa7811a_PtrTypeDecl>(_1aaa7811a_PtrTypeDecl{._field_Elem=_22317_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75ad0d_buildSptr(_1ab758d83_typeBuilder* _self_) {
	jule::Ptr<_1c3e3a5e6_Token> _23717_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1ab759427_pushErr(_self_, _23717_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1aaa765e1_TypeDecl> _24417_elem = _1ab75bacd_step(_self_);;
	if ((_24417_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=_23717_token, ._field_Kind=jule::Any(jule::new_ptr<_1aaa7768b_SptrTypeDecl>(_1aaa7768b_SptrTypeDecl{._field_Elem=_24417_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75b094_buildSlc(_1ab758d83_typeBuilder* _self_) {
	jule::Ptr<_1c3e3a5e6_Token> _25817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1aaa765e1_TypeDecl> _26017_elem = _1ab75bacd_step(_self_);;
	if ((_26017_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=_25817_token, ._field_Kind=jule::Any(jule::new_ptr<_1aaa77a21_SlcTypeDecl>(_1aaa77a21_SlcTypeDecl{._field_Elem=_26017_elem}), &__jule_any_type76)});;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75b32a_buildArr(_1ab758d83_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _27317_exprTokens = _1ab745402_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ab759427_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1aaa765e1_TypeDecl> _27917_elem = _1ab75bacd_step(_self_);;
	if ((_27917_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aaa788ac_ArrTypeDecl> _28417_arrt = jule::new_ptr<_1aaa788ac_ArrTypeDecl>(_1aaa788ac_ArrTypeDecl{._field_Elem=_27917_elem, });;
	jule::Ptr<_1c3e3a5e6_Token> _28817_token = _27317_exprTokens[0LL];;
	if (((_27317_exprTokens.len() == 1LL) && (_28817_token.get()._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		_28417_arrt.get()._field_Size=_1ab74816e_buildExpr((*(_self_))._field_p, &(_27317_exprTokens));
	};
	return jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=_28817_token, ._field_Kind=jule::Any(_28417_arrt, &__jule_any_type75)});;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75b5b1_buildMap(_1ab758d83_typeBuilder* _self_) {
	jule::Ptr<_1c3e3a5e6_Token> _30217_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ab759427_pushErr(_self_, _30217_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _31017_keyTokens = _1ab745402_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1ab759427_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_31017_keyTokens.len() == 0LL)) {
		_1ab759427_pushErr(_self_, _30217_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1aaa7910a_MapTypeDecl> _31917_mapt = jule::new_ptr<_1aaa7910a_MapTypeDecl>();;
	jule::I32 _32017_j = 0LL;;
	jule::Ptr<_1aaa765e1_TypeDecl> _32118_keyt;;
	jule::Bool _32128_ok = false;;
	({
		__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType((*(_self_))._field_p, &(_31017_keyTokens), (&(_32017_j)), (*(_self_))._field_err);
		_32118_keyt = __jule_assign_result.__jule_result_arg0;
		_32128_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32128_ok))) {
		return nullptr;;
	} else if ((_32017_j < _31017_keyTokens.len())) {
		_1ab759427_pushErr(_self_, _31017_keyTokens[_32017_j], jule::Str("invalid syntax", 14));
	};
	_31917_mapt.get()._field_Key=_32118_keyt;
	jule::Ptr<_1aaa765e1_TypeDecl> _32918_valt;;
	({
		__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_assign_result = _1ab7495c1_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32918_valt = __jule_assign_result.__jule_result_arg0;
		_32128_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32128_ok))) {
		return nullptr;;
	};
	_31917_mapt.get()._field_Val=_32918_valt;
	return jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Token=_30217_mapToken, ._field_Kind=jule::Any(_31917_mapt, &__jule_any_type79)});;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75b847_buildEnumerable(_1ab758d83_typeBuilder* _self_) {
	jule::Ptr<_1c3e3a5e6_Token> _34117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1ab759427_pushErr(_self_, _34117_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34117_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((_34117_token.get()._field_Id == static_cast<jule::U32>(77LLU))) {
		return _1ab75b094_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1ab75b32a_buildArr(_self_);;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab75bacd_step(_1ab758d83_typeBuilder* _self_) {
	jule::Ptr<_1c3e3a5e6_Token> _35613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _35613_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1a924dda8:;
			{
				return _1ab75a2c4_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1a924de1e:;
			{
				return _1ab75a55a_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1a924d3d5:;
			{
				return _1ab75a7e1_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a924d44b:;
			{
				return _1ab75aa77_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1a924d4b2:;
			{
				return _1ab75ad0d_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1a924d528:;
			{
				return jule::new_ptr<_1aaa765e1_TypeDecl>(_1aaa765e1_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1aaa7768b_SptrTypeDecl>(_1aaa7768b_SptrTypeDecl{._field_Elem=_1ab75ad0d_buildSptr(_self_)}), &__jule_any_type78)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1a924dea7:;
			{
				return _1ab75b847_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1a924e01d:;
			{
				return _1ab75b5b1_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1a924d36e:;
			{
				((*((*(_self_))._field_i)))++;
				_1ab759427_pushErr(_self_, _35613_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1a924d319:;
	};
}



inline __jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool _1ab75bd64_build(_1ab758d83_typeBuilder* _self_) {
	__jule_tuple_x_1aaa765e1_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aaa765e1_TypeDecl> _38817_root = _1ab75bacd_step(_self_);;
	if ((_38817_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1ab7585d0_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38817_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab758d83_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aae03c04_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1aae0570b_pushErr(_1aae051ab_directiveEval* _self_, jule::Ptr<_1c3e3a5e6_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_1c3983b45_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1c3983b45_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1c39840a7_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _1aae05b07_splitOperans(_1aae051ab_directiveEval* _self_, jule::U32 _3331_op, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>>::alloc(0LL, 10LL);;
	jule::I32 _3517_i = 0LL;;
	jule::I32 _3617_rangeN = 0LL;;
	jule::I32 _3717_last = 0LL;;
	for (; (_3517_i < ((*(_3349_tokens)).len() - 1LL)); (_3517_i)++) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _3917_b = (*(_3349_tokens))[_3517_i];;
			{
				auto &_match_expr{ _3917_b.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a9273185:;
					{
						(_3617_rangeN)++;
						goto _iter_next_1a927253b;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a927320c:;
					{
						(_3617_rangeN)--;
					}
				}
				_match_end_1a9272c45:;
			};
			if (((_3617_rangeN > 0LL) || (_3917_b.get()._field_Id != _3331_op))) {
				goto _iter_next_1a927253b;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3717_last, _3517_i)); };
			_3717_last=static_cast<jule::I32>((_3517_i + 1LL));
		}
	_iter_next_1a927253b:;
	}
	_iter_end_1a927253b:;;
	if ((_3717_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3717_last)); };
	} else {
		_1aae0570b_pushErr(_self_, (*(_3349_tokens))[(_3717_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1aae05e48_evalDirectiveIdent(_1aae051ab_directiveEval* _self_, jule::Str _6433_ident) {
	if (_6433_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92759a1:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1a92759a1:;
			++it;
			goto _iter_begin_1a92759a1;
		}
		_iter_end_1a92759a1:;
	};
	return false;;
}



inline jule::Bool _1aae06289_evalDirectivePart(_1aae051ab_directiveEval* _self_, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _7840_part) {
	jule::Bool _7913_logicalNot = (_7840_part[0LL].get()._field_Id == static_cast<jule::U32>(68LLU));;
	if (_7913_logicalNot) {
		_7840_part=_7840_part.slice(1LL);
	};
	if ((_7840_part.len() > 1LL)) {
		_1aae0570b_pushErr(_self_, _7840_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8917_result = _1aae05e48_evalDirectiveIdent(_self_, _7840_part[0LL].get()._field_Kind);;
	if (_7913_logicalNot) {
		_8917_result=(!(_8917_result));
	};
	return _8917_result;;
}



inline jule::Bool _1aae06520_eval(_1aae051ab_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_1aae0570b_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10217_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _10417_logicalOrParts = _1aae05b07_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*(_self_))._field_d.get()._field_Args));;
	if ((_10417_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10417_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a927aca3:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _10921_part = *it;
			{
				jule::Bool _11021_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _11121_logicalAndParts = _1aae05b07_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10921_part));;
				if ((_11121_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11121_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a927c4be:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1c3e3a5e6_Token> _11721_first = _11625_andPart[0LL];;
							if ((_11721_first.get()._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_1c3e3a5e6_Token> _11925_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if ((_11925_end.get()._field_Id != static_cast<jule::U32>(75LLU))) {
									_1aae0570b_pushErr(_self_, _11721_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_11625_andPart=_11625_andPart.slice(1LL, (_11625_andPart.len() - 1LL));
							};
							_11021_and=(_11021_and && _1aae06289_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1a927c4be:;
						++it;
						goto _iter_begin_1a927c4be;
					}
					_iter_end_1a927c4be:;
				};
				_10217_result=(_10217_result || _11021_and);
			}
			_iter_next_1a927aca3:;
			++it;
			goto _iter_begin_1a927aca3;
		}
		_iter_end_1a927aca3:;
	};
	return _10217_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aae051ab_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ab75ceb9_JuleImporter> static__1ab75d3b5_New(_1aae03c04_CompileInfo _5819_info) {
	jule::Ptr<_1ab75ceb9_JuleImporter> _5917_imp = jule::new_ptr<_1ab75ceb9_JuleImporter>(_1ab75ceb9_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1c3a94bbd_PathStdlib}), });;
	_1aae04584_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1aab24c33_ImportInfo>> _1ab75d64b_AllPackages(_1ab75ceb9_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1ab75da8b_SetModPath(_1ab75ceb9_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1ab75dd22_GetModPath(_1ab75ceb9_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1ab75e163_ModById(_1ab75ceb9_JuleImporter* _self_, jule::I32 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1ab75e4a4_GetImport(_1ab75ceb9_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9283838:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1a9283838:;
			++it;
			goto _iter_begin_1a9283838;
		}
		_iter_end_1a9283838:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log _1ab75e8a0_ImportPackage(_1ab75ceb9_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log __jule_func_result;
	jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>> _9717_dirents = ({
		auto except = static__1c38e42ae_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1c3983b45_Log>::make({_1ab75c9d0_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1aab42080_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_1c3983b45_Log> _10525_errs = _1aab42349_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1aaa41996_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1aaa41996_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9284dcd:;
		if (it != expr_end) {
			jule::Ptr<_206b6d2a2_DirEntry> _11316_dirent = *it;
			{
				if ((_206b7bda4_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1c38be586_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1a9284dcd;
				};
				jule::Str _11917__path = _1c38e1157_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1c3e40db0_File> _12021_file = _1c3e42257_NewFileSet(_11917__path);;
				_1c3e4129a_Fill(_12021_file.ptr(), _1ab75c705_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1c3983b45_Log> _12221_errors = _1c3e4d86d_Lex(_12021_file, static_cast<jule::I32>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1ab6d1943_FileInfo> _12721_finfo = _1ab7261d5_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1aae02d9b_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1a9284dcd;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_1c3983b45_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab760087_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1a9284dcd;
				};
				{ jule::Slice<jule::Ptr<_1aaa41996_Ast>> &__jule_push_dest = _11217_asts; __jule_push_dest.push(_12721_finfo.get()._field_Ast); };
			}
			_iter_next_1a9284dcd:;
			++it;
			goto _iter_begin_1a9284dcd;
		}
		_iter_end_1a9284dcd:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ab75eb58_Imported(_1ab75ceb9_JuleImporter* _self_, jule::Ptr<_1aab24c33_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a928be6d:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_Binded == _15331_imp.get()._field_Binded) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1a928be6d:;
			++it;
			goto _iter_begin_1a928be6d;
		}
		_iter_end_1a928be6d:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a928d7ee:;
			if (it != expr_end) {
				jule::I32 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_1a92909bb;
					};
				}
				_iter_next_1a928d7ee:;
				++it;
				_16217_i++;
				goto _iter_begin_1a928d7ee;
			}
			_iter_end_1a928d7ee:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I32>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1a92909bb:;
	};
	{ jule::Slice<jule::Ptr<_1aab24c33_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1c3983b45_Log _1ab760087_isPassBuildDirectives(_1ab75ceb9_JuleImporter* _self_, jule::Ptr<_1aaa41996_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1c3983b45_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9291ec8:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42c61_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_1a9291ec8;
				};
				_1aae051ab_directiveEval _18421_de = _1aae051ab_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _1aae06520_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1a9291ec8:;
			++it;
			goto _iter_begin_1a9291ec8;
		}
		_iter_end_1a9291ec8:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab75ceb9_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab7631cd_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1a92b19cb_isCommonOrdered(jule::Slice<jule::Ptr<_1aaa972b0_Struct>> _1834_s, jule::Ptr<_1aaa972b0_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92b2a21:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a92b335c:;
					if (it != expr_end) {
						jule::Ptr<_1aaa972b0_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1a92b335c:;
						++it;
						goto _iter_begin_1a92b335c;
					}
					_iter_end_1a92b335c:;
				};
			}
			_iter_next_1a92b2a21:;
			++it;
			goto _iter_begin_1a92b2a21;
		}
		_iter_end_1a92b2a21:;
	};
	return true;;
}

inline jule::Bool _1a92b641a_isCommonOrdered(jule::Slice<jule::Ptr<_1aab68969_Var>> _1834_s, jule::Ptr<_1aab68969_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92b741b:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a92b7c57:;
					if (it != expr_end) {
						jule::Ptr<_1aab68969_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1a92b7c57:;
						++it;
						goto _iter_begin_1a92b7c57;
					}
					_iter_end_1a92b7c57:;
				};
			}
			_iter_next_1a92b741b:;
			++it;
			goto _iter_begin_1a92b741b;
		}
		_iter_end_1a92b741b:;
	};
	return true;;
}



inline void _1a92ad5aa_orderCommon(jule::Slice<jule::Ptr<_1aaa972b0_Struct>>* _3135_s) {
	jule::I32 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92aea62:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I32 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1a92b19cb_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I32>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1a92b0788:;
				}
				_iter_end_1a92b0788:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1a92aea62;
				};
				(_3217_n)--;
			}
			_iter_next_1a92aea62:;
			++it;
			goto _iter_begin_1a92aea62;
		}
		_iter_end_1a92aea62:;
	};
}

inline void _1a92b236c_orderCommon(jule::Slice<jule::Ptr<_1aab68969_Var>>* _3135_s) {
	jule::I32 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92b44a1:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I32 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1a92b641a_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I32>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1a92b51c7:;
				}
				_iter_end_1a92b51c7:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1a92b44a1;
				};
				(_3217_n)--;
			}
			_iter_next_1a92b44a1:;
			++it;
			goto _iter_begin_1a92b44a1;
		}
		_iter_end_1a92b44a1:;
	};
}



inline void static__1ab763d38_orderStructures(jule::Slice<jule::Ptr<_1aaa972b0_Struct>>* _5136_structs) {
	_1a92ad5aa_orderCommon(_5136_structs);
}



inline void static__1ab764069_orderVars(jule::Slice<jule::Ptr<_1aab68969_Var>>* _5730_vars) {
	_1a92b236c_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1ab763442_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab9517c8_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1ac59971c_optimizeChild(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Ptr<_1aab037e4_Scope>* _3938_s) {
	jule::Ptr<_1ac599266_scopeDeadCode> _4017_sdc = jule::new_ptr<_1ac599266_scopeDeadCode>(_1ac599266_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1ac59c137_optimizeStmts(_4017_sdc);
	};
}



inline void _1ac5999c5_optimizeBodyChildExceptional(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Ptr<_1aab037e4_Scope>* _5053_s) {
	jule::Ptr<_1ac599266_scopeDeadCode> _5117_sdc = jule::new_ptr<_1ac599266_scopeDeadCode>(_1ac599266_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1ac59c137_optimizeStmts(_5117_sdc);
	};
}



inline void _1ac599c7d_optimizeBodyChild(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Ptr<_1aab037e4_Scope>* _6142_s) {
	jule::Ptr<_1ac599266_scopeDeadCode> _6217_sdc = jule::new_ptr<_1ac599266_scopeDeadCode>(_1ac599266_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1ac59c137_optimizeStmts(_6217_sdc);
	};
}



inline void _1ac59a036_optimizeExprModel(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1ac59d4bd_exprDeadCode _7213_edc = static__1ac59db2d_new(&(_self_));;
	_1ac5a50b8_optimize(&_7213_edc, _7142_model);
}



inline void _1ac59a234_eliminateFollowed(_1ac599266_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1ac599266_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1a9331aa1:;
	}
	_iter_end_1a9331aa1:;;
}



inline void _1ac59a4dc_pushGoto(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Ptr<_1aab06561_GotoSt> _9232_gt) {
	jule::I32 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1a9334aa4:;
	}
	_iter_end_1a9334aa4:;;
	{ jule::Slice<jule::Ptr<_1aab06561_GotoSt>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1ac59a795_pushLabel(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Ptr<_1aab06187_Label> _10233_l) {
	jule::I32 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1a9336666;
			};
			(_10317_i)++;
		}
	_iter_next_1a9336666:;
	}
	_iter_end_1a9336666:;;
	{ jule::Slice<jule::Ptr<_1aab06187_Label>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1ac59aa4d_optimizeRangeIter(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Ptr<_1aab0562b_RangeIter> _11541_it) {
	_1ac59a036_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1ac599c7d_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1ac59ad06_optimizeWhileIter(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Ptr<_1aab04bd0_WhileIter> _12041_it) {
	_1ac59a036_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1ac59be39_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1ac599c7d_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1ac59b0ae_optimizeInfIter(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Ptr<_1aab04729_InfIter> _12839_it) {
	_1ac599c7d_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1ac59b367_optimizeConditional(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Ptr<_1aab0442c_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a933b869:;
		if (it != expr_end) {
			jule::Ptr<_1aab03c12_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1ac59a036_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1ac599c7d_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_1a933b869:;
			++it;
			goto _iter_begin_1a933b869;
		}
		_iter_end_1a933b869:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1ac59971c_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1ac599c7d_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1ac59b620_optimizeMatch(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Ptr<_1aab0792a_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a933d915:;
		if (it != expr_end) {
			jule::Ptr<_1aab08563_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a933e839:;
					if (it != expr_end) {
						jule::Ptr<_1aabbbe1d_Data> _15225_expr = *it;
						{
							_1ac59a036_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_1a933e839:;
						++it;
						goto _iter_begin_1a933e839;
					}
					_iter_end_1a933e839:;
				};
				_1ac599c7d_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_1a933d915:;
			++it;
			goto _iter_begin_1a933d915;
		}
		_iter_end_1a933d915:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1ac59971c_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1ac599c7d_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1ac59b8c8_optimizeAssign(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Ptr<_1aab06de1_Assign> _16838_assign) {
	_1ac59a036_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1ac59a036_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1ac59bb81_optimizeMultiAssign(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Ptr<_1aab072ba_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a934270a:;
		if (it != expr_end) {
			jule::Ptr<_1aabbbe1d_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1ac59a036_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_1a934270a:;
			++it;
			goto _iter_begin_1a934270a;
		}
		_iter_end_1a934270a:;
	};
	_1ac59a036_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1ac59be39_optimizeStmt(jule::Ptr<_1ac599266_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a9343d5a:;
			{
				jule::Ptr<_1aab037e4_Scope> _18521_scope = _18236_st.cast_ptr<_1aab037e4_Scope>(&__jule_any_type22);;
				if (_18521_scope.get()._field_Deferred) {
					_1ac59c467_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1ac59971c_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a9343dc1:;
			{
				_1ac59aa4d_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1aab0562b_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a9343e37:;
			{
				_1ac59ad06_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1aab04bd0_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a9343eae:;
			{
				_1ac59b0ae_optimizeInfIter(_self_, _18236_st.cast_ptr<_1aab04729_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a9344036:;
			{
				_1ac59b367_optimizeConditional(_self_, _18236_st.cast_ptr<_1aab0442c_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a93440ad:;
			{
				_1ac59b620_optimizeMatch(_self_, _18236_st.cast_ptr<_1aab0792a_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a9344135:;
			{
				_1ac59b8c8_optimizeAssign(_self_, _18236_st.cast_ptr<_1aab06de1_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a93441ac:;
			{
				_1ac59bb81_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1aab072ba_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a9344234:;
			{
				jule::Ptr<_1aabbbe1d_Data> _20621_d = _18236_st.cast_ptr<_1aabbbe1d_Data>(&__jule_any_type24);;
				if (_self_.get()._field_except) {
					goto _match_end_1a9343c17;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_1a9348d1b:;
						{
							_1ac59a234_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1a93492b1:;
						{
							_1ac59a036_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_1a934925b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a93442ab:;
			{
				_1ac59a234_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a9344333:;
			{
				_1ac59a4dc_pushGoto(_self_, _18236_st.cast_ptr<_1aab06561_GotoSt>(&__jule_any_type43));
				_1ac59a234_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a93443aa:;
			{
				_1ac59a795_pushLabel(_self_, _18236_st.cast_ptr<_1aab06187_Label>(&__jule_any_type21));
			}
		}
		_match_end_1a9343c17:;
	};
}



inline void _1ac59c137_optimizeStmts(jule::Ptr<_1ac599266_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1ac59be39_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1a9349426:;
	}
	_iter_end_1a9349426:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ac599266_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1ac59d4bd_exprDeadCode static__1ac59db2d_new(jule::Ptr<_1ac599266_scopeDeadCode>* _5024_s) {
	return _1ac59d4bd_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1ac59ddd6_binary(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaa9e96b_BinopExprModel> _5625_m) {
	_1ac5a50b8_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1ac5a50b8_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1ac59e18e_unary(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaa9ed45_UnaryExprModel> _6124_m) {
	_1ac5a50b8_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1ac59e447_structureLit(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa0719_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a934c47e:;
		if (it != expr_end) {
			jule::Ptr<_1aaaa0373_StructArgExprModel> _6621_arg = *it;
			{
				_1ac5a50b8_optimize(_self_, &(_6621_arg.get()._field_Expr.get()._field_Model));
			}
			_iter_next_1a934c47e:;
			++it;
			goto _iter_begin_1a934c47e;
		}
		_iter_end_1a934c47e:;
	};
}



inline void _1ac59e700_allocStructure(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa0a16_AllocStructLitExprModel> _7133_m) {
	_1ac59e447_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1ac59e9a8_casting(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa1099_CastingExprModel> _7526_m) {
	_1ac5a50b8_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1ac59ec61_args(_1ac59d4bd_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a934e3b5:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1ac5a50b8_optimize(_self_, &(_8021_arg));
			}
			_iter_next_1a934e3b5:;
			++it;
			goto _iter_begin_1a934e3b5;
		}
		_iter_end_1a934e3b5:;
	};
}



inline void _1ac5a0019_funcCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa194b_FnCallExprModel> _8527_m) {
	_1ac5a50b8_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1ac59ec61_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1ac5999c5_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1ac5a02c2_slice(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa1d25_SliceExprModel> _9324_m) {
	_1ac59ec61_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1ac5a057a_array(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa4d6c_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1ac5a50b8_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1ac59ec61_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1ac5a0833_indexing(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa22cb_IndexingExprModel> _10427_m) {
	_1ac5a50b8_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1ac5a50b8_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1ac5a0adb_anonFunc(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa26a5_AnonFnExprModel> _10927_m) {
	_1ac59c467_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1ac5a0d94_mapExpr(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa3035_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9354860:;
		if (it != expr_end) {
			jule::Ptr<_1aaaa2a7e_KeyValPairExprModel> _11421_pair = *it;
			{
				_1ac5a50b8_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1ac5a50b8_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_1a9354860:;
			++it;
			goto _iter_begin_1a9354860;
		}
		_iter_end_1a9354860:;
	};
}



inline void _1ac5a114c_slicing(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa35b8_SlicingExprModel> _12026_m) {
	_1ac5a50b8_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1ac5a50b8_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1ac5a50b8_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1ac5a1405_traitSub(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa3b4b_TraitSubIdentExprModel> _12827_m) {
	_1ac5a50b8_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1ac5a16ad_structureSub(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> _13231_m) {
	_1ac5a50b8_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1ac5a1966_commonSub(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa56ec_CommonSubIdentExprModel> _13628_m) {
	_1ac5a50b8_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1ac5a1c1e_tuple(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa59e9_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9358666:;
		if (it != expr_end) {
			jule::Ptr<_1aabbbe1d_Data> _14121_d = *it;
			{
				_1ac5a50b8_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_1a9358666:;
			++it;
			goto _iter_begin_1a9358666;
		}
		_iter_end_1a9358666:;
	};
}



inline void _1ac5a1ec7_newCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa6973_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1ac5a50b8_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1ac5a2280_outCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa5dc3_BuiltinOutCallExprModel> _15226_m) {
	_1ac5a50b8_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1ac5a2538_outlnCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa629c_BuiltinOutlnCallExprModel> _15628_m) {
	_1ac5a50b8_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1ac5a27e1_panicCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa6d4c_BuiltinPanicCallExprModel> _16028_m) {
	_1ac5a50b8_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1ac5a2a99_assertCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa7303_BuiltinAssertCallExprModel> _16429_m) {
	_1ac5a50b8_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1ac5a2d52_errorCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa903b_BuiltinErrorCallExprModel> _16828_m) {
	_1ac5a50b8_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1ac5a310a_makeCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa77a9_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1ac5a50b8_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1ac5a50b8_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1ac5a33b3_appendCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa7b83_BuiltinAppendCallExprModel> _18129_m) {
	_1ac5a50b8_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1ac5a50b8_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1ac5a366b_lenCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa7e80_BuiltinLenCallExprModel> _18626_m) {
	_1ac5a50b8_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1ac5a3924_capCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa827c_BuiltinCapCallExprModel> _19026_m) {
	_1ac5a50b8_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1ac5a3bcc_cloneCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa6599_BuiltinCloneCallExprModel> _19428_m) {
	_1ac5a50b8_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1ac5a3e85_deleteCall(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa88ed_BuiltinDeleteCallExprModel> _19829_m) {
	_1ac5a50b8_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1ac5a50b8_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1ac5a423d_sizeof(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa9338_SizeofExprModel> _20525_m) {
	_1ac5a50b8_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1ac5a44e6_alignof(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa9635_AlignofExprModel> _20926_m) {
	_1ac5a50b8_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1ac5a479e_integratedToStr(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaa9c2e_IntegratedToStrExprModel> _21334_m) {
	_1ac5a50b8_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1ac5a4a57_free(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaaa405_FreeExprModel> _21723_m) {
	_1ac5a50b8_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1ac5a4d10_backendEmit(_1ac59d4bd_exprDeadCode* _self_, jule::Ptr<_1aaaaa108_BackendEmitExprModel> _22130_m) {
	_1ac59ec61_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1ac5a50b8_optimize(_1ac59d4bd_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a93652aa:;
			{
				_1ac59ddd6_binary(_self_, (*(_22528_model)).cast_ptr<_1aaa9e96b_BinopExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a9365321:;
			{
				_1ac59e18e_unary(_self_, (*(_22528_model)).cast_ptr<_1aaa9ed45_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a9365387:;
			{
				_1ac59e447_structureLit(_self_, (*(_22528_model)).cast_ptr<_1aaaa0719_StructLitExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1a936540e:;
			{
				_1ac59e700_allocStructure(_self_, (*(_22528_model)).cast_ptr<_1aaaa0a16_AllocStructLitExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1a9365486:;
			{
				_1ac59e9a8_casting(_self_, (*(_22528_model)).cast_ptr<_1aaaa1099_CastingExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a936550d:;
			{
				_1ac5a0019_funcCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa194b_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a9365585:;
			{
				_1ac5a02c2_slice(_self_, (*(_22528_model)).cast_ptr<_1aaaa1d25_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a936560c:;
			{
				_1ac5a057a_array(_self_, (*(_22528_model)).cast_ptr<_1aaaa4d6c_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a9365684:;
			{
				_1ac5a0833_indexing(_self_, (*(_22528_model)).cast_ptr<_1aaaa22cb_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1a936570b:;
			{
				_1ac5a0adb_anonFunc(_self_, (*(_22528_model)).cast_ptr<_1aaaa26a5_AnonFnExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1a9365783:;
			{
				_1ac5a0d94_mapExpr(_self_, (*(_22528_model)).cast_ptr<_1aaaa3035_MapExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a936580a:;
			{
				_1ac5a114c_slicing(_self_, (*(_22528_model)).cast_ptr<_1aaaa35b8_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a9365882:;
			{
				_1ac5a1405_traitSub(_self_, (*(_22528_model)).cast_ptr<_1aaaa3b4b_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a9365909:;
			{
				_1ac5a16ad_structureSub(_self_, (*(_22528_model)).cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a9365981:;
			{
				_1ac5a1966_commonSub(_self_, (*(_22528_model)).cast_ptr<_1aaaa56ec_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a9365a08:;
			{
				_1ac5a1c1e_tuple(_self_, (*(_22528_model)).cast_ptr<_1aaaa59e9_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a9365a80:;
			{
				_1ac5a2280_outCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa5dc3_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a9365b07:;
			{
				_1ac5a2538_outlnCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa629c_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a9365b7e:;
			{
				_1ac5a1ec7_newCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa6973_BuiltinNewCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a9365c06:;
			{
				_1ac5a27e1_panicCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa6d4c_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a9365c7d:;
			{
				_1ac5a2a99_assertCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa7303_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a9365d05:;
			{
				_1ac5a2d52_errorCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa903b_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a9365d7c:;
			{
				_1ac5a310a_makeCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa77a9_BuiltinMakeCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a9365e04:;
			{
				_1ac5a33b3_appendCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa7b83_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a9365e7b:;
			{
				_1ac5a366b_lenCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa7e80_BuiltinLenCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1a9366003:;
			{
				_1ac5a3924_capCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa827c_BuiltinCapCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a936607a:;
			{
				_1ac5a3bcc_cloneCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa6599_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a9366102:;
			{
				_1ac5a3e85_deleteCall(_self_, (*(_22528_model)).cast_ptr<_1aaaa88ed_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1a9366179:;
			{
				_1ac5a423d_sizeof(_self_, (*(_22528_model)).cast_ptr<_1aaaa9338_SizeofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1a9366201:;
			{
				_1ac5a44e6_alignof(_self_, (*(_22528_model)).cast_ptr<_1aaaa9635_AlignofExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1a9366278:;
			{
				_1ac5a479e_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_1aaaa9c2e_IntegratedToStrExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a9366300:;
			{
				_1ac5a4a57_free(_self_, (*(_22528_model)).cast_ptr<_1aaaaa405_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a9366377:;
			{
				_1ac5a4d10_backendEmit(_self_, (*(_22528_model)).cast_ptr<_1aaaaa108_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1a9364ee1:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ac59d4bd_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aace8643_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aace8bd7_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aace8ed4_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aace9358_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aace96ee_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aace9ac8_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aace9dc5_InlineStdInternalNosafeStobs _Src) {
	_Stream << "InlineStdInternalNosafeStobs{";
	_Stream << "Str:" << _Src._field_Str;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1aaceb14b_scopeOptimizer> static__1aaceb657_new(jule::Ptr<_1aab037e4_Scope> _4623_scope) {
	return jule::new_ptr<_1aaceb14b_scopeOptimizer>(_1aaceb14b_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1aaceb910_setCurrentStmt(_1aaceb14b_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1aacebbb8_optimizeData(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aabbbe1d_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a93a970b:;
			{
				jule::Ptr<_1aaaa194b_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_1aaaa194b_FnCallExprModel>(&__jule_any_type35);;
				if (_205b16b42_Production) {
					if (((!(_1aaab7533_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _1aaceeade_isStdPackage(&(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path), jule::Str("debug", 5)))) {
						_1aaceb910_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1a93a96a6:;
	};
	static__1aad01e98_optimize(&(_5635_d.get()._field_Model));
}



inline void _1aacebe71_optimizeVar(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aab68969_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__1aad01e98_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1aacec229_optimizeConditional(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aab0442c_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93ac3e0:;
		if (it != expr_end) {
			jule::Ptr<_1aab03c12_If> _7821_elif = *it;
			{
				static__1aad01e98_optimize(&(_7821_elif.get()._field_Expr));
				_1aacee46d_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_1a93ac3e0:;
			++it;
			goto _iter_begin_1a93ac3e0;
		}
		_iter_end_1a93ac3e0:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_1aacee46d_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1ab76818e_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93ade3b:;
		if (it != expr_end) {
			jule::I32 _9314_i = it - expr->begin();
			jule::Ptr<_1aab03c12_If> _9321_elif = *it;
			{
				if ((!(_1aaceedec_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_1a93ade3b;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_1aab0400e_Else>(_1aab0400e_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_1a93ade3b;
			}
			_iter_next_1a93ade3b:;
			++it;
			_9314_i++;
			goto _iter_begin_1a93ade3b;
		}
		_iter_end_1a93ade3b:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1aab03c12_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1aab03c12_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_1aad007c1_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_1a93b1db7:;
	}
	_iter_end_1a93b1db7:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I32 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93b334c:;
		if (it != expr_end) {
			jule::I32 _13013_j = it - expr->begin();
			jule::Ptr<_1aab03c12_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_1a93b334c:;
			++it;
			_13013_j++;
			goto _iter_begin_1a93b334c;
		}
		_iter_end_1a93b334c:;
	};
	if ((_12917_only != -1LL)) {
		_1aaceb910_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1aacec647_buildDefaultConstantTrueCase(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aab08563_Case> _14651_case, jule::I32* _14669_i, jule::Ptr<_1aab0792a_Match>* _14682_m) {
	_14651_case.get()._field_Exprs=nullptr;
	jule::I32 _14813_start = (*(_14669_i));;
	_julec_label_1a93b5b46:;
	for (;;) {
		{
			if ((_14651_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1a93b5aad;
			};
			jule::Any *_15422_stmt = &(_14651_case.get()._field_Scope.get()._field_Stmts[(_14651_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_1a93b7450:;
					{
						((*(_14669_i)))++;
						if (((*(_14669_i)) >= (*(_14682_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14682_m)).get()._field_Default.get()._field_Scope, &__jule_any_type22);
							goto _iter_end_1a93b5aad;
						};
						_14651_case=(*(_14682_m)).get()._field_Cases[(*(_14669_i))];
						(*(_15422_stmt))=jule::Any(_14651_case.get()._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1a93b75a4:;
					{
						goto _iter_end_1a93b5aad;
					}
				}
				_match_end_1a93b754e:;
			};
		}
	_iter_next_1a93b5aad:;
	}
	_iter_end_1a93b5aad:;;
	(*(_14682_m)).get()._field_Default=(*(_14682_m)).get()._field_Cases[_14813_start];
	(*(_14682_m)).get()._field_Cases=(*(_14682_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _1aacec900_optimizeMatch(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aab0792a_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93b94c9:;
		if (it != expr_end) {
			jule::Ptr<_1aab08563_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a93b9d15:;
					if (it != expr_end) {
						jule::Ptr<_1aabbbe1d_Data> _17425_expr = *it;
						{
							static__1aad01e98_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_1a93b9d15:;
						++it;
						goto _iter_begin_1a93b9d15;
					}
					_iter_end_1a93b9d15:;
				};
				_1aacee46d_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_1a93b94c9:;
			++it;
			goto _iter_begin_1a93b94c9;
		}
		_iter_end_1a93b94c9:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_1aacee46d_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1ab76818e_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93bb575:;
		if (it != expr_end) {
			jule::I32 _19018_i = it - expr->begin();
			jule::Ptr<_1aab08563_Case> _19025_case = *it;
			{
				if ((!(_1aad00507_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_1a93bb575;
				};
				_18717_constCase=true;
				_1aacec647_buildDefaultConstantTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_1a93bb575;
			}
			_iter_next_1a93bb575:;
			++it;
			_19018_i++;
			goto _iter_begin_1a93bb575;
		}
		_iter_end_1a93bb575:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1aab08563_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1aab08563_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_1aad00a8a_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_1a93bde18:;
	}
	_iter_end_1a93bde18:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I32 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93bed92:;
		if (it != expr_end) {
			jule::I32 _22013_j = it - expr->begin();
			jule::Ptr<_1aab08563_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_1a93bed92:;
			++it;
			_22013_j++;
			goto _iter_begin_1a93bed92;
		}
		_iter_end_1a93bed92:;
	};
	if ((_21917_only != -1LL)) {
		_1aaceb910_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1aacecba8_optimizeRangeIter(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aab0562b_RangeIter> _23640_it) {
	static__1aad01e98_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_1aacee46d_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _1aacece61_optimizeWhileIter(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aab04bd0_WhileIter> _24140_it) {
	static__1aad01e98_optimize(&(_24140_it.get()._field_Expr));
	_1aacee1b5_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_1aacee46d_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _1aaced2a2_substr(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aab06de1_Assign> _24729_a) {
	if ((_24729_a.get()._field_Op.get()._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a93c410a:;
			{
				jule::Ptr<_1aaaa35b8_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_1aaaa35b8_SlicingExprModel>(&__jule_any_type98);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_1aaceb910_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aace8bd7_MutSlicingExprModel>(_1aace8bd7_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1a93c40a5:;
	};
	return false;;
}



inline jule::Bool _1aaced5e3_strAssign(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aab06de1_Assign> _26732_a) {
	if ((!(_1ab768458_Str))) {
		return false;;
	};
	jule::Ptr<_1aac05066_Prim> _27113_lp = _1aabeeadd_Prim(_26732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_27113_lp == nullptr) || (!(_1aac084ed_IsStr(_27113_lp.ptr()))))) {
		return false;;
	};
	return _1aaced2a2_substr(_self_, _26732_a);;
}



inline void _1aaced89b_optimizeAssign(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aab06de1_Assign> _27837_assign) {
	if (_1aaced5e3_strAssign(_self_, _27837_assign)) {
		return;;
	};
	static__1aad01e98_optimize(&(_27837_assign.get()._field_L.get()._field_Model));
	static__1aad01e98_optimize(&(_27837_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _27837_assign.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1a93c896c:;
			{
				if ((_1ab767468_Math && (_1aac01161_Struct(_27837_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_27837_assign.get()._field_Op.get()._field_Kind=_27837_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_27837_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _29125_model = jule::Any(jule::new_ptr<_1aaa9e96b_BinopExprModel>(_1aaa9e96b_BinopExprModel{._field_Left=_27837_assign.get()._field_L, ._field_Right=_27837_assign.get()._field_R, ._field_Op=_27837_assign.get()._field_Op}), &__jule_any_type115);;
					static__1aad01e98_optimize(&(_29125_model));
					{
						auto &_match_expr{ _29125_model };
						
						if (_match_expr.type == &__jule_any_type115) {
							_case_begin_1a93cb0ac:;
							{
								_27837_assign.get()._field_R=jule::new_ptr<_1aaa9e471_OperandExprModel>((*(_27837_assign.get()._field_R)));
								_27837_assign.get()._field_Op.get()._field_Id=static_cast<jule::U32>(71LLU);
								_27837_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_27837_assign.get()._field_R.get()._field_Model=_29125_model;
								return;;
							}
						}
						_match_end_1a93cadc0:;
					};
					_27837_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1a93c8917:;
	};
	if (_1ab76715a_Append) {
		{
			auto &_match_expr{ _27837_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1a93ccc6d:;
				{
					jule::Ptr<_1aaaa7b83_BuiltinAppendCallExprModel> _31325_m = _27837_assign.get()._field_R.get()._field_Model.cast_ptr<_1aaaa7b83_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1aad095ee_areSameLvalueExprModel(&(_27837_assign.get()._field_L.get()._field_Model), &(_31325_m.get()._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ _31325_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type83) {
							_case_begin_1a93cde5b:;
							{
								_1aaceb910_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aace96ee_PushToSliceExprModel>(_1aace96ee_PushToSliceExprModel{._field_Dest=_31325_m.get()._field_Dest, ._field_Elems=_31325_m.get()._field_Elements.cast_ptr<_1aaaa1d25_SliceExprModel>(&__jule_any_type83)}), &__jule_any_type125));
							}
						}
						else {
							_case_begin_1a93ce3ac:;
							{
								_1aaceb910_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1aace9ac8_AppendToSliceExprModel>(_1aace9ac8_AppendToSliceExprModel{._field_Dest=_27837_assign.get()._field_L.get()._field_Model, ._field_Slice=_31325_m.get()._field_Elements}), &__jule_any_type126));
							}
						}
						_match_end_1a93ce357:;
					};
				}
			}
			_match_end_1a93ccc18:;
		};
	};
}



inline void _1aacedb54_optimizeMultiAssign(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aab072ba_MultiAssign> _33542_assign) {
	{
		auto expr = &(_33542_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93d04ce:;
		if (it != expr_end) {
			jule::Ptr<_1aabbbe1d_Data> _33621_l = *it;
			{
				if ((_33621_l != nullptr)) {
					static__1aad01e98_optimize(&(_33621_l.get()._field_Model));
				};
			}
			_iter_next_1a93d04ce:;
			++it;
			goto _iter_begin_1a93d04ce;
		}
		_iter_end_1a93d04ce:;
	};
	static__1aad01e98_optimize(&(_33542_assign.get()._field_R));
}



inline void _1aacede0c_optimizeRet(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aab08ee2_RetSt> _34434_r) {
	static__1aad01e98_optimize(&(_34434_r.get()._field_Expr));
}



inline void _1aacee1b5_optimizeStmt(_1aaceb14b_scopeOptimizer* _self_, jule::Any _34835_stmt) {
	{
		auto &_match_expr{ _34835_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a93d22e4:;
			{
				_1aacee46d_optimizeChild(_self_, _34835_stmt.cast_ptr<_1aab037e4_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a93d235a:;
			{
				_1aacebbb8_optimizeData(_self_, _34835_stmt.cast_ptr<_1aabbbe1d_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a93d23c1:;
			{
				_1aacebe71_optimizeVar(_self_, _34835_stmt.cast_ptr<_1aab68969_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a93d2437:;
			{
				_1aacec229_optimizeConditional(_self_, _34835_stmt.cast_ptr<_1aab0442c_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a93d249d:;
			{
				_1aacecba8_optimizeRangeIter(_self_, _34835_stmt.cast_ptr<_1aab0562b_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a93d2514:;
			{
				_1aacece61_optimizeWhileIter(_self_, _34835_stmt.cast_ptr<_1aab04bd0_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a93d257a:;
			{
				_1aacee46d_optimizeChild(_self_, _34835_stmt.cast_ptr<_1aab04729_InfIter>(&__jule_any_type37).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a93d25e1:;
			{
				_1aaced89b_optimizeAssign(_self_, _34835_stmt.cast_ptr<_1aab06de1_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a93d2668:;
			{
				_1aacedb54_optimizeMultiAssign(_self_, _34835_stmt.cast_ptr<_1aab072ba_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a93d26e0:;
			{
				_1aacec900_optimizeMatch(_self_, _34835_stmt.cast_ptr<_1aab0792a_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a93d2767:;
			{
				_1aacede0c_optimizeRet(_self_, _34835_stmt.cast_ptr<_1aab08ee2_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_1a93d21b2:;
	};
}



inline void _1aacee46d_optimizeChild(_1aaceb14b_scopeOptimizer* _self_, jule::Ptr<_1aab037e4_Scope> _37536_child) {
	jule::Ptr<_1aaceb14b_scopeOptimizer> _37617_so = static__1aaceb657_new(_37536_child);;
	_1aacee66b_optimize(_37617_so.ptr());
}



inline void _1aacee66b_optimize(_1aaceb14b_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93d204c:;
		if (it != expr_end) {
			jule::I32 _38214_i = it - expr->begin();
			jule::Any _38221_stmt = *it;
			{
				(*(_self_))._field_i=_38214_i;
				_1aacee1b5_optimizeStmt(_self_, _38221_stmt);
			}
			_iter_next_1a93d204c:;
			++it;
			_38214_i++;
			goto _iter_begin_1a93d204c;
		}
		_iter_end_1a93d204c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aaceb14b_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1aad01e98_optimize(jule::Any* _5829_model) {
	if (_1ac5a563a_exprEnabled) {
		jule::Ptr<_1aad01926_exprOptimizer> _6121_exop = jule::new_ptr<_1aad01926_exprOptimizer>(_1aad01926_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_1aad08cb3_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1aad022d9_strCond(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaa9e96b_BinopExprModel> _6826_m) {
	jule::Ptr<_1aac05066_Prim> _6913_lp = _1aabeeadd_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1aac084ed_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((_6826_m.get()._field_Op.get()._field_Id != static_cast<jule::U32>(50LLU)) && (_6826_m.get()._field_Op.get()._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a93e5cb9:;
			{
				({
					jule::Ptr<_1aaa9e471_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1aaa9e471_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_1a93e7073;
			}
		}
		_match_end_1a93e5c64:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a93e501b:;
			{
				goto _match_end_1a93e6d20;
			}
		}
		else {
			_case_begin_1a93e6d75:;
			{
				return true;;
			}
		}
		_match_end_1a93e6d20:;
	};
	_julec_label_1a93e7073:;
	jule::Ptr<_1c4cbcda1_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1c4cbcda1_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1a93e7e20:;
			{
				if (_1c4cc0029_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1aaaa56ec_CommonSubIdentExprModel>(_1aaaa56ec_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_1a93e7dba;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_1aace8643_StrCompExprModel>(_1aace8643_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type127);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1a93e7e97:;
			{
				if (_1c4cc0029_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_1c3e3a5e6_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Id=static_cast<jule::U32>(68LLU);
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1aaa9ed45_UnaryExprModel>(_1aaa9ed45_UnaryExprModel{._field_Expr=jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Model=jule::Any(jule::new_ptr<_1aaaa56ec_CommonSubIdentExprModel>(_1aaaa56ec_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_1a93e7dba;
				};
				jule::Any _12221_model = jule::Any(jule::new_ptr<_1aace8643_StrCompExprModel>(_1aace8643_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type127);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12221_model))))));
			}
		}
		_match_end_1a93e7dba:;
	};
	return true;;
}



inline void _1aad02592_binary(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaa9e96b_BinopExprModel> _13225_m) {
	static__1aad01e98_optimize(&(_13225_m.get()._field_Left.get()._field_Model));
	static__1aad01e98_optimize(&(_13225_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13225_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a93eb495:;
			{
				goto _match_end_1a93eee8d;
			}
		}
		else {
			_case_begin_1a93eeee3:;
			{
				return;;
			}
		}
		_match_end_1a93eee8d:;
	};
	if ((_1ab76818e_Cond && _1aad022d9_strCond(_self_, _13225_m))) {
		return;;
	};
	if ((!(_1ab767468_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13225_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a9400eb1:;
			{
				jule::Bool _15218_ok = false;;
				jule::U64 _15222_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1aad09236_checkForBitShiftOpt(&(_13225_m.get()._field_Left), &(_13225_m.get()._field_Right));
					_15218_ok = __jule_assign_result.__jule_result_arg0;
					_15222_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15218_ok) {
					_13225_m.get()._field_Op.get()._field_Id=static_cast<jule::U32>(56LLU);
					_13225_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1c4cbcda1_Const> _15625_c = _13225_m.get()._field_Right.get()._field_Model.cast_ptr<_1c4cbcda1_Const>(&__jule_any_type19);;
					_1c4cc10c4_SetU64(_15625_c.ptr(), _15222_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1a9401038:;
			{
				jule::Bool _16118_ok = false;;
				jule::U64 _16122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1aad09236_checkForBitShiftOpt(&(_13225_m.get()._field_Left), &(_13225_m.get()._field_Right));
					_16118_ok = __jule_assign_result.__jule_result_arg0;
					_16122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_16118_ok) {
					_13225_m.get()._field_Op.get()._field_Id=static_cast<jule::U32>(57LLU);
					_13225_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1c4cbcda1_Const> _16525_c = _13225_m.get()._field_Right.get()._field_Model.cast_ptr<_1c4cbcda1_Const>(&__jule_any_type19);;
					_1c4cc10c4_SetU64(_16525_c.ptr(), _16122_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a94010b0:;
			{
				jule::Ptr<_1c4cbcda1_Const> _17021_c = _13225_m.get()._field_Right.get()._field_Model.cast_ptr<_1c4cbcda1_Const>(&__jule_any_type19);;
				jule::F64 _17117_d = _1c4cc0a63_AsF64(_17021_c.ptr());;
				if ((_17117_d == 2LL)) {
					_13225_m.get()._field_Op.get()._field_Id=static_cast<jule::U32>(65LLU);
					_13225_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1c4cc0d1b_SetI64(_17021_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1a9400e39:;
	};
	jule::Any _17817_model = jule::Any(jule::new_ptr<_1aace8ed4_UnsafeBinopExprModel>(_1aace8ed4_UnsafeBinopExprModel{._field_Node=_13225_m}), &__jule_any_type128);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17817_model))))));
}



inline void _1aad0284a_unary(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaa9ed45_UnaryExprModel> _18224_m) {
	static__1aad01e98_optimize(&(_18224_m.get()._field_Expr.get()._field_Model));
	if ((_1ab767cb5_Ptr && (_18224_m.get()._field_Op.get()._field_Id == static_cast<jule::U32>(62LLU)))) {
		{
			auto &_match_expr{ _18224_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_1a940897a:;
				{
					jule::Ptr<_1aaa9ed45_UnaryExprModel> _18725_um = _18224_m.get()._field_Expr.get()._field_Model.cast_ptr<_1aaa9ed45_UnaryExprModel>(&__jule_any_type74);;
					if ((_18725_um.get()._field_Op.get()._field_Id == static_cast<jule::U32>(65LLU))) {
						(*((*(_self_))._field_model))=_18725_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1a94086a0:;
		};
	};
}



inline void _1aad02b03_structureLit(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa0719_StructLitExprModel> _19531_m) {
	{
		auto expr = &(_19531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a940a4e8:;
		if (it != expr_end) {
			jule::Ptr<_1aaaa0373_StructArgExprModel> _19621_arg = *it;
			{
				static__1aad01e98_optimize(&(_19621_arg.get()._field_Expr.get()._field_Model));
			}
			_iter_next_1a940a4e8:;
			++it;
			goto _iter_begin_1a940a4e8;
		}
		_iter_end_1a940a4e8:;
	};
}



inline void _1aad02dab_allocStructure(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa0a16_AllocStructLitExprModel> _20133_m) {
	_1aad02b03_structureLit(_self_, _20133_m.get()._field_Lit);
}



inline void _1aad03164_casting(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa1099_CastingExprModel> _20526_m) {
	static__1aad01e98_optimize(&(_20526_m.get()._field_Expr));
}



inline void _1aad0341c_args(_1aad01926_exprOptimizer* _self_, jule::Slice<jule::Any>* _20924_args) {
	{
		auto expr = _20924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a940bdac:;
		if (it != expr_end) {
			jule::I32 _21014_i = it - expr->begin();
			jule::Any _21021_arg = *it;
			{
				static__1aad01e98_optimize(&(_21021_arg));
				(*(_20924_args))[_21014_i]=_21021_arg;
			}
			_iter_next_1a940bdac:;
			++it;
			_21014_i++;
			goto _iter_begin_1a940bdac;
		}
		_iter_end_1a940bdac:;
	};
}



inline void _1aad036c5_scope(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aab037e4_Scope>* _21625_s) {
	jule::Ptr<_1aaceb14b_scopeOptimizer> _21717_scopt = static__1aaceb657_new((*(_21625_s)));;
	_1aacee66b_optimize(_21717_scopt.ptr());
}



inline jule::Bool _1aad03a16_optimizeSpecialFuncCalls(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa194b_FnCallExprModel>* _22144_m) {
	_1ab764cd4_stdCacheData _22214_data;;
	jule::Bool _22220_ok = false;;
	_1ab765213_stdCache.lookup(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_22144_m)).get()._field_Func)), &(_22214_data), &(_22220_ok));
	if ((!(_22220_ok))) {
		return false;;
	};
	_22214_data._field_do(_self_, &(_22214_data), _22144_m);
	return true;;
}



inline void _1aad03cbe_funcCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa194b_FnCallExprModel> _23027_m) {
	if ((_1ac5a5bbd_stdEnabled && _1aad03a16_optimizeSpecialFuncCalls(_self_, &(_23027_m)))) {
		return;;
	};
	static__1aad01e98_optimize(&(_23027_m.get()._field_Expr));
	_1aad0341c_args(_self_, &(_23027_m.get()._field_Args));
	if ((_23027_m.get()._field_Except != nullptr)) {
		_1aad036c5_scope(_self_, &(_23027_m.get()._field_Except));
	};
}



inline void _1aad04077_slice(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa1d25_SliceExprModel> _24124_m) {
	_1aad0341c_args(_self_, &(_24124_m.get()._field_Elems));
}



inline void _1aad04330_array(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa4d6c_ArrayExprModel> _24524_m) {
	if (((_24524_m.get()._field_Elems.len() == 2LL) && (_24524_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _24721_elem = _24524_m.get()._field_Elems[0LL];;
		static__1aad01e98_optimize(&(_24721_elem));
		_24524_m.get()._field_Elems[0LL]=_24721_elem;
	};
	_1aad0341c_args(_self_, &(_24524_m.get()._field_Elems));
}



inline void _1aad045d8_indexing(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa22cb_IndexingExprModel> _25427_m) {
	static__1aad01e98_optimize(&(_25427_m.get()._field_Expr.get()._field_Model));
	static__1aad01e98_optimize(&(_25427_m.get()._field_Index.get()._field_Model));
	if ((!(_1ab767732_Access))) {
		return;;
	};
	jule::Bool _26013_array = (_1aac008ad_Arr(_25427_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_26013_array && _1aabbc7e2_IsConst(_25427_m.get()._field_Index.ptr()))) {
		jule::Any _26321_model = jule::Any(jule::new_ptr<_1aace9358_UnsafeIndexingExprModel>(_1aace9358_UnsafeIndexingExprModel{._field_Node=_25427_m}), &__jule_any_type129);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26321_model))))));
		return;;
	};
	{
		auto &_match_expr{ _25427_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a9416207:;
			{
				jule::Ptr<_1aab68969_Var> _26917_i = _25427_m.get()._field_Index.get()._field_Model.cast_ptr<_1aab68969_Var>(&__jule_any_type8);;
				if ((_26917_i.get()._field_Mutable || (_26917_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1a94161a2;
				};
				{
					auto &_match_expr{ _25427_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a9417879:;
						{
							jule::Ptr<_1aab68969_Var> _27521_r = _25427_m.get()._field_Expr.get()._field_Model.cast_ptr<_1aab68969_Var>(&__jule_any_type8);;
							if ((_26917_i.get()._field_IterRelation.get()._field_Range == _27521_r)) {
								jule::Any _27829_model = jule::Any(jule::new_ptr<_1aace9358_UnsafeIndexingExprModel>(_1aace9358_UnsafeIndexingExprModel{._field_Node=_25427_m}), &__jule_any_type129);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_27829_model))))));
							};
						}
					}
					_match_end_1a9417824:;
				};
			}
		}
		_match_end_1a94161a2:;
	};
}



inline void _1aad04891_anonFunc(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa26a5_AnonFnExprModel> _28527_m) {
	_1aad036c5_scope(_self_, &(_28527_m.get()._field_Func.get()._field_Scope));
}



inline void _1aad04b49_mapExpr(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa3035_MapExprModel> _28926_m) {
	{
		auto expr = &(_28926_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9419d54:;
		if (it != expr_end) {
			jule::Ptr<_1aaaa2a7e_KeyValPairExprModel> _29021_pair = *it;
			{
				static__1aad01e98_optimize(&(_29021_pair.get()._field_Key));
				static__1aad01e98_optimize(&(_29021_pair.get()._field_Val));
			}
			_iter_next_1a9419d54:;
			++it;
			goto _iter_begin_1a9419d54;
		}
		_iter_end_1a9419d54:;
	};
}



inline void _1aad04e02_slicing(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa35b8_SlicingExprModel> _29626_m) {
	static__1aad01e98_optimize(&(_29626_m.get()._field_Expr));
	static__1aad01e98_optimize(&(_29626_m.get()._field_Left));
	if ((_29626_m.get()._field_Right != nullptr)) {
		static__1aad01e98_optimize(&(_29626_m.get()._field_Right));
	};
}



inline void _1aad051aa_traitSub(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa3b4b_TraitSubIdentExprModel> _30427_m) {
	static__1aad01e98_optimize(&(_30427_m.get()._field_Expr));
}



inline void _1aad05463_structureSub(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> _30831_m) {
	static__1aad01e98_optimize(&(_30831_m.get()._field_Expr.get()._field_Model));
}



inline void _1aad0571b_commonSub(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa56ec_CommonSubIdentExprModel> _31228_m) {
	static__1aad01e98_optimize(&(_31228_m.get()._field_Expr));
}



inline void _1aad059c4_tuple(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa59e9_TupleExprModel> _31624_m) {
	{
		auto expr = &(_31624_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a941cb04:;
		if (it != expr_end) {
			jule::Ptr<_1aabbbe1d_Data> _31721_d = *it;
			{
				static__1aad01e98_optimize(&(_31721_d.get()._field_Model));
			}
			_iter_next_1a941cb04:;
			++it;
			goto _iter_begin_1a941cb04;
		}
		_iter_end_1a941cb04:;
	};
}



inline void _1aad05c7c_newCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa6973_BuiltinNewCallExprModel> _32226_m) {
	if ((_32226_m.get()._field_Init != nullptr)) {
		static__1aad01e98_optimize(&(_32226_m.get()._field_Init));
	};
}



inline void _1aad06035_outCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa5dc3_BuiltinOutCallExprModel> _32826_m) {
	static__1aad01e98_optimize(&(_32826_m.get()._field_Expr));
}



inline void _1aad062dd_outlnCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa629c_BuiltinOutlnCallExprModel> _33228_m) {
	static__1aad01e98_optimize(&(_33228_m.get()._field_Expr));
}



inline void _1aad06596_panicCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa6d4c_BuiltinPanicCallExprModel> _33628_m) {
	static__1aad01e98_optimize(&(_33628_m.get()._field_Expr));
}



inline void _1aad0684e_assertCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa7303_BuiltinAssertCallExprModel> _34029_m) {
	static__1aad01e98_optimize(&(_34029_m.get()._field_Expr));
}



inline void _1aad06b07_errorCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa903b_BuiltinErrorCallExprModel> _34428_m) {
	static__1aad01e98_optimize(&(_34428_m.get()._field_Err.get()._field_Model));
}



inline void _1aad06db0_makeCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa77a9_BuiltinMakeCallExprModel> _34827_m) {
	if ((_34827_m.get()._field_Len != nullptr)) {
		static__1aad01e98_optimize(&(_34827_m.get()._field_Len));
	};
	if ((_34827_m.get()._field_Cap != nullptr)) {
		static__1aad01e98_optimize(&(_34827_m.get()._field_Cap));
	};
}



inline void _1aad07168_appendCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa7b83_BuiltinAppendCallExprModel> _35729_m) {
	static__1aad01e98_optimize(&(_35729_m.get()._field_Dest));
	static__1aad01e98_optimize(&(_35729_m.get()._field_Elements));
}



inline void _1aad07421_lenCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa7e80_BuiltinLenCallExprModel> _36226_m) {
	static__1aad01e98_optimize(&(_36226_m.get()._field_Expr.get()._field_Model));
}



inline void _1aad076c9_capCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa827c_BuiltinCapCallExprModel> _36626_m) {
	static__1aad01e98_optimize(&(_36626_m.get()._field_Expr.get()._field_Model));
}



inline void _1aad07982_cloneCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa6599_BuiltinCloneCallExprModel> _37028_m) {
	static__1aad01e98_optimize(&(_37028_m.get()._field_Expr));
}



inline void _1aad07c3a_deleteCall(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa88ed_BuiltinDeleteCallExprModel> _37429_m) {
	static__1aad01e98_optimize(&(_37429_m.get()._field_Dest.get()._field_Model));
	if ((_37429_m.get()._field_Key != nullptr)) {
		static__1aad01e98_optimize(&(_37429_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1aad07ee3_sizeof(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa9338_SizeofExprModel> _38125_m) {
	static__1aad01e98_optimize(&(_38125_m.get()._field_Expr));
}



inline void _1aad0829b_alignof(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa9635_AlignofExprModel> _38526_m) {
	static__1aad01e98_optimize(&(_38526_m.get()._field_Expr));
}



inline void _1aad08554_integratedToStr(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaa9c2e_IntegratedToStrExprModel> _38934_m) {
	static__1aad01e98_optimize(&(_38934_m.get()._field_Expr));
}



inline void _1aad0880c_free(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaaa405_FreeExprModel> _39323_m) {
	static__1aad01e98_optimize(&(_39323_m.get()._field_Expr));
}



inline void _1aad08ab5_backendEmit(_1aad01926_exprOptimizer* _self_, jule::Ptr<_1aaaaa108_BackendEmitExprModel> _39730_m) {
	_1aad0341c_args(_self_, &(_39730_m.get()._field_Exprs));
}



inline void _1aad08cb3_do(_1aad01926_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a94261c3:;
			{
				_1aad02592_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaa9e96b_BinopExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a9426239:;
			{
				_1aad0284a_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaa9ed45_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a94262a0:;
			{
				_1aad02b03_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa0719_StructLitExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1a9426327:;
			{
				_1aad02dab_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa0a16_AllocStructLitExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1a942639e:;
			{
				_1aad03164_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa1099_CastingExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a9426426:;
			{
				_1aad03cbe_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa194b_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a942649d:;
			{
				_1aad04077_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa1d25_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a9426525:;
			{
				_1aad04330_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa4d6c_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a942659c:;
			{
				_1aad045d8_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa22cb_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1a9426624:;
			{
				_1aad04891_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa26a5_AnonFnExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1a942669b:;
			{
				_1aad04b49_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa3035_MapExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a9426723:;
			{
				_1aad04e02_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa35b8_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a942679a:;
			{
				_1aad051aa_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa3b4b_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a9426822:;
			{
				_1aad05463_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a9426899:;
			{
				_1aad0571b_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa56ec_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a9426921:;
			{
				_1aad059c4_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa59e9_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a9426998:;
			{
				_1aad06035_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa5dc3_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a9426a20:;
			{
				_1aad062dd_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa629c_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a9426a97:;
			{
				_1aad05c7c_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa6973_BuiltinNewCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a9426b1e:;
			{
				_1aad06596_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa6d4c_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a9426b96:;
			{
				_1aad0684e_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa7303_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a9426c1d:;
			{
				_1aad06b07_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa903b_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a9426c95:;
			{
				_1aad06db0_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa77a9_BuiltinMakeCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a9426d1c:;
			{
				_1aad07168_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa7b83_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a9426d94:;
			{
				_1aad07421_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa7e80_BuiltinLenCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1a9426e1b:;
			{
				_1aad076c9_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa827c_BuiltinCapCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a9426e93:;
			{
				_1aad07982_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa6599_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a942701a:;
			{
				_1aad07c3a_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa88ed_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1a9427092:;
			{
				_1aad07ee3_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa9338_SizeofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1a9427119:;
			{
				_1aad0829b_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa9635_AlignofExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1a9427191:;
			{
				_1aad08554_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaa9c2e_IntegratedToStrExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a9427218:;
			{
				_1aad0880c_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaaa405_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a9427290:;
			{
				_1aad08ab5_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1aaaaa108_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1a9425e09:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aad01926_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ab764cd4_stdCacheData _Src) {
	_Stream << "stdCacheData{";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "do:" << _Src._field_do;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac5a5e54_Optimizer> static__1ac5a6394_New(jule::Ptr<_1ab76097d_IR>* _2724_ir) {
	return jule::new_ptr<_1ac5a5e54_Optimizer>(_1ac5a5e54_Optimizer{._field_ir=(*(_2724_ir))});;
}



inline void _1ac5a664c_optimizeGlobal(_1ac5a5e54_Optimizer* _self_, jule::Ptr<_1aab68969_Var>* _3338_v) {
	if ((!((*(_3338_v)).get()._field_Binded))) {
		static__1aad01e98_optimize(&((*(_3338_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1ac5a6905_optimizeFunction(_1ac5a5e54_Optimizer* _self_, jule::Ptr<_1aaab3199_Fn>* _3940_func) {
	if ((*(_3940_func)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_3940_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9443520:;
		if (it != expr_end) {
			jule::Ptr<_1aaab609d_FnIns> _4321_ins = *it;
			{
				jule::Ptr<_1aaceb14b_scopeOptimizer> _4421_so = static__1aaceb657_new(_4321_ins.get()._field_Scope);;
				_1aacee66b_optimize(_4421_so.ptr());
			}
			_iter_next_1a9443520:;
			++it;
			goto _iter_begin_1a9443520;
		}
		_iter_end_1a9443520:;
	};
}



inline void _1ac5a6bad_optimizeStruct(_1ac5a5e54_Optimizer* _self_, jule::Ptr<_1aaa972b0_Struct>* _4938_s) {
	if ((*(_4938_s)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_4938_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94449a5:;
		if (it != expr_end) {
			jule::Ptr<_1aaa9a390_StructIns> _5321_ins = *it;
			{
				{
					auto expr = &(_5321_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9445214:;
					if (it != expr_end) {
						jule::Ptr<_1aaa997e0_FieldIns> _5425_f = *it;
						{
							if ((_5425_f.get()._field_Default != nullptr)) {
								static__1aad01e98_optimize(&(_5425_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_1a9445214:;
						++it;
						goto _iter_begin_1a9445214;
					}
					_iter_end_1a9445214:;
				};
				{
					auto expr = &(_5321_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a9445c2b:;
					if (it != expr_end) {
						jule::Ptr<_1aaab3199_Fn> _5925_m = *it;
						{
							_1ac5a6905_optimizeFunction(_self_, &(_5925_m));
						}
						_iter_next_1a9445c2b:;
						++it;
						goto _iter_begin_1a9445c2b;
					}
					_iter_end_1a9445c2b:;
				};
			}
			_iter_next_1a94449a5:;
			++it;
			goto _iter_begin_1a94449a5;
		}
		_iter_end_1a94449a5:;
	};
}



inline void _1ac5a6e66_optimizeGlobals(_1ac5a5e54_Optimizer* _self_, jule::Ptr<_1aab27b59_Package>* _6539_p) {
	{
		auto expr = &((*(_6539_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a94464ce:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _6621_f = *it;
			{
				{
					auto expr = &(_6621_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a944715b:;
					if (it != expr_end) {
						jule::Ptr<_1aab68969_Var> _6725_v = *it;
						{
							_1ac5a664c_optimizeGlobal(_self_, &(_6725_v));
						}
						_iter_next_1a944715b:;
						++it;
						goto _iter_begin_1a944715b;
					}
					_iter_end_1a944715b:;
				};
			}
			_iter_next_1a94464ce:;
			++it;
			goto _iter_begin_1a94464ce;
		}
		_iter_end_1a94464ce:;
	};
}



inline void _1ac5a721e_optimizeFunctions(_1ac5a5e54_Optimizer* _self_, jule::Ptr<_1aab27b59_Package>* _7341_p) {
	{
		auto expr = &((*(_7341_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9447711:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _7421_f = *it;
			{
				{
					auto expr = &(_7421_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a944837c:;
					if (it != expr_end) {
						jule::Ptr<_1aaab3199_Fn> _7525_func = *it;
						{
							_1ac5a6905_optimizeFunction(_self_, &(_7525_func));
						}
						_iter_next_1a944837c:;
						++it;
						goto _iter_begin_1a944837c;
					}
					_iter_end_1a944837c:;
				};
			}
			_iter_next_1a9447711:;
			++it;
			goto _iter_begin_1a9447711;
		}
		_iter_end_1a9447711:;
	};
}



inline void _1ac5a74c7_optimizeStructs(_1ac5a5e54_Optimizer* _self_, jule::Ptr<_1aab27b59_Package>* _8139_p) {
	{
		auto expr = &((*(_8139_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9448932:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _8221_f = *it;
			{
				{
					auto expr = &(_8221_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a944959d:;
					if (it != expr_end) {
						jule::Ptr<_1aaa972b0_Struct> _8325_s = *it;
						{
							_1ac5a6bad_optimizeStruct(_self_, &(_8325_s));
						}
						_iter_next_1a944959d:;
						++it;
						goto _iter_begin_1a944959d;
					}
					_iter_end_1a944959d:;
				};
			}
			_iter_next_1a9448932:;
			++it;
			goto _iter_begin_1a9448932;
		}
		_iter_end_1a9448932:;
	};
}



inline void _1ac5a7780_optimizePackage(_1ac5a5e54_Optimizer* _self_, jule::Ptr<_1aab27b59_Package>* _8939_p) {
	_1ac5a6e66_optimizeGlobals(_self_, _8939_p);
	_1ac5a721e_optimizeFunctions(_self_, _8939_p);
	_1ac5a74c7_optimizeStructs(_self_, _8939_p);
}



inline void _1ac5a797d_Optimize(_1ac5a5e54_Optimizer* _self_) {
	_1ac5a7c03_detectEnabled();
	if (_1ac5a5bbd_stdEnabled) {
		_1ab765477_buildCache(&((*(_self_))._field_ir));
	};
	if (_1ab766d91_Deadcode) {
		_1ac59785d_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1ac5a5904_scopeEnabled || _1ac5a563a_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a944ad96:;
			if (it != expr_end) {
				jule::Ptr<_1aab24c33_ImportInfo> _10825_u = *it;
				{
					if ((!(_10825_u.get()._field_Binded))) {
						_1ac5a7780_optimizePackage(_self_, &(_10825_u.get()._field_Package));
					};
				}
				_iter_next_1a944ad96:;
				++it;
				goto _iter_begin_1a944ad96;
			}
			_iter_end_1a944ad96:;
		};
		_1ac5a7780_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_1ab766d91_Deadcode) {
		_1ac59ce07_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1ac5a5e54_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1ab38ae5a_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1ab38c39b_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1ab38ae5a_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1ab38c049_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1ab38dca4_LogFlat(_1c3983b45_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1ab38ded5_LogError(_1c3983b45_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1ab38ae5a_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1c4cacb3d_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1c4cacb3d_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1c38c6516_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I32 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I32 _3821_oldLen = _3621_line.len();;
		_3621_line=_1c38c6516_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1c4cacb3d_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1c38bd497_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1c38bd497_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1c38bd497_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1ab38c39b_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1ab38e216_Log(_1c3983b45_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1a9459701:;
			{
				static__1ab38dca4_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1a9459778:;
			{
				static__1ab38ded5_LogError(_6520_l);
			}
		}
		_match_end_1a9459668:;
	};
}



inline void static__1ab38e447_PrintLogs(jule::Slice<_1c3983b45_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9455a93:;
		if (it != expr_end) {
			_1c3983b45_Log *_7616_l = it;
			{
				static__1ab38e216_Log(_7616_l);
			}
			_iter_next_1a9455a93:;
			++it;
			goto _iter_begin_1a9455a93;
		}
		_iter_end_1a9455a93:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1c4cacb3d_Itoa(static_cast<jule::I32>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1ab38d9da_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6187201_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1a61878c7_Time static__1a6187c7e_Unix(jule::U64 _9120_sec) {
	return _1a61878c7_Time{._field_sec=_9120_sec};;
}



inline _1a61878c7_Time static__1a6187e8d_Now(void) {
	return static__1a6187c7e_Unix(static_cast<jule::U64>(_1a61899b7_unix()));;
}



inline _1a6187201_AbsTime _1a6189676_Abs(_1a61878c7_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1a61866c8_mdays[static_cast<jule::I32>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1a61866c8_mdays[static_cast<jule::I32>(_16917_months)];
		}
	_iter_next_1a948b0b2:;
	}
	_iter_end_1a948b0b2:;;
	_1a6187201_AbsTime _17417_t = _1a6187201_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a61878c7_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a60b08bb_scopeCoder> static__1a60b0ec6_new(jule::Ptr<_1a6191e53_ObjectCoder>* _6324_oc) {
	return jule::new_ptr<_1a60b08bb_scopeCoder>(_1a60b08bb_scopeCoder{._field_oc=(*(_6324_oc))});;
}



inline void _1a95350d4_iterHead(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab0562b_RangeIter>* _7032_it, jule::Bool* _7044_ref, jule::Str* _7056_begin) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a6192805_addIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_1ab766a83_Copy && _1a60b6c57_isCopyOptimizable(&((*(_7032_it)).get()._field_Expr)))) {
		(*(_7044_ref))=true;
		{
			auto &_match_expr{ (*(_7032_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a953679a:;
				{
					jule::Ptr<_1aab68969_Var> _7921_v = (*(_7032_it)).get()._field_Expr.get()._field_Model.cast_ptr<_1aab68969_Var>(&__jule_any_type8);;
					if (_7921_v.get()._field_Reference) {
						_1a60c7350_model(_self_.get()._field_oc.get()._field_ec, (*(_7032_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1a953801b;
					};
					goto _case_begin_1a9538071;
				}
			}
			else {
				_case_begin_1a9538071:;
				{
					_1a6192607_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1a60c7350_model(_self_.get()._field_oc.get()._field_ec, (*(_7032_it)).get()._field_Expr.get()._field_Model);
					_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1a953801b:;
		};
	} else {
		_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7032_it)).get()._field_Expr.get()._field_Model);
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7044_ref))) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7044_ref))) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, (*(_7056_begin)));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1a6192805_addIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
}



inline void _1a60b169c_rangeIndexIter(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab0562b_RangeIter>* _11939_it) {
	jule::Str _12013_begin = static__1a60d22d3_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11939_it)))));;
	jule::Str _12113_next = static__1a60d2866_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11939_it)))));;
	jule::Bool _12317_ref = false;;
	_1a95350d4_iterHead(_self_, _11939_it, &(_12317_ref), &(_12013_begin));
	if (((*(_11939_it)).get()._field_KeyA != nullptr)) {
		_1a619a27a_varInitExpr(_self_.get()._field_oc, &((*(_11939_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12317_ref) {
				_1a6192607_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1a6192607_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a6192c01_indent(_self_.get()._field_oc);
	};
	if (((*(_11939_it)).get()._field_KeyB != nullptr)) {
		(*(_11939_it)).get()._field_KeyB.get()._field_Reference=(_1ab766a83_Copy && _1a60b7120_isIterCopyOptimizable(&((*(_11939_it)).get()._field_Expr), &((*(_11939_it)).get()._field_KeyB)));
		_1a619a27a_varInitExpr(_self_.get()._field_oc, &((*(_11939_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_11939_it)).get()._field_KeyB.get()._field_Reference) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a6192c01_indent(_self_.get()._field_oc);
	};
	_1a60b65d6_scope(_self_, (*(_11939_it)).get()._field_Scope);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, _12113_next);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a6192c01_indent(_self_.get()._field_oc);
	if (((*(_11939_it)).get()._field_KeyA != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, static__1a60d2019_var((*(_11939_it)).get()._field_KeyA));
		_1a6192607_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1a6192c01_indent(_self_.get()._field_oc);
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a6192607_write(_self_.get()._field_oc, _12013_begin);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, static__1a60d259c_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11939_it))))));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a60b1955_rangeHashmapIter(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab0562b_RangeIter>* _18241_it) {
	jule::Str _18313_begin = static__1a60d22d3_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18241_it)))));;
	jule::Str _18413_next = static__1a60d2866_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18241_it)))));;
	jule::Bool _18617_ref = false;;
	_1a95350d4_iterHead(_self_, _18241_it, &(_18617_ref), &(_18313_begin));
	if (((*(_18241_it)).get()._field_KeyA != nullptr)) {
		_1a619a27a_varInitExpr(_self_.get()._field_oc, &((*(_18241_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a6192c01_indent(_self_.get()._field_oc);
	};
	if (((*(_18241_it)).get()._field_KeyB != nullptr)) {
		_1a619a27a_varInitExpr(_self_.get()._field_oc, &((*(_18241_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a6192c01_indent(_self_.get()._field_oc);
	};
	_1a60b65d6_scope(_self_, (*(_18241_it)).get()._field_Scope);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, _18413_next);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a6192607_write(_self_.get()._field_oc, _18313_begin);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, static__1a60d259c_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18241_it))))));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a60b1c0d_ifCase(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab03c12_If> _22530_i) {
	if ((_22530_i.get()._field_Expr != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22530_i.get()._field_Expr);
		_1a6192607_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1a60b65d6_scope(_self_, _22530_i.get()._field_Scope);
}



inline void _1a60b1eb6_conditional(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab0442c_Conditional> _23435_c) {
	jule::Bool _23517_writed = false;;
	{
		auto expr = &(_23435_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ec1785:;
		if (it != expr_end) {
			jule::Ptr<_1aab03c12_If> _23621_elif = *it;
			{
				if ((_23621_elif == nullptr)) {
					goto _iter_next_1a8ec1785;
				};
				if (_23517_writed) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23517_writed=true;
				_1a60b1c0d_ifCase(_self_, _23621_elif);
			}
			_iter_next_1a8ec1785:;
			++it;
			goto _iter_begin_1a8ec1785;
		}
		_iter_end_1a8ec1785:;
	};
	if ((_23435_c.get()._field_Default != nullptr)) {
		if (_23517_writed) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1a60b65d6_scope(_self_, _23435_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1a60b226e_infIter(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab04729_InfIter> _25431_it) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1a6192805_addIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a60b65d6_scope(_self_, _25431_it.get()._field_Scope);
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, static__1a60d2866_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25431_it))));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, static__1a60d259c_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25431_it))));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a60b2527_whileIter(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab04bd0_WhileIter> _27133_it) {
	if (((_27133_it.get()._field_Expr != nullptr) && (_27133_it.get()._field_Next == nullptr))) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27133_it.get()._field_Expr);
		_1a6192607_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27133_it.get()._field_Expr != nullptr)) {
			_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27133_it.get()._field_Expr);
		};
		_1a6192607_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27133_it.get()._field_Next != nullptr)) {
			_1a60b6075_st(_self_, _27133_it.get()._field_Next);
		};
		_1a6192607_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1a6192805_addIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a60b65d6_scope(_self_, _27133_it.get()._field_Scope);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, static__1a60d2866_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27133_it))));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, static__1a60d259c_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27133_it))));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1a60b27d0_rangeIter(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab0562b_RangeIter> _30433_it) {
	{
		
		if ((_1aac00b44_Slc(_30433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8ecea07:;
			{
				_1a60b169c_rangeIndexIter(_self_, &(_30433_it));
			}
		}
		else if ((_1aac008ad_Arr(_30433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8ece6c7:;
			{
				_1a60b169c_rangeIndexIter(_self_, &(_30433_it));
			}
		}
		else if ((_1aac0167d_Map(_30433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8ece73d:;
			{
				_1a60b1955_rangeHashmapIter(_self_, &(_30433_it));
			}
		}
		else {
			_case_begin_1a8ece661:;
			{
				_1a60b169c_rangeIndexIter(_self_, &(_30433_it));
			}
		}
		_match_end_1a8ece595:;
	};
}



inline void _1a60b2a88_cont(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab059b1_ContSt> _31724_c) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a6192607_write(_self_.get()._field_oc, static__1a60d2866_iterNext(_31724_c.get()._field_It));
}



inline void _1a60b2d41_label(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab06187_Label> _32225_l) {
	_1a6192607_write(_self_.get()._field_oc, static__1a60d2b30_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_32225_l))));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1a60b30e9_gotoSt(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab06561_GotoSt> _32726_gt) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a6192607_write(_self_.get()._field_oc, static__1a60d2b30_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_32726_gt.get()._field_Label))));
}



inline void _1a60b33a2_postfix(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab0693a_Postfix> _33231_p) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33231_p.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1a6192607_write(_self_.get()._field_oc, _33231_p.get()._field_Op);
}



inline void _1a60b365a_assign(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab06de1_Assign> _33930_a) {
	_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33930_a.get()._field_L.get()._field_Model);
	_1a6192607_write(_self_.get()._field_oc, _33930_a.get()._field_Op.get()._field_Kind);
	_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33930_a.get()._field_R.get()._field_Model);
}



inline void _1a60b3913_mapLookupAssign(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab072ba_MultiAssign>* _34540_a) {
	jule::Ptr<_1aaaa22cb_IndexingExprModel> _34617_iem = (*(_34540_a)).get()._field_R.cast_ptr<_1aaaa22cb_IndexingExprModel>(&__jule_any_type46);;
	_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34617_iem.get()._field_Expr.get()._field_Model);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34617_iem.get()._field_Index.get()._field_Model);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34540_a)).get()._field_L[0LL] != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34540_a)).get()._field_L[0LL].get()._field_Model);
		_1a6192607_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34540_a)).get()._field_L[1LL] != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34540_a)).get()._field_L[1LL].get()._field_Model);
		_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60b3bbb_multiAssignTup(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab072ba_MultiAssign>* _36839_a) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a6192805_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1aaaa59e9_TupleExprModel> _37217_tup = (*(_36839_a)).get()._field_R.cast_ptr<_1aaaa59e9_TupleExprModel>(&__jule_any_type88);;
	{
		auto expr = &(_37217_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ede2db:;
		if (it != expr_end) {
			jule::I32 _37414_i = it - expr->begin();
			jule::Ptr<_1aabbbe1d_Data> _37421_r = *it;
			{
				_1a6192c01_indent(_self_.get()._field_oc);
				jule::Ptr<_1aabbbe1d_Data> _37621_l = (*(_36839_a)).get()._field_L[_37414_i];;
				if ((_37621_l != nullptr)) {
					{
						auto &_match_expr{ _37621_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1a8ee1013:;
							{
								jule::Ptr<_1aab68969_Var> _38029_v = _37621_l.get()._field_Model.cast_ptr<_1aab68969_Var>(&__jule_any_type8);;
								if ((_38029_v.get()._field_Reference && (!(_1aab68cee_IsInitialized(_38029_v.ptr()))))) {
									_1a6192607_write(_self_.get()._field_oc, static__1a60d2019_var(_38029_v));
									_1a6192607_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37421_r.get()._field_Model);
									_1a6192607_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_36839_a)).get()._field_L[_37414_i]=nullptr;
									goto _iter_next_1a8ede2db;
								};
							}
						}
						_match_end_1a8ee0ead:;
					};
					_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37621_l.get()._field_Kind));
					_1a6192607_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1a6192607_write(_self_.get()._field_oc, static__1a60d03ad_toOut(&(_1a60b0338_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37414_i))));
					_1a6192607_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37421_r.get()._field_Model);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1a8ede2db:;
			++it;
			_37414_i++;
			goto _iter_begin_1a8ede2db;
		}
		_iter_end_1a8ede2db:;
	};
	{
		auto expr = &((*(_36839_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8ee5127:;
		if (it != expr_end) {
			jule::I32 _40114_i = it - expr->begin();
			jule::Ptr<_1aabbbe1d_Data> _40121_l = *it;
			{
				if ((_40121_l == nullptr)) {
					goto _iter_next_1a8ee5127;
				};
				_1a6192c01_indent(_self_.get()._field_oc);
				_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40121_l.get()._field_Model);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a6192607_write(_self_.get()._field_oc, static__1a60d03ad_toOut(&(_1a60b0338_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40114_i))));
				_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1a8ee5127:;
			++it;
			_40114_i++;
			goto _iter_begin_1a8ee5127;
		}
		_iter_end_1a8ee5127:;
	};
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a60b3e74_multiAssignFn(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab072ba_MultiAssign>* _41738_a) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a6192805_addIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	jule::Ptr<_1aaaa194b_FnCallExprModel> _42217_f = (*(_41738_a)).get()._field_R.cast_ptr<_1aaaa194b_FnCallExprModel>(&__jule_any_type35);;
	_1a64789dc_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42217_f.get()._field_Func.get()._field_Result));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_41738_a)).get()._field_R);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_41738_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8eea209:;
		if (it != expr_end) {
			jule::I32 _42814_i = it - expr->begin();
			jule::Ptr<_1aabbbe1d_Data> _42821_l = *it;
			{
				if ((_42821_l != nullptr)) {
					_1a6192c01_indent(_self_.get()._field_oc);
					_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _42821_l.get()._field_Model);
					_1a6192607_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(_42814_i));
					_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1a8eea209:;
			++it;
			_42814_i++;
			goto _iter_begin_1a8eea209;
		}
		_iter_end_1a8eea209:;
	};
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a60b422c_multiAssign(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab072ba_MultiAssign> _44335_a) {
	{
		auto &_match_expr{ _44335_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a8eee1a8:;
			{
				_1a60b3913_mapLookupAssign(_self_, &(_44335_a));
				return;;
			}
		}
		_match_end_1a8eee153:;
	};
	{
		auto &_match_expr{ _44335_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a8eeec9c:;
			{
				_1a60b3bbb_multiAssignTup(_self_, &(_44335_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a8eeed13:;
			{
				_1a60b3e74_multiAssignFn(_self_, &(_44335_a));
			}
		}
		else {
			_case_begin_1a8eee708:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:457:13"));;
			}
		}
		_match_end_1a8eee2da:;
	};
}



inline jule::Fn<void(void)> _1a60b456d_matchExpr(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab0792a_Match> _46133_m) {
	if ((!(_1aabbc7e2_IsConst(_46133_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1c4cc238e_IsBool(_46133_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1c4cbec93_ReadBool(_46133_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46133_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1a60b48d1_case(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab0792a_Match> _47128_m, jule::Ptr<_1aab08563_Case> _47143_c) {
	if (((_47143_c.get()._field_Exprs.len() != 0LL) && (!(_47128_m.get()._field_Comptime)))) {
		if (((_47128_m.get()._field_Cases.len() > 0LL) && (_47128_m.get()._field_Cases[0LL] == _47143_c))) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47143_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a900482e:;
			if (it != expr_end) {
				jule::I32 _47818_i = it - expr->begin();
				jule::Ptr<_1aabbbe1d_Data> _47825_expr = *it;
				{
					{
						
						if ((!(_47128_m.get()._field_TypeMatch))) {
							_case_begin_1a900a24c:;
							{
								jule::Fn<void(void)> _48125_caseExpr = _1a60b456d_matchExpr(_self_, _47128_m);;
								if (_1aabbcb33_GoodOperand(_47128_m.get()._field_Expr.ptr(), &(_47825_expr))) {
									if ((_48125_caseExpr != nullptr)) {
										_48125_caseExpr();
										_1a6192607_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47825_expr.get()._field_Model);
								} else {
									_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47825_expr.get()._field_Model);
									if ((_48125_caseExpr != nullptr)) {
										_1a6192607_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48125_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1a9005dc4:;
							{
								_1a6192607_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1aabec1e5_TypeKind> _49729_tk = _47825_expr.get()._field_Model.cast_ptr<_1aabec1e5_TypeKind>(&__jule_any_type90);;
								if ((_1aac013e7_Trait(_47128_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1a6192607_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1a60ba101_boolean(_self_.get()._field_oc.get()._field_ec, (_1aabeed74_Sptr(_47825_expr.get()._field_Kind.ptr()) != nullptr));
									_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(static_cast<jule::I32>(_1a61941db_findTypeOffset(_self_.get()._field_oc.ptr(), _1aac013e7_Trait(_47128_m.get()._field_Expr.get()._field_Kind.ptr()), _47825_expr.get()._field_Kind))));
									_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I32 _50529_j = _1a6193383_pushAnyType(_self_.get()._field_oc, _49729_tk);;
									_1a6192607_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(_50529_j));
								};
							}
						}
						_match_end_1a9005d08:;
					};
					if (((_47143_c.get()._field_Exprs.len() - _47818_i) > 1LL)) {
						_1a6192607_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1a900482e:;
				++it;
				_47818_i++;
				goto _iter_begin_1a900482e;
			}
			_iter_end_1a900482e:;
		};
		_1a6192607_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47128_m.get()._field_Default == _47143_c) && (_47128_m.get()._field_Cases.len() != 0LL))) {
		_1a6192c01_indent(_self_.get()._field_oc);
		_1a6192607_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1a6192805_addIndent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, static__1a60d31b3_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47143_c))));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47143_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1a6192c01_indent(_self_.get()._field_oc);
		_1a60b65d6_scope(_self_, _47143_c.get()._field_Scope);
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a60b4b89_matchSt(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab0792a_Match> _53931_m) {
	if (((_53931_m.get()._field_Cases.len() == 0LL) && (_53931_m.get()._field_Default == nullptr))) {
		return;;
	};
	if ((_53931_m.get()._field_Comptime && ((_53931_m.get()._field_Default == nullptr) || (_53931_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a6192805_addIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	if (((!(_53931_m.get()._field_Comptime)) && (!(_1aabbc7e2_IsConst(_53931_m.get()._field_Expr.ptr()))))) {
		if ((_1ab766a83_Copy && _1a60b6c57_isCopyOptimizable(&(_53931_m.get()._field_Expr)))) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _53931_m.get()._field_Expr.get()._field_Model);
		_1a6192607_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1a6192c01_indent(_self_.get()._field_oc);
	};
	if ((_53931_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_53931_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a741910d:;
			if (it != expr_end) {
				jule::Ptr<_1aab08563_Case> _56725_c = *it;
				{
					if ((_56725_c == nullptr)) {
						goto _iter_next_1a741910d;
					};
					_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a6192c01_indent(_self_.get()._field_oc);
					_1a60b48d1_case(_self_, _53931_m, _56725_c);
				}
				_iter_next_1a741910d:;
				++it;
				goto _iter_begin_1a741910d;
			}
			_iter_end_1a741910d:;
		};
	};
	if ((_53931_m.get()._field_Default != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1a60b48d1_case(_self_, _53931_m, _53931_m.get()._field_Default);
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, static__1a60d2de9_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53931_m))));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a60b4e42_fallSt(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab08b5c_FallSt> _59426_f) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1a6192607_write(_self_.get()._field_oc, static__1a60d31b3_caseBegin(_59426_f.get()._field_DestCase));
}



inline void _1a60b51ea_breakSt(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab05d8a_BreakSt> _59927_b) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_59927_b.get()._field_It != 0LLU)) {
		_1a6192607_write(_self_.get()._field_oc, static__1a60d259c_iterEnd(_59927_b.get()._field_It));
	} else {
		_1a6192607_write(_self_.get()._field_oc, static__1a60d2de9_matchEnd(_59927_b.get()._field_Mtch));
	};
}



inline void _1a60b54a3_setResult(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab08ee2_RetSt> _60833_r) {
	if ((_60833_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _60833_r.get()._field_Expr);
		_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1a6192c01_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1aabbbe1d_Data>> _61617_datas = _60833_r.get()._field_Expr.cast_ptr<_1aaaa59e9_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
	{
		auto expr = &(_61617_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a742325a:;
		if (it != expr_end) {
			jule::I32 _61713_i = it - expr->begin();
			jule::Ptr<_1aabbbe1d_Data> _61716_data = *it;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(_61713_i));
				_1a6192607_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61716_data.get()._field_Model);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1a6192c01_indent(_self_.get()._field_oc);
			}
			_iter_next_1a742325a:;
			++it;
			_61713_i++;
			goto _iter_begin_1a742325a;
		}
		_iter_end_1a742325a:;
	};
}



inline void _1a60b575b_retSt(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab08ee2_RetSt> _62729_r) {
	if (_1aaab361c_IsVoid(_62729_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_62729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1a6192607_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_62729_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_62729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _62729_r.get()._field_Func.get()._field_Result));
			_1a6192607_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62729_r.get()._field_Expr);
			_1a6192607_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62729_r.get()._field_Expr);
			_1a6192607_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_62729_r.get()._field_Expr != nullptr)) {
		_1a60b54a3_setResult(_self_, _62729_r);
	};
	if (_62729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1a64789dc_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_62729_r.get()._field_Func.get()._field_Result));
		_1a6192607_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1a60b5a14_var(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab68969_Var> _66327_v) {
	if ((!(_66327_v.get()._field_Constant))) {
		_1a619a533_var(_self_.get()._field_oc, _66327_v);
	};
}



inline void _1a60b5cbc_mutSlicing(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aace8bd7_MutSlicingExprModel> _66934_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _66934_m.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_205b16b42_Production))) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a6194807_locInfo(_self_.get()._field_oc, &(_66934_m.get()._field_Token));
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _66934_m.get()._field_Left);
	if ((_66934_m.get()._field_Right != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a60bca1b_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _66934_m.get()._field_Right);
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1a60b6075_st(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Any _68726_st) {
	if ((_68726_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _68726_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a7432302:;
			{
				_1a60b65d6_scope(_self_, _68726_st.cast_ptr<_1aab037e4_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a7432bd7:;
			{
				_1a60b5a14_var(_self_, _68726_st.cast_ptr<_1aab68969_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a7432c4d:;
			{
				_1a60c7350_model(_self_.get()._field_oc.get()._field_ec, _68726_st.cast_ptr<_1aabbbe1d_Data>(&__jule_any_type24).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a7432cb4:;
			{
				_1a60b1eb6_conditional(_self_, _68726_st.cast_ptr<_1aab0442c_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a7432d2a:;
			{
				_1a60b226e_infIter(_self_, _68726_st.cast_ptr<_1aab04729_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a7432d91:;
			{
				_1a60b2527_whileIter(_self_, _68726_st.cast_ptr<_1aab04bd0_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a7432e07:;
			{
				_1a60b27d0_rangeIter(_self_, _68726_st.cast_ptr<_1aab0562b_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1a7432e6d:;
			{
				_1a60b2a88_cont(_self_, _68726_st.cast_ptr<_1aab059b1_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1a7432ed4:;
			{
				_1a60b2d41_label(_self_, _68726_st.cast_ptr<_1aab06187_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1a743304a:;
			{
				_1a60b30e9_gotoSt(_self_, _68726_st.cast_ptr<_1aab06561_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1a74330b1:;
			{
				_1a60b33a2_postfix(_self_, _68726_st.cast_ptr<_1aab0693a_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1a7433127:;
			{
				_1a60b365a_assign(_self_, _68726_st.cast_ptr<_1aab06de1_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1a743318d:;
			{
				_1a60b422c_multiAssign(_self_, _68726_st.cast_ptr<_1aab072ba_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a7433204:;
			{
				_1a60b4b89_matchSt(_self_, _68726_st.cast_ptr<_1aab0792a_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1a743326a:;
			{
				_1a60b4e42_fallSt(_self_, _68726_st.cast_ptr<_1aab08b5c_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1a74332d1:;
			{
				_1a60b51ea_breakSt(_self_, _68726_st.cast_ptr<_1aab05d8a_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1a7433347:;
			{
				_1a60b575b_retSt(_self_, _68726_st.cast_ptr<_1aab08ee2_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1a74333ad:;
			{
				_1a60c4d31_pushToSlice(_self_.get()._field_oc.get()._field_ec, _68726_st.cast_ptr<_1aace96ee_PushToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1a7433424:;
			{
				_1a60c50d9_appendToSlice(_self_.get()._field_oc.get()._field_ec, _68726_st.cast_ptr<_1aace9ac8_AppendToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1a743348a:;
			{
				_1a60b5cbc_mutSlicing(_self_, _68726_st.cast_ptr<_1aace8bd7_MutSlicingExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_1a74323ac:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1a7431e5b:;
	};
}



inline void _1a60b632d_scopeStmts(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab037e4_Scope>* _73735_s) {
	{
		auto expr = &((*(_73735_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a743c483:;
		if (it != expr_end) {
			jule::Any _73821_st = *it;
			{
				_1a6192c01_indent(_self_.get()._field_oc);
				_1a60b6075_st(_self_, _73821_st);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1a743c483:;
			++it;
			goto _iter_begin_1a743c483;
		}
		_iter_end_1a743c483:;
	};
}



inline void _1a60b65d6_scope(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aab037e4_Scope> _74629_s) {
	_1a6192805_addIndent(_self_.get()._field_oc);
	if (_74629_s.get()._field_Deferred) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a60b632d_scopeStmts(_self_, &(_74629_s));
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_74629_s.get()._field_Deferred) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1a60b688e_funcScope(jule::Ptr<_1a60b08bb_scopeCoder> _self_, jule::Ptr<_1aaab609d_FnIns> _76233_f) {
	if ((_76233_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a6192805_addIndent(_self_.get()._field_oc);
	if ((!(_1aaab361c_IsVoid(_76233_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1aac0a159_Tuple> _76921_tup = _1aac01914_Tup(_76233_f.get()._field_Result.ptr());;
		if ((_76921_tup != nullptr)) {
			_1a6192c01_indent(_self_.get()._field_oc);
			_1a6478316_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _76921_tup);
			_1a6192607_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_76921_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a7442e4a:;
				if (it != expr_end) {
					jule::I32 _77422_i = it - expr->begin();
					jule::Ptr<_1aabec1e5_TypeKind> _77429_t = *it;
					{
						if (_1a647adda_shouldInitialized(&(_77429_t))) {
							_1a6192c01_indent(_self_.get()._field_oc);
							_1a6192607_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(_77422_i));
							_1a6192607_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1a60c7608_initExpr(_self_.get()._field_oc.get()._field_ec, _77429_t);
							_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1a7442e4a:;
					++it;
					_77422_i++;
					goto _iter_begin_1a7442e4a;
				}
				_iter_end_1a7442e4a:;
			};
		} else if ((_76233_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1a6192c01_indent(_self_.get()._field_oc);
			_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76233_f.get()._field_Result));
			_1a6192607_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1a647adda_shouldInitialized(&(_76233_f.get()._field_Result))) {
				_1a6192607_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a60c7608_initExpr(_self_.get()._field_oc.get()._field_ec, _76233_f.get()._field_Result);
			};
			_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1a60b632d_scopeStmts(_self_, &(_76233_f.get()._field_Scope));
	if ((_76233_f.get()._field_Decl.get()._field_Exceptional && _1aaab361c_IsVoid(_76233_f.get()._field_Decl.ptr()))) {
		_1a6192c01_indent(_self_.get()._field_oc);
		_1a6192607_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1a60b08bb_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a60b96c7_exprCoder> static__1a60b9a90_new(jule::Ptr<_1a6191e53_ObjectCoder>* _10624_oc) {
	return jule::new_ptr<_1a60b96c7_exprCoder>(_1a60b96c7_exprCoder{._field_oc=(*(_10624_oc))});;
}



inline void _1a60b9d48_string(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1c4cbcda1_Const>* _11227_c) {
	jule::Str _11313_content = _1c4cc0029_ReadStr((*(_11227_c)).ptr());;
	if ((_11313_content.len() == 0LL)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Str _11813_len = _1c4cac874_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11313_content.len())), 10LL);;
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a60c83ea_cstrLit(&(_self_.get()._field_oc.get()._field_Obj), _11313_content);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a6192607_write(_self_.get()._field_oc, _11813_len);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60ba101_boolean(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Bool _12727_b) {
	if (_12727_b) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1a60ba2ee_nilLit(jule::Ptr<_1a60b96c7_exprCoder> _self_) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1a60ba640_ftoaSpecialCases(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::F64* _13937_x) {
	{
		
		if (_1c4c5bc30_IsNaN((*(_13937_x)))) {
			_case_begin_1a7464334:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1c4c5c33a_IsInf((*(_13937_x)), 1LL)) {
			_case_begin_1a74643ab:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1c4c5c33a_IsInf((*(_13937_x)), -1LL)) {
			_case_begin_1a7464433:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1a7464257:;
			{
				return false;;
			}
		}
		_match_end_1a746418b:;
	};
	return true;;
}



inline void _1a60ba8e8_float32(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1c4cbcda1_Const>* _15328_c) {
	jule::F64 _15413_x = _1c4cc0a63_AsF64((*(_15328_c)).ptr());;
	if (_1a60ba640_ftoaSpecialCases(_self_, &(_15413_x))) {
		return;;
	};
	{
		
		if ((_15413_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1a74670b2:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15413_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1a7467128:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1a7466930:;
			{
				_1a60c8791_ftoa(&(_self_.get()._field_oc.get()._field_Obj), _15413_x, 32LL);
				_1a6192607_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1a74668ca:;
	};
}



inline void _1a60baba1_float64(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1c4cbcda1_Const>* _17228_c) {
	jule::F64 _17313_x = _1c4cc0a63_AsF64((*(_17228_c)).ptr());;
	if (_1a60ba640_ftoaSpecialCases(_self_, &(_17313_x))) {
		return;;
	};
	{
		
		if ((_17313_x == jule::MAX_F64)) {
			_case_begin_1a7469a98:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17313_x == jule::MIN_F64)) {
			_case_begin_1a7469b0e:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1a7469416:;
			{
				_1a60c8791_ftoa(&(_self_.get()._field_oc.get()._field_Obj), _17313_x, 64LL);
			}
		}
		_match_end_1a74693b1:;
	};
}



inline void _1a60bae59_constant(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1c4cbcda1_Const> _19032_c) {
	{
		
		if (_1c4cc2625_IsStr(_19032_c.ptr())) {
			_case_begin_1a746b429:;
			{
				_1a60b9d48_string(_self_, &(_19032_c));
			}
		}
		else if (_1c4cc238e_IsBool(_19032_c.ptr())) {
			_case_begin_1a746b490:;
			{
				_1a60ba101_boolean(_self_, _1c4cbec93_ReadBool(_19032_c.ptr()));
			}
		}
		else if (_1c4cc28ab_IsF64(_19032_c.ptr())) {
			_case_begin_1a746b506:;
			{
				{
					
					if (_19032_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_1a746d66d:;
						{
							_1a60ba8e8_float32(_self_, &(_19032_c));
						}
					}
					else {
						_case_begin_1a746d1d9:;
						{
							_1a60baba1_float64(_self_, &(_19032_c));
						}
					}
					_match_end_1a746d11d:;
				};
			}
		}
		else if (_1c4cc1d72_IsI64(_19032_c.ptr())) {
			_case_begin_1a746b56c:;
			{
				_1a60c8a7c_itoa(&(_self_.get()._field_oc.get()._field_Obj), static_cast<jule::I64>(_1c4cbe776_ReadI64(_19032_c.ptr())));
			}
		}
		else if (_1c4cc2108_IsU64(_19032_c.ptr())) {
			_case_begin_1a746bcba:;
			{
				_1a60c8d68_utoa(&(_self_.get()._field_oc.get()._field_Obj), static_cast<jule::U64>(_1c4cbea0c_ReadU64(_19032_c.ptr())));
			}
		}
		else if (_1c4cc2b42_IsNil(_19032_c.ptr())) {
			_case_begin_1a746bd31:;
			{
				_1a60ba2ee_nilLit(_self_);
			}
		}
		else {
			_case_begin_1a746b3b3:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1a746b2e7:;
	};
}



inline void _1a60bb377_divByZeroBinary(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1c3e3a5e6_Token>* _21436_op, jule::Ptr<_1aaa9e471_OperandExprModel>* _21453_l, jule::Ptr<_1aaa9e471_OperandExprModel>* _21480_r) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_21436_op)).get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1a7471297:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1a747130d:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1a7471242:;
	};
	if ((!(_205b16b42_Production))) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a6194807_locInfo(_self_.get()._field_oc, _21436_op);
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1a60bca1b_possibleRefExpr(_self_, (*(_21453_l)).get()._field_Model);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a60bca1b_possibleRefExpr(_self_, (*(_21480_r)).get()._field_Model);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60bb630_unsafeBinary(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaa9e96b_BinopExprModel> _23636_m) {
	if (((_23636_m.get()._field_Op.get()._field_Id == static_cast<jule::U32>(50LLU)) || (_23636_m.get()._field_Op.get()._field_Id == static_cast<jule::U32>(51LLU)))) {
		if (_1a60c9a8e_isAny(&(_23636_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_1aabed2d4_IsNil(_23636_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1a60c9a8e_isAny(&(_23636_m.get()._field_Right.get()._field_Kind)))))) {
				_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
				if ((_23636_m.get()._field_Op.get()._field_Id == static_cast<jule::U32>(51LLU))) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I32 _24625_i = _1a6193383_pushAnyType(_self_.get()._field_oc, _23636_m.get()._field_Right.get()._field_Kind);;
				_1a6192607_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(_24625_i));
				_1a6192607_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1a60bca1b_possibleRefExpr(_self_, _23636_m.get()._field_Left.get()._field_Model);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a60bca1b_possibleRefExpr(_self_, _23636_m.get()._field_Right.get()._field_Model);
				_1a6192607_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a60bca1b_possibleRefExpr(_self_, _23636_m.get()._field_Left.get()._field_Model);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a6192607_write(_self_.get()._field_oc, _23636_m.get()._field_Op.get()._field_Kind);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a60bca1b_possibleRefExpr(_self_, _23636_m.get()._field_Right.get()._field_Model);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60bb8d8_binary(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaa9e96b_BinopExprModel> _26730_m) {
	{
		auto &_match_expr{ _26730_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1a747bdeb:;
			{
				if ((_1aac01161_Struct(_26730_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1a60bb377_divByZeroBinary(_self_, &(_26730_m.get()._field_Op), &(_26730_m.get()._field_Left), &(_26730_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_1a747bd52:;
	};
	_1a60bb630_unsafeBinary(_self_, _26730_m);
}



inline void _1a60bbb91_var(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aab68969_Var> _27927_m) {
	if (_27927_m.get()._field_Binded) {
		jule::Ptr<_1aaa42c61_Directive> _28117_d = _1a647a758_findDirective(&(_27927_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28117_d != nullptr)) {
			_1a6192607_write(_self_.get()._field_oc, _1a619e757_concatAllParts(_28117_d.get()._field_Args));
			_1a6192607_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a6192607_write(_self_.get()._field_oc, static__1a60d2019_var(_27927_m));
}



inline void _1a60bbe49_structureIns(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaa9a390_StructIns> _29036_m) {
	_1a6192607_write(_self_.get()._field_oc, _1a64720ce_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29036_m));
}



inline void _1a60bc202_unary(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaa9ed45_UnaryExprModel> _29429_m) {
	{
		auto &_match_expr{ _29429_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1a74816b4:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1a60bca1b_possibleRefExpr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1a6192607_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1a748173b:;
			{
				if ((_205b16b42_Production || (_1aabeed74_Sptr(_29429_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1a7481609;
				};
				_1a60bca1b_possibleRefExpr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1a6194807_locInfo(_self_.get()._field_oc, &(_29429_m.get()._field_Op));
				_1a6192607_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1a7481609:;
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a6192607_write(_self_.get()._field_oc, _29429_m.get()._field_Op.get()._field_Kind);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a60bca1b_possibleRefExpr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a60bc4aa_structureLit(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa0719_StructLitExprModel> _31836_m) {
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1a6192607_write(_self_.get()._field_oc, static__1a60d1986_structureIns(&(_31836_m.get()._field_Strct)));
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_31836_m.get()._field_Args.len() > 0LL)) {
		_julec_label_1a7487dc4:;
		{
			auto expr = &(_31836_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7487ee5:;
			if (it != expr_end) {
				jule::I32 _33117_i = it - expr->begin();
				jule::Ptr<_1aaa997e0_FieldIns> _33120_f = *it;
				{
					{
						auto expr = &(_31836_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a7488b61:;
						if (it != expr_end) {
							jule::Ptr<_1aaaa0373_StructArgExprModel> _33229_arg = *it;
							{
								if ((_33229_arg.get()._field_Field == _33120_f)) {
									_1a6192607_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1a6192607_write(_self_.get()._field_oc, static__1a60d1c50_field(&(_33229_arg.get()._field_Field.get()._field_Decl)));
									_1a6192607_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1a60bca1b_possibleRefExpr(_self_, _33229_arg.get()._field_Expr.get()._field_Model);
									if (((_31836_m.get()._field_Strct.get()._field_Fields.len() - _33117_i) > 1LL)) {
										_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1a7487ee5;
								};
							}
							_iter_next_1a7488b61:;
							++it;
							goto _iter_begin_1a7488b61;
						}
						_iter_end_1a7488b61:;
					};
				}
				_iter_next_1a7487ee5:;
				++it;
				_33117_i++;
				goto _iter_begin_1a7487ee5;
			}
			_iter_end_1a7487ee5:;
		};
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a60bc763_allocStructure(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa0a16_AllocStructLitExprModel> _34938_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a6192607_write(_self_.get()._field_oc, static__1a60d1986_structureIns(&(_34938_m.get()._field_Lit.get()._field_Strct)));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a60bc4aa_structureLit(_self_, _34938_m.get()._field_Lit);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60bca1b_possibleRefExpr(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Any _35735_expr) {
	{
		auto &_match_expr{ _35735_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a748de0d:;
			{
				jule::Ptr<_1aab68969_Var> _36017_v = _35735_expr.cast_ptr<_1aab68969_Var>(&__jule_any_type8);;
				if (_36017_v.get()._field_Reference) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_1a60c7350_model(_self_, _35735_expr);
					_1a6192607_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1a748dda8:;
	};
	_1a60c7350_model(_self_, _35735_expr);
}



inline void _1a60bce39_castTraitFromTrait(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa1099_CastingExprModel>* _37143_m, jule::Ptr<_1aaac6443_Trait> _37169_t1, jule::Ptr<_1aaac6443_Trait> _37185_t2) {
	_1a60bca1b_possibleRefExpr(_self_, (*(_37143_m)).get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(".mask<", 6));
	_1a6192607_write(_self_.get()._field_oc, static__1a60d1139_traitDecl(_37169_t1));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a619454e_pushAndWriteMaskMapper(_self_.get()._field_oc, _37169_t1, _37185_t2);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60bd1e2_casting(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa1099_CastingExprModel> _38631_m) {
	{
		
		if (_1a60c9a8e_isAny(&(_38631_m.get()._field_Kind))) {
			_case_begin_1a7493099:;
			{
				if (_1aabed2d4_IsNil(_38631_m.get()._field_ExprKind.ptr())) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1aac00627_TypeEnum(_38631_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1a60bca1b_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
					return;;
				};
				jule::I32 _39717_i = _1a6193383_pushAnyType(_self_.get()._field_oc, _38631_m.get()._field_ExprKind);;
				_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _38631_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1a7494771:;
						{
							jule::Ptr<_1aac05066_Prim> _40121_prim = _1aabeeadd_Prim(_38631_m.get()._field_ExprKind.ptr());;
							if (((_40121_prim != nullptr) && _1c4cbc2bd_IsInt(_40121_prim.get()._field_Kind))) {
								_1a6192607_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1a6192607_write(_self_.get()._field_oc, _1a61a2e42_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _40121_prim));
								_1a6192607_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1a60bca1b_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
								_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1a7495a91;
							};
							goto _case_begin_1a7495ae6;
						}
					}
					else {
						_case_begin_1a7495ae6:;
						{
							_1a60bca1b_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
						}
					}
					_match_end_1a7495a91:;
				};
				_1a6192607_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(_39717_i));
				_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if (_1a60c9a8e_isAny(&(_38631_m.get()._field_ExprKind))) {
			_case_begin_1a7493121:;
			{
				_1a60bca1b_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1aabeed74_Sptr(_38631_m.get()._field_Kind.ptr()) != nullptr)) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1aabeed74_Sptr(_38631_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38631_m.get()._field_Kind));
				};
				_1a6192607_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_205b16b42_Production))) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a6194807_locInfo(_self_.get()._field_oc, &(_38631_m.get()._field_Token));
					_1a6192607_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1a6192607_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(static_cast<jule::I32>(_1a6193383_pushAnyType(_self_.get()._field_oc, _38631_m.get()._field_Kind))));
				_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1aac0010a_Ptr(_38631_m.get()._field_ExprKind.ptr()) != nullptr) || (_1aac0010a_Ptr(_38631_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7493198:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38631_m.get()._field_Kind));
				_1a6192607_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1a60bca1b_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
				_1a6192607_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if ((_1aac013e7_Trait(_38631_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a7493220:;
			{
				if ((_1aac013e7_Trait(_38631_m.get()._field_Kind.ptr()) != nullptr)) {
					_1a60bce39_castTraitFromTrait(_self_, &(_38631_m), _1aac013e7_Trait(_38631_m.get()._field_Kind.ptr()), _1aac013e7_Trait(_38631_m.get()._field_ExprKind.ptr()));
					return;;
				};
				_1a60bca1b_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1aabeed74_Sptr(_38631_m.get()._field_Kind.ptr()) != nullptr)) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1aabeed74_Sptr(_38631_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38631_m.get()._field_Kind));
				};
				_1a6192607_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_205b16b42_Production))) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a6194807_locInfo(_self_.get()._field_oc, &(_38631_m.get()._field_Token));
					_1a6192607_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(static_cast<jule::I32>(_1a61941db_findTypeOffset(_self_.get()._field_oc.ptr(), _1aac013e7_Trait(_38631_m.get()._field_ExprKind.ptr()), _38631_m.get()._field_Kind))));
				_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1aac013e7_Trait(_38631_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a7493297:;
			{
				_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38631_m.get()._field_Kind));
				_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1a60bca1b_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(static_cast<jule::I32>(_1a61941db_findTypeOffset(_self_.get()._field_oc.ptr(), _1aac013e7_Trait(_38631_m.get()._field_Kind.ptr()), _38631_m.get()._field_ExprKind))));
				_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		_match_end_1a7492e56:;
	};
	jule::Ptr<_1aac05066_Prim> _47813_prim = _1aabeeadd_Prim(_38631_m.get()._field_Kind.ptr());;
	jule::Ptr<_1aac05066_Prim> _47913_eprim = _1aabeeadd_Prim(_38631_m.get()._field_ExprKind.ptr());;
	if ((((_47913_eprim != nullptr) && (_47813_prim != nullptr)) && _1aac084ed_IsStr(_47813_prim.ptr()))) {
		if (_1aac0695d_IsU8(_47913_eprim.ptr())) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::Str::from_byte(", 21));
		} else {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::Str::from_rune(", 21));
		};
		_1a60bca1b_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
		_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
	_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38631_m.get()._field_Kind));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1a60bca1b_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60bd49a_models(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Slice<jule::Any> _49730_args) {
	if ((_49730_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49730_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a967a658:;
		if (it != expr_end) {
			jule::I32 _50114_i = it - expr->begin();
			jule::Any _50121_a = *it;
			{
				_1a60bca1b_possibleRefExpr(_self_, _50121_a);
				if (((_49730_args.len() - _50114_i) > 1LL)) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1a967a658:;
			++it;
			_50114_i++;
			goto _iter_begin_1a967a658;
		}
		_iter_end_1a967a658:;
	};
}



inline void _1a60bd753_args(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa194b_FnCallExprModel>* _50929_m) {
	jule::I32 _51017_j = 0LL;;
	if (((((*(_50929_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_50929_m)).get()._field_Func.get()._field_Decl.get()._field_Statically))) || (((*(_50929_m)).get()._field_Func.get()._field_Params.len() > 0LL) && _1aaaabe84_IsSelf((*(_50929_m)).get()._field_Func.get()._field_Params[0LL].get()._field_Decl.ptr())))) {
		(_51017_j)++;
	};
	{
		auto expr = &((*(_50929_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a967cc54:;
		if (it != expr_end) {
			jule::I32 _51513_i = it - expr->begin();
			jule::Any _51516_arg = *it;
			{
				jule::Ptr<_1aaab5102_ParamIns> _51617_p = (*(_50929_m)).get()._field_Func.get()._field_Params[_51017_j];;
				if (((_51617_p.get()._field_Decl != nullptr) && _51617_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _51516_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1a96800a8:;
							{
								jule::Ptr<_1aab68969_Var> _52025_v = _51516_arg.cast_ptr<_1aab68969_Var>(&__jule_any_type8);;
								if (_52025_v.get()._field_Reference) {
									_1a60c7350_model(_self_, _51516_arg);
									goto _julec_label_1a96828a2;
								};
							}
						}
						_match_end_1a9680053:;
					};
					_1a6192607_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1a60c7350_model(_self_, _51516_arg);
					_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_1a96828a2;
				};
				_1a60bca1b_possibleRefExpr(_self_, _51516_arg);
				_julec_label_1a96828a2:;
				if ((((*(_50929_m)).get()._field_Args.len() - _51513_i) > 1LL)) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_51017_j)++;
			}
			_iter_next_1a967cc54:;
			++it;
			_51513_i++;
			goto _iter_begin_1a967cc54;
		}
		_iter_end_1a967cc54:;
	};
}



inline void _1a60bda0b_modelForCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Any _54036_expr) {
	{
		auto &_match_expr{ _54036_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a9683e25:;
			{
				_1a60c22a1_funcIns(_self_, _54036_expr.cast_ptr<_1aaab609d_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a9683e9c:;
			{
				jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> _54621_ssie = _54036_expr.cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_54621_ssie.get()._field_Method != nullptr)) {
					_1a60c22a1_funcIns(_self_, _54621_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1a9683dae:;
	};
	_1a60bca1b_possibleRefExpr(_self_, _54036_expr);
}



inline void _1a60bdcb4_pushCallInf(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa194b_FnCallExprModel>* _55532_m) {
	if ((_205b16b42_Production || ((!((*(_55532_m)).get()._field_Func.get()._field_Anon)) && (!(_1a60c950b_isBuiltinCallHasDebuginf(_55532_m)))))) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_55532_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_55532_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1a9686da1:;
				{
					if ((*(_55532_m)).get()._field_Expr.cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_Binded) {
						_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1a96870e3;
				}
			}
			else {
				_case_begin_1a96870e3:;
				{
					_1a6192607_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1a968708d:;
		};
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1a6194807_locInfo(_self_.get()._field_oc, &((*(_55532_m)).get()._field_Token));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_55532_m)).get()._field_Args.len() != 0LL)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1a60be105_isWrapped(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa194b_FnCallExprModel>* _58034_m) {
	if ((((!(_1aaab7533_IsBuiltin((*(_58034_m)).get()._field_Func.ptr()))) && ((*(_58034_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1aaaabe84_IsSelf((*(_58034_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_58034_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1a968a668:;
				{
					jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> _58425_ssie = (*(_58034_m)).get()._field_Expr.cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1aaaac21a_IsRef((*(_58034_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1aabeed74_Sptr(_58425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1a968c13c:;
							{
								goto _match_end_1a968b3d3;
							}
						}
						else {
							_case_begin_1a968b449:;
							{
								if ((_1aac01161_Struct(_58425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_58425_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1a6192607_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1a60c7350_model(_self_, _58425_ssie.get()._field_Expr.get()._field_Model);
										_1a6192607_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1a968b3d3:;
					};
				}
			}
			_match_end_1a968a613:;
		};
	};
	return false;;
}



inline void _1a60be3ad_pureFuncCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa194b_FnCallExprModel>* _60437_m) {
	jule::Bool _60513_wrapped = _1a60be105_isWrapped(_self_, _60437_m);;
	_1a60bda0b_modelForCall(_self_, (*(_60437_m)).get()._field_Expr);
	if ((!(_1aaab7533_IsBuiltin((*(_60437_m)).get()._field_Func.ptr())))) {
		if (((*(_60437_m)).get()._field_Func.get()._field_Decl.get()._field_Binded && ((*(_60437_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1a647ab21_hasDirective(&((*(_60437_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_1a6192607_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_60437_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a969131c:;
					if (it != expr_end) {
						jule::I32 _61126_i = it - expr->begin();
						jule::Ptr<_1aabea80e_InsGeneric> _61133_g = *it;
						{
							_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _61133_g.get()._field_Kind));
							if ((((*(_60437_m)).get()._field_Func.get()._field_Generics.len() - _61126_i) > 1LL)) {
								_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1a969131c:;
						++it;
						_61126_i++;
						goto _iter_begin_1a969131c;
					}
					_iter_end_1a969131c:;
				};
				_1a6192607_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1a60bdcb4_pushCallInf(_self_, _60437_m);
	jule::Bool _62217_locinfo = false;;
	if ((((!(_1aaab7533_IsBuiltin((*(_60437_m)).get()._field_Func.ptr()))) && ((*(_60437_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1aaaabe84_IsSelf((*(_60437_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_60437_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1a9694be4:;
				{
					jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> _62625_ssie = (*(_60437_m)).get()._field_Expr.cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1aaaac21a_IsRef((*(_60437_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1a9695ac4:;
							{
								_1a60bca1b_possibleRefExpr(_self_, _62625_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1aabeed74_Sptr(_62625_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1a9695b3a:;
							{
								_1a60bca1b_possibleRefExpr(_self_, _62625_ssie.get()._field_Expr.get()._field_Model);
								_1a6192607_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_205b16b42_Production))) {
									_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1a6194807_locInfo(_self_.get()._field_oc, &((*(_60437_m)).get()._field_Token));
									_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1a9695a5d:;
							{
								if ((_1aac01161_Struct(_62625_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _62625_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1a9696333:;
											{
												jule::Ptr<_1aab68969_Var> _64333_v = _62625_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_1aab68969_Var>(&__jule_any_type8);;
												if (_64333_v.get()._field_Reference) {
													goto _match_end_1a9696641;
												};
												goto _case_begin_1a9696696;
											}
										}
										else {
											_case_begin_1a9696696:;
											{
												_1a6192607_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1a9696641:;
									};
								};
								if (_60513_wrapped) {
									_1a6192607_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1a60c7350_model(_self_, _62625_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1a96959e7:;
					};
					if (((*(_60437_m)).get()._field_Args.len() > 0LL)) {
						_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_1a9694c5a:;
				{
					_1a60bca1b_possibleRefExpr(_self_, (*(_60437_m)).get()._field_Expr.cast_ptr<_1aaaa3b4b_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_205b16b42_Production))) {
						_62217_locinfo=true;
					};
					if (((*(_60437_m)).get()._field_Args.len() > 0LL)) {
						_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1a9694b8e:;
		};
	};
	_1a60bd753_args(_self_, _60437_m);
	if (_62217_locinfo) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1a6194807_locInfo(_self_.get()._field_oc, &((*(_60437_m)).get()._field_Token));
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_60513_wrapped) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1a60be666_coFuncCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa194b_FnCallExprModel>* _68535_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1a6192805_addIndent(_self_.get()._field_oc);
	_1c38d3b83_StrBuilder _68817_head = static__1c38d3ea2_New(32LL);;
	_1c38dc94a_WriteStr(&_68817_head, jule::Str("std::thread([", 13));
	if (((*(_68535_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		_1c38dc94a_WriteStr(&_68817_head, jule::Str("_self_", 6));
		if (((*(_68535_m)).get()._field_Args.len() > 0LL)) {
			_1c38dc94a_WriteStr(&_68817_head, jule::Str(", ", 2));
		};
	};
	{
		auto expr = &((*(_68535_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96a230b:;
		if (it != expr_end) {
			jule::I32 _69613_i = it - expr->begin();
			jule::Any _69616_arg = *it;
			{
				if ((_69613_i > 0LL)) {
					_1c38dc94a_WriteStr(&_68817_head, jule::Str(", ", 2));
				};
				{
					auto &_match_expr{ _69616_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1a96a440c:;
						{
							jule::Ptr<_1aab68969_Var> _70225_v = _69616_arg.cast_ptr<_1aab68969_Var>(&__jule_any_type8);;
							_1c38dc94a_WriteStr(&_68817_head, static__1a60d2019_var(_70225_v));
							goto _iter_next_1a96a230b;
						}
					}
					_match_end_1a96a3b6a:;
				};
				jule::Str _70617_name = (jule::Str("_co_arg_", 8) + _1c4cacb3d_Itoa(_69613_i));;
				_1c38dc94a_WriteStr(&_68817_head, _70617_name);
				_1a6192c01_indent(_self_.get()._field_oc);
				_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_68535_m)).get()._field_Func.get()._field_Params[_69613_i].get()._field_Kind));
				_1a6192607_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_68535_m)).get()._field_Func.get()._field_Params[_69613_i].get()._field_Decl.get()._field_Reference) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1a6192607_write(_self_.get()._field_oc, _70617_name);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1a60bca1b_possibleRefExpr(_self_, _69616_arg);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _71817_argS = jule::Any(_70617_name, &__jule_any_type5);;
				(*(_68535_m)).get()._field_Args[_69613_i]=(*(((jule::Any*)((&(_71817_argS))))));
			}
			_iter_next_1a96a230b:;
			++it;
			_69613_i++;
			goto _iter_begin_1a96a230b;
		}
		_iter_end_1a96a230b:;
	};
	_1a6192c01_indent(_self_.get()._field_oc);
	_1c38dc692_Write(&_self_.get()._field_oc.get()._field_Obj, _1c38ddbe3_Buf(&_68817_head));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1a6192805_addIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a60be3ad_pureFuncCall(_self_, _68535_m);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a60be9c9_writeUseExpr(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaab609d_FnIns>* _73637_f, jule::Ptr<_1aabbbe1d_Data> _73652_d) {
	if ((_1aac01914_Tup(_73652_d.get()._field_Kind.ptr()) == nullptr)) {
		_1a60bca1b_possibleRefExpr(_self_, _73652_d.get()._field_Model);
		_1a6192607_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1aaaa59e9_TupleExprModel> _74217_tup = _73652_d.get()._field_Model.cast_ptr<_1aaaa59e9_TupleExprModel>(&__jule_any_type88);;
	_1a6478316_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _1aac01914_Tup((*(_73637_f)).get()._field_Result.ptr()));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_74217_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96ac6e0:;
		if (it != expr_end) {
			jule::I32 _74513_i = it - expr->begin();
			jule::Ptr<_1aabbbe1d_Data> _74516_data = *it;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(_74513_i));
				_1a6192607_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1a60bca1b_possibleRefExpr(_self_, _74516_data.get()._field_Model);
				if (((_74217_tup.get()._field_Datas.len() - _74513_i) > 1LL)) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1a96ac6e0:;
			++it;
			_74513_i++;
			goto _iter_begin_1a96ac6e0;
		}
		_iter_end_1a96ac6e0:;
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1a60bec82_funcCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa194b_FnCallExprModel> _75732_m) {
	if (_75732_m.get()._field_IsCo) {
		_1a60be666_coFuncCall(_self_, &(_75732_m));
		return;;
	};
	if (((_1aaab7533_IsBuiltin(_75732_m.get()._field_Func.ptr()) || (!(_75732_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_75732_m.get()._field_Except != nullptr) && (_75732_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1a60be3ad_pureFuncCall(_self_, &(_75732_m));
		return;;
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1a6192805_addIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1a60be3ad_pureFuncCall(_self_, &(_75732_m));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a6192c01_indent(_self_.get()._field_oc);
	if ((_75732_m.get()._field_Except != nullptr)) {
		if (((_75732_m.get()._field_Func.get()._field_Result == nullptr) || (!(_75732_m.get()._field_Assigned)))) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1a60b65d6_scope(_self_.get()._field_oc.get()._field_sc, _75732_m.get()._field_Except);
			_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _78321_forwarded = _1a60c9242_isForwarded(&(_75732_m.get()._field_Except));;
			_1a6192607_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_78321_forwarded) {
				_1a6192607_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _78825_stmt = _75732_m.get()._field_Except.get()._field_Stmts[(_75732_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _78825_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1a96b9510:;
					{
						_75732_m.get()._field_Except.get()._field_Stmts=_75732_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_75732_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1a6192607_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1a6192805_addIndent(_self_.get()._field_oc);
						_1a60b632d_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_75732_m.get()._field_Except));
						_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1a6192c01_indent(_self_.get()._field_oc);
						_1a60be9c9_writeUseExpr(_self_, &(_75732_m.get()._field_Func), _78825_stmt.cast_ptr<_1aabbbe1d_Data>(&__jule_any_type24));
						_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1a6192a03_doneIndent(_self_.get()._field_oc);
						_1a6192c01_indent(_self_.get()._field_oc);
						_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1a96b9147:;
					{
						_1a60b65d6_scope(_self_.get()._field_oc.get()._field_sc, _75732_m.get()._field_Except);
					}
				}
				_match_end_1a96b90e2:;
			};
			if (_78321_forwarded) {
				_1a6192607_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1a60c7608_initExpr(_self_, _75732_m.get()._field_Func.get()._field_Result);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1a6192607_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1a6192a03_doneIndent(_self_.get()._field_oc);
	} else {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1a6194807_locInfo(_self_.get()._field_oc, &(_75732_m.get()._field_Token));
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1aaab361c_IsVoid(_75732_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1a6192c01_indent(_self_.get()._field_oc);
			_1a6192607_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1a6192a03_doneIndent(_self_.get()._field_oc);
	};
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a60c003a_slice(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa1d25_SliceExprModel> _82829_m) {
	if ((_82829_m.get()._field_Elems.len() == 0LL)) {
		_1a6192607_write(_self_.get()._field_oc, _1a6470b38_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _82829_m.get()._field_ElemKind));
		_1a6192607_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1a6192607_write(_self_.get()._field_oc, _1a6470b38_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _82829_m.get()._field_ElemKind));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1a60bd49a_models(_self_, _82829_m.get()._field_Elems);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a60c02e3_indexing(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa22cb_IndexingExprModel> _84032_m) {
	_1a60bca1b_possibleRefExpr(_self_, _84032_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_205b16b42_Production || (_1aac0010a_Ptr(_84032_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1aac0167d_Map(_84032_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1a60c97c5_isExprComesFromBind(&(_84032_m.get()._field_Expr))) {
			_case_begin_1a96c46c4:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a60bca1b_possibleRefExpr(_self_, _84032_m.get()._field_Index.get()._field_Model);
				_1a6192607_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1a96c4d12:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1a6194807_locInfo(_self_.get()._field_oc, &(_84032_m.get()._field_Token));
				_1a6192607_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_1a60bca1b_possibleRefExpr(_self_, _84032_m.get()._field_Index.get()._field_Model);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1a96c4c9b:;
	};
}



inline void _1a60c059b_unsafeIndexing(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aace9358_UnsafeIndexingExprModel> _86038_m) {
	_1a60bca1b_possibleRefExpr(_self_, _86038_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_205b16b42_Production || (_1aac0010a_Ptr(_86038_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1aac0167d_Map(_86038_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a96c850d:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1a60bca1b_possibleRefExpr(_self_, _86038_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1a6192607_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1a96c8bd4:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1a60bca1b_possibleRefExpr(_self_, _86038_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1a96c8b6d:;
	};
}



inline void _1a60c0854_anonFunc(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa26a5_AnonFnExprModel> _87732_m) {
	_1a6192607_write(_self_.get()._field_oc, _1a64738d8_func(_self_.get()._field_oc.get()._field_tc.ptr(), _87732_m.get()._field_Func));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1a6199e17_paramsIns(_self_.get()._field_oc, &(_87732_m.get()._field_Func.get()._field_Params));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1a6473256_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_87732_m.get()._field_Func));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1a60b688e_funcScope(_self_.get()._field_oc.get()._field_sc, _87732_m.get()._field_Func);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c0b0c_mapExpr(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa3035_MapExprModel> _88831_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _88831_m.get()._field_KeyKind));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _88831_m.get()._field_ValKind));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_88831_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_88831_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a96d1e1d:;
			if (it != expr_end) {
				jule::I32 _89518_i = it - expr->begin();
				jule::Ptr<_1aaaa2a7e_KeyValPairExprModel> _89525_pair = *it;
				{
					_1a6192607_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1a60bca1b_possibleRefExpr(_self_, _89525_pair.get()._field_Key);
					_1a6192607_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1a60bca1b_possibleRefExpr(_self_, _89525_pair.get()._field_Val);
					_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_88831_m.get()._field_Entries.len() - _89518_i) > 1LL)) {
						_1a6192607_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1a96d1e1d:;
				++it;
				_89518_i++;
				goto _iter_begin_1a96d1e1d;
			}
			_iter_end_1a96d1e1d:;
		};
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1a60c0db5_slicing(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa35b8_SlicingExprModel> _90931_m) {
	_1a60bca1b_possibleRefExpr(_self_, _90931_m.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_205b16b42_Production))) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1a6194807_locInfo(_self_.get()._field_oc, &(_90931_m.get()._field_Token));
		_1a6192607_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1a60bca1b_possibleRefExpr(_self_, _90931_m.get()._field_Left);
	if ((_90931_m.get()._field_Right != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a60bca1b_possibleRefExpr(_self_, _90931_m.get()._field_Right);
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c116d_traitSub(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa3b4b_TraitSubIdentExprModel> _92532_m) {
	_1a6192607_write(_self_.get()._field_oc, static__1a60d1139_traitDecl(_92532_m.get()._field_Trt));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1a60bca1b_possibleRefExpr(_self_, _92532_m.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1a6192607_write(_self_.get()._field_oc, static__1a60d0aa6_func(&(_92532_m.get()._field_Method)));
}



inline void _1a60c1426_structureSub(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> _93436_m) {
	_1a60bca1b_possibleRefExpr(_self_, _93436_m.get()._field_Expr.get()._field_Model);
	if ((_93436_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_1aac0010a_Ptr(_93436_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_1aabeed74_Sptr(_93436_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_205b16b42_Production))) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_1a6194807_locInfo(_self_.get()._field_oc, &(_93436_m.get()._field_Token));
			_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_1a6192607_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1a6192607_write(_self_.get()._field_oc, static__1a60d1c50_field(&(_93436_m.get()._field_Field.get()._field_Decl)));
}



inline void _1a60c16ce_commonIdent(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa5169_CommonIdentExprModel> _95531_m) {
	_1a6192607_write(_self_.get()._field_oc, _95531_m.get()._field_Ident);
}



inline void _1a60c1987_commonSub(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa56ec_CommonSubIdentExprModel> _95933_m) {
	_1a60bca1b_possibleRefExpr(_self_, _95933_m.get()._field_Expr);
	{
		
		if ((_1aac0010a_Ptr(_95933_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a96deb0c:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1aabeed74_Sptr(_95933_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1a96e01d4:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_205b16b42_Production))) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1a6194807_locInfo(_self_.get()._field_oc, &(_95933_m.get()._field_Token));
					_1a6192607_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1a6192607_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1a96e016d:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1a96e0107:;
	};
	_1a6192607_write(_self_.get()._field_oc, _95933_m.get()._field_Ident);
}



inline void _1a60c1c40_array(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa4d6c_ArrayExprModel> _97829_m) {
	_1a6192607_write(_self_.get()._field_oc, _1a6472420_array(_self_.get()._field_oc.get()._field_tc.ptr(), _97829_m.get()._field_Kind));
	if ((_97829_m.get()._field_Elems.len() == 0LL)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_97829_m.get()._field_Elems.len() == 2LL) && (_97829_m.get()._field_Elems[1LL] == nullptr))) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a60bca1b_possibleRefExpr(_self_, _97829_m.get()._field_Elems[0LL]);
		_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1a60bd49a_models(_self_, _97829_m.get()._field_Elems);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1a60c1ee8_funcInsCommon(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaab609d_FnIns> _100137_m) {
	_1a6192607_write(_self_.get()._field_oc, _1a64738d8_func(_self_.get()._field_oc.get()._field_tc.ptr(), _100137_m));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a60c22a1_funcIns(_self_, _100137_m);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c22a1_funcIns(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaab609d_FnIns> _100831_m) {
	if (((_100831_m.get()._field_Decl != nullptr) && _100831_m.get()._field_Decl.get()._field_Binded)) {
		jule::Ptr<_1aaa42c61_Directive> _101017_d = _1a647a758_findDirective(&(_100831_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_101017_d != nullptr)) {
			_1a6192607_write(_self_.get()._field_oc, _1a619e757_concatAllParts(_101017_d.get()._field_Args));
			_1a6192607_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1a6192607_write(_self_.get()._field_oc, static__1a60d0d70_funcIns(&(_100831_m)));
}



inline void _1a60c2559_tuple(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa59e9_TupleExprModel> _101929_m) {
	{
		auto expr = &(_101929_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a96eb0ad:;
		if (it != expr_end) {
			jule::I32 _102014_i = it - expr->begin();
			jule::Ptr<_1aabbbe1d_Data> _102021_d = *it;
			{
				_1a60bca1b_possibleRefExpr(_self_, _102021_d.get()._field_Model);
				_1a6192607_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_101929_m.get()._field_Datas.len() - _102014_i) > 1LL)) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1a6192c01_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1a96eb0ad:;
			++it;
			_102014_i++;
			goto _iter_begin_1a96eb0ad;
		}
		_iter_end_1a96eb0ad:;
	};
}



inline void _1a60c2812_newCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa6973_BuiltinNewCallExprModel> _103031_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _103031_m.get()._field_Kind));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_103031_m.get()._field_Init != nullptr)) {
		_1a60bca1b_possibleRefExpr(_self_, _103031_m.get()._field_Init);
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c2aba_outCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa5dc3_BuiltinOutCallExprModel> _104031_m) {
	if ((_104031_m.get()._field_Debug && _205b16b42_Production)) {
		return;;
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1a60bca1b_possibleRefExpr(_self_, _104031_m.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c2d73_outlnCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa629c_BuiltinOutlnCallExprModel> _104933_m) {
	if ((_104933_m.get()._field_Debug && _205b16b42_Production)) {
		return;;
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1a60bca1b_possibleRefExpr(_self_, _104933_m.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c312b_panicCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa6d4c_BuiltinPanicCallExprModel> _105833_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1a60bca1b_possibleRefExpr(_self_, _105833_m.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1a6194807_locInfo(_self_.get()._field_oc, &(_105833_m.get()._field_Token));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a60c33d4_assertCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa7303_BuiltinAssertCallExprModel> _106634_m) {
	if (_205b16b42_Production) {
		return;;
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1a60bca1b_possibleRefExpr(_self_, _106634_m.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1a60c83ea_cstrLit(&(_self_.get()._field_oc.get()._field_Obj), _106634_m.get()._field_Log);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1a6194807_locInfo(_self_.get()._field_oc, &(_106634_m.get()._field_Token));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1a60c368c_errorCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa903b_BuiltinErrorCallExprModel> _107933_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1aaab361c_IsVoid(_107933_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _107933_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a970798d:;
				{
					jule::Ptr<_1aab68969_Var> _108421_v = _107933_m.get()._field_Err.get()._field_Model.cast_ptr<_1aab68969_Var>(&__jule_any_type8);;
					if (_108421_v.get()._field_Ident.equal("error", 5)) {
						_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1a97076b3:;
		};
		_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1a64789dc_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_107933_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _107933_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1a970a5b7:;
				{
					jule::Ptr<_1aab68969_Var> _109621_v = _107933_m.get()._field_Err.get()._field_Model.cast_ptr<_1aab68969_Var>(&__jule_any_type8);;
					if (_109621_v.get()._field_Ident.equal("error", 5)) {
						_1a6192607_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1a970a562:;
		};
		_1a6192607_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1a60bca1b_possibleRefExpr(_self_, _107933_m.get()._field_Err.get()._field_Model);
	jule::I32 _110513_i = _1a6193383_pushAnyType(_self_.get()._field_oc, _107933_m.get()._field_Err.get()._field_Kind);;
	_1a6192607_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(_110513_i));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1a60c3945_copyCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa8b62_BuiltinCopyCallExprModel> _111132_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1a60bca1b_possibleRefExpr(_self_, _111132_m.get()._field_Dest.get()._field_Model);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1aabeeadd_Prim(_111132_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1a60bca1b_possibleRefExpr(_self_, _111132_m.get()._field_Src.get()._field_Model);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1aabeeadd_Prim(_111132_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c3bed_lenCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa7e80_BuiltinLenCallExprModel> _112731_m) {
	_1a60bca1b_possibleRefExpr(_self_, _112731_m.get()._field_Expr.get()._field_Model);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1a60c3ea6_capCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa827c_BuiltinCapCallExprModel> _113231_m) {
	_1a60bca1b_possibleRefExpr(_self_, _113231_m.get()._field_Expr.get()._field_Model);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1a60c425e_deleteCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa88ed_BuiltinDeleteCallExprModel> _113734_m) {
	_1a60bca1b_possibleRefExpr(_self_, _113734_m.get()._field_Dest.get()._field_Model);
	if ((_113734_m.get()._field_Key != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1a60bca1b_possibleRefExpr(_self_, _113734_m.get()._field_Key.get()._field_Model);
		_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1a60c4517_makeCallSlice(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa77a9_BuiltinMakeCallExprModel>* _114838_m) {
	jule::Ptr<_1aac09565_Slc> _114917_slice = _1aac00b44_Slc((*(_114838_m)).get()._field_Kind.ptr());;
	_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_114838_m)).get()._field_Kind));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a60bca1b_possibleRefExpr(_self_, (*(_114838_m)).get()._field_Len);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_114838_m)).get()._field_Cap != nullptr)) {
		_1a60bca1b_possibleRefExpr(_self_, (*(_114838_m)).get()._field_Cap);
	} else {
		_1a60bca1b_possibleRefExpr(_self_, (*(_114838_m)).get()._field_Len);
	};
	if (_1a647adda_shouldInitialized(&(_114917_slice.get()._field_Elem))) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a60c7608_initExpr(_self_, _114917_slice.get()._field_Elem);
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c47c0_makeCallStr(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa77a9_BuiltinMakeCallExprModel>* _116636_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1a60bca1b_possibleRefExpr(_self_, (*(_116636_m)).get()._field_Len);
	if (((*(_116636_m)).get()._field_Cap != nullptr)) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1a60bca1b_possibleRefExpr(_self_, (*(_116636_m)).get()._field_Cap);
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c4a78_makeCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa77a9_BuiltinMakeCallExprModel> _117732_m) {
	if ((_1aac00b44_Slc(_117732_m.get()._field_Kind.ptr()) != nullptr)) {
		_1a60c4517_makeCallSlice(_self_, &(_117732_m));
		return;;
	};
	_1a60c47c0_makeCallStr(_self_, &(_117732_m));
}



inline void _1a60c4d31_pushToSlice(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aace96ee_PushToSliceExprModel> _118535_m) {
	;
	_1a6192607_write(_self_.get()._field_oc, jule::Str("{ ", 2));
	_1a6192607_write(_self_.get()._field_oc, _1a6470b38_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _118535_m.get()._field_Elems.get()._field_ElemKind));
	jule::Bool _119317_ptr = false;;
	{
		auto &_match_expr{ _118535_m.get()._field_Dest };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a971ce37:;
			{
				jule::Ptr<_1aaa9ed45_UnaryExprModel> _119721_u = _118535_m.get()._field_Dest.cast_ptr<_1aaa9ed45_UnaryExprModel>(&__jule_any_type74);;
				if ((_1aac0010a_Ptr(_119721_u.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str(" *__jule_push_dest = ", 21));
					_1a60bca1b_possibleRefExpr(_self_, _119721_u.get()._field_Expr.get()._field_Model);
					_1a6192607_write(_self_.get()._field_oc, jule::Str("; ", 2));
					_119317_ptr=true;
					goto _match_end_1a971e2bd;
				};
				goto _case_begin_1a971e323;
			}
		}
		else {
			_case_begin_1a971e323:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str(" &__jule_push_dest = ", 21));
				_1a60bca1b_possibleRefExpr(_self_, _118535_m.get()._field_Dest);
				_1a6192607_write(_self_.get()._field_oc, jule::Str("; ", 2));
			}
		}
		_match_end_1a971e2bd:;
	};
	if ((_118535_m.get()._field_Elems.get()._field_Elems.len() == 1LL)) {
		if (_119317_ptr) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->push(", 23));
		} else {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.push(", 22));
		};
		_1a60bca1b_possibleRefExpr(_self_, _118535_m.get()._field_Elems.get()._field_Elems[0LL]);
		_1a6192607_write(_self_.get()._field_oc, jule::Str("); }", 4));
		return;;
	};
	if (_119317_ptr) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.alloc_for_append(", 34));
	};
	_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(static_cast<jule::I32>(_118535_m.get()._field_Elems.get()._field_Elems.len())));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("); ", 3));
	{
		auto expr = &(_118535_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9723e4e:;
		if (it != expr_end) {
			jule::Any _123121_e = *it;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("__jule_push_dest", 16));
				if (_119317_ptr) {
					_1a6192607_write(_self_.get()._field_oc, jule::Str("->__push(", 9));
				} else {
					_1a6192607_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				};
				_1a60bca1b_possibleRefExpr(_self_, _123121_e);
				_1a6192607_write(_self_.get()._field_oc, jule::Str("); ", 3));
			}
			_iter_next_1a9723e4e:;
			++it;
			goto _iter_begin_1a9723e4e;
		}
		_iter_end_1a9723e4e:;
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1a60c50d9_appendToSlice(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aace9ac8_AppendToSliceExprModel> _124537_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1a60bca1b_possibleRefExpr(_self_, _124537_m.get()._field_Dest);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	_1a60bca1b_possibleRefExpr(_self_, _124537_m.get()._field_Slice);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1a60c5392_appendCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa7b83_BuiltinAppendCallExprModel> _125334_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1a60bca1b_possibleRefExpr(_self_, _125334_m.get()._field_Dest);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1a60bca1b_possibleRefExpr(_self_, _125334_m.get()._field_Elements);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c564a_cloneCall(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa6599_BuiltinCloneCallExprModel> _126133_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1a60bca1b_possibleRefExpr(_self_, _126133_m.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c5903_sizeof(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa9338_SizeofExprModel> _126730_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1a60bca1b_possibleRefExpr(_self_, _126730_m.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c5bab_alignof(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa9635_AlignofExprModel> _127331_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1a60bca1b_possibleRefExpr(_self_, _127331_m.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c5e64_runeLit(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa9932_RuneExprModel> _127927_m) {
	if ((_127927_m.get()._field_Code <= 127LL)) {
		_1c38dcc03_WriteByte(&_self_.get()._field_oc.get()._field_Obj, '\'');
		jule::Str _128221_b = _1a60c7cce_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_127927_m.get()._field_Code)));;
		if (_128221_b.equal("'", 1)) {
			_1c38dcc03_WriteByte(&_self_.get()._field_oc.get()._field_Obj, '\\');
		};
		_1c38dc94a_WriteStr(&_self_.get()._field_oc.get()._field_Obj, _128221_b);
		_1c38dcc03_WriteByte(&_self_.get()._field_oc.get()._field_Obj, '\'');
		return;;
	};
	_1a60c8a7c_itoa(&(_self_.get()._field_oc.get()._field_Obj), static_cast<jule::I64>(static_cast<jule::I64>(_127927_m.get()._field_Code)));
}



inline void _1a60c621c_structureStatic(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa4993_StructStaticIdentExprModel> _129339_m) {
	_1a6192607_write(_self_.get()._field_oc, static__1a60d0d70_funcIns(&(_129339_m.get()._field_Method)));
}



inline void _1a60c64c5_integratedToStr(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaa9c2e_IntegratedToStrExprModel> _129739_m) {
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1a60bca1b_possibleRefExpr(_self_, _129739_m.get()._field_Expr);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1a60c677d_backendEmit(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaaa108_BackendEmitExprModel> _130335_m) {
	if ((_130335_m.get()._field_Exprs.len() == 0LL)) {
		_1a6192607_write(_self_.get()._field_oc, _130335_m.get()._field_Code);
		return;;
	};
	jule::I32 _130813_n = _1c38dd6c6_Len(&_self_.get()._field_oc.get()._field_Obj);;
	jule::Slice<jule::Any> _130917_args = jule::Slice<jule::Any>::alloc(_130335_m.get()._field_Exprs.len(), _130335_m.get()._field_Exprs.len());;
	{
		auto expr = &(_130335_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97335ac:;
		if (it != expr_end) {
			jule::I32 _131014_i = it - expr->begin();
			jule::Any _131021_expr = *it;
			{
				_1a60bca1b_possibleRefExpr(_self_, _131021_expr);
				jule::Slice<jule::U8> _131221_buf = _1c38ddbe3_Buf(&_self_.get()._field_oc.get()._field_Obj);;
				_130917_args[_131014_i]=jule::Any(static_cast<jule::Str>(_131221_buf.slice(_130813_n)), &__jule_any_type5);
				{
					_1c38dde9b_SetBuf(&_self_.get()._field_oc.get()._field_Obj, _131221_buf.slice(0LL, _130813_n));
				};
			}
			_iter_next_1a97335ac:;
			++it;
			_131014_i++;
			goto _iter_begin_1a97335ac;
		}
		_iter_end_1a97335ac:;
	};
	_1a6192607_write(_self_.get()._field_oc, _1aacd6e39_Format(_130335_m.get()._field_Code, _130917_args));
}



inline void _1a60c6a36_free(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aaaaa405_FreeExprModel> _131928_m) {
	_1a60bca1b_possibleRefExpr(_self_, _131928_m.get()._field_Expr);
	if (_205b1649e_RC) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1a6192607_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1a60c6cde_strComp(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aace8643_StrCompExprModel> _132831_m) {
	if (_132831_m.get()._field_NotEq) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Str _133213_s = _1c4cc0029_ReadStr(_132831_m.get()._field_Right.ptr());;
	_1a60bca1b_possibleRefExpr(_self_, _132831_m.get()._field_Left);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_1a60c83ea_cstrLit(&(_self_.get()._field_oc.get()._field_Obj), _133213_s);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(static_cast<jule::I32>(_133213_s.len())));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_132831_m.get()._field_NotEq) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1a60c7097_inlineStdInternalNosafeStobs(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aace9dc5_InlineStdInternalNosafeStobs> _134452_m) {
	_1a60bca1b_possibleRefExpr(_self_, _134452_m.get()._field_Str);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
}



inline void _1a60c7350_model(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Any _134929_m) {
	{
		auto &_match_expr{ _134929_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a973ccc0:;
			{
				_1a6192607_write(_self_.get()._field_oc, _134929_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1a973c75e:;
			{
				_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _134929_m.cast_ptr<_1aabec1e5_TypeKind>(&__jule_any_type90)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a973c96d:;
			{
				_1a60bae59_constant(_self_, _134929_m.cast_ptr<_1c4cbcda1_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a973c9d4:;
			{
				_1a60bbb91_var(_self_, _134929_m.cast_ptr<_1aab68969_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1a973ca4a:;
			{
				_1a60bbe49_structureIns(_self_, _134929_m.cast_ptr<_1aaa9a390_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a973cab1:;
			{
				_1a60c1ee8_funcInsCommon(_self_, _134929_m.cast_ptr<_1aaab609d_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1a973d5c8:;
			{
				_1a60bb630_unsafeBinary(_self_, _134929_m.cast_ptr<_1aace8ed4_UnsafeBinopExprModel>(&__jule_any_type128).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a973d63e:;
			{
				_1a60bb8d8_binary(_self_, _134929_m.cast_ptr<_1aaa9e96b_BinopExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a973d6b6:;
			{
				_1a60bc202_unary(_self_, _134929_m.cast_ptr<_1aaa9ed45_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a973d73d:;
			{
				_1a60bc4aa_structureLit(_self_, _134929_m.cast_ptr<_1aaaa0719_StructLitExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1a973d7b5:;
			{
				_1a60bc763_allocStructure(_self_, _134929_m.cast_ptr<_1aaaa0a16_AllocStructLitExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1a973d83c:;
			{
				_1a60bd1e2_casting(_self_, _134929_m.cast_ptr<_1aaaa1099_CastingExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a973d8b4:;
			{
				_1a60bec82_funcCall(_self_, _134929_m.cast_ptr<_1aaaa194b_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1a973d93b:;
			{
				_1a60c003a_slice(_self_, _134929_m.cast_ptr<_1aaaa1d25_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1a973d9b3:;
			{
				_1a60c1c40_array(_self_, _134929_m.cast_ptr<_1aaaa4d6c_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1a973da3a:;
			{
				_1a60c059b_unsafeIndexing(_self_, _134929_m.cast_ptr<_1aace9358_UnsafeIndexingExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1a973dab2:;
			{
				_1a60c02e3_indexing(_self_, _134929_m.cast_ptr<_1aaaa22cb_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1a973db39:;
			{
				_1a60c0854_anonFunc(_self_, _134929_m.cast_ptr<_1aaaa26a5_AnonFnExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1a973dbb1:;
			{
				_1a60c0b0c_mapExpr(_self_, _134929_m.cast_ptr<_1aaaa3035_MapExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a973dc38:;
			{
				_1a60c0db5_slicing(_self_, _134929_m.cast_ptr<_1aaaa35b8_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a973dcb0:;
			{
				_1a60c116d_traitSub(_self_, _134929_m.cast_ptr<_1aaaa3b4b_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a973dd37:;
			{
				_1a60c1426_structureSub(_self_, _134929_m.cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1a973ddae:;
			{
				_1a60c16ce_commonIdent(_self_, _134929_m.cast_ptr<_1aaaa5169_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a973de36:;
			{
				_1a60c1987_commonSub(_self_, _134929_m.cast_ptr<_1aaaa56ec_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1a973dead:;
			{
				_1a60c2559_tuple(_self_, _134929_m.cast_ptr<_1aaaa59e9_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1a973e035:;
			{
				_1a60c2aba_outCall(_self_, _134929_m.cast_ptr<_1aaaa5dc3_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1a973e0ac:;
			{
				_1a60c2d73_outlnCall(_self_, _134929_m.cast_ptr<_1aaaa629c_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1a973e134:;
			{
				_1a60c2812_newCall(_self_, _134929_m.cast_ptr<_1aaaa6973_BuiltinNewCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1a973e1ab:;
			{
				_1a60c312b_panicCall(_self_, _134929_m.cast_ptr<_1aaaa6d4c_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1a973e233:;
			{
				_1a60c33d4_assertCall(_self_, _134929_m.cast_ptr<_1aaaa7303_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1a973e2aa:;
			{
				_1a60c368c_errorCall(_self_, _134929_m.cast_ptr<_1aaaa903b_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1a973e332:;
			{
				_1a60c4a78_makeCall(_self_, _134929_m.cast_ptr<_1aaaa77a9_BuiltinMakeCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1a973e3a9:;
			{
				_1a60c5392_appendCall(_self_, _134929_m.cast_ptr<_1aaaa7b83_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1a973e431:;
			{
				_1a60c564a_cloneCall(_self_, _134929_m.cast_ptr<_1aaaa6599_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1a973e4a8:;
			{
				_1a60c3945_copyCall(_self_, _134929_m.cast_ptr<_1aaaa8b62_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1a973e530:;
			{
				_1a60c3bed_lenCall(_self_, _134929_m.cast_ptr<_1aaaa7e80_BuiltinLenCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1a973e5a7:;
			{
				_1a60c3ea6_capCall(_self_, _134929_m.cast_ptr<_1aaaa827c_BuiltinCapCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1a973e62e:;
			{
				_1a60c425e_deleteCall(_self_, _134929_m.cast_ptr<_1aaaa88ed_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1a973e6a6:;
			{
				_1a60c5903_sizeof(_self_, _134929_m.cast_ptr<_1aaaa9338_SizeofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1a973e72d:;
			{
				_1a60c5bab_alignof(_self_, _134929_m.cast_ptr<_1aaaa9635_AlignofExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1a973e7a5:;
			{
				_1a60c5e64_runeLit(_self_, _134929_m.cast_ptr<_1aaaa9932_RuneExprModel>(&__jule_any_type89));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a973e82c:;
			{
				_1a60c621c_structureStatic(_self_, _134929_m.cast_ptr<_1aaaa4993_StructStaticIdentExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1a973e8a4:;
			{
				_1a60c64c5_integratedToStr(_self_, _134929_m.cast_ptr<_1aaaa9c2e_IntegratedToStrExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1a973e92b:;
			{
				_1a60c677d_backendEmit(_self_, _134929_m.cast_ptr<_1aaaaa108_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1a973e9a3:;
			{
				_1a60c6a36_free(_self_, _134929_m.cast_ptr<_1aaaaa405_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1a973ea2a:;
			{
				_1a60c6cde_strComp(_self_, _134929_m.cast_ptr<_1aace8643_StrCompExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1a973eaa2:;
			{
				_1a60c7097_inlineStdInternalNosafeStobs(_self_, _134929_m.cast_ptr<_1aace9dc5_InlineStdInternalNosafeStobs>(&__jule_any_type130));
			}
		}
		else {
			_case_begin_1a973c907:;
			{
				_1a6192607_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1a973c8a2:;
	};
}



inline void _1a60c7608_initExpr(jule::Ptr<_1a60b96c7_exprCoder> _self_, jule::Ptr<_1aabec1e5_TypeKind> _145032_t) {
	if (_1aabee0a4_NilCompatible(_145032_t.ptr())) {
		if ((_1aac0010a_Ptr(_145032_t.ptr()) != nullptr)) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _145032_t));
			_1a6192607_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1aac0a159_Tuple> _146017_tup = _1aac01914_Tup(_145032_t.ptr());;
	if ((_146017_tup != nullptr)) {
		_1a6478316_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _146017_tup);
		_1a6192607_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_146017_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9555753:;
			if (it != expr_end) {
				jule::I32 _146418_i = it - expr->begin();
				jule::Ptr<_1aabec1e5_TypeKind> _146425_tt = *it;
				{
					if ((!(_1a647adda_shouldInitialized(&(_146425_tt))))) {
						goto _iter_next_1a9555753;
					};
					_1a6192607_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1a6192607_write(_self_.get()._field_oc, _1c4cacb3d_Itoa(_146418_i));
					_1a6192607_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1a60c7608_initExpr(_self_, _146425_tt);
					if (((_146017_tup.get()._field_Types.len() - _146418_i) > 1LL)) {
						_1a6192607_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1a9555753:;
				++it;
				_146418_i++;
				goto _iter_begin_1a9555753;
			}
			_iter_end_1a9555753:;
		};
		_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1aaac8b3d_Enum> _147917_enm = _1aac00391_Enum(_145032_t.ptr());;
	if ((_147917_enm != nullptr)) {
		_1a60c7350_model(_self_, _147917_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_1aac05066_Prim> _148413_prim = _1aabeeadd_Prim(_145032_t.ptr());;
	if ((_148413_prim != nullptr)) {
		if (_1c4cbc8c8_IsNum(_148413_prim.get()._field_Kind)) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1aac08267_IsBool(_148413_prim.ptr())) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1aac084ed_IsStr(_148413_prim.ptr())) {
			_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1aac008ad_Arr(_145032_t.ptr()) != nullptr)) {
		jule::Ptr<_1aac0b886_Arr> _149621_arr = _1aac008ad_Arr(_145032_t.ptr());;
		_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _145032_t));
		_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a60c7608_initExpr(_self_, _149621_arr.get()._field_Elem);
		_1a6192607_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1aaa9a390_StructIns> _150317_s = _1aac01161_Struct(_145032_t.ptr());;
	if ((((_150317_s != nullptr) && _150317_s.get()._field_Decl.get()._field_Binded) && (_1a647a758_findDirective(&(_150317_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _145032_t));
		_1a6192607_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1a6192607_write(_self_.get()._field_oc, _1a6473c29_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _145032_t));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a60b96c7_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a60ca2a9_deriveCoder> static__1a60ca672_new(jule::Ptr<_1a6191e53_ObjectCoder> _1323_oc) {
	return jule::new_ptr<_1a60ca2a9_deriveCoder>(_1a60ca2a9_deriveCoder{._field_oc=_1323_oc});;
}



inline jule::Str _1a60ca9b3_cloneFuncDecl(_1a60ca2a9_deriveCoder* _self_, jule::Ptr<_1aaa972b0_Struct>* _1733_s) {
	_1c38d3b83_StrBuilder _1817_obj = static__1c38d3ea2_New(51LL);;
	_1c38dc94a_WriteStr(&_1817_obj, _1a6471c8d_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1733_s))));
	_1c38dc94a_WriteStr(&_1817_obj, jule::Str(" clone(void) const ", 19));
	return _1c38dd242_Str(&_1817_obj);;
}



inline jule::Str _1a60cad04_cloneFuncDef(_1a60ca2a9_deriveCoder* _self_, jule::Ptr<_1aaa972b0_Struct>* _2432_s) {
	jule::Str _2513_strct = _1a6471c8d_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2432_s)));;
	_1c38d3b83_StrBuilder _2617_obj = static__1c38d3ea2_New(static_cast<jule::I32>(((_2513_strct.len() << 1LL) + 21LL)));;
	_1c38dc94a_WriteStr(&_2617_obj, _2513_strct);
	_1c38dcc03_WriteByte(&_2617_obj, ' ');
	_1c38dc94a_WriteStr(&_2617_obj, _2513_strct);
	_1c38dc94a_WriteStr(&_2617_obj, jule::Str("::clone(void) const ", 20));
	return _1c38dd242_Str(&_2617_obj);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a60ca2a9_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a60cbd6b_TestCoder> static__1a60cc2ab_New(jule::Ptr<_1a6191e53_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1a60cbd6b_TestCoder>(_1a60cbd6b_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1a60cc542_findTestingPackage(jule::Ptr<_1a60cbd6b_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9562e36:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1a9562e36:;
			++it;
			goto _iter_begin_1a9562e36;
		}
		_iter_end_1a9562e36:;
	};
	return nullptr;;
}



inline void _1a60cc7ea_appendTest(jule::Ptr<_1a60cbd6b_TestCoder> _self_, jule::Ptr<_1aaab609d_FnIns> _4334_f) {
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a60cd037_callTmReset(_self_);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1a60c83ea_cstrLit(&(_self_.get()._field_oc.get()._field_Obj), _4334_f.get()._field_Decl.get()._field_Ident);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(" << std::endl;\n", 15));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, static__1a60d0d70_funcIns(&(_4334_f)));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1a60ccaa3_appendPackageTests(jule::Ptr<_1a60cbd6b_TestCoder> _self_, jule::Ptr<_1aab27b59_Package>* _5843_p) {
	{
		auto expr = &((*(_5843_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9569877:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &(_5921_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a956a1b3:;
					if (it != expr_end) {
						jule::Ptr<_1aaab3199_Fn> _6025_f = *it;
						{
							if (_1a647ab21_hasDirective(&(_6025_f.get()._field_Directives), jule::Str("test", 4))) {
								_1a60cc7ea_appendTest(_self_, _6025_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1a956a1b3:;
						++it;
						goto _iter_begin_1a956a1b3;
					}
					_iter_end_1a956a1b3:;
				};
			}
			_iter_next_1a9569877:;
			++it;
			goto _iter_begin_1a9569877;
		}
		_iter_end_1a9569877:;
	};
}



inline jule::Bool _1a60ccd39_readyTestingPackage(jule::Ptr<_1a60cbd6b_TestCoder> _self_) {
	jule::Ptr<_1aab24c33_ImportInfo> _6917_p = _1a60cc542_findTestingPackage(_self_);;
	if ((_6917_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1aab25e10_FindStruct(_6917_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1aaa9b407_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_1aaa9b407_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_1aaa9b407_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1a60cd037_callTmReset(jule::Ptr<_1a60cbd6b_TestCoder> _self_) {
	_1a6192607_write(_self_.get()._field_oc, static__1a60d0aa6_func(&(_self_.get()._field_tmReset)));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a60cd235_callTmFailed(jule::Ptr<_1a60cbd6b_TestCoder> _self_) {
	_1a6192607_write(_self_.get()._field_oc, static__1a60d0aa6_func(&(_self_.get()._field_tmFailed)));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a60cd433_callTmSkipped(jule::Ptr<_1a60cbd6b_TestCoder> _self_) {
	_1a6192607_write(_self_.get()._field_oc, static__1a60d0aa6_func(&(_self_.get()._field_tmSkipped)));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1a60cd631_Serialize(jule::Ptr<_1a60cbd6b_TestCoder> _self_) {
	_1a619dd61_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1a619db63_end(_self_.get()._field_oc);
	});;
	_1a6192607_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1a6192805_addIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	if ((!(_1a60ccd39_readyTestingPackage(_self_)))) {
		_1a6192607_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1a6192a03_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1a6192607_write(_self_.get()._field_oc, _1a646e9d3_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1a64720ce_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1a6192607_write(_self_.get()._field_oc, _1a64720ce_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1a6192607_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1a6192805_addIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1a60cd235_callTmFailed(_self_);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1a60cd433_callTmSkipped(_self_);
	_1a6192607_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1a60ccaa3_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_1a6192607_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1a6192a03_doneIndent(_self_.get()._field_oc);
	_1a6192c01_indent(_self_.get()._field_oc);
	_1a6192607_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1a60cbd6b_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1a60d0039_writeIdentTo(_1c38d3b83_StrBuilder* _3333_buf, jule::Str* _3351_ident) {
	{
		auto expr = _3351_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a957b47c:;
		if (it != expr_end) {
			jule::U8 *_3416_b = it;
			{
				if (((*(_3416_b)) >= 128LLU)) {
					goto _julec_label_1a957b7bd;
				};
			}
			_iter_next_1a957b47c:;
			++it;
			goto _iter_begin_1a957b47c;
		}
		_iter_end_1a957b47c:;
	};
	_1c38dc94a_WriteStr(_3333_buf, (*(_3351_ident)));
	return;;
	_julec_label_1a957b7bd:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3351_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a957c835:;
		if (it != expr_end) {
			jule::I32 _4416_r = *it;
			{
				if ((_4416_r < 128LL)) {
					_1c38dcc03_WriteByte(_3333_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4416_r)));
					goto _iter_next_1a957c835;
				};
				_1c38dc94a_WriteStr(_3333_buf, _1c4cac874_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4416_r)), 15LL));
			}
			_iter_next_1a957c835:;
			++it;
			goto _iter_begin_1a957c835;
		}
		_iter_end_1a957c835:;
	};
}



inline jule::Str static__1a60d03ad_toOut(jule::Str* _6122_ident, jule::Uintptr _6134_addr) {
	if ((_6134_addr != 0LLU)) {
		_1c38d3b83_StrBuilder _6321_obj = static__1c38d3ea2_New(40LL);;
		_1c38dcc03_WriteByte(&_6321_obj, '_');
		_1c38dc94a_WriteStr(&_6321_obj, _1c4cac4ab_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6134_addr)), 15LL));
		_1c38dcc03_WriteByte(&_6321_obj, '_');
		static__1a60d0039_writeIdentTo(&(_6321_obj), _6122_ident);
		return _1c38dd242_Str(&_6321_obj);;
	};
	_1c38d3b83_StrBuilder _7017_obj = static__1c38d3ea2_New(static_cast<jule::I32>(((*(_6122_ident)).len() + 1LL)));;
	_1c38dcc03_WriteByte(&_7017_obj, '_');
	static__1a60d0039_writeIdentTo(&(_7017_obj), _6122_ident);
	return _1c38dd242_Str(&_7017_obj);;
}



inline jule::Str static__1a60d07dc_toLocal(jule::I32 _8223_row, jule::I32 _8233_col, jule::Str* _8244_ident) {
	_1c38d3b83_StrBuilder _8317_obj = static__1c38d3ea2_New(40LL);;
	_1c38dcc03_WriteByte(&_8317_obj, '_');
	_1c38dc94a_WriteStr(&_8317_obj, _1c4cacb3d_Itoa(_8223_row));
	_1c38dc94a_WriteStr(&_8317_obj, _1c4cacb3d_Itoa(_8233_col));
	_1c38dcc03_WriteByte(&_8317_obj, '_');
	static__1a60d0039_writeIdentTo(&(_8317_obj), _8244_ident);
	return _1c38dd242_Str(&_8317_obj);;
}



inline jule::Str static__1a60d0aa6_func(jule::Ptr<_1aaab3199_Fn>* _9321_f) {
	{
		
		if ((*(_9321_f)).get()._field_Binded) {
			_case_begin_1a95843ca:;
			{
				return (*(_9321_f)).get()._field_Ident;;
			}
		}
		else if ((*(_9321_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_1a9583bc1:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1aaab38a3_IsMethod((*(_9321_f)).ptr())) {
			_case_begin_1a9583c37:;
			{
				jule::Str _10021_obj = static__1a60d03ad_toOut(&((*(_9321_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
				if ((*(_9321_f)).get()._field_Statically) {
					_10021_obj=(jule::Str("static_", 7) + _10021_obj);
					return _10021_obj;;
				};
				return _10021_obj;;
			}
		}
		else {
			_case_begin_1a9582dac:;
			{
				return static__1a60d03ad_toOut(&((*(_9321_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
			}
		}
		_match_end_1a95834d9:;
	};
}



inline jule::Str static__1a60d0d70_funcIns(jule::Ptr<_1aaab609d_FnIns>* _11224_f) {
	if (_1aaab7533_IsBuiltin((*(_11224_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_11224_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_11224_f)).get()._field_Decl.get()._field_Binded || ((*(_11224_f)).get()._field_Generics.len() == 0LL))) {
		return static__1a60d0aa6_func(&((*(_11224_f)).get()._field_Decl));;
	};
	return static__1a60d03ad_toOut(&((*(_11224_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11224_f)))));;
}



inline jule::Str static__1a60d1139_traitDecl(jule::Ptr<_1aaac6443_Trait> _12525_t) {
	return static__1a60d03ad_toOut(&(_12525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12525_t)));;
}



inline jule::Str static__1a60d1403_param(jule::Ptr<_1aaaab868_Param>* _13022_p) {
	if ((_1c3e3d31e_IsAnonIdent((*(_13022_p)).get()._field_Ident) || _1c3e3d055_IsIgnoreIdent((*(_13022_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1aaaabe84_IsSelf((*(_13022_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_13022_p)).get()._field_Token == nullptr)) {
		return static__1a60d07dc_toLocal(0LL, 0LL, &((*(_13022_p)).get()._field_Ident));;
	};
	return static__1a60d07dc_toLocal((*(_13022_p)).get()._field_Token.get()._field_Row, (*(_13022_p)).get()._field_Token.get()._field_Column, &((*(_13022_p)).get()._field_Ident));;
}



inline jule::Str static__1a60d16bc_structure(jule::Ptr<_1aaa972b0_Struct>* _14426_s) {
	if ((*(_14426_s)).get()._field_Binded) {
		if (_1a647ab21_hasDirective(&((*(_14426_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_14426_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_14426_s)).get()._field_Ident);;
	};
	return static__1a60d03ad_toOut(&((*(_14426_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14426_s)))));;
}



inline jule::Str static__1a60d1986_structureIns(jule::Ptr<_1aaa9a390_StructIns>* _15529_s) {
	if (((*(_15529_s)).get()._field_Decl.get()._field_Binded || ((*(_15529_s)).get()._field_Generics.len() == 0LL))) {
		return static__1a60d16bc_structure(&((*(_15529_s)).get()._field_Decl));;
	};
	return static__1a60d03ad_toOut(&((*(_15529_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_15529_s)))));;
}



inline jule::Str static__1a60d1c50_field(jule::Ptr<_1aaa943bc_Field>* _16322_f) {
	if ((*(_16322_f)).get()._field_Owner.get()._field_Binded) {
		return (*(_16322_f)).get()._field_Ident;;
	};
	_1c38d3b83_StrBuilder _16717_obj = static__1c38d3ea2_New(static_cast<jule::I32>((7LL + (*(_16322_f)).get()._field_Ident.len())));;
	_1c38dc94a_WriteStr(&_16717_obj, jule::Str("_field_", 7));
	static__1a60d0039_writeIdentTo(&(_16717_obj), &((*(_16322_f)).get()._field_Ident));
	return _1c38dd242_Str(&_16717_obj);;
}



inline jule::Str static__1a60d2019_var(jule::Ptr<_1aab68969_Var> _17423_v) {
	{
		
		if (_17423_v.get()._field_Binded) {
			_case_begin_1a958d736:;
			{
				return _17423_v.get()._field_Ident;;
			}
		}
		else if (_17423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_1a958d79c:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_17423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_1a958d813:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_17423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1a958d879:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_17423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1a958db10:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1c4cacb3d_Itoa(_17423_v.get()._field_RetOrder));;
			}
		}
		else if ((_17423_v.get()._field_Scope != nullptr)) {
			_case_begin_1a958db76:;
			{
				return static__1a60d07dc_toLocal(_17423_v.get()._field_Token.get()._field_Row, _17423_v.get()._field_Token.get()._field_Column, &(_17423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_1a958d6c0:;
			{
				return static__1a60d03ad_toOut(&(_17423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_17423_v)));;
			}
		}
		_match_end_1a958d406:;
	};
}



inline jule::Str static__1a60d22d3_iterBegin(jule::Uintptr _19625_it) {
	_1c38d3b83_StrBuilder _19717_obj = static__1c38d3ea2_New(30LL);;
	_1c38dc94a_WriteStr(&_19717_obj, jule::Str("_iter_begin_", 12));
	_1c38dc94a_WriteStr(&_19717_obj, _1c4cac4ab_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19625_it)), 15LL));
	return _1c38dd242_Str(&_19717_obj);;
}



inline jule::Str static__1a60d259c_iterEnd(jule::Uintptr _20423_it) {
	_1c38d3b83_StrBuilder _20517_obj = static__1c38d3ea2_New(30LL);;
	_1c38dc94a_WriteStr(&_20517_obj, jule::Str("_iter_end_", 10));
	_1c38dc94a_WriteStr(&_20517_obj, _1c4cac4ab_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20423_it)), 15LL));
	return _1c38dd242_Str(&_20517_obj);;
}



inline jule::Str static__1a60d2866_iterNext(jule::Uintptr _21224_it) {
	_1c38d3b83_StrBuilder _21317_obj = static__1c38d3ea2_New(30LL);;
	_1c38dc94a_WriteStr(&_21317_obj, jule::Str("_iter_next_", 11));
	_1c38dc94a_WriteStr(&_21317_obj, _1c4cac4ab_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21224_it)), 15LL));
	return _1c38dd242_Str(&_21317_obj);;
}



inline jule::Str static__1a60d2b30_label(jule::Uintptr _22021_u) {
	_1c38d3b83_StrBuilder _22117_obj = static__1c38d3ea2_New(30LL);;
	_1c38dc94a_WriteStr(&_22117_obj, jule::Str("_julec_label_", 13));
	_1c38dc94a_WriteStr(&_22117_obj, _1c4cac4ab_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22021_u)), 15LL));
	return _1c38dd242_Str(&_22117_obj);;
}



inline jule::Str static__1a60d2de9_matchEnd(jule::Uintptr _22824_m) {
	_1c38d3b83_StrBuilder _22917_obj = static__1c38d3ea2_New(30LL);;
	_1c38dc94a_WriteStr(&_22917_obj, jule::Str("_match_end_", 11));
	_1c38dc94a_WriteStr(&_22917_obj, _1c4cac4ab_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22824_m)), 15LL));
	return _1c38dd242_Str(&_22917_obj);;
}



inline jule::Str static__1a60d31b3_caseBegin(jule::Uintptr _23625_c) {
	_1c38d3b83_StrBuilder _23717_obj = static__1c38d3ea2_New(30LL);;
	_1c38dc94a_WriteStr(&_23717_obj, jule::Str("_case_begin_", 12));
	_1c38dc94a_WriteStr(&_23717_obj, _1c4cac4ab_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_23625_c)), 15LL));
	return _1c38dd242_Str(&_23717_obj);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a60cea0b_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a619035d_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6190935_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6190d0e_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a61a1a01_Str(_1a61a166b_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1a61a1d42_Equal(jule::Ptr<_1a61a166b_customType> _self_, jule::Ptr<_1aabec1e5_TypeKind> _4021_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a61a166b_customType _Src) {
	_Stream << _1a61a1a01_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1a61a2271_typeCoder> static__1a61a27b0_new(jule::Ptr<_1a6191e53_ObjectCoder>* _6424_oc) {
	jule::Ptr<_1a61a2271_typeCoder> _6517_tc = jule::new_ptr<_1a61a2271_typeCoder>(_1a61a2271_typeCoder{._field_oc=(*(_6424_oc)), });;
	_6517_tc.get()._field_rc=static__1a6476930_new(&(_6517_tc));
	return _6517_tc;;
}



inline jule::Str _1a61a2b01_toType(_1a61a2271_typeCoder* _self_, jule::Str _7129_id) {
	if ((!_7129_id.equal("uintptr", 7))) {
		_7129_id=_1c4caebd9_RealKindOf(_7129_id);
	};
	_1c38d3b83_StrBuilder _7517_obj = static__1c38d3ea2_New(32LL);;
	_1c38dc94a_WriteStr(&_7517_obj, jule::Str("jule::", 6));
	if (((97LL <= _7129_id[0LL]) && (_7129_id[0LL] <= 122LLU))) {
		_1c38dcc03_WriteByte(&_7517_obj, static_cast<jule::U8>((_7129_id[0LL] - 32LLU)));
	} else {
		_1c38dcc03_WriteByte(&_7517_obj, _7129_id[0LL]);
	};
	_1c38dc94a_WriteStr(&_7517_obj, _7129_id.slice(1LL));
	return _1c38dd242_Str(&_7517_obj);;
}



inline jule::Str _1a61a2e42_prim(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aac05066_Prim> _8723_p) {
	return _1a61a2b01_toType(_self_, _1aac053a7_Str(_8723_p.ptr()));;
}



inline jule::Str _1a646e76e_tuple(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aac0a159_Tuple> _9228_t) {
	_1c38d3b83_StrBuilder _9317_obj = static__1c38d3ea2_New(32LL);;
	_1c38dc94a_WriteStr(&_9317_obj, jule::Str("std::tuple<", 11));
	{
		auto expr = &(_9228_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9823d73:;
		if (it != expr_end) {
			jule::I32 _9514_i = it - expr->begin();
			jule::Ptr<_1aabec1e5_TypeKind> _9521_tk = *it;
			{
				_1c38dc94a_WriteStr(&_9317_obj, _1a6473c29_kind(_self_, _9521_tk));
				if (((_9228_t.get()._field_Types.len() - _9514_i) > 1LL)) {
					_1c38dcc03_WriteByte(&_9317_obj, ',');
				};
			}
			_iter_next_1a9823d73:;
			++it;
			_9514_i++;
			goto _iter_begin_1a9823d73;
		}
		_iter_end_1a9823d73:;
	};
	_1c38dcc03_WriteByte(&_9317_obj, '>');
	return _1c38dd242_Str(&_9317_obj);;
}



inline jule::Str _1a646e9d3_asSptr(_1a61a2271_typeCoder* _self_, jule::Str _10625_elem) {
	_1c38d3b83_StrBuilder _10717_obj = static__1c38d3ea2_New(static_cast<jule::I32>((11LL + _10625_elem.len())));;
	_1c38dc94a_WriteStr(&_10717_obj, jule::Str("jule::Ptr<", 10));
	_1c38dc94a_WriteStr(&_10717_obj, _10625_elem);
	_1c38dcc03_WriteByte(&_10717_obj, '>');
	return _1c38dd242_Str(&_10717_obj);;
}



inline jule::Str _1a646ed24_sptr(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aac08a92_Sptr> _11527_sptr) {
	return _1a646e9d3_asSptr(_self_, _1a6473c29_kind(_self_, _11527_sptr.get()._field_Elem));;
}



inline jule::Str _1a6470165_ptr(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aac0c359_Ptr> _12026_p) {
	;
	if (_1aac0cd93_IsUnsafe(_12026_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	return (_1a6473c29_kind(_self_, _12026_p.get()._field_Elem) + jule::Str("*", 1));;
}



inline jule::Str _1a64704a6_enumDecl(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aaac8b3d_Enum> _12931_e) {
	return _1a6473c29_kind(_self_, _12931_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1a64707e7_typeEnumDecl(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aaaca348_TypeEnum> _13435_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1a6470b38_asSlice(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aabec1e5_TypeKind> _13830_elem) {
	_1c38d3b83_StrBuilder _13917_obj = static__1c38d3ea2_New(45LL);;
	_1c38dc94a_WriteStr(&_13917_obj, jule::Str("jule::Slice<", 12));
	_1c38dc94a_WriteStr(&_13917_obj, _1a6473c29_kind(_self_, _13830_elem));
	_1c38dcc03_WriteByte(&_13917_obj, '>');
	return _1c38dd242_Str(&_13917_obj);;
}



inline jule::Str _1a6470e79_slice(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aac09565_Slc> _14728_s) {
	return _1a6470b38_asSlice(_self_, _14728_s.get()._field_Elem);;
}



inline jule::Str _1a64712ba_mapType(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aac0ac09_Map> _15230_m) {
	_1c38d3b83_StrBuilder _15317_obj = static__1c38d3ea2_New(43LL);;
	_1c38dc94a_WriteStr(&_15317_obj, jule::Str("jule::Map<", 10));
	_1c38dc94a_WriteStr(&_15317_obj, _1a6473c29_kind(_self_, _15230_m.get()._field_Key));
	_1c38dcc03_WriteByte(&_15317_obj, ',');
	_1c38dc94a_WriteStr(&_15317_obj, _1a6473c29_kind(_self_, _15230_m.get()._field_Val));
	_1c38dcc03_WriteByte(&_15317_obj, '>');
	return _1c38dd242_Str(&_15317_obj);;
}



inline jule::Str _1a647160b_traitIdent(_1a61a2271_typeCoder* _self_, jule::Str _16229_ident) {
	_1c38d3b83_StrBuilder _16317_obj = static__1c38d3ea2_New(static_cast<jule::I32>((13LL + _16229_ident.len())));;
	_1c38dc94a_WriteStr(&_16317_obj, jule::Str("jule::Trait<", 12));
	_1c38dc94a_WriteStr(&_16317_obj, _16229_ident);
	_1c38dcc03_WriteByte(&_16317_obj, '>');
	return _1c38dd242_Str(&_16317_obj);;
}



inline jule::Str _1a647194c_traitDecl(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aaac6443_Trait> _17128_t) {
	return _1a647160b_traitIdent(_self_, static__1a60d1139_traitDecl(_17128_t));;
}



inline jule::Str _1a6471c8d_structure(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aaa972b0_Struct> _17628_s) {
	_1c38d3b83_StrBuilder _17717_rep = static__1c38d3ea2_New(32LL);;
	if ((_17628_s.get()._field_Binded && (!(_1a647ab21_hasDirective(&(_17628_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		_1c38dc94a_WriteStr(&_17717_rep, jule::Str("struct ", 7));
	};
	_1c38dc94a_WriteStr(&_17717_rep, static__1a60d16bc_structure(&(_17628_s)));
	return _1c38dd242_Str(&_17717_rep);;
}



inline jule::Str _1a64720ce_structureIns(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aaa9a390_StructIns> _18635_s) {
	if (_18635_s.get()._field_Decl.get()._field_Binded) {
		_1c38d3b83_StrBuilder _18821_ident = static__1c38d3ea2_New(32LL);;
		_1c38dc94a_WriteStr(&_18821_ident, static__1a60d1986_structureIns(&(_18635_s)));
		if ((_18635_s.get()._field_Generics.len() > 0LL)) {
			_1c38dcc03_WriteByte(&_18821_ident, '<');
			{
				auto expr = &(_18635_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a98332b1:;
				if (it != expr_end) {
					jule::I32 _19222_i = it - expr->begin();
					jule::Ptr<_1aabea80e_InsGeneric> _19229_g = *it;
					{
						_1c38dc94a_WriteStr(&_18821_ident, _1a6473c29_kind(_self_, _19229_g.get()._field_Kind));
						if (((_18635_s.get()._field_Generics.len() - _19222_i) > 1LL)) {
							_1c38dcc03_WriteByte(&_18821_ident, ',');
						};
					}
					_iter_next_1a98332b1:;
					++it;
					_19222_i++;
					goto _iter_begin_1a98332b1;
				}
				_iter_end_1a98332b1:;
			};
			_1c38dcc03_WriteByte(&_18821_ident, '>');
		};
		jule::Ptr<_1aaa42c61_Directive> _20017_d = _1a647a758_findDirective(&(_18635_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_20017_d != nullptr)) {
			jule::Str _20225_buf = _1c38dd242_Str(&_18821_ident);;
			_1c38dd440_Clear(&_18821_ident);
			_1c38dc94a_WriteStr(&_18821_ident, _1a619e757_concatAllParts(_20017_d.get()._field_Args));
			_1c38dc94a_WriteStr(&_18821_ident, jule::Str("::", 2));
			_1c38dc94a_WriteStr(&_18821_ident, _20225_buf);
		};
		return _1c38dd242_Str(&_18821_ident);;
	};
	return static__1a60d1986_structureIns(&(_18635_s));;
}



inline jule::Str _1a6472420_array(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aac0b886_Arr> _21428_a) {
	_1c38d3b83_StrBuilder _21517_obj = static__1c38d3ea2_New(45LL);;
	_1c38dc94a_WriteStr(&_21517_obj, jule::Str("jule::Array<", 12));
	_1c38dc94a_WriteStr(&_21517_obj, _1a6473c29_kind(_self_, _21428_a.get()._field_Elem));
	_1c38dcc03_WriteByte(&_21517_obj, ',');
	_1c38dc94a_WriteStr(&_21517_obj, _1c4cacb3d_Itoa(_21428_a.get()._field_N));
	_1c38dcc03_WriteByte(&_21517_obj, '>');
	return _1c38dd242_Str(&_21517_obj);;
}



inline jule::Str _1a6472aa2_paramIns(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aaab5102_ParamIns>* _24132_p) {
	_1c38d3b83_StrBuilder _24217_obj = static__1c38d3ea2_New(32LL);;
	if ((*(_24132_p)).get()._field_Decl.get()._field_Variadic) {
		_1c38dc94a_WriteStr(&_24217_obj, jule::Str("jule::Slice<", 12));
		_1c38dc94a_WriteStr(&_24217_obj, _1a6473c29_kind(_self_, (*(_24132_p)).get()._field_Kind));
		_1c38dcc03_WriteByte(&_24217_obj, '>');
	} else {
		_1c38dc94a_WriteStr(&_24217_obj, _1a6473c29_kind(_self_, (*(_24132_p)).get()._field_Kind));
	};
	if ((*(_24132_p)).get()._field_Decl.get()._field_Reference) {
		_1c38dcc03_WriteByte(&_24217_obj, '*');
	};
	return _1c38dd242_Str(&_24217_obj);;
}



inline void _1a6473256_funcInsResult(_1a61a2271_typeCoder* _self_, _1c38d3b83_StrBuilder* _27137_s, jule::Ptr<_1aaab609d_FnIns>* _27157_f) {
	if (_1aaab361c_IsVoid((*(_27157_f)).get()._field_Decl.ptr())) {
		if ((*(_27157_f)).get()._field_Decl.get()._field_Exceptional) {
			_1c38dc94a_WriteStr(_27137_s, jule::Str("jule::VoidExceptional", 21));
		} else {
			_1c38dc94a_WriteStr(_27137_s, jule::Str("void", 4));
		};
		return;;
	};
	if ((*(_27157_f)).get()._field_Decl.get()._field_Exceptional) {
		_1c38dc94a_WriteStr(_27137_s, jule::Str("jule::Exceptional<", 18));
		_1a64789dc_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*(_27157_f)).get()._field_Result));
		_1c38dcc03_WriteByte(_27137_s, '>');
		return;;
	};
	_1a64789dc_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*(_27157_f)).get()._field_Result));
}



inline jule::Str _1a6473597_anonFunc(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aaab609d_FnIns> _28931_f) {
	if (((_28931_f.get()._field_Result != nullptr) && (_1aac01914_Tup(_28931_f.get()._field_Result.ptr()) != nullptr))) {
		_1a619363b_pushResultIns((*(_self_))._field_oc, &(_28931_f));
	};
	_1c38d3b83_StrBuilder _29317_decl = static__1c38d3ea2_New(20LL);;
	_1a6473256_funcInsResult(_self_, &(_29317_decl), &(_28931_f));
	_1c38dcc03_WriteByte(&_29317_decl, '(');
	if ((_28931_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_28931_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a5cea2c6:;
			if (it != expr_end) {
				jule::I32 _29718_i = it - expr->begin();
				jule::Ptr<_1aaab5102_ParamIns> _29725_param = *it;
				{
					if (_1aaaabe84_IsSelf(_29725_param.get()._field_Decl.ptr())) {
						goto _iter_next_1a5cea2c6;
					};
					_1c38dc94a_WriteStr(&_29317_decl, _1a6472aa2_paramIns(_self_, &(_29725_param)));
					if (((_28931_f.get()._field_Params.len() - _29718_i) > 1LL)) {
						_1c38dcc03_WriteByte(&_29317_decl, ',');
					};
				}
				_iter_next_1a5cea2c6:;
				++it;
				_29718_i++;
				goto _iter_begin_1a5cea2c6;
			}
			_iter_end_1a5cea2c6:;
		};
	} else {
		_1c38dc94a_WriteStr(&_29317_decl, jule::Str("void", 4));
	};
	_1c38dcc03_WriteByte(&_29317_decl, ')');
	return _1c38dd242_Str(&_29317_decl);;
}



inline jule::Str _1a64738d8_func(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aaab609d_FnIns> _31427_f) {
	_1c38d3b83_StrBuilder _31517_obj = static__1c38d3ea2_New(42LL);;
	_1c38dc94a_WriteStr(&_31517_obj, jule::Str("jule::Fn<", 9));
	_1c38dc94a_WriteStr(&_31517_obj, _1a6473597_anonFunc(_self_, _31427_f));
	_1c38dcc03_WriteByte(&_31517_obj, '>');
	return _1c38dd242_Str(&_31517_obj);;
}



inline jule::Str _1a6473c29_kind(_1a61a2271_typeCoder* _self_, jule::Ptr<_1aabec1e5_TypeKind> _32327_k) {
	{
		
		if ((_1aac01161_Struct(_32327_k.ptr()) != nullptr)) {
			_case_begin_1a5cee8c4:;
			{
				return _1a64720ce_structureIns(_self_, _1aac01161_Struct(_32327_k.ptr()));;
			}
		}
		else if (_1aabed04d_Binded(_32327_k.ptr())) {
			_case_begin_1a5cee94b:;
			{
				return _32327_k.get()._field_BindIdent;;
			}
		}
		else if ((_1aabeeadd_Prim(_32327_k.ptr()) != nullptr)) {
			_case_begin_1a5cee9c3:;
			{
				return _1a61a2e42_prim(_self_, _1aabeeadd_Prim(_32327_k.ptr()));;
			}
		}
		else if ((_1aac01914_Tup(_32327_k.ptr()) != nullptr)) {
			_case_begin_1a5ceea4a:;
			{
				return _1a646e76e_tuple(_self_, _1aac01914_Tup(_32327_k.ptr()));;
			}
		}
		else if ((_1aabeed74_Sptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1a5ceeac2:;
			{
				return _1a646ed24_sptr(_self_, _1aabeed74_Sptr(_32327_k.ptr()));;
			}
		}
		else if ((_1aac0010a_Ptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1a5ceeb49:;
			{
				return _1a6470165_ptr(_self_, _1aac0010a_Ptr(_32327_k.ptr()));;
			}
		}
		else if ((_1aac00391_Enum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1a5ceebc1:;
			{
				return _1a64704a6_enumDecl(_self_, _1aac00391_Enum(_32327_k.ptr()));;
			}
		}
		else if ((_1aac00627_TypeEnum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1a5ceec48:;
			{
				return _1a64707e7_typeEnumDecl(_self_, _1aac00627_TypeEnum(_32327_k.ptr()));;
			}
		}
		else if ((_1aac00b44_Slc(_32327_k.ptr()) != nullptr)) {
			_case_begin_1a5ceecc0:;
			{
				return _1a6470e79_slice(_self_, _1aac00b44_Slc(_32327_k.ptr()));;
			}
		}
		else if ((_1aac0167d_Map(_32327_k.ptr()) != nullptr)) {
			_case_begin_1a5ceed47:;
			{
				return _1a64712ba_mapType(_self_, _1aac0167d_Map(_32327_k.ptr()));;
			}
		}
		else if ((_1aac013e7_Trait(_32327_k.ptr()) != nullptr)) {
			_case_begin_1a5ceedbe:;
			{
				return _1a647194c_traitDecl(_self_, _1aac013e7_Trait(_32327_k.ptr()));;
			}
		}
		else if ((_1aac008ad_Arr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1a5ceee46:;
			{
				return _1a6472420_array(_self_, _1aac008ad_Arr(_32327_k.ptr()));;
			}
		}
		else if ((_1aac00dca_Fn(_32327_k.ptr()) != nullptr)) {
			_case_begin_1a5ceeebd:;
			{
				return _1a64738d8_func(_self_, _1aac00dca_Fn(_32327_k.ptr()));;
			}
		}
		_match_end_1a5cee6e8:;
	};
	{
		auto &_match_expr{ _32327_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1a5d00078:;
			{
				return _32327_k.get()._field_Kind.cast_ptr<_1a61a166b_customType>(27).get()._field_kind;;
			}
		}
		else {
			_case_begin_1a5d06656:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1a5d06601:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1a61a2271_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6476457_resultCoder> static__1a6476930_new(jule::Ptr<_1a61a2271_typeCoder>* _37724_tc) {
	return jule::new_ptr<_1a6476457_resultCoder>(_1a6476457_resultCoder{._field_tc=(*(_37724_tc))});;
}



inline void _1a6476c93_ptr(_1a6476457_resultCoder* _self_, _1c38d3b83_StrBuilder* _38127_s, jule::Ptr<_1aac0c359_Ptr> _38146_p) {
	_1c38dc94a_WriteStr(_38127_s, jule::Str("p", 1));
	_1a6478679_codeMut(_self_, _38127_s, &(_38146_p.get()._field_Elem));
}



inline void _1a6477106_sptr(_1a6476457_resultCoder* _self_, _1c38d3b83_StrBuilder* _38628_s, jule::Ptr<_1aac08a92_Sptr> _38647_p) {
	_1c38dc94a_WriteStr(_38628_s, jule::Str("x", 1));
	_1a6478679_codeMut(_self_, _38628_s, &(_38647_p.get()._field_Elem));
}



inline void _1a6477469_mapType(_1a6476457_resultCoder* _self_, _1c38d3b83_StrBuilder* _39131_s, jule::Ptr<_1aac0ac09_Map> _39150_p) {
	_1c38dc94a_WriteStr(_39131_s, jule::Str("m", 1));
	_1a6478679_codeMut(_self_, _39131_s, &(_39150_p.get()._field_Key));
	_1a6478679_codeMut(_self_, _39131_s, &(_39150_p.get()._field_Val));
}



inline void _1a64777cc_slice(_1a6476457_resultCoder* _self_, _1c38d3b83_StrBuilder* _39729_s, jule::Ptr<_1aac09565_Slc> _39748_slc) {
	_1c38dc94a_WriteStr(_39729_s, jule::Str("s", 1));
	_1a6478679_codeMut(_self_, _39729_s, &(_39748_slc.get()._field_Elem));
}



inline void _1a6477b40_arr(_1a6476457_resultCoder* _self_, _1c38d3b83_StrBuilder* _40227_s, jule::Ptr<_1aac0b886_Arr> _40246_arr) {
	_1c38dc94a_WriteStr(_40227_s, jule::Str("a", 1));
	_1c38dc94a_WriteStr(_40227_s, _1c4cac874_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_40246_arr.get()._field_N)), 16LL));
	_1a6478679_codeMut(_self_, _40227_s, &(_40246_arr.get()._field_Elem));
}



inline void _1a6477ea3_func(_1a6476457_resultCoder* _self_, _1c38d3b83_StrBuilder* _40828_s, jule::Ptr<_1aaab609d_FnIns> _40847_f) {
	_1c38dc94a_WriteStr(_40828_s, jule::Str("f", 1));
	{
		auto expr = &(_40847_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5d0ca36:;
		if (it != expr_end) {
			jule::Ptr<_1aaab5102_ParamIns> _41021_p = *it;
			{
				if (_41021_p.get()._field_Decl.get()._field_Reference) {
					_1c38dc94a_WriteStr(_40828_s, jule::Str("r", 1));
				};
				_1a6478679_codeMut(_self_, _40828_s, &(_41021_p.get()._field_Kind));
			}
			_iter_next_1a5d0ca36:;
			++it;
			goto _iter_begin_1a5d0ca36;
		}
		_iter_end_1a5d0ca36:;
	};
	if ((_40847_f.get()._field_Result != nullptr)) {
		_1a6478679_codeMut(_self_, _40828_s, &(_40847_f.get()._field_Result));
	};
}



inline void _1a6478316_tup(_1a6476457_resultCoder* _self_, _1c38d3b83_StrBuilder* _42127_s, jule::Ptr<_1aac0a159_Tuple> _42146_tup) {
	{
		auto expr = &(_42146_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5d0ea6b:;
		if (it != expr_end) {
			jule::Ptr<_1aabec1e5_TypeKind> _42221_t = *it;
			{
				_1c38dc94a_WriteStr(_42127_s, jule::Str("__jule_tuple_", 13));
				_1a6478679_codeMut(_self_, _42127_s, &(_42221_t));
			}
			_iter_next_1a5d0ea6b:;
			++it;
			goto _iter_begin_1a5d0ea6b;
		}
		_iter_end_1a5d0ea6b:;
	};
}



inline void _1a6478679_codeMut(_1a6476457_resultCoder* _self_, _1c38d3b83_StrBuilder* _42831_s, jule::Ptr<_1aabec1e5_TypeKind>* _42851_t) {
	{
		auto &_match_expr{ (*(_42851_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1a5d10bc1:;
			{
				_1a6476c93_ptr(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1aac0c359_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1a5d10e79:;
			{
				_1a6477106_sptr(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1aac08a92_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1a5d10ee0:;
			{
				_1a6477469_mapType(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1aac0ac09_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1a5d11056:;
			{
				_1a64777cc_slice(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1aac09565_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1a5d110cd:;
			{
				_1a6477b40_arr(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1aac0b886_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1a5d11562:;
			{
				_1a6477ea3_func(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1aaab609d_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1a5d115d9:;
			{
				jule::Ptr<_1aaac8b3d_Enum> _44317_te = (*(_42851_t)).get()._field_Kind.cast_ptr<_1aaac8b3d_Enum>(3);;
				_1c38dc94a_WriteStr(_42831_s, static__1a60d03ad_toOut(&(_44317_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44317_te))));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1a5d11661:;
			{
				jule::Ptr<_1aaaca348_TypeEnum> _44617_te = (*(_42851_t)).get()._field_Kind.cast_ptr<_1aaaca348_TypeEnum>(4);;
				_1c38dc94a_WriteStr(_42831_s, static__1a60d03ad_toOut(&(_44617_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44617_te))));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1a5d116d8:;
			{
				jule::Ptr<_1aaa9a390_StructIns> _44921_si = (*(_42851_t)).get()._field_Kind.cast_ptr<_1aaa9a390_StructIns>(0);;
				_1c38dc94a_WriteStr(_42831_s, static__1a60d1986_structureIns(&(_44921_si)));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1a5d11760:;
			{
				jule::Ptr<_1aaac6443_Trait> _45221_trt = (*(_42851_t)).get()._field_Kind.cast_ptr<_1aaac6443_Trait>(2);;
				_1c38dc94a_WriteStr(_42831_s, static__1a60d1139_traitDecl(_45221_trt));
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1a5d117d7:;
			{
				_1c38dc94a_WriteStr(_42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1aac05066_Prim>(20).get()._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1a5d1185e:;
			{
				_1a6478316_tup(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1aac0a159_Tuple>(23));
			}
		}
		else {
			_case_begin_1a5d10e13:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:459:13"));;
			}
		}
		_match_end_1a5d10dad:;
	};
}



inline void _1a64789dc_codeMut1(_1a6476457_resultCoder* _self_, _1c38d3b83_StrBuilder* _46332_s, jule::Ptr<_1aabec1e5_TypeKind>* _46352_t) {
	jule::Ptr<_1aac0a159_Tuple> _46417_tup = _1aac01914_Tup((*(_46352_t)).ptr());;
	if ((_46417_tup != nullptr)) {
		_1a6478316_tup(_self_, _46332_s, _46417_tup);
	} else {
		_1c38dc94a_WriteStr(_46332_s, _1a6473c29_kind((*(_self_))._field_tc.ptr(), (*(_46352_t))));
	};
}



inline jule::Str _1a6478cea_code(_1a6476457_resultCoder* _self_, jule::Ptr<_1aabec1e5_TypeKind>* _47228_t) {
	_1c38d3b83_StrBuilder _47317_s = static__1c38d3ea2_New(20LL);;
	_1a6478679_codeMut(_self_, &(_47317_s), _47228_t);
	return _1c38dd242_Str(&_47317_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1a6476457_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1a5d1bcdc_Name(_1a5d1b946_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a5d1be30_What(_1a5d1b946_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a5d1c073_Reset(_1a5d1b946_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a5d1c1b6_Short(_1a5d1b946_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5d1b946_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a5d1ee99_Name(_1a5d20362_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a5d200dc_What(_1a5d20362_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a5d2064d_Reset(_1a5d20362_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a5d20791_Short(_1a5d20362_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5d20362_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a5d23695_Name(_1a5d23a5d_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a5d237d8_What(_1a5d23a5d_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a5d23d49_Reset(_1a5d23a5d_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a5d23e8c_Short(_1a5d23a5d_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5d23a5d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a5d26dd5_Name(_1a5d2729d_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a5d27028_What(_1a5d2729d_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a5d27589_Reset(_1a5d2729d_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a5d276cc_Short(_1a5d2729d_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5d2729d_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1a5d2a5d1_Name(_1a5d2a999_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1a5d2a724_What(_1a5d2a999_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1a5d2ac85_Reset(_1a5d2a999_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1a5d2adc8_Short(_1a5d2a999_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1a5d2a999_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a64e331a_FlagSet> static__1a64e3606_New(void) {
	return jule::new_ptr<_1a64e331a_FlagSet>(_1a64e331a_FlagSet{._field_flags=jule::Slice<jule::Trait<_1a64e1769_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1a64e1769_CommonFlag> _1a64e3a79_FindFlag(_1a64e331a_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5d35234:;
		if (it != expr_end) {
			jule::Trait<_1a64e1769_CommonFlag> _7221_flag = *it;
			{
				if ((_1a64e1769_CommonFlag_mptr_data[(_7221_flag).type_offset]._1a64b01c7_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1a5d35234:;
			++it;
			goto _iter_begin_1a5d35234;
		}
		_iter_end_1a5d35234:;
	};
	return nullptr;;
}



inline jule::Trait<_1a64e1769_CommonFlag> _1a64e3dba_FindFlagShort(_1a64e331a_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5d36a3d:;
		if (it != expr_end) {
			jule::Trait<_1a64e1769_CommonFlag> _8221_flag = *it;
			{
				if ((_1a64e1769_CommonFlag_mptr_data[(_8221_flag).type_offset]._1a64b0370_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1a5d36a3d:;
			++it;
			goto _iter_begin_1a5d36a3d;
		}
		_iter_end_1a5d36a3d:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1a64e4492_Parse(_1a64e331a_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1a64e5c9b_argParser _11617_ap = _1a64e5c9b_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1a64e7297_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline jule::Ptr<_1a5d2a999_Flag> _1a5d94d21_addFlagCommon(_1a64e331a_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1a5d965d6:;
			{
				goto _match_end_1a5d96570;
			}
		}
		_match_end_1a5d96570:;
	};
	if ((_1a64e3a79_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a64e3dba_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1a5d2a999_Flag> _14817_flag = jule::new_ptr<_1a5d2a999_Flag>(_1a5d2a999_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1a64e1769_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1a64e1769_CommonFlag>(_14817_flag, 4)); };
	return _14817_flag;;
}

inline jule::Ptr<_1a5d2729d_Flag> _1a5d9cdd4_addFlagCommon(_1a64e331a_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1a5d9e655:;
			{
				goto _match_end_1a5d9e5de;
			}
		}
		_match_end_1a5d9e5de:;
	};
	if ((_1a64e3a79_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1a64e3dba_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1a5d2729d_Flag> _14817_flag = jule::new_ptr<_1a5d2729d_Flag>(_1a5d2729d_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1a64e1769_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1a64e1769_CommonFlag>(_14817_flag, 3)); };
	return _14817_flag;;
}



inline void _1a5d92ca8_AddVar(_1a64e331a_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1a5d2a999_Flag> _17617_flag = _1a5d94d21_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1a5d9ad9e_AddVar(_1a64e331a_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1a5d2729d_Flag> _17617_flag = _1a5d9cdd4_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1a64e331a_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1a5d3d726_parseInteger(_1a64e5c9b_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1a5d411c9:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1c38bdc8e_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1a5d4174b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1c38bdc8e_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1a5d4152b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1c38bdc8e_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1a5d41592:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1a5d40d99:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a5d40d33:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a5d40c67:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1a5d45ec0_parseInteger(_1a64e5c9b_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1a5d4892e:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1c38bdc8e_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1a5d48ea1:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1c38bdc8e_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1a5d48c81:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1c38bdc8e_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1a5d48ce7:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1a5d485ee:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1a5d48588:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1a5d484bc:;
	};
	return __jule_func_result;;
}



inline jule::Str _1a64e65b5_getData(_1a64e5c9b_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1a64e683a_processFlag(_1a64e5c9b_argParser* _self_, jule::Trait<_1a64e1769_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1a5d3ab63:;
			{
				jule::Ptr<_1a5d2729d_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1a5d2729d_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1a5d3ab0d:;
	};
	jule::Str _22513_data = _1a64e65b5_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a64e1769_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a64b01c7_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1a5d3c824:;
			{
				jule::Ptr<_1a5d1b946_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1a5d1b946_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1a5d3d726_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _23370_s, jule::I32 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1c4c9b2be_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a64e1769_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a64b01c7_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1a5d3c88a:;
			{
				jule::Ptr<_1a5d20362_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1a5d20362_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1a5d45ec0_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _24171_s, jule::I32 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1c4c9ad18_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a64e1769_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a64b01c7_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1a5d3c901:;
			{
				jule::Ptr<_1a5d23a5d_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1a5d23a5d_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1c4ca2c21_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1a64e1769_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1a64b01c7_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1a5d3c967:;
			{
				(*((*(_21735_flag)).cast_ptr<_1a5d2a999_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1a5d3bec7:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a64e6ae3_singleDash(_1a64e5c9b_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5d5057e:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1a64e1769_CommonFlag> _26321_flag = _1a64e3dba_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1a64e683a_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1a5d5057e:;
			++it;
			goto _iter_begin_1a5d5057e;
		}
		_iter_end_1a5d5057e:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a64e6d9b_doubleDash(_1a64e5c9b_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1a64e1769_CommonFlag> _27617_flag = _1a64e3a79_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1a64e683a_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a64e7099_tryArg(_1a64e5c9b_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1a64e6d9b_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1a64e6ae3_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_28413_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1a64e7297_parse(_1a64e5c9b_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1a64e7099_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1a5d5660c:;
	}
	_iter_end_1a5d5660c:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1a64e5c9b_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1a6191e53_ObjectCoder> static__1a619234e_New(jule::Ptr<_1ab76097d_IR>* _9524_ir, _1a619035d_SerializationInfo _9533_info) {
	jule::Ptr<_1a6191e53_ObjectCoder> _9617_oc = jule::new_ptr<_1a6191e53_ObjectCoder>(_1a6191e53_ObjectCoder{._field_ir=(*(_9524_ir)), ._field_info=_9533_info, });;
	_9617_oc.get()._field_ec=static__1a60b9a90_new(&(_9617_oc));
	_9617_oc.get()._field_sc=static__1a60b0ec6_new(&(_9617_oc));
	_9617_oc.get()._field_tc=static__1a61a27b0_new(&(_9617_oc));
	_9617_oc.get()._field_dc=static__1a60ca672_new(_9617_oc);
	return _9617_oc;;
}



inline void _1a6192607_write(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Str _10725_s) {
	_1c38dc94a_WriteStr(&_self_.get()._field_Obj, _10725_s);
}



inline void _1a6192805_addIndent(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = _self_.get()._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _1a6192a03_doneIndent(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1a6192c01_indent(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_1c38dc692_Write(&_self_.get()._field_Obj, _self_.get()._field_indentBuffer);
}



inline jule::I32 _1a6193042_findAnyType(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aabec1e5_TypeKind>* _12636_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95b17c0:;
		if (it != expr_end) {
			jule::I32 _12714_i = it - expr->begin();
			jule::Ptr<_1aabec1e5_TypeKind> _12721_at = *it;
			{
				if (_1aabec8ee_Equal(_12721_at, (*(_12636_t)))) {
					return _12714_i;;
				};
			}
			_iter_next_1a95b17c0:;
			++it;
			_12714_i++;
			goto _iter_begin_1a95b17c0;
		}
		_iter_end_1a95b17c0:;
	};
	return -1LL;;
}



inline jule::I32 _1a6193383_pushAnyType(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aabec1e5_TypeKind> _13535_t) {
	if ((_1aac00391_Enum(_13535_t.ptr()) != nullptr)) {
		_13535_t=_1aac00391_Enum(_13535_t.ptr()).get()._field_Kind.get()._field_Kind;
	};
	jule::I32 _13917_i = _1a6193042_findAnyType(_self_, &(_13535_t));;
	if ((_13917_i != -1LL)) {
		return _13917_i;;
	};
	_13917_i=static_cast<jule::I32>(_self_.get()._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> &__jule_push_dest = _self_.get()._field_anyTypeMap; __jule_push_dest.push(_13535_t); };
	jule::Str _14513_si = _1c4cacb3d_Itoa(_13917_i);;
	if ((_1aabeed74_Sptr(_13535_t.ptr()) != nullptr)) {
		jule::Str _14717_elem_kind = _1a6473c29_kind(_self_.get()._field_tc.ptr(), _1aabeed74_Sptr(_13535_t.ptr()).get()._field_Elem);;
		jule::Str _14817_kind = _1a646e9d3_asSptr(_self_.get()._field_tc.ptr(), _14717_elem_kind);;
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("void __jule_any_type", 20));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14717_elem_kind);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str(">().dealloc(); }\n", 17));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("struct jule::Any::Type ", 23));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("__jule_any_type", 15));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("{.dealloc=__jule_any_type", 25));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("jule::Bool __jule_any_type", 26));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("_compare(const jule::Any &any, const ", 37));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14817_kind);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str(" &other) { return any.type == &__jule_any_type", 46));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17417_comparable = _1aabed801_Comparable(_13535_t.ptr());;
		jule::Str _17517_kind = _1a6473c29_kind(_self_.get()._field_tc.ptr(), _13535_t);;
		if (_17517_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1aabec5ad_Str(_13535_t.ptr()));
		};
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("void __jule_any_type", 20));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _17517_kind);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str(">().dealloc(); }\n", 17));
		if (_17417_comparable) {
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("jule::Bool __jule_any_type", 26));
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _17517_kind);
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("*>(alloc) == *reinterpret_cast<", 31));
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _17517_kind);
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("*>(other); }\n", 13));
		};
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("jule::Str __jule_any_type", 25));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1aac0010a_Ptr(_13535_t.ptr()) == nullptr)) {
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("const ", 6));
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _17517_kind);
		} else {
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _17517_kind);
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("* const", 7));
		};
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("*>(alloc)); }\n", 14));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("struct jule::Any::Type ", 23));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("__jule_any_type", 15));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("{.dealloc=__jule_any_type", 25));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("_dealloc, ", 10));
		if (_17417_comparable) {
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str(".eq=__jule_any_type", 19));
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("_eq, ", 5));
		};
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str(".to_str=__jule_any_type", 23));
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("_to_str};\n", 10));
		if (_17417_comparable) {
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("jule::Bool __jule_any_type", 26));
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("_compare(const jule::Any &any, const ", 37));
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _17517_kind);
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str(" &other) { return any.type == &__jule_any_type", 46));
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str(" && __jule_any_type", 19));
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _14513_si);
			_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _13917_i;;
}



inline void _1a619363b_pushResultIns(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaab609d_FnIns>* _24338_f) {
	jule::Str _24413_s = _1a6478cea_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_24338_f)).get()._field_Result));;
	jule::Bool _24517_ok = false;;
	_self_.get()._field_resultMap.lookup(_24413_s, nullptr, &(_24517_ok));
	if (_24517_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_24413_s]=false;
	_1c38dc94a_WriteStr(&_self_.get()._field_resultDecls, jule::Str("struct ", 7));
	_1c38dc94a_WriteStr(&_self_.get()._field_resultDecls, _24413_s);
	_1c38dc94a_WriteStr(&_self_.get()._field_resultDecls, jule::Str(" {\n", 3));
	{
		auto expr = &(_1aac01914_Tup((*(_24338_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95ca278:;
		if (it != expr_end) {
			jule::I32 _25314_i = it - expr->begin();
			jule::Ptr<_1aabec1e5_TypeKind> _25321_t = *it;
			{
				_1c38dcc03_WriteByte(&_self_.get()._field_resultDecls, 9LLU);
				_1c38dc94a_WriteStr(&_self_.get()._field_resultDecls, _1a6473c29_kind(_self_.get()._field_tc.ptr(), _25321_t));
				_1c38dcc03_WriteByte(&_self_.get()._field_resultDecls, ' ');
				_1c38dc94a_WriteStr(&_self_.get()._field_resultDecls, jule::Str("__jule_result_arg", 17));
				_1c38dc94a_WriteStr(&_self_.get()._field_resultDecls, _1c4cacb3d_Itoa(_25314_i));
				_1c38dc94a_WriteStr(&_self_.get()._field_resultDecls, jule::Str(";\n", 2));
			}
			_iter_next_1a95ca278:;
			++it;
			_25314_i++;
			goto _iter_begin_1a95ca278;
		}
		_iter_end_1a95ca278:;
	};
	_1c38dc94a_WriteStr(&_self_.get()._field_resultDecls, jule::Str("};\n", 3));
}



inline void _1a61938e4_pushResult(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaab3199_Fn>* _26435_f) {
	if ((_1aaab361c_IsVoid((*(_26435_f)).ptr()) || ((*(_26435_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _26817_n = (*(_26435_f)).get()._field_Instances.len();;
	if (((*(_26435_f)).get()._field_Generics.len() == 0LL)) {
		_26817_n=1LL;
	};
	{
		auto expr = (*(_26435_f)).get()._field_Instances.slice(0LL, _26817_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a95ce469:;
		if (it != expr_end) {
			jule::Ptr<_1aaab609d_FnIns> _27221_ins = *it;
			{
				_1a619363b_pushResultIns(_self_, &(_27221_ins));
			}
			_iter_next_1a95ce469:;
			++it;
			goto _iter_begin_1a95ce469;
		}
		_iter_end_1a95ce469:;
	};
}



inline jule::I32 _1a6193ce0_findTypeOffsetS(_1a6191e53_ObjectCoder* _self_, jule::Ptr<_1aaac6443_Trait> _27730_t, jule::Ptr<_1aaa9a390_StructIns> _27745_s) {
	if ((_27730_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95d0943:;
		if (it != expr_end) {
			jule::Ptr<_1a6190935_traitHash> *_28116_hash = it;
			{
				if ((((*(_28116_hash)).get()._field_t == _27730_t) && ((*(_28116_hash)).get()._field_s == _27745_s))) {
					return (*(_28116_hash)).get()._field_i;;
				};
			}
			_iter_next_1a95d0943:;
			++it;
			goto _iter_begin_1a95d0943;
		}
		_iter_end_1a95d0943:;
	};
	return -1LL;;
}



inline jule::I32 _1a61941db_findTypeOffset(_1a6191e53_ObjectCoder* _self_, jule::Ptr<_1aaac6443_Trait> _28929_t, jule::Ptr<_1aabec1e5_TypeKind> _28944_k) {
	if ((_28929_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1aaa9a390_StructIns> _29317_s = nullptr;;
	if ((_1aabeed74_Sptr(_28944_k.ptr()) != nullptr)) {
		_28944_k=_1aabeed74_Sptr(_28944_k.ptr()).get()._field_Elem;
	};
	_29317_s=_1aac01161_Struct(_28944_k.ptr());
	if ((_29317_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I32>(_1a6193ce0_findTypeOffsetS(_self_, _28929_t, _29317_s));;
}



inline void _1a619454e_pushAndWriteMaskMapper(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaac6443_Trait> _30446_t1, jule::Ptr<_1aaac6443_Trait> _30462_t2) {
	_1c38d3b83_StrBuilder _30517_ident = static__1c38d3ea2_New(32LL);;
	_1c38dc94a_WriteStr(&_30517_ident, jule::Str("__jule_trait_offset_mapper_", 27));
	_1c38dc94a_WriteStr(&_30517_ident, _1c4cac4ab_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30462_t2))), 15LL));
	_1c38dc94a_WriteStr(&_30517_ident, jule::Str("_to_", 4));
	_1c38dc94a_WriteStr(&_30517_ident, _1c4cac4ab_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30446_t1))), 15LL));
	_1c38dc692_Write(&_self_.get()._field_Obj, _1c38ddbe3_Buf(&_30517_ident));
	{
		auto expr = &(_self_.get()._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95d5618:;
		if (it != expr_end) {
			_1a6190d0e_traitCast _31316_m = *it;
			{
				if (((_31316_m._field_t1 == _30446_t1) && (_31316_m._field_t2 == _30462_t2))) {
					return;;
				};
			}
			_iter_next_1a95d5618:;
			++it;
			goto _iter_begin_1a95d5618;
		}
		_iter_end_1a95d5618:;
	};
	{ jule::Slice<_1a6190d0e_traitCast> &__jule_push_dest = _self_.get()._field_traitCastMap; __jule_push_dest.push(_1a6190d0e_traitCast{._field_t1=_30446_t1, ._field_t2=_30462_t2}); };
	;
	_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("jule::Int", 9));
	_1c38dcc03_WriteByte(&_self_.get()._field_anyObj, ' ');
	_1c38dc692_Write(&_self_.get()._field_anyObj, _1c38ddbe3_Buf(&_30517_ident));
	_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &(_30446_t1.get()._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95d87c5:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> _33221_s1 = *it;
			{
				{
					auto expr = &(_30462_t2.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a95d9001:;
					if (it != expr_end) {
						jule::Ptr<_1aaa972b0_Struct> _33320_s2 = *it;
						{
							if ((_33221_s1 == _33320_s2)) {
								{
									auto expr = &(_33221_s1.get()._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a95d9c49:;
									if (it != expr_end) {
										jule::Ptr<_1aaa9a390_StructIns> _33533_s1i = *it;
										{
											jule::I32 _33629_i1 = _1a6193ce0_findTypeOffsetS(_self_.ptr(), _30446_t1, _33533_s1i);;
											jule::I32 _33729_i2 = _1a6193ce0_findTypeOffsetS(_self_.ptr(), _30462_t2, _33533_s1i);;
											_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("if (offset == ", 14));
											_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _1c4cacb3d_Itoa(_33729_i2));
											_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str(") return ", 9));
											_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _1c4cacb3d_Itoa(_33629_i1));
											_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("; ", 2));
										}
										_iter_next_1a95d9c49:;
										++it;
										goto _iter_begin_1a95d9c49;
									}
									_iter_end_1a95d9c49:;
								};
							};
						}
						_iter_next_1a95d9001:;
						++it;
						goto _iter_begin_1a95d9001;
					}
					_iter_end_1a95d9001:;
				};
			}
			_iter_next_1a95d87c5:;
			++it;
			goto _iter_begin_1a95d87c5;
		}
		_iter_end_1a95d87c5:;
	};
	_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str(" return ", 8));
	_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, _1c4cacb3d_Itoa(0LL));
	_1c38dc94a_WriteStr(&_self_.get()._field_anyObj, jule::Str("; }\n", 4));
}



inline void _1a6194807_locInfo(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1c3e3a5e6_Token>* _35328_t) {
	jule::Str *_35414_loc = &((*(_35328_t)).get()._field_File.get()._field_Path);;
	if (_205b16b42_Production) {
		{
			
			if (_1c38bdc8e_HasPrefix((*(_35414_loc)), _1c3a94bbd_PathStdlib)) {
				_case_begin_1a95de0b1:;
				{
					_1a60c80ba_cstrBytes(&(_self_.get()._field_Obj), (*(_35414_loc)).slice((_1c38e1d4a_Dir(_1c3a94bbd_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1c38bdc8e_HasPrefix((*(_35414_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1a95ddc81:;
				{
					_1a60c80ba_cstrBytes(&(_self_.get()._field_Obj), (*(_35414_loc)).slice((_1c38e1d4a_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1a95ddc1a:;
				{
					_1a60c80ba_cstrBytes(&(_self_.get()._field_Obj), (*(_35414_loc)));
				}
			}
			_match_end_1a95ddb4e:;
		};
	} else {
		_1a60c80ba_cstrBytes(&(_self_.get()._field_Obj), (*(_35414_loc)));
	};
	_1a6192607_write(_self_, jule::Str(":", 1));
	_1a6192607_write(_self_, _1c4cacb3d_Itoa((*(_35328_t)).get()._field_Row));
	_1a6192607_write(_self_, jule::Str(":", 1));
	_1a6192607_write(_self_, _1c4cacb3d_Itoa((*(_35328_t)).get()._field_Column));
}



inline void _1a6194a05_head(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_1a61878c7_Time _38013_time = static__1a6187e8d_Now();;
	_1a6187201_AbsTime _38113_abs = _1a6189676_Abs(&_38013_time);;
	_1a6192607_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1a6192607_write(_self_, jule::Str("// JuleC version: ", 18));
	_1a6192607_write(_self_, jule::Str("jule0.0.15 @master", 18));
	_1a6192607_write(_self_, jule::Str("\n", 1));
	_1a6192607_write(_self_, jule::Str("// Date: ", 9));
	_1a6192607_write(_self_, _1c4cac4ab_FmtUint(_38113_abs._field_Day, 10LL));
	_1a6192607_write(_self_, jule::Str("/", 1));
	_1a6192607_write(_self_, _1c4cac4ab_FmtUint(_38113_abs._field_Month, 10LL));
	_1a6192607_write(_self_, jule::Str("/", 1));
	_1a6192607_write(_self_, _1c4cac4ab_FmtUint(_38113_abs._field_Year, 10LL));
	_1a6192607_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1a6192607_write(_self_, _self_.get()._field_info._field_Compiler);
	_1a6192607_write(_self_, jule::Str(" ", 1));
	_1a6192607_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1a6192607_write(_self_, jule::Str("\n\n", 2));
	if (_205b16b42_Production) {
		_1a6192607_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_205b1649e_RC))) {
		_1a6192607_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_205b16878_Safety))) {
		_1a6192607_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1a6194c03_links(_self_);
	_1a6192607_write(_self_, jule::Str("\n\n#include \"", 12));
	_1a6192607_write(_self_, _1c3a954d7_PathApi);
	_1a6192607_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1a6194c03_links(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95e7d23:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _41816_used = *it;
			{
				{
					
					if ((!(_41816_used.get()._field_Binded))) {
						_case_begin_1a95e88b2:;
						{
							goto _iter_next_1a95e7d23;
						}
					}
					else if (_1c397682a_IsStdHeaderPath(_41816_used.get()._field_Path)) {
						_case_begin_1a95e8939:;
						{
							_1a6192607_write(_self_, jule::Str("#include ", 9));
							_1a6192607_write(_self_, _41816_used.get()._field_Path);
							_1a6192607_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_1c3976ad3_IsValidHeaderExt(_1c38e1421_Ext(_41816_used.get()._field_Path))) {
						_case_begin_1a95e89b1:;
						{
							_1a6192607_write(_self_, jule::Str("#include \"", 10));
							_1a6192607_write(_self_, _41816_used.get()._field_Path);
							_1a6192607_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1a95e8791:;
				};
			}
			_iter_next_1a95e7d23:;
			++it;
			goto _iter_begin_1a95e7d23;
		}
		_iter_end_1a95e7d23:;
	};
}



inline void _1a6194eab_prepareStructure(_1a6191e53_ObjectCoder* _self_, jule::Ptr<_1aaa972b0_Struct>* _43440_s) {
	{
		auto expr = &((*(_43440_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95ea111:;
		if (it != expr_end) {
			jule::Ptr<_1aaa9a390_StructIns> _43521_ins = *it;
			{
				{
					auto expr = &(_43521_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a95eb497:;
					if (it != expr_end) {
						jule::Ptr<_1aaab3199_Fn> _43625_m = *it;
						{
							if (_43625_m.get()._field_Statically) {
								goto _iter_next_1a95eb497;
							};
							{
								auto expr = &(_43625_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a95ec058:;
								if (it != expr_end) {
									jule::Ptr<_1aaab609d_FnIns> _44029_mins = *it;
									{
										jule::Ptr<_1aaab5102_ParamIns> _44129_p = _44029_mins.get()._field_Params[0LL];;
										if ((!(_1aaaac21a_IsRef(_44129_p.get()._field_Decl.ptr())))) {
											_44129_p.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1a61a166b_customType>(_1a61a166b_customType{._field_kind=(_1a6473c29_kind((*(_self_))._field_tc.ptr(), _44129_p.get()._field_Kind) + jule::Str("*", 1))}), 27)});
										} else {
											_44129_p.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1a61a166b_customType>(_1a61a166b_customType{._field_kind=_1a6473c29_kind((*(_self_))._field_tc.ptr(), _44129_p.get()._field_Kind)}), 27)});
										};
									}
									_iter_next_1a95ec058:;
									++it;
									goto _iter_begin_1a95ec058;
								}
								_iter_end_1a95ec058:;
							};
						}
						_iter_next_1a95eb497:;
						++it;
						goto _iter_begin_1a95eb497;
					}
					_iter_end_1a95eb497:;
				};
			}
			_iter_next_1a95ea111:;
			++it;
			goto _iter_begin_1a95ea111;
		}
		_iter_end_1a95ea111:;
	};
}



inline void _1a61951a9_prepareStructures(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a95ec70c:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> _46121_s = *it;
			{
				if ((_46121_s.get()._field_Token != nullptr)) {
					_1a6194eab_prepareStructure(_self_.ptr(), &(_46121_s));
				};
			}
			_iter_next_1a95ec70c:;
			++it;
			goto _iter_begin_1a95ec70c;
		}
		_iter_end_1a95ec70c:;
	};
}



inline void _1a6195462_iterPackages(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1aab27b59_Package>*)> _46832_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9600a0c:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _46921_used = *it;
			{
				if ((!(_46921_used.get()._field_Binded))) {
					_46832_f(&(_46921_used.get()._field_Package));
				};
			}
			_iter_next_1a9600a0c:;
			++it;
			goto _iter_begin_1a9600a0c;
		}
		_iter_end_1a9600a0c:;
	};
	_46832_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _1a6195660_buildTraitMap(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_1a6195462_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1aab27b59_Package>*)>([=](jule::Ptr<_1aab27b59_Package>* _47835_pkg) mutable -> void {
		_1a619e449_iterFiles(_47835_pkg, jule::Fn<void(jule::Ptr<_1aabb6be8_SymbolTable>*)>([=](jule::Ptr<_1aabb6be8_SymbolTable>* _47936_file) mutable -> void {
			{
				auto expr = &((*(_47936_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a9603b75:;
				if (it != expr_end) {
					jule::Ptr<_1aaac6443_Trait> _48029_t = *it;
					{
						if ((_48029_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_48029_t.get()._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1a6190935_traitHash> _48533_hash = jule::new_ptr<_1a6190935_traitHash>(_1a6190935_traitHash{._field_t=_48029_t, ._field_s=nullptr, ._field_i=0LL});;
							_1c38d3b83_StrBuilder _49033_b = static__1c38d3ea2_New(static_cast<jule::I32>(_48029_t.get()._field_Ident.len()));;
							static__1a60d0039_writeIdentTo(&(_49033_b), &(_48029_t.get()._field_Ident));
							_48533_hash.get()._field_ti=_1c38dd242_Str(&_49033_b);
							{ jule::Slice<jule::Ptr<_1a6190935_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(_48533_hash); };
							goto _iter_next_1a9603b75;
						};
						jule::I32 _49629_i = 0LL;;
						{
							auto expr = &(_48029_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a960446c:;
							if (it != expr_end) {
								jule::Ptr<_1aaa972b0_Struct> _49733_s = *it;
								{
									{
										auto expr = &(_49733_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a960767e:;
										if (it != expr_end) {
											jule::Ptr<_1aaa9a390_StructIns> _49837_ins = *it;
											{
												jule::Ptr<_1a6190935_traitHash> _49937_hash = jule::new_ptr<_1a6190935_traitHash>(_1a6190935_traitHash{._field_t=_48029_t, ._field_s=_49837_ins, ._field_i=_49629_i});;
												_1c38d3b83_StrBuilder _50437_b = static__1c38d3ea2_New(static_cast<jule::I32>(_48029_t.get()._field_Ident.len()));;
												static__1a60d0039_writeIdentTo(&(_50437_b), &(_48029_t.get()._field_Ident));
												_49937_hash.get()._field_ti=_1c38dd242_Str(&_50437_b);
												{ jule::Slice<jule::Ptr<_1a6190935_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(_49937_hash); };
												(_49629_i)++;
											}
											_iter_next_1a960767e:;
											++it;
											goto _iter_begin_1a960767e;
										}
										_iter_end_1a960767e:;
									};
								}
								_iter_next_1a960446c:;
								++it;
								goto _iter_begin_1a960446c;
							}
							_iter_end_1a960446c:;
						};
						_1a61a01e7_pushMethodsFromInherits(&(_48029_t), &(_48029_t));
					}
					_iter_next_1a9603b75:;
					++it;
					goto _iter_begin_1a9603b75;
				}
				_iter_end_1a9603b75:;
			};
		}));
	}));
}



inline void _1a619585d_traitDecls(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_1a6195462_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1aab27b59_Package>*)>([=](jule::Ptr<_1aab27b59_Package>* _52035_pkg) mutable -> void {
		_1a619e449_iterFiles(_52035_pkg, jule::Fn<void(jule::Ptr<_1aabb6be8_SymbolTable>*)>([=](jule::Ptr<_1aabb6be8_SymbolTable>* _52136_file) mutable -> void {
			{
				auto expr = &((*(_52136_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a960ab27:;
				if (it != expr_end) {
					jule::Ptr<_1aaac6443_Trait> _52229_t = *it;
					{
						if ((_52229_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1a6192c01_indent(_self_);
						_1a6192607_write(_self_, jule::Str("struct ", 7));
						_1a6192607_write(_self_, static__1a60d1139_traitDecl(_52229_t));
						_1a6192607_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1a960ab27:;
					++it;
					goto _iter_begin_1a960ab27;
				}
				_iter_end_1a960ab27:;
			};
		}));
	}));
}



inline void _1a6195b16_structurePlainDecl(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaa972b0_Struct>* _53543_s) {
	{
		auto expr = &((*(_53543_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a960434b:;
		if (it != expr_end) {
			jule::Ptr<_1aaa9a390_StructIns> _53621_ins = *it;
			{
				_1a6192607_write(_self_, jule::Str("struct ", 7));
				_1a6192607_write(_self_, static__1a60d1986_structureIns(&(_53621_ins)));
				_1a6192607_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1a960434b:;
			++it;
			goto _iter_begin_1a960434b;
		}
		_iter_end_1a960434b:;
	};
}



inline void _1a6195d14_structurePlainDecls(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a960b2ed:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> _54421_s = *it;
			{
				if ((_54421_s.get()._field_Token != nullptr)) {
					_1a6195b16_structurePlainDecl(_self_, &(_54421_s));
				};
			}
			_iter_next_1a960b2ed:;
			++it;
			goto _iter_begin_1a960b2ed;
		}
		_iter_end_1a960b2ed:;
	};
}



inline void _1a61960bc_fieldDecl(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaa997e0_FieldIns>* _55134_f) {
	_1a6192607_write(_self_, _1a6473c29_kind(_self_.get()._field_tc.ptr(), (*(_55134_f)).get()._field_Kind));
	_1a6192607_write(_self_, jule::Str(" ", 1));
	_1a6192607_write(_self_, static__1a60d1c50_field(&((*(_55134_f)).get()._field_Decl)));
	if (((*(_55134_f)).get()._field_Default == nullptr)) {
		if (_1a647adda_shouldInitialized(&((*(_55134_f)).get()._field_Kind))) {
			_1a6192607_write(_self_, jule::Str(" = ", 3));
			_1a60c7608_initExpr(_self_.get()._field_ec, (*(_55134_f)).get()._field_Kind);
		};
	} else {
		_1a6192607_write(_self_, jule::Str(" = ", 3));
		_1a60bca1b_possibleRefExpr(_self_.get()._field_ec, (*(_55134_f)).get()._field_Default.get()._field_Model);
	};
	_1a6192607_write(_self_, jule::Str(";", 1));
}



inline void _1a6196375_structureDestructor(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaa9a390_StructIns>* _56944_s) {
	;
	jule::Ptr<_1aaab3199_Fn> _57213_disposeMethod = _1aaa9b407_FindMethod((*(_56944_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _57317_disposed = static__1aab69dbb_Dispose(_57213_disposeMethod);;
	if ((!(_57317_disposed))) {
		return;;
	};
	_1a6192607_write(_self_, jule::Str("~", 1));
	_1a6192607_write(_self_, static__1a60d1986_structureIns(_56944_s));
	_1a6192607_write(_self_, jule::Str("(void) { ", 9));
	_1a6192607_write(_self_, static__1a60d0aa6_func(&(_57213_disposeMethod)));
	_1a6192607_write(_self_, jule::Str("(this); }", 9));
}



inline void _1a619662d_structureDeriveDefsDecls(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaa9a390_StructIns>* _58545_s) {
	if (_1aaa98c51_IsDerives((*(_58545_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1a6192c01_indent(_self_);
		_1a6192607_write(_self_, _1a60ca9b3_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_58545_s)).get()._field_Decl)));
		_1a6192607_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1a6196991_structureOperatorEq(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Str* _59340_ident, jule::Ptr<_1aaa9a390_StructIns>* _59357_s) {
	if ((!((*(_59357_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_59357_s)).get()._field_Operators._field_Eq != nullptr)) {
		_1a6197222_structureOperator(_self_, _59340_ident, &((*(_59357_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1a6192c01_indent(_self_);
	if (_1ab7679eb_Inline) {
		_1a6192607_write(_self_, jule::Str("inline ", 7));
	};
	_1a6192607_write(_self_, jule::Str("bool operator==(", 16));
	_1a6192607_write(_self_, (*(_59340_ident)));
	_1a6192607_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_59357_s)).get()._field_Fields.len() > 0LL)) {
		_1a6192805_addIndent(_self_);
		_1a6192607_write(_self_, jule::Str("\n", 1));
		_1a6192c01_indent(_self_);
		_1a6192607_write(_self_, jule::Str("return ", 7));
		_1a6192805_addIndent(_self_);
		jule::Bool _61621_writed = false;;
		{
			auto expr = &((*(_59357_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a9619e66:;
			if (it != expr_end) {
				jule::Ptr<_1aaa997e0_FieldIns> _61725_f = *it;
				{
					jule::Ptr<_1aaa9a390_StructIns> _61921_strct = _1aac01161_Struct(_61725_f.get()._field_Kind.ptr());;
					if ((((_61921_strct != nullptr) && (_61921_strct.get()._field_Decl != nullptr)) && _61921_strct.get()._field_Decl.get()._field_Binded)) {
						goto _iter_next_1a9619e66;
					};
					if (_61621_writed) {
						_1a6192607_write(_self_, jule::Str(" &&", 3));
					};
					_61621_writed=true;
					_1a6192607_write(_self_, jule::Str("\n", 1));
					_1a6192c01_indent(_self_);
					_1a6192607_write(_self_, jule::Str("this->", 6));
					jule::Str _63021_fIdent = static__1a60d1c50_field(&(_61725_f.get()._field_Decl));;
					_1a6192607_write(_self_, _63021_fIdent);
					_1a6192607_write(_self_, jule::Str(" == _other.", 11));
					_1a6192607_write(_self_, _63021_fIdent);
				}
				_iter_next_1a9619e66:;
				++it;
				goto _iter_begin_1a9619e66;
			}
			_iter_end_1a9619e66:;
		};
		_1a6192a03_doneIndent(_self_);
		if ((!(_61621_writed))) {
			_1a6192607_write(_self_, jule::Str("true", 4));
		};
		_1a6192607_write(_self_, jule::Str(";\n", 2));
		_1a6192a03_doneIndent(_self_);
		_1a6192c01_indent(_self_);
		_1a6192607_write(_self_, jule::Str("}", 1));
	} else {
		_1a6192607_write(_self_, jule::Str(" return true; }", 15));
	};
	_1a6192607_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a6196d04_structureOperatorNotEq(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Str* _64943_ident, jule::Ptr<_1aaa9a390_StructIns>* _64960_s) {
	if ((!((*(_64960_s)).get()._field_Comparable))) {
		return;;
	};
	_1a6192c01_indent(_self_);
	if (_1ab7679eb_Inline) {
		_1a6192607_write(_self_, jule::Str("inline ", 7));
	};
	_1a6192607_write(_self_, jule::Str("bool operator!=(", 16));
	_1a6192607_write(_self_, (*(_64943_ident)));
	_1a6192607_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1a6197222_structureOperator(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Str* _66338_ident, jule::Ptr<_1aaab609d_FnIns>* _66355_f, jule::Str _66366_op) {
	if (((*(_66355_f)) == nullptr)) {
		return;;
	};
	jule::Bool _66813_unary = ((*(_66355_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _66913_assignment = _1aaab361c_IsVoid((*(_66355_f)).get()._field_Decl.ptr());;
	_1a6192c01_indent(_self_);
	if (_1ab7679eb_Inline) {
		_1a6192607_write(_self_, jule::Str("inline ", 7));
	};
	if (_66913_assignment) {
		_1a6192607_write(_self_, (*(_66338_ident)));
		_1a6192607_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1aabeeadd_Prim((*(_66355_f)).get()._field_Result.ptr()) == nullptr)) {
			_1a6192607_write(_self_, (*(_66338_ident)));
		} else {
			_1a6192607_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1a6192607_write(_self_, jule::Str(" operator", 9));
	_1a6192607_write(_self_, _66366_op);
	_1a6192607_write(_self_, jule::Str("(", 1));
	if ((!(_66813_unary))) {
		jule::Ptr<_1aaab5102_ParamIns> _69121_p = (*(_66355_f)).get()._field_Params[1LL];;
		_1a6192607_write(_self_, _1a6472aa2_paramIns(_self_.get()._field_tc.ptr(), &(_69121_p)));
		_1a6192607_write(_self_, jule::Str(" _other", 7));
	};
	_1a6192607_write(_self_, jule::Str(") { ", 4));
	if ((!(_66913_assignment))) {
		_1a6192607_write(_self_, jule::Str("return ", 7));
	};
	_1a6192607_write(_self_, static__1a60d0d70_funcIns(_66355_f));
	if ((!(_66813_unary))) {
		_1a6192607_write(_self_, jule::Str("(this, _other); ", 16));
		if (_66913_assignment) {
			_1a6192607_write(_self_, jule::Str("return *this; ", 14));
		};
		_1a6192607_write(_self_, jule::Str("}", 1));
	} else {
		_1a6192607_write(_self_, jule::Str("(this); }", 9));
	};
	_1a6192607_write(_self_, jule::Str("\n\n", 2));
}



inline void _1a61974ca_structureOperators(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaa9a390_StructIns>* _71243_s) {
	jule::Str _71313_ident = static__1a60d1986_structureIns(_71243_s);;
	_1a6196991_structureOperatorEq(_self_, &(_71313_ident), _71243_s);
	_1a6196d04_structureOperatorNotEq(_self_, &(_71313_ident), _71243_s);
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1a6197222_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1a6197783_structureInsDecl(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaa9a390_StructIns>* _75141_s) {
	{
		auto expr = &((*(_75141_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9634744:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _75221_m = *it;
			{
				if (_1a61a077a_isHeadDecl(&(_75221_m))) {
					_1a6198c29_funcDecl(_self_, &(_75221_m), false);
				};
			}
			_iter_next_1a9634744:;
			++it;
			goto _iter_begin_1a9634744;
		}
		_iter_end_1a9634744:;
	};
	_1a6192607_write(_self_, jule::Str("struct ", 7));
	jule::Str _75913_outIdent = static__1a60d1986_structureIns(_75141_s);;
	_1a6192607_write(_self_, _75913_outIdent);
	_1a6192607_write(_self_, jule::Str(" {\n", 3));
	_1a6192805_addIndent(_self_);
	{
		auto expr = &((*(_75141_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9636081:;
		if (it != expr_end) {
			jule::Ptr<_1aaa997e0_FieldIns> _76521_f = *it;
			{
				_1a6192c01_indent(_self_);
				_1a61960bc_fieldDecl(_self_, &(_76521_f));
				_1a6192607_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1a9636081:;
			++it;
			goto _iter_begin_1a9636081;
		}
		_iter_end_1a9636081:;
	};
	_1a6192c01_indent(_self_);
	_1a6196375_structureDestructor(_self_, _75141_s);
	_1a6192607_write(_self_, jule::Str("\n\n", 2));
	_1a619662d_structureDeriveDefsDecls(_self_, _75141_s);
	_1a61974ca_structureOperators(_self_, _75141_s);
	_1a6192607_write(_self_, jule::Str("\n", 1));
	_1a6192a03_doneIndent(_self_);
	_1a6192c01_indent(_self_);
	_1a6192607_write(_self_, jule::Str("};", 2));
}



inline void _1a6197a3b_structureDecl(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaa972b0_Struct>* _78538_s) {
	{
		auto expr = &((*(_78538_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a963913e:;
		if (it != expr_end) {
			jule::Ptr<_1aaa9a390_StructIns> _78621_ins = *it;
			{
				_1a6197783_structureInsDecl(_self_, &(_78621_ins));
			}
			_iter_next_1a963913e:;
			++it;
			goto _iter_begin_1a963913e;
		}
		_iter_end_1a963913e:;
	};
}



inline void _1a6197c39_structureDecls(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a963988c:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> _79221_s = *it;
			{
				if ((_79221_s.get()._field_Token != nullptr)) {
					_1a6197a3b_structureDecl(_self_, &(_79221_s));
					_1a6192607_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1a963988c:;
			++it;
			goto _iter_begin_1a963988c;
		}
		_iter_end_1a963988c:;
	};
}



inline void _1a6197e37_structureMethodDecls(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a963a4d6:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> _80121_s = *it;
			{
				if ((_80121_s.get()._field_Token != nullptr)) {
					{
						auto expr = &(_80121_s.get()._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a963beee:;
						if (it != expr_end) {
							jule::Ptr<_1aaa9a390_StructIns> _80329_ins = *it;
							{
								{
									auto expr = &(_80329_ins.get()._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1a963c83a:;
									if (it != expr_end) {
										jule::Ptr<_1aaab3199_Fn> _80433_m = *it;
										{
											if ((!(_1a61a077a_isHeadDecl(&(_80433_m))))) {
												_1a61938e4_pushResult(_self_, &(_80433_m));
												_1a6198c29_funcDecl(_self_, &(_80433_m), false);
											};
										}
										_iter_next_1a963c83a:;
										++it;
										goto _iter_begin_1a963c83a;
									}
									_iter_end_1a963c83a:;
								};
							}
							_iter_next_1a963beee:;
							++it;
							goto _iter_begin_1a963beee;
						}
						_iter_end_1a963beee:;
					};
				};
			}
			_iter_next_1a963a4d6:;
			++it;
			goto _iter_begin_1a963a4d6;
		}
		_iter_end_1a963a4d6:;
	};
}



inline void _1a61981e0_paramsDecls(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1aaab5102_ParamIns>>* _81636_params) {
	if (((*(_81636_params)).len() == 0LL)) {
		_1a6192607_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a6192607_write(_self_, jule::Str("(", 1));
	{
		auto expr = _81636_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a963c609:;
		if (it != expr_end) {
			jule::I32 _82314_i = it - expr->begin();
			jule::Ptr<_1aaab5102_ParamIns> _82321_p = *it;
			{
				_1a6192607_write(_self_, _1a6472aa2_paramIns(_self_.get()._field_tc.ptr(), &(_82321_p)));
				if ((((*(_81636_params)).len() - _82314_i) > 1LL)) {
					_1a6192607_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1a963c609:;
			++it;
			_82314_i++;
			goto _iter_begin_1a963c609;
		}
		_iter_end_1a963c609:;
	};
	_1a6192607_write(_self_, jule::Str(")", 1));
}



inline void _1a6198553_funcHead(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaab609d_FnIns>* _83333_f, jule::Bool _83344_ptr) {
	if ((((!(_83344_ptr)) && _1ab7679eb_Inline) && (!(_1aaab3b39_IsEntryPoint((*(_83333_f)).get()._field_Decl.ptr()))))) {
		_1a6192607_write(_self_, jule::Str("inline ", 7));
	};
	_1a6473256_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _83333_f);
	if (_83344_ptr) {
		_1a6192607_write(_self_, jule::Str("(*", 2));
		_1a6192607_write(_self_, static__1a60d0d70_funcIns(_83333_f));
		_1a6192607_write(_self_, jule::Str(")", 1));
	} else {
		_1a6192607_write(_self_, jule::Str(" ", 1));
		_1a6192607_write(_self_, static__1a60d0d70_funcIns(_83333_f));
	};
}



inline void _1a61988b6_funcDeclIns(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaab609d_FnIns>* _84836_f, jule::Bool _84847_ptr) {
	_1a6192c01_indent(_self_);
	_1a6198553_funcHead(_self_, _84836_f, _84847_ptr);
	_1a61981e0_paramsDecls(_self_, &((*(_84836_f)).get()._field_Params));
	_1a6192607_write(_self_, jule::Str(";\n", 2));
}



inline void _1a6198c29_funcDecl(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaab3199_Fn>* _85533_f, jule::Bool _85541_ptr) {
	{
		auto expr = &((*(_85533_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9644e19:;
		if (it != expr_end) {
			jule::Ptr<_1aaab609d_FnIns> _85621_c = *it;
			{
				_1a61988b6_funcDeclIns(_self_, &(_85621_c), _85541_ptr);
			}
			_iter_next_1a9644e19:;
			++it;
			goto _iter_begin_1a9644e19;
		}
		_iter_end_1a9644e19:;
	};
}



inline void _1a6199147_funcDeclTrait(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaac6443_Trait>* _86138_t, jule::Ptr<_1aaab3199_Fn>* _86154_f, jule::Bool _86162_ptr) {
	{
		auto expr = &((*(_86154_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9646080:;
		if (it != expr_end) {
			jule::Ptr<_1aaab609d_FnIns> _86221_c = *it;
			{
				jule::Ptr<_1aabec1e5_TypeKind> _86321_k = _86221_c.get()._field_Params[0LL].get()._field_Kind;;
				_86221_c.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>((*(_86138_t)), 2)});
				_1a61988b6_funcDeclIns(_self_, &(_86221_c), _86162_ptr);
				_86221_c.get()._field_Params[0LL].get()._field_Kind=_86321_k;
			}
			_iter_next_1a9646080:;
			++it;
			goto _iter_begin_1a9646080;
		}
		_iter_end_1a9646080:;
	};
}



inline void _1a6199345_funcDecls(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_1a6195462_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1aab27b59_Package>*)>([=](jule::Ptr<_1aab27b59_Package>* _87135_pkg) mutable -> void {
		_1a619e449_iterFiles(_87135_pkg, jule::Fn<void(jule::Ptr<_1aabb6be8_SymbolTable>*)>([=](jule::Ptr<_1aabb6be8_SymbolTable>* _87236_file) mutable -> void {
			{
				auto expr = &((*(_87236_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a9649ca9:;
				if (it != expr_end) {
					jule::Ptr<_1aaab3199_Fn> _87329_f = *it;
					{
						if (((!(_87329_f.get()._field_Binded)) && (_87329_f.get()._field_Token != nullptr))) {
							_1a61938e4_pushResult(_self_, &(_87329_f));
							_1a6198c29_funcDecl(_self_, &(_87329_f), false);
						};
					}
					_iter_next_1a9649ca9:;
					++it;
					goto _iter_begin_1a9649ca9;
				}
				_iter_end_1a9649ca9:;
			};
		}));
	}));
}



inline void _1a61996a8_traitDataTypeMethods(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaac6443_Trait>* _88345_owner, jule::Ptr<_1aaac6443_Trait>* _88365_t) {
	{
		auto expr = &((*(_88365_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9646558:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _88421_m = *it;
			{
				jule::Ptr<_1aaab609d_FnIns> _88521_ins = _88421_m.get()._field_Instances[0LL];;
				jule::Ptr<_1aaab5102_ParamIns> _88621_p = _88521_ins.get()._field_Params[0LL];;
				_88621_p.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>((*(_88365_t)), 2)});
				{
					auto expr = _88521_ins.get()._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1a964cb9c:;
					if (it != expr_end) {
						jule::I32 _89018_i = it - expr.begin();
						jule::Ptr<_1aaab5102_ParamIns> _89025_ip = *it;
						{
							if (_1c3e3d31e_IsAnonIdent(_89025_ip.get()._field_Decl.get()._field_Ident)) {
								_89025_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1c4cacb3d_Itoa(_89018_i));
							};
						}
						_iter_next_1a964cb9c:;
						++it;
						_89018_i++;
						goto _iter_begin_1a964cb9c;
					}
					_iter_end_1a964cb9c:;
				};
				if ((!(_205b16b42_Production))) {
					jule::Ptr<_1aaab5102_ParamIns> _89625_lp = _88521_ins.get()._field_Params[(_88521_ins.get()._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ _89625_lp.get()._field_Kind.get()._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1a96502a9:;
							{
								goto _match_end_1a964ed9c;
							}
						}
						else {
							_case_begin_1a964ee02:;
							{
								{ jule::Slice<jule::Ptr<_1aaab5102_ParamIns>> &__jule_push_dest = _88521_ins.get()._field_Params; __jule_push_dest.push(jule::new_ptr<_1aaab5102_ParamIns>(_1aaab5102_ParamIns{._field_Decl=jule::new_ptr<_1aaaab868_Param>(_1aaaab868_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1a61a166b_customType>(_1a61a166b_customType{._field_kind=jule::Str("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1a964ed9c:;
					};
				};
				_1a61938e4_pushResult(_self_, &(_88421_m));
				_1a6199147_funcDeclTrait(_self_, _88345_owner, &(_88421_m), true);
			}
			_iter_next_1a9646558:;
			++it;
			goto _iter_begin_1a9646558;
		}
		_iter_end_1a9646558:;
	};
}



inline void _1a61998a6_traitDataTypes(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_1a6195462_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1aab27b59_Package>*)>([=](jule::Ptr<_1aab27b59_Package>* _91935_pkg) mutable -> void {
		_1a619e449_iterFiles(_91935_pkg, jule::Fn<void(jule::Ptr<_1aabb6be8_SymbolTable>*)>([=](jule::Ptr<_1aabb6be8_SymbolTable>* _92036_file) mutable -> void {
			{
				auto expr = &((*(_92036_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a96534dd:;
				if (it != expr_end) {
					jule::Ptr<_1aaac6443_Trait> _92129_t = *it;
					{
						if ((_92129_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_92129_t.get()._field_Methods.len() == 0LL)) {
							goto _iter_next_1a96534dd;
						};
						_1a6192607_write(_self_, jule::Str("struct ", 7));
						_1a6192607_write(_self_, static__1a60d1139_traitDecl(_92129_t));
						_1a6192607_write(_self_, jule::Str("MptrData", 8));
						_1a6192607_write(_self_, jule::Str(" {\n", 3));
						_1a6192805_addIndent(_self_);
						_1a61996a8_traitDataTypeMethods(_self_, &(_92129_t), &(_92129_t));
						_1a6192a03_doneIndent(_self_);
						_1a6192c01_indent(_self_);
						_1a6192607_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1a96534dd:;
					++it;
					goto _iter_begin_1a96534dd;
				}
				_iter_end_1a96534dd:;
			};
		}));
	}));
}



inline void _1a6199b5e_paramIns(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaab5102_ParamIns>* _94233_p) {
	_1a6192607_write(_self_, _1a6472aa2_paramIns(_self_.get()._field_tc.ptr(), _94233_p));
	_1a6192607_write(_self_, jule::Str(" ", 1));
	_1a6192607_write(_self_, static__1a60d1403_param(&((*(_94233_p)).get()._field_Decl)));
}



inline void _1a6199e17_paramsIns(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1aaab5102_ParamIns>>* _94834_params) {
	if (((*(_94834_params)).len() == 0LL)) {
		_1a6192607_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1a6192607_write(_self_, jule::Str("(", 1));
	{
		auto expr = _94834_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9657228:;
		if (it != expr_end) {
			jule::I32 _95414_i = it - expr->begin();
			jule::Ptr<_1aaab5102_ParamIns> _95421_p = *it;
			{
				_1a6199b5e_paramIns(_self_, &(_95421_p));
				if ((((*(_94834_params)).len() - _95414_i) > 1LL)) {
					_1a6192607_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1a9657228:;
			++it;
			_95414_i++;
			goto _iter_begin_1a9657228;
		}
		_iter_end_1a9657228:;
	};
	_1a6192607_write(_self_, jule::Str(")", 1));
}



inline void _1a619a27a_varInitExpr(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aab68969_Var>* _96336_v, jule::Fn<void(void)> _96345_init) {
	if ((*(_96336_v)).get()._field_Statically) {
		_1a6192607_write(_self_, jule::Str("static ", 7));
	};
	_1a6192607_write(_self_, _1a6473c29_kind(_self_.get()._field_tc.ptr(), (*(_96336_v)).get()._field_Kind.get()._field_Kind));
	_1a6192607_write(_self_, jule::Str(" ", 1));
	if ((*(_96336_v)).get()._field_Reference) {
		_1a6192607_write(_self_, jule::Str("*", 1));
	};
	_1a6192607_write(_self_, static__1a60d2019_var((*(_96336_v))));
	if ((_96345_init != nullptr)) {
		_1a6192607_write(_self_, jule::Str(" = ", 3));
		_96345_init();
	};
	_1a6192607_write(_self_, jule::Str(";", 1));
}



inline void _1a619a533_var(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aab68969_Var> _98127_v) {
	if (_1c3e3d055_IsIgnoreIdent(_98127_v.get()._field_Ident)) {
		return;;
	};
	if (((_98127_v.get()._field_Value != nullptr) && (_98127_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_98127_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_98127_v.get()._field_Reference) {
				_1a619a27a_varInitExpr(_self_, &(_98127_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1a6192607_write(_self_, jule::Str("&(", 2));
					_1a60c7350_model(_self_.get()._field_ec, _98127_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_1a6192607_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1a619a27a_varInitExpr(_self_, &(_98127_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1a60bca1b_possibleRefExpr(_self_.get()._field_ec, _98127_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_1a619a27a_varInitExpr(_self_, &(_98127_v), nullptr);
		return;;
	};
	if (_98127_v.get()._field_Reference) {
		_1a619a27a_varInitExpr(_self_, &(_98127_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a6192607_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1a647adda_shouldInitialized(&(_98127_v.get()._field_Kind.get()._field_Kind))) {
		_1a619a27a_varInitExpr(_self_, &(_98127_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1a60c7608_initExpr(_self_.get()._field_ec, _98127_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1a619a27a_varInitExpr(_self_, &(_98127_v), nullptr);
}



inline void _1a619a7db_funcIns(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaab609d_FnIns>* _101232_f) {
	_1a6198553_funcHead(_self_, _101232_f, false);
	_1a6199e17_paramsIns(_self_, &((*(_101232_f)).get()._field_Params));
	_1a6192607_write(_self_, jule::Str(" ", 1));
	_1a60b688e_funcScope(_self_.get()._field_sc, (*(_101232_f)));
	if (((*(_101232_f)).get()._field_Scope != nullptr)) {
		_1a6192607_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _1a619aa94_func(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaab3199_Fn>* _102229_f) {
	{
		auto expr = &((*(_102229_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97c5a6c:;
		if (it != expr_end) {
			jule::Ptr<_1aaab609d_FnIns> _102321_ins = *it;
			{
				_1a619a7db_funcIns(_self_, &(_102321_ins));
			}
			_iter_next_1a97c5a6c:;
			++it;
			goto _iter_begin_1a97c5a6c;
		}
		_iter_end_1a97c5a6c:;
	};
}



inline void _1a619ae07_funcTrait(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1a6190935_traitHash>* _102834_hash, jule::Ptr<_1aaab3199_Fn>* _102857_f) {
	jule::Str _102913_ident = (*(_102857_f)).get()._field_Ident;;
	{
		auto expr = &((*(_102857_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97c6c6b:;
		if (it != expr_end) {
			jule::Ptr<_1aaab609d_FnIns> _103021_ins = *it;
			{
				_103021_ins.get()._field_Scope=nullptr;
				_1c38d3b83_StrBuilder _103321_s = static__1c38d3ea2_New(static_cast<jule::I32>((((((*(_102857_f)).get()._field_Ident.len() + _102913_ident.len()) + (*(_102834_hash)).get()._field_ti.len()) + 2LL) + 4LLU)));;
				_1c38dc94a_WriteStr(&_103321_s, _102913_ident);
				_1c38dcc03_WriteByte(&_103321_s, '_');
				_1c38dc94a_WriteStr(&_103321_s, (*(_102834_hash)).get()._field_ti);
				_1c38dcc03_WriteByte(&_103321_s, '_');
				_1c38dc94a_WriteStr(&_103321_s, _1c4cacb3d_Itoa((*(_102834_hash)).get()._field_i));
				(*(_102857_f)).get()._field_Ident=_1c38dd242_Str(&_103321_s);
				jule::Ptr<_1aabec1e5_TypeKind> _104221_k = _103021_ins.get()._field_Params[0LL].get()._field_Kind;;
				_103021_ins.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>((*(_102834_hash)).get()._field_t, 2)});
				_1a619a7db_funcIns(_self_, &(_103021_ins));
				_103021_ins.get()._field_Params[0LL].get()._field_Kind=_104221_k;
			}
			_iter_next_1a97c6c6b:;
			++it;
			goto _iter_begin_1a97c6c6b;
		}
		_iter_end_1a97c6c6b:;
	};
	(*(_102857_f)).get()._field_Ident=_102913_ident;
}



inline void _1a619b26a_traitWrapper(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaab3199_Fn>* _105037_m, jule::Ptr<_1a6190935_traitHash>* _105050_hash) {
	_1a619ae07_funcTrait(_self_, _105050_hash, _105037_m);
	if (((*(_105050_hash)).get()._field_s == nullptr)) {
		if (_205b16b42_Production) {
			_1a6192607_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1a6192607_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _106213_ptr = (!(_1aaaac21a_IsRef((*(_105037_m)).get()._field_Params[0LL].ptr())));;
	jule::Ptr<_1aaab3199_Fn> _106417_sm = _1aaa9b407_FindMethod((*(_105050_hash)).get()._field_s.ptr(), (*(_105037_m)).get()._field_Ident, false);;
	if (((_106417_sm == nullptr) || (_106417_sm.get()._field_Instances.len() == 0LL))) {
		return;;
	};
	_1a6192805_addIndent(_self_);
	_1a6192607_write(_self_, jule::Str("{\n", 2));
	_1a6192c01_indent(_self_);
	if ((_106417_sm.get()._field_Exceptional || (!(_1aaab361c_IsVoid(_106417_sm.ptr()))))) {
		_1a6192607_write(_self_, jule::Str("return ", 7));
	};
	_1a6192607_write(_self_, static__1a60d0aa6_func(&(_106417_sm)));
	_1a6192607_write(_self_, jule::Str("(", 1));
	if (_106213_ptr) {
		_1a6192607_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_1a6192607_write(_self_, _1a64720ce_structureIns(_self_.get()._field_tc.ptr(), (*(_105050_hash)).get()._field_s));
		_1a6192607_write(_self_, jule::Str(">(", 2));
		if ((!(_205b16b42_Production))) {
			_1a6192607_write(_self_, jule::Str("_00___file", 10));
		};
		_1a6192607_write(_self_, jule::Str(")", 1));
	} else {
		_1a6192607_write(_self_, jule::Str("_self_.data.as<", 15));
		_1a6192607_write(_self_, _1a6471c8d_structure(_self_.get()._field_tc.ptr(), _106417_sm.get()._field_Owner));
		_1a6192607_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*(_105037_m)).get()._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a97d0d52:;
		if (it != expr_end) {
			jule::Ptr<_1aaaab868_Param> _109016_mp = *it;
			{
				_1a6192607_write(_self_, jule::Str(", ", 2));
				_1a6192607_write(_self_, static__1a60d1403_param(&(_109016_mp)));
			}
			_iter_next_1a97d0d52:;
			++it;
			goto _iter_begin_1a97d0d52;
		}
		_iter_end_1a97d0d52:;
	};
	_1a6192607_write(_self_, jule::Str(");\n}\n", 5));
	_1a6192a03_doneIndent(_self_);
}



inline void _1a619b468_traitWrappers(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97cb8a8:;
		if (it != expr_end) {
			jule::Ptr<_1a6190935_traitHash> _109921_hash = *it;
			{
				{
					auto expr = &(_109921_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a97d5230:;
					if (it != expr_end) {
						jule::Ptr<_1aaab3199_Fn> _110025_m = *it;
						{
							_1a619b26a_traitWrapper(_self_, &(_110025_m), &(_109921_hash));
						}
						_iter_next_1a97d5230:;
						++it;
						goto _iter_begin_1a97d5230;
					}
					_iter_end_1a97d5230:;
				};
			}
			_iter_next_1a97cb8a8:;
			++it;
			goto _iter_begin_1a97cb8a8;
		}
		_iter_end_1a97cb8a8:;
	};
}



inline void _1a619b7cb_traitDataMethods(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaac6443_Trait>* _110641_t, jule::Ptr<_1a6190935_traitHash>* _110653_hash) {
	{
		auto expr = &((*(_110641_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97d5b04:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _110721_m = *it;
			{
				jule::Str _110817_mIdent = static__1a60d0aa6_func(&(_110721_m));;
				_1a6192c01_indent(_self_);
				_1a6192607_write(_self_, jule::Str(".", 1));
				_1a6192607_write(_self_, _110817_mIdent);
				_1a6192607_write(_self_, jule::Str("=", 1));
				_1a6192607_write(_self_, _110817_mIdent);
				_1a6192607_write(_self_, jule::Str("_", 1));
				_1a6192607_write(_self_, (*(_110653_hash)).get()._field_ti);
				_1a6192607_write(_self_, jule::Str("_", 1));
				_1a6192607_write(_self_, _1c4cacb3d_Itoa((*(_110653_hash)).get()._field_i));
				_1a6192607_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_1a97d5b04:;
			++it;
			goto _iter_begin_1a97d5b04;
		}
		_iter_end_1a97d5b04:;
	};
}



inline void _1a619bb3e_traitData(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1a6190935_traitHash>* _112234_hash, jule::Ptr<_1aaac6443_Trait>* _112257_old) {
	if (((*(_112234_hash)).get()._field_t.get()._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _112613_ident = static__1a60d1139_traitDecl((*(_112234_hash)).get()._field_t);;
	if (((*(_112234_hash)).get()._field_t != (*(_112257_old)))) {
		if (((*(_112257_old)) != nullptr)) {
			_1a6192a03_doneIndent(_self_);
			_1a6192c01_indent(_self_);
			_1a6192607_write(_self_, jule::Str("};\n", 3));
		};
		_1a6192607_write(_self_, jule::Str("static ", 7));
		_1a6192607_write(_self_, _112613_ident);
		_1a6192607_write(_self_, jule::Str("MptrData ", 9));
		_1a6192607_write(_self_, _112613_ident);
		_1a6192607_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_112257_old))=(*(_112234_hash)).get()._field_t;
		_1a6192805_addIndent(_self_);
	};
	_1a6192c01_indent(_self_);
	_1a6192607_write(_self_, jule::Str("{\n", 2));
	_1a6192805_addIndent(_self_);
	_1a619b7cb_traitDataMethods(_self_, &((*(_112234_hash)).get()._field_t), _112234_hash);
	_1a6192a03_doneIndent(_self_);
	_1a6192c01_indent(_self_);
	_1a6192607_write(_self_, jule::Str("},\n", 3));
}



inline void _1a619bd3c_traitDatas(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	jule::Ptr<_1aaac6443_Trait> _115117_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97dd8cb:;
		if (it != expr_end) {
			jule::Ptr<_1a6190935_traitHash> _115221_hash = *it;
			{
				_1a619bb3e_traitData(_self_, &(_115221_hash), &(_115117_old));
			}
			_iter_next_1a97dd8cb:;
			++it;
			goto _iter_begin_1a97dd8cb;
		}
		_iter_end_1a97dd8cb:;
	};
	if ((_115117_old != nullptr)) {
		_1a6192a03_doneIndent(_self_);
		_1a6192c01_indent(_self_);
		_1a6192607_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1a619c03a_globals(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97e01e6:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> _116321_v = *it;
			{
				_1a6192607_write(_self_, _1a6473c29_kind(_self_.get()._field_tc.ptr(), _116321_v.get()._field_Kind.get()._field_Kind));
				_1a6192607_write(_self_, jule::Str(" ", 1));
				_1a6192607_write(_self_, static__1a60d2019_var(_116321_v));
				_1a6192607_write(_self_, jule::Str(" = ", 3));
				_1a60c7350_model(_self_.get()._field_ec, _116321_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_1a6192607_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1a97e01e6:;
			++it;
			goto _iter_begin_1a97e01e6;
		}
		_iter_end_1a97e01e6:;
	};
}



inline void _1a619c238_decls(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_1a619585d_traitDecls(_self_);
	_1a6195d14_structurePlainDecls(_self_);
	_1a6197c39_structureDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I32>(_1c38dd6c6_Len(&_self_.get()._field_Obj));
	_1a6197e37_structureMethodDecls(_self_);
	_1a6199345_funcDecls(_self_);
	_1a6192607_write(_self_, jule::Str("\n\n", 2));
	_1a61998a6_traitDataTypes(_self_);
	_1a6192607_write(_self_, jule::Str("\n\n", 2));
	_1a619b468_traitWrappers(_self_);
	_1a6192607_write(_self_, jule::Str("\n\n", 2));
	_1a619bd3c_traitDatas(_self_);
	_1a6192607_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I32>(_1c38dd6c6_Len(&_self_.get()._field_Obj));
	_1a619c03a_globals(_self_);
}



inline void _1a619c4e1_structureMethods(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaa9a390_StructIns>* _119141_s) {
	{
		auto expr = &((*(_119141_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a97e5a04:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _119221_f = *it;
			{
				_1a619aa94_func(_self_, &(_119221_f));
				_1a6192607_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1a97e5a04:;
			++it;
			goto _iter_begin_1a97e5a04;
		}
		_iter_end_1a97e5a04:;
	};
}



inline void _1a619c799_structureDeriveDefs(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaa9a390_StructIns>* _119844_s) {
	if (_1aaa98c51_IsDerives((*(_119844_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1a6192607_write(_self_, _1a60cad04_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_119844_s)).get()._field_Decl)));
		_1a6192607_write(_self_, jule::Str("{\n", 2));
		_1a6192805_addIndent(_self_);
		_1a6192c01_indent(_self_);
		_1a6192607_write(_self_, _1a64720ce_structureIns(_self_.get()._field_tc.ptr(), (*(_119844_s))));
		_1a6192607_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_119844_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a97e8001:;
			if (it != expr_end) {
				jule::Ptr<_1aaa997e0_FieldIns> _120620_f = *it;
				{
					jule::Str _120721_ident = static__1a60d1c50_field(&(_120620_f.get()._field_Decl));;
					_1a6192c01_indent(_self_);
					_1a6192607_write(_self_, jule::Str("clone.", 6));
					_1a6192607_write(_self_, _120721_ident);
					_1a6192607_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1a6192607_write(_self_, _120721_ident);
					_1a6192607_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1a97e8001:;
				++it;
				goto _iter_begin_1a97e8001;
			}
			_iter_end_1a97e8001:;
		};
		_1a6192c01_indent(_self_);
		_1a6192607_write(_self_, jule::Str("return clone;\n", 14));
		_1a6192a03_doneIndent(_self_);
		_1a6192607_write(_self_, jule::Str("}", 1));
	};
}



inline void _1a619ca52_structureOstream(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaa9a390_StructIns>* _122241_s) {
	_1a6192c01_indent(_self_);
	_1a6192607_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1a6192607_write(_self_, static__1a60d1986_structureIns(_122241_s));
	_1a6192607_write(_self_, jule::Str(" _Src) {\n", 9));
	_1a6192805_addIndent(_self_);
	_1a6192c01_indent(_self_);
	jule::Ptr<_1aaab3199_Fn> _123017_fts = _1aaa9b407_FindMethod((*(_122241_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__1aab6a185_Str(_123017_fts)) {
		_1a6192607_write(_self_, jule::Str("_Stream << ", 11));
		_1a6192607_write(_self_, static__1a60d0aa6_func(&(_123017_fts)));
		_1a6192607_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1a6192607_write(_self_, jule::Str("_Stream << \"", 12));
		_1a60c80ba_cstrBytes(&(_self_.get()._field_Obj), (*(_122241_s)).get()._field_Decl.get()._field_Ident);
		_1a6192607_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_122241_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a97ee16c:;
			if (it != expr_end) {
				jule::I32 _124018_i = it - expr->begin();
				jule::Ptr<_1aaa997e0_FieldIns> _124025_f = *it;
				{
					_1a6192c01_indent(_self_);
					_1a6192607_write(_self_, jule::Str("_Stream << \"", 12));
					_1a60c80ba_cstrBytes(&(_self_.get()._field_Obj), _124025_f.get()._field_Decl.get()._field_Ident);
					_1a6192607_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1aaa9a390_StructIns> _124721_strct = _1aac01161_Struct(_124025_f.get()._field_Kind.ptr());;
					if ((((_124721_strct != nullptr) && (_124721_strct.get()._field_Decl != nullptr)) && _124721_strct.get()._field_Decl.get()._field_Binded)) {
						_1a6192607_write(_self_, jule::Str(" cpp.", 5));
						_1a6192607_write(_self_, static__1a60d1c50_field(&(_124025_f.get()._field_Decl)));
						_1a6192607_write(_self_, jule::Str("\"", 1));
					} else {
						_1a6192607_write(_self_, jule::Str("\" << _Src.", 10));
						_1a6192607_write(_self_, static__1a60d1c50_field(&(_124025_f.get()._field_Decl)));
					};
					if (((_124018_i + 1LL) < (*(_122241_s)).get()._field_Fields.len())) {
						_1a6192607_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1a6192607_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1a97ee16c:;
				++it;
				_124018_i++;
				goto _iter_begin_1a97ee16c;
			}
			_iter_end_1a97ee16c:;
		};
		_1a6192c01_indent(_self_);
		_1a6192607_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1a6192c01_indent(_self_);
	_1a6192607_write(_self_, jule::Str("return _Stream;\n", 16));
	_1a6192a03_doneIndent(_self_);
	_1a6192607_write(_self_, jule::Str("}", 1));
}



inline void _1a619cd0a_structureIns(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaa9a390_StructIns>* _127337_s) {
	_1a619c4e1_structureMethods(_self_, _127337_s);
	_1a6192607_write(_self_, jule::Str("\n\n", 2));
	_1a619c799_structureDeriveDefs(_self_, _127337_s);
	_1a6192607_write(_self_, jule::Str("\n\n", 2));
	_1a619ca52_structureOstream(_self_, _127337_s);
}



inline void _1a619d0b3_structure(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aaa972b0_Struct>* _128134_s) {
	{
		auto expr = &((*(_128134_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a980675c:;
		if (it != expr_end) {
			jule::Ptr<_1aaa9a390_StructIns> _128221_ins = *it;
			{
				_1a619cd0a_structureIns(_self_, &(_128221_ins));
				_1a6192607_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1a980675c:;
			++it;
			goto _iter_begin_1a980675c;
		}
		_iter_end_1a980675c:;
	};
}



inline void _1a619d2b1_structures(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9806e99:;
		if (it != expr_end) {
			jule::Ptr<_1aaa972b0_Struct> _128921_s = *it;
			{
				if ((_128921_s.get()._field_Token != nullptr)) {
					_1a619d0b3_structure(_self_, &(_128921_s));
					_1a6192607_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1a9806e99:;
			++it;
			goto _iter_begin_1a9806e99;
		}
		_iter_end_1a9806e99:;
	};
}



inline void _1a619d4ae_funcs(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_1a6195462_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1aab27b59_Package>*)>([=](jule::Ptr<_1aab27b59_Package>* _129835_pkg) mutable -> void {
		_1a619e449_iterFiles(_129835_pkg, jule::Fn<void(jule::Ptr<_1aabb6be8_SymbolTable>*)>([=](jule::Ptr<_1aabb6be8_SymbolTable>* _129936_file) mutable -> void {
			{
				auto expr = &((*(_129936_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1a980a882:;
				if (it != expr_end) {
					jule::Ptr<_1aaab3199_Fn> _130029_f = *it;
					{
						if (((!(_205b161d5_Test)) && _1a647ab21_hasDirective(&(_130029_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1a980a882;
						};
						if (((!(_130029_f.get()._field_Binded)) && (_130029_f.get()._field_Token != nullptr))) {
							_1a619aa94_func(_self_, &(_130029_f));
							_1a6192607_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1a980a882:;
					++it;
					goto _iter_begin_1a980a882;
				}
				_iter_end_1a980a882:;
			};
		}));
	}));
}



inline void _1a619d767_pushInit(jule::Ptr<_1a6191e53_ObjectCoder> _self_, jule::Ptr<_1aab27b59_Package>* _131333_pkg) {
	_1a619e449_iterFiles(_131333_pkg, jule::Fn<void(jule::Ptr<_1aabb6be8_SymbolTable>*)>([=](jule::Ptr<_1aabb6be8_SymbolTable>* _131432_file) mutable -> void {
		{
			auto expr = &((*(_131432_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a980ccb3:;
			if (it != expr_end) {
				jule::Ptr<_1aaab3199_Fn> _131520_f = *it;
				{
					if (_131520_f.get()._field_Ident.equal("init", 4)) {
						_1a6192c01_indent(_self_);
						_1a6192607_write(_self_, static__1a60d0aa6_func(&(_131520_f)));
						_1a6192607_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1a980ccb3:;
				++it;
				goto _iter_begin_1a980ccb3;
			}
			_iter_end_1a980ccb3:;
		};
	}));
}



inline void _1a619d965_initCaller(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_1a6192607_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1a6192805_addIndent(_self_);
	_1a6195462_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1aab27b59_Package>*)>([=](jule::Ptr<_1aab27b59_Package>* _132835_pkg) mutable -> void {
		_1a619d767_pushInit(_self_, _132835_pkg);
	}));
	_1a6192a03_doneIndent(_self_);
	_1a6192607_write(_self_, jule::Str("\n}", 2));
}



inline void _1a619db63_end(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_1a6192607_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_205b161d5_Test) {
		_1a6192607_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1a6192607_write(_self_, jule::Str("entry_point();", 14));
	};
	_1a6192607_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1a619dd61_serializeHead(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_1a61951a9_prepareStructures(_self_);
	_1a6195660_buildTraitMap(_self_);
	_1a6194a05_head(_self_);
	_1a6192607_write(_self_, jule::Str("\n", 1));
	_1a619c238_decls(_self_);
	if ((_1c38dd6c6_Len(&_self_.get()._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _136321_head = jule::clone(_1c38ddbe3_Buf(&_self_.get()._field_Obj).slice(0LL, _self_.get()._field_headPos));;
		(_136321_head).append(_1c38ddbe3_Buf(&_self_.get()._field_resultDecls));;
		_self_.get()._field_declPos+=_1c38dd6c6_Len(&_self_.get()._field_resultDecls);
		(_136321_head).append(_1c38ddbe3_Buf(&_self_.get()._field_Obj).slice(_self_.get()._field_headPos));;
		{
			_1c38dde9b_SetBuf(&_self_.get()._field_Obj, _136321_head);
		};
	};
	_1a6192607_write(_self_, jule::Str("\n", 1));
	_1a619d2b1_structures(_self_);
	_1a619d4ae_funcs(_self_);
	_1a619d965_initCaller(_self_);
	_1a6192607_write(_self_, jule::Str("\n\n", 2));
	if ((_1c38dd6c6_Len(&_self_.get()._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _137721_head = jule::clone(_1c38ddbe3_Buf(&_self_.get()._field_Obj).slice(0LL, _self_.get()._field_declPos));;
		(_137721_head).append(_1c38ddbe3_Buf(&_self_.get()._field_anyObj));;
		(_137721_head).append(_1c38ddbe3_Buf(&_self_.get()._field_Obj).slice(_self_.get()._field_declPos));;
		{
			_1c38dde9b_SetBuf(&_self_.get()._field_Obj, _137721_head);
		};
	};
}



inline void _1a619e05e_Serialize(jule::Ptr<_1a6191e53_ObjectCoder> _self_) {
	_1a619dd61_serializeHead(_self_);
	_1a619db63_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1a6191e53_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ac594abe_ObjectDeadCode> static__1ac594ddd_new(jule::Ptr<_1ab76097d_IR>* _3424_ir) {
	return jule::new_ptr<_1ac594abe_ObjectDeadCode>(_1ac594abe_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1a92de6da_isLive(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aaac6443_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1aaac6443_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a92e1489:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1a92e128b:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92e1500:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1a92e1500:;
			++it;
			_5213_i++;
			goto _iter_begin_1a92e1500;
		}
		_iter_end_1a92e1500:;
	};
	return false;;
}

inline jule::Bool _1a92e4635_isLive(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aaab609d_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1aaab609d_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a92e659e:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1a92e64e4:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92e71a4:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1a92e71a4:;
			++it;
			_5213_i++;
			goto _iter_begin_1a92e71a4;
		}
		_iter_end_1a92e71a4:;
	};
	return false;;
}

inline jule::Bool _1a92eba5a_isLive(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aaa9a390_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1aaa9a390_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a92ee91a:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1a92ee783:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92ee9e7:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1a92ee9e7:;
			++it;
			_5213_i++;
			goto _iter_begin_1a92ee9e7;
		}
		_iter_end_1a92ee9e7:;
	};
	return false;;
}

inline jule::Bool _1a9301e5b_isLive(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aab68969_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1aab68969_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1a9303ad9:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1a93039b8:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9303a73:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1a9303a73:;
			++it;
			_5213_i++;
			goto _iter_begin_1a9303a73;
		}
		_iter_end_1a9303a73:;
	};
	return false;;
}



inline void _1a92dead6_pushLive(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aaac6443_Trait> _6035_t) {
	{
		
{
			_case_begin_1a92e347a:;
			{
				{ jule::Slice<jule::Ptr<_1aaac6443_Trait>> &__jule_push_dest = _self_.get()._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1a92e327c:;
	};
}

inline void _1a92e4c51_pushLive(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aaab609d_FnIns> _6035_t) {
	{
		
{
			_case_begin_1a92e8c22:;
			{
				{ jule::Slice<jule::Ptr<_1aaab609d_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1a92e8b01:;
	};
}

inline void _1a92eacbd_pushLive(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aaa9a390_StructIns> _6035_t) {
	{
		
{
			_case_begin_1a92ec53e:;
			{
				{ jule::Slice<jule::Ptr<_1aaa9a390_StructIns>> &__jule_push_dest = _self_.get()._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1a92ec3a7:;
	};
}

inline void _1a9302357_pushLive(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aab68969_Var> _6035_t) {
	{
		
{
			_case_begin_1a9305e60:;
			{
				{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = _self_.get()._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1a9305da5:;
	};
}



inline void _1ac595790_setReferencesAsLive(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aaab9249_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _7717_i = 0LL;;
	for (; (_7717_i < _1aaab9942_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1aaab9c83_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1a92dd541:;
					{
						jule::Ptr<_1aaac6443_Trait> _8225_t = _7921_ref.cast_ptr<_1aaac6443_Trait>(&__jule_any_type10);;
						if (_1a92de6da_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1a92dc8a3;
						};
						_1a92dead6_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a92de267:;
							if (it != expr_end) {
								jule::Ptr<_1aaab3199_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a92e3029:;
										if (it != expr_end) {
											jule::Ptr<_1aaab609d_FnIns> _8833_mins = *it;
											{
												if (_1a92e4635_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1a92e3029;
												};
												_1a92e4c51_pushLive(_self_, _8833_mins);
												_1ac595790_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_1a92e3029:;
											++it;
											goto _iter_begin_1a92e3029;
										}
										_iter_end_1a92e3029:;
									};
								}
								_iter_next_1a92de267:;
								++it;
								goto _iter_begin_1a92de267;
							}
							_iter_end_1a92de267:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1a92dd5a7:;
					{
						jule::Ptr<_1aaab609d_FnIns> _9725_f = _7921_ref.cast_ptr<_1aaab609d_FnIns>(&__jule_any_type7);;
						if (_1a92e4635_isLive(_self_, &(_9725_f))) {
							goto _match_end_1a92dd024;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1a92eba5a_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_1a92eacbd_pushLive(_self_, _9725_f.get()._field_Owner);
								_1ac595790_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_1a92e4c51_pushLive(_self_, _9725_f);
						_1ac595790_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1a92dd61d:;
					{
						jule::Ptr<_1aab68969_Var> _11025_v = _7921_ref.cast_ptr<_1aab68969_Var>(&__jule_any_type8);;
						if (_1a9301e5b_isLive(_self_, &(_11025_v))) {
							goto _match_end_1a92dd024;
						};
						_1a9302357_pushLive(_self_, _11025_v);
						_1ac595790_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1a92dd695:;
					{
						jule::Ptr<_1aaa9a390_StructIns> _11725_s = _7921_ref.cast_ptr<_1aaa9a390_StructIns>(&__jule_any_type9);;
						if (_1a92eba5a_isLive(_self_, &(_11725_s))) {
							goto _match_end_1a92dd024;
						};
						_1a92eacbd_pushLive(_self_, _11725_s);
						_1ac595790_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1a9308616:;
							if (it != expr_end) {
								jule::Ptr<_1aaab3199_Fn> _12329_m = *it;
								{
									{
										auto expr = &(_12329_m.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1a930931a:;
										if (it != expr_end) {
											jule::Ptr<_1aaab609d_FnIns> _12433_ins = *it;
											{
												if (_1a92e4635_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1a930931a;
												};
												if (_1ac598463_isTraitMethod(&(_11725_s), &(_12433_ins))) {
													_1a92e4c51_pushLive(_self_, _12433_ins);
													_1ac595790_setReferencesAsLive(_self_, &(_12433_ins.get()._field_Refers));
												};
											}
											_iter_next_1a930931a:;
											++it;
											goto _iter_begin_1a930931a;
										}
										_iter_end_1a930931a:;
									};
								}
								_iter_next_1a9308616:;
								++it;
								goto _iter_begin_1a9308616;
							}
							_iter_end_1a9308616:;
						};
					}
				}
				_match_end_1a92dd024:;
			};
		}
	_iter_next_1a92dc8a3:;
	}
	_iter_end_1a92dc8a3:;;
}



inline void _1ac595a48_inits(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aab27b59_Package>* _14130_pkg) {
	{
		auto expr = &((*(_14130_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92e29c9:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &(_14221_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a930ad44:;
					if (it != expr_end) {
						jule::Ptr<_1aaab3199_Fn> _14325_f = *it;
						{
							if (_14325_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_1aaab609d_FnIns> _14529_ins = _14325_f.get()._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1aaab609d_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_14529_ins); };
								_1ac595790_setReferencesAsLive(_self_, &(_14529_ins.get()._field_Refers));
							};
						}
						_iter_next_1a930ad44:;
						++it;
						goto _iter_begin_1a930ad44;
					}
					_iter_end_1a930ad44:;
				};
			}
			_iter_next_1a92e29c9:;
			++it;
			goto _iter_begin_1a92e29c9;
		}
		_iter_end_1a92e29c9:;
	};
}



inline void _1ac595d01_collectLivePackage(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aab27b59_Package>* _15343_pkg) {
	_1ac595a48_inits(_self_, _15343_pkg);
	if (_205b161d5_Test) {
		{
			auto expr = &((*(_15343_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a930d8a2:;
			if (it != expr_end) {
				jule::Ptr<_1aabb6be8_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &(_15925_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a930e1dd:;
						if (it != expr_end) {
							jule::Ptr<_1aaab3199_Fn> _16029_f = *it;
							{
								if (_1ac59809a_hasDirective(&(_16029_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_1aaab609d_FnIns> _16233_ins = _16029_f.get()._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1aaab609d_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_16233_ins); };
									_1ac595790_setReferencesAsLive(_self_, &(_16233_ins.get()._field_Refers));
								};
							}
							_iter_next_1a930e1dd:;
							++it;
							goto _iter_begin_1a930e1dd;
						}
						_iter_end_1a930e1dd:;
					};
				}
				_iter_next_1a930d8a2:;
				++it;
				goto _iter_begin_1a930d8a2;
			}
			_iter_end_1a930d8a2:;
		};
	};
}



inline void _1ac595eee_collectLive(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a930d7c5:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _17221_used = *it;
			{
				if ((!(_17221_used.get()._field_Binded))) {
					_1ac595d01_collectLivePackage(_self_, &(_17221_used.get()._field_Package));
				};
			}
			_iter_next_1a930d7c5:;
			++it;
			goto _iter_begin_1a930d7c5;
		}
		_iter_end_1a930d7c5:;
	};
	_1ac595d01_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_1aaab3199_Fn> _18017_main = _1aab291dd_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_1aaab609d_FnIns> _18117_ins = _18017_main.get()._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1aaab609d_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_18117_ins); };
	_1ac595790_setReferencesAsLive(_self_, &(_18117_ins.get()._field_Refers));
}



inline void _1ac5962a7_removeDeadGlobals(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aab68969_Var>>* _18642_vars) {
	jule::I32 _18717_i = 0LL;;
	while ((_18717_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1aab68969_Var> _18917_v = (*(_18642_vars))[_18717_i];;
			if (_1a9301e5b_isLive(_self_, &(_18917_v))) {
				(_18717_i)++;
				goto _iter_next_1a9313b0a;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18717_i),(*(_18642_vars)).slice((_18717_i + 1LL)));
		}
	_iter_next_1a9313b0a:;
	}
	_iter_end_1a9313b0a:;;
}



inline void _1ac596560_removeDeadFns(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aaab3199_Fn>>* _19838_funcs) {
	jule::I32 _19917_i = 0LL;;
	while ((_19917_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1aaab3199_Fn> _20121_f = (*(_19838_funcs))[_19917_i];;
			jule::I32 _20221_j = 0LL;;
			while ((_20221_j < _20121_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1aaab609d_FnIns> _20421_ins = _20121_f.get()._field_Instances[_20221_j];;
					if (_1a92e4635_isLive(_self_, &(_20421_ins))) {
						(_20221_j)++;
						goto _iter_next_1a9316aec;
					};
					_20121_f.get()._field_Instances=jule::append(_20121_f.get()._field_Instances.slice(0LL, _20221_j),_20121_f.get()._field_Instances.slice((_20221_j + 1LL)));
				}
			_iter_next_1a9316aec:;
			}
			_iter_end_1a9316aec:;;
			if ((_20121_f.get()._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19917_i),(*(_19838_funcs)).slice((_19917_i + 1LL)));
				goto _iter_next_1a9315ce9;
			};
			(_19917_i)++;
		}
	_iter_next_1a9315ce9:;
	}
	_iter_end_1a9315ce9:;;
}



inline void _1ac596818_removeDeadStructs(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aaa972b0_Struct>>* _21942_structs) {
	jule::I32 _22017_i = 0LL;;
	while ((_22017_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1aaa972b0_Struct> _22221_s = (*(_21942_structs))[_22017_i];;
			jule::I32 _22321_j = 0LL;;
			while ((_22321_j < _22221_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1aaa9a390_StructIns> _22525_ins = _22221_s.get()._field_Instances[_22321_j];;
					_1ac596560_removeDeadFns(_self_, &(_22525_ins.get()._field_Methods));
					if (((_22525_ins.get()._field_Methods.len() != 0LL) || _1a92eba5a_isLive(_self_, &(_22525_ins)))) {
						(_22321_j)++;
						goto _iter_next_1a931a837;
					};
					_22221_s.get()._field_Instances=jule::append(_22221_s.get()._field_Instances.slice(0LL, _22321_j),_22221_s.get()._field_Instances.slice((_22321_j + 1LL)));
				}
			_iter_next_1a931a837:;
			}
			_iter_end_1a931a837:;;
			if ((_22221_s.get()._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22017_i),(*(_21942_structs)).slice((_22017_i + 1LL)));
				goto _iter_next_1a9319a34;
			};
			(_22017_i)++;
		}
	_iter_next_1a9319a34:;
	}
	_iter_end_1a9319a34:;;
}



inline void _1ac596ac1_removeDeadTraits(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1aaac6443_Trait>>* _24141_traits) {
	jule::I32 _24217_i = 0LL;;
	while ((_24217_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1aaac6443_Trait> _24421_t = (*(_24141_traits))[_24217_i];;
			if ((!(_1a92de6da_isLive(_self_, &(_24421_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24217_i),(*(_24141_traits)).slice((_24217_i + 1LL)));
				goto _iter_next_1a931de9a;
			};
			jule::I32 _24921_j = 0LL;;
			while ((_24921_j < _24421_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1aaa972b0_Struct> _25121_s = _24421_t.get()._field_Implemented[_24921_j];;
					if ((_25121_s.get()._field_Instances.len() > 0LL)) {
						(_24921_j)++;
						goto _iter_next_1a931e82a;
					};
					_24421_t.get()._field_Implemented=jule::append(_24421_t.get()._field_Implemented.slice(0LL, _24921_j),_24421_t.get()._field_Implemented.slice((_24921_j + 1LL)));
				}
			_iter_next_1a931e82a:;
			}
			_iter_end_1a931e82a:;;
			(_24217_i)++;
		}
	_iter_next_1a931de9a:;
	}
	_iter_end_1a931de9a:;;
}



inline void _1ac596d79_removeDeadsFile(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aabb6be8_SymbolTable>* _26240_file) {
	_1ac596560_removeDeadFns(_self_, &((*(_26240_file)).get()._field_Funcs));
	_1ac596818_removeDeadStructs(_self_, &((*(_26240_file)).get()._field_Structs));
	_1ac596ac1_removeDeadTraits(_self_, &((*(_26240_file)).get()._field_Traits));
	_1ac5962a7_removeDeadGlobals(_self_, &((*(_26240_file)).get()._field_Vars));
}



inline void _1ac597132_removeDeadsPackage(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_, jule::Ptr<_1aab27b59_Package>* _26943_pkg) {
	{
		auto expr = &((*(_26943_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9323b70:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _27021_file = *it;
			{
				_1ac596d79_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1a9323b70:;
			++it;
			goto _iter_begin_1a9323b70;
		}
		_iter_end_1a9323b70:;
	};
}



inline void _1ac597330_removeDeads(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93243bd:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _27621_used = *it;
			{
				if ((!(_27621_used.get()._field_Binded))) {
					_1ac597132_removeDeadsPackage(_self_, &(_27621_used.get()._field_Package));
				};
			}
			_iter_next_1a93243bd:;
			++it;
			goto _iter_begin_1a93243bd;
		}
		_iter_end_1a93243bd:;
	};
	_1ac597132_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1ac59752d_elimanate(jule::Ptr<_1ac594abe_ObjectDeadCode> _self_) {
	_1ac595eee_collectLive(_self_);
	_1ac597330_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1ac594abe_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1ab76097d_IR__jule_tuple_s_1c3983b45_Log static__1ab760de0_Build(jule::Str _2721_path, jule::I32 _2732_flags) {
	__jule_tuple_x_1ab76097d_IR__jule_tuple_s_1c3983b45_Log __jule_func_result;
	jule::Ptr<_1ab75ceb9_JuleImporter> _2817_importer = static__1ab75d3b5_New(_1ab7628c5_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1aaa41996_Ast>> _2918_files;;
	jule::Slice<_1c3983b45_Log> _2929_logs;;
	({
		__jule_tuple_sx_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab75e8a0_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1aab27b59_Package> _3918_pkg;;
	({
		__jule_tuple_x_1aab27b59_Package__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1aac234c4_AnalyzePackage(_2918_files, jule::Trait<_1aab21d1d_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1ab76097d_IR> _4417_ir = jule::new_ptr<_1ab76097d_IR>(_1ab76097d_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1ab75d64b_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1ab7626b6_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1ab7613c9_appendStructs(_1ab76097d_IR* _self_, jule::Ptr<_1aab27b59_Package>* _5633_p, jule::Slice<jule::Ptr<_1aaa972b0_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92a6372:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a92a6b7a:;
					if (it != expr_end) {
						jule::Ptr<_1aaa972b0_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1aaa972b0_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1a92a6b7a:;
						++it;
						goto _iter_begin_1a92a6b7a;
					}
					_iter_end_1a92a6b7a:;
				};
			}
			_iter_next_1a92a6372:;
			++it;
			goto _iter_begin_1a92a6372;
		}
		_iter_end_1a92a6372:;
	};
}



inline jule::Slice<jule::Ptr<_1aaa972b0_Struct>> _1ab761660_GetAllStructures(_1ab76097d_IR* _self_) {
	jule::Slice<jule::Ptr<_1aaa972b0_Struct>> _6917_buffer = nullptr;;
	_1ab7613c9_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92a7175:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_Binded))) {
					_1ab7613c9_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1a92a7175:;
			++it;
			goto _iter_begin_1a92a7175;
		}
		_iter_end_1a92a7175:;
	};
	return _6917_buffer;;
}



inline void _1ab7619c3_appendGlobals(_1ab76097d_IR* _self_, jule::Ptr<_1aab27b59_Package>* _7933_p, jule::Slice<jule::Ptr<_1aab68969_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92a9100:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a92a9908:;
					if (it != expr_end) {
						jule::Ptr<_1aab68969_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_Binded))) && (!(_8125_v.get()._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1a92a9908:;
						++it;
						goto _iter_begin_1a92a9908;
					}
					_iter_end_1a92a9908:;
				};
			}
			_iter_next_1a92a9100:;
			++it;
			goto _iter_begin_1a92a9100;
		}
		_iter_end_1a92a9100:;
	};
}



inline jule::Slice<jule::Ptr<_1aab68969_Var>> _1ab761c59_GetAllGlobals(_1ab76097d_IR* _self_) {
	jule::Slice<jule::Ptr<_1aab68969_Var>> _9217_buffer = nullptr;;
	_1ab7619c3_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92aadb0:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_Binded))) {
					_1ab7619c3_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1a92aadb0:;
			++it;
			goto _iter_begin_1a92aadb0;
		}
		_iter_end_1a92aadb0:;
	};
	return _9217_buffer;;
}



inline void _1ab761e57_Order(_1ab76097d_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1ab761660_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1ab761c59_GetAllGlobals(_self_);
	static__1ab763d38_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1ab764069_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _1ab76097d_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1aaa9a714_Str(_1aaa9a390_StructIns* _self_) {
	_1c38d3b83_StrBuilder _25117_kind = static__1c38d3ea2_New(32LL);;
	_1c38dc94a_WriteStr(&_25117_kind, (*(_self_))._field_Decl.get()._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1c38dcc03_WriteByte(&_25117_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a7e512d7:;
			if (it != expr_end) {
				jule::I32 _25517_i = it - expr->begin();
				jule::Ptr<_1aabea80e_InsGeneric> *_25520_g = it;
				{
					_1c38dc94a_WriteStr(&_25117_kind, _1aabec5ad_Str((*(_25520_g)).get()._field_Kind.ptr()));
					if ((_25517_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1c38dcc03_WriteByte(&_25117_kind, ',');
					};
				}
				_iter_next_1a7e512d7:;
				++it;
				_25517_i++;
				goto _iter_begin_1a7e512d7;
			}
			_iter_end_1a7e512d7:;
		};
		_1c38dcc03_WriteByte(&_25117_kind, ']');
	};
	return _1c38dd242_Str(&_25117_kind);;
}



inline jule::Bool _1aaa9aa55_Equal(jule::Ptr<_1aaa9a390_StructIns> _self_, jule::Ptr<_1aabec1e5_TypeKind> _26721_other) {
	jule::Ptr<_1aaa9a390_StructIns> _26813_s = _1aac01161_Struct(_26721_other.ptr());;
	if ((_26813_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26813_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26813_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I32 _28117_i = 0LL;;
	for (; (_28117_i < _self_.get()._field_Generics.len()); (_28117_i)++) {
		{
			if ((!(_1aabec8ee_Equal(_self_.get()._field_Generics[_28117_i].get()._field_Kind, _26813_s.get()._field_Generics[_28117_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1a7e54eab:;
	}
	_iter_end_1a7e54eab:;;
	return true;;
}



inline jule::Bool _1aaa9b00b_Same(_1aaa9a390_StructIns* _self_, jule::Ptr<_1aaa9a390_StructIns> _29519_s) {
	if ((((*(_self_))._field_Decl != _29519_s.get()._field_Decl) || (_29519_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e566b6:;
		if (it != expr_end) {
			jule::I32 _29913_i = it - expr->begin();
			jule::Ptr<_1aabea80e_InsGeneric> *_29916_g = it;
			{
				jule::Ptr<_1aabea80e_InsGeneric> _30017_g2 = _29519_s.get()._field_Generics[_29913_i];;
				if ((((*(_29916_g)).get()._field_Kind.get()._field_BindIdent != _30017_g2.get()._field_Kind.get()._field_BindIdent) || (!(_1aabec8ee_Equal((*(_29916_g)).get()._field_Kind, _30017_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1a7e566b6:;
			++it;
			_29913_i++;
			goto _iter_begin_1a7e566b6;
		}
		_iter_end_1a7e566b6:;
	};
	return true;;
}



inline jule::Ptr<_1aaab3199_Fn> _1aaa9b407_FindMethod(_1aaa9a390_StructIns* _self_, jule::Str _31029_ident, jule::Bool _31041_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e59147:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _31121_f = *it;
			{
				if (((_31121_f.get()._field_Statically == _31041_statically) && (_31121_f.get()._field_Ident == _31029_ident))) {
					return _31121_f;;
				};
			}
			_iter_next_1a7e59147:;
			++it;
			goto _iter_begin_1a7e59147;
		}
		_iter_end_1a7e59147:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa997e0_FieldIns> _1aaa9b748_FindField(_1aaa9a390_StructIns* _self_, jule::Str _32128_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e59059:;
		if (it != expr_end) {
			jule::Ptr<_1aaa997e0_FieldIns> _32221_f = *it;
			{
				if ((_32221_f.get()._field_Decl.get()._field_Ident == _32128_ident)) {
					return _32221_f;;
				};
			}
			_iter_next_1a7e59059:;
			++it;
			goto _iter_begin_1a7e59059;
		}
		_iter_end_1a7e59059:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aab68969_Var> _1aaa9ba89_FindStatic(_1aaa9a390_StructIns* _self_, jule::Str _33229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e5b15a:;
		if (it != expr_end) {
			jule::Ptr<_1aab68969_Var> _33321_v = *it;
			{
				if ((_33321_v.get()._field_Ident == _33229_ident)) {
					return _33321_v;;
				};
			}
			_iter_next_1a7e5b15a:;
			++it;
			goto _iter_begin_1a7e5b15a;
		}
		_iter_end_1a7e5b15a:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aaa9a390_StructIns _Src) {
	_Stream << _1aaa9a714_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1c3a4282a_Cmd> static__1c3a42c48_New(jule::Str _2619_path) {
	return jule::new_ptr<_1c3a4282a_Cmd>(_1c3a4282a_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1c3a42e46_Spawn(_1c3a4282a_Cmd* _self_) {
	({
		auto except = _1c3a92e1e_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _1c3a433ca_Wait(_1c3a4282a_Cmd* _self_) {
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(({
		auto except = _1c3a933a3_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I32>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _1c3a92e1e_spawn(_1c3a4282a_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:78:13"));;
	};
	jule::Str _8013_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8113_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8113_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0));
	};
	if ((_206b38bc9_Fcntl(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])), F_SETFD, static_cast<jule::I32>((fcntl(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_206b66454_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[0LL])));
		_206b66454_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I32>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1a656edad:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a656e264:;
			{
				_206b66454_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[0LL])));
				jule::Slice<jule::Str> _9621_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9621_args[0LL]=_8013_path;
				(_9621_args).append((*(_self_))._field_Args);;
				({
					auto except = _1c3a92bbb_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_1c3a9298a_execvp(&(_8013_path), &(_9621_args));
				jule::Str _10117_code = _1c3a8dca5_Itoa(static_cast<jule::I32>(_205b16ee9_GetLastErrno()));;
				{
					_206b66883_Write(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])), (&(_10117_code[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_10117_code.len())));
				};
				_206b66454_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])));
				_1c3a946b2_Exit(1LL);
			}
		}
		else {
			_case_begin_1a65699ce:;
			{
				_206b66454_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])));
				jule::Array<jule::U8,16> _10721_buf = jule::Array<jule::U8,16>(0);;
				jule::I32 _10817_n = _206b660ad_Read(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[0LL])), (&(_10721_buf[0LL])), 16LLU);;
				_206b66454_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[0LL])));
				if ((_10817_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I32 _11222_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c3a441cd_AtoiBp((&(_10721_buf[0LL])), _10817_n);
						_11222_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_1c3a93b45_processErrorFromCode(_11222_code), &__jule_any_type0));
				};
			}
		}
		_match_end_1a656c075:;
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _1c3a933a3_wait(_1c3a4282a_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:130:13"));;
	};
	jule::I32 _13217_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13217_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I32>(jule::Any(_1c3a93d98_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(WEXITSTATUS(_13217_stat)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1c3a4282a_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _206ae85d4_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _206b29406_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I32 _7313_n = 0LL;;
	{
		for (; (_6924_s[_7313_n] != 0LLU); (_7313_n)++) {
			{
			}
		_iter_next_1a65cc349:;
		}
		_iter_end_1a65cc349:;;
	};
	if ((_7313_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _8013_buf = jule::Slice<jule::U8>::alloc(_7313_n, _7313_n, 0);;
	_7313_n=0LL;
	{
		for (; (_6924_s[_7313_n] != 0LLU); (_7313_n)++) {
			{
				_8013_buf[_7313_n]=_6924_s[_7313_n];
			}
		_iter_next_1a65cdc85:;
		}
		_iter_end_1a65cdc85:;;
	};
	return static_cast<jule::Str>(_8013_buf);;
}



inline jule::I32 _205b16ee9_GetLastErrno(void) {
	return errno;;
}



inline jule::I32 _206b38bc9_Fcntl(jule::I32 _5410_handle, jule::I32 _5423_cmd, jule::I32 _5433_arg) {
	return static_cast<jule::I32>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I32 _206b3904d_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I32>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I32 _206b3947c_Open(jule::U8* _6416_path, jule::I32 _6429_flag, jule::I32 _6440_mode) {
	return static_cast<jule::I32>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _206b39801_Getcwd(jule::U8* _7018_buff, jule::U32 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _206b39ceb_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _206b3a0b5_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I32 _206b3a37e_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I32>(closedir(_8124_dir));;
}



inline jule::I32 _206b3ac86_Mkdir(jule::U8* _9017_path, jule::I32 _9030_mode) {
	return static_cast<jule::I32>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I32 _206b3b050_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I32>(rmdir(((char*)(_9517_path))));;
}



inline jule::I32 _206b3b319_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I32>(unlink(((char*)(_9818_path))));;
}



inline jule::I32 _206b660ad_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return static_cast<jule::I32>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I32 _206b66454_Close(jule::I32 _2510_handle) {
	return static_cast<jule::I32>(close(_2510_handle));;
}



inline jule::I32 _206b66883_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return static_cast<jule::I32>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _206b66ab4_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _206b74495_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline jule::I32 _206d22016_getLastOsError(void) {
	jule::I32 _309_err = _205b16ee9_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a6631a63:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a6631425:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a663149c:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a6631524:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a6631788:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a66317ee:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a6631865:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else {
			_case_begin_1a663139d:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1a6631348:;
	};
}



inline jule::Slice<jule::Str> _206d4ac65_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _206d4b20a_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _206d4bb45_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _206d4bb45_getwd(void) {
	jule::U8* _1113_buff = _206b39801_Getcwd(nullptr, 0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_206d22016_getLastOsError(), &__jule_any_type0));
	};
	jule::Str _159_pwd = _206b29406_BytePtrToStr(_1113_buff);;
	{
		_206ae85d4_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _1de93149a_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1de9915d7__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1de999bd9_isExcludingLatin(_1de93a707_Letter, _7613_r);;
}



inline jule::Bool _1de99905c_is16(jule::Slice<_1de9972be_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a729ea21:;
			if (it != expr_end) {
				jule::I32 _19313_i = it - expr->begin();
				{
					_1de9972be_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a729ea21:;
				++it;
				_19313_i++;
				goto _iter_begin_1a729ea21;
			}
			_iter_end_1a729ea21:;
		};
		return false;;
	};
	jule::I32 _20813_lo = 0LL;;
	jule::I32 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I32 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1de9972be_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I32>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1a729d7ab:;
	}
	_iter_end_1a729d7ab:;;
	return false;;
}



inline jule::Bool _1de9993d1_is32(jule::Slice<_1de9977ec_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a72a375b:;
			if (it != expr_end) {
				jule::I32 _23013_i = it - expr->begin();
				{
					_1de9977ec_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1a72a375b:;
				++it;
				_23013_i++;
				goto _iter_begin_1a72a375b;
			}
			_iter_end_1a72a375b:;
		};
		return false;;
	};
	jule::I32 _24513_lo = 0LL;;
	jule::I32 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I32 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1de9977ec_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I32>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1a72a367e:;
	}
	_iter_end_1a72a367e:;;
	return false;;
}



inline jule::Bool _1de999bd9_isExcludingLatin(jule::Ptr<_1de997ca3_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1de9972be_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I32 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _1de99905c_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_1de9977ec_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _1de9993d1_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _1de999ea3_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1de9915d7__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1de999bd9_isExcludingLatin(_1de941c5d_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _1c387c9ea_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _1c387b851_first[static_cast<jule::I32>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1959_sz = static_cast<jule::I32>((_1879_x & 7LLU));;
	_1c387bdd4_acceptRange _1969_accept = _1c387c1e2_acceptRanges[static_cast<jule::I32>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1c387d105_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _2809_end = _27619_p.len();;
	jule::I32 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1c387eb2e_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1a72e7b57;
			};
		}
	_iter_next_1a72e7b57:;
	}
	_iter_end_1a72e7b57:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1c387de5d_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _1c387e2d2_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1c387e2d2_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1a730bdad:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1a730a450:;
			{
				_41242_r=128LL;
				goto _case_begin_1a730c1cc;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1a730c1cc:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1a7309c9b:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1a7309c35:;
	};
}



inline jule::I32 _1c387e865_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1a7315d84;
			};
			jule::U8 _48213_x = _1c387b851_first[static_cast<jule::I32>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1a7315d84;
			};
			jule::I32 _48717_size = static_cast<jule::I32>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1a7315d84;
			};
			_1c387bdd4_acceptRange _49213_accept = _1c387c1e2_acceptRanges[static_cast<jule::I32>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1a7315d84:;
	}
	_iter_end_1a7315d84:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1c387eb2e_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _1c38aa1cb_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7336613:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1a7336613:;
			++it;
			_399_i++;
			goto _iter_begin_1a7336613;
		}
		_iter_end_1a7336613:;
	};
	return -1LL;;
}



inline jule::I32 _1c38bc809_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _549_first = (&(_5017_s[0LL]));;
	jule::U8* _5513_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5513_it >= _549_first); (_5513_it)--) {
		{
			{
				if (((*(_5513_it)) == _5028_b)) {
					return static_cast<jule::I32>(((jule::I32)((_5513_it - _549_first))));;
				};
			};
		}
	_iter_next_1a7338082:;
	}
	_iter_end_1a7338082:;;
	return -1LL;;
}



inline jule::I32 _1c38bcbb1_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I32>(_1c38aa1cb_FindByte(_206b74495_Stobs(_6717_s), _6725_b));;
}



inline jule::I32 _1c38bd035_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I32>(_1c38bc809_FindLastByte(_206b74495_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _1c38bd497_Repeat(jule::Str _1211_s, jule::I32 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(2147483647LL,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	_1c38d3b83_StrBuilder _2013_ss = static__1c38d3ea2_New(static_cast<jule::I32>((_1211_s.len() * _1223_n)));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_1c38dc94a_WriteStr(&_2013_ss, _1211_s);
		}
	_iter_next_1a735bdb9:;
	}
	_iter_end_1a735bdb9:;;
	return _1c38dd242_Str(&_2013_ss);;
}



inline jule::Bool _1c38bd91a_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I32 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I32 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_3213_i + 1LL));
		jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1a735ec68:;
	}
	_iter_end_1a735ec68:;;
	return true;;
}



inline jule::Bool _1c38bdc8e_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _1c38bd91a_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _1c38be245_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I32 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I32>(((*(_4615_s)).len() - _4638_start));
	jule::I32 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1a7361ab1:;
	}
	_iter_end_1a7361ab1:;;
	return true;;
}



inline jule::Bool _1c38be586_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _1c38be245_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I32 _1c38be9b5_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I32 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_1c38bd91a_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1a7364993:;
	}
	_iter_end_1a7364993:;;
	return -1LL;;
}



inline jule::I32 _1c38c0378_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I32 _9333_i) {
	jule::I32 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1a7367cb5:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I32 _10017_k = _9413_j;;
			jule::I32 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_10017_k + 1LL));
				jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1a7367941;
					};
				}
			_iter_next_1a7368aa7:;
			}
			_iter_end_1a7368aa7:;;
			return _9413_j;;
		}
	_iter_next_1a7367941:;
	}
	_iter_end_1a7367941:;;
	return -1LL;;
}



inline jule::I32 _1c38c06ec_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I32>(_1c38c0378_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I32>((_11513_s.len() - 1LL))));;
}



inline jule::I32 _1c38c1ac7_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I32 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I32 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1a73711ca:;
	}
	_iter_end_1a73711ca:;;
	return -1LL;;
}



inline jule::I32 _1c38c2479_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I32>(_1c38bd035_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I32 _1c38c336a_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _206b74495_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _206b74495_Stobs(&(_22820_runes));;
	jule::I32 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I32 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1c38c1ac7_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1a7376521:;
	}
	_iter_end_1a7376521:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1c38c3b1d_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I32 _26232_n) {
	jule::I32 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I32>(_26210_s.len());
	};
	jule::I32 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I32 _27613_j = _1c38be9b5_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1a737c79c;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i, _27613_j)); };
			_27413_i=static_cast<jule::I32>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1a737c79c:;
	}
	_iter_end_1a737c79c:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i)); };
	};
	return _26713_parts;;
}



inline jule::Bool _1c38c3e92_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_1c38be9b5_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _1c38c4a0e_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_1c38c336a_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I32 _1c38c4d83_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _31613_n = 0LL;;
	jule::I32 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I32 _31913_j = _1c38be9b5_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1a73829c2;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I32>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1a73829c2:;
	}
	_iter_end_1a73829c2:;;
	return _31613_n;;
}



inline jule::Str _1c38c536c_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I32 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I32 _3379_m = _1c38c4d83_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	_1c38d3b83_StrBuilder _34513_ss = static__1c38d3ea2_New(static_cast<jule::I32>((_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len())))));;
	jule::I32 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I32 _34813_j = _1c38be9b5_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1a7386443;
			};
			_1c38dc94a_WriteStr(&_34513_ss, _33212_s.slice(_34613_i, _34813_j));
			_1c38dc94a_WriteStr(&_34513_ss, _33230_new);
			_34613_i=static_cast<jule::I32>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1a7386443:;
	}
	_iter_end_1a7386443:;;
	_1c38dc94a_WriteStr(&_34513_ss, _33212_s.slice(_34613_i));
	return _1c38dd242_Str(&_34513_ss);;
}



inline void _1c38c2116_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I32 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I32 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1c38c1ac7_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1a738b734:;
	}
	_iter_end_1a738b734:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _1c38c6516_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _206b74495_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _206b74495_Stobs(&(_40321_cutset));;
	_1c38c2116_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _1c38c6802_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I32 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I32 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387d105_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1c38c1ac7_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1a738e380:;
	}
	_iter_end_1a738e380:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _1c38c6eea_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _206b74495_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _206b74495_Stobs(&(_43417_cutset));;
	_1c38c2116_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_1c38c6802_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _1c38c736e_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1a73930ed:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1a7393175:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1a7392e11:;
	};
	jule::I32 _45113_n = 0LL;;
	{
		auto expr = &(_4449_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a739354e:;
		if (it != expr_end) {
			jule::Str *_45212_part = it;
			{
				_45113_n+=(*(_45212_part)).len();
				(_45113_n)++;
			}
			_iter_next_1a739354e:;
			++it;
			goto _iter_begin_1a739354e;
		}
		_iter_end_1a739354e:;
	};
	_1c38d3b83_StrBuilder _45613_s = static__1c38d3ea2_New(_45113_n);;
	_1c38dc94a_WriteStr(&_45613_s, _4449_parts[0LL]);
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1a7394462:;
		if (it != expr_end) {
			jule::Str *_45812_part = it;
			{
				_1c38dc94a_WriteStr(&_45613_s, _44423_sep);
				_1c38dc94a_WriteStr(&_45613_s, (*(_45812_part)));
			}
			_iter_next_1a7394462:;
			++it;
			goto _iter_begin_1a7394462;
		}
		_iter_end_1a7394462:;
	};
	return _1c38dd242_Str(&_45613_s);;
}



inline jule::Str _1c38e073e_Clean(jule::Str _10914_path) {
	jule::Str _1109_originalPath = _10914_path;;
	jule::I32 _1119_volLen = _1c38e35cc_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1119_volLen);;
	if (_10914_path.empty()) {
		if ((((_1119_volLen > 1LL) && _1c38e3005_IsPathSep(_1109_originalPath[0LL])) && _1c38e3005_IsPathSep(_1109_originalPath[1LL]))) {
			return _1c38e0d16_FromSlash(_1109_originalPath);;
		};
		return (_1109_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1209_rooted = _1c38e3005_IsPathSep(_10914_path[0LL]);;
	jule::I32 _1279_n = _10914_path.len();;
	_1c38de8d6_lazyBuff _12813_out = _1c38de8d6_lazyBuff{._field_path=_206b74495_Stobs(&(_10914_path)), ._field_volAndPath=_1109_originalPath, ._field_volLen=_1119_volLen};;
	jule::I32 _13314_r = 0;;
	jule::I32 _13321_dotdot = 0;;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_13314_r = ___jule_assign_arg;
		_13321_dotdot = _1___jule_assign_arg;
	});
	if (_1209_rooted) {
		_1c38e00e0_append(&_12813_out, 47LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_13314_r = ___jule_assign_arg;
			_13321_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13314_r < _1279_n)) {
		{
			{
				
				if (_1c38e3005_IsPathSep(_10914_path[_13314_r])) {
					_case_begin_1a65092ed:;
					{
						(_13314_r)++;
					}
				}
				else if (((_10914_path[_13314_r] == '.') && (((_13314_r + 1LL) == _1279_n) || _1c38e3005_IsPathSep(_10914_path[(_13314_r + 1LL)])))) {
					_case_begin_1a6505d33:;
					{
						(_13314_r)++;
					}
				}
				else if ((((_10914_path[_13314_r] == '.') && (_10914_path[(_13314_r + 1LL)] == '.')) && (((_13314_r + 2LL) == _1279_n) || _1c38e3005_IsPathSep(_10914_path[(_13314_r + 2LL)])))) {
					_case_begin_1a6505d99:;
					{
						_13314_r+=2LL;
						{
							
							if ((_12813_out._field_w > _13321_dotdot)) {
								_case_begin_1a650c06a:;
								{
									(_12813_out._field_w)--;
									while (((_12813_out._field_w > _13321_dotdot) && (!(_1c38e3005_IsPathSep(static_cast<jule::U8>(_1c38ded37_index(&_12813_out, _12813_out._field_w))))))) {
										{
											(_12813_out._field_w)--;
										}
									_iter_next_1a650cae8:;
									}
									_iter_end_1a650cae8:;;
								}
							}
							else if ((!(_1209_rooted))) {
								_case_begin_1a650c411:;
								{
									if ((_12813_out._field_w > 0LL)) {
										_1c38e00e0_append(&_12813_out, 47LLU);
									};
									_1c38e00e0_append(&_12813_out, '.');
									_1c38e00e0_append(&_12813_out, '.');
									_13321_dotdot=_12813_out._field_w;
								}
							}
							_match_end_1a650c39a:;
						};
					}
				}
				else {
					_case_begin_1a6505cbc:;
					{
						if (((_1209_rooted && (_12813_out._field_w != 1LL)) || ((!(_1209_rooted)) && (_12813_out._field_w != 0LL)))) {
							_1c38e00e0_append(&_12813_out, 47LLU);
						};
						;
						for (; ((_13314_r < _1279_n) && (!(_1c38e3005_IsPathSep(_10914_path[_13314_r])))); (_13314_r)++) {
							{
								_1c38e00e0_append(&_12813_out, _10914_path[_13314_r]);
							}
						_iter_next_1a6508ce2:;
						}
						_iter_end_1a6508ce2:;;
					}
				}
				_match_end_1a650598c:;
			};
		}
	_iter_next_1a65053d7:;
	}
	_iter_end_1a65053d7:;;
	if ((_12813_out._field_w == 0LL)) {
		_1c38e00e0_append(&_12813_out, '.');
	};
	return _1c38e0d16_FromSlash(_1c38e0376_string(&_12813_out));;
}



inline jule::Str _1c38e0d16_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1c38e1157_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1c38e3bd7_join(_2269_elem);;
}



inline jule::Str _1c38e1421_Ext(jule::Str _2318_path) {
	jule::I32 _23213_i = (_2318_path.len() - 1LL);;
	for (; ((_23213_i >= 0LL) && (!(_1c38e3005_IsPathSep(_2318_path[_23213_i])))); (_23213_i)--) {
		{
			if ((_2318_path[_23213_i] == '.')) {
				return _2318_path.slice(_23213_i);;
			};
		}
	_iter_next_1a65112d3:;
	}
	_iter_end_1a65112d3:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1c38e16da_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24710_abs_path;;
	jule::Bool _24720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c38e391d_abs(_2468_path);
		_24710_abs_path = __jule_assign_result.__jule_result_arg0;
		_24720_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24710_abs_path;
	__jule_func_result.__jule_result_arg1 = _24720_ok;
	return __jule_func_result;;
}



inline jule::Str _1c38e19a4_Base(jule::Str _25513_path) {
	if (_25513_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _1c38e3005_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1a6513912:;
	}
	_iter_end_1a6513912:;;
	(_25513_path).mut_slice(_1c38e2114_VolumeName(_25513_path).len());;
	jule::I32 _26613_i = (_25513_path.len() - 1LL);;
	while (((_26613_i >= 0LL) && (!(_1c38e3005_IsPathSep(_25513_path[_26613_i]))))) {
		{
			(_26613_i)--;
		}
	_iter_next_1a65150d9:;
	}
	_iter_end_1a65150d9:;;
	if ((_26613_i >= 0LL)) {
		(_25513_path).mut_slice((_26613_i + 1LL));;
	};
	if (_25513_path.empty()) {
		return jule::Str("/", 1);;
	};
	return _25513_path;;
}



inline jule::Str _1c38e1d4a_Dir(jule::Str _2868_path) {
	jule::Str _2879_vol = _1c38e2114_VolumeName(_2868_path);;
	jule::I32 _28813_i = (_2868_path.len() - 1LL);;
	while (((_28813_i >= _2879_vol.len()) && (!(_1c38e3005_IsPathSep(_2868_path[_28813_i]))))) {
		{
			(_28813_i)--;
		}
	_iter_next_1a65171b8:;
	}
	_iter_end_1a65171b8:;;
	jule::Str _2929_dir = _1c38e073e_Clean(_2868_path.slice(_2879_vol.len(), (_28813_i + 1LL)));;
	if ((_2929_dir.equal(".", 1) && (_2879_vol.len() > 2LL))) {
		return _2879_vol;;
	};
	return (_2879_vol + _2929_dir);;
}



inline jule::Str _1c38e2114_VolumeName(jule::Str _30415_path) {
	return _1c38e0d16_FromSlash(_30415_path.slice(0LL, _1c38e35cc_volumeNameLen(_30415_path)));;
}



inline jule::Bool _1c38e3005_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1c38e3313_IsAbs(jule::Str _5310_path) {
	return _1c38bdc8e_HasPrefix(_5310_path, jule::Str("/", 1));;
}



inline jule::I32 _1c38e35cc_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1c38e391d_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1c38e3313_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1c38e073e_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _206d4b20a_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1c38e3bd7_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1c38e3bd7_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a65207ed:;
		if (it != expr_end) {
			jule::I32 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if ((!((*(_7412_e)).empty()))) {
					return _1c38e073e_Clean(_1c38c736e_Join(_739_elem.slice(_749_i), jule::Str("/", 1)));;
				};
			}
			_iter_next_1a65207ed:;
			++it;
			_749_i++;
			goto _iter_begin_1a65207ed;
		}
		_iter_end_1a65207ed:;
	};
	return jule::Str();;
}



inline jule::I32 _206b6b833_getLastFsError(void) {
	jule::I32 _729_err = _205b16ee9_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1a652dc4b:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1a652d421:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1a652d5ec:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1a652d663:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a652d6c9:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1a652d740:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1a652dd7d:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1a652dde4:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1a652de5a:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1a652dec1:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1a652e048:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1a652e0c0:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1a652e147:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1a652e1be:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1a652e246:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1a652e2bd:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1a652e345:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1a652e3bc:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1a652e444:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1a652e4bb:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1a652e543:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1a652e5ba:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1a652e642:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1a652e6b9:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1a652e741:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1a652e7b8:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1a652e840:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1a652e8b7:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1a652d586:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1a652d531:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1c3a441cd_AtoiBp(jule::U8* _922_b, jule::I32 _936_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _1013_neg = ((*(_922_b)) == '-');;
	if (_1013_neg) {
		if ((_936_n == 1LL)) {
			return __jule_func_result;;
		};
		(_936_n)--;
		(_922_b)++;
	};
	for (; (_936_n > 0LL); (_936_n)--) {
		{
			if ((('0' <= (*(_922_b))) && ((*(_922_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I32>(((*(_922_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_922_b)++;
		}
	_iter_next_1a655448b:;
	}
	_iter_end_1a655448b:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_1013_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I32>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _1c3a8dca5_Itoa(jule::I32 _69_x) {
	if ((_69_x < 0LL)) {
		return (jule::Str("-", 1) + _1c3a8e0b3_Utoa(static_cast<jule::U32>(static_cast<jule::U32>((-(_69_x))))));;
	};
	return _1c3a8e0b3_Utoa(static_cast<jule::U32>(static_cast<jule::U32>(_69_x)));;
}



inline jule::Str _1c3a8e0b3_Utoa(jule::U32 _1413_x) {
	if ((_1413_x == 0LLU)) {
		return jule::Str("0", 1);;
	};
	jule::Slice<jule::U8> _1813_buf = jule::Slice<jule::U8>::alloc(20LL, 20LL, 0);;
	jule::I32 _1913_i = (_1813_buf.len() - 1LL);;
	while ((_1413_x >= 10LLU)) {
		{
			jule::U32 _2113_q = (_1413_x / 10LLU);;
			_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1413_x) - (_2113_q * 10LLU))));
			(_1913_i)--;
			_1413_x=_2113_q;
		}
	_iter_next_1a655b042:;
	}
	_iter_end_1a655b042:;;
	_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1413_x)));
	_1813_buf=_1813_buf.slice(_1913_i);
	return static_cast<jule::Str>(_1813_buf);;
}



inline jule::Slice<char*> _1c3a92616_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s) {
	jule::Slice<char*> _3613_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a6578955:;
		if (it != expr_end) {
			jule::I32 _379_i = it - expr->begin();
			{
				_3613_cs[_379_i]=((char*)((&((*(_3525_s))[_379_i][0LL]))));
			}
			_iter_next_1a6578955:;
			++it;
			_379_i++;
			goto _iter_begin_1a6578955;
		}
		_iter_end_1a6578955:;
	};
	_3613_cs[(_3613_cs.len() - 1LL)]=nullptr;
	return _3613_cs;;
}



inline jule::I32 _1c3a9298a_execvp(jule::Str* _4412_file, jule::Slice<jule::Str>* _4424_argv) {
	jule::Slice<char*> _459_cargv = _1c3a92616_strSliceToCstrSlice(_4424_argv);;
	{
		return static_cast<jule::I32>(execvp(((char*)((&((*(_4412_file))[0LL])))), (char*const*)(&(_459_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _1c3a92bbb_setenv(jule::Slice<jule::Str>* _5112_envv) {
	;
	{
		auto expr = _5112_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a657b914:;
		if (it != expr_end) {
			jule::Str *_5312_env = it;
			{
				jule::I32 _5413_i = _1c38bcbb1_FindByteStr(_5312_env, '=');;
				if ((_5413_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
				};
				{
					jule::Str _5917_key = (*(_5312_env)).slice(0LL, _5413_i);;
					if ((((*(_5312_env)).len() - _5413_i) == 1LL)) {
						jule::Str _6121_val = jule::Str("\x00", 1);;
						if ((setenv(((char*)((&(_5917_key[0LL])))), ((char*)((&(_6121_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
						};
					} else {
						jule::Str _6621_val = (*(_5312_env)).slice((_5413_i + 1LL));;
						if ((setenv(((char*)((&(_5917_key[0LL])))), ((char*)((&(_6621_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
						};
					};
				};
			}
			_iter_next_1a657b914:;
			++it;
			goto _iter_begin_1a657b914;
		}
		_iter_end_1a657b914:;
	};
	return jule::VoidExceptional();
}



inline jule::I32 _1c3a93b45_processErrorFromCode(jule::I32 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1a65813a8:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1a657bc11:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1a657cd99:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1a65810de:;
	};
}



inline jule::I32 _1c3a93d98_getLastProcessError(void) {
	return _1c3a93b45_processErrorFromCode(static_cast<jule::I32>(_205b16ee9_GetLastErrno()));;
}



inline void _1c3a946b2_Exit(jule::I32 _129_code) {
	_206b66ab4_Exit(_129_code);
}



inline jule::Str _1c3a948c1_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1c397682a_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1c3976ad3_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1c38e53d1_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a65a8c93:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1a65a8c93:;
			++it;
			goto _iter_begin_1a65a8c93;
		}
		_iter_end_1a65a8c93:;
	};
	return false;;
}



inline jule::Bool _1c3976d9c_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1c3974a8c_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a65aa2e4:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1a65aa2e4:;
			++it;
			goto _iter_begin_1a65aa2e4;
		}
		_iter_end_1a65aa2e4:;
	};
	{
		auto expr = &(_1c397672b_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a65aa228:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1a65aa228:;
			++it;
			goto _iter_begin_1a65aa228;
		}
		_iter_end_1a65aa228:;
	};
	return false;;
}



inline jule::Str _1c39840a7_Logf(jule::Str _3189_fmt, jule::Slice<jule::Any> _31822_args) {
	return _1c39898a4_applyFmt(_3189_fmt, _31822_args);;
}



inline jule::Str _1c39892bb_argToStr(jule::Any _32213_arg) {
	{
		auto &_match_expr{ _32213_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a65aa987:;
			{
				return _32213_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1a65ac428:;
			{
				return jule::Str::from_byte(_32213_arg.cast<jule::U8>(&__jule_any_type131));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a65ac48e:;
			{
				return jule::Str::from_rune(_32213_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1a65abd51:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1a65abceb:;
	};
}



inline jule::I32 _1c39894db_findNextFmt(jule::Str _33516_fmt) {
	{
		auto expr = &(_33516_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a65ad209:;
		if (it != expr_end) {
			jule::I32 _3369_i = it - expr->begin();
			jule::U8 *_33612_b = it;
			{
				if (((*(_33612_b)) == '@')) {
					return _3369_i;;
				};
			}
			_iter_next_1a65ad209:;
			++it;
			_3369_i++;
			goto _iter_begin_1a65ad209;
		}
		_iter_end_1a65ad209:;
	};
	return -1LL;;
}



inline jule::Str _1c39898a4_applyFmt(jule::Str _34417_fmt, jule::Slice<jule::Any> _34427_args) {
	_1c38d3b83_StrBuilder _34513_s = static__1c38d3ea2_New(32LL);;
	{
		auto expr = &(_34427_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a65adb55:;
		if (it != expr_end) {
			jule::Any *_34612_arg = it;
			{
				jule::I32 _34713_i = _1c39894db_findNextFmt(_34417_fmt);;
				if ((_34713_i == -1LL)) {
					goto _iter_end_1a65adb55;
				};
				_1c38dc94a_WriteStr(&_34513_s, _34417_fmt.slice(0LL, _34713_i));
				_1c38dc94a_WriteStr(&_34513_s, _1c39892bb_argToStr((*(_34612_arg))));
				(_34417_fmt).mut_slice((_34713_i + 1LL));;
			}
			_iter_next_1a65adb55:;
			++it;
			goto _iter_begin_1a65adb55;
		}
		_iter_end_1a65adb55:;
	};
	_1c38dc94a_WriteStr(&_34513_s, _34417_fmt);
	return _1c38dd242_Str(&_34513_s);;
}



inline jule::Bool _1c398a94e_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _1c398bda1_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1c398c17b_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1c398c445_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1c398c786_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1c398ca50_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1c398cd19_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1c398d0d3_IsUnix(jule::Str _5511_os) {
	return (_1c398c17b_IsDarwin(_5511_os) || _1c398c445_IsLinux(_5511_os));;
}



inline jule::Bool _1c398d479_Is32Bit(jule::Str _5812_arch) {
	return _1c398c786_IsI386(_5812_arch);;
}



inline jule::Bool _1c398d743_Is64Bit(jule::Str _6112_arch) {
	return (_1c398ca50_IsAmd64(_6112_arch) || _1c398cd19_IsArm64(_6112_arch));;
}



inline void _1c3a95b9c_init(void) {
	jule::Str _2513_path = _1c3a948c1_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1c3a951c9_PathWd=({
			auto except = _206d4b20a_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1c3a94e21_PathExec=_1c38e1d4a_Dir(_2513_path);
		_1c3a94bbd_PathStdlib=_1c38e1157_Join(jule::Slice<jule::Str>::make({_1c3a94e21_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_1c3a954d7_PathApi=_1c38e1157_Join(jule::Slice<jule::Str>::make({_1c3a94e21_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1c3e3ad33_IsUnaryOp(jule::U32 _33414_id) {
	{
		auto expr = &(_1c3d89da3_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74d4ddd:;
		if (it != expr_end) {
			jule::U32 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1a74d4ddd:;
			++it;
			goto _iter_begin_1a74d4ddd;
		}
		_iter_end_1a74d4ddd:;
	};
	return false;;
}



inline jule::Bool _1c3e3b141_IsBinOp(jule::U32 _34412_id) {
	{
		auto expr = &(_1c3d8a14a_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74d5251:;
		if (it != expr_end) {
			jule::U32 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1a74d5251:;
			++it;
			goto _iter_begin_1a74d5251;
		}
		_iter_end_1a74d5251:;
	};
	return false;;
}



inline jule::Bool _1c3e3b74b_IsStr(jule::Str _36410_k) {
	return ((!(_36410_k.empty())) && ((_36410_k[0LL] == '\"') || _1c3e3ba15_IsRawStr(_36410_k)));;
}



inline jule::Bool _1c3e3ba15_IsRawStr(jule::Str _36713_k) {
	return ((!(_36713_k.empty())) && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1c3e3bcce_IsRune(jule::Str _37111_k) {
	return ((!(_37111_k.empty())) && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1c3e3c708_IsFloat(jule::Str _38012_k) {
	if (_1c38bdc8e_HasPrefix(_38012_k, jule::Str("0x", 2))) {
		return _1c38c4a0e_ContainsAny(_38012_k, jule::Str(".pP", 3));;
	};
	return _1c38c4a0e_ContainsAny(_38012_k, jule::Str(".eE", 3));;
}



inline jule::Bool _1c3e3c9c2_IsNum(jule::Str _38810_k) {
	if (_38810_k.empty()) {
		return false;;
	};
	jule::U8 _3939_b = _38810_k[0LL];;
	return ((_3939_b == '.') || (('0' <= _3939_b) && (_3939_b <= '9')));;
}



inline jule::Bool _1c3e3d055_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1c3e3d31e_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1c3e3d8a2_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1c3d89b83_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74dc830:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1a74dc830:;
			++it;
			goto _iter_begin_1a74dc830;
		}
		_iter_end_1a74dc830:;
	};
	return false;;
}



inline jule::Bool _1c3e3dd25_IsLetter(jule::I32 _42913_r) {
	return _1de93149a_IsLetter(_42913_r);;
}



inline jule::Bool _1c3e3e3a8_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1c3e3e672_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1c3e3e93b_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1c3e3ec05_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1a74e1559:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1a74e15d1:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1a74e1658:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a74e148d:;
			{
				return false;;
			}
		}
		_match_end_1a74e03e3:;
	};
}



inline jule::Bool _1c3e3eebe_IsAssign(jule::U32 _47313_id) {
	return (((((((_47313_id == static_cast<jule::U32>(1LLU)) || (_47313_id == static_cast<jule::U32>(27LLU))) || (_47313_id == static_cast<jule::U32>(30LLU))) || (_47313_id == static_cast<jule::U32>(32LLU))) || (_47313_id == static_cast<jule::U32>(24LLU))) || (_47313_id == static_cast<jule::U32>(74LLU))) || (_47313_id == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _1c3e40288_IsPostfixOp(jule::U32 _48416_id) {
	{
		auto expr = &(_1c3e34aa7_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74e2e62:;
		if (it != expr_end) {
			jule::U32 *_48512_op = it;
			{
				if ((_48416_id == (*(_48512_op)))) {
					return true;;
				};
			}
			_iter_next_1a74e2e62:;
			++it;
			goto _iter_begin_1a74e2e62;
		}
		_iter_end_1a74e2e62:;
	};
	return false;;
}



inline jule::Bool _1c3e40552_IsAssignOp(jule::U32 _49415_id) {
	if (_1c3e40288_IsPostfixOp(_49415_id)) {
		return true;;
	};
	{
		auto expr = &(_1c3e34da4_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74e4e64:;
		if (it != expr_end) {
			jule::U32 *_49812_op = it;
			{
				if ((_49415_id == (*(_49812_op)))) {
					return true;;
				};
			}
			_iter_next_1a74e4e64:;
			++it;
			goto _iter_begin_1a74e4e64;
		}
		_iter_end_1a74e4e64:;
	};
	return false;;
}



inline jule::Ptr<_1c3e40db0_File> _1c3e42257_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1c3e40db0_File>(_1c3e40db0_File{._field_Path=_5715_path, });;
}



inline _1c3983b45_Log _1c3e43ca3_makeErr(jule::I32 _10012_row, jule::I32 _10022_col, jule::Ptr<_1c3e40db0_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1c3983b45_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*(_10033_f)).get()._field_Path, ._field_Text=_1c39840a7_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1c3e4416b_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a74eec93:;
		if (it != expr_end) {
			jule::I32 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1a74eec93:;
			++it;
			_1149_i++;
			goto _iter_begin_1a74eec93;
		}
		_iter_end_1a74eec93:;
	};
	return true;;
}



inline jule::Str _1c3e444e0_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I32 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _12813_b = (*(_12215_txt))[_12232_i];;
	if ((_12813_b == '_')) {
		return __jule_func_result;;
	};
	if (((_12813_b == '+') || (_12813_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1429_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_12813_b=(*(_12215_txt))[_12232_i];
			if (((_12813_b != '_') && (!(_1c3e3e3a8_IsDecimal(_12813_b))))) {
				goto _iter_end_1a7501d0b;
			};
		}
	_iter_next_1a7501d0b:;
	}
	_iter_end_1a7501d0b:;;
	if ((_12232_i == _1429_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1c3e448a8_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I32 _15628_i) {
	return _1c3e444e0_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1c3e44c2c_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I32 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1a7504abc:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _16813_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_16813_b == '_') || _1c3e3e3a8_IsDecimal(_16813_b)) {
					_case_begin_1a750567d:;
					{
						goto _iter_next_1a7504a12;
					}
				}
				else if (_1c3e46635_isFloatFmtP(_16813_b, _16036_i)) {
					_case_begin_1a7505705:;
					{
						return _1c3e448a8_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1a75055b2:;
					{
						goto _iter_end_1a7504a12;
					}
				}
				_match_end_1a750555c:;
			};
		}
	_iter_next_1a7504a12:;
	}
	_iter_end_1a7504a12:;;
	return jule::Str();;
}



inline jule::Str _1c3e450a1_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I32 _18136_i) {
	_18136_i+=2LL;
	return _1c3e444e0_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1c3e45425_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I32 _18635_i) {
	(_18635_i)++;
	return _1c3e444e0_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1c3e458a9_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I32 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _20113_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_20113_b == 'e') || (_20113_b == 'E')))) {
				__jule_func_result = _1c3e444e0_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_20113_b != '_') && (!(_1c3e3e3a8_IsDecimal(_20113_b))))) {
				goto _iter_end_1a75085c6;
			};
		}
	_iter_next_1a75085c6:;
	}
	_iter_end_1a75085c6:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1c3e45b73_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I32 _21713_i = 0LL;;
	_julec_label_1a750a155:;
	for (; (_21713_i < (*(_21615_txt)).len()); (_21713_i)++) {
		{
			jule::U8 _22013_b = (*(_21615_txt))[_21713_i];;
			{
				
				if ((_22013_b == '.')) {
					_case_begin_1a750b4ca:;
					{
						__jule_func_result = _1c3e458a9_floatNum(_21615_txt, _21713_i);
						return __jule_func_result;;
					}
				}
				else if ((_22013_b == '_')) {
					_case_begin_1a750b552:;
					{
						goto _iter_next_1a750a8e7;
					}
				}
				else if (_1c3e462b1_isFloatFmtE(_22013_b, _21713_i)) {
					_case_begin_1a750b5c9:;
					{
						__jule_func_result = _1c3e444e0_floatFmtE(_21615_txt, _21713_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1c3e3e3a8_IsDecimal(_22013_b)))) {
					_case_begin_1a750b651:;
					{
						goto _iter_end_1a750a8e7;
					}
				}
				_match_end_1a750b40e:;
			};
		}
	_iter_next_1a750a8e7:;
	}
	_iter_end_1a750a8e7:;;
	if ((_21713_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _21713_i));
	return __jule_func_result;;
}



inline jule::Str _1c3e45e3c_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1c3e4416b_bytesHasPrefix(_23915_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _24813_i = 2LL;;
	for (; (_24813_i < (*(_23915_txt)).len()); (_24813_i)++) {
		{
			if ((((*(_23915_txt))[_24813_i] != '_') && (!(_1c3e3e672_IsBinary((*(_23915_txt))[_24813_i]))))) {
				goto _iter_end_1a750e4de;
			};
		}
	_iter_next_1a750e4de:;
	}
	_iter_end_1a750e4de:;;
	if ((_24813_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _24813_i));
	return __jule_func_result;;
}



inline jule::Bool _1c3e462b1_isFloatFmtE(jule::U8 _26116_b, jule::I32 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1c3e46635_isFloatFmtP(jule::U8 _26516_b, jule::I32 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1c3e469a9_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I32 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1a751214b:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _27613_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_27613_b == '_') || _1c3e3e3a8_IsDecimal(_27613_b)) {
					_case_begin_1a7513009:;
					{
						goto _iter_next_1a751227d;
					}
				}
				else if (_1c3e46635_isFloatFmtP(_27613_b, _26938_i)) {
					_case_begin_1a7513081:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1a7512e3d:;
					{
						goto _iter_end_1a751227d;
					}
				}
				_match_end_1a7512dd8:;
			};
		}
	_iter_next_1a751227d:;
	}
	_iter_end_1a751227d:;;
	return false;;
}



inline jule::Bool _1c3e46d2d_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I32 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1a751433a:;
			{
				goto _case_begin_1a75143b2;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1a75143b2:;
			{
				goto _case_begin_1a7514439;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1a7514439:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a751425d:;
			{
				return true;;
			}
		}
		_match_end_1a7514192:;
	};
}



inline jule::Bool _1c3e471a2_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I32 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1a75160a6:;
			{
				goto _case_begin_1a751612d;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1a751612d:;
			{
				goto _case_begin_1a75161a5;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1a75161a5:;
			{
				goto _case_begin_1a7516408;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1a7516408:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a7515b99:;
			{
				return true;;
			}
		}
		_match_end_1a7515acd:;
	};
}



inline jule::Str _1c3e47625_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _32613_octalStart = 1LL;;
	jule::Bool _32813_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_32613_octalStart)++;
		_32813_o=true;
	};
	jule::I32 _33713_i = _32613_octalStart;;
	for (; (_33713_i < (*(_31814_txt)).len()); (_33713_i)++) {
		{
			jule::U8 _33913_b = (*(_31814_txt))[_33713_i];;
			if ((_33913_b == '.')) {
				if (_32813_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1c3e458a9_floatNum(_31814_txt, _33713_i);
				return __jule_func_result;;
			};
			if (_1c3e462b1_isFloatFmtE(_33913_b, _33713_i)) {
				__jule_func_result = _1c3e444e0_floatFmtE(_31814_txt, _33713_i);
				return __jule_func_result;;
			};
			if (((_33913_b != '_') && (!(_1c3e3e93b_IsOctal(_33913_b))))) {
				goto _iter_end_1a751a2ec;
			};
		}
	_iter_next_1a751a2ec:;
	}
	_iter_end_1a751a2ec:;;
	if ((_33713_i == _32613_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _33713_i));
	return __jule_func_result;;
}



inline jule::Str _1c3e478de_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _36913_i = 2LL;;
	_julec_label_1a751e213:;
	for (; (_36913_i < (*(_36012_txt)).len()); (_36913_i)++) {
		{
			jule::U8 _37213_b = (*(_36012_txt))[_36913_i];;
			{
				
				if (_1c3e46d2d_isFloatFmtDotp(_36012_txt, _36913_i)) {
					_case_begin_1a751ee39:;
					{
						__jule_func_result = _1c3e45425_floatFmtDotp(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (_1c3e471a2_isFloatFmtDotfp(_36012_txt, _36913_i)) {
					_case_begin_1a751eeb1:;
					{
						__jule_func_result = _1c3e450a1_floatFmtDotfp(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (_1c3e46635_isFloatFmtP(_37213_b, _36913_i)) {
					_case_begin_1a7520038:;
					{
						__jule_func_result = _1c3e448a8_floatFmtP(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (_1c3e469a9_isFloatFmtDotnp(_36012_txt, _36913_i)) {
					_case_begin_1a75200b0:;
					{
						__jule_func_result = _1c3e44c2c_floatFmtDotnp(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (((_37213_b != '_') && (!(_1c3e3ec05_IsHex(_37213_b))))) {
					_case_begin_1a7520137:;
					{
						goto _iter_end_1a751e39a;
					}
				}
				_match_end_1a751ed5c:;
			};
		}
	_iter_next_1a751e39a:;
	}
	_iter_end_1a751e39a:;;
	if ((_36913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _36913_i));
	return __jule_func_result;;
}



inline jule::Str _1c3e47c63_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I32 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _39913_i = 2LL;;
	for (; (_39913_i < _39328_n); (_39913_i)++) {
		{
			if ((!(_1c3e3ec05_IsHex((*(_39315_txt))[_39913_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1a75226ab:;
	}
	_iter_end_1a75226ab:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1c3e4802c_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1c3e47c63_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1c3e482e6_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1c3e47c63_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1c3e485b0_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1c3e47c63_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1c3e48879_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1c3e3e93b_IsOctal((*(_42616_txt))[1LL]))) || (!(_1c3e3e93b_IsOctal((*(_42616_txt))[2LL])))) || (!(_1c3e3e93b_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1c3983b45_Log> _1c3e4d86d_Lex(jule::Ptr<_1c3e40db0_File> _80912_f, jule::I32 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1c3e490e9_lex _81413_lex = _1c3e490e9_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1c3e4be10_newLine(&_81413_lex);
	_1c3e49bdd_lex(&_81413_lex);
	if ((_81413_lex._field_errors.len() > 0LL)) {
		return _81413_lex._field_errors;;
	};
	_80912_f.get()._field_Tokens=_81413_lex._field_tokens;
	return nullptr;;
}



inline jule::I32 _1c4c49206_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I32>((64LL - _1c4c51b04_Len64(_6119_x)));;
}



inline jule::I32 _1c4c4a15d_TrailingZeros(jule::U32 _8318_x) {
	;
	return static_cast<jule::I32>(_1c4c4ad84_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I32 _1c4c4aaba_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_1c4c49822__DE_BRUIJN32_TAB[static_cast<jule::I32>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I32 _1c4c4ad84_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_1c4c49dd8__DE_BRUIJN64_TAB[static_cast<jule::I32>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I32 _1c4c5183a_Len32(jule::U32 _35214_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I32 _1c4c51b04_Len64(jule::U64 _36614_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1c4c52891_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1c4c5419a_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1c4b59413_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1c4b59721_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1c4b599da_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1c4b59d2b_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1c4b5c3d3_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1a7644129:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1c4c5c33a_IsInf(_4714_f, 0LL) || _1c4c5bc30_IsNaN(_4714_f)) {
			_case_begin_1a76441a1:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1a764404c:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c4c5c604_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _1c4b599da_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1c4b59d2b_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1c4c5b922_NaN(void) {
	return static_cast<jule::F64>(_1c4b59d2b_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1c4c5bc30_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1c4c5bee9_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1c4b59d2b_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1c4b59d2b_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1c4c5c33a_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1c4c5c604_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1c4c5e9ad_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1c4c5e0c8_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1c4c5bc30_IsNaN(_1118_x) || _1c4c5c33a_IsInf(_1118_x, 1LL)) {
			_case_begin_1a768283d:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1a76828b5:;
			{
				return static_cast<jule::F64>(_1c4c5b922_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1a768293c:;
			{
				return static_cast<jule::F64>(_1c4c5bee9_Inf(-1LL));;
			}
		}
		_match_end_1a7682772:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I32 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c4b5c3d3_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1c4c5e9ad_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1c4b59d2b_F64FromBits(static_cast<jule::U64>((_1c4b599da_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1c4c666a7_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1c4c5e9ad_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1a76e8574:;
		}
		_iter_end_1a76e8574:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1c4c66eb0_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I32 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1c4b5c3d3_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1c4c5e0c8_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _1c4c95e01_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I32 _7832_prec, jule::I32 _7843_bit_size) {
	return static_cast<jule::Str>(_1c4c964d9_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1c4c9991b_max(static_cast<jule::I32>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1c4c964d9_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I32 _8258_prec, jule::I32 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1c4c94d23_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1a790432e:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1c4b59413_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1c4c94d23_floatInfo>)((&(_1c4c95131_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a7904076:;
			{
				_8313_bits=static_cast<jule::U64>(_1c4b599da_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1c4c94d23_floatInfo>)((&(_1c4c953c8_f64info))));
			}
		}
		else {
			_case_begin_1a7903b9c:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1a7903b47:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I32 _9713_exp = (static_cast<jule::I32>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I32>(static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1a7907ad5:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1a7909983:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1a79089c6:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1a7908960:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1a7908894:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1a7907c17:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1a7906e03:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1a7907068:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1c4c98a19_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1c4c99223_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_1c4c9586d_decimalSlice _13213_digs = _1c4c9586d_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1c4ca47e4_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a790cd93:;
				{
					_8258_prec=static_cast<jule::I32>(_1c4c9991b_max(static_cast<jule::I32>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a790ce09:;
				{
					_8258_prec=static_cast<jule::I32>(_1c4c9991b_max(static_cast<jule::I32>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a790ce70:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1a790c03a:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I32 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a790eaa9:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a790eca7:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1a790ec41:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1a790ebdb:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1c4ca3529_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1c4ca39be_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1c4c96be3_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _1c4c973b9_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1c4c96be3_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I32 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I32 _18316_exp, _1c4c94d23_floatInfo* _18327_flt) {
	_1c4ca860b_decimal _18413_d = _1c4ca860b_decimal{};;
	_1c4ca89b3_assign(&_18413_d, _1835_mant);
	_1c4ca8c6b_shift(&_18413_d, static_cast<jule::I32>((_18316_exp - static_cast<jule::I32>((*(_18327_flt))._field_mantbits))));
	_1c4c9586d_decimalSlice _18713_digs = _1c4c9586d_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1c4c9781a_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_1c4c9586d_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a7915d46:;
				{
					_18233_prec=static_cast<jule::I32>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a7916b27:;
				{
					_18233_prec=static_cast<jule::I32>(_1c4c9991b_max(static_cast<jule::I32>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a7916b8d:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1a79169c3:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1a7918299:;
				{
					_1c4ca9585_round(&_18413_d, static_cast<jule::I32>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1a7918321:;
				{
					_1c4ca9585_round(&_18413_d, static_cast<jule::I32>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1a7918398:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1c4ca9585_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1a7918200:;
		};
		_18713_digs=_1c4c9586d_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1c4c973b9_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1c4c973b9_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1c4c9586d_decimalSlice _2205_digs, jule::I32 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1a791b665:;
			{
				return _1c4c97dae_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a791b6cb:;
			{
				return _1c4c98398_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1a791b742:;
			{
				jule::I32 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I32 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1c4c97dae_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1c4c98398_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>(_1c4c9991b_max(static_cast<jule::I32>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1a791b577:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1c4c9781a_roundShortest(_1c4ca860b_decimal* _25723_d, jule::U64 _25735_mant, jule::I32 _25746_exp, _1c4c94d23_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1c4ca860b_decimal _28713_upper = _1c4ca860b_decimal{};;
	_1c4ca89b3_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1c4ca8c6b_shift(&_28713_upper, static_cast<jule::I32>(((_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I32 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I32>((_25746_exp - 1LL));
	};
	_1c4ca860b_decimal _30613_lower = _1c4ca860b_decimal{};;
	_1c4ca89b3_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1c4ca8c6b_shift(&_30613_lower, static_cast<jule::I32>(((_29813_explo - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I32 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I32 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1a7928452;
			};
			jule::I32 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1a792cee5:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1a792d05b:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1a792d0c2:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1a792ce4b:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1a7930aca:;
					{
						_1c4ca9585_round(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1a7930b41:;
					{
						_1c4ca9024_roundDown(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1a7930ba7:;
					{
						_1c4ca92cc_roundUp(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1a7930a31:;
			};
		}
	_iter_next_1a7928452:;
	}
	_iter_end_1a7928452:;;
}



inline jule::Slice<jule::U8> _1c4c97dae_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1c4c9586d_decimalSlice _39637_d, jule::I32 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	if ((_39654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('.'); };
		jule::I32 _41217_i = 1LL;;
		jule::I32 _41313_m = _1c4c99597_min(_39637_d._field_nd, static_cast<jule::I32>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			(_39613_dst).append(_39637_d._field_d.slice(_41217_i, _41313_m));;
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a793567e:;
		}
		_iter_end_1a793567e:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_39665_fmt); };
	jule::I32 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I32>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1a7937692:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0'))); };
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1a7937c7a:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1a7937285:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1a7936a15:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1c4c98398_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1c4c9586d_decimalSlice _45137_d, jule::I32 _45154_prec) {
	if (_45126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('-'); };
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I32 _45917_m = _1c4c99597_min(_45137_d._field_nd, _45137_d._field_dp);;
		(_45113_dst).append(_45137_d._field_d.slice(0LL, _45917_m));;
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1a793b531:;
		}
		_iter_end_1a793b531:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
	};
	if ((_45154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('.'); };
		jule::I32 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push(_47221_ch); };
			}
		_iter_next_1a793b740:;
		}
		_iter_end_1a793b740:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1c4c98a19_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I32 _48452_exp, _1c4c94d23_floatInfo* _48463_flt) {
	if (_48426_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1c4cad7dc_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('p'); };
	_48452_exp-=static_cast<jule::I32>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1c4cad7dc_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1c4c99223_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I32 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I32 _50724_exp, _1c4c94d23_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1a7941d83:;
	}
	_iter_end_1a7941d83:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U32 _52113_shift = static_cast<jule::U32>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_50637_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))); };
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		while ((_5079_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1a79487a2:;
		}
		_iter_end_1a79487a2:;;
	} else if ((_50626_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		jule::I32 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1a79497d6:;
		}
		_iter_end_1a79497d6:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1c4c9a466_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I32>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1a7946cab:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1a794bad5:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1a794c223:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1a794b0ce:;
	};
	return _50613_dst;;
}



inline jule::I32 _1c4c99597_min(jule::I32 _5918_a, jule::I32 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I32 _1c4c9991b_max(jule::I32 _5988_a, jule::I32 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1c4c9a466_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1c40b5111_ConvError _1c4c9a8d9_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1c40b5111_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if ((*(_5119_s)).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1a7953504:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1a7953405:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1c4c9a466_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1a7954e51:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1c4c9a466_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1a7954d74:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1c4c9a466_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1a7954a44:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1a79549cd:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1a7954912:;
					};
				};
			}
		}
		else {
			_case_begin_1a7952888:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1a7952bda:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1a7958d67:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1a7958718:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1a795898d:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1a7958927:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1a795a132:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1a795a198:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1a7958a15:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a795ad7a:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1a795c0ac:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1c4c9a466_lower(_10912_c)) && (_1c4c9a466_lower(_10912_c) <= 'z'))) {
						_case_begin_1a795be9c:;
						{
							_11017_d=static_cast<jule::U8>(((_1c4c9a466_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1a795bac3:;
						{
							goto _iter_next_1a795ad7a;
						}
					}
					else {
						_case_begin_1a795ba5c:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1a795ba07:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1a795ad7a:;
			++it;
			goto _iter_begin_1a795ad7a;
		}
		_iter_end_1a795ad7a:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1c4c9ad18_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I32 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1c40b5111_ConvError __jule_assign_result = _1c4c9a8d9_parseUint(&(_14618_s), _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1c4c9b2be_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I32 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1c40b5111_ConvError __jule_assign_result = _1c4c9a8d9_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I32>(0LL)) && (_18718_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U32>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1c4c9beb2_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1c4b59d2b_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _579_clz = _1c4c49206_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U32>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c4c5419a_Mul64(_4122_man, _1c4c9cd1a_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c4c5419a_Mul64(_4122_man, _1c4c9cd1a_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c4b59d2b_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1c4c9c402_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1c4b59721_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1329_clz = _1c4c49206_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U32>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c4c5419a_Mul64(_11022_man, _1c4c9cd1a_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c4c5419a_Mul64(_11022_man, _1c4c9cd1a_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1c4b59721_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _1c4c9e25b_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>* _4631_s, jule::Str _4642_prefix) {
	jule::I32 _4713_n = _4642_prefix.len();;
	if ((_4713_n > (*(_4631_s)).len())) {
		_4713_n=static_cast<jule::I32>((*(_4631_s)).len());
	};
	jule::I32 _5113_i = 0LL;;
	for (; (_5113_i < _4713_n); (_5113_i)++) {
		{
			jule::U8 _5317_c = (*(_4631_s))[_5113_i];;
			if ((('A' <= _5317_c) && (_5317_c <= 'Z'))) {
				_5317_c+=32LL;
			};
			if ((_5317_c != _4642_prefix[_5113_i])) {
				return _5113_i;;
			};
		}
	_iter_next_1a798092c:;
	}
	_iter_end_1a798092c:;;
	return _4713_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1c4c9e569_special(jule::Slice<jule::U8> _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _7313_sign = 1LL;;
	jule::I32 _7413_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1a79844ad:;
			{
				if ((_6912_s[0LL] == '-')) {
					_7313_sign=-1LL;
				};
				_7413_nsign=1LL;
				{
					jule::Slice<jule::U8>* _8321_sp = (&(_6912_s));;
					(*(_8321_sp))=(*(_8321_sp)).slice(1LL);
				};
				goto _case_begin_1a7984535;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1a7984535:;
			{
				jule::I32 _8817_caseN = _1c4c9e25b_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("infinity", 8));;
				if (((3LL < _8817_caseN) && (_8817_caseN < 8LL))) {
					_8817_caseN=3LL;
				};
				if (((_8817_caseN == 3LL) || (_8817_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c4c5bee9_Inf(_7313_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_7413_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1a79845ac:;
			{
				if ((_1c4c9e25b_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c4c5b922_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1a79843e2:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1c4c9e833_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1a7989a79:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1a7989cee:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1a7989c33:;
	};
	jule::U64 _12213_base = 10LLU;;
	jule::I32 _12313_maxMantDigits = 19LL;;
	jule::U8 _12413_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1c4c9a466_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_12213_base=16LLU;
		_12313_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_12413_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _13213_sawdot = false;;
	jule::Bool _13313_sawdigits = false;;
	jule::I32 _13413_nd = 0LL;;
	jule::I32 _13513_ndMant = 0LL;;
	jule::I32 _13613_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13813_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13813_c == '_')) {
					_case_begin_1a798ed15:;
					{
						goto _iter_next_1a79894d5;
					}
				}
				else if ((_13813_c == '.')) {
					_case_begin_1a798ed8c:;
					{
						if (_13213_sawdot) {
							goto _julec_label_1a79946bb;
						};
						_13213_sawdot=true;
						_13613_dp=_13413_nd;
						goto _iter_next_1a79894d5;
					}
				}
				else if ((('0' <= _13813_c) && (_13813_c <= '9'))) {
					_case_begin_1a798ee14:;
					{
						_13313_sawdigits=true;
						if (((_13813_c == '0') && (_13413_nd == 0LL))) {
							(_13613_dp)--;
							goto _iter_next_1a79894d5;
						};
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_12213_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13813_c - '0'));
							(_13513_ndMant)++;
						} else if ((_13813_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a79894d5;
					}
				}
				else if ((((_12213_base == 16LLU) && ('a' <= _1c4c9a466_lower(_13813_c))) && (_1c4c9a466_lower(_13813_c) <= 'f'))) {
					_case_begin_1a798ee8b:;
					{
						_13313_sawdigits=true;
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1c4c9a466_lower(_13813_c) - 'a') + 10LLU));
							(_13513_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1a79894d5;
					}
				}
				_match_end_1a798ec38:;
			};
			goto _iter_end_1a79894d5;
		}
	_iter_next_1a79894d5:;
	}
	_iter_end_1a79894d5:;;
	_julec_label_1a79946bb:;
	if ((!(_13313_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_13213_sawdot))) {
		_13613_dp=_13413_nd;
	};
	if ((_12213_base == 16LLU)) {
		_13613_dp*=4LL;
		_13513_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1c4c9a466_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _12413_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _20117_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20117_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _21117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1a7997922;
				};
				if ((_21117_e < 10000LL)) {
					_21117_e=static_cast<jule::I32>((((_21117_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1a7997922:;
		}
		_iter_end_1a7997922:;;
		_13613_dp+=(_21117_e * _20117_esign);
	} else if ((_12213_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I32>((_13613_dp - _13513_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1c4ca13b2_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1c4c953c8_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1a79a1255:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1a79a12cc:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1c4ca0757_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1c4ca0757_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1a79a1354:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1c4ca0757_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a79a0c05:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1c4ca17e1_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1c4c95131_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1a79a5644:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1a79a56bb:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1c4ca0a98_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1c4ca0a98_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1a79a5743:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1c4ca0a98_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a79a50e4:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1c40b5111_ConvError _1c4ca1d85_atofHex(_1c4c94d23_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1c40b5111_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5579_maxExp = ((static_cast<jule::I32>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5589_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1a79a9a88:;
	}
	_iter_end_1a79a9a88:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1a79ab826:;
	}
	_iter_end_1a79ab826:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5589_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1a79ab628:;
	}
	_iter_end_1a79ab628:;;
	jule::U64 _58813_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_58813_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_58813_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _60313_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5579_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I32>((_5579_maxExp + 1LL));
		_60313_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _61013_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_61013_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_61013_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1c4c95131_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1c4b59721_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_61013_bits)))));
		__jule_func_result.__jule_result_arg1 = _60313_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1c4b59d2b_F64FromBits(_61013_bits));
	__jule_func_result.__jule_result_arg1 = _60313_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1c40b5111_ConvError _1c4ca225e_atof32(jule::Str* _62112_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1c40b5111_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _62314_val = 0;;
		jule::I32 _62319__n = 0;;
		jule::Bool _62323_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c4c9e569_special(_206b74495_Stobs(_62112_s));
			_62314_val = __jule_assign_result.__jule_result_arg0;
			_62319__n = __jule_assign_result.__jule_result_arg1;
			_62323_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62323_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_62314_val));
			__jule_func_result.__jule_result_arg1 = _62319__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62910_mantissa = 0;;
	jule::I32 _62920_exp = 0;;
	jule::Bool _62925_neg = false;;
	jule::Bool _62930_trunc = false;;
	jule::Bool _62937_hex = false;;
	jule::I32 _62942__n = 0;;
	jule::Bool _62950_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c4c9e833_readFloat(_62112_s);
		_62910_mantissa = __jule_assign_result.__jule_result_arg0;
		_62920_exp = __jule_assign_result.__jule_result_arg1;
		_62925_neg = __jule_assign_result.__jule_result_arg2;
		_62930_trunc = __jule_assign_result.__jule_result_arg3;
		_62937_hex = __jule_assign_result.__jule_result_arg4;
		_62942__n = __jule_assign_result.__jule_result_arg5;
		_62950_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62942__n;
	if ((!(_62950_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62937_hex) {
		jule::F64 _63617_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1c40b5111_ConvError __jule_assign_result = _1c4ca1d85_atofHex(&(_1c4c95131_f32info), _62910_mantissa, _62920_exp, _62925_neg, _62930_trunc);
			_63617_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63617_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62930_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1c4ca17e1_atof32exact(_62910_mantissa, _62920_exp, _62925_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62950_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1c4c9c402_eiselLemire32(_62910_mantissa, _62920_exp, _62925_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62950_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62950_ok) {
			if ((!(_62930_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65821_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1c4c9c402_eiselLemire32(static_cast<jule::U64>((_62910_mantissa + 1LLU)), _62920_exp, _62925_neg);
				_65821_fUp = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62950_ok && (__jule_func_result.__jule_result_arg0 == _65821_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1c4ca860b_decimal _66713_d = _1c4ca860b_decimal{};;
	if ((!(_1c4c9eec6_set(&_66713_d, _206b74495_Stobs(_62112_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _67110_b = 0;;
	jule::Bool _67113_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1c4ca0317_floatBits(&_66713_d, &(_1c4c95131_f32info));
		_67110_b = __jule_assign_result.__jule_result_arg0;
		_67113_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1c4b59721_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_67110_b))));
	if (_67113_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1c40b5111_ConvError _1c4ca2528_atof64(jule::Str* _67912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1c40b5111_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _68114_val = 0;;
		jule::I32 _68119__n = 0;;
		jule::Bool _68123_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c4c9e569_special(_206b74495_Stobs(_67912_s));
			_68114_val = __jule_assign_result.__jule_result_arg0;
			_68119__n = __jule_assign_result.__jule_result_arg1;
			_68123_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68123_ok) {
			__jule_func_result.__jule_result_arg0 = _68114_val;
			__jule_func_result.__jule_result_arg1 = _68119__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68710_mantissa = 0;;
	jule::I32 _68720_exp = 0;;
	jule::Bool _68725_neg = false;;
	jule::Bool _68730_trunc = false;;
	jule::Bool _68737_hex = false;;
	jule::I32 _68742__n = 0;;
	jule::Bool _68750_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c4c9e833_readFloat(_67912_s);
		_68710_mantissa = __jule_assign_result.__jule_result_arg0;
		_68720_exp = __jule_assign_result.__jule_result_arg1;
		_68725_neg = __jule_assign_result.__jule_result_arg2;
		_68730_trunc = __jule_assign_result.__jule_result_arg3;
		_68737_hex = __jule_assign_result.__jule_result_arg4;
		_68742__n = __jule_assign_result.__jule_result_arg5;
		_68750_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68742__n;
	if ((!(_68750_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68737_hex) {
		({
			__jule_tuple_f64__jule_tuple__1c40b5111_ConvError __jule_assign_result = _1c4ca1d85_atofHex(&(_1c4c953c8_f64info), _68710_mantissa, _68720_exp, _68725_neg, _68730_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68730_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1c4ca13b2_atof64exact(_68710_mantissa, _68720_exp, _68725_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68750_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1c4c9beb2_eiselLemire64(_68710_mantissa, _68720_exp, _68725_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68750_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68750_ok) {
			if ((!(_68730_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71521_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1c4c9beb2_eiselLemire64(static_cast<jule::U64>((_68710_mantissa + 1LLU)), _68720_exp, _68725_neg);
				_71521_fUp = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68750_ok && (__jule_func_result.__jule_result_arg0 == _71521_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1c4ca860b_decimal _72413_d = _1c4ca860b_decimal{};;
	if ((!(_1c4c9eec6_set(&_72413_d, _206b74495_Stobs(_67912_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72810_b = 0;;
	jule::Bool _72813_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1c4ca0317_floatBits(&_72413_d, &(_1c4c953c8_f64info));
		_72810_b = __jule_assign_result.__jule_result_arg0;
		_72813_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1c4b59d2b_F64FromBits(_72810_b));
	if (_72813_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1c40b5111_ConvError _1c4ca289c_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1c40b5111_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _73814_f = 0;;
		jule::I32 _73817_n = 0;;
		jule::I32 _73820_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1c40b5111_ConvError __jule_assign_result = _1c4ca225e_atof32(_73622_s);
			_73814_f = __jule_assign_result.__jule_result_arg0;
			_73817_n = __jule_assign_result.__jule_result_arg1;
			_73820_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73814_f));
		__jule_func_result.__jule_result_arg1 = _73817_n;
		__jule_func_result.__jule_result_arg2 = _73820_err;
		return __jule_func_result;;
	};
	jule::F64 _74110_f = 0;;
	jule::I32 _74113_n = 0;;
	jule::I32 _74116_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1c40b5111_ConvError __jule_assign_result = _1c4ca2528_atof64(_73622_s);
		_74110_f = __jule_assign_result.__jule_result_arg0;
		_74113_n = __jule_assign_result.__jule_result_arg1;
		_74116_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _74110_f;
	__jule_func_result.__jule_result_arg1 = _74113_n;
	__jule_func_result.__jule_result_arg2 = _74116_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1c4ca2c21_ParseFloat(jule::Str _76915_s, jule::I32 _76923_bitSize) {
	jule::F64 _77010_f = 0;;
	jule::I32 _77013_n = 0;;
	jule::I32 _77016_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1c40b5111_ConvError __jule_assign_result = _1c4ca289c_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_77010_f = __jule_assign_result.__jule_result_arg0;
		_77013_n = __jule_assign_result.__jule_result_arg1;
		_77016_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_77013_n != _76915_s.len()) && ((_77016_err == static_cast<jule::I32>(0LL)) || (_77016_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
	};
	if ((_77016_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77016_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _77010_f);;
}



inline void _1c4ca3529_ryuFtoaFixed32(_1c4c9586d_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _6213_e2 = _4956_exp;;
	jule::I32 _639_b = _1c4c5183a_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U32>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I32>(_639_b) - 25LL);
	};
	jule::I32 _749_q = (((-(_1c4ca4aad_mulByLog2Log10(static_cast<jule::I32>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I32 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c4ca6472_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1c4ca6c25_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I32>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U32 _949_extra = static_cast<jule::U32>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1c4ca431b_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _1c4ca39be_ryuFtoaFixed64(_1c4c9586d_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _13113_e2 = _12156_exp;;
	jule::I32 _1329_b = _1c4c51b04_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U32>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I32>(_1329_b) - 55LL);
	};
	jule::I32 _1469_q = (((-(_1c4ca4aad_mulByLog2Log10(static_cast<jule::I32>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I32 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c4ca68a1_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1c4ca6c25_divisibleByPow5(_12145_mant, static_cast<jule::I32>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U32 _1669_extra = static_cast<jule::U32>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1c4ca431b_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _1c4ca431b_formatDecimal(_1c4c9586d_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2019_max = _1c4ca3d10_u64pow10[_20088_prec];;
	jule::I32 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1a79e15e7:;
	}
	_iter_end_1a79e15e7:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U32 _22913_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((_22913_n + 1LLU))]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 1LLU))];
			(*(_20023_d))._field_d[static_cast<jule::I32>((_22913_n + 0LLU))]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 0LLU))];
			_23113_v=_23317_v1;
		}
	_iter_next_1a79e40cd:;
	}
	_iter_end_1a79e40cd:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_22913_n)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23113_v) + 1LLU))];
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_22913_n)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((2LL * _23113_v))];
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1a79ea2b0:;
	}
	_iter_end_1a79ea2b0:;;
	(*(_20023_d))._field_dp=static_cast<jule::I32>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _1c4ca47e4_ryuFtoaShortest(_1c4c9586d_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1c4c94d23_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1c4c4ad84_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U32>((-(_26157_exp)));
		_1c4ca58c2_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I32 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1c4ca52a6_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1c4ca58c2_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I32 _2799_q = (_1c4ca4aad_mulByLog2Log10(static_cast<jule::I32>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _1c4c95131_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c4ca6472_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c4ca6472_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c4ca6472_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c4ca68a1_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c4ca68a1_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1c4ca68a1_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1c4ca6c25_divisibleByPow5(_27310_ml, static_cast<jule::I32>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1c4ca6c25_divisibleByPow5(_27314_mc, static_cast<jule::I32>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1c4ca6c25_divisibleByPow5(_27318_mu, static_cast<jule::I32>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U32 _3259_extra = static_cast<jule::U32>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1c4ca58c2_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I32 _1c4ca4aad_mulByLog2Log10(jule::I32 _37719_x) {
	return static_cast<jule::I32>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I32 _1c4ca4d77_mulByLog10Log2(jule::I32 _38719_x) {
	return static_cast<jule::I32>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1c4ca52a6_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1c4c94d23_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1c4ca58c2_ryuDigits(_1c4c9586d_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1c4ca6ede_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1c4ca6ede_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1c4ca6ede_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1c4ca6043_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1c4ca6043_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _42817_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1a7a184a9:;
		}
		_iter_end_1a7a184a9:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I32>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>((9LL - _42817_n)));
		_1c4ca6043_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I32>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1a7a1b017:;
	}
	_iter_end_1a7a1b017:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1a7a1ba2e:;
	}
	_iter_end_1a7a1ba2e:;;
}



inline void _1c4ca6043_ryuDigits32(_1c4c9586d_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I32>((_45554_endindex + 1LL));
		return;;
	};
	jule::I32 _46013_trimmed = 0LL;;
	jule::I32 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1a7a1d844;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I32>(static_cast<jule::I32>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1a7a1d844:;
	}
	_iter_end_1a7a1d844:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I32 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 1LLU))];
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 0LLU))];
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1a7a24c02:;
	}
	_iter_end_1a7a24c02:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I32>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I32>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1c4ca6472_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1c4c9cd1a_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c4c5419a_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1c4ca4d77_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1c4ca68a1_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1c4c9cd1a_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1c4ca4d77_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c4c5419a_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c4c5419a_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1c4c52891_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1c4ca6c25_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1a7a38001:;
	}
	_iter_end_1a7a38001:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1c4ca6ede_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1c4ca9e59_trim(_1c4ca860b_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1a7a3b697:;
	}
	_iter_end_1a7a3b697:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1c4caa245_rightShift(_1c4ca860b_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _28513_r = 0LL;;
	jule::I32 _28613_w = 0LL;;
	jule::U32 _28913_n = 0LLU;;
	for (; ((_28913_n >> _28432_k) == 0LLU); (_28513_r)++) {
		{
			if ((_28513_r >= (*(_28420_a))._field_nd)) {
				if ((_28913_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_28913_n >> _28432_k) == 0LLU)) {
					{
						_28913_n=static_cast<jule::U32>((_28913_n * 10LLU));
						(_28513_r)++;
					}
				_iter_next_1a7a3ee1a:;
				}
				_iter_end_1a7a3ee1a:;;
				goto _iter_end_1a7a3d369;
			};
			jule::U32 _30313_c = static_cast<jule::U32>((*(_28420_a))._field_d[_28513_r]);;
			_28913_n=static_cast<jule::U32>((((_28913_n * 10LLU) + _30313_c) - '0'));
		}
	_iter_next_1a7a3d369:;
	}
	_iter_end_1a7a3d369:;;
	(*(_28420_a))._field_dp-=(_28513_r - 1LL);
	jule::U32 _3089_mask = static_cast<jule::U32>((static_cast<jule::U32>((1LL << _28432_k)) - 1LLU));;
	for (; (_28513_r < (*(_28420_a))._field_nd); (_28513_r)++) {
		{
			jule::U32 _31213_c = static_cast<jule::U32>((*(_28420_a))._field_d[_28513_r]);;
			jule::U32 _31313_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_31313_dig + '0')));
			(_28613_w)++;
			_28913_n=static_cast<jule::U32>((((_28913_n * 10LLU) + _31213_c) - '0'));
		}
	_iter_next_1a7a418bc:;
	}
	_iter_end_1a7a418bc:;;
	while ((_28913_n > 0LLU)) {
		{
			jule::U32 _32213_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			if ((_28613_w < 800LL)) {
				(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_32213_dig + '0')));
				(_28613_w)++;
			} else if ((_32213_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_28913_n=static_cast<jule::U32>((_28913_n * 10LLU));
		}
	_iter_next_1a7a42071:;
	}
	_iter_end_1a7a42071:;;
	(*(_28420_a))._field_nd=_28613_w;
	_1c4ca9e59_trim(_28420_a);
}



inline jule::Bool _1c4caa6eb_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _33913_i = 0LL;;
	for (; (_33913_i < (*(_33846_s)).len()); (_33913_i)++) {
		{
			if ((_33913_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_33913_i] != (*(_33846_s))[_33913_i])) {
				return (_33821_b[_33913_i] < (*(_33846_s))[_33913_i]);;
			};
		}
	_iter_next_1a7a45edc:;
	}
	_iter_end_1a7a45edc:;;
	return false;;
}



inline void _1c4caa9a4_leftShift(_1c4ca860b_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _35313_delta = _1c4ca8012_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_1c4caa6eb_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1c4ca8012_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))) {
		(_35313_delta)--;
	};
	jule::I32 _35813_r = (*(_35219_a))._field_nd;;
	jule::I32 _35913_w = ((*(_35219_a))._field_nd + _35313_delta);;
	jule::U32 _36213_n = 0LLU;;
	(_35813_r)--;
	for (; (_35813_r >= 0LL); (_35813_r)--) {
		{
			_36213_n+=((static_cast<jule::U32>((*(_35219_a))._field_d[_35813_r]) - '0') << _35231_k);
			jule::U32 _36613_quo = (_36213_n / 10LLU);;
			jule::U32 _36713_rem = (_36213_n - (10LLU * _36613_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_36713_rem + '0')));
			} else if ((_36713_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_36613_quo;
		}
	_iter_next_1a7a49430:;
	}
	_iter_end_1a7a49430:;;
	while ((_36213_n > 0LLU)) {
		{
			jule::U32 _37913_quo = (_36213_n / 10LLU);;
			jule::U32 _38013_rem = (_36213_n - (10LLU * _37913_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38013_rem + '0')));
			} else if ((_38013_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_37913_quo;
		}
	_iter_next_1a7a49908:;
	}
	_iter_end_1a7a49908:;;
	(*(_35219_a))._field_nd+=_35313_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_35313_delta;
	_1c4ca9e59_trim(_35219_a);
}



inline jule::Bool _1c4caad28_shouldRoundUp(_1c4ca860b_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1c4cac4ab_FmtUint(jule::U64 _6012_i, jule::I32 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1c4cace7e_small(static_cast<jule::I32>(static_cast<jule::I32>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1c4cad7dc_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1c4cac874_FmtInt(jule::I64 _7111_i, jule::I32 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1c4cace7e_small(static_cast<jule::I32>(static_cast<jule::I32>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1c4cad7dc_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1c4cacb3d_Itoa(jule::I32 _809_i) {
	return _1c4cac874_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1c4cace7e_small(jule::I32 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1c4cad248_isPowerOfTwo(jule::I32 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1c4cad7dc_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I32 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I32 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U32 _14917_us = static_cast<jule::U32>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U32 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 1LLU))];
				_10713_a[(_10813_i + 0LL)]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 0LLU))];
			}
		_iter_next_1a7a83ca5:;
		}
		_iter_end_1a7a83ca5:;;
		jule::U32 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15913_is + 1LLU))];
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(_15913_is)];
		};
	} else if (_1c4cad248_isPowerOfTwo(_10141_base)) {
		jule::U32 _17413_shift = (static_cast<jule::U32>(_1c4c4a15d_TrailingZeros(static_cast<jule::U32>(static_cast<jule::U32>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U32 _17613_m = (static_cast<jule::U32>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>((static_cast<jule::U32>(_10133_u) & _17613_m))];
				_10133_u>>=_17413_shift;
			}
		_iter_next_1a7a8be67:;
		}
		_iter_end_1a7a8be67:;;
		(_10813_i)--;
		_10713_a[_10813_i]=jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))];
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>((_10133_u - (_19317_q * _18713_b))))];
				_10133_u=_19317_q;
			}
		_iter_next_1a7a8c6d7:;
		}
		_iter_end_1a7a8c6d7:;;
		(_10813_i)--;
		_10713_a[_10813_i]=jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))];
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1c4caebd9_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a7aa636b:;
			{
				return _1c4cae1d3_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a7aa63d2:;
			{
				return _1c4cae49c_SysUint;;
			}
		}
		else {
			_case_begin_1a7aa5d2c:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1a7aa3555:;
	};
}



inline jule::I32 _1c4caeea3_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1a7aa74d2:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1a7aa7614:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1a7aa767a:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1a7aa76e1:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a7aa7757:;
			{
				return _1c4cadde7_BitSize;;
			}
		}
		else {
			_case_begin_1a7aa70e7:;
			{
				return -1LL;;
			}
		}
		_match_end_1a7aa7081:;
	};
}



inline jule::Str _1c4cb02e4_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a7aa9193:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a7aa9a9a:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a7aa9b11:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a7aa9b77:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1a7aa9638:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a7aa95c2:;
	};
}



inline jule::Str _1c4cb05ad_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1a7aa9e30:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1a7aaad21:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1a7aaad87:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a7aaaded:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1a7aaa7c1:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a7aaa75a:;
	};
}



inline jule::Str _1c4cb0877_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1a7aab1b7:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1a7aac0a8:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1a7aaba58:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a7aab9e2:;
	};
}



inline jule::Bool _1c4cb14c1_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _1c4ca2c21_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _1c4cb178a_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1a7ab1e6a:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a7ab1882:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a7ab0474:;
	};
}



inline jule::I32 _1c4cb1a54_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1a7ab2c07:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1a7ab2cb2:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1a7ab2d28:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a7ab2245:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a7ab27b7:;
	};
}



inline jule::I32 _1c4cb1d1d_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1a7ab4764:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1a7ab481e:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1a7ab4885:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1a7ab4225:;
			{
				return 64LLU;;
			}
		}
		_match_end_1a7ab3d18:;
	};
}



inline void _1c4cb1e94_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1c3a95a6a_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1a7ab56cc:;
				{
					_1c4cadde7_BitSize=64LLU;
					_1c4cae1d3_SysInt=jule::Str("i64", 3);
					_1c4cae49c_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1a7ab5765:;
				{
					_1c4cadde7_BitSize=32LLU;
					_1c4cae1d3_SysInt=jule::Str("i32", 3);
					_1c4cae49c_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1a7ab5655:;
		};
	};
}



inline void _1c4cb211a_init(void) {
	_1c4cb1e94_UpdateTarget();
}



inline jule::I64 _1c4cb5dcc_MinI(jule::Str _6113_k) {
	_6113_k=_1c4caebd9_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a7ab4a0b:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a7ab78bb:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a7ab7932:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a7ab7998:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1a7ab4b3d:;
			{
				return 0LL;;
			}
		}
		_match_end_1a7ab4ad8:;
	};
}



inline jule::I64 _1c4cb61da_MaxI(jule::Str _7913_k) {
	_7913_k=_1c4caebd9_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a7ab7c40:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a7ab8ec7:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a7ab903d:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a7ab90a4:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1a7ab8658:;
			{
				return 0LL;;
			}
		}
		_match_end_1a7ab8d62:;
	};
}



inline jule::U64 _1c4cb64a4_MaxU(jule::Str _9713_k) {
	_9713_k=_1c4caebd9_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a7ab934b:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a7aba5d3:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a7aba649:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a7aba6b0:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1a7ab9c64:;
			{
				return 0LLU;;
			}
		}
		_match_end_1a7aba46d:;
	};
}



inline jule::F64 _1c4cb66d5_Min(jule::Str _11512_k) {
	_11512_k=_1c4caebd9_RealKindOf(_11512_k);
	jule::I64 _1179_i = _1c4cb5dcc_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a7abcc89:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a7abc6c3:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1a7abc151:;
			{
				return 0LL;;
			}
		}
		_match_end_1a7abc41a:;
	};
}



inline jule::F64 _1c4cb699e_Max(jule::Str _13312_k) {
	_13312_k=_1c4caebd9_RealKindOf(_13312_k);
	jule::I64 _1359_i = _1c4cb61da_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _1c4cb64a4_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a7ac00ee:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a7abea38:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1a7abe472:;
			{
				return 0LL;;
			}
		}
		_match_end_1a7abe780:;
	};
}



inline jule::Bool _1c4cb6e22_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1c4cb7230_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1c4cb74e9_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1c4cb783a_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1c4cb7b04_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1c4cb7dbd_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1c4cb8187_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1c4cb852d_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1c4cb87e7_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1c4cb8ab1_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1c4cb8e35_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a7ac5621:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a7ac592e:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a7ac5ba4:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a7ac5c1a:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a7ac5c81:;
			{
				return _1c4cb6e22_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a7ac5ce7:;
			{
				return _1c4cb7230_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a7ac5e07:;
			{
				return _1c4cb74e9_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a7ac5e6d:;
			{
				return _1c4cb783a_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1a7ac5ed4:;
			{
				return _1c4cb7b04_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a7ac604a:;
			{
				return _1c4cb7dbd_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a7ac60c2:;
			{
				return _1c4cb8187_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a7ac6149:;
			{
				return _1c4cb852d_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a7ac61c1:;
			{
				return _1c4cb87e7_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a7ac6248:;
			{
				return _1c4cb8ab1_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1a7ac62c0:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1a7ac6347:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1a7ac5786:;
			{
				return false;;
			}
		}
		_match_end_1a7ac04b7:;
	};
}



inline jule::Bool _1c4cb91ee_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1c4cb94b8_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1c4cb9782_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1c4cb9a4b_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1c4cb9ebe_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1c4cba288_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1c4cba552_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1c4cba81b_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1c4cbab90_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a7acd409:;
			{
				return _1c4cbbbe6_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a7acd76c:;
			{
				return _1c4cbc004_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a7acd7e4:;
			{
				return _1c4cbc004_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a7acda47:;
			{
				return _1c4cb91ee_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1a7acdabe:;
			{
				return _1c4cb94b8_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a7acdb46:;
			{
				return _1c4cb9782_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a7acdbbd:;
			{
				return _1c4cb9a4b_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a7acdc9a:;
			{
				return _1c4cb9ebe_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a7acdd22:;
			{
				return _1c4cba288_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a7acdd99:;
			{
				return _1c4cba552_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a7acde21:;
			{
				return _1c4cba81b_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a7acde98:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a7acd607:;
			{
				return false;;
			}
		}
		_match_end_1a7acd580:;
	};
}



inline jule::Bool _1c4cbbbe6_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1c4cbc004_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1c4cbc2bd_IsInt(jule::Str _4610_k) {
	return (_1c4cbbbe6_IsSigInt(_4610_k) || _1c4cbc004_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1c4cbc60e_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1c4cbc8c8_IsNum(jule::Str _5610_k) {
	return (_1c4cbc2bd_IsInt(_5610_k) || _1c4cbc60e_IsFloat(_5610_k));;
}



inline jule::Bool _1c4cbcb92_IsSigNum(jule::Str _6113_k) {
	return (_1c4cbbbe6_IsSigInt(_6113_k) || _1c4cbc60e_IsFloat(_6113_k));;
}



inline void _1c4cc6dbb_lshiftUnsig(_1c4cbcda1_Const* _59021_c, _1c4cbcda1_Const* _59032_x) {
	jule::U64 _5919_l = _1c4cc07cc_AsU64(_59021_c);;
	jule::U64 _5929_r = _1c4cc07cc_AsU64(_59032_x);;
	_1c4cc10c4_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1c4cc71eb_rshiftUnsig(_1c4cbcda1_Const* _59621_c, _1c4cbcda1_Const* _59632_x) {
	jule::U64 _5979_l = _1c4cc07cc_AsU64(_59621_c);;
	jule::U64 _5989_r = _1c4cc07cc_AsU64(_59632_x);;
	_1c4cc10c4_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1aab41ca5_FindModuleFile(jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7b86418:;
		if (it != expr_end) {
			jule::Ptr<_206b6d2a2_DirEntry> *_1312_d = it;
			{
				if (((!(_206b7bda4_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1a7b86418:;
			++it;
			goto _iter_begin_1a7b86418;
		}
		_iter_end_1a7b86418:;
	};
	return false;;
}



inline jule::Str _1aab42080_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>> _2617_dirents = ({
				auto except = static__1c38e42ae_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1a7b87260;
				} jule::Slice<jule::Ptr<_206b6d2a2_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1aab41ca5_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I32 _3513_n = _2427_path.len();;
			_2427_path=_1c38e1d4a_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1a7b87260;
			};
		}
	_iter_next_1a7b87260:;
	}
	_iter_end_1a7b87260:;;
	return jule::Str();;
}



inline jule::Slice<_1c3983b45_Log> _1aab42349_CheckModuleFile(jule::Str* _4621_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__206b79b93_Read(_1c38e1157_Join(jule::Slice<jule::Str>::make({(*(_4621_path)),jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1c3983b45_Log>::make({_1c3983b45_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _1c38c6eea_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1c3983b45_Log>::make({_1c3983b45_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1aab42d83_IsPub(jule::Str* _1011_ident) {
	if (((*(_1011_ident))[0LL] < 128LLU)) {
		jule::U8 _1213_b = (*(_1011_ident))[0LL];;
		return (('A' <= _1213_b) && (_1213_b <= 'Z'));;
	};
	jule::I32 _1510_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune(_206b74495_Stobs(_1011_ident));
		_1510_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1de999ea3_IsUpper(_1510_r);;
}



inline jule::Bool _1aab88758_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1aaba10de_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I32 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1aaba1be4_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1aaba1298_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1aaba15d9_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I32 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				(_4713_s).append(_1aaba2068_strEsqSeq(_4210_bytes, &(_4813_i)));;
			} else {
				jule::I32 _5418_r = 0;;
				jule::I32 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_1c387de5d_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1a7b92ba5:;
	}
	_iter_end_1a7b92ba5:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1aaba18a3_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1a7b967be:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a7b96846:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a7b968bd:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1a7b96945:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1a7b969bc:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1a7b96a44:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1a7b96abb:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1a7b96b43:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1a7b96bba:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1a7b96c42:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1a7b9667b:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1aaba1be4_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I32* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1aaba18a3_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1a7b9b1db:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1c4c9ad18_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1a7b9b450:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1c4c9ad18_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1a7b9b4b6:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1c4c9ad18_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1a7b99d44:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1c4c9ad18_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1a7b99cde:;
	};
}



inline jule::Slice<jule::U8> _1aaba2068_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I32* _12434_i) {
	jule::I32 _1259_r = _1aaba1be4_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1259_r));;
}



inline jule::I32 _1aacd3a4b_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I32* _1138_start) {
	jule::I32 _1213_i = (*(_1138_start));;
	while ((_1213_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _1414_r = 0;;
			jule::I32 _1417_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune((*(_1122_bytes)).slice(_1213_i));
				_1414_r = __jule_assign_result.__jule_result_arg0;
				_1417_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1414_r == '{')) {
				return _1213_i;;
			};
			_1213_i+=_1417_size;
		}
	_iter_next_1a7bcba13:;
	}
	_iter_end_1a7bcba13:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1aacd3e14_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I32 _299_start = (*(_2824_i));;
	jule::I32 _3013_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _3214_r = 0;;
			jule::I32 _3217_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1c387c9ea_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_3214_r = __jule_assign_result.__jule_result_arg0;
				_3217_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_3217_size;
			{
				auto &_match_expr{ _3214_r };
				
				if (_match_expr == '{') {
					_case_begin_1a7bce2b8:;
					{
						(_3013_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1a7bce395:;
					{
						(_3013_braces)--;
						if ((_3013_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_299_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1a7bcdbe1:;
			};
		}
	_iter_next_1a7bcd52b:;
	}
	_iter_end_1a7bcd52b:;;
	return nullptr;;
}



inline void _1aacd4200_FmtByDefault(_1c38d3b83_StrBuilder* _4822_buf, jule::Any* _4840_arg) {
	if (((*(_4840_arg)) == nullptr)) {
		_1c38dc94a_WriteStr(_4822_buf, jule::Str("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4840_arg)) };
		
		if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1a7bd07e7:;
			{
				_1c38dc94a_WriteStr(_4822_buf, _1c4c95e01_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F32>(&__jule_any_type132))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1a7bd0ece:;
			{
				_1c38dc94a_WriteStr(_4822_buf, _1c4c95e01_FmtFloat(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1a7bd0990:;
			{
				_1c38dc94a_WriteStr(_4822_buf, _1c4cac874_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I8>(&__jule_any_type133)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1a7bd0a06:;
			{
				_1c38dc94a_WriteStr(_4822_buf, _1c4cac874_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I16>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1a7bd1111:;
			{
				_1c38dc94a_WriteStr(_4822_buf, _1c4cac874_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1a7bd1177:;
			{
				_1c38dc94a_WriteStr(_4822_buf, _1c4cac874_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1a7bd11dd:;
			{
				_1c38dc94a_WriteStr(_4822_buf, _1c4cac4ab_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U8>(&__jule_any_type131)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1a7bd1254:;
			{
				_1c38dc94a_WriteStr(_4822_buf, _1c4cac4ab_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U16>(&__jule_any_type135)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1a7bd12ba:;
			{
				_1c38dc94a_WriteStr(_4822_buf, _1c4cac4ab_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U32>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1a7bd1331:;
			{
				_1c38dc94a_WriteStr(_4822_buf, _1c4cac4ab_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1a7bd1397:;
			{
				_1c38dc94a_WriteStr(_4822_buf, (*(_4840_arg)).cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1a7bd140d:;
			{
				if ((*(_4840_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					_1c38dc94a_WriteStr(_4822_buf, jule::Str("true", 4));
				} else {
					_1c38dc94a_WriteStr(_4822_buf, jule::Str("false", 5));
				};
			}
		}
		else {
			_case_begin_1a7bd02db:;
			{
				_1c38dc94a_WriteStr(_4822_buf, jule::to_str((*(_4840_arg))));
			}
		}
		_match_end_1a7bce6b4:;
	};
}



inline void _1aacd461d_applyFmtByDefault(_1c38d3b83_StrBuilder* _8727_buf, jule::I32* _8749_j, jule::Slice<jule::Any> _8757_args) {
	jule::Any _889_arg = _8757_args[(*(_8749_j))];;
	((*(_8749_j)))++;
	_1aacd4200_FmtByDefault(_8727_buf, &(_889_arg));
}



inline void _1aacd4a6e_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1c38d3b83_StrBuilder* _9536_buf, jule::I32* _9558_j, jule::Slice<jule::Any> _9566_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1aacd461d_applyFmtByDefault(_9536_buf, _9558_j, _9566_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		_1c38dc94a_WriteStr(_9536_buf, jule::Str("{}", 2));
		return;;
	};
	_1c38dc692_Write(_9536_buf, (*(_9518_fmt)));
}



inline jule::Str _1aacd4db0_Format(jule::Str* _11412_fmt, jule::Slice<jule::Any> _11422_args) {
	if ((_11422_args.len() == 0LL)) {
		return (*(_11412_fmt));;
	};
	jule::Slice<jule::U8> _11813_fmtBytes = _206b74495_Stobs(_11412_fmt);;
	_1c38d3b83_StrBuilder _11913_buf = static__1c38d3ea2_New(static_cast<jule::I32>((*(_11412_fmt)).len()));;
	jule::I32 _12013_j = 0LL;;
	jule::I32 _12113_last = 0LL;;
	jule::I32 _12213_i = _1aacd3a4b_findFormatPrefix(&(_11813_fmtBytes), &(_12113_last));;
	for (; (_12213_i != -1LL); _12213_i=static_cast<jule::I32>(_1aacd3a4b_findFormatPrefix(&(_11813_fmtBytes), &(_12213_i)))) {
		{
			_1c38dc692_Write(&_11913_buf, _11813_fmtBytes.slice(_12113_last, _12213_i));
			jule::Slice<jule::U8> _12517_format = _1aacd3e14_getFormatRange(&(_12213_i), &(_11813_fmtBytes));;
			if ((_12517_format == nullptr)) {
				goto _iter_next_1a7bdca35;
			};
			_1aacd4a6e_applyFmt(&(_12517_format), &(_11913_buf), &(_12013_j), _11422_args);
			if ((_12013_j >= _11422_args.len())) {
				_1c38dc692_Write(&_11913_buf, _11813_fmtBytes.slice(_12213_i));
				_12113_last=static_cast<jule::I32>(_11813_fmtBytes.len());
				goto _iter_end_1a7bdca35;
			};
			_12113_last=_12213_i;
		}
	_iter_next_1a7bdca35:;
	}
	_iter_end_1a7bdca35:;;
	if ((_12113_last < _11813_fmtBytes.len())) {
		_1c38dc692_Write(&_11913_buf, _11813_fmtBytes.slice(_12113_last));
	};
	return _1c38dd242_Str(&_11913_buf);;
}



inline jule::Str _1aacd6e39_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1aacd4db0_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1aaab837a_parameterUsesGenerics(jule::Ptr<_1aaab5102_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>>* _38446_generics) {
	if (_1aaaabe84_IsSelf((*(_38431_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _1aac17be4_kindUsesGenerics(&((*(_38431_p)).get()._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1aac0465e_TypeSymbol> _1aaabaaca_buildType(jule::Ptr<_1aaa765e1_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1aabbd062_Value> _1aaabadd8_buildExpr(jule::Ptr<_1aaa7a925_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1aabeb403_TypeAlias> _1aaabb1a2_buildTypeAlias(jule::Ptr<_1aaa8d031_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1aabeb403_TypeAlias>(_1aabeb403_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_Binded=_11223_decl.get()._field_Binded, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1aaabaaca_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1aaa943bc_Field> _1aaabb4e3_buildField(jule::Ptr<_1aaa91809_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1aaa943bc_Field>(_1aaa943bc_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1aaabaaca_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1aaa943bc_Field>> _1aaabb7ac_buildFields(jule::Slice<jule::Ptr<_1aaa91809_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1aaa943bc_Field>> _13513_fields = jule::Slice<jule::Ptr<_1aaa943bc_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e87917:;
		if (it != expr_end) {
			jule::Ptr<_1aaa91809_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaa943bc_Field>> &__jule_push_dest = _13513_fields; __jule_push_dest.push(_1aaabb4e3_buildField(_13617_decl)); };
			}
			_iter_next_1a7e87917:;
			++it;
			goto _iter_begin_1a7e87917;
		}
		_iter_end_1a7e87917:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1aaa972b0_Struct> _1aaabba76_buildStruct(jule::Ptr<_1aaa92200_StructDecl> _14220_decl) {
	return jule::new_ptr<_1aaa972b0_Struct>(_1aaa972b0_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1aaabb7ac_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_Binded=_14220_decl.get()._field_Binded, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1aaaab868_Param> _1aaabbd40_buildParam(jule::Ptr<_1aaa86e2b_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1aaaab868_Param>(_1aaaab868_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1aaabaaca_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1aaaab868_Param>> _1aaabc1d6_buildParams(jule::Slice<jule::Ptr<_1aaa86e2b_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1aaaab868_Param>> _16613_params = jule::Slice<jule::Ptr<_1aaaab868_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e8aab3:;
		if (it != expr_end) {
			jule::Ptr<_1aaa86e2b_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaaab868_Param>> &__jule_push_dest = _16613_params; __jule_push_dest.push(_1aaabbd40_buildParam(_16717_decl)); };
			}
			_iter_next_1a7e8aab3:;
			++it;
			goto _iter_begin_1a7e8aab3;
		}
		_iter_end_1a7e8aab3:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1aaaab0d7_RetType> _1aaabc4a0_buildRetType(jule::Ptr<_1aaa794d4_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1aaaab0d7_RetType>(_1aaaab0d7_RetType{._field_Kind=_1aaabaaca_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1aaab3199_Fn> _1aaabc769_buildFunc(jule::Ptr<_1aaa8837d_FnDecl> _18318_decl) {
	return jule::new_ptr<_1aaab3199_Fn>(_1aaab3199_Fn{._field_Token=_18318_decl.get()._field_Token, ._field_Global=_18318_decl.get()._field_Global, ._field_Unsafety=_18318_decl.get()._field_Unsafety, ._field_Public=_18318_decl.get()._field_Public, ._field_Binded=_18318_decl.get()._field_Binded, ._field_Statically=_18318_decl.get()._field_Statically, ._field_Exceptional=_18318_decl.get()._field_Exceptional, ._field_Ident=_18318_decl.get()._field_Ident, ._field_Directives=_18318_decl.get()._field_Directives, ._field_Scope=_18318_decl.get()._field_Scope, ._field_Generics=_18318_decl.get()._field_Generics, ._field_Result=_1aaabc4a0_buildRetType(_18318_decl.get()._field_Result), ._field_Params=_1aaabc1d6_buildParams(&(_18318_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1aaab3199_Fn>> _1aaabca33_buildMethods(jule::Slice<jule::Ptr<_1aaa8837d_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1aaab3199_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1aaab3199_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e8e864:;
		if (it != expr_end) {
			jule::Ptr<_1aaa8837d_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaab3199_Fn>> &__jule_push_dest = _20213_methods; __jule_push_dest.push(_1aaabc769_buildFunc(_20317_decl)); };
			}
			_iter_next_1a7e8e864:;
			++it;
			goto _iter_begin_1a7e8e864;
		}
		_iter_end_1a7e8e864:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_1aac0465e_TypeSymbol>> _1aaabccec_buildTraitInherits(jule::Slice<jule::Ptr<_1aaa765e1_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1aac0465e_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_1aac0465e_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e909db:;
		if (it != expr_end) {
			jule::Ptr<_1aaa765e1_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1aac0465e_TypeSymbol>> &__jule_push_dest = _21013_symbols; __jule_push_dest.push(_1aaabaaca_buildType(_21117_it)); };
			}
			_iter_next_1a7e909db:;
			++it;
			goto _iter_begin_1a7e909db;
		}
		_iter_end_1a7e909db:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_1aaac6443_Trait> _1aaabd0b6_buildTrait(jule::Ptr<_1aaa9293c_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1aaac6443_Trait>(_1aaac6443_Trait{._field_Token=_21719_decl.get()._field_Token, ._field_Ident=_21719_decl.get()._field_Ident, ._field_Public=_21719_decl.get()._field_Public, ._field_Inherits=_1aaabccec_buildTraitInherits(&(_21719_decl.get()._field_Inherits)), ._field_Methods=_1aaabca33_buildMethods(&(_21719_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_1aaac80c1_EnumItem> _1aaabd380_buildEnumItem(jule::Ptr<_1aaa8e9e4_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1aaac80c1_EnumItem>(_1aaac80c1_EnumItem{._field_Token=_22722_decl.get()._field_Token, ._field_Ident=_22722_decl.get()._field_Ident, ._field_Value=_1aaabadd8_buildExpr(_22722_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1aaac80c1_EnumItem>> _1aaabd649_buildEnumItems(jule::Slice<jule::Ptr<_1aaa8e9e4_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1aaac80c1_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_1aaac80c1_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e93428:;
		if (it != expr_end) {
			jule::Ptr<_1aaa8e9e4_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaac80c1_EnumItem>> &__jule_push_dest = _23613_items; __jule_push_dest.push(_1aaabd380_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1a7e93428:;
			++it;
			goto _iter_begin_1a7e93428;
		}
		_iter_end_1a7e93428:;
	};
	return _23613_items;;
}



inline jule::Ptr<_1aaac8b3d_Enum> _1aaabdabc_buildEnum(jule::Ptr<_1aaa905a5_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1aaac8b3d_Enum>(_1aaac8b3d_Enum{._field_Token=_24318_decl.get()._field_Token, ._field_Public=_24318_decl.get()._field_Public, ._field_Ident=_24318_decl.get()._field_Ident, ._field_Kind=_1aaabaaca_buildType(_24318_decl.get()._field_Kind), ._field_Items=_1aaabd649_buildEnumItems(&(_24318_decl.get()._field_Items))});;
}



inline jule::Ptr<_1aaac9c71_TypeEnumItem> _1aaabdd86_buildTypeEnumItem(jule::Ptr<_1aaa90dd0_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1aaac9c71_TypeEnumItem>(_1aaac9c71_TypeEnumItem{._field_Token=_25326_decl.get()._field_Token, ._field_Ident=_25326_decl.get()._field_Ident, ._field_Kind=_1aaabaaca_buildType(_25326_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1aaac9c71_TypeEnumItem>> _1aaabe150_buildTypeEnumItems(jule::Slice<jule::Ptr<_1aaa90dd0_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1aaac9c71_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_1aaac9c71_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e95d65:;
		if (it != expr_end) {
			jule::Ptr<_1aaa90dd0_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aaac9c71_TypeEnumItem>> &__jule_push_dest = _26213_items; __jule_push_dest.push(_1aaabdd86_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1a7e95d65:;
			++it;
			goto _iter_begin_1a7e95d65;
		}
		_iter_end_1a7e95d65:;
	};
	return _26213_items;;
}



inline jule::Ptr<_1aaaca348_TypeEnum> _1aaabe419_buildTypeEnum(jule::Ptr<_1aaa91540_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1aaaca348_TypeEnum>(_1aaaca348_TypeEnum{._field_Token=_26922_decl.get()._field_Token, ._field_Public=_26922_decl.get()._field_Public, ._field_Ident=_26922_decl.get()._field_Ident, ._field_Items=_1aaabe150_buildTypeEnumItems(&(_26922_decl.get()._field_Items))});;
}



inline jule::Ptr<_1aab68969_Var> _1aaabe6d3_buildVar(jule::Ptr<_1aaa8945b_VarDecl> _27817_decl) {
	return jule::new_ptr<_1aab68969_Var>(_1aab68969_Var{._field_Token=_27817_decl.get()._field_Token, ._field_Ident=_27817_decl.get()._field_Ident, ._field_Binded=_27817_decl.get()._field_Binded, ._field_Constant=_27817_decl.get()._field_Constant, ._field_Mutable=_27817_decl.get()._field_Mutable, ._field_Public=_27817_decl.get()._field_Public, ._field_Statically=_27817_decl.get()._field_Statically, ._field_Reference=_27817_decl.get()._field_Reference, ._field_Kind=_1aaabaaca_buildType(_27817_decl.get()._field_Kind), ._field_Value=_1aaabadd8_buildExpr(_27817_decl.get()._field_Expr), ._field_Refers=static__1aaab9546_new(), ._field_Directives=_27817_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1aab68969_Var>> _1aaabe99c_buildVars(jule::Slice<jule::Ptr<_1aaa8945b_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1aab68969_Var>> _29613_vars = jule::Slice<jule::Ptr<_1aab68969_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7e995d8:;
		if (it != expr_end) {
			jule::Ptr<_1aaa8945b_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = _29613_vars; __jule_push_dest.push(_1aaabe6d3_buildVar(_29717_decl)); };
			}
			_iter_next_1a7e995d8:;
			++it;
			goto _iter_begin_1a7e995d8;
		}
		_iter_end_1a7e995d8:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_1aaaed3b0_Impl> _1aaabec66_buildImpl(jule::Ptr<_1aaa9309c_Impl> _30318_decl) {
	return jule::new_ptr<_1aaaed3b0_Impl>(_1aaaed3b0_Impl{._field_Base=_30318_decl.get()._field_Base, ._field_Dest=_30318_decl.get()._field_Dest, ._field_Methods=_1aaabca33_buildMethods(&(_30318_decl.get()._field_Methods)), ._field_Statics=_1aaabe99c_buildVars(_30318_decl.get()._field_Statics)});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae8da0_buildAsComptimeMethodData(jule::Ptr<_1aaab609d_FnIns>* _139635_f) {
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>((*(_139635_f)), 1)}), });;
}



inline jule::Ptr<_1aab24c33_ImportInfo> _1aaae91ad_findComptimePackage(jule::Ptr<_1aab45c87_Sema>* _140429_s) {
	return _1aab4622c_SelectPackage((*(_140429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1aab24c33_ImportInfo>)>([=](jule::Ptr<_1aab24c33_ImportInfo> _140528_pkg) mutable -> jule::Bool {
		return _140528_pkg.get()._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae9532_buildComptimeTypeInfoData(jule::Ptr<_1aab45c87_Sema>* _141035_s, jule::Ptr<_1aabec1e5_TypeKind>* _141050_t) {
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_1aab455c2_pushComptimeTypeInfo((*(_141035_s)).get()._field_meta.ptr(), _141050_t), 15)}), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aaae9763_buildComptimeValue(jule::Ptr<_1aabbbe1d_Data>* _141828_d) {
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaae32b7_comptimeValue>(_1aaae32b7_comptimeValue{._field_data=(*(_141828_d))}), 16)}), });;
}



inline jule::Bool _1aaaec733_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1aabec1e5_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1a81187ce:;
			{
				jule::Ptr<_1aac05066_Prim> _14513_prim = _1aabeeadd_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1c4cbcb92_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1a811956b:;
			{
				jule::Ptr<_1aac05066_Prim> _15113_prim = _1aabeeadd_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1c4cbc004_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1a81195d2:;
			{
				jule::Ptr<_1aac05066_Prim> _15713_prim = _1aabeeadd_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1c4cbc60e_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1a81197be:;
			{
				jule::Ptr<_1aac05066_Prim> _16313_prim = _1aabeeadd_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1c4cbc8c8_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1a8119835:;
			{
				return _1aabeda87_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1a811989b:;
			{
				return (!(_1aabeda87_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1a8119912:;
			{
				return _1aabed801_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1a8119a22:;
			{
				return _1aabedd1d_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_1a81134bb:;
			{
				return false;;
			}
		}
		_match_end_1a81137c9:;
	};
}



inline jule::Bool _1aaaeca41_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_1aaaeaa2d_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8119abb:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_1a8119abb:;
			++it;
			goto _iter_begin_1a8119abb;
		}
		_iter_end_1a8119abb:;
	};
	return false;;
}



inline jule::Ptr<_1aab0aae8_scopeChecker> _1aab005c1_newScopeCheckerBase(jule::Ptr<_1aab45c87_Sema>* _5829_s, jule::Ptr<_1aaab609d_FnIns> _5843_owner) {
	return jule::new_ptr<_1aab0aae8_scopeChecker>(_1aab0aae8_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1aabb6be8_SymbolTable>(), });;
}



inline jule::Ptr<_1aab0aae8_scopeChecker> _1aab00989_newScopeChecker(jule::Ptr<_1aab45c87_Sema>* _6625_s, jule::Ptr<_1aaab609d_FnIns> _6639_owner) {
	jule::Ptr<_1aab0aae8_scopeChecker> _6713_base = _1aab005c1_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1aab09652_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1aab09bd5_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1aab09652_scopeLabel> _1aab00d0d_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1aab0aae8_scopeChecker> _7637_scope) {
	jule::Ptr<_1aab09652_scopeLabel> _7713_label = _1aab0e602_findLabelScope(_7637_scope, _7621_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7637_scope.get()._field_parent == nullptr) || (_7637_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=_7637_scope.get()._field_parent;
			_7713_label=_1aab0e602_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1a8133970:;
	}
	_iter_end_1a8133970:;;
	return _7713_label;;
}



inline jule::Bool _1aab011c6_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1aab037e4_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1a8134ec1:;
			{
				jule::Ptr<_1aaaa194b_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1aaaa194b_FnCallExprModel>(&__jule_any_type35);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a8135037:;
			{
				jule::Ptr<_1aabbbe1d_Data> _9813_d = _9021_Model.cast_ptr<_1aabbbe1d_Data>(&__jule_any_type24);;
				return _1aab011c6_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1a8134e6b:;
	};
	return false;;
}



inline jule::Bool _1aab0154a_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1aab037e4_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1a8136ce7:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1aab037e4_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1a8136d6e:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1aab04729_InfIter>(&__jule_any_type37).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1a8136de6:;
			{
				jule::Ptr<_1aab0562b_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_1aab0562b_RangeIter>(&__jule_any_type41);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _1aab011c6_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1a8137149:;
			{
				jule::Ptr<_1aab04bd0_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_1aab04bd0_WhileIter>(&__jule_any_type39);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _1aab011c6_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _1aab011c6_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1a81371b0:;
			{
				jule::Ptr<_1aab0792a_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_1aab0792a_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a813a845:;
					if (it != expr_end) {
						jule::Ptr<_1aab08563_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a813b208:;
								if (it != expr_end) {
									jule::Ptr<_1aabbbe1d_Data> *_12420_expr = it;
									{
										if (_1aab011c6_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1a813b208:;
									++it;
									goto _iter_begin_1a813b208;
								}
								_iter_end_1a813b208:;
							};
						}
						_iter_next_1a813a845:;
						++it;
						goto _iter_begin_1a813a845;
					}
					_iter_end_1a813a845:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1a8137226:;
			{
				jule::Ptr<_1aab0442c_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_1aab0442c_Conditional>(&__jule_any_type36);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a813ca45:;
					if (it != expr_end) {
						jule::Ptr<_1aab03c12_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _1aab011c6_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1a813ca45:;
						++it;
						goto _iter_begin_1a813ca45;
					}
					_iter_end_1a813ca45:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a813728c:;
			{
				jule::Ptr<_1aabbbe1d_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_1aabbbe1d_Data>(&__jule_any_type24);;
				return _1aab011c6_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1a8135532:;
			{
				return false;;
			}
		}
		_match_end_1a81354cc:;
	};
}



inline jule::I32 _1aab018be_countMatchType(jule::Ptr<_1aab0792a_Match>* _14720_m, jule::Ptr<_1aabec1e5_TypeKind>* _14732_t) {
	jule::I32 _14813_n = 0LL;;
	jule::Str _1499_kind = _1aabec5ad_Str((*(_14732_t)).ptr());;
	_julec_label_1a8140075:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8140471:;
		if (it != expr_end) {
			jule::Ptr<_1aab08563_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1a8140471;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a8140dbc:;
					if (it != expr_end) {
						jule::Ptr<_1aabbbe1d_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1a8140471;
							};
							if ((_1499_kind == _1aabec5ad_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_1aabec1e5_TypeKind>(&__jule_any_type90).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1a8140dbc:;
						++it;
						goto _iter_begin_1a8140dbc;
					}
					_iter_end_1a8140dbc:;
				};
			}
			_iter_next_1a8140471:;
			++it;
			goto _iter_begin_1a8140471;
		}
		_iter_end_1a8140471:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1aabbbe1d_Data>> _1aab01b88_getDatasFromTupleData(jule::Ptr<_1aabbbe1d_Data>* _17131_d) {
	if ((_1aac01914_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type88) {
				_case_begin_1a8144d38:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_1aaaa59e9_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1a814293a:;
				{
					jule::Ptr<_1aac0a159_Tuple> _17721_t = _1aac01914_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1aabbbe1d_Data>> _17821_r = jule::Slice<jule::Ptr<_1aabbbe1d_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a81436b6:;
						if (it != expr_end) {
							jule::Ptr<_1aabec1e5_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1aabbbe1d_Data>> &__jule_push_dest = _17821_r; __jule_push_dest.push(jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1a81436b6:;
							++it;
							goto _iter_begin_1a81436b6;
						}
						_iter_end_1a81436b6:;
					};
					return _17821_r;;
				}
			}
			_match_end_1a81428d5:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1aabbbe1d_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1aab0254b_checkMut(jule::Ptr<_1aab45c87_Sema>* _20618_s, jule::Ptr<_1aabbbe1d_Data>* _20629_left, jule::Ptr<_1aabbbe1d_Data> _20646_right, jule::Ptr<_1c3e3a5e6_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1a8147841:;
			{
				_1aab488c2_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1aabeda87_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1a81478b8:;
			{
				if (((_20660_op.get()._field_Id != static_cast<jule::U32>(71LLU)) && (_1aac01161_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1aab488c2_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a8147775:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a814770e:;
	};
}



inline jule::Bool _1aab02a35_checkAssign(jule::Ptr<_1aab45c87_Sema>* _22521_s, jule::Ptr<_1aabbbe1d_Data>* _22536_left, jule::Ptr<_1aabbbe1d_Data> _22553_right, jule::Ptr<_1c3e3a5e6_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1aaab609d_FnIns> _2269_f = _1aac00dca_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1aab488c2_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1aabbc7e2_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1a814bb86:;
			{
				_1aab488c2_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1aab48c35_pushSuggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1a814bc0d:;
			{
				_1aab488c2_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1aab0254b_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1a814bc85:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1a814baba:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1a814b56a:;
	};
}



inline jule::Bool _1aab02cee_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1a8148eb3:;
			{
				return (!((*(_24731_n)).cast_ptr<_1aaa8516b_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1a814db55:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a814c48e:;
			{
				return false;;
			}
		}
		_match_end_1a814c439:;
	};
}



inline jule::Bool _1aab030b8_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_1a814e88c:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a814e903:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_1aabbbe1d_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1a81505e6:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a8150959:;
						{
							return false;;
						}
					}
					_match_end_1a8150904:;
				};
			}
		}
		else {
			_case_begin_1a814e65b:;
			{
				return false;;
			}
		}
		_match_end_1a814e606:;
	};
}



inline jule::Bool _1aab03382_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a81503d7:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1a8150b02:;
			{
				return false;;
			}
		}
		_match_end_1a8150096:;
	};
}



inline jule::U32 _1aab1c90c_removeEqFromOp(jule::U32 _213419_op) {
	{
		auto &_match_expr{ _213419_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1a81510b9:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1a8151b47:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1a8151bad:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1a8151cce:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1a8151d45:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1a8151dab:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1a8151e33:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1a8151eaa:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1a8152076:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1a81520dc:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_1a8151839:;
			{
				return _213419_op;;
			}
		}
		_match_end_1a81517c3:;
	};
}



inline jule::Ptr<_1aab68969_Var> _1aab22219_findVarInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82aa9e8:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1aab68969_Var> _4817_v = _1aabb75cd_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1a82aa9e8:;
			++it;
			goto _iter_begin_1a82aa9e8;
		}
		_iter_end_1a82aa9e8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aabeb403_TypeAlias> _1aab2268c_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82abe4a:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1aabeb403_TypeAlias> _6017_ta = _1aabb79c9_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1a82abe4a:;
			++it;
			goto _iter_begin_1a82abe4a;
		}
		_iter_end_1a82abe4a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaa972b0_Struct> _1aab22abb_findStructInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82ad39c:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1aaa972b0_Struct> _7217_s = _1aabb7dc5_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1a82ad39c:;
			++it;
			goto _iter_begin_1a82ad39c;
		}
		_iter_end_1a82ad39c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaab3199_Fn> _1aab23072_findFnInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82ae7ee:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1aaab3199_Fn> _8417_f = _1aabb82c1_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1a82ae7ee:;
			++it;
			goto _iter_begin_1a82ae7ee;
		}
		_iter_end_1a82ae7ee:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaac6443_Trait> _1aab233b3_findTraitInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82aede8:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1aaac6443_Trait> _9617_t = _1aabb8612_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1a82aede8:;
			++it;
			goto _iter_begin_1a82aede8;
		}
		_iter_end_1a82aede8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaac8b3d_Enum> _1aab23737_findEnumInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82b1c85:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1aaac8b3d_Enum> _10817_e = _1aabb8953_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1a82b1c85:;
			++it;
			goto _iter_begin_1a82b1c85;
		}
		_iter_end_1a82b1c85:;
	};
	return nullptr;;
}



inline jule::Ptr<_1aaaca348_TypeEnum> _1aab23aab_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82b2eea:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1aaaca348_TypeEnum> _12017_e = _1aabb8c94_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1a82b2eea:;
			++it;
			goto _iter_begin_1a82b2eea;
		}
		_iter_end_1a82b2eea:;
	};
	return nullptr;;
}



inline jule::Any _1aab240ea_defByIdentPackage(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82b44a2:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1aabb9c62_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1a82b44a2:;
			++it;
			goto _iter_begin_1a82b44a2;
		}
		_iter_end_1a82b44a2:;
	};
	return nullptr;;
}



inline jule::Bool _1aab2a134_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _1c38bdc8e_HasPrefix((*(_35518_f)), _1c38e1157_Join(jule::Slice<jule::Str>::make({_1c3a94bbd_PathStdlib,_35526_p})));;
}



inline jule::Bool _1aab43427_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a82c467c:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a82c46e3:;
			{
				jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> _1817_model = (*(_1328_m)).cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1aab43427_isValidModelForRef(&(_1817_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1a82c4759:;
			{
				jule::Ptr<_1aaaa3b4b_TraitSubIdentExprModel> _2117_model = (*(_1328_m)).cast_ptr<_1aaaa3b4b_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _1aab43427_isValidModelForRef(&(_2117_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a82c47c0:;
			{
				jule::Ptr<_1aaa9ed45_UnaryExprModel> _2417_unary = (*(_1328_m)).cast_ptr<_1aaa9ed45_UnaryExprModel>(&__jule_any_type74);;
				if ((_2417_unary.get()._field_Op.get()._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_1aac0010a_Ptr(_2417_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1aabeed74_Sptr(_2417_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1aab43427_isValidModelForRef(&(_2417_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1a82c4616:;
			{
				return false;;
			}
		}
		_match_end_1a82c41a4:;
	};
}



inline _1c3983b45_Log _1aab43955_compilerErr(jule::Ptr<_1c3e3a5e6_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_1c3983b45_Log _4313_log = _1c3983b45_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_4217_token)).get()._field_Row, ._field_Column=(*(_4217_token)).get()._field_Column, ._field_Path=(*(_4217_token)).get()._field_File.get()._field_Path, ._field_Text=_1c39840a7_Logf(_4244_fmt, _4257_args), };;
	if (_4232_line) {
		_4313_log._field_Line=_1c3e41d8e_GetRow((*(_4217_token)).get()._field_File.ptr(), (*(_4217_token)).get()._field_Row);
	};
	return _4313_log;;
}



inline jule::Bool _1aab43cc9_impIsLookupable(jule::Ptr<_1aab24c33_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*(_5621_i)).get()._field_Binded) {
		return false;;
	};
	if ((!((*(_5621_i)).get()._field_ImportAll))) {
		if (((*(_5621_i)).get()._field_Selected.len() > 0LL)) {
			return _1aab275b5_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*(_5621_i)).get()._field_ImportAll;;
}



inline void _1aab44082_appendRetVars(jule::Slice<jule::Ptr<_1aab68969_Var>>* _6823_dest, jule::Ptr<_1aaab609d_FnIns>* _6842_f) {
	if ((_1aaab361c_IsVoid((*(_6842_f)).get()._field_Decl.ptr()) || ((*(_6842_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1aabec1e5_TypeKind>> _7313_types = _1aaab729c_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*(_6842_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82cc61e:;
		if (it != expr_end) {
			jule::I32 _7410_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> _7417_ident = *it;
			{
				if ((_1c3e3d055_IsIgnoreIdent(_7417_ident.get()._field_Kind) || _1c3e3d31e_IsAnonIdent(_7417_ident.get()._field_Kind))) {
					goto _iter_next_1a82cc61e;
				};
				{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_1aab68969_Var>(_1aab68969_Var{._field_Scope=(*(_6842_f)).get()._field_Scope, ._field_Token=_7417_ident, ._field_Ident=_7417_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=_7313_types[_7410_i]}), ._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()}), ._field_RetOrder=_7410_i, })); };
			}
			_iter_next_1a82cc61e:;
			++it;
			_7410_i++;
			goto _iter_begin_1a82cc61e;
		}
		_iter_end_1a82cc61e:;
	};
	if ((((*(_6842_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*(_6823_dest))[((*(_6823_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1aab4436d_appendParamVars(jule::Slice<jule::Ptr<_1aab68969_Var>>* _9825_dest, jule::Ptr<_1aaab609d_FnIns>* _9844_f) {
	if (((*(_9844_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9844_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82d1315:;
		if (it != expr_end) {
			jule::Ptr<_1aaab5102_ParamIns> _10317_p = *it;
			{
				if ((_1c3e3d055_IsIgnoreIdent(_10317_p.get()._field_Decl.get()._field_Ident) || _1c3e3d31e_IsAnonIdent(_10317_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1a82d1315;
				};
				jule::Ptr<_1aab68969_Var> _10817_v = jule::new_ptr<_1aab68969_Var>(_1aab68969_Var{._field_Scope=(*(_9844_f)).get()._field_Scope, ._field_Token=_10317_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10317_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10317_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10317_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(), ._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()}), });;
				{
					
					if (_1aaaabe84_IsSelf(_10317_p.get()._field_Decl.ptr())) {
						_case_begin_1a82d49bc:;
						{
							_10817_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1aabebc3e_Kind>((*(_9844_f)).get()._field_Owner, 0)});
							_10817_v.get()._field_Reference=(!(_1aaaac21a_IsRef(_10317_p.get()._field_Decl.ptr())));
							if (_1aaaac21a_IsRef(_10317_p.get()._field_Decl.ptr())) {
								_10817_v.get()._field_Ident=_10817_v.get()._field_Ident.slice(1LL);
								_10817_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aac08a92_Sptr>(_1aac08a92_Sptr{._field_Elem=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_BindIdent=_10817_v.get()._field_Kind.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10817_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 21);
							};
						}
					}
					else if (_10317_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1a82d48ce:;
						{
							_10817_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aac09565_Slc>(_1aac09565_Slc{._field_Elem=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_BindIdent=_10317_p.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10317_p.get()._field_Kind.get()._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1a82d457c:;
						{
							_10817_v.get()._field_Kind.get()._field_Kind=_10317_p.get()._field_Kind;
						}
					}
					_match_end_1a82d445b:;
				};
				{ jule::Slice<jule::Ptr<_1aab68969_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_10817_v); };
			}
			_iter_next_1a82d1315:;
			++it;
			goto _iter_begin_1a82d1315;
		}
		_iter_end_1a82d1315:;
	};
}



inline void _1aab44659_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>>* _15834_dest, jule::Ptr<_1aaab609d_FnIns>* _15859_f) {
	jule::I32 _15913_size = (*(_15859_f)).get()._field_Generics.len();;
	if (((*(_15859_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15913_size+=(*(_15859_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15913_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15859_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82da055:;
		if (it != expr_end) {
			jule::I32 _16810_i = it - expr->begin();
			jule::Ptr<_1aabea80e_InsGeneric> _16817_g = *it;
			{
				jule::Ptr<_1aaa838c8_GenericDecl> _16917_decl = (*(_15859_f)).get()._field_Decl.get()._field_Generics[_16810_i];;
				{ jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1aabeb403_TypeAlias>(_1aabeb403_TypeAlias{._field_Scope=(*(_15859_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16917_decl.get()._field_Token, ._field_Ident=_16917_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=_16817_g.get()._field_Kind}), })); };
			}
			_iter_next_1a82da055:;
			++it;
			_16810_i++;
			goto _iter_begin_1a82da055;
		}
		_iter_end_1a82da055:;
	};
	if (((*(_15859_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1aaa9a390_StructIns> _18117_owner = (*(_15859_f)).get()._field_Owner;;
		{
			auto expr = &(_18117_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1a82db188:;
			if (it != expr_end) {
				jule::I32 _18214_i = it - expr->begin();
				jule::Ptr<_1aabea80e_InsGeneric> _18221_g = *it;
				{
					jule::Ptr<_1aaa838c8_GenericDecl> _18321_decl = _18117_owner.get()._field_Decl.get()._field_Generics[_18214_i];;
					{ jule::Slice<jule::Ptr<_1aabeb403_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1aabeb403_TypeAlias>(_1aabeb403_TypeAlias{._field_Scope=(*(_15859_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18321_decl.get()._field_Token, ._field_Ident=_18321_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=_18221_g.get()._field_Kind}), })); };
				}
				_iter_next_1a82db188:;
				++it;
				_18214_i++;
				goto _iter_begin_1a82db188;
			}
			_iter_end_1a82db188:;
		};
	};
}



inline jule::Ptr<_1aabb6be8_SymbolTable> _1aab449cd_findFile(jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>* _19618_files, jule::Ptr<_1c3e40db0_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82dd058:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _19717_fl = *it;
			{
				if ((_19717_fl.get()._field_File == (*(_19642_handler)))) {
					return _19717_fl;;
				};
			}
			_iter_next_1a82dd058:;
			++it;
			goto _iter_begin_1a82dd058;
		}
		_iter_end_1a82dd058:;
	};
	return nullptr;;
}



inline void _1aab44e84_pushSuggestion(_1c3983b45_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	_20530_log->_field_Suggestion=_1c39840a7_Logf(_20541_fmt, _20554_args);
}



inline void _1aab66c53_pushImplemented(jule::Ptr<_1aaac6443_Trait> _292224_t, jule::Ptr<_1aaa972b0_Struct>* _292240_d) {
	_julec_label_1a82e10a0:;
	{
		
		if ((_292224_t.get()._field_Implemented.len() > 0LL)) {
			_case_begin_1a82e17ba:;
			{
				{
					auto expr = &(_292224_t.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a82e227c:;
					if (it != expr_end) {
						jule::Ptr<_1aaa972b0_Struct> _292616_s = *it;
						{
							if ((_292616_s == (*(_292240_d)))) {
								goto _match_end_1a82e12c0;
							};
						}
						_iter_next_1a82e227c:;
						++it;
						goto _iter_begin_1a82e227c;
					}
					_iter_end_1a82e227c:;
				};
				goto _case_begin_1a82e1336;
			}
		}
		else {
			_case_begin_1a82e1336:;
			{
				{ jule::Slice<jule::Ptr<_1aaa972b0_Struct>> &__jule_push_dest = _292224_t.get()._field_Implemented; __jule_push_dest.push((*(_292240_d))); };
			}
		}
		_match_end_1a82e12c0:;
	};
	{
		auto expr = &(_292224_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82e2c61:;
		if (it != expr_end) {
			jule::Ptr<_1aac0465e_TypeSymbol> _293517_i = *it;
			{
				_1aab66c53_pushImplemented(_1aac013e7_Trait(_293517_i.get()._field_Kind.ptr()), _292240_d);
			}
			_iter_next_1a82e2c61:;
			++it;
			goto _iter_begin_1a82e2c61;
		}
		_iter_end_1a82e2c61:;
	};
}



inline void _1aab6703e_pushImplements(jule::Ptr<_1aaa972b0_Struct>* _294024_s, jule::Ptr<_1aaac6443_Trait> _294040_t) {
	_julec_label_1a82e37de:;
	{
		
		if (((*(_294024_s)).get()._field_Implements.len() > 0LL)) {
			_case_begin_1a82e4009:;
			{
				{
					auto expr = &((*(_294024_s)).get()._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a82e49bb:;
					if (it != expr_end) {
						jule::Ptr<_1aaac6443_Trait> _294416_b = *it;
						{
							if ((_294416_b == _294040_t)) {
								goto _match_end_1a82e3a0e;
							};
						}
						_iter_next_1a82e49bb:;
						++it;
						goto _iter_begin_1a82e49bb;
					}
					_iter_end_1a82e49bb:;
				};
				goto _case_begin_1a82e3a75;
			}
		}
		else {
			_case_begin_1a82e3a75:;
			{
				{ jule::Slice<jule::Ptr<_1aaac6443_Trait>> &__jule_push_dest = (*(_294024_s)).get()._field_Implements; __jule_push_dest.push(_294040_t); };
			}
		}
		_match_end_1a82e3a0e:;
	};
	{
		auto expr = &(_294040_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a82e54a0:;
		if (it != expr_end) {
			jule::Ptr<_1aac0465e_TypeSymbol> _295317_i = *it;
			{
				_1aab6703e_pushImplements(_294024_s, _1aac013e7_Trait(_295317_i.get()._field_Kind.ptr()));
			}
			_iter_next_1a82e54a0:;
			++it;
			goto _iter_begin_1a82e54a0;
		}
		_iter_end_1a82e54a0:;
	};
}



inline jule::Bool _1aaba280a_traitHasReferenceReceiver(jule::Ptr<_1aaac6443_Trait>* _2731_t) {
	{
		auto expr = &((*(_2731_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a859ddc9:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> *_2812_f = it;
			{
				if ((*(_2812_f)).get()._field_Statically) {
					goto _iter_next_1a859ddc9;
				};
				jule::Ptr<_1aaaab868_Param> _3413_p = (*(_2812_f)).get()._field_Params[0LL];;
				if ((_1aaaac21a_IsRef(_3413_p.ptr()) && _1aaaabe84_IsSelf(_3413_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1a859ddc9:;
			++it;
			goto _iter_begin_1a859ddc9;
		}
		_iter_end_1a859ddc9:;
	};
	return false;;
}



inline jule::Bool _1aaba2b90_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_1aabbbe1d_Data>* _4233_d) {
	jule::Str _439_value = _1c4c95e01_FmtFloat(static_cast<jule::F64>(_1c4cc0a63_AsF64((*(_4233_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1c4cb14c1_CheckBitFloat(_439_value, static_cast<jule::I32>(_1c4caeea3_BitsizeOf((*(_4221_kind)))));;
}



inline jule::Bool _1aaba3014_sigAssignable(jule::Str _4718_kind, jule::Ptr<_1aabbbe1d_Data>* _4730_d) {
	jule::F64 _489_min = _1c4cb66d5_Min(_4718_kind);;
	jule::F64 _499_max = _1c4cb699e_Max(_4718_kind);;
	{
		
		if (_1c4cc28ab_IsF64((*(_4730_d)).get()._field_Constant.ptr())) {
			_case_begin_1a85a285b:;
			{
				jule::F64 _5213_x = _1c4cc02b0_ReadF64((*(_4730_d)).get()._field_Constant.ptr());;
				jule::F64 _5314_i = 0;;
				jule::F64 _5317_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1c4c666a7_Modf(_5213_x);
					_5314_i = __jule_assign_result.__jule_result_arg0;
					_5317_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5317_frac != 0LL)) {
					return false;;
				};
				return ((_5314_i >= _489_min) && (_5314_i <= _499_max));;
			}
		}
		else if (_1c4cc2108_IsU64((*(_4730_d)).get()._field_Constant.ptr())) {
			_case_begin_1a85a28d3:;
			{
				jule::F64 _5913_x = _1c4cc0a63_AsF64((*(_4730_d)).get()._field_Constant.ptr());;
				if ((_5913_x <= _499_max)) {
					return true;;
				};
			}
		}
		else if (_1c4cc1d72_IsI64((*(_4730_d)).get()._field_Constant.ptr())) {
			_case_begin_1a85a295a:;
			{
				jule::F64 _6413_x = _1c4cc0a63_AsF64((*(_4730_d)).get()._field_Constant.ptr());;
				return ((_489_min <= _6413_x) && (_6413_x <= _499_max));;
			}
		}
		_match_end_1a85a2729:;
	};
	return false;;
}



inline jule::Bool _1aaba33cc_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_1aabbbe1d_Data>* _7032_d) {
	jule::F64 _719_max = _1c4cb699e_Max(_7020_kind);;
	if (((*(_7032_d)).get()._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _1aab88758_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1c4cbe776_ReadI64((*(_7032_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1c4cc28ab_IsF64((*(_7032_d)).get()._field_Constant.ptr())) {
			_case_begin_1a85a7322:;
			{
				jule::F64 _7813_x = _1c4cc02b0_ReadF64((*(_7032_d)).get()._field_Constant.ptr());;
				if ((_7813_x < 0LL)) {
					return false;;
				};
				jule::F64 _8214_i = 0;;
				jule::F64 _8217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1c4c666a7_Modf(_7813_x);
					_8214_i = __jule_assign_result.__jule_result_arg0;
					_8217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8217_frac != 0LL)) {
					return false;;
				};
				return (_8214_i <= _719_max);;
			}
		}
		else if (_1c4cc2108_IsU64((*(_7032_d)).get()._field_Constant.ptr())) {
			_case_begin_1a85a7388:;
			{
				jule::F64 _8813_x = _1c4cc0a63_AsF64((*(_7032_d)).get()._field_Constant.ptr());;
				if ((_8813_x <= _719_max)) {
					return true;;
				};
			}
		}
		else if (_1c4cc1d72_IsI64((*(_7032_d)).get()._field_Constant.ptr())) {
			_case_begin_1a85a73ee:;
			{
				jule::F64 _9313_x = _1c4cc0a63_AsF64((*(_7032_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9313_x) && (_9313_x <= _719_max));;
			}
		}
		_match_end_1a85a6cb1:;
	};
	return false;;
}



inline jule::Bool _1aaba3751_intAssignable(jule::Str _9918_kind, jule::Ptr<_1aabbbe1d_Data>* _9930_d) {
	{
		
		if (_1c4cbbbe6_IsSigInt(_9918_kind)) {
			_case_begin_1a85ab1b1:;
			{
				return _1aaba3014_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_1c4cbc004_IsUnsigInt(_9918_kind)) {
			_case_begin_1a85ab238:;
			{
				return _1aaba33cc_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_1a85aab1c:;
			{
				return false;;
			}
		}
		_match_end_1a85a794e:;
	};
}



inline void _1aabaee11_checkMutRiskOfStructLit(jule::Ptr<_1aab45c87_Sema>* _94433_s, jule::Ptr<_1aaaa0719_StructLitExprModel>* _94444_m) {
	{
		auto expr = &((*(_94444_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a85aba1e:;
		if (it != expr_end) {
			jule::Ptr<_1aaaa0373_StructArgExprModel> *_94512_arg = it;
			{
				if ((*(_94512_arg)).get()._field_Field.get()._field_Decl.get()._field_Mutable) {
					goto _iter_next_1a85aba1e;
				};
				if (((!((*(_94512_arg)).get()._field_Expr.get()._field_Mutable)) && _1aabeda87_Mutable((*(_94512_arg)).get()._field_Expr.get()._field_Kind.ptr()))) {
					_1aab488c2_pushErr((*(_94433_s)).ptr(), (*(_94512_arg)).get()._field_Token, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_94512_arg)).get()._field_Expr.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
			}
			_iter_next_1a85aba1e:;
			++it;
			goto _iter_begin_1a85aba1e;
		}
		_iter_end_1a85aba1e:;
	};
}



inline jule::Ptr<_1aabec1e5_TypeKind> _1aabb59a5_lenKind(void) {
	return _1aacd947a_primInt;;
}



inline jule::Bool _1aabb5d07_isGoodValueToInfer(jule::Ptr<_1aabbbe1d_Data>* _140824_d) {
	return (!(_1aabbc2c5_IsNil((*(_140824_d)).ptr())));;
}



inline jule::Ptr<_1aaa42c61_Directive> _1aabe58e7_findDirective(jule::Slice<jule::Ptr<_1aaa42c61_Directive>>* _426023_directives, jule::Str _426054_d) {
	{
		auto expr = _426023_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a895a3c8:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42c61_Directive> _426117_dr = *it;
			{
				if ((_426117_dr.get()._field_Tag.get()._field_Kind == _426054_d)) {
					return _426117_dr;;
				};
			}
			_iter_next_1a895a3c8:;
			++it;
			goto _iter_begin_1a895a3c8;
		}
		_iter_end_1a895a3c8:;
	};
	return nullptr;;
}



inline jule::Any _1aabe5cb0_findBuiltinsImport(jule::Str* _426924_ident, jule::Ptr<_1aab24c33_ImportInfo> _426936_imp) {
	return _1aacdcbcb_findPackageBuiltinDef(&(_426936_imp.get()._field_LinkPath), _426924_ident);;
}



inline void _1aabe5ee1_fitBitsize(jule::Ptr<_1aabbbe1d_Data>* _427620_d) {
	jule::Ptr<_1aac05066_Prim> _427713_prim = _1aabeeadd_Prim((*(_427620_d)).get()._field_Kind.ptr());;
	jule::I32 _42789_z = _1c4caeea3_BitsizeOf(_1aac053a7_Str(_427713_prim.ptr()));;
	if ((_42789_z == 64LLU)) {
		return;;
	};
	jule::I32 _428313_k = 0LL;;
	{
		
		if (_1c4cc1d72_IsI64((*(_427620_d)).get()._field_Constant.ptr())) {
			_case_begin_1a895d684:;
			{
				_428313_k=static_cast<jule::I32>(_1c4cb1a54_BitsizeOfInt(static_cast<jule::I64>(_1c4cbe776_ReadI64((*(_427620_d)).get()._field_Constant.ptr()))));
				if ((_428313_k > _42789_z)) {
					(*(_427620_d)).get()._field_Constant.get()._field_Kind=_1c4cb02e4_IntFromBits(_428313_k);
					(*(_427620_d)).get()._field_Kind=_1aacdb89a_findBuiltinTypeAlias((*(_427620_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_1c4cc2108_IsU64((*(_427620_d)).get()._field_Constant.ptr())) {
			_case_begin_1a895d70b:;
			{
				_428313_k=static_cast<jule::I32>(_1c4cb1d1d_BitsizeOfUint(static_cast<jule::U64>(_1c4cbea0c_ReadU64((*(_427620_d)).get()._field_Constant.ptr()))));
				if ((_428313_k > _42789_z)) {
					(*(_427620_d)).get()._field_Constant.get()._field_Kind=_1c4cb05ad_UintFromBits(_428313_k);
					(*(_427620_d)).get()._field_Kind=_1aacdb89a_findBuiltinTypeAlias((*(_427620_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_1c4cc28ab_IsF64((*(_427620_d)).get()._field_Constant.ptr())) {
			_case_begin_1a895d783:;
			{
				_428313_k=static_cast<jule::I32>(_1c4cb178a_BitsizeOfFloat(static_cast<jule::F64>(_1c4cc02b0_ReadF64((*(_427620_d)).get()._field_Constant.ptr()))));
				if ((_428313_k > _42789_z)) {
					(*(_427620_d)).get()._field_Constant.get()._field_Kind=_1c4cb0877_FloatFromBits(_428313_k);
					(*(_427620_d)).get()._field_Kind=_1aacdb89a_findBuiltinTypeAlias((*(_427620_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		_match_end_1a895d5b8:;
	};
}



inline void _1aabe6321_makeStructLitAlloc(jule::Ptr<_1aabbbe1d_Data>* _430628_d, jule::Ptr<_1aaaa0719_StructLitExprModel>* _430643_lit) {
	(*(_430628_d)).get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aac08a92_Sptr>(_1aac08a92_Sptr{._field_Elem=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>((*(_430643_lit)).get()._field_Strct, 0)})}), 21)});
	(*(_430628_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaaa0a16_AllocStructLitExprModel>(_1aaaa0a16_AllocStructLitExprModel{._field_Lit=(*(_430643_lit))}), &__jule_any_type116);
}



inline jule::Ptr<_1aab68969_Var> _1aabe6695_buildErrorVar(jule::Ptr<_1aab037e4_Scope>* _431723_s, jule::Ptr<_1aaa7e72b_FnCallExpr>* _431739_fc) {
	return jule::new_ptr<_1aab68969_Var>(_1aab68969_Var{._field_Scope=(*(_431723_s)), ._field_Token=(*(_431739_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=_1aacdb89a_findBuiltinTypeAlias(jule::Str("any", 3)).get()._field_Kind, ._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>()}), });;
}



inline jule::Any _1aabe6a19_findBuiltinsSema(jule::Str* _433222_ident, jule::Ptr<_1aab45c87_Sema> _433238_s) {
	{
		auto expr = &(_433238_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8965c96:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _433317_imp = *it;
			{
				if ((_433317_imp.get()._field_ImportAll || _1aab275b5_existIdent(_433317_imp.ptr(), (*(_433222_ident))))) {
					jule::Any _433521_def = _1aabe5cb0_findBuiltinsImport(_433222_ident, _433317_imp);;
					if ((_433521_def != nullptr)) {
						return _433521_def;;
					};
				};
			}
			_iter_next_1a8965c96:;
			++it;
			goto _iter_begin_1a8965c96;
		}
		_iter_end_1a8965c96:;
	};
	jule::Str _434313_ppath = _1c3e41531_Dir(_433238_s.get()._field_file.get()._field_File.ptr());;
	if (_1c38bdc8e_HasPrefix(_434313_ppath, _1c3a94bbd_PathStdlib)) {
		(_434313_ppath).mut_slice(_1c3a94bbd_PathStdlib.len());;
		_434313_ppath=(jule::Str("std", 3) + _1c38c536c_Replace(_434313_ppath, jule::Str("/", 1), jule::Str("::", 2), -1LL));
		return _1aacdcbcb_findPackageBuiltinDef(&(_434313_ppath), _433222_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1aabe6cd3_isOkForShifting(jule::Ptr<_1aabbbe1d_Data>* _435725_d) {
	if (_1aabbc7e2_IsConst((*(_435725_d)).ptr())) {
		{
			
			if (_1c4cc1d72_IsI64((*(_435725_d)).get()._field_Constant.ptr())) {
				_case_begin_1a8968ded:;
				{
					return (_1c4cbe776_ReadI64((*(_435725_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1c4cc2108_IsU64((*(_435725_d)).get()._field_Constant.ptr())) {
				_case_begin_1a8968e75:;
				{
					return true;;
				}
			}
			else if (_1c4cc28ab_IsF64((*(_435725_d)).get()._field_Constant.ptr())) {
				_case_begin_1a8968eec:;
				{
					return (_1c4cc02b0_ReadF64((*(_435725_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1a8968d21:;
				{
					return false;;
				}
			}
			_match_end_1a8968c66:;
		};
	};
	jule::Ptr<_1aac05066_Prim> _43709_prim = _1aabeeadd_Prim((*(_435725_d)).get()._field_Kind.ptr());;
	return ((_43709_prim != nullptr) && _1c4cbc2bd_IsInt(_1aac053a7_Str(_43709_prim.ptr())));;
}



inline jule::Bool _1aabe71ac_isInstancedStruct(jule::Ptr<_1aaa9a390_StructIns> _437422_s) {
	return (_437422_s.get()._field_Decl.get()._field_Generics.len() == _437422_s.get()._field_Generics.len());;
}



inline jule::Bool _1aabe7531_isPtrArithmeticCompatible(jule::Ptr<_1aabbbe1d_Data>* _437835_l, jule::Ptr<_1aabbbe1d_Data>* _437850_r) {
	jule::Ptr<_1aac0c359_Ptr> _43799_ptr = _1aac0010a_Ptr((*(_437850_r)).get()._field_Kind.ptr());;
	if ((_43799_ptr != nullptr)) {
		return _1aabec8ee_Equal(_1aac0010a_Ptr((*(_437835_l)).get()._field_Kind.ptr()).get()._field_Elem, _43799_ptr.get()._field_Elem);;
	};
	if (_1aabbc7e2_IsConst((*(_437850_r)).ptr())) {
		return _1aaba3751_intAssignable(jule::Str("int", 3), _437850_r);;
	};
	_1aaba3c3a_typeCompatibilityChecker _438613_tcc = _1aaba3c3a_typeCompatibilityChecker{._field_dest=_1aacd947a_primInt, ._field_src=(*(_437850_r)).get()._field_Kind, };;
	return _1aaba5401_check(&_438613_tcc);;
}



inline void _1aabe781c_applyCastKindModel(jule::Ptr<_1aabbbe1d_Data>* _439328_d, jule::Ptr<_1aabec1e5_TypeKind>* _439343_t) {
	(*(_439328_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaaa1099_CastingExprModel>(_1aaaa1099_CastingExprModel{._field_Expr=(*(_439328_d)).get()._field_Model, ._field_Kind=(*(_439343_t)), ._field_ExprKind=(*(_439328_d)).get()._field_Kind}), &__jule_any_type99);
}



inline void _1aabe7b08_applyCastKind(jule::Ptr<_1aabbbe1d_Data>* _440123_d, jule::Ptr<_1aabec1e5_TypeKind>* _440138_t) {
	_1aabe781c_applyCastKindModel(_440123_d, _440138_t);
	(*(_440123_d)).get()._field_Kind=(*(_440138_t));
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe7d17_buildVoidData(void) {
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd817c_primVoid, });;
}



inline jule::Str _1aabe80d1_checkDataForIntegerIndexing(jule::Ptr<_1aabbbe1d_Data>* _441237_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_441237_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1aabeeadd_Prim((*(_441237_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1a8970d28:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1c4cbc2bd_IsInt(_1aac053a7_Str(_1aabeeadd_Prim((*(_441237_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1a8970d8e:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1aabbc7e2_IsConst((*(_441237_d)).ptr())) {
			_case_begin_1a8970e05:;
			{
				if ((_1c4cc0a63_AsF64((*(_441237_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1aabeeadd_Prim((*(_441237_d)).get()._field_Kind.ptr()) == nullptr) || _1aabbc7e2_IsConst((*(_441237_d)).ptr()) || (_1c4caebd9_RealKindOf(_1aac053a7_Str(_1aabeeadd_Prim((*(_441237_d)).get()._field_Kind.ptr()).ptr())) != _1c4caebd9_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1a8970e7c:;
			{
				_1aabe7b08_applyCastKind(_441237_d, &(_1aacd947a_primInt));
			}
		}
		_match_end_1a89709c6:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1aabe83bc_applyCastModelByEnum(jule::Ptr<_1aabbbe1d_Data>* _443730_d, jule::Ptr<_1aaac8b3d_Enum> _443744_e) {
	if ((_443744_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1aac05066_Prim> _44419_p = _1aabeeadd_Prim(_443744_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1aac084ed_IsStr(_44419_p.ptr())) {
		return;;
	};
	_1aabe781c_applyCastKindModel(_443730_d, &(_443744_e.get()._field_Kind.get()._field_Kind));
}



inline void _1aabe86a8_castConstByType(jule::Str* _444821_t, jule::Ptr<_1aabbbe1d_Data>* _444834_d) {
	{
		
		if (_1c4cbbbe6_IsSigInt((*(_444821_t)))) {
			_case_begin_1a8975437:;
			{
				{
					auto _match_expr{ _1c4caeea3_BitsizeOf(_1c4caebd9_RealKindOf((*(_444821_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a8976092:;
						{
							_1c4cc0d1b_SetI64((*(_444834_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1c4cc0546_AsI64((*(_444834_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a8976108:;
						{
							_1c4cc0d1b_SetI64((*(_444834_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1c4cc0546_AsI64((*(_444834_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a897616e:;
						{
							_1c4cc0d1b_SetI64((*(_444834_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1c4cc0546_AsI64((*(_444834_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a89761d5:;
						{
							_1c4cc0d1b_SetI64((*(_444834_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1c4cc0546_AsI64((*(_444834_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1a8975c51:;
				};
			}
		}
		else if (_1c4cbc004_IsUnsigInt((*(_444821_t)))) {
			_case_begin_1a89754ae:;
			{
				{
					auto _match_expr{ _1c4caeea3_BitsizeOf(_1c4caebd9_RealKindOf((*(_444821_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a8978e52:;
						{
							_1c4cc10c4_SetU64((*(_444834_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1c4cc07cc_AsU64((*(_444834_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a8978eb8:;
						{
							_1c4cc10c4_SetU64((*(_444834_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1c4cc07cc_AsU64((*(_444834_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1a897902e:;
						{
							_1c4cc10c4_SetU64((*(_444834_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1c4cc07cc_AsU64((*(_444834_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1a8979095:;
						{
							_1c4cc10c4_SetU64((*(_444834_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1c4cc07cc_AsU64((*(_444834_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1a89759dc:;
				};
			}
		}
		else if (_1c4cbc60e_IsFloat((*(_444821_t)))) {
			_case_begin_1a8975536:;
			{
				{
					auto _match_expr{ _1c4caeea3_BitsizeOf(_1c4caebd9_RealKindOf((*(_444821_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1a897bcac:;
						{
							_1c4cc18dd_SetF64((*(_444834_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1c4cc0a63_AsF64((*(_444834_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1a897bd34:;
						{
							_1c4cc18dd_SetF64((*(_444834_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1c4cc0a63_AsF64((*(_444834_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1a897944c:;
				};
			}
		}
		_match_end_1a8975316:;
	};
}



inline void _1aabe8b4d_updateModelToGenericIns(jule::Any* _448233_m, jule::Ptr<_1aaab609d_FnIns>* _448252_f) {
	{
		auto &_match_expr{ (*(_448233_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1a897b22e:;
			{
				(*(_448233_m))=jule::Any((*(_448252_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a897c153:;
			{
				(*(_448233_m)).cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_448252_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1a897c1b9:;
			{
				(*(_448233_m)).cast_ptr<_1aaaa4993_StructStaticIdentExprModel>(&__jule_any_type102).get()._field_Method=(*(_448252_f));
			}
		}
		_match_end_1a897b1c9:;
	};
}



inline jule::Bool _1aabe8ec2_pushSubIdentFromExpr(jule::Any _449329_expr, jule::Ptr<_1aaa76ee8_SubIdentTypeDecl>* _449350_t) {
	{
		auto &_match_expr{ _449329_expr };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1a897ec16:;
			{
				jule::Ptr<_1aaa7c350_IdentExpr> _449617_e = _449329_expr.cast_ptr<_1aaa7c350_IdentExpr>(&__jule_any_type86);;
				{ jule::Slice<jule::Ptr<_1aaa76beb_IdentTypeDecl>> &__jule_push_dest = (*(_449350_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_1aaa76beb_IdentTypeDecl>(_1aaa76beb_IdentTypeDecl{._field_Token=_449617_e.get()._field_Token, ._field_Ident=_449617_e.get()._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1a897ec7c:;
			{
				jule::Ptr<_1aaa7db15_SubIdentExpr> _450217_e = _449329_expr.cast_ptr<_1aaa7db15_SubIdentExpr>(&__jule_any_type92);;
				if ((!(_1aabe8ec2_pushSubIdentFromExpr(_450217_e.get()._field_Expr.get()._field_Kind, _449350_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1aaa76beb_IdentTypeDecl>> &__jule_push_dest = (*(_449350_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_1aaa76beb_IdentTypeDecl>(_1aaa76beb_IdentTypeDecl{._field_Token=_450217_e.get()._field_Ident, ._field_Ident=_450217_e.get()._field_Ident.get()._field_Kind, })); };
			}
		}
		else {
			_case_begin_1a897eba0:;
			{
				return false;;
			}
		}
		_match_end_1a897e056:;
	};
	return true;;
}



inline jule::Str _1aabe928b_constoa(jule::Ptr<_1c4cbcda1_Const>* _451613_c) {
	{
		
		if (_1c4cc1d72_IsI64((*(_451613_c)).ptr())) {
			_case_begin_1a897ee25:;
			{
				return _1c4cac874_FmtInt(static_cast<jule::I64>(_1c4cbe776_ReadI64((*(_451613_c)).ptr())), 10LL);;
			}
		}
		else if (_1c4cc2108_IsU64((*(_451613_c)).ptr())) {
			_case_begin_1a8982466:;
			{
				return _1c4cac4ab_FmtUint(static_cast<jule::U64>(_1c4cbea0c_ReadU64((*(_451613_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1a898228a:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a8981a4d:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aabe9610_evalEnumStatic(jule::Ptr<_1aaac8b3d_Enum>* _452724_enm, jule::Ptr<_1aaac80c1_EnumItem>* _452741_item) {
	jule::Ptr<_1aabbbe1d_Data> _452813_d = jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>((*(_452724_enm)), 3)}), });;
	if (((*(_452741_item)) != nullptr)) {
		_452813_d.get()._field_Constant=jule::new_ptr<_1c4cbcda1_Const>((*((*(_452741_item)).get()._field_Value.get()._field_Data.get()._field_Constant)));
		_452813_d.get()._field_Model=jule::Any(_452813_d.get()._field_Constant, &__jule_any_type19);
		_1aabe83bc_applyCastModelByEnum(&(_452813_d), (*(_452724_enm)));
	};
	return _452813_d;;
}



inline jule::Ptr<_1aaaa0719_StructLitExprModel> _1aabe98c9_isLitBased(jule::Any* _454420_m) {
	{
		auto &_match_expr{ (*(_454420_m)) };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1a8985d2c:;
			{
				return (*(_454420_m)).cast_ptr<_1aaaa0719_StructLitExprModel>(&__jule_any_type101);;
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1a8985d93:;
			{
				return (*(_454420_m)).cast_ptr<_1aaaa0a16_AllocStructLitExprModel>(&__jule_any_type116).get()._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a8985e09:;
			{
				jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> _455117_ssi = (*(_454420_m)).cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1aabe98c9_isLitBased(&(_455117_ssi.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1a8985e70:;
			{
				jule::Ptr<_1aaaa1099_CastingExprModel> _455417_c = (*(_454420_m)).cast_ptr<_1aaaa1099_CastingExprModel>(&__jule_any_type99);;
				return _1aabe98c9_isLitBased(&(_455417_c.get()._field_Expr));;
			}
		}
		else {
			_case_begin_1a8985b62:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8984ca4:;
	};
}



inline jule::Bool _1aac17be4_kindUsesGenerics(jule::Ptr<_1aabec1e5_TypeKind>* _174126_k, jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>>* _174141_generics) {
	{
		auto expr = _174141_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c17eb0:;
		if (it != expr_end) {
			jule::Ptr<_1aaa838c8_GenericDecl> *_174212_g = it;
			{
				if (static__1aac177b5_exist(&((*(_174212_g)).get()._field_Ident), _174126_k)) {
					return true;;
				};
			}
			_iter_next_1a8c17eb0:;
			++it;
			goto _iter_begin_1a8c17eb0;
		}
		_iter_end_1a8c17eb0:;
	};
	return false;;
}



inline jule::Bool _1aac180ac_hasDirective(jule::Slice<jule::Ptr<_1aaa42c61_Directive>>* _175122_directives, jule::Str _175153_tag) {
	{
		auto expr = _175122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c18554:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42c61_Directive> _175217_dr = *it;
			{
				if ((_175217_dr.get()._field_Tag.get()._field_Kind == _175153_tag)) {
					return true;;
				};
			}
			_iter_next_1a8c18554:;
			++it;
			goto _iter_begin_1a8c18554;
		}
		_iter_end_1a8c18554:;
	};
	return false;;
}



inline jule::Bool _1aac18376_canGetPtr(jule::Ptr<_1aabbbe1d_Data>* _176019_d) {
	{
		
		if ((!((*(_176019_d)).get()._field_Lvalue)) || _1aabbc7e2_IsConst((*(_176019_d)).ptr())) {
			_case_begin_1a8c19cd6:;
			{
				return false;;
			}
		}
		else if ((_1aac00dca_Fn((*(_176019_d)).get()._field_Kind.ptr()) != nullptr) || (_1aac00391_Enum((*(_176019_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8c19d4c:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a8c1939b:;
			{
				return true;;
			}
		}
		_match_end_1a8c19bc6:;
	};
}



inline jule::Bool _1aac1d524_isValidForSptrType(jule::Ptr<_1aabec1e5_TypeKind>* _177228_t) {
	jule::Ptr<_1aaa9a390_StructIns> _177313_s = _1aac01161_Struct((*(_177228_t)).ptr());;
	if ((((_177313_s != nullptr) && (_177313_s.get()._field_Decl != nullptr)) && _177313_s.get()._field_Decl.get()._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1aac1d7dd_isValidForRef(jule::Ptr<_1aabec1e5_TypeKind>* _178123_t) {
	return (_1aac00dca_Fn((*(_178123_t)).ptr()) == nullptr);;
}



inline jule::Bool _1aac1daa7_isBuiltinStrConvertable(jule::Ptr<_1aabec1e5_TypeKind>* _178433_t) {
	return ((((!(_1aabed56a_Void((*(_178433_t)).ptr()))) && (_1aac00dca_Fn((*(_178433_t)).ptr()) == nullptr)) && (_1aac01914_Tup((*(_178433_t)).ptr()) == nullptr)) && (!(_1aac01b9a_comptime((*(_178433_t)).ptr()))));;
}



inline jule::Str _1aac1dd71_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _178827_tokens) {
	jule::I32 _178913_n = 0LL;;
	{
		auto expr = _178827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c1dbb9:;
		if (it != expr_end) {
			jule::Ptr<_1c3e3a5e6_Token> *_179012_token = it;
			{
				_178913_n+=(*(_179012_token)).get()._field_Kind.len();
				_178913_n+=2LL;
			}
			_iter_next_1a8c1dbb9:;
			++it;
			goto _iter_begin_1a8c1dbb9;
		}
		_iter_end_1a8c1dbb9:;
	};
	_1c38d3b83_StrBuilder _179413_s = static__1c38d3ea2_New(_178913_n);;
	{
		auto expr = _178827_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8c1dd1d:;
		if (it != expr_end) {
			jule::I32 _17959_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> *_179512_token = it;
			{
				_1c38dc94a_WriteStr(&_179413_s, (*(_179512_token)).get()._field_Kind);
				if ((((*(_178827_tokens)).len() - _17959_i) > 1LL)) {
					_1c38dc94a_WriteStr(&_179413_s, jule::Str("::", 2));
				};
			}
			_iter_next_1a8c1dd1d:;
			++it;
			_17959_i++;
			goto _iter_begin_1a8c1dd1d;
		}
		_iter_end_1a8c1dd1d:;
	};
	return _1c38dd242_Str(&_179413_s);;
}



inline jule::Ptr<_1aac05066_Prim> _1aac1e217_buildPrimType(jule::Str _180418_kind) {
	return jule::new_ptr<_1aac05066_Prim>(_1aac05066_Prim{._field_Kind=_180418_kind});;
}



inline jule::Ptr<_1aaa972b0_Struct> _1aac1e4d1_getStructFromKind(jule::Ptr<_1aabec1e5_TypeKind> _181026_k) {
	{
		
		if ((_181026_k == nullptr)) {
			_case_begin_1a8c219be:;
			{
				return nullptr;;
			}
		}
		else if ((_1aac01161_Struct(_181026_k.ptr()) != nullptr)) {
			_case_begin_1a8c21a46:;
			{
				return _1aac01161_Struct(_181026_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1aabeed74_Sptr(_181026_k.ptr()) != nullptr)) {
			_case_begin_1a8c21cee:;
			{
				return _1aac1e4d1_getStructFromKind(_1aabeed74_Sptr(_181026_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1aac00b44_Slc(_181026_k.ptr()) != nullptr)) {
			_case_begin_1a8c21d65:;
			{
				return _1aac1e4d1_getStructFromKind(_1aac00b44_Slc(_181026_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1aac008ad_Arr(_181026_k.ptr()) != nullptr)) {
			_case_begin_1a8c21dcb:;
			{
				return _1aac1e4d1_getStructFromKind(_1aac008ad_Arr(_181026_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1aac0010a_Ptr(_181026_k.ptr()) != nullptr)) {
			_case_begin_1a8c21e42:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1a8c2069e:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8c205d3:;
	};
}



inline void _1aac1e7bc_applyImplicitCast(jule::Ptr<_1aabec1e5_TypeKind>* _183227_dest, jule::Ptr<_1aabbbe1d_Data>* _183249_d) {
	if (_1aabed2d4_IsNil((*(_183249_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1aac05066_Prim> _18369_destPrim = _1aabeeadd_Prim((*(_183227_dest)).ptr());;
	jule::Ptr<_1aac05066_Prim> _18379_prim = _1aabeeadd_Prim((*(_183249_d)).get()._field_Kind.ptr());;
	if ((_18369_destPrim != nullptr)) {
		if (_1aac08784_IsAny(_18369_destPrim.ptr())) {
			if (((_18379_prim == nullptr) || (!(_1aac08784_IsAny(_18379_prim.ptr()))))) {
				_1aabe7b08_applyCastKind(_183249_d, _183227_dest);
			};
			return;;
		};
		if (((((((!(_1aabed04d_Binded((*(_183249_d)).get()._field_Kind.ptr()))) && (!((*(_183249_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_183249_d)).get()._field_Lvalue))) && (!(_1aabbc7e2_IsConst((*(_183249_d)).ptr())))) && (_18379_prim != nullptr)) && _1c4cbc8c8_IsNum(_18379_prim.get()._field_Kind))) {
			_1aabe7b08_applyCastKind(_183249_d, _183227_dest);
		};
		return;;
	};
	jule::Ptr<_1aaac6443_Trait> _18569_dt = _1aac013e7_Trait((*(_183227_dest)).ptr());;
	if ((_18569_dt != nullptr)) {
		jule::Ptr<_1aaac6443_Trait> _185813_bt = _1aac013e7_Trait((*(_183249_d)).get()._field_Kind.ptr());;
		if (((_185813_bt == nullptr) || (_185813_bt != _18569_dt))) {
			_1aabe781c_applyCastKindModel(_183249_d, _183227_dest);
			return;;
		};
	};
	if (((_1aac00627_TypeEnum((*(_183227_dest)).ptr()) != nullptr) && (_1aac00627_TypeEnum((*(_183249_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1aabe781c_applyCastKindModel(_183249_d, _183227_dest);
		return;;
	};
}



inline jule::Bool _1aac1ea86_validTypeForXof(jule::Ptr<_1aabec1e5_TypeKind>* _187125_t) {
	return ((!(_1aabed56a_Void((*(_187125_t)).ptr()))) && (_1aac00dca_Fn((*(_187125_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1aabb6be8_SymbolTable__jule_tuple_s_1c3983b45_Log _1aac22b22_buildSymbols(jule::Ptr<_1aaa41996_Ast>* _1622_ast, jule::Trait<_1aab21d1d_Importer>* _1638_importer, jule::Ptr<_1aaac032c_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1aabb6be8_SymbolTable__jule_tuple_s_1c3983b45_Log __jule_func_result;
	jule::Ptr<_1aaac032c_symbolBuilder> _1713_sb = jule::new_ptr<_1aaac032c_symbolBuilder>(_1aaac032c_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1aaac581b_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aab27b59_Package__jule_tuple_s_1c3983b45_Log _1aac23095_analyzePackage(jule::Slice<jule::Ptr<_1aaa41996_Ast>>* _3024_files, jule::Trait<_1aab21d1d_Importer>* _3044_importer, jule::I32* _3065_flags) {
	__jule_tuple_x_1aab27b59_Package__jule_tuple_s_1c3983b45_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8d27278:;
		if (it != expr_end) {
			jule::Ptr<_1aaa41996_Ast> _3317_f = *it;
			{
				jule::Ptr<_1aabb6be8_SymbolTable> _3418_table;;
				jule::Slice<_1c3983b45_Log> _3429_errors;;
				({
					__jule_tuple_x_1aabb6be8_SymbolTable__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1aac22b22_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1aabb6be8_SymbolTable>> &__jule_push_dest = _3213_tables; __jule_push_dest.push(_3418_table); };
			}
			_iter_next_1a8d27278:;
			++it;
			goto _iter_begin_1a8d27278;
		}
		_iter_end_1a8d27278:;
	};
	jule::Ptr<_1aab45c87_Sema> _4113_sema = jule::new_ptr<_1aab45c87_Sema>(_1aab45c87_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1aab45160_commonSemaMeta>()});;
	_1aab64e93_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1aab27b59_Package> _5013_pkg = jule::new_ptr<_1aab27b59_Package>(_1aab27b59_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _5013_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1aab27b59_Package__jule_tuple_s_1c3983b45_Log _1aac234c4_AnalyzePackage(jule::Slice<jule::Ptr<_1aaa41996_Ast>> _7423_files, jule::Trait<_1aab21d1d_Importer> _7442_importer, jule::I32 _7462_flags) {
	__jule_tuple_x_1aab27b59_Package__jule_tuple_s_1c3983b45_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1aab27b59_Package> _7814_package;;
	jule::Slice<_1c3983b45_Log> _7827_logs;;
	({
		__jule_tuple_x_1aab27b59_Package__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1aac23095_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_7814_package = __jule_assign_result.__jule_result_arg0;
		_7827_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7814_package;
	__jule_func_result.__jule_result_arg1 = _7827_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1aaab609d_FnIns> _1aacd7753_findBuiltinFunc(jule::Str* _2321_ident) {
	{
		auto &_match_expr{ (*(_2321_ident)) };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1a8d30a56:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _2620_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aacde21b_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1a8d30ced:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _2920_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aacde804_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1a8d30d75:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _3220_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aacdec33_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1a8d310c8:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _3520_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace0162_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1a8d31150:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _3820_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace0591_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1a8d311c7:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _4120_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace09c0_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1a8d3124e:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _4420_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace13d8_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1a8d3132b:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _4720_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace2a7c_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1a8d313a3:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _5020_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace3330_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1a8d3142a:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _5320_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace3de1_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1a8d314a2:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _5620_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace42a9_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1a8d31529:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _5920_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace46d8_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1a8d30b88:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8d2d191:;
	};
}



inline jule::Ptr<_1aabeb403_TypeAlias> _1aacd7a61_primTypeAlias(jule::Ptr<_1aabec1e5_TypeKind>* _6623_k) {
	return jule::new_ptr<_1aabeb403_TypeAlias>(_1aabeb403_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1aab68969_Var> _1aacdb669_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str("nil", 3)) {
			_case_begin_1a8d39378:;
			{
				static jule::Ptr<_1aab68969_Var> _9720_v = jule::new_ptr<_1aab68969_Var>(_1aab68969_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1aac0465e_TypeSymbol>(_1aac0465e_TypeSymbol{._field_Kind=_1aacd7d6e_primNil}), ._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Constant=static__1c4cbe116_NewNil()})}), });;
				return _9720_v;;
			}
		}
		else if (_match_expr == jule::Str("true", 4)) {
			_case_begin_1a8d393de:;
			{
				static jule::Ptr<_1aab68969_Var> _11220_v = jule::new_ptr<_1aab68969_Var>(_1aab68969_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=_1aacdb89a_findBuiltinTypeAlias(jule::Str("bool", 4)).get()._field_Kind, ._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Constant=static__1c4cbd874_NewBool(true)})}), });;
				return _11220_v;;
			}
		}
		else if (_match_expr == jule::Str("false", 5)) {
			_case_begin_1a8d39455:;
			{
				static jule::Ptr<_1aab68969_Var> _12520_v = jule::new_ptr<_1aab68969_Var>(_1aab68969_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=_1aacdb89a_findBuiltinTypeAlias(jule::Str("bool", 4)).get()._field_Kind, ._field_Value=jule::new_ptr<_1aabbd062_Value>(_1aabbd062_Value{._field_Data=jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Constant=static__1c4cbd874_NewBool(false)})}), });;
				return _12520_v;;
			}
		}
		else {
			_case_begin_1a8d39312:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8d38366:;
	};
}



inline jule::Ptr<_1aabeb403_TypeAlias> _1aacdb89a_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1a8d3c854:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _14520_t = _1aacd7a61_primTypeAlias(&(_1aacd8446_primAny));;
				return _14520_t;;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1a8d3e0a3:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _14820_t = _1aacd7a61_primTypeAlias(&(_1aacd8754_primStr));;
				return _14820_t;;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1a8d3e34a:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _15120_t = _1aacd7a61_primTypeAlias(&(_1aacd8a1d_primBool));;
				return _15120_t;;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1a8d3e3b1:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _15420_t = _1aacd7a61_primTypeAlias(&(_1aacd8cd7_primUintptr));;
				return _15420_t;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1a8d3e427:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _15720_t = _1aacd7a61_primTypeAlias(&(_1aacd90a1_primUint));;
				return _15720_t;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1a8d3e48d:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _16020_t = _1aacd7a61_primTypeAlias(&(_1aacd947a_primInt));;
				return _16020_t;;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1a8d3e58c:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _16320_t = _1aacd7a61_primTypeAlias(&(_1aacd9744_primI8));;
				return _16320_t;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1a8d3e603:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _16620_t = _1aacd7a61_primTypeAlias(&(_1aacd9a0d_primI16));;
				return _16620_t;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1a8d3e669:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _16920_t = _1aacd7a61_primTypeAlias(&(_1aacda091_primI64));;
				return _16920_t;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1a8d3e6d0:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _17220_t = _1aacd7a61_primTypeAlias(&(_1aacda624_primU16));;
				return _17220_t;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1a8d3e757:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _17520_t = _1aacd7a61_primTypeAlias(&(_1aacda8dd_primU32));;
				return _17520_t;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1a8d3e7ce:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _17820_t = _1aacd7a61_primTypeAlias(&(_1aacdad61_primU64));;
				return _17820_t;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1a8d3e856:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _18120_t = _1aacd7a61_primTypeAlias(&(_1aacdb12a_primF32));;
				return _18120_t;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1a8d3e8cd:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _18420_t = _1aacd7a61_primTypeAlias(&(_1aacdb3e4_primF64));;
				return _18420_t;;
			}
		}
		else if (_match_expr == jule::Str("byte", 4) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1a8d3e955:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _18720_t = _1aacd7a61_primTypeAlias(&(_1aacda35a_primU8));;
				return _18720_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4) || _match_expr == jule::Str("i32", 3)) {
			_case_begin_1a8d3e9cc:;
			{
				static jule::Ptr<_1aabeb403_TypeAlias> _19020_t = _1aacd7a61_primTypeAlias(&(_1aacd9cc7_primI32));;
				return _19020_t;;
			}
		}
		else {
			_case_begin_1a8d3de0a:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8d3c986:;
	};
}



inline jule::Any _1aacdbb64_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1aab68969_Var> _19813_v = _1aacdb669_findBuiltinVar(_19720_ident);;
	if ((_19813_v != nullptr)) {
		return jule::Any(_19813_v, &__jule_any_type8);;
	};
	jule::Ptr<_1aaab609d_FnIns> _20213_f = _1aacd7753_findBuiltinFunc(_19720_ident);;
	if ((_20213_f != nullptr)) {
		return jule::Any(_20213_f, &__jule_any_type7);;
	};
	jule::Ptr<_1aabeb403_TypeAlias> _20613_ta = _1aacdb89a_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_20613_ta != nullptr)) {
		return jule::Any(_20613_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _1aacdbe2d_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1a8d49487:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _21620_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace8005_builtinCallerStdDebugOut), });;
				return jule::Any(_21620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1a8d494ed:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _21920_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace8434_builtinCallerStdDebugOutln), });;
				return jule::Any(_21920_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a8d48d6b:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8d47b39:;
	};
}



inline jule::Any _1aacdc1e7_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1a8d4ad90:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _22920_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace690a_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1a8d4ae06:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _23220_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace6d39_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1a8d4ae6c:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _23520_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace7268_builtinCallerStdMemFree), });;
				return jule::Any(_23520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a8d4ad29:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8d499b5:;
	};
}



inline jule::Any _1aacdc58d_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str("TypeOf", 6)) {
			_case_begin_1a8d4d2b0:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _24520_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace4b17_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("ValueOf", 7)) {
			_case_begin_1a8d4d326:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _24820_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace5046_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Range", 5)) {
			_case_begin_1a8d4d39d:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _25120_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace573e_builtinCallerStdComptimeRange), });;
				return jule::Any(_25120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Line", 4)) {
			_case_begin_1a8d4d425:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _25420_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace5b6d_builtinCallerStdComptimeLine), });;
				return jule::Any(_25420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("File", 4)) {
			_case_begin_1a8d4d700:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _25720_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace609c_builtinCallerStdComptimeFile), });;
				return jule::Any(_25720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Files", 5)) {
			_case_begin_1a8d4d777:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _26020_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace64cb_builtinCallerStdComptimeFiles), });;
				return jule::Any(_26020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a8d4d249:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8d4c886:;
	};
}



inline jule::Any _1aacdc857_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1a8d525d3:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _27020_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace7697_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1a8d52649:;
			{
				static jule::Ptr<_1aaab609d_FnIns> _27320_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_Decl=jule::new_ptr<_1aaab3199_Fn>(_1aaab3199_Fn{._field_Generics=jule::Slice<jule::Ptr<_1aaa838c8_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aace7ac6_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27320_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1a8d5256c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8d4dba6:;
	};
}



inline jule::Any _1aacdcbcb_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str("std::comptime", 13)) {
			_case_begin_1a8d54948:;
			{
				return _1aacdc58d_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1a8d549ae:;
			{
				return _1aacdbe2d_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1a8d54a25:;
			{
				return _1aacdc1e7_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1a8d54a8b:;
			{
				return _1aacdc857_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1a8d5476c:;
			{
				return nullptr;;
			}
		}
		_match_end_1a8d5364a:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aacdd10a_builtinCallerCommonPlain(jule::Ptr<_1aabbdb12_Eval>* _30034_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _30049_fc, jule::Ptr<_1aabbbe1d_Data>* _30071_d) {
	jule::Ptr<_1aaab609d_FnIns> _30113_f = _1aac00dca_Fn((*(_30071_d)).get()._field_Kind.ptr());;
	_1aabac4b3_fnCallArgChecker _30313_fcac = _1aabac4b3_fnCallArgChecker{._field_e=(*(_30034_e)), ._field_args=(*(_30049_fc)).get()._field_Args, ._field_errorToken=(*(_30049_fc)).get()._field_Token, ._field_f=_30113_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1aabaea6a_check(&_30313_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1aaaa194b_FnCallExprModel> _31413_model = jule::new_ptr<_1aaaa194b_FnCallExprModel>(_1aaaa194b_FnCallExprModel{._field_Token=(*(_30049_fc)).get()._field_Token, ._field_Func=_30113_f, ._field_Expr=(*(_30071_d)).get()._field_Model, ._field_Args=_30313_fcac._field_argModels, });;
	if ((_30113_f.get()._field_Result == nullptr)) {
		(*(_30071_d))=_1aabe7d17_buildVoidData();
	} else {
		(*(_30071_d))=jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_30113_f.get()._field_Result, });
	};
	(*(_30071_d)).get()._field_Model=jule::Any(_31413_model, &__jule_any_type35);
	return (*(_30071_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aacdd539_builtinCallerCommon(jule::Ptr<_1aabbdb12_Eval>* _33329_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _33344_fc, jule::Ptr<_1aabbbe1d_Data>* _33366_d) {
	return _1aacdd10a_builtinCallerCommonPlain(_33329_e, _33344_fc, _33366_d);;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aacdd968_builtinCallerCommonMut(jule::Ptr<_1aabbdb12_Eval>* _33732_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _33747_fc, jule::Ptr<_1aabbbe1d_Data>* _33769_d) {
	if ((!((*(_33769_d)).get()._field_Mutable))) {
		_1aabbe162_pushErr((*(_33732_e)).ptr(), (*(_33747_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _1aacdd539_builtinCallerCommon(_33732_e, _33747_fc, _33769_d);;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aacddcdc_builtinCallerError(jule::Ptr<_1aabbdb12_Eval>* _34428_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _34443_fc) {
	if (((*(_34443_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_34428_e)).ptr(), (*(_34443_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_34443_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_34428_e)).ptr(), (*(_34443_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _35213_expr = _1aabdbed7_evalExpr((*(_34428_e)), (*(_34443_fc)).get()._field_Args[0LL]);;
	if ((_35213_expr == nullptr)) {
		return nullptr;;
	};
	if (_1aabbc2c5_IsNil(_35213_expr.ptr())) {
		_1aabbe162_pushErr((*(_34428_e)).ptr(), (*(_34443_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aabbbe1d_Data> _36113_d = _1aabe7d17_buildVoidData();;
	_36113_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaaa903b_BuiltinErrorCallExprModel>(_1aaaa903b_BuiltinErrorCallExprModel{._field_Err=_35213_expr}), &__jule_any_type23);
	return _36113_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aacde21b_builtinCallerOut(jule::Ptr<_1aabbdb12_Eval>* _36626_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _36641_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	if (((*(_36641_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_36626_e)).ptr(), (*(_36641_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_36641_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_36626_e)).ptr(), (*(_36641_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _37513_expr = _1aabdbed7_evalExpr((*(_36626_e)), (*(_36641_fc)).get()._field_Args[0LL]);;
	if ((_37513_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aac1daa7_isBuiltinStrConvertable(&(_37513_expr.get()._field_Kind))))) {
		_1aabbe162_pushErr((*(_36626_e)).ptr(), (*(_36641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aabbbe1d_Data> _38513_d = _1aabe7d17_buildVoidData();;
	_38513_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaaa5dc3_BuiltinOutCallExprModel>(_1aaaa5dc3_BuiltinOutCallExprModel{._field_Expr=_37513_expr.get()._field_Model, }), &__jule_any_type28);
	return _38513_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aacde804_builtinCallerOutln(jule::Ptr<_1aabbdb12_Eval>* _39028_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _39043_fc, jule::Ptr<_1aabbbe1d_Data>* _39065_d) {
	(*(_39065_d))=_1aacde21b_builtinCallerOut(_39028_e, _39043_fc, _39065_d);
	if (((*(_39065_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_39065_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaaa629c_BuiltinOutlnCallExprModel>(_1aaaa629c_BuiltinOutlnCallExprModel{._field_Expr=(*(_39065_d)).get()._field_Model.cast_ptr<_1aaaa5dc3_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Expr, }), &__jule_any_type29);
	return (*(_39065_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aacdec33_builtinCallerNew(jule::Ptr<_1aabbdb12_Eval>* _40226_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _40241_fc, jule::Ptr<_1aabbbe1d_Data>* _40263_d) {
	if (((*(_40241_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_40226_e)).ptr(), (*(_40241_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_40241_fc)).get()._field_Args.len() > 2LL)) {
		_1aabbe162_pushErr((*(_40226_e)).ptr(), (*(_40241_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _41113_t = _1aabdb1c3_evalExprKind((*(_40226_e)), (*(_40241_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_41113_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_41113_t.get()._field_Decl))) {
		_1aabbe162_pushErr((*(_40226_e)).ptr(), (*(_40241_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1aac1d524_isValidForSptrType(&(_41113_t.get()._field_Kind))))) {
		jule::Ptr<_1aaa9a390_StructIns> _42217_s = _1aac01161_Struct(_41113_t.get()._field_Kind.ptr());;
		if ((((_42217_s != nullptr) && (_42217_s.get()._field_Decl != nullptr)) && _42217_s.get()._field_Decl.get()._field_Binded)) {
			_1aabbe162_pushErr((*(_40226_e)).ptr(), (*(_40241_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_40263_d)).get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aac08a92_Sptr>(_1aac08a92_Sptr{._field_Elem=_41113_t.get()._field_Kind}), 21)});
	if (((*(_40241_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1aabec1e5_TypeKind> _43617_old = (*(_40226_e)).get()._field_prefix;;
		(*(_40226_e)).get()._field_prefix=_41113_t.get()._field_Kind;
		jule::Ptr<_1aabbbe1d_Data> _43917_init = _1aabdbed7_evalExpr((*(_40226_e)), (*(_40241_fc)).get()._field_Args[1LL]);;
		(*(_40226_e)).get()._field_prefix=_43617_old;
		if ((_43917_init != nullptr)) {
			jule::Ptr<_1c3e3a5e6_Token> _44421_token = (*(_40241_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_1aab548de_checkValidityForInitExpr((*(_40226_e)).get()._field_s, (!((*(_40226_e)).get()._field_immutable)), false, &(_41113_t.get()._field_Kind), &(_43917_init), &(_44421_token));
			_1aab513d0_checkAssignType((*(_40226_e)).get()._field_s, false, &(_41113_t.get()._field_Kind), &(_43917_init), _44421_token);
			(*(_40263_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaaa6973_BuiltinNewCallExprModel>(_1aaaa6973_BuiltinNewCallExprModel{._field_Kind=_41113_t.get()._field_Kind, ._field_Init=_43917_init.get()._field_Model}), &__jule_any_type117);
		};
	} else {
		(*(_40263_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaaa6973_BuiltinNewCallExprModel>(_1aaaa6973_BuiltinNewCallExprModel{._field_Kind=_41113_t.get()._field_Kind, }), &__jule_any_type117);
	};
	return (*(_40263_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace0162_builtinCallerPanic(jule::Ptr<_1aabbdb12_Eval>* _46428_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _46443_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	if (((*(_46443_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_46428_e)).ptr(), (*(_46443_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_46443_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_46428_e)).ptr(), (*(_46443_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _47313_expr = _1aabdbed7_evalExpr((*(_46428_e)), (*(_46443_fc)).get()._field_Args[0LL]);;
	if ((_47313_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1aabeeadd_Prim(_47313_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1aac084ed_IsStr(_1aabeeadd_Prim(_47313_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1aabbe162_pushErr((*(_46428_e)).ptr(), (*(_46443_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aabbbe1d_Data> _48213_d = _1aabe7d17_buildVoidData();;
	_48213_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaaa6d4c_BuiltinPanicCallExprModel>(_1aaaa6d4c_BuiltinPanicCallExprModel{._field_Token=(*(_46443_fc)).get()._field_Token, ._field_Expr=_47313_expr.get()._field_Model}), &__jule_any_type30);
	return _48213_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace0591_builtinCallerMake(jule::Ptr<_1aabbdb12_Eval>* _49027_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _49042_fc, jule::Ptr<_1aabbbe1d_Data>* _49064_d) {
	if (((*(_49042_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_49042_fc)).get()._field_Args.len() == 1LL)) {
			_1aabbe162_pushErr((*(_49027_e)).ptr(), (*(_49042_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_1aabbe162_pushErr((*(_49027_e)).ptr(), (*(_49042_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aabbbe1d_Data> _50013_t = _1aabdb1c3_evalExprKind((*(_49027_e)), (*(_49042_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_50013_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_50013_t.get()._field_Decl))) {
		_1aabbe162_pushErr((*(_49027_e)).ptr(), (*(_49042_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_49042_fc)).get()._field_Args.len() > 3LL)) {
		_1aabbe162_pushErr((*(_49027_e)).ptr(), (*(_49042_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_49064_d)).get()._field_Kind=_50013_t.get()._field_Kind;
	jule::Ptr<_1aabbbe1d_Data> _51613_lenExpr = _1aabdbed7_evalExpr(_1aab50a2d_evalp((*(_49027_e)).get()._field_s, (*(_49027_e)).get()._field_lookup, _50013_t.get()._field_Kind), (*(_49042_fc)).get()._field_Args[1LL]);;
	if ((_51613_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1aabc7ab6_checkIntegerIndexingByData((*(_49027_e)).ptr(), &(_51613_lenExpr), (*(_49042_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1aaaa77a9_BuiltinMakeCallExprModel> _52313_model = jule::new_ptr<_1aaaa77a9_BuiltinMakeCallExprModel>(_1aaaa77a9_BuiltinMakeCallExprModel{._field_Kind=_50013_t.get()._field_Kind, ._field_Len=_51613_lenExpr.get()._field_Model, });;
	(*(_49064_d)).get()._field_Model=jule::Any(_52313_model, &__jule_any_type118);
	if (((*(_49042_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1aabbbe1d_Data> _52917_capExpr = _1aabdbed7_evalExpr(_1aab50a2d_evalp((*(_49027_e)).get()._field_s, (*(_49027_e)).get()._field_lookup, _50013_t.get()._field_Kind), (*(_49042_fc)).get()._field_Args[2LL]);;
		if ((_52917_capExpr == nullptr)) {
			return (*(_49064_d));;
		};
		_1aabc7ab6_checkIntegerIndexingByData((*(_49027_e)).ptr(), &(_52917_capExpr), (*(_49042_fc)).get()._field_Args[2LL].get()._field_Token);
		_52313_model.get()._field_Cap=_52917_capExpr.get()._field_Model;
	};
	return (*(_49064_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace09c0_builtinCallerAppend(jule::Ptr<_1aabbdb12_Eval>* _53929_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _53944_fc, jule::Ptr<_1aabbbe1d_Data>* _53966_d) {
	if (((*(_53944_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_53944_fc)).get()._field_Args.len() == 1LL)) {
			_1aabbe162_pushErr((*(_53929_e)).ptr(), (*(_53944_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1aabbe162_pushErr((*(_53929_e)).ptr(), (*(_53944_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aabbbe1d_Data> _54913_t = _1aabdbed7_evalExpr((*(_53929_e)), (*(_53944_fc)).get()._field_Args[0LL]);;
	if ((_54913_t == nullptr)) {
		return nullptr;;
	};
	if ((_1aac00b44_Slc(_54913_t.get()._field_Kind.ptr()) == nullptr)) {
		_1aabbe162_pushErr((*(_53929_e)).ptr(), (*(_53944_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aaab609d_FnIns> _55913_f = jule::new_ptr<_1aaab609d_FnIns>(_1aaab609d_FnIns{._field_Params=jule::Slice<jule::Ptr<_1aaab5102_ParamIns>>::make({jule::new_ptr<_1aaab5102_ParamIns>(_1aaab5102_ParamIns{._field_Decl=jule::new_ptr<_1aaaab868_Param>(_1aaaab868_Param{._field_Mutable=true, }), ._field_Kind=_54913_t.get()._field_Kind}),jule::new_ptr<_1aaab5102_ParamIns>(_1aaab5102_ParamIns{._field_Decl=jule::new_ptr<_1aaaab868_Param>(_1aaaab868_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1aac00b44_Slc(_54913_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_54913_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1aabbbe1d_Data>(jule::Ptr<_1aabbdb12_Eval>*,jule::Ptr<_1aaa7e72b_FnCallExpr>*,jule::Ptr<_1aabbbe1d_Data>*)>(_1aacdd10a_builtinCallerCommonPlain), });;
	(*(_53966_d)).get()._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(_55913_f, 1)});
	(*(_53966_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaaa5169_CommonIdentExprModel>(_1aaaa5169_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_53966_d))=_1aacdd10a_builtinCallerCommonPlain(_53929_e, _53944_fc, _53966_d);
	if (((*(_53966_d)) != nullptr)) {
		jule::Ptr<_1aaaa194b_FnCallExprModel> _58717_model = (*(_53966_d)).get()._field_Model.cast_ptr<_1aaaa194b_FnCallExprModel>(&__jule_any_type35);;
		(*(_53966_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaaa7b83_BuiltinAppendCallExprModel>(_1aaaa7b83_BuiltinAppendCallExprModel{._field_Dest=_58717_model.get()._field_Args[0LL], ._field_Elements=_58717_model.get()._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_53966_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace0ea9_callerCopySlice(jule::Ptr<_1aabbbe1d_Data>* _59625_dest, jule::Ptr<_1aabbdb12_Eval>* _59643_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _59658_fc, jule::Ptr<_1aabbbe1d_Data>* _59680_d) {
	if ((!((*(_59625_dest)).get()._field_Mutable))) {
		_1aabbe162_pushErr((*(_59643_e)).ptr(), (*(_59658_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aabbbe1d_Data> _60113_src = _1aabdbed7_evalExpr((*(_59643_e)), (*(_59658_fc)).get()._field_Args[1LL]);;
	if ((_60113_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aac09565_Slc> _60513_slc = _1aac00b44_Slc(_60113_src.get()._field_Kind.ptr());;
	if ((_60513_slc != nullptr)) {
		if (((!(_60113_src.get()._field_Mutable)) && _1aabeda87_Mutable(_60513_slc.get()._field_Elem.ptr()))) {
			_1aabbe162_pushErr((*(_59643_e)).ptr(), (*(_59658_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1aabec8ee_Equal((*(_59625_dest)).get()._field_Kind, _60113_src.get()._field_Kind)))) {
			_1aabbe162_pushErr((*(_59643_e)).ptr(), (*(_59658_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_59625_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_60113_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_1aac05066_Prim> _61513_destPrim = _1aabeeadd_Prim(_1aac00b44_Slc((*(_59625_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1aac05066_Prim> _61613_prim = _1aabeeadd_Prim(_60113_src.get()._field_Kind.ptr());;
		if (((((_61513_destPrim == nullptr) || (_61613_prim == nullptr)) || (!(_1aac084ed_IsStr(_61613_prim.ptr())))) || (!(_1aac0695d_IsU8(_61513_destPrim.ptr()))))) {
			_1aabbe162_pushErr((*(_59643_e)).ptr(), (*(_59658_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str((*(_59625_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_60113_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_59680_d)).get()._field_Kind=_1aabb59a5_lenKind();
	(*(_59680_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaaa8b62_BuiltinCopyCallExprModel>(_1aaaa8b62_BuiltinCopyCallExprModel{._field_Dest=(*(_59625_dest)), ._field_Src=_60113_src}), &__jule_any_type32);
	return (*(_59680_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace13d8_builtinCallerCopy(jule::Ptr<_1aabbdb12_Eval>* _63027_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _63042_fc, jule::Ptr<_1aabbbe1d_Data>* _63064_d) {
	if (((*(_63042_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_63042_fc)).get()._field_Args.len() == 1LL)) {
			_1aabbe162_pushErr((*(_63027_e)).ptr(), (*(_63042_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1aabbe162_pushErr((*(_63027_e)).ptr(), (*(_63042_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_63042_fc)).get()._field_Args.len() > 2LL)) {
		_1aabbe162_pushErr((*(_63027_e)).ptr(), (*(_63042_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _64313_dest = _1aabdbed7_evalExpr((*(_63027_e)), (*(_63042_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_64313_dest == nullptr)) {
			_case_begin_1a8d926cd:;
			{
				return nullptr;;
			}
		}
		else if ((_1aac00b44_Slc(_64313_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8d9306e:;
			{
				return _1aace0ea9_callerCopySlice(&(_64313_dest), _63027_e, _63042_fc, _63064_d);;
			}
		}
		else {
			_case_begin_1a8d92337:;
			{
				_1aabbe162_pushErr((*(_63027_e)).ptr(), (*(_63042_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8d91039:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace175c_callerLenSlice(jule::Ptr<_1aabbbe1d_Data>* _65524_expr, jule::Ptr<_1aabbbe1d_Data>* _65542_d) {
	(*(_65542_d)).get()._field_Kind=_1aabb59a5_lenKind();
	(*(_65542_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaaa7e80_BuiltinLenCallExprModel>(_1aaaa7e80_BuiltinLenCallExprModel{._field_Expr=(*(_65524_expr))}), &__jule_any_type119);
	return (*(_65542_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace1ad1_callerLenMap(jule::Ptr<_1aabbbe1d_Data>* _66322_expr, jule::Ptr<_1aabbbe1d_Data>* _66340_d) {
	(*(_66340_d)).get()._field_Kind=_1aabb59a5_lenKind();
	(*(_66340_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaaa7e80_BuiltinLenCallExprModel>(_1aaaa7e80_BuiltinLenCallExprModel{._field_Expr=(*(_66322_expr))}), &__jule_any_type119);
	return (*(_66340_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace1e55_callerLenArr(jule::Ptr<_1aabbbe1d_Data>* _67122_expr, jule::Ptr<_1aabbbe1d_Data>* _67140_d) {
	(*(_67140_d)).get()._field_Kind=_1aabb59a5_lenKind();
	(*(_67140_d)).get()._field_Constant=static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1aac008ad_Arr((*(_67122_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_67140_d)).get()._field_Model=jule::Any((*(_67140_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_67140_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace22c9_callerLenStr(jule::Ptr<_1aabbbe1d_Data>* _67822_expr, jule::Ptr<_1aabbbe1d_Data>* _67840_d) {
	(*(_67840_d)).get()._field_Kind=_1aabb59a5_lenKind();
	if (_1aabbc7e2_IsConst((*(_67822_expr)).ptr())) {
		(*(_67840_d)).get()._field_Constant=static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1c4cc0029_ReadStr((*(_67822_expr)).get()._field_Constant.ptr()).len())));
		(*(_67840_d)).get()._field_Model=jule::Any((*(_67840_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_67840_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaaa7e80_BuiltinLenCallExprModel>(_1aaaa7e80_BuiltinLenCallExprModel{._field_Expr=(*(_67822_expr))}), &__jule_any_type119);
	};
	return (*(_67840_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace264d_callerLenComptime(jule::Ptr<_1aabbbe1d_Data>* _69127_d, jule::I32 _69137_n) {
	(*(_69127_d)).get()._field_Kind=_1aabb59a5_lenKind();
	(*(_69127_d)).get()._field_Constant=static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_69137_n)));
	(*(_69127_d)).get()._field_Model=jule::Any((*(_69127_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_69127_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace2a7c_builtinCallerLen(jule::Ptr<_1aabbdb12_Eval>* _69826_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _69841_fc, jule::Ptr<_1aabbbe1d_Data>* _69863_d) {
	if (((*(_69841_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_69826_e)).ptr(), (*(_69841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_69841_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_69826_e)).ptr(), (*(_69841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _70613_dest = _1aabdbb96_evalExpr1((*(_69826_e)), (*(_69841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_70613_dest == nullptr)) {
			_case_begin_1a8d9bd9c:;
			{
				return nullptr;;
			}
		}
		else if ((_1aac00b44_Slc(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8d9c73d:;
			{
				return _1aace175c_callerLenSlice(&(_70613_dest), _69863_d);;
			}
		}
		else if ((_1aac008ad_Arr(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8d9c7a4:;
			{
				return _1aace1e55_callerLenArr(&(_70613_dest), _69863_d);;
			}
		}
		else if ((_1aac0167d_Map(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8d9c81a:;
			{
				return _1aace1ad1_callerLenMap(&(_70613_dest), _69863_d);;
			}
		}
		else if (((_1aabeeadd_Prim(_70613_dest.get()._field_Kind.ptr()) != nullptr) && _1aac084ed_IsStr(_1aabeeadd_Prim(_70613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1a8d9ba6c:;
			{
				return _1aace22c9_callerLenStr(&(_70613_dest), _69863_d);;
			}
		}
		else if ((_1aac01e31_comptimeStructFields(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8d9bad3:;
			{
				return _1aace264d_callerLenComptime(_69863_d, static_cast<jule::I32>(_1aac01e31_comptimeStructFields(_70613_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1aac0244d_comptimeEnumFields(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8d9bb49:;
			{
				return _1aace264d_callerLenComptime(_69863_d, static_cast<jule::I32>(_1aac0244d_comptimeEnumFields(_70613_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1aac0321d_comptimeTypeInfos(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8d9bbb0:;
			{
				return _1aace264d_callerLenComptime(_69863_d, static_cast<jule::I32>(_1aac0321d_comptimeTypeInfos(_70613_dest.get()._field_Kind.ptr()).get()._field_types.len()));;
			}
		}
		else if ((_1aac0296a_comptimeParams(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8d9c8d6:;
			{
				return _1aace264d_callerLenComptime(_69863_d, static_cast<jule::I32>(_1aac0296a_comptimeParams(_70613_dest.get()._field_Kind.ptr()).get()._field_params.len()));;
			}
		}
		else if ((_1aac0373a_comptimeStatics(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8d9c94c:;
			{
				return _1aace264d_callerLenComptime(_69863_d, static_cast<jule::I32>(_1aac0373a_comptimeStatics(_70613_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1aac04274_comptimeFiles(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8d9c9b3:;
			{
				return _1aace264d_callerLenComptime(_69863_d, static_cast<jule::I32>(_1aac04274_comptimeFiles(_70613_dest.get()._field_Kind.ptr()).get()._field_files.len()));;
			}
		}
		else {
			_case_begin_1a8d9ba06:;
			{
				_1aabbe162_pushErr((*(_69826_e)).ptr(), (*(_69841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8d9a708:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace2e01_callerCapSlice(jule::Ptr<_1aabbbe1d_Data>* _73624_expr, jule::Ptr<_1aabbbe1d_Data>* _73642_d) {
	(*(_73642_d)).get()._field_Kind=_1aabb59a5_lenKind();
	(*(_73642_d)).get()._field_Model=jule::Any(jule::new_ptr<_1aaaa827c_BuiltinCapCallExprModel>(_1aaaa827c_BuiltinCapCallExprModel{._field_Expr=(*(_73624_expr))}), &__jule_any_type120);
	return (*(_73642_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace3330_builtinCallerCap(jule::Ptr<_1aabbdb12_Eval>* _74426_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _74441_fc, jule::Ptr<_1aabbbe1d_Data>* _74463_d) {
	if (((*(_74441_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_74426_e)).ptr(), (*(_74441_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_74441_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_74426_e)).ptr(), (*(_74441_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _75213_dest = _1aabdbed7_evalExpr((*(_74426_e)), (*(_74441_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_75213_dest == nullptr)) {
			_case_begin_1a8da7cdc:;
			{
				return nullptr;;
			}
		}
		else if (_75213_dest.get()._field_Decl) {
			_case_begin_1a8da867d:;
			{
				_1aabbe162_pushErr((*(_74426_e)).ptr(), (*(_74441_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1aac00b44_Slc(_75213_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8da86e4:;
			{
				return _1aace2e01_callerCapSlice(&(_75213_dest), _74463_d);;
			}
		}
		else {
			_case_begin_1a8da7946:;
			{
				_1aabbe162_pushErr((*(_74426_e)).ptr(), (*(_74441_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8da6648:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace3819_callerDeleteMap(jule::Ptr<_1aabbdb12_Eval>* _76725_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _76740_fc, jule::Ptr<_1aabbbe1d_Data>* _76762_expr, jule::Ptr<_1aabbbe1d_Data>* _76780_d) {
	if ((!((*(_76762_expr)).get()._field_Mutable))) {
		_1aabbe162_pushErr((*(_76725_e)).ptr(), (*(_76740_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_76780_d))=_1aabe7d17_buildVoidData();
	jule::Ptr<_1aaaa88ed_BuiltinDeleteCallExprModel> _77213_model = jule::new_ptr<_1aaaa88ed_BuiltinDeleteCallExprModel>(_1aaaa88ed_BuiltinDeleteCallExprModel{._field_Dest=(*(_76762_expr)), });;
	if (((*(_76740_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1aabbbe1d_Data> _77617_key = _1aabdbed7_evalExpr((*(_76725_e)), (*(_76740_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_77617_key == nullptr)) {
				_case_begin_1a8dad441:;
				{
					return nullptr;;
				}
			}
			else if (_77617_key.get()._field_Decl) {
				_case_begin_1a8dac363:;
				{
					_1aabbe162_pushErr((*(_76725_e)).ptr(), (*(_76740_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1a8dac2ec:;
				{
					;
					jule::Ptr<_1aabec1e5_TypeKind> _78521_keyType = _1aac0167d_Map((*(_76762_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1aab513d0_checkAssignType((*(_76725_e)).get()._field_s, false, &(_78521_keyType), &(_77617_key), (*(_76740_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1a8dac286:;
		};
		_77213_model.get()._field_Key=_77617_key;
	};
	(*(_76780_d)).get()._field_Model=jule::Any(_77213_model, &__jule_any_type33);
	return (*(_76780_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace3de1_builtinCallerDelete(jule::Ptr<_1aabbdb12_Eval>* _79629_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _79644_fc, jule::Ptr<_1aabbbe1d_Data>* _79666_d) {
	if (((*(_79644_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_79629_e)).ptr(), (*(_79644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_79644_fc)).get()._field_Args.len() > 2LL)) {
		_1aabbe162_pushErr((*(_79629_e)).ptr(), (*(_79644_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _80413_dest = _1aabdbed7_evalExpr((*(_79629_e)), (*(_79644_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_80413_dest == nullptr)) {
			_case_begin_1a8db2c2b:;
			{
				return nullptr;;
			}
		}
		else if (_80413_dest.get()._field_Decl) {
			_case_begin_1a8db35bc:;
			{
				_1aabbe162_pushErr((*(_79629_e)).ptr(), (*(_79644_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1aac0167d_Map(_80413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8db3633:;
			{
				return _1aace3819_callerDeleteMap(_79629_e, _79644_fc, &(_80413_dest), _79666_d);;
			}
		}
		else {
			_case_begin_1a8db2885:;
			{
				_1aabbe162_pushErr((*(_79629_e)).ptr(), (*(_79644_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1a8db1587:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace42a9_builtinCallerClone(jule::Ptr<_1aabbdb12_Eval>* _81928_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _81943_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	if (((*(_81943_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_81928_e)).ptr(), (*(_81943_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_81943_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_81928_e)).ptr(), (*(_81943_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _82813_d = _1aabdbed7_evalExpr((*(_81928_e)), (*(_81943_fc)).get()._field_Args[0LL]);;
	if ((_82813_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aabee5c1_SupportsCloning(_82813_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1aac00b44_Slc(_82813_d.get()._field_Kind.ptr()) != nullptr) || (_1aac0167d_Map(_82813_d.get()._field_Kind.ptr()) != nullptr) || (_1aac008ad_Arr(_82813_d.get()._field_Kind.ptr()) != nullptr) || (_1aabeed74_Sptr(_82813_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1a8db8094:;
				{
					{
						_1aabbe162_pushErr((*(_81928_e)).ptr(), (*(_81943_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_82813_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_1aac01161_Struct(_82813_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1a8db7934:;
				{
					{
						_1aabbe162_pushErr((*(_81928_e)).ptr(), (*(_81943_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_82813_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			else {
				_case_begin_1a8db78bd:;
				{
					{
						_1aabbe162_pushErr((*(_81928_e)).ptr(), (*(_81943_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_82813_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			_match_end_1a8db7802:;
		};
	};
	_82813_d.get()._field_Mutable=true;
	_82813_d.get()._field_Model=jule::Any(jule::new_ptr<_1aaaa6599_BuiltinCloneCallExprModel>(_1aaaa6599_BuiltinCloneCallExprModel{._field_Expr=_82813_d.get()._field_Model}), &__jule_any_type27);
	return _82813_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace46d8_builtinCallerAssert(jule::Ptr<_1aabbdb12_Eval>* _86129_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _86144_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	if (((*(_86144_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_86129_e)).ptr(), (*(_86144_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_86144_fc)).get()._field_Args.len() > 2LL)) {
		_1aabbe162_pushErr((*(_86129_e)).ptr(), (*(_86144_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _87013_expr = _1aabdbed7_evalExpr((*(_86129_e)), (*(_86144_fc)).get()._field_Args[0LL]);;
	if ((_87013_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1aabeeadd_Prim(_87013_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1aac08267_IsBool(_1aabeeadd_Prim(_87013_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1aabbe162_pushErr((*(_86129_e)).ptr(), (*(_86144_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aaaa7303_BuiltinAssertCallExprModel> _87913_model = jule::new_ptr<_1aaaa7303_BuiltinAssertCallExprModel>(_1aaaa7303_BuiltinAssertCallExprModel{._field_Token=(*(_86144_fc)).get()._field_Token, ._field_Expr=_87013_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_86144_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1aabbbe1d_Data> _88717_log = _1aabdbed7_evalExpr((*(_86129_e)), (*(_86144_fc)).get()._field_Args[1LL]);;
		if ((_88717_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1aabbc7e2_IsConst(_88717_log.ptr()))) || (_1aabeeadd_Prim(_88717_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1aac084ed_IsStr(_1aabeeadd_Prim(_88717_log.get()._field_Kind.ptr()).ptr()))))) {
			_1aabbe162_pushErr((*(_86129_e)).ptr(), (*(_86144_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_88717_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_87913_model.get()._field_Log=_1c4cc0029_ReadStr(_88717_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1aabbbe1d_Data> _90013_d = _1aabe7d17_buildVoidData();;
	_90013_d.get()._field_Model=jule::Any(_87913_model, &__jule_any_type31);
	return _90013_d;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace4b17_builtinCallerStdComptimeTypeOf(jule::Ptr<_1aabbdb12_Eval>* _90540_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _90555_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	if (((*(_90555_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_90540_e)).ptr(), (*(_90555_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_90555_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_90540_e)).ptr(), (*(_90555_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _91413_d = _1aabdb1c3_evalExprKind((*(_90540_e)), (*(_90555_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_91413_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1aaab609d_FnIns> _9189_f = _1aac00dca_Fn(_91413_d.get()._field_Kind.ptr());;
	if ((_9189_f != nullptr)) {
		if (_1aaab7533_IsBuiltin(_9189_f.ptr())) {
			_1aabbe162_pushErr((*(_90540_e)).ptr(), (*(_90555_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<built-in fn>", 13), &__jule_any_type5)}));
			return nullptr;;
		};
		if ((_9189_f.get()._field_Generics.len() != _9189_f.get()._field_Decl.get()._field_Generics.len())) {
			_1aabbe162_pushErr((*(_90540_e)).ptr(), (*(_90555_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1aaa9a390_StructIns> _9299_s = _1aac01161_Struct(_91413_d.get()._field_Kind.ptr());;
	if (((_9299_s != nullptr) && (_9299_s.get()._field_Generics.len() != _9299_s.get()._field_Decl.get()._field_Generics.len()))) {
		_1aabbe162_pushErr((*(_90540_e)).ptr(), (*(_90555_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1aac01b9a_comptime(_91413_d.get()._field_Kind.ptr())) {
		_1aabbe162_pushErr((*(_90540_e)).ptr(), (*(_90555_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_91413_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1aaae9532_buildComptimeTypeInfoData(&((*(_90540_e)).get()._field_s), &(_91413_d.get()._field_Kind));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace5046_builtinCallerStdComptimeValueOf(jule::Ptr<_1aabbdb12_Eval>* _94141_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _94156_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	if (((*(_94156_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_94141_e)).ptr(), (*(_94156_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_94156_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_94141_e)).ptr(), (*(_94156_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _94913_d = _1aabdbed7_evalExpr((*(_94141_e)), (*(_94156_fc)).get()._field_Args[0LL]);;
	if ((_94913_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aabb5d07_isGoodValueToInfer(&(_94913_d))))) {
		_1aabbe162_pushErr((*(_94141_e)).ptr(), (*(_94156_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_94913_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1aaae9763_buildComptimeValue(&(_94913_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace5310_rangeData(jule::Trait<_1aaacc504_comptimeRangeKind> _96118_kind) {
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaacc6e1_comptimeRange>(_1aaacc6e1_comptimeRange{._field_kind=_96118_kind}), 5)}), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace573e_builtinCallerStdComptimeRange(jule::Ptr<_1aabbdb12_Eval>* _97139_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _97154_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	if (((*(_97154_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_97139_e)).ptr(), (*(_97154_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_97154_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_97139_e)).ptr(), (*(_97154_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _98013_d = _1aabdb1c3_evalExprKind((*(_97139_e)), (*(_97154_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_98013_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1aac01e31_comptimeStructFields(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8dd63c0:;
			{
				return _1aace5310_rangeData(jule::Trait<_1aaacc504_comptimeRangeKind>(_1aac01e31_comptimeStructFields(_98013_d.get()._field_Kind.ptr()), 0));;
			}
		}
		else if ((_1aac0244d_comptimeEnumFields(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8dd57ba:;
			{
				return _1aace5310_rangeData(jule::Trait<_1aaacc504_comptimeRangeKind>(_1aac0244d_comptimeEnumFields(_98013_d.get()._field_Kind.ptr()), 2));;
			}
		}
		else if ((_1aac0321d_comptimeTypeInfos(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8dd5831:;
			{
				return _1aace5310_rangeData(jule::Trait<_1aaacc504_comptimeRangeKind>(_1aac0321d_comptimeTypeInfos(_98013_d.get()._field_Kind.ptr()), 4));;
			}
		}
		else if ((_1aac0296a_comptimeParams(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8dd5897:;
			{
				return _1aace5310_rangeData(jule::Trait<_1aaacc504_comptimeRangeKind>(_1aac0296a_comptimeParams(_98013_d.get()._field_Kind.ptr()), 3));;
			}
		}
		else if ((_1aac0373a_comptimeStatics(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8dd5457:;
			{
				return _1aace5310_rangeData(jule::Trait<_1aaacc504_comptimeRangeKind>(_1aac0373a_comptimeStatics(_98013_d.get()._field_Kind.ptr()), 1));;
			}
		}
		else if ((_1aac04274_comptimeFiles(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1a8dd54bd:;
			{
				return _1aace5310_rangeData(jule::Trait<_1aaacc504_comptimeRangeKind>(_1aac04274_comptimeFiles(_98013_d.get()._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_1a8dd53e1:;
			{
				_1aabbe162_pushErr((*(_97139_e)).ptr(), (*(_97154_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_98013_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1a8dd517c:;
	};
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace5b6d_builtinCallerStdComptimeLine(jule::Ptr<_1aabbdb12_Eval>* _100338_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _100353_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	if (((*(_100353_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_100338_e)).ptr(), (*(_100353_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Line", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1c4cbcda1_Const> _100713_constant = static__1c4cbd2e1_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_100353_fc)).get()._field_Token.get()._field_Row)));;
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd947a_primInt, ._field_Model=jule::Any(_100713_constant, &__jule_any_type19), ._field_Constant=_100713_constant});;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace609c_builtinCallerStdComptimeFile(jule::Ptr<_1aabbdb12_Eval>* _101538_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _101553_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	if (((*(_101553_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_101538_e)).ptr(), (*(_101553_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("File", 4), &__jule_any_type5)}));
	};
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaae7211_comptimeFile>(_1aaae7211_comptimeFile{._field_file=(*(_101538_e)).get()._field_s.get()._field_file}), 18)}), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace64cb_builtinCallerStdComptimeFiles(jule::Ptr<_1aabbdb12_Eval>* _102839_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _102854_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	if (((*(_102854_fc)).get()._field_Args.len() > 0LL)) {
		_1aabbe162_pushErr((*(_102839_e)).ptr(), (*(_102854_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Files", 5), &__jule_any_type5)}));
	};
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=jule::new_ptr<_1aabec1e5_TypeKind>(_1aabec1e5_TypeKind{._field_Kind=jule::Trait<_1aabebc3e_Kind>(jule::new_ptr<_1aaae5b16_comptimeFiles>(_1aaae5b16_comptimeFiles{._field_files=(*(_102839_e)).get()._field_s.get()._field_files}), 17)}), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace690a_builtinCallerStdMemSizeOf(jule::Ptr<_1aabbdb12_Eval>* _104135_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _104150_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	jule::Ptr<_1aabbbe1d_Data> _104213_result = jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd90a1_primUint, });;
	if (((*(_104150_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_104135_e)).ptr(), (*(_104150_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _104213_result;;
	};
	if (((*(_104150_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_104135_e)).ptr(), (*(_104150_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _105413_d = _1aabdb1c3_evalExprKind((*(_104135_e)), (*(_104150_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_105413_d == nullptr)) {
		return _104213_result;;
	};
	if ((!(_1aac1ea86_validTypeForXof(&(_105413_d.get()._field_Kind))))) {
		_1aabbe162_pushErr((*(_104135_e)).ptr(), (*(_104150_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_105413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	_104213_result.get()._field_Model=jule::Any(jule::new_ptr<_1aaaa9338_SizeofExprModel>(_1aaaa9338_SizeofExprModel{._field_Expr=_105413_d.get()._field_Model}), &__jule_any_type121);
	return _104213_result;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace6d39_builtinCallerStdMemAlignOf(jule::Ptr<_1aabbdb12_Eval>* _106636_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _106651_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	jule::Ptr<_1aabbbe1d_Data> _106713_result = jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd90a1_primUint, });;
	if (((*(_106651_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_106636_e)).ptr(), (*(_106651_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _106713_result;;
	};
	if (((*(_106651_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_106636_e)).ptr(), (*(_106651_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _107913_d = _1aabdb1c3_evalExprKind((*(_106636_e)), (*(_106651_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_107913_d == nullptr)) {
		return _106713_result;;
	};
	if ((!(_1aac1ea86_validTypeForXof(&(_107913_d.get()._field_Kind))))) {
		_1aabbe162_pushErr((*(_106636_e)).ptr(), (*(_106651_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1aabec5ad_Str(_107913_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	_106713_result.get()._field_Model=jule::Any(jule::new_ptr<_1aaaa9635_AlignofExprModel>(_1aaaa9635_AlignofExprModel{._field_Expr=_107913_d.get()._field_Model}), &__jule_any_type122);
	return _106713_result;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace7268_builtinCallerStdMemFree(jule::Ptr<_1aabbdb12_Eval>* _109133_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _109148_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	if (((*(_109148_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_109133_e)).ptr(), (*(_109148_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_109148_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_109133_e)).ptr(), (*(_109148_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _110013_d = _1aabdbed7_evalExpr((*(_109133_e)), (*(_109148_fc)).get()._field_Args[0LL]);;
	if ((_110013_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aabee33a_PerformsRC(_110013_d.get()._field_Kind.ptr())))) {
		_1aabbe162_pushErr((*(_109133_e)).ptr(), (*(_109148_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aabbbe1d_Data> _110913_result = _1aabe7d17_buildVoidData();;
	_110913_result.get()._field_Model=jule::Any(jule::new_ptr<_1aaaaa405_FreeExprModel>(_1aaaaa405_FreeExprModel{._field_Expr=_110013_d.get()._field_Model}), &__jule_any_type34);
	return _110913_result;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace7697_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1aabbdb12_Eval>* _111445_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _111460_fc, jule::Ptr<_1aabbbe1d_Data>* ) {
	if (((*(_111460_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_111445_e)).ptr(), (*(_111460_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_111460_fc)).get()._field_Args.len() > 1LL)) {
		_1aabbe162_pushErr((*(_111445_e)).ptr(), (*(_111460_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1aabbbe1d_Data> _112313_d = _1aabdbed7_evalExpr((*(_111445_e)), (*(_111460_fc)).get()._field_Args[0LL]);;
	if ((_112313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1aac1daa7_isBuiltinStrConvertable(&(_112313_d.get()._field_Kind))))) {
		_1aabbe162_pushErr((*(_111445_e)).ptr(), (*(_111460_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1aabbbe1d_Data>(_1aabbbe1d_Data{._field_Kind=_1aacd8754_primStr, ._field_Model=jule::Any(jule::new_ptr<_1aaaa9c2e_IntegratedToStrExprModel>(_1aaaa9c2e_IntegratedToStrExprModel{._field_Expr=_112313_d.get()._field_Model}), &__jule_any_type123), });;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace7ac6_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1aabbdb12_Eval>* _114144_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _114159_fc, jule::Ptr<_1aabbbe1d_Data>* _114181_d) {
	if ((!(_1aabbeb57_isUnsafe((*(_114144_e)).ptr())))) {
		_1aabbe162_pushErr((*(_114144_e)).ptr(), (*(_114159_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_114159_fc)).get()._field_Args.len() < 1LL)) {
		_1aabbe162_pushErr((*(_114144_e)).ptr(), (*(_114159_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1aabbbe1d_Data> _115113_argd = _1aabdbed7_evalExpr((*(_114144_e)), (*(_114159_fc)).get()._field_Args[0LL]);;
	if ((_115113_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1aabeeadd_Prim(_115113_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1aac084ed_IsStr(_1aabeeadd_Prim(_115113_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1aabbe162_pushErr((*(_114144_e)).ptr(), (*(_114159_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1aabec5ad_Str(_115113_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_1aabbc7e2_IsConst(_115113_argd.ptr()))) || (!(_1c4cc2625_IsStr(_115113_argd.get()._field_Constant.ptr()))))) {
		_1aabbe162_pushErr((*(_114144_e)).ptr(), (*(_114159_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aabbbe1d_Data> _116613_r = _1aabe7d17_buildVoidData();;
	jule::Ptr<_1aaab609d_FnIns> _116813_f = _1aac00dca_Fn((*(_114181_d)).get()._field_Kind.ptr());;
	if ((_116813_f.get()._field_Generics.len() > 0LL)) {
		_116613_r.get()._field_Kind=_116813_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1aaaaa108_BackendEmitExprModel> _117313_model = jule::new_ptr<_1aaaaa108_BackendEmitExprModel>(_1aaaaa108_BackendEmitExprModel{._field_Code=_1c4cc0029_ReadStr(_115113_argd.get()._field_Constant.ptr()), });;
	if (((*(_114159_fc)).get()._field_Args.len() > 1LL)) {
		_117313_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_114159_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_114159_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1a8e0a59d:;
			if (it != expr_end) {
				jule::Ptr<_1aaa7a925_Expr> _117921_arg = *it;
				{
					_115113_argd=_1aabdb514_eval1((*(_114144_e)), _117921_arg);
					if ((_115113_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _117313_model.get()._field_Exprs; __jule_push_dest.push(_115113_argd.get()._field_Model); };
				}
				_iter_next_1a8e0a59d:;
				++it;
				goto _iter_begin_1a8e0a59d;
			}
			_iter_end_1a8e0a59d:;
		};
	};
	_116613_r.get()._field_Model=jule::Any(_117313_model, &__jule_any_type25);
	return _116613_r;;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace8005_builtinCallerStdDebugOut(jule::Ptr<_1aabbdb12_Eval>* _119234_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _119249_fc, jule::Ptr<_1aabbbe1d_Data>* _119271_d) {
	(*(_119271_d))=_1aacde21b_builtinCallerOut(_119234_e, _119249_fc, _119271_d);
	if (((*(_119271_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_119271_d)).get()._field_Model.cast_ptr<_1aaaa5dc3_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_119271_d));;
}



inline jule::Ptr<_1aabbbe1d_Data> _1aace8434_builtinCallerStdDebugOutln(jule::Ptr<_1aabbdb12_Eval>* _120136_e, jule::Ptr<_1aaa7e72b_FnCallExpr>* _120151_fc, jule::Ptr<_1aabbbe1d_Data>* _120173_d) {
	(*(_120173_d))=_1aacde804_builtinCallerOutln(_120136_e, _120151_fc, _120173_d);
	if (((*(_120173_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_120173_d)).get()._field_Model.cast_ptr<_1aaaa629c_BuiltinOutlnCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return (*(_120173_d));;
}



inline jule::Ptr<_1ab6d1943_FileInfo> _1ab7261d5_ParseFile(jule::Ptr<_1c3e40db0_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1ab6d1943_FileInfo> _2713_finf = jule::new_ptr<_1ab6d1943_FileInfo>();;
	({
		__jule_tuple_x_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log __jule_assign_result = _1ab7267ac_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log _1ab7267ac_parseFileset(jule::Ptr<_1c3e40db0_File> _5521_f) {
	__jule_tuple_x_1aaa41996_Ast__jule_tuple_s_1c3983b45_Log __jule_func_result;
	jule::Ptr<_1ab747019_parser> _5613_p = jule::new_ptr<_1ab747019_parser>();;
	_1ab757ada_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1aaa866de_ScopeTree> _1ab72723b_newScope(void) {
	return jule::new_ptr<_1aaa866de_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1ab7275b0_isSt(jule::Ptr<_1c3e3a5e6_Token> _499_current, jule::Ptr<_1c3e3a5e6_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U32>(3LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ab727934_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _5526_tokens, jule::I32* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1c3e3a5e6_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U32>(17LLU)) || (_1c3e3b141_IsBinOp(_6113_prev.get()._field_Id) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1ab727cec_nextStPos(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _6815_tokens, jule::I32 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _6913_braceN = 0LL;;
	jule::I32 _7013_i = _6833_start;;
	for (; (_7013_i < (*(_6815_tokens)).len()); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;;
			jule::Bool _7317_terminated = false;;
			jule::Ptr<_1c3e3a5e6_Token> _7413_tok = (*(_6815_tokens))[_7013_i];;
			{
				auto &_match_expr{ _7413_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a8e8b530:;
					{
						if (((_6913_braceN == 0LL) && (_7013_i > _6833_start))) {
							if ((!(_1ab727934_prevIsIncompleteExpr(_6815_tokens, &(_7013_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab7275b0_isSt(_7413_tok, (*(_6815_tokens))[(_7013_i - 1LL)]);
									_7217_ok = __jule_assign_result.__jule_result_arg0;
									_7317_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7217_ok) {
									goto _julec_label_1a8e8b233;
								};
							};
						};
						(_6913_braceN)++;
						goto _iter_next_1a8e89e57;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a8e8b596:;
					{
						(_6913_braceN)--;
						if (((_6913_braceN == 0LL) && ((_7013_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab7275b0_isSt((*(_6815_tokens))[(_7013_i + 1LL)], _7413_tok);
								_7217_ok = __jule_assign_result.__jule_result_arg0;
								_7317_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7217_ok) {
								(_7013_i)++;
								goto _julec_label_1a8e8b233;
							};
						};
						goto _iter_next_1a8e89e57;
					}
				}
				_match_end_1a8e8b4ca:;
			};
			if ((_6913_braceN != 0LL)) {
				goto _iter_next_1a8e89e57;
			};
			if ((_7013_i > _6833_start)) {
				if (_1ab727934_prevIsIncompleteExpr(_6815_tokens, &(_7013_i))) {
					goto _iter_next_1a8e89e57;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab7275b0_isSt(_7413_tok, (*(_6815_tokens))[(_7013_i - 1LL)]);
					_7217_ok = __jule_assign_result.__jule_result_arg0;
					_7317_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1ab7275b0_isSt(_7413_tok, _7413_tok);
					_7217_ok = __jule_assign_result.__jule_result_arg0;
					_7317_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7217_ok))) {
				goto _iter_next_1a8e89e57;
			};
			_julec_label_1a8e8b233:;
			if (_7317_terminated) {
				(_7013_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7013_i;
			__jule_func_result.__jule_result_arg1 = _7317_terminated;
			return __jule_func_result;;
		}
	_iter_next_1a8e89e57:;
	}
	_iter_end_1a8e89e57:;;
	__jule_func_result.__jule_result_arg0 = _7013_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_bool _1ab728171_skipSt(jule::I32* _13016_i, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _13028_tokens) {
	__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _1319_start = (*(_13016_i));;
	jule::Bool _13213_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ab727cec_nextStPos(&(_13028_tokens), _1319_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_13213_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _13413_stTokens = _13028_tokens.slice(_1319_start, (*(_13016_i)));;
	if (_13213_terminated) {
		if ((_13413_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_bool __jule_assign_result = _1ab728171_skipSt(_13016_i, _13028_tokens);
				_13413_stTokens = __jule_assign_result.__jule_result_arg0;
				_13213_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13413_stTokens;
			__jule_func_result.__jule_result_arg1 = _13213_terminated;
			return __jule_func_result;;
		};
		_13413_stTokens=_13413_stTokens.slice(0LL, (_13413_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13413_stTokens;
	__jule_func_result.__jule_result_arg1 = _13213_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1ab7284a1_stmt>> _1ab728858_splitStmts(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1ab7284a1_stmt>> _15313_stmts = jule::Slice<jule::Ptr<_1ab7284a1_stmt>>::alloc(0LL, 20LL);;
	jule::I32 _15413_pos = 0LL;;
	while ((_15413_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _15618_stmt;;
			jule::Bool _15624_terminated = false;;
			({
				__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_bool __jule_assign_result = _1ab728171_skipSt(&(_15413_pos), (*(_15220_tokens)));
				_15618_stmt = __jule_assign_result.__jule_result_arg0;
				_15624_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1ab7284a1_stmt>> &__jule_push_dest = _15313_stmts; __jule_push_dest.push(jule::new_ptr<_1ab7284a1_stmt>(_1ab7284a1_stmt{._field_tokens=_15618_stmt, ._field_terminated=_15624_terminated})); };
		}
	_iter_next_1a8e95e96:;
	}
	_iter_end_1a8e95e96:;;
	return _15313_stmts;;
}



inline jule::Bool _1ab741b3a_isTypeOp(jule::U32* _88214_id) {
	return ((((*(_88214_id)) == static_cast<jule::U32>(65LLU)) || ((*(_88214_id)) == static_cast<jule::U32>(54LLU))) || ((*(_88214_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _1ab741e48_isTypeRange(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _88921_tokens) {
	jule::Bool _89013_op = false;;
	{
		auto expr = _88921_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a840e9b5:;
		if (it != expr_end) {
			jule::I32 _8919_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> _89112_token = *it;
			{
				if ((_89112_token.get()._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_89013_op) {
						return true;;
					};
					jule::I32 _89621_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _89721_lTokens = (*(_88921_tokens)).slice(_8919_i);;
					{
						auto expr = &(_89721_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1a841228c:;
						if (it != expr_end) {
							jule::Ptr<_1c3e3a5e6_Token> _89820_lToken = *it;
							{
								{
									auto &_match_expr{ _89820_lToken.get()._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_1a8412c4e:;
										{
											(_89621_rangeN)++;
											goto _iter_next_1a841228c;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_1a8412cc6:;
										{
											(_89621_rangeN)--;
											goto _iter_next_1a841228c;
										}
									}
									_match_end_1a8412bb6:;
								};
								if ((_89621_rangeN == 0LL)) {
									return _1ab741b3a_isTypeOp(&(_89820_lToken.get()._field_Id));;
								};
							}
							_iter_next_1a841228c:;
							++it;
							goto _iter_begin_1a841228c;
						}
						_iter_end_1a841228c:;
					};
					return true;;
				};
				if ((!(_1ab741b3a_isTypeOp(&(_89112_token.get()._field_Id))))) {
					return false;;
				};
				_89013_op=true;
			}
			_iter_next_1a840e9b5:;
			++it;
			_8919_i++;
			goto _iter_begin_1a840e9b5;
		}
		_iter_end_1a840e9b5:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _1ab742212_getBlockExpr(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _92222_tokens) {
	jule::I32 _92313_braceN = 0LL;;
	jule::I32 _92413_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84146bd:;
		if (it != expr_end) {
			jule::I32 _9259_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> _92512_tok = *it;
			{
				{
					auto &_match_expr{ _92512_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(13LLU) || _match_expr == static_cast<jule::U32>(14LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1a84154c1:;
						{
							(_92413_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1a8415548:;
						{
							if (((_92313_braceN > 0LL) || (_92413_skipToNextBraceClose > 0LL))) {
								if ((_92413_skipToNextBraceClose > 0LL)) {
									(_92413_skipToNextBraceClose)--;
								};
								(_92313_braceN)++;
								goto _match_end_1a8415416;
							};
							return (*(_92222_tokens)).slice(0LL, _9259_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a84155c0:;
						{
							(_92313_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a8415647:;
						{
							(_92313_braceN)--;
						}
					}
					_match_end_1a8415416:;
				};
			}
			_iter_next_1a84146bd:;
			++it;
			_9259_i++;
			goto _iter_begin_1a84146bd;
		}
		_iter_end_1a84146bd:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_sx_1c3e3a5e6_Token _1ab7425ca_splitDelim(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _95220_tokens, jule::U32 _95238_delim) {
	__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_sx_1c3e3a5e6_Token __jule_func_result;
	jule::I32 _95313_rangeN = 0LL;;
	{
		auto expr = _95220_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a8417e52:;
		if (it != expr_end) {
			jule::I32 _9549_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> _95412_token = *it;
			{
				{
					auto &_match_expr{ _95412_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a8418b45:;
						{
							(_95313_rangeN)++;
							goto _iter_next_1a8417e52;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a8418bbc:;
						{
							(_95313_rangeN)--;
						}
					}
					else if (_match_expr == _95238_delim) {
						_case_begin_1a8418c44:;
						{
							if ((_95313_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _96725_l = (*(_95220_tokens)).slice(0LL, _9549_i);;
								jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _96825_r = (*(_95220_tokens)).slice((_9549_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _96725_l;
								__jule_func_result.__jule_result_arg1 = _96825_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1a8418a9b:;
				};
			}
			_iter_next_1a8417e52:;
			++it;
			_9549_i++;
			goto _iter_begin_1a8417e52;
		}
		_iter_end_1a8417e52:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1ab742894_findLowestPrecOp(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _97822_tokens) {
	jule::U8 _98313_prec = 255LLU;;
	jule::I32 _98413_precPos = -1LL;;
	jule::I32 _98613_braceN = 0LL;;
	jule::Bool _98713_skipToNextBraceOpen = false;;
	{
		auto expr = _97822_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a841c143:;
		if (it != expr_end) {
			jule::I32 _9889_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> *_98812_token = it;
			{
				{
					auto &_match_expr{ (*(_98812_token)).get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1a841cd7a:;
						{
							_98713_skipToNextBraceOpen=false;
							goto _case_begin_1a841ce02;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1a841ce02:;
						{
							(_98613_braceN)++;
							goto _iter_next_1a841c143;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1a841ce79:;
						{
							(_98613_braceN)--;
							goto _iter_next_1a841c143;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_1a841d001:;
						{
							_98713_skipToNextBraceOpen=true;
							goto _iter_next_1a841c143;
						}
					}
					_match_end_1a841ccc0:;
				};
				{
					
					if (_98713_skipToNextBraceOpen) {
						_case_begin_1a841e464:;
						{
							goto _iter_next_1a841c143;
						}
					}
					else if ((_9889_i == 0LL)) {
						_case_begin_1a841e4db:;
						{
							goto _iter_next_1a841c143;
						}
					}
					else if ((_98613_braceN > 0LL)) {
						_case_begin_1a841e563:;
						{
							goto _iter_next_1a841c143;
						}
					}
					else if ((!(_1c3e3b141_IsBinOp((*(_98812_token)).get()._field_Id)))) {
						_case_begin_1a841e5da:;
						{
							goto _iter_next_1a841c143;
						}
					}
					_match_end_1a841e211:;
				};
				jule::Ptr<_1c3e3a5e6_Token> _101713_left = (*(_97822_tokens))[(_9889_i - 1LL)];;
				if ((_1c3e3ad33_IsUnaryOp(_101713_left.get()._field_Id) || (_101713_left.get()._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1a841c143;
				};
				if (((_9889_i > 1LL) && (_101713_left.get()._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_1c3e3a5e6_Token> _102517_lleft = (*(_97822_tokens))[(_9889_i - 2LL)];;
					if ((_102517_lleft.get()._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*(_98812_token)).get()._field_Id == static_cast<jule::U32>(65LLU)) || ((*(_98812_token)).get()._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_1a841c143;
						};
					};
				};
				jule::U8 _103413_p = _1c3e3a96a_Prec((*(_98812_token)).ptr());;
				if (((_103413_p != 0LLU) && (_103413_p <= _98313_prec))) {
					_98313_prec=_103413_p;
					_98413_precPos=_9889_i;
				};
			}
			_iter_next_1a841c143:;
			++it;
			_9889_i++;
			goto _iter_begin_1a841c143;
		}
		_iter_end_1a841c143:;
	};
	return _98413_precPos;;
}



inline jule::Ptr<_1aaa7c350_IdentExpr> _1ab742b5d_buildIdentExpr(jule::Ptr<_1c3e3a5e6_Token>* _104324_token) {
	return jule::new_ptr<_1aaa7c350_IdentExpr>(_1aaa7c350_IdentExpr{._field_Token=(*(_104324_token)), ._field_Ident=(*(_104324_token)).get()._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_int _1ab742e27_getRangeExprTokens(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _105128_tokens) {
	__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _105213_rangeN = 0LL;;
	jule::I32 _105313_i = ((*(_105128_tokens)).len() - 1LL);;
	for (; (_105313_i >= 0LL); (_105313_i)--) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _105513_tok = (*(_105128_tokens))[_105313_i];;
			{
				auto &_match_expr{ _105513_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a8425a97:;
					{
						(_105213_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a8425b1e:;
					{
						(_105213_rangeN)--;
					}
				}
				_match_end_1a84255d0:;
			};
			if ((_105213_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105128_tokens)).slice(0LL, _105313_i);
				__jule_func_result.__jule_result_arg1 = _105213_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1a8424e5e:;
	}
	_iter_end_1a8424e5e:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _105213_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1ab743c2a_checkAssignTokens(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1c3e3eebe_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I32 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84abb94:;
		if (it != expr_end) {
			jule::Ptr<_1c3e3a5e6_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*(_2112_t)).get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a84ac667:;
						{
							(_2013_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a84ac6de:;
						{
							(_2013_braceN)--;
						}
					}
					_match_end_1a84ac5ce:;
				};
				{
					
					if ((_2013_braceN < 0LL)) {
						_case_begin_1a84ad57a:;
						{
							return false;;
						}
					}
					else if ((_2013_braceN > 0LL)) {
						_case_begin_1a84ad5e1:;
						{
							goto _iter_next_1a84abb94;
						}
					}
					else if (_1c3e40552_IsAssignOp((*(_2112_t)).get()._field_Id) || ((*(_2112_t)).get()._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_1a84ad668:;
						{
							return true;;
						}
					}
					_match_end_1a84ad4d1:;
				};
			}
			_iter_next_1a84abb94:;
			++it;
			goto _iter_begin_1a84abb94;
		}
		_iter_end_1a84abb94:;
	};
	return false;;
}



inline _1c3983b45_Log _1ab744e07_makeErr(jule::I32 _5112_row, jule::I32 _5122_col, jule::Ptr<_1c3e40db0_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1c3983b45_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*(_5133_f)).get()._field_Path, ._field_Text=_1c39840a7_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _1ab745402_range(jule::I32* _6915_i, jule::U32 _6923_open, jule::U32 _6938_close, jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1c3e3a5e6_Token> _739_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if ((_739_tok.get()._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I32 _7813_rangeN = 1LL;;
	jule::I32 _799_start = (*(_6915_i));;
	for (; ((_7813_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _8113_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ _8113_token.get()._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1a84b34a3:;
					{
						(_7813_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1a84b352a:;
					{
						(_7813_rangeN)--;
					}
				}
				_match_end_1a84b3096:;
			};
		}
	_iter_next_1a84b278d:;
	}
	_iter_end_1a84b278d:;;
	return (*(_6959_tokens)).slice(_799_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_sx_1c3e3a5e6_Token _1ab7456bb_rangeLast(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _9919_tokens) {
	__jule_tuple_sx_1c3e3a5e6_Token__jule_tuple_sx_1c3e3a5e6_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _1039_first = (*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)].get()._field_Id;;
	if ((((_1039_first != static_cast<jule::U32>(73LLU)) && (_1039_first != static_cast<jule::U32>(76LLU))) && (_1039_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _10913_braceN = 0LL;;
	jule::I32 _11013_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_1c3e3a5e6_Token> _11213_token = (*(_9919_tokens))[_11013_i];;
			{
				auto &_match_expr{ _11213_token.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1a84b7485:;
					{
						(_10913_braceN)++;
						goto _iter_next_1a84b6907;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1a84b750c:;
					{
						(_10913_braceN)--;
					}
				}
				_match_end_1a84b6ebd:;
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1a84b6907:;
	}
	_iter_end_1a84b6907:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log _1ab745b72_parts(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _13715_tokens, jule::U32 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1c3e3a5e6_Token__jule_tuple_s_1c3983b45_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> _14213_parts = nullptr;;
	jule::Slice<_1c3983b45_Log> _14313_errors = nullptr;;
	jule::I32 _14513_rangeN = 0LL;;
	jule::I32 _14613_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84b5274:;
		if (it != expr_end) {
			jule::I32 _1479_i = it - expr->begin();
			jule::Ptr<_1c3e3a5e6_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ _14712_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1a84bb764:;
						{
							(_14513_rangeN)++;
							goto _iter_next_1a84b5274;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1a84bb7db:;
						{
							(_14513_rangeN)--;
						}
					}
					_match_end_1a84bb6cb:;
				};
				if ((_14513_rangeN > 0LL)) {
					goto _iter_next_1a84b5274;
				};
				if ((_14712_token.get()._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _14613_last) <= 0LL))) {
						_1c3983b45_Log _16621_err = _1ab744e07_makeErr(_14712_token.get()._field_Row, _14712_token.get()._field_Column, &(_14712_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_1c3983b45_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16621_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_14613_last, _1479_i)); };
					_14613_last=static_cast<jule::I32>((_1479_i + 1LL));
				};
			}
			_iter_next_1a84b5274:;
			++it;
			_1479_i++;
			goto _iter_begin_1a84b5274;
		}
		_iter_end_1a84b5274:;
	};
	if ((_14613_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_14613_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U32 _1ab745e3b_getCloseOfBrace(jule::U32 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1a84be745:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1a84be7ab:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1a84be822:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_1a84be6ce:;
			{
				return _18320_left;;
			}
		}
		_match_end_1a84beeb5:;
	};
}



inline _1c3983b45_Log _1ab74636a_compilerErr(jule::Ptr<_1c3e3a5e6_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _1c3983b45_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_19617_token)).get()._field_Row, ._field_Column=(*(_19617_token)).get()._field_Column, ._field_Path=(*(_19617_token)).get()._field_File.get()._field_Path, ._field_Text=_1c39840a7_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_1c3e41d8e_GetRow((*(_19617_token)).get()._field_File.ptr(), (*(_19617_token)).get()._field_Row), };;
}



inline void _1ab746711_pushSuggestion(_1c3983b45_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	_20730_log->_field_Suggestion=_1c39840a7_Logf(_20741_fmt, _20754_args);
}



inline jule::Str _1ab746aa7_tokstoa(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>>* _21113_tokens) {
	jule::I32 _21213_n = 0LL;;
	{
		auto expr = _21113_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84c368e:;
		if (it != expr_end) {
			jule::Ptr<_1c3e3a5e6_Token> *_21312_token = it;
			{
				_21213_n+=(*(_21312_token)).get()._field_Kind.len();
			}
			_iter_next_1a84c368e:;
			++it;
			goto _iter_begin_1a84c368e;
		}
		_iter_end_1a84c368e:;
	};
	_1c38d3b83_StrBuilder _21613_s = static__1c38d3ea2_New(_21213_n);;
	{
		auto expr = _21113_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a84c3826:;
		if (it != expr_end) {
			jule::Ptr<_1c3e3a5e6_Token> *_21712_token = it;
			{
				_1c38dc94a_WriteStr(&_21613_s, (*(_21712_token)).get()._field_Kind);
			}
			_iter_next_1a84c3826:;
			++it;
			goto _iter_begin_1a84c3826;
		}
		_iter_end_1a84c3826:;
	};
	return _1c38dd242_Str(&_21613_s);;
}



inline jule::Ptr<_1aaa765e1_TypeDecl> _1ab7585d0_buildVoidType(void) {
	return jule::new_ptr<_1aaa765e1_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1aadd81a0_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1a925e54a:;
			{
				__jule_func_result.__jule_result_arg0=_1c398bda1_IsWindows(_1c3a957a1_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1a925e5b1:;
			{
				__jule_func_result.__jule_result_arg0=_1c398c17b_IsDarwin(_1c3a957a1_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1a925e292:;
			{
				__jule_func_result.__jule_result_arg0=_1c398c445_IsLinux(_1c3a957a1_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1a925e308:;
			{
				__jule_func_result.__jule_result_arg0=_1c398d0d3_IsUnix(_1c3a957a1_Os);
			}
		}
		else {
			_case_begin_1a925dc42:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1a925e182:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1aadd82e3_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1a92617c2:;
			{
				__jule_func_result.__jule_result_arg0=_1c398c786_IsI386(_1c3a95a6a_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1a92614a3:;
			{
				__jule_func_result.__jule_result_arg0=_1c398ca50_IsAmd64(_1c3a95a6a_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1a9261519:;
			{
				__jule_func_result.__jule_result_arg0=_1c398cd19_IsArm64(_1c3a95a6a_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1a9261580:;
			{
				__jule_func_result.__jule_result_arg0=_1c398d743_Is64Bit(_1c3a95a6a_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1a92615e6:;
			{
				__jule_func_result.__jule_result_arg0=_1c398d479_Is32Bit(_1c3a95a6a_Arch);
			}
		}
		else {
			_case_begin_1a9260e53:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1a9261393:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1aae02d9b_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1c38e19a4_Base(_5029_p);
	jule::I32 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _1c38e1421_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I32 _6413_i = _1c38c2479_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aadd81a0_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aadd82e3_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I32>(_1c38c2479_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aadd81a0_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aadd82e3_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aadd82e3_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aadd81a0_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1aadd81a0_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1aae04023_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1c3a957a1_Os); };
	if (_1c398d0d3_IsUnix(_1c3a957a1_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str("unix", 4)); };
	};
}



inline void _1aae04298_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1c3a95a6a_Arch); };
	if (_1c398d743_Is64Bit(_1c3a95a6a_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x64", 3)); };
	};
	if (_1c398d479_Is32Bit(_1c3a95a6a_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x32", 3)); };
	};
}



inline void _1aae04584_initVars(jule::Slice<jule::Str>* _5518_vars, _1aae03c04_CompileInfo* _5532_info) {
	_1aae04023_setOsVars(_5518_vars);
	_1aae04298_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a926bcc7:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a926bd3d:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("gcc", 3)); };
			}
		}
		_match_end_1a926c6ce:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a926cd1c:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a926cd83:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a926d1b3:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp20", 5)); };
			}
		}
		_match_end_1a926cb96:;
	};
}



inline jule::Slice<jule::U8> _1ab75c705_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__206b79b93_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1c3a946b2_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1c3983b45_Log _1ab75c9d0_flatCompilerErr(jule::Str _4120_text) {
	return _1c3983b45_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Text=_4120_text, };;
}



inline void _1ab7622ed_pushPasses(jule::Ptr<_1aab27b59_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a929ae16:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _11217_f = *it;
			{
				_julec_label_1a929b6b9:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a929b884:;
					if (it != expr_end) {
						_1aaaba767_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1a929b884;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1a929c28b:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1a929b884;
										};
									}
									_iter_next_1a929c28b:;
									++it;
									goto _iter_begin_1a929c28b;
								}
								_iter_end_1a929c28b:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1a929b884:;
						++it;
						goto _iter_begin_1a929b884;
					}
					_iter_end_1a929b884:;
				};
			}
			_iter_next_1a929ae16:;
			++it;
			goto _iter_begin_1a929ae16;
		}
		_iter_end_1a929ae16:;
	};
}



inline jule::Slice<jule::Str> _1ab7626b6_getAllUniquePasses(jule::Ptr<_1aab27b59_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1aab24c33_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1ab7622ed_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a929dd09:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_Binded))) {
					_1ab7622ed_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1a929dd09:;
			++it;
			goto _iter_begin_1a929dd09;
		}
		_iter_end_1a929dd09:;
	};
	return _12913_passes;;
}



inline _1aae03c04_CompileInfo _1ab7628c5_buildCompileInfo(void) {
	_1aae03c04_CompileInfo _14213_info = _1aae03c04_CompileInfo{._field_Prod=_205b16b42_Production, ._field_Test=_205b161d5_Test, };;
	{
		auto &_match_expr{ _205b15547_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a92a003b:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a92a0107:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1a929e8ed:;
	};
	{
		auto &_match_expr{ _205b15987_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a92a0ba7:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a929ee09:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a92a047b:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1a92a0de9:;
	};
	return _14213_info;;
}



inline void _1ac59785d_EliminateDefines(jule::Ptr<_1ab76097d_IR>* _29026_ir) {
	jule::Ptr<_1ac594abe_ObjectDeadCode> _29113_ocd = static__1ac594ddd_new(_29026_ir);;
	_1ac59752d_elimanate(_29113_ocd);
}



inline jule::Ptr<_1aaa42c61_Directive> _1ac597c26_findDirective(jule::Slice<jule::Ptr<_1aaa42c61_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92d9174:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42c61_Directive> _29717_dr = *it;
			{
				if ((_29717_dr.get()._field_Tag.get()._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1a92d9174:;
			++it;
			goto _iter_begin_1a92d9174;
		}
		_iter_end_1a92d9174:;
	};
	return nullptr;;
}



inline jule::Bool _1ac59809a_hasDirective(jule::Slice<jule::Ptr<_1aaa42c61_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1ac597c26_findDirective(_30618_directives, _30649_tag) != nullptr);;
}



inline jule::Bool _1ac598463_isTraitMethod(jule::Ptr<_1aaa9a390_StructIns>* _31123_owner, jule::Ptr<_1aaab609d_FnIns>* _31143_f) {
	{
		auto expr = &((*(_31123_owner)).get()._field_Decl.get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a92da131:;
		if (it != expr_end) {
			jule::Ptr<_1aaac6443_Trait> _31217_t = *it;
			{
				if ((_1aaac70e2_FindMethod(_31217_t.ptr(), (*(_31143_f)).get()._field_Decl.get()._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1a92da131:;
			++it;
			goto _iter_begin_1a92da131;
		}
		_iter_end_1a92da131:;
	};
	return false;;
}



inline void _1ac59c467_eliminateDeadCodeOfScope(jule::Ptr<_1aab037e4_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1aab06187_Label>> _2429_labels = jule::Slice<jule::Ptr<_1aab06187_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1aab06561_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1aab06561_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1ac599266_scopeDeadCode> _24413_sdc = jule::new_ptr<_1ac599266_scopeDeadCode>(_1ac599266_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1aab06187_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1aab06561_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1ac59c137_optimizeStmts(_24413_sdc);
	};
}



inline void _1ac59c6dc_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1aaab3199_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9326513:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1a93290e8:;
					if (it != expr_end) {
						jule::Ptr<_1aaab609d_FnIns> _25621_ins = *it;
						{
							_1ac59c467_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1a93290e8:;
						++it;
						goto _iter_begin_1a93290e8;
					}
					_iter_end_1a93290e8:;
				};
			}
			_iter_next_1a9326513:;
			++it;
			goto _iter_begin_1a9326513;
		}
		_iter_end_1a9326513:;
	};
}



inline void _1ac59c91d_eliminateFunctionsScopePackage(jule::Ptr<_1aab27b59_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9328dea:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _26317_f = *it;
			{
				_1ac59c6dc_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_1a9328dea:;
			++it;
			goto _iter_begin_1a9328dea;
		}
		_iter_end_1a9328dea:;
	};
}



inline void _1ac59cbc6_eliminateScopePackage(jule::Ptr<_1aab27b59_Package>* _26831_pkg) {
	_1ac59c91d_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1ac59ce07_EliminateScopes(jule::Ptr<_1ab76097d_IR>* _27325_ir) {
	jule::I32 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1aab24c33_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_Binded))) {
				_1ac59cbc6_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_1a932a814:;
	}
	_iter_end_1a932a814:;;
	_1ac59cbc6_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _1aaceeade_isStdPackage(jule::Str* _38918_f, jule::Str _38926_p) {
	return _1c38bdc8e_HasPrefix((*(_38918_f)), _1c38e1157_Join(jule::Slice<jule::Str>::make({_1c3a94bbd_PathStdlib,_38926_p})));;
}



inline jule::Bool _1aaceedec_isConstantValidConditionalCase(jule::Ptr<_1aab03c12_If>* _39336_i) {
	{
		auto &_match_expr{ (*(_39336_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a93a2429:;
			{
				jule::Ptr<_1c4cbcda1_Const> _39613_c = (*(_39336_i)).get()._field_Expr.cast_ptr<_1c4cbcda1_Const>(&__jule_any_type19);;
				return (_1c4cc238e_IsBool(_39613_c.ptr()) && _1c4cbec93_ReadBool(_39613_c.ptr()));;
			}
		}
		_match_end_1a93a23c4:;
	};
	return false;;
}



inline jule::Bool _1aad001b6_isUnreachableExpr(jule::Any* _40223_expr) {
	{
		auto &_match_expr{ (*(_40223_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a93a27ae:;
			{
				jule::Ptr<_1c4cbcda1_Const> _40513_c = (*(_40223_expr)).cast_ptr<_1c4cbcda1_Const>(&__jule_any_type19);;
				return (_1c4cc238e_IsBool(_40513_c.ptr()) && (!(_1c4cbec93_ReadBool(_40513_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1a93a2825:;
			{
				jule::Ptr<_1aaa9e96b_BinopExprModel> _40813_m = (*(_40223_expr)).cast_ptr<_1aaa9e96b_BinopExprModel>(&__jule_any_type115);;
				if ((_40813_m.get()._field_Op.get()._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_1aad001b6_isUnreachableExpr(&(_40813_m.get()._field_Left.get()._field_Model)) || _1aad001b6_isUnreachableExpr(&(_40813_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_1a93a2759:;
	};
	return false;;
}



inline jule::Bool _1aad00507_isConstantValidMatchCase(jule::Ptr<_1aab08563_Case>* _41730_case) {
	{
		auto expr = &((*(_41730_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93a5020:;
		if (it != expr_end) {
			jule::Ptr<_1aabbbe1d_Data> *_41812_expr = it;
			{
				if (((_1aabbc7e2_IsConst((*(_41812_expr)).ptr()) && _1c4cc238e_IsBool((*(_41812_expr)).get()._field_Constant.ptr())) && _1c4cbec93_ReadBool((*(_41812_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1a93a5020:;
			++it;
			goto _iter_begin_1a93a5020;
		}
		_iter_end_1a93a5020:;
	};
	return false;;
}



inline jule::Bool _1aad007c1_isUnreachableConditionalCase(jule::Ptr<_1aab03c12_If>* _42634_i) {
	return _1aad001b6_isUnreachableExpr(&((*(_42634_i)).get()._field_Expr));;
}



inline jule::Bool _1aad00a8a_isUnreachableMatchCase(jule::Ptr<_1aab08563_Case>* _43028_case) {
	{
		auto expr = &((*(_43028_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a93a71ed:;
		if (it != expr_end) {
			jule::Ptr<_1aabbbe1d_Data> *_43112_expr = it;
			{
				if ((!(_1aad001b6_isUnreachableExpr(&((*(_43112_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1a93a71ed:;
			++it;
			goto _iter_begin_1a93a71ed;
		}
		_iter_end_1a93a71ed:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1aad09236_checkForBitShiftOpt(jule::Ptr<_1aaa9e471_OperandExprModel>* _48225_l, jule::Ptr<_1aaa9e471_OperandExprModel>* _48248_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1c4cbc2bd_IsInt(_1aabec5ad_Str((*(_48225_l)).get()._field_Kind.ptr())))) || (!(_1c4cbc2bd_IsInt(_1aabec5ad_Str((*(_48248_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_48248_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1a93d9939:;
			{
				goto _match_end_1a93da363;
			}
		}
		else {
			_case_begin_1a93da4a6:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1a93da363:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1c4cc07cc_AsU64((*(_48248_r)).get()._field_Model.cast_ptr<_1c4cbcda1_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4969_j = _1c4c66eb0_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4979_z = static_cast<jule::U64>(_4969_j);;
	if ((static_cast<jule::F64>(_4979_z) != _4969_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4979_z;
	return __jule_func_result;;
}



inline jule::Bool _1aad095ee_areSameLvalueExprModel(jule::Any* _50528_l, jule::Any* _50543_r) {
	{
		auto &_match_expr{ (*(_50528_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a93dd531:;
			{
				return ((*(_50543_r)) == (*(_50528_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a93dd597:;
			{
				{
					auto &_match_expr{ (*(_50543_r)) };
					
					if (_match_expr.type == &__jule_any_type71) {
						_case_begin_1a93dde38:;
						{
							goto _match_end_1a93de1d0;
						}
					}
					else {
						_case_begin_1a93de235:;
						{
							return false;;
						}
					}
					_match_end_1a93de1d0:;
				};
				jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> _51813_lsi = (*(_50528_l)).cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71);;
				jule::Ptr<_1aaaa44dc_StructSubIdentExprModel> _51913_rsi = (*(_50543_r)).cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_51813_lsi.get()._field_Field != _51913_rsi.get()._field_Field)) {
					return false;;
				};
				return _1aad095ee_areSameLvalueExprModel(&(_51813_lsi.get()._field_Expr.get()._field_Model), &(_51913_rsi.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1a93dd60d:;
			{
				{
					auto &_match_expr{ (*(_50543_r)) };
					
					if (_match_expr.type == &__jule_any_type74) {
						_case_begin_1a93e0ea1:;
						{
							jule::Ptr<_1aaa9ed45_UnaryExprModel> _53117_ul = (*(_50528_l)).cast_ptr<_1aaa9ed45_UnaryExprModel>(&__jule_any_type74);;
							jule::Ptr<_1aaa9ed45_UnaryExprModel> _53217_ur = (*(_50543_r)).cast_ptr<_1aaa9ed45_UnaryExprModel>(&__jule_any_type74);;
							if (((_53117_ul.get()._field_Op.get()._field_Id != _53217_ur.get()._field_Op.get()._field_Id) || (_53117_ul.get()._field_Op.get()._field_Kind != _53217_ur.get()._field_Op.get()._field_Kind))) {
								return false;;
							};
							return _1aad095ee_areSameLvalueExprModel(&(_53117_ul.get()._field_Expr.get()._field_Model), &(_53217_ur.get()._field_Expr.get()._field_Model));;
						}
					}
					_match_end_1a93e0a0b:;
				};
			}
		}
		_match_end_1a93dcdd2:;
	};
	return false;;
}



inline void _1aad09d80_doInternalNosafeStobs(_1aad01926_exprOptimizer* _727_op, _1ab764cd4_stdCacheData* _747_data, jule::Ptr<_1aaaa194b_FnCallExprModel>* _772_m) {
	jule::Any _813_model = jule::Any(jule::new_ptr<_1aace9dc5_InlineStdInternalNosafeStobs>(_1aace9dc5_InlineStdInternalNosafeStobs{._field_Str=(*(_772_m)).get()._field_Args[0LL]}), &__jule_any_type130);;
	{
		(*((*(_727_op))._field_model))=(*(((jule::Any*)((&(_813_model))))));
	};
}



inline void _1ab765477_buildCache(jule::Ptr<_1ab76097d_IR>* _2720_ir) {
	_1ab7656b9_buildStdInternalNosafeCache(_2720_ir);
}



inline void _1ab7656b9_buildStdInternalNosafeCache(jule::Ptr<_1ab76097d_IR>* _3137_ir) {
	jule::Ptr<_1aab27b59_Package> _3213_p = _1ab76629c_getPackage(_3137_ir, &(_1ab764894_stdPackageInternalNosafe));;
	if ((_3213_p == nullptr)) {
		return;;
	};
	_1ab765a60_pushCache(&(_3213_p), jule::Str("Stobs", 5), jule::Fn<void(_1aad01926_exprOptimizer*,_1ab764cd4_stdCacheData*,jule::Ptr<_1aaaa194b_FnCallExprModel>*)>(_1aad09d80_doInternalNosafeStobs));
}



inline void _1ab765a60_pushCache(jule::Ptr<_1aab27b59_Package>* _4119_p, jule::Str _4132_ident, jule::Fn<void(_1aad01926_exprOptimizer*,_1ab764cd4_stdCacheData*,jule::Ptr<_1aaaa194b_FnCallExprModel>*)> _4144_do) {
	jule::Ptr<_1aaab609d_FnIns> _4213_f = _1ab765e28_getFunc(_4119_p, &(_4132_ident));;
	_1ab765213_stdCache[static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_4213_f))]=_1ab764cd4_stdCacheData{._field_f=_4213_f, ._field_do=_4144_do};
}



inline jule::Ptr<_1aaab609d_FnIns> _1ab765e28_getFunc(jule::Ptr<_1aab27b59_Package>* _5017_p, jule::Str* _5031_ident) {
	;
	jule::Ptr<_1aaab3199_Fn> _5213_f = _1aab291dd_FindFn((*(_5017_p)).ptr(), (*(_5031_ident)), false);;
	if ((_5213_f == nullptr)) {
		return nullptr;;
	};
	return _5213_f.get()._field_Instances[0LL];;
}



inline jule::Ptr<_1aab27b59_Package> _1ab76629c_getPackage(jule::Ptr<_1ab76097d_IR>* _5920_ir, jule::Str* _5930_path) {
	{
		auto expr = &((*(_5920_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a943de88:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> _6017_u = *it;
			{
				if ((_6017_u.get()._field_Std && (_6017_u.get()._field_LinkPath == (*(_5930_path))))) {
					return _6017_u.get()._field_Package;;
				};
			}
			_iter_next_1a943de88:;
			++it;
			goto _iter_begin_1a943de88;
		}
		_iter_end_1a943de88:;
	};
	return nullptr;;
}



inline void _1ab76890e_PushOptLevel(jule::I32 _3217_level) {
	jule::Bool _339_l1 = (_3217_level >= static_cast<jule::I32>(1LL));;
	jule::Bool _349_l2 = (_3217_level >= static_cast<jule::I32>(2LL));;
	_1ab766a83_Copy=_339_l1;
	_1ab766d91_Deadcode=_339_l1;
	_1ab76715a_Append=_339_l1;
	_1ab767468_Math=_339_l1;
	_1ab767732_Access=_339_l1;
	_1ab7679eb_Inline=_339_l1;
	_1ab767cb5_Ptr=_339_l1;
	_1ab76818e_Cond=_339_l1;
	_1ab768458_Str=_339_l1;
	_1ab768722_StdInternalNosafe=_349_l2;
}



inline void _1ac5a7c03_detectEnabled(void) {
	_1ac5a563a_exprEnabled=((((_1ab767cb5_Ptr || _1ab767468_Math) || _1ab767732_Access) || _1ab76818e_Cond) || _1ab768722_StdInternalNosafe);
	_1ac5a5904_scopeEnabled=(((_1ab76818e_Cond || _1ab76715a_Append) || _1ab766a83_Copy) || _1ab768458_Str);
	_1ac5a5bbd_stdEnabled=_1ab768722_StdInternalNosafe;
}



inline void _1ab38ee1a_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1c3a946b2_Exit(1LL);
}



inline jule::U64 _1a61899b7_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1a60b6c57_isCopyOptimizable(jule::Ptr<_1aabbbe1d_Data>* _81123_expr) {
	if ((!((*(_81123_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81123_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1a9531b6e:;
			{
				return false;;
			}
		}
		_match_end_1a9531b19:;
	};
	return true;;
}



inline jule::Bool _1a60b7120_isIterCopyOptimizable(jule::Ptr<_1aabbbe1d_Data>* _82227_expr, jule::Ptr<_1aab68969_Var>* _82241_v) {
	if (((!((*(_82227_expr)).get()._field_Lvalue)) && (!(_1aabeda87_Mutable((*(_82227_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82241_v)).get()._field_Mutable)) && (!((*(_82227_expr)).get()._field_Mutable)));;
}



inline jule::Str _1a60c79c1_decomposeCommonEsq(jule::U8 _151523_b) {
	{
		auto &_match_expr{ _151523_b };
		
		if (_match_expr == '\\') {
			_case_begin_1a744a4d5:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1a744ab45:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1a744a6a0:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1a744a716:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1a744a77c:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1a744a7e3:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1a744ad10:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1a744ad76:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1a744addc:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1a744ae53:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1a744a639:;
			{
				return jule::Str();;
			}
		}
		_match_end_1a7444985:;
	};
}



inline jule::Str _1a60c7cce_sbtoa(jule::U8 _154210_b) {
	if ((_154210_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_154210_b < 128LLU)) {
		jule::Str _154713_seq = _1a60c79c1_decomposeCommonEsq(_154210_b);;
		if ((!(_154713_seq.empty()))) {
			return _154713_seq;;
		};
		if (((32LL <= _154210_b) && (_154210_b <= 126LLU))) {
			return jule::Str::from_byte(_154210_b);;
		};
	};
	jule::Str _15559_seq = _1c4cac4ab_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_154210_b)), 8LL);;
	if ((_15559_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15559_seq);;
	};
	return (jule::Str("\\", 1) + _15559_seq);;
}



inline void _1a60c80ba_cstrBytes(_1c38d3b83_StrBuilder* _156219_s, jule::Str _156234_ctx) {
	{
		auto expr = &(_156234_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a7450199:;
		if (it != expr_end) {
			jule::U8 *_156312_b = it;
			{
				_1c38dc94a_WriteStr(_156219_s, _1a60c7cce_sbtoa((*(_156312_b))));
			}
			_iter_next_1a7450199:;
			++it;
			goto _iter_begin_1a7450199;
		}
		_iter_end_1a7450199:;
	};
}



inline void _1a60c83ea_cstrLit(_1c38d3b83_StrBuilder* _156817_s, jule::Str _156832_ctx) {
	_1c38dcc03_WriteByte(_156817_s, '\"');
	_1a60c80ba_cstrBytes(_156817_s, _156832_ctx);
	_1c38dcc03_WriteByte(_156817_s, '\"');
}



inline void _1a60c8791_ftoa(_1c38d3b83_StrBuilder* _157414_s, jule::F64 _157429_f, jule::I32 _157437_bitsize) {
	if ((_157437_bitsize != 32LL)) {
		if ((_157429_f == static_cast<jule::F64>(static_cast<jule::I64>(_157429_f)))) {
			_1a60c8a7c_itoa(_157414_s, static_cast<jule::I64>(static_cast<jule::I64>(_157429_f)));
			return;;
		};
		if ((_157429_f == static_cast<jule::F64>(static_cast<jule::U64>(_157429_f)))) {
			_1a60c8d68_utoa(_157414_s, static_cast<jule::U64>(static_cast<jule::U64>(_157429_f)));
			return;;
		};
	};
	jule::Str _15859_m = _1c4c95e01_FmtFloat(_157429_f, 'f', -1LL, _157437_bitsize);;
	_1c38dc94a_WriteStr(_157414_s, _15859_m);
	if ((!(_1c38c3e92_Contains(_15859_m, jule::Str(".", 1))))) {
		_1c38dc94a_WriteStr(_157414_s, jule::Str(".0", 2));
	};
}



inline void _1a60c8a7c_itoa(_1c38d3b83_StrBuilder* _159214_s, jule::I64 _159229_x) {
	{
		
		if ((_159229_x == jule::MAX_I64)) {
			_case_begin_1a7454e5c:;
			{
				_1c38dc94a_WriteStr(_159214_s, jule::Str("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_159229_x == jule::MIN_I64)) {
			_case_begin_1a7454ed4:;
			{
				_1c38dc94a_WriteStr(_159214_s, jule::Str("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1a7454d4c:;
	};
	_1c38dc94a_WriteStr(_159214_s, _1c4cac874_FmtInt(_159229_x, 10LL));
	if (_1c398d743_Is64Bit(jule::Str("i386", 4))) {
		_1c38dcc03_WriteByte(_159214_s, 'L');
	};
	_1c38dcc03_WriteByte(_159214_s, 'L');
}



inline void _1a60c8d68_utoa(_1c38d3b83_StrBuilder* _160914_s, jule::U64 _160929_x) {
	{
		
		if ((_160929_x == jule::MAX_U64)) {
			_case_begin_1a74570d5:;
			{
				_1c38dc94a_WriteStr(_160914_s, jule::Str("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1a7456ed6:;
	};
	_1c38dc94a_WriteStr(_160914_s, _1c4cac4ab_FmtUint(_160929_x, 10LL));
	if (_1c398d743_Is64Bit(jule::Str("i386", 4))) {
		_1c38dcc03_WriteByte(_160914_s, 'L');
	};
	_1c38dc94a_WriteStr(_160914_s, jule::Str("LU", 2));
}



inline jule::Bool _1a60c9242_isForwarded(jule::Ptr<_1aab037e4_Scope>* _162317_s) {
	jule::Any _16249_last = (*(_162317_s)).get()._field_Stmts[((*(_162317_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16249_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1a74591c5:;
			{
				{
					auto &_match_expr{ _16249_last.cast_ptr<_1aabbbe1d_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1a74594a0:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1a7459e1d:;
						{
							return false;;
						}
					}
					_match_end_1a7459db8:;
				};
			}
		}
		else {
			_case_begin_1a74592c4:;
			{
				return true;;
			}
		}
		_match_end_1a74589ee:;
	};
}



inline jule::Bool _1a60c950b_isBuiltinCallHasDebuginf(jule::Ptr<_1aaaa194b_FnCallExprModel>* _163830_m) {
	if ((!(_1aaab7533_IsBuiltin((*(_163830_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_163830_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1a745a57d:;
			{
				return (*(_163830_m)).get()._field_Expr.cast_ptr<_1aaaa56ec_CommonSubIdentExprModel>(&__jule_any_type73).get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_1a745aacd:;
			{
				return false;;
			}
		}
		_match_end_1a745aa78:;
	};
}



inline jule::Bool _1a60c97c5_isExprComesFromBind(jule::Ptr<_1aabbbe1d_Data>* _165025_d) {
	{
		auto &_match_expr{ (*(_165025_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1a745b3d6:;
			{
				return (*(_165025_d)).get()._field_Model.cast_ptr<_1aab68969_Var>(&__jule_any_type8).get()._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1a745b44c:;
			{
				return (*(_165025_d)).get()._field_Model.cast_ptr<_1aaaa44dc_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_Binded;;
			}
		}
		else {
			_case_begin_1a745b370:;
			{
				return false;;
			}
		}
		_match_end_1a745b31a:;
	};
}



inline jule::Bool _1a60c9a8e_isAny(jule::Ptr<_1aabec1e5_TypeKind>* _166215_t) {
	if ((_1aac00627_TypeEnum((*(_166215_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1aac05066_Prim> _16669_prim = _1aabeeadd_Prim((*(_166215_t)).ptr());;
	return ((_16669_prim != nullptr) && _1aac08784_IsAny(_16669_prim.ptr()));;
}



inline void _1a619e449_iterFiles(jule::Ptr<_1aab27b59_Package>* _139019_pkg, jule::Fn<void(jule::Ptr<_1aabb6be8_SymbolTable>*)> _139034_f) {
	{
		auto expr = &((*(_139019_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9598763:;
		if (it != expr_end) {
			jule::Ptr<_1aabb6be8_SymbolTable> _139117_file = *it;
			{
				_139034_f(&(_139117_file));
			}
			_iter_next_1a9598763:;
			++it;
			goto _iter_begin_1a9598763;
		}
		_iter_end_1a9598763:;
	};
}



inline jule::Str _1a619e757_concatAllParts(jule::Slice<jule::Ptr<_1c3e3a5e6_Token>> _139719_parts) {
	jule::I32 _139813_n = 0LL;;
	{
		auto expr = &(_139719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a959990c:;
		if (it != expr_end) {
			jule::Ptr<_1c3e3a5e6_Token> *_139912_part = it;
			{
				_139813_n+=(*(_139912_part)).get()._field_Kind.len();
			}
			_iter_next_1a959990c:;
			++it;
			goto _iter_begin_1a959990c;
		}
		_iter_end_1a959990c:;
	};
	if ((_139813_n == 0LL)) {
		return jule::Str();;
	};
	_1c38d3b83_StrBuilder _140513_s = static__1c38d3ea2_New(_139813_n);;
	{
		auto expr = &(_139719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a9599302:;
		if (it != expr_end) {
			jule::Ptr<_1c3e3a5e6_Token> *_140612_p = it;
			{
				_1c38dc94a_WriteStr(&_140513_s, (*(_140612_p)).get()._field_Kind);
			}
			_iter_next_1a9599302:;
			++it;
			goto _iter_begin_1a9599302;
		}
		_iter_end_1a9599302:;
	};
	return _1c38dd242_Str(&_140513_s);;
}



inline jule::Bool _1a619eacb_containsTraitMethod(jule::Ptr<_1aaac6443_Trait>* _141329_t, jule::Str* _141341_ident) {
	{
		auto expr = &((*(_141329_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a959a215:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _141412_m = *it;
			{
				if ((_141412_m.get()._field_Ident == (*(_141341_ident)))) {
					return true;;
				};
			}
			_iter_next_1a959a215:;
			++it;
			goto _iter_begin_1a959a215;
		}
		_iter_end_1a959a215:;
	};
	return false;;
}



inline void _1a619ee0b_pushMethodsFromInherit(jule::Ptr<_1aaac6443_Trait>* _142532_dest, jule::Ptr<_1aaac6443_Trait>* _142551_src) {
	_1a61a01e7_pushMethodsFromInherits(_142532_dest, _142551_src);
	{
		auto expr = &((*(_142551_src)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a959c9dc:;
		if (it != expr_end) {
			jule::Ptr<_1aaab3199_Fn> _142717_m = *it;
			{
				if ((!(_1a619eacb_containsTraitMethod(_142532_dest, &(_142717_m.get()._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1aaab3199_Fn>> &__jule_push_dest = (*(_142532_dest)).get()._field_Methods; __jule_push_dest.push(_142717_m); };
				};
			}
			_iter_next_1a959c9dc:;
			++it;
			goto _iter_begin_1a959c9dc;
		}
		_iter_end_1a959c9dc:;
	};
}



inline void _1a61a01e7_pushMethodsFromInherits(jule::Ptr<_1aaac6443_Trait>* _143633_dest, jule::Ptr<_1aaac6443_Trait>* _143652_src) {
	{
		auto expr = &((*(_143652_src)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a959d191:;
		if (it != expr_end) {
			jule::Ptr<_1aac0465e_TypeSymbol> _143717_inh = *it;
			{
				jule::Ptr<_1aaac6443_Trait> _143817_t2 = _1aac013e7_Trait(_143717_inh.get()._field_Kind.ptr());;
				_1a619ee0b_pushMethodsFromInherit(_143633_dest, &(_143817_t2));
			}
			_iter_next_1a959d191:;
			++it;
			goto _iter_begin_1a959d191;
		}
		_iter_end_1a959d191:;
	};
}



inline jule::Bool _1a61a04b1_isOpMethod(jule::Ptr<_1aaab3199_Fn>* _144416_m) {
	if ((((*(_144416_m)).get()._field_Generics.len() > 0LL) || ((*(_144416_m)).get()._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1aaab609d_FnIns> _14489_mi = (*(_144416_m)).get()._field_Instances[0LL];;
	;
	;
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1a61a077a_isHeadDecl(jule::Ptr<_1aaab3199_Fn>* _146020_m) {
	if ((((*(_146020_m)).get()._field_Generics.len() > 0LL) || ((*(_146020_m)).get()._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1a61a04b1_isOpMethod(_146020_m)) {
		return true;;
	};
	jule::Ptr<_1aaab609d_FnIns> _146713_mi = (*(_146020_m)).get()._field_Instances[0LL];;
	;
	return static__1aab69dbb_Dispose(_1aaa9b407_FindMethod(_146713_mi.get()._field_Owner.ptr(), jule::Str("Dispose", 7), false));;
}



inline jule::Ptr<_1aaa42c61_Directive> _1a647a758_findDirective(jule::Slice<jule::Ptr<_1aaa42c61_Directive>>* _48023_directives, jule::Str _48054_tag) {
	{
		auto expr = _48023_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a98184b6:;
		if (it != expr_end) {
			jule::Ptr<_1aaa42c61_Directive> _48117_dr = *it;
			{
				if ((_48117_dr.get()._field_Tag.get()._field_Kind == _48054_tag)) {
					return _48117_dr;;
				};
			}
			_iter_next_1a98184b6:;
			++it;
			goto _iter_begin_1a98184b6;
		}
		_iter_end_1a98184b6:;
	};
	return nullptr;;
}



inline jule::Bool _1a647ab21_hasDirective(jule::Slice<jule::Ptr<_1aaa42c61_Directive>>* _49018_directives, jule::Str _49049_tag) {
	return (_1a647a758_findDirective(_49018_directives, _49049_tag) != nullptr);;
}



inline jule::Bool _1a647adda_shouldInitialized(jule::Ptr<_1aabec1e5_TypeKind>* _49727_t) {
	jule::Ptr<_1aac05066_Prim> _4989_prim = _1aabeeadd_Prim((*(_49727_t)).ptr());;
	if ((_4989_prim != nullptr)) {
		return ((!(_1aac08784_IsAny(_4989_prim.ptr()))) && (!(_1aac084ed_IsStr(_4989_prim.ptr()))));;
	};
	{
		
		if ((_1aabeed74_Sptr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1a981ac8d:;
			{
				return false;;
			}
		}
		else if ((_1aac0167d_Map((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1a981ad04:;
			{
				return false;;
			}
		}
		else if ((_1aac00b44_Slc((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1a981ad7b:;
			{
				return false;;
			}
		}
		else if ((_1aac013e7_Trait((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1a981ae03:;
			{
				return false;;
			}
		}
		else if ((_1aac00dca_Fn((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1a981ae7a:;
			{
				return false;;
			}
		}
		else if ((_1aac008ad_Arr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1a981b002:;
			{
				jule::Ptr<_1aac0b886_Arr> _51417_arr = _1aac008ad_Arr((*(_49727_t)).ptr());;
				return _1a647adda_shouldInitialized(&(_51417_arr.get()._field_Elem));;
			}
		}
		else if ((_1aac01161_Struct((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1a981b079:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1a981a133:;
			{
				return true;;
			}
		}
		_match_end_1a981a573:;
	};
}



inline void _1c3a98bb1_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1c3a98e36_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1c3a98bb1_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _4113_max = _1c3a989c4_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1c3a989c4_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5d6494a:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I32 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1a5d6494a:;
			++it;
			goto _iter_begin_1a5d6494a;
		}
		_iter_end_1a5d6494a:;
	};
	_1c38d3b83_StrBuilder _4913_s = static__1c38d3ea2_New(32LL);;
	;
	{
		auto expr = &(_1c3a989c4_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5d66243:;
		if (it != expr_end) {
			jule::I32 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_1c38dc94a_WriteStr(&_4913_s, (*(_5112_part))[0LL]);
				_1c38dc94a_WriteStr(&_4913_s, _1c38bd497_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_1c38dc94a_WriteStr(&_4913_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_1c38dcc03_WriteByte(&_4913_s, '\n');
				};
			}
			_iter_next_1a5d66243:;
			++it;
			_519_i++;
			goto _iter_begin_1a5d66243;
		}
		_iter_end_1a5d66243:;
	};
	jule::outln(_4913_s);
}



inline void _1c3a99167_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1c3a98bb1_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.15 @master", 18));
}



inline void _1c3a99365_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1c3a994db_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1c3a9971c_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1c3a98bb1_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1a5d6c3e2:;
			{
				_1c3a99365_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1a5d6c315:;
			{
				_1c3a994db_toolDistarch();
			}
		}
		else {
			_case_begin_1a5d6b974:;
			{
				_1c3a98bb1_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1a5d6bdc5:;
	};
}



inline void _1c3a9994d_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1c3a98bb1_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str("architecture: i386", 18));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln((jule::Str("default compiler: ", 18) + _205b15547_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _205b15987_CppStd));
}



inline void _1c3a99c5b_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1c3a98bb1_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1a5d70aee:;
			{
				({
					auto except = static__206b7a039_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1c3a98bb1_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1a5d704e4:;
			{
				_1c3a98bb1_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1a5d70648:;
	};
}



inline jule::Bool _1c3a9a025_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1a5d72183:;
			{
				_1c3a98e36_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1a5d721e9:;
			{
				_1c3a99167_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1a5d72260:;
			{
				_1c3a9971c_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1a5d722c6:;
			{
				_1c3a9994d_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1a5d719bd:;
			{
				_1c3a99c5b_mod(_15320_args);
			}
		}
		else {
			_case_begin_1a5d71957:;
			{
				return false;;
			}
		}
		_match_end_1a5d7134c:;
	};
	return true;;
}



inline void _1c3a9a19b_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _206d4ac65_Args();;
	if ((_18913_args.len() < 2LL)) {
		_1c3a9a19b_showInfo();
		return;;
	};
	if (_1c3a9a025_processCommand(&(_18913_args))) {
		return;;
	};
	_1a64ebc6e_compileCommand(&(_18913_args));
}



inline void _1a64e8a6d_init(void) {
	_205b15547_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_206b791d1_File> _1a64e8d48_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _1c38e1d4a_Dir((*(_4316_path)));;
	({
		auto except = static__206b6dc86_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1c38e44e0_Create(_449_dir);
				if (!except.ok()) {
					_1ab38ee1a_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__206b798c9_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1ab38ee1a_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1a64e8ebe_clearObjects(void) {
	({
		auto except = static__206b6c405_Remove(_1a64ea1bd_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1c38e4721_Remove(_1a64e8320_OutDir);
}



inline void _1a64e92ee_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1c3a4282a_Cmd> _7313_cmd = static__1c3a42c48_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_1c38c3b1d_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _1c3a42e46_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1a5d78442:;
					{
						static__1ab38c39b_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1a5d77a6d:;
					{
						static__1ab38c39b_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1a5d77c7c:;
					{
						static__1ab38c39b_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1a5d77bd3:;
			};
			_1ab38ee1a_Throw(jule::Str());
		}
	});
	jule::I32 _869_status = ({
		auto except = _1c3a433ca_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _205b15547_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1ab38c39b_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1ab38ee1a_Throw(jule::Str());
	};
	_1a64e8ebe_clearObjects();
}



inline jule::Bool _1a64e95b8_isCppSourceFile(jule::Str _9920_path) {
	jule::I32 _1009_offset = _1c38c2479_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _1c3976d9c_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1a64e97e9_pushCompCmdClang(_1c38d3b83_StrBuilder* _10726_cmd) {
	_1c38dc94a_WriteStr(_10726_cmd, jule::Str("-Wno-everything ", 16));
	_1c38dc94a_WriteStr(_10726_cmd, jule::Str("--std=", 6));
	{
		auto &_match_expr{ _205b15987_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a5d7acc4:;
			{
				_1c38dc94a_WriteStr(_10726_cmd, jule::Str("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a5d7bc92:;
			{
				_1c38dc94a_WriteStr(_10726_cmd, jule::Str("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a5d7bd08:;
			{
				_1c38dc94a_WriteStr(_10726_cmd, jule::Str("c++20", 5));
			}
		}
		_match_end_1a5d7b2e1:;
	};
	_1c38dcc03_WriteByte(_10726_cmd, ' ');
	if (_205b16b42_Production) {
		_1c38dc94a_WriteStr(_10726_cmd, jule::Str("-O3 ", 4));
		_1c38dc94a_WriteStr(_10726_cmd, jule::Str("-flto ", 6));
		_1c38dc94a_WriteStr(_10726_cmd, jule::Str("-DNDEBUG ", 9));
		_1c38dc94a_WriteStr(_10726_cmd, jule::Str("-fomit-frame-pointer ", 21));
	} else {
		_1c38dc94a_WriteStr(_10726_cmd, jule::Str("-O0 ", 4));
	};
}



inline void _1a64e9a2a_pushCompCmdGcc(_1c38d3b83_StrBuilder* _13324_cmd) {
	_1c38dc94a_WriteStr(_13324_cmd, jule::Str("-w ", 3));
	_1c38dc94a_WriteStr(_13324_cmd, jule::Str("--std=", 6));
	{
		auto &_match_expr{ _205b15987_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1a5d7edd8:;
			{
				_1c38dc94a_WriteStr(_13324_cmd, jule::Str("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1a5d7d425:;
			{
				_1c38dc94a_WriteStr(_13324_cmd, jule::Str("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a5d7d48b:;
			{
				_1c38dc94a_WriteStr(_13324_cmd, jule::Str("c++20", 5));
			}
		}
		_match_end_1a5d7ed83:;
	};
	_1c38dcc03_WriteByte(_13324_cmd, ' ');
	if (_205b16b42_Production) {
		_1c38dc94a_WriteStr(_13324_cmd, jule::Str("-O3 ", 4));
		_1c38dc94a_WriteStr(_13324_cmd, jule::Str("-DNDEBUG ", 9));
		_1c38dc94a_WriteStr(_13324_cmd, jule::Str("-fomit-frame-pointer ", 21));
	} else {
		_1c38dc94a_WriteStr(_13324_cmd, jule::Str("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1a64e9eae_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1ab76097d_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_205b15767_CompilerPath);;
	_1c38d3b83_StrBuilder _16113_cmd = static__1c38d3ea2_New(64LL);;
	{
		auto &_match_expr{ _205b15547_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a5d82d86:;
			{
				_1a64e9a2a_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a5d8335e:;
			{
				_1a64e97e9_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1a5d83073:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5d83c00:;
		if (it != expr_end) {
			jule::Ptr<_1aab24c33_ImportInfo> *_17112_u = it;
			{
				if (((*(_17112_u)).get()._field_Binded && _1a64e95b8_isCppSourceFile((*(_17112_u)).get()._field_Path))) {
					_1c38dc94a_WriteStr(&_16113_cmd, (*(_17112_u)).get()._field_Path);
					_1c38dcc03_WriteByte(&_16113_cmd, ' ');
				};
			}
			_iter_next_1a5d83c00:;
			++it;
			goto _iter_begin_1a5d83c00;
		}
		_iter_end_1a5d83c00:;
	};
	if ((!(_1a64e88b4_Out.empty()))) {
		_1c38dc94a_WriteStr(&_16113_cmd, jule::Str("-o ", 3));
		_1c38dc94a_WriteStr(&_16113_cmd, _1a64e88b4_Out);
		_1c38dcc03_WriteByte(&_16113_cmd, ' ');
	};
	_1c38dc94a_WriteStr(&_16113_cmd, _15918_sourcePath);
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1a5d85b69:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_1c38dcc03_WriteByte(&_16113_cmd, ' ');
				_1c38dc94a_WriteStr(&_16113_cmd, (*(_18612_pass)));
			}
			_iter_next_1a5d85b69:;
			++it;
			goto _iter_begin_1a5d85b69;
		}
		_iter_end_1a5d85b69:;
	};
	if (_1c3a957a1_Os.equal("windows", 7)) {
		_1c38dc94a_WriteStr(&_16113_cmd, jule::Str(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _1c38dd242_Str(&_16113_cmd);
	return __jule_func_result;;
}



inline jule::Str _1a64ea1bd_getCompilePath(void) {
	return _1c38e1157_Join(jule::Slice<jule::Str>::make({_1a64e8320_OutDir,_1a64e85ea_OutName}));;
}



inline void _1a64ea3ee_applyTargetIndependentOptimizations(jule::Ptr<_1ab76097d_IR>* _20545_ir) {
	jule::Ptr<_1ac5a5e54_Optimizer> _20613_opt = static__1ac5a6394_New(_20545_ir);;
	_1ac5a797d_Optimize(_20613_opt.ptr());
}



inline void _1a64ea575_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _205b15547_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1a5d877d6:;
			{
				_1ab38ee1a_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1a5d88221:;
			{
				if (_205b15767_CompilerPath.empty()) {
					_205b15767_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1a5d87e02:;
			{
				if (_205b15767_CompilerPath.empty()) {
					_205b15767_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1a5d87d8b:;
			{
				_1ab38ee1a_Throw((jule::Str("invalid option value for --compiler: ", 37) + _205b15547_Compiler));
			}
		}
		_match_end_1a5d87b38:;
	};
}



inline void _1a64ea7a6_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1ab38ee1a_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1a64ea9d7_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1ab38ee1a_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1a64eac18_checkTargetFlag(jule::Str* _24321_target) {
	if ((*(_24321_target)).empty()) {
		_1ab38ee1a_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2489_parts = _1c38c3b1d_Split((*(_24321_target)), jule::Str("-", 1), -1LL);;
	if ((_2489_parts.len() != 2LL)) {
		_1ab38ee1a_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _25310_os;;
	jule::Str _25314_arch;;
	({
		jule::Str ___jule_assign_arg = _2489_parts[0LL];
		jule::Str _1___jule_assign_arg = _2489_parts[1LL];
		_25310_os = ___jule_assign_arg;
		_25314_arch = _1___jule_assign_arg;
	});
	if ((!_25310_os.equal("native", 6))) {
		_1a64ea9d7_checkTargetOs(_25310_os);
		_1c3a957a1_Os=_25310_os;
	};
	if ((!_25314_arch.equal("native", 6))) {
		_1a64ea7a6_checkTargetArch(_25314_arch);
		_1c3a95a6a_Arch=_25314_arch;
	};
	_1c4cb1e94_UpdateTarget();
}



inline void _1a64eae49_checkOptFlag(jule::Str* _26618_opt) {
	if ((*(_26618_opt)).empty()) {
		_1ab38ee1a_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1a5d8e6bc:;
			{
				goto _match_end_1a5d8e755;
			}
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1a5d8eb40:;
			{
				_1ab76890e_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else if (_match_expr == jule::Str("L2", 2)) {
			_case_begin_1a5d8eba6:;
			{
				_1ab76890e_PushOptLevel(static_cast<jule::I32>(2LL));
			}
		}
		else {
			_case_begin_1a5d8eac9:;
			{
				_1ab38ee1a_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1a5d8e755:;
	};
}



inline void _1a64eb2ce_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _205b15987_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1a5d8ec1c:;
			{
				goto _match_end_1a5d90cea;
			}
		}
		else {
			_case_begin_1a5d909cb:;
			{
				_1ab38ee1a_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _205b15987_CppStd));
			}
		}
		_match_end_1a5d90cea:;
	};
}



inline jule::Slice<jule::Str> _1a64eb543_checkFlags(jule::Slice<jule::Str>* _29416_args) {
	jule::Str _29513_opt = jule::Str("L0", 2);;
	jule::Str _29613_target = jule::Str("native-native", 13);;
	jule::Ptr<_1a64e331a_FlagSet> _29813_fs = static__1a64e3606_New();;
	_1a5d92ca8_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29513_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1a5d92ca8_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29613_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1a5d92ca8_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1a64e88b4_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_205b15ba7_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_205b15e1b_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1a5d92ca8_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_205b15547_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1a5d92ca8_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_205b15767_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_205b16b42_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_205b1649e_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_205b16878_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1a5d92ca8_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_205b15987_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab766a83_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab766d91_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab76715a_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab767468_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab767732_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab7679eb_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab767cb5_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab76818e_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab768458_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	_1a5d9ad9e_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1ab768722_StdInternalNosafe)))), jule::Str("opt-internal-nosafe", 19), 0LL, jule::Str("Special optimizations for std::internal::nosafe", 47));
	jule::Slice<jule::Str> _32213_content = ({
		auto except = _1a64e4492_Parse(_29813_fs.ptr(), (*(_29416_args)));
		(except.ok()) ? (except.result) : ({
			_1ab38ee1a_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1a64ea575_checkCompilerFlag();
	_1a64eb2ce_checkCppStdFlag();
	_1a64eac18_checkTargetFlag(&(_29613_target));
	_1a64eae49_checkOptFlag(&(_29513_opt));
	return _32213_content;;
}



inline void _1a64eb774_setupSemaFlags(jule::I32* _33524_flags) {
	if (_205b15ba7_Shadowing) {
		(*(_33524_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1ab76097d_IR> _1a64eba3d_buildIr(jule::Slice<jule::Str>* _34113_args) {
	jule::Slice<jule::Str> _3429_content = _1a64eb543_checkFlags(_34113_args);;
	jule::I32 _34413_semaFlags = static_cast<jule::I32>(0LL);;
	_1a64eb774_setupSemaFlags(&(_34413_semaFlags));
	if ((_3429_content.len() == 0LL)) {
		_1ab38ee1a_Throw(_1c39840a7_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3429_content.len() > 1LL)) {
		_1ab38ee1a_Throw((jule::Str("undefined content: ", 19) + _3429_content[1LL]));
	};
	jule::Str _35214_path;;
	jule::Bool _35220_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1c38e16da_Abs(_3429_content[0LL]);
		_35214_path = __jule_assign_result.__jule_result_arg0;
		_35220_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35220_ok))) {
		_1ab38ee1a_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_206b7b9ca_Status> _3589_inf = ({
		auto except = static__206b6dc86_Of(_1c3a94bbd_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1ab38ee1a_Throw(_1c39840a7_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_206b7b9ca_Status>(nullptr);});
	});;
	if ((!(_206b7bda4_IsDir(_3589_inf.ptr())))) {
		_1ab38ee1a_Throw(_1c39840a7_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1ab76097d_IR> _36614_ir;;
	jule::Slice<_1c3983b45_Log> _36618_logs;;
	({
		__jule_tuple_x_1ab76097d_IR__jule_tuple_s_1c3983b45_Log __jule_assign_result = static__1ab760de0_Build(_35214_path, _34413_semaFlags);
		_36614_ir = __jule_assign_result.__jule_result_arg0;
		_36618_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36614_ir == nullptr) && (_36618_logs == nullptr))) {
		_1ab38ee1a_Throw(_1c39840a7_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_35214_path, &__jule_any_type5)})));
	};
	if ((_36618_logs != nullptr)) {
		static__1ab38e447_PrintLogs(&(_36618_logs));
		_1ab38ee1a_Throw(jule::Str());
	};
	return _36614_ir;;
}



inline void _1a64ebc6e_compileCommand(jule::Slice<jule::Str>* _38124_args) {
	(*(_38124_args))=(*(_38124_args)).slice(1LL);
	if ((*(_38124_args))[0LL].equal("test", 4)) {
		_205b161d5_Test=true;
		(*(_38124_args))=(*(_38124_args)).slice(1LL);
	};
	jule::Ptr<_1ab76097d_IR> _38713_ir = _1a64eba3d_buildIr(_38124_args);;
	;
	if ((!(_205b161d5_Test))) {
		jule::Ptr<_1aaab3199_Fn> _39217_main = _1aab291dd_FindFn(_38713_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_39217_main == nullptr)) {
			_1ab38ee1a_Throw(_1c39840a7_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1a64ea3ee_applyTargetIndependentOptimizations(&(_38713_ir));
	_1ab761e57_Order(_38713_ir.ptr());
	jule::Str _4039_compPath = _1a64ea1bd_getCompilePath();;
	jule::Str _40410_compiler;;
	jule::Str _40420_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1a64e9eae_genCompileCmd(_4039_compPath, &(_38713_ir));
		_40410_compiler = __jule_assign_result.__jule_result_arg0;
		_40420_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1a6191e53_ObjectCoder> _40613_oc = static__1a619234e_New(&(_38713_ir), _1a619035d_SerializationInfo{._field_Compiler=_40410_compiler, ._field_CompilerCommand=_40420_compilerCmd});;
	if (_205b161d5_Test) {
		jule::Ptr<_1a60cbd6b_TestCoder> _41117_tc = static__1a60cc2ab_New(&(_40613_oc));;
		_1a60cd631_Serialize(_41117_tc);
	} else {
		_1a619e05e_Serialize(_40613_oc);
	};
	jule::Ptr<_206b791d1_File> _41713_file = _1a64e8d48_openOutput(&(_4039_compPath));;
	({
		auto except = _206b6c889_Write(_41713_file.ptr(), _1c38ddbe3_Buf(&_40613_oc.get()._field_Obj));
		if (!except.ok()) {
			_1ab38ee1a_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _206b7ae6e_Close(_41713_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:421:5"));
	});
	if ((!(_205b15e1b_Transpilation))) {
		_1a64e92ee_compileIr(_40410_compiler, _40420_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1c3a95b9c_init();
	_1c4cb211a_init();
	_1a64e8a6d_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}