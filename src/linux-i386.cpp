// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 1/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _213c8e96b_comptimeRangeKind{};
struct _213cd50cc_Importer{};
struct _213d883c2_Kind{};
struct _213da6b60_Lookup{};
struct _1b662a94d_CommonFlag{};
struct _22c6b8359_Range16;
struct _22c6b87cc_Range32;
struct _22c6b8c50_RangeTable;
struct _210ee8c50_acceptRange;
struct _21103a214_lazyBuff;
struct _22a8b2423_DirEntry;
struct _22a8b2687_Directory;
struct _22a8be9e6_File;
struct _22a8c20e2_Status;
struct _2111a4801_cmdAttrs;
struct _2110be2cb_Log;
struct _2114c1b73_Token;
struct _2114c700d_File;
struct _2114c8ce0_kindPair;
struct _2114ce851_lex;
struct _211aa1164_floatInfo;
struct _21217e038_decimalSlice;
struct _212190401_leftCheat;
struct _212190dc4_decimal;
struct _2121a4c51_Const;
struct _213c0d07c_Ast;
struct _213c0de18_Node;
struct _213c0e314_Directive;
struct _213c41d2a_TypeDecl;
struct _213c423e1_IdentTypeDecl;
struct _213c426cc_SubIdentTypeDecl;
struct _213c42a51_NamespaceTypeDecl;
struct _213c42d3c_SptrTypeDecl;
struct _213c43238_SlcTypeDecl;
struct _213c43524_TupleTypeDecl;
struct _213c43810_PtrTypeDecl;
struct _213c43ed6_ArrTypeDecl;
struct _213c446e0_MapTypeDecl;
struct _213c44a97_RetTypeDecl;
struct _213c45ea5_Expr;
struct _213c46291_RangeExpr;
struct _213c46846_UseExpr;
struct _213c46b32_TupleExpr;
struct _213c46ed9_LitExpr;
struct _213c47627_UnsafeExpr;
struct _213c47a9a_IdentExpr;
struct _213c482a4_UnaryExpr;
struct _213c4865b_VariadicExpr;
struct _213c48a13_CastExpr;
struct _213c48dba_NsSelectionExpr;
struct _213c4933d_SubIdentExpr;
struct _213c497b1_BinopExpr;
struct _213c49dbb_FnCallExpr;
struct _213c4a84a_FieldExprPair;
struct _213c4b120_StructLit;
struct _213c4b593_BraceLit;
struct _213c4be78_KeyValPair;
struct _213c4c5e9_SliceExpr;
struct _213c4ce57_IndexingExpr;
struct _213c4d562_SlicingExpr;
struct _213c4d84d_Constraint;
struct _213c4dcc1_GenericDecl;
struct _213c4e178_LabelSt;
struct _213c4e530_GotoSt;
struct _213c4e81b_FallSt;
struct _213c4ee26_AssignLeft;
struct _213c50465_AssignSt;
struct _213c51356_Stmt;
struct _213c51961_ScopeTree;
struct _213c52137_ParamDecl;
struct _213c53457_FnDecl;
struct _213c54436_VarDecl;
struct _213c547dd_RetSt;
struct _213c54e4d_Iter;
struct _213c55723_WhileKind;
struct _213c560b4_RangeKind;
struct _213c5646b_BreakSt;
struct _213c56823_ContSt;
struct _213c56c96_If;
struct _213c5714d_Else;
struct _213c575c1_Conditional;
struct _213c57c97_TypeAliasDecl;
struct _213c5821a_Case;
struct _213c588e1_MatchCase;
struct _213c59183_UseDecl;
struct _213c59606_EnumItemDecl;
struct _213c5a12e_EnumDecl;
struct _213c5a904_TypeEnumItemDecl;
struct _213c5b00e_TypeEnumDecl;
struct _213c5b273_FieldDecl;
struct _213c5bac0_StructDecl;
struct _213c5c296_TraitDecl;
struct _213c5c8a1_Impl;
struct _213c5da17_Field;
struct _213c607c7_Operators;
struct _213c615db_Struct;
struct _213c6390c_FieldIns;
struct _213c68307_OperandExprModel;
struct _213c687be_BinopExprModel;
struct _213c68b76_UnaryExprModel;
struct _213c69171_StructArgExprModel;
struct _213c694e5_StructLitExprModel;
struct _213c69803_AllocStructLitExprModel;
struct _213c69d53_CastingExprModel;
struct _213c6a705_FnCallExprModel;
struct _213c6aaac_SliceExprModel;
struct _213c6b030_IndexingExprModel;
struct _213c6b3d7_AnonFnExprModel;
struct _213c6b78e_KeyValPairExprModel;
struct _213c6bc12_MapExprModel;
struct _213c6c251_SlicingExprModel;
struct _213c6c790_TraitSubIdentExprModel;
struct _213c6d076_StructSubIdentExprModel;
struct _213c6d41c_StructStaticIdentExprModel;
struct _213c6d7d5_ArrayExprModel;
struct _213c6dac1_CommonIdentExprModel;
struct _213c6e132_CommonSubIdentExprModel;
struct _213c6e42e_TupleExprModel;
struct _213c6e808_BuiltinOutCallExprModel;
struct _213c6ebe3_BuiltinOutlnCallExprModel;
struct _213c70012_BuiltinCloneCallExprModel;
struct _213c703ec_BuiltinNewCallExprModel;
struct _213c707d7_BuiltinPanicCallExprModel;
struct _213c70c8d_BuiltinAssertCallExprModel;
struct _213c71244_BuiltinMakeCallExprModel;
struct _213c7162e_BuiltinAppendCallExprModel;
struct _213c7194d_BuiltinLenCallExprModel;
struct _213c71c6c_BuiltinCapCallExprModel;
struct _213c72421_BuiltinDeleteCallExprModel;
struct _213c72784_BuiltinCopyCallExprModel;
struct _213c72b6e_BuiltinErrorCallExprModel;
struct _213c72e6b_SizeofExprModel;
struct _213c73257_AlignofExprModel;
struct _213c73543_RuneExprModel;
struct _213c73851_IntegratedToStrExprModel;
struct _213c73c19_BackendEmitExprModel;
struct _213c74005_FreeExprModel;
struct _213c749b7_RetType;
struct _213c751c1_Param;
struct _213c76a0d_Fn;
struct _213c787e0_ParamIns;
struct _213c796ae_FnIns;
struct _213c7c618_ReferenceStack;
struct _213c7d949_Pass;
struct _213c8318a_symbolBuilder;
struct _213c88b63_Trait;
struct _213c8a901_EnumItem;
struct _213c8b3e6_Enum;
struct _213c8c45d_TypeEnumItem;
struct _213c8c9e1_TypeEnum;
struct _213c8eb47_comptimeRange;
struct _213c9063c_comptimeStructField;
struct _213c92166_comptimeStructFields;
struct _213c93640_comptimeStatic;
struct _213c9a05e_comptimeStatics;
struct _213c9b4a0_comptimeEnumField;
struct _213c9c6c1_comptimeEnumFields;
struct _213c9dc22_comptimeParam;
struct _213ca0cbd_comptimeParams;
struct _213ca2286_comptimeTypeInfos;
struct _213ca374e_comptimeTypeInfo;
struct _213ca9249_comptimeValue;
struct _213cab845_comptimeFiles;
struct _213cacd0d_comptimeFile;
struct _213cb1b69_constraintChecker;
struct _213cb3a17_Impl;
struct _213cb8a72_Scope;
struct _213cb8e6d_If;
struct _213cb9259_Else;
struct _213cb95cd_Conditional;
struct _213cb98b9_InfIter;
struct _213cb9d3c_WhileIter;
struct _213cba722_RangeIter;
struct _213cbab1d_ContSt;
struct _213cbaec5_BreakSt;
struct _213cbb2b1_Label;
struct _213cbb59c_GotoSt;
struct _213cbb954_Postfix;
struct _213cbbdc7_Assign;
struct _213cbc27e_MultiAssign;
struct _213cbc889_Match;
struct _213cbd3d4_Case;
struct _213cbd9ab_FallSt;
struct _213cbdd0d_RetSt;
struct _213cbe418_scopeLabel;
struct _213cbe88b_scopeGoto;
struct _213cc06a0_scopeChecker;
struct _213cd1b9a_directiveChecker;
struct _213cd7c7d_ImportInfo;
struct _213cda8b8_Package;
struct _213ce0538_commonSemaMeta;
struct _213ce1050_Sema;
struct _213d0d732_missingRetChecker;
struct _213d10943_IterRelation;
struct _213d11988_Var;
struct _213d12736_FuncPattern;
struct _213d4459d_typeCompatibilityChecker;
struct _213d461c6_assignTypeChecker;
struct _213d47bab_dynamicTypeAnnotation;
struct _213d4c5a6_fnCallArgChecker;
struct _213d50268_structLitChecker;
struct _213d51d4c_rangeChecker;
struct _213d54349_retTypeChecker;
struct _213d56417_SymbolTable;
struct _213d5ae22_Data;
struct _213d5be9a_Value;
struct _213d5c990_Eval;
struct _213d798d0_unaryEval;
struct _213d7b6a1_binaryEval;
struct _213d870a2_InsGeneric;
struct _213d87adb_TypeAlias;
struct _213d88834_TypeKind;
struct _213d906d7_TypeSymbol;
struct _213d91089_Prim;
struct _213d947da_Sptr;
struct _213d95247_Slc;
struct _213d95d4c_Tuple;
struct _213d967ed_Map;
struct _213d973e2_Arr;
struct _213d97d4e_Ptr;
struct _213d98c95_referencer;
struct _213d99b75_typeChecker;
struct _213da2067_identTypeLookup;
struct _1e7b5c569_FileInfo;
struct _1e7ba19cb_stmt;
struct _1e7ba2306_scopeParser;
struct _1e7badba3_exprBuilder;
struct _1e7bba4d9_assignInfo;
struct _1e7bbd9e8_parser;
struct _1cdcd02a5_typeBuilder;
struct _214041ed7_CompileInfo;
struct _21404333a_directiveEval;
struct _1cdcd4023_JuleImporter;
struct _1cdcd8cc5_OrderedDefines;
struct _1cdcd9039_defineOrderer;
struct _1cddd4b3a_liveTable;
struct _1cde1acb4_scopeDeadCode;
struct _1cde1ec1e_exprDeadCode;
struct _213e6290d_StrCompExprModel;
struct _213e62cc6_StrAppendExprModel;
struct _213e630b2_UnsafeBinopExprModel;
struct _213e63447_UnsafeIndexingExprModel;
struct _213e637cc_PushToSliceExprModel;
struct _213e63b84_AppendToSliceExprModel;
struct _213e641c3_MutSlicingExprModel;
struct _213e646ac_StrInsertBeginExprModel;
struct _213e64954_InlineStdInternalNosafeStobs;
struct _213e65b86_scopeOptimizer;
struct _213e6b4c7_exprOptimizer;
struct _1cdcda7ee_stdCacheData;
struct _1cde26cd1_Optimizer;
struct _1cde4e1e3_AnsiEscape;
struct _1cde50777_Logger;
struct _213aeb322_AbsTime;
struct _213aeb9b5_Time;
struct _1b63eb169_scopeCoder;
struct _1b640465b_exprCoder;
struct _1b6414429_deriveCoder;
struct _1b6415d10_TestCoder;
struct _1b6418351_identCoder;
struct _213b0425e_SerializationInfo;
struct _213b04726_traitHash;
struct _213b04acd_traitCast;
struct _213b144e4_customType;
struct _213b14e73_typeCoder;
struct _213b1ca3b_resultCoder;
struct _1b95b57d6_Flag;
struct _1b95b908c_Flag;
struct _1b95bc744_Flag;
struct _1b95c0e40_Flag;
struct _1b95c45e7_Flag;
struct _1b662c3ab_FlagSet;
struct _1b662eab7_argParser;
struct _213b05b01_ObjectCoder;
struct _1cddd5003_ObjectDeadCode;
struct _1cdcd6784_IR;
struct _213c64402_StructIns;
struct _211160dea_Cmd;
struct _22c6b8359_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_22c6b8359_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22c6b8359_Range16 _other) { return !this->operator==(_other); }


};
struct _22c6b87cc_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_22c6b87cc_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22c6b87cc_Range32 _other) { return !this->operator==(_other); }


};
struct _22c6b8c50_RangeTable {
	jule::Slice<_22c6b8359_Range16> _field_R16;
	jule::Slice<_22c6b87cc_Range32> _field_R32;
	jule::I32 _field_LatinOffset = 0;
	


};
struct _210ee8c50_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_210ee8c50_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_210ee8c50_acceptRange _other) { return !this->operator==(_other); }


};
struct _21103a214_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen = 0;
	


};
struct _22a8b2423_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_22a8c20e2_Status> _field_Stat;
	

	inline bool operator==(_22a8b2423_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_22a8b2423_DirEntry _other) { return !this->operator==(_other); }


};
struct _22a8b2687_Directory {
	

	inline bool operator==(_22a8b2687_Directory _other) { return true; }

	inline bool operator!=(_22a8b2687_Directory _other) { return !this->operator==(_other); }


};
struct _22a8be9e6_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_22a8be9e6_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_22a8be9e6_File _other) { return !this->operator==(_other); }


};
struct _22a8c20e2_Status {
	jule::I32 _field_mode = 0LL;
	jule::U32 _field_size = 0;
	

	inline bool operator==(_22a8c20e2_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_22a8c20e2_Status _other) { return !this->operator==(_other); }


};
struct _2111a4801_cmdAttrs {
	jule::I32 _field_pid = -1LL;
	

	inline bool operator==(_2111a4801_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_2111a4801_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _2110be2cb_Log {
	jule::I32 _field_Kind = 0LL;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_2110be2cb_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_2110be2cb_Log _other) { return !this->operator==(_other); }


};
struct _2114c1b73_Token {
	jule::Ptr<_2114c700d_File> _field_File;
	jule::I32 _field_Row = 0;
	jule::I32 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U32 _field_Id = 0LLU;
	

	inline bool operator==(_2114c1b73_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_2114c1b73_Token _other) { return !this->operator==(_other); }


};
struct _2114c700d_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_Tokens;
	


};
struct _2114c8ce0_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U32 _field_id = 0LLU;
	

	inline bool operator==(_2114c8ce0_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_2114c8ce0_kindPair _other) { return !this->operator==(_other); }


};
struct _2114ce851_lex {
	jule::I32 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_tokens;
	jule::Ptr<_2114c700d_File> _field_file;
	jule::I32 _field_pos = 0;
	jule::I32 _field_column = 0;
	jule::I32 _field_row = 0;
	jule::Slice<_2110be2cb_Log> _field_errors;
	


};
struct _211aa1164_floatInfo {
	jule::U32 _field_mantbits = 0;
	jule::U32 _field_expbits = 0;
	jule::I32 _field_bias = 0;
	

	inline bool operator==(_211aa1164_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_211aa1164_floatInfo _other) { return !this->operator==(_other); }


};
struct _21217e038_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _212190401_leftCheat {
	jule::I32 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_212190401_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_212190401_leftCheat _other) { return !this->operator==(_other); }


};
struct _212190dc4_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I32 _field_nd = 0;
	jule::I32 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_212190dc4_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_212190dc4_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _2121aa33e_Eq(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121aa64c_Lt(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121aa95a_LtEq(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121aac68_Gt(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121ab076_GtEq(_2121a4c51_Const*, _2121a4c51_Const);
struct _2121a4c51_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_2121a4c51_Const _other) { return _2121aa33e_Eq(this, _other); }

	inline bool operator!=(_2121a4c51_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_2121a4c51_Const _other) { return _2121aac68_Gt(this, _other); }

	inline jule::Bool operator>=(_2121a4c51_Const _other) { return _2121ab076_GtEq(this, _other); }

	inline jule::Bool operator<(_2121a4c51_Const _other) { return _2121aa64c_Lt(this, _other); }

	inline jule::Bool operator<=(_2121a4c51_Const _other) { return _2121aa95a_LtEq(this, _other); }


};
struct _213c0d07c_Ast {
	jule::Ptr<_2114c700d_File> _field_File;
	jule::Slice<jule::Ptr<_213c0e314_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_213c59183_UseDecl>> _field_UseDecls;
	jule::Slice<_213c0de18_Node> _field_Nodes;
	


};
struct _213c0de18_Node {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_213c0de18_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_213c0de18_Node _other) { return !this->operator==(_other); }


};
struct _213c0e314_Directive {
	jule::Ptr<_2114c1b73_Token> _field_Tag;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_Args;
	


};
struct _213c41d2a_TypeDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_213c41d2a_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_213c41d2a_TypeDecl _other) { return !this->operator==(_other); }


};
struct _213c423e1_IdentTypeDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> _field_Generics;
	


};
struct _213c426cc_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_213c423e1_IdentTypeDecl>> _field_Idents;
	


};
struct _213c42a51_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_Idents;
	jule::Ptr<_213c41d2a_TypeDecl> _field_Kind;
	


};
struct _213c42d3c_SptrTypeDecl {
	jule::Ptr<_213c41d2a_TypeDecl> _field_Elem;
	

	inline bool operator==(_213c42d3c_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_213c42d3c_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _213c43238_SlcTypeDecl {
	jule::Ptr<_213c41d2a_TypeDecl> _field_Elem;
	

	inline bool operator==(_213c43238_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_213c43238_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _213c43524_TupleTypeDecl {
	jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> _field_Types;
	


};
struct _213c43810_PtrTypeDecl {
	jule::Ptr<_213c41d2a_TypeDecl> _field_Elem;
	

	inline bool operator==(_213c43810_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_213c43810_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _213c43ed6_ArrTypeDecl {
	jule::Ptr<_213c41d2a_TypeDecl> _field_Elem;
	jule::Ptr<_213c45ea5_Expr> _field_Size;
	

	inline bool operator==(_213c43ed6_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_213c43ed6_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _213c446e0_MapTypeDecl {
	jule::Ptr<_213c41d2a_TypeDecl> _field_Key;
	jule::Ptr<_213c41d2a_TypeDecl> _field_Val;
	

	inline bool operator==(_213c446e0_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_213c446e0_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _213c44a97_RetTypeDecl {
	jule::Ptr<_213c41d2a_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_Idents;
	


};
struct _213c45ea5_Expr {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_2114c1b73_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_213c45ea5_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_213c45ea5_Expr _other) { return !this->operator==(_other); }


};
struct _213c46291_RangeExpr {
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	

	inline bool operator==(_213c46291_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c46291_RangeExpr _other) { return !this->operator==(_other); }


};
struct _213c46846_UseExpr {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	

	inline bool operator==(_213c46846_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c46846_UseExpr _other) { return !this->operator==(_other); }


};
struct _213c46b32_TupleExpr {
	jule::Slice<jule::Ptr<_213c45ea5_Expr>> _field_Expr;
	


};
struct _213c46ed9_LitExpr {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_213c46ed9_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_213c46ed9_LitExpr _other) { return !this->operator==(_other); }


};
struct _213c47627_UnsafeExpr {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	

	inline bool operator==(_213c47627_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c47627_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _213c47a9a_IdentExpr {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_213c47a9a_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_213c47a9a_IdentExpr _other) { return !this->operator==(_other); }


};
struct _213c482a4_UnaryExpr {
	jule::Ptr<_2114c1b73_Token> _field_Op;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	

	inline bool operator==(_213c482a4_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c482a4_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _213c4865b_VariadicExpr {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	

	inline bool operator==(_213c4865b_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c4865b_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _213c48a13_CastExpr {
	jule::Ptr<_213c41d2a_TypeDecl> _field_Kind;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	

	inline bool operator==(_213c48a13_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c48a13_CastExpr _other) { return !this->operator==(_other); }


};
struct _213c48dba_NsSelectionExpr {
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_Ns;
	jule::Ptr<_2114c1b73_Token> _field_Ident;
	


};
struct _213c4933d_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	jule::Ptr<_2114c1b73_Token> _field_Ident;
	

	inline bool operator==(_213c4933d_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_213c4933d_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _213c497b1_BinopExpr {
	jule::Ptr<_213c45ea5_Expr> _field_Left;
	jule::Ptr<_213c45ea5_Expr> _field_Right;
	jule::Ptr<_2114c1b73_Token> _field_Op;
	

	inline bool operator==(_213c497b1_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_213c497b1_BinopExpr _other) { return !this->operator==(_other); }


};
struct _213c49dbb_FnCallExpr {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_213c45ea5_Expr>> _field_Args;
	jule::Ptr<_213c51961_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _213c4a84a_FieldExprPair {
	jule::Ptr<_2114c1b73_Token> _field_Field;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	

	inline bool operator==(_213c4a84a_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c4a84a_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _213c4b120_StructLit {
	jule::Ptr<_2114c1b73_Token> _field_End;
	jule::Ptr<_213c41d2a_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_213c45ea5_Expr>> _field_Exprs;
	


};
struct _213c4b593_BraceLit {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_2114c1b73_Token> _field_End;
	jule::Slice<jule::Ptr<_213c45ea5_Expr>> _field_Exprs;
	


};
struct _213c4be78_KeyValPair {
	jule::Ptr<_213c45ea5_Expr> _field_Key;
	jule::Ptr<_213c45ea5_Expr> _field_Val;
	jule::Ptr<_2114c1b73_Token> _field_Colon;
	

	inline bool operator==(_213c4be78_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_213c4be78_KeyValPair _other) { return !this->operator==(_other); }


};
struct _213c4c5e9_SliceExpr {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_2114c1b73_Token> _field_End;
	jule::Slice<jule::Ptr<_213c45ea5_Expr>> _field_Exprs;
	


};
struct _213c4ce57_IndexingExpr {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_2114c1b73_Token> _field_End;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	jule::Ptr<_213c45ea5_Expr> _field_Index;
	

	inline bool operator==(_213c4ce57_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_213c4ce57_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _213c4d562_SlicingExpr {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_2114c1b73_Token> _field_End;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	jule::Ptr<_213c45ea5_Expr> _field_Start;
	jule::Ptr<_213c45ea5_Expr> _field_To;
	

	inline bool operator==(_213c4d562_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_213c4d562_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _213c4d84d_Constraint {
	jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> _field_Mask;
	


};
struct _213c4dcc1_GenericDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_213c4d84d_Constraint> _field_Constraint;
	

	inline bool operator==(_213c4dcc1_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_213c4dcc1_GenericDecl _other) { return !this->operator==(_other); }


};
struct _213c4e178_LabelSt {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_213c4e178_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_213c4e178_LabelSt _other) { return !this->operator==(_other); }


};
struct _213c4e530_GotoSt {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_2114c1b73_Token> _field_Label;
	

	inline bool operator==(_213c4e530_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_213c4e530_GotoSt _other) { return !this->operator==(_other); }


};
struct _213c4e81b_FallSt {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	

	inline bool operator==(_213c4e81b_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_213c4e81b_FallSt _other) { return !this->operator==(_other); }


};
struct _213c4ee26_AssignLeft {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	

	inline bool operator==(_213c4ee26_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c4ee26_AssignLeft _other) { return !this->operator==(_other); }


};
struct _213c50465_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_2114c1b73_Token> _field_Setter;
	jule::Slice<jule::Ptr<_213c4ee26_AssignLeft>> _field_Left;
	jule::Ptr<_213c45ea5_Expr> _field_Right;
	


};
struct _213c51356_Stmt {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_213c51356_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_213c51356_Stmt _other) { return !this->operator==(_other); }


};
struct _213c51961_ScopeTree {
	jule::Ptr<_213c51961_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_213c51356_Stmt> _field_Stmts;
	jule::Ptr<_2114c1b73_Token> _field_End;
	


};
struct _213c52137_ParamDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_213c41d2a_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_213c52137_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_213c52137_ParamDecl _other) { return !this->operator==(_other); }


};
struct _213c53457_FnDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_213c0e314_Directive>> _field_Directives;
	jule::Ptr<_213c51961_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>> _field_Generics;
	jule::Ptr<_213c44a97_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_213c52137_ParamDecl>> _field_Params;
	


};
struct _213c54436_VarDecl {
	jule::Ptr<_213c51961_ScopeTree> _field_Scope;
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_213c0e314_Directive>> _field_Directives;
	jule::Ptr<_213c41d2a_TypeDecl> _field_Kind;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	


};
struct _213c547dd_RetSt {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	

	inline bool operator==(_213c547dd_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c547dd_RetSt _other) { return !this->operator==(_other); }


};
struct _213c54e4d_Iter {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_213c51961_ScopeTree> _field_Scope;
	

	inline bool operator==(_213c54e4d_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_213c54e4d_Iter _other) { return !this->operator==(_other); }


};
struct _213c55723_WhileKind {
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_2114c1b73_Token> _field_NextToken;
	

	inline bool operator==(_213c55723_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_213c55723_WhileKind _other) { return !this->operator==(_other); }


};
struct _213c560b4_RangeKind {
	jule::Ptr<_2114c1b73_Token> _field_InToken;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	jule::Ptr<_213c54436_VarDecl> _field_KeyA;
	jule::Ptr<_213c54436_VarDecl> _field_KeyB;
	

	inline bool operator==(_213c560b4_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_213c560b4_RangeKind _other) { return !this->operator==(_other); }


};
struct _213c5646b_BreakSt {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_2114c1b73_Token> _field_Label;
	

	inline bool operator==(_213c5646b_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_213c5646b_BreakSt _other) { return !this->operator==(_other); }


};
struct _213c56823_ContSt {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_2114c1b73_Token> _field_Label;
	

	inline bool operator==(_213c56823_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_213c56823_ContSt _other) { return !this->operator==(_other); }


};
struct _213c56c96_If {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	jule::Ptr<_213c51961_ScopeTree> _field_Scope;
	

	inline bool operator==(_213c56c96_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_213c56c96_If _other) { return !this->operator==(_other); }


};
struct _213c5714d_Else {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_213c51961_ScopeTree> _field_Scope;
	

	inline bool operator==(_213c5714d_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_213c5714d_Else _other) { return !this->operator==(_other); }


};
struct _213c575c1_Conditional {
	jule::Ptr<_213c56c96_If> _field_Head;
	jule::Slice<jule::Ptr<_213c56c96_If>> _field_Tail;
	jule::Ptr<_213c5714d_Else> _field_Default;
	


};
struct _213c57c97_TypeAliasDecl {
	jule::Ptr<_213c51961_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_213c41d2a_TypeDecl> _field_Kind;
	

	inline bool operator==(_213c57c97_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_213c57c97_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _213c5821a_Case {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_213c51961_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_213c45ea5_Expr>> _field_Exprs;
	


};
struct _213c588e1_MatchCase {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_2114c1b73_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_213c5821a_Case>> _field_Cases;
	jule::Ptr<_213c5714d_Else> _field_Default;
	


};
struct _213c59183_UseDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _213c59606_EnumItemDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	

	inline bool operator==(_213c59606_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c59606_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _213c5a12e_EnumDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_213c41d2a_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_213c59606_EnumItemDecl>> _field_Items;
	jule::Ptr<_2114c1b73_Token> _field_End;
	


};
struct _213c5a904_TypeEnumItemDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_213c41d2a_TypeDecl> _field_Kind;
	

	inline bool operator==(_213c5a904_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_213c5a904_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _213c5b00e_TypeEnumDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_213c5a904_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_2114c1b73_Token> _field_End;
	


};
struct _213c5b273_FieldDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_213c41d2a_TypeDecl> _field_Kind;
	jule::Ptr<_213c45ea5_Expr> _field_Default;
	

	inline bool operator==(_213c5b273_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_213c5b273_FieldDecl _other) { return !this->operator==(_other); }


};
struct _213c5bac0_StructDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_2114c1b73_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_213c5b273_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_213c0e314_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>> _field_Generics;
	


};
struct _213c5c296_TraitDecl {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_2114c1b73_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_213c53457_FnDecl>> _field_Methods;
	


};
struct _213c5c8a1_Impl {
	jule::Ptr<_2114c1b73_Token> _field_End;
	jule::Ptr<_213c41d2a_TypeDecl> _field_Base;
	jule::Ptr<_213c41d2a_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_213c53457_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_213c54436_VarDecl>> _field_Statics;
	


};
struct _213c5da17_Field {
	jule::Ptr<_213c615db_Struct> _field_Owner;
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_213d906d7_TypeSymbol> _field_Kind;
	jule::Ptr<_213c45ea5_Expr> _field_Default;
	

	inline bool operator==(_213c5da17_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_213c5da17_Field _other) { return !this->operator==(_other); }


};
struct _213c607c7_Operators {
	jule::Ptr<_213c796ae_FnIns> _field_Eq;
	jule::Ptr<_213c796ae_FnIns> _field_Gt;
	jule::Ptr<_213c796ae_FnIns> _field_GtEq;
	jule::Ptr<_213c796ae_FnIns> _field_Lt;
	jule::Ptr<_213c796ae_FnIns> _field_LtEq;
	jule::Ptr<_213c796ae_FnIns> _field_Shl;
	jule::Ptr<_213c796ae_FnIns> _field_Shr;
	jule::Ptr<_213c796ae_FnIns> _field_Add;
	jule::Ptr<_213c796ae_FnIns> _field_Sub;
	jule::Ptr<_213c796ae_FnIns> _field_Div;
	jule::Ptr<_213c796ae_FnIns> _field_Mul;
	jule::Ptr<_213c796ae_FnIns> _field_Mod;
	jule::Ptr<_213c796ae_FnIns> _field_BitAnd;
	jule::Ptr<_213c796ae_FnIns> _field_BitOr;
	jule::Ptr<_213c796ae_FnIns> _field_BitXor;
	jule::Ptr<_213c796ae_FnIns> _field_Neg;
	jule::Ptr<_213c796ae_FnIns> _field_Pos;
	jule::Ptr<_213c796ae_FnIns> _field_BitNot;
	jule::Ptr<_213c796ae_FnIns> _field_AddAssign;
	jule::Ptr<_213c796ae_FnIns> _field_SubAssign;
	jule::Ptr<_213c796ae_FnIns> _field_DivAssign;
	jule::Ptr<_213c796ae_FnIns> _field_MulAssign;
	jule::Ptr<_213c796ae_FnIns> _field_ModAssign;
	jule::Ptr<_213c796ae_FnIns> _field_ShlAssign;
	jule::Ptr<_213c796ae_FnIns> _field_ShrAssign;
	jule::Ptr<_213c796ae_FnIns> _field_BitOrAssign;
	jule::Ptr<_213c796ae_FnIns> _field_BitAndAssign;
	jule::Ptr<_213c796ae_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_213c607c7_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_213c607c7_Operators _other) { return !this->operator==(_other); }


};
struct _213c615db_Struct {
	jule::Ptr<_213ce1050_Sema> _field_sema;
	jule::Slice<jule::Ptr<_213c615db_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_213c615db_Struct>> _field_Uses;
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_213c5da17_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_213c76a0d_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_213d11988_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_213c0e314_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_213c88b63_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_213c64402_StructIns>> _field_Instances;
	


};
struct _213c6390c_FieldIns {
	jule::Ptr<_213c5da17_Field> _field_Decl;
	jule::Ptr<_213d88834_TypeKind> _field_Kind;
	jule::Ptr<_213d5ae22_Data> _field_Default;
	

	inline bool operator==(_213c6390c_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_213c6390c_FieldIns _other) { return !this->operator==(_other); }


};
struct _213c68307_OperandExprModel {
	jule::Ptr<_213d88834_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_213c68307_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_213c68307_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _213c687be_BinopExprModel {
	jule::Ptr<_213c68307_OperandExprModel> _field_Left;
	jule::Ptr<_213c68307_OperandExprModel> _field_Right;
	jule::Ptr<_2114c1b73_Token> _field_Op;
	

	inline bool operator==(_213c687be_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_213c687be_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _213c68b76_UnaryExprModel {
	jule::Ptr<_213d5ae22_Data> _field_Expr;
	jule::Ptr<_2114c1b73_Token> _field_Op;
	

	inline bool operator==(_213c68b76_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_213c68b76_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _213c69171_StructArgExprModel {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_213c6390c_FieldIns> _field_Field;
	jule::Ptr<_213d5ae22_Data> _field_Expr;
	

	inline bool operator==(_213c69171_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c69171_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _213c694e5_StructLitExprModel {
	jule::Ptr<_213c64402_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_213c69171_StructArgExprModel>> _field_Args;
	


};
struct _213c69803_AllocStructLitExprModel {
	jule::Ptr<_213c694e5_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_213c69803_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_213c69803_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _213c69d53_CastingExprModel {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_213d88834_TypeKind> _field_Kind;
	jule::Ptr<_213d88834_TypeKind> _field_ExprKind;
	

	inline bool operator==(_213c69d53_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_213c69d53_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _213c6a705_FnCallExprModel {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_213c796ae_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_213cb8a72_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _213c6aaac_SliceExprModel {
	jule::Ptr<_213d88834_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _213c6b030_IndexingExprModel {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_213d5ae22_Data> _field_Expr;
	jule::Ptr<_213d5ae22_Data> _field_Index;
	

	inline bool operator==(_213c6b030_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_213c6b030_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _213c6b3d7_AnonFnExprModel {
	jule::Ptr<_213c796ae_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_213c6b3d7_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_213c6b3d7_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _213c6b78e_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_213c6b78e_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_213c6b78e_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _213c6bc12_MapExprModel {
	jule::Ptr<_213d88834_TypeKind> _field_KeyKind;
	jule::Ptr<_213d88834_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_213c6b78e_KeyValPairExprModel>> _field_Entries;
	


};
struct _213c6c251_SlicingExprModel {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_213c6c251_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_213c6c251_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _213c6c790_TraitSubIdentExprModel {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_213c76a0d_Fn> _field_Method;
	jule::Ptr<_213c88b63_Trait> _field_Trt;
	

	inline bool operator==(_213c6c790_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_213c6c790_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _213c6d076_StructSubIdentExprModel {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Ptr<_213d5ae22_Data> _field_Expr;
	jule::Ptr<_213c796ae_FnIns> _field_Method;
	jule::Ptr<_213c6390c_FieldIns> _field_Field;
	jule::Ptr<_213c64402_StructIns> _field_Owner;
	

	inline bool operator==(_213c6d076_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_213c6d076_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _213c6d41c_StructStaticIdentExprModel {
	jule::Ptr<_213c64402_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_213c796ae_FnIns> _field_Method;
	

	inline bool operator==(_213c6d41c_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_213c6d41c_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _213c6d7d5_ArrayExprModel {
	jule::Ptr<_213d973e2_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _213c6dac1_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	inline bool operator==(_213c6dac1_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_213c6dac1_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _213c6e132_CommonSubIdentExprModel {
	jule::Ptr<_213d88834_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_213c6e132_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_213c6e132_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _213c6e42e_TupleExprModel {
	jule::Slice<jule::Ptr<_213d5ae22_Data>> _field_Datas;
	


};
struct _213c6e808_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_213c6e808_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_213c6e808_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c6ebe3_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_213c6ebe3_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_213c6ebe3_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c70012_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_213c70012_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c70012_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c703ec_BuiltinNewCallExprModel {
	jule::Ptr<_213d88834_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_213c703ec_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_213c703ec_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c707d7_BuiltinPanicCallExprModel {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_213c707d7_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c707d7_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c70c8d_BuiltinAssertCallExprModel {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_213c70c8d_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_213c70c8d_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c71244_BuiltinMakeCallExprModel {
	jule::Ptr<_213d88834_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_213c71244_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_213c71244_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c7162e_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_213c7162e_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_213c7162e_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c7194d_BuiltinLenCallExprModel {
	jule::Ptr<_213d5ae22_Data> _field_Expr;
	

	inline bool operator==(_213c7194d_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c7194d_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c71c6c_BuiltinCapCallExprModel {
	jule::Ptr<_213d5ae22_Data> _field_Expr;
	

	inline bool operator==(_213c71c6c_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c71c6c_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c72421_BuiltinDeleteCallExprModel {
	jule::Ptr<_213d5ae22_Data> _field_Dest;
	jule::Ptr<_213d5ae22_Data> _field_Key;
	

	inline bool operator==(_213c72421_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_213c72421_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c72784_BuiltinCopyCallExprModel {
	jule::Ptr<_213d5ae22_Data> _field_Dest;
	jule::Ptr<_213d5ae22_Data> _field_Src;
	

	inline bool operator==(_213c72784_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_213c72784_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c72b6e_BuiltinErrorCallExprModel {
	jule::Ptr<_213c796ae_FnIns> _field_Func;
	jule::Ptr<_213d5ae22_Data> _field_Err;
	

	inline bool operator==(_213c72b6e_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_213c72b6e_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _213c72e6b_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_213c72e6b_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c72e6b_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _213c73257_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_213c73257_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c73257_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _213c73543_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_213c73543_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_213c73543_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _213c73851_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_213c73851_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c73851_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _213c73c19_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _213c74005_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_213c74005_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213c74005_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _213c749b7_RetType {
	jule::Ptr<_213d906d7_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_Idents;
	


};
struct _213c751c1_Param {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_213d906d7_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_213c751c1_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_213c751c1_Param _other) { return !this->operator==(_other); }


};
struct _213c76a0d_Fn {
	jule::Ptr<_213ce1050_Sema> _field_sema;
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_213c0e314_Directive>> _field_Directives;
	jule::Ptr<_213c51961_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>> _field_Generics;
	jule::Ptr<_213c749b7_RetType> _field_Result;
	jule::Slice<jule::Ptr<_213c751c1_Param>> _field_Params;
	jule::Ptr<_213c615db_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_213c796ae_FnIns>> _field_Instances;
	


};
struct _213c787e0_ParamIns {
	jule::Ptr<_213c751c1_Param> _field_Decl;
	jule::Ptr<_213d88834_TypeKind> _field_Kind;
	

	inline bool operator==(_213c787e0_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_213c787e0_ParamIns _other) { return !this->operator==(_other); }


};
struct _213c796ae_FnIns {
	jule::Ptr<_213c64402_StructIns> _field_Owner;
	jule::Ptr<_213c76a0d_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_213d870a2_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_213c787e0_ParamIns>> _field_Params;
	jule::Ptr<_213d88834_TypeKind> _field_Result;
	jule::Ptr<_213cb8a72_Scope> _field_Scope;
	jule::Ptr<_213c7c618_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _213c7c618_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _213c7d949_Pass {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_213c7d949_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_213c7d949_Pass _other) { return !this->operator==(_other); }


};
struct _213c8318a_symbolBuilder {
	jule::Ptr<_213c8318a_symbolBuilder> _field_owner;
	jule::Trait<_213cd50cc_Importer> _field_importer;
	jule::Slice<_2110be2cb_Log> _field_errors;
	jule::Ptr<_213c0d07c_Ast> _field_ast;
	jule::Ptr<_213d56417_SymbolTable> _field_table;
	


};
struct _213c88b63_Trait {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_213d906d7_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_213c76a0d_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_213c615db_Struct>> _field_Implemented;
	


};
struct _213c8a901_EnumItem {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_213d5be9a_Value> _field_Value;
	

	inline bool operator==(_213c8a901_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_213c8a901_EnumItem _other) { return !this->operator==(_other); }


};
struct _213c8b3e6_Enum {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_213d906d7_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_213c8a901_EnumItem>> _field_Items;
	


};
struct _213c8c45d_TypeEnumItem {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_213d906d7_TypeSymbol> _field_Kind;
	

	inline bool operator==(_213c8c45d_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_213c8c45d_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _213c8c9e1_TypeEnum {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_213c8c45d_TypeEnumItem>> _field_Items;
	


};
struct _213c8eb47_comptimeRange {
	jule::Trait<_213c8e96b_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_213c8eb47_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_213c8eb47_comptimeRange _other) { return !this->operator==(_other); }


};
struct _213c9063c_comptimeStructField {
	jule::Ptr<_213c6390c_FieldIns> _field_field;
	

	inline bool operator==(_213c9063c_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_213c9063c_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _213c92166_comptimeStructFields {
	jule::Slice<jule::Ptr<_213c6390c_FieldIns>> _field_fields;
	


};
struct _213c93640_comptimeStatic {
	jule::Ptr<_213d11988_Var> _field_field;
	

	inline bool operator==(_213c93640_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_213c93640_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _213c9a05e_comptimeStatics {
	jule::Slice<jule::Ptr<_213d11988_Var>> _field_fields;
	


};
struct _213c9b4a0_comptimeEnumField {
	jule::Ptr<_213c8a901_EnumItem> _field_field;
	

	inline bool operator==(_213c9b4a0_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_213c9b4a0_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _213c9c6c1_comptimeEnumFields {
	jule::Slice<jule::Ptr<_213c8a901_EnumItem>> _field_fields;
	


};
struct _213c9dc22_comptimeParam {
	jule::Ptr<_213c787e0_ParamIns> _field_param;
	

	inline bool operator==(_213c9dc22_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_213c9dc22_comptimeParam _other) { return !this->operator==(_other); }


};
struct _213ca0cbd_comptimeParams {
	jule::Slice<jule::Ptr<_213c787e0_ParamIns>> _field_params;
	


};
struct _213ca2286_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_213ca374e_comptimeTypeInfo>> _field_types;
	


};
struct _213ca374e_comptimeTypeInfo {
	jule::Ptr<_213d88834_TypeKind> _field_base;
	

	inline bool operator==(_213ca374e_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_213ca374e_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _213ca9249_comptimeValue {
	jule::Ptr<_213d5ae22_Data> _field_data;
	

	inline bool operator==(_213ca9249_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_213ca9249_comptimeValue _other) { return !this->operator==(_other); }


};
struct _213cab845_comptimeFiles {
	jule::Slice<jule::Ptr<_213d56417_SymbolTable>> _field_files;
	


};
struct _213cacd0d_comptimeFile {
	jule::Ptr<_213d56417_SymbolTable> _field_file;
	

	inline bool operator==(_213cacd0d_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_213cacd0d_comptimeFile _other) { return !this->operator==(_other); }


};
struct _213cb1b69_constraintChecker {
	jule::Ptr<_213ce1050_Sema> _field_s;
	jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_213d870a2_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> _field_genericsA;
	jule::Ptr<_213c796ae_FnIns> _field_fi;
	jule::Ptr<_213c64402_StructIns> _field_si;
	jule::Ptr<_2114c1b73_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _213cb3a17_Impl {
	jule::Ptr<_213c41d2a_TypeDecl> _field_Base;
	jule::Ptr<_213c41d2a_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_213c76a0d_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_213d11988_Var>> _field_Statics;
	


};
struct _213cb8a72_Scope {
	jule::Ptr<_213cb8a72_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _213cb8e6d_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_213cb8a72_Scope> _field_Scope;
	

	inline bool operator==(_213cb8e6d_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_213cb8e6d_If _other) { return !this->operator==(_other); }


};
struct _213cb9259_Else {
	jule::Ptr<_213cb8a72_Scope> _field_Scope;
	

	inline bool operator==(_213cb9259_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_213cb9259_Else _other) { return !this->operator==(_other); }


};
struct _213cb95cd_Conditional {
	jule::Slice<jule::Ptr<_213cb8e6d_If>> _field_Elifs;
	jule::Ptr<_213cb9259_Else> _field_Default;
	


};
struct _213cb98b9_InfIter {
	jule::Ptr<_213cb8a72_Scope> _field_Scope;
	

	inline bool operator==(_213cb98b9_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_213cb98b9_InfIter _other) { return !this->operator==(_other); }


};
struct _213cb9d3c_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_213cb8a72_Scope> _field_Scope;
	

	inline bool operator==(_213cb9d3c_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_213cb9d3c_WhileIter _other) { return !this->operator==(_other); }


};
struct _213cba722_RangeIter {
	jule::Ptr<_213d5ae22_Data> _field_Expr;
	jule::Ptr<_213cb8a72_Scope> _field_Scope;
	jule::Ptr<_213d11988_Var> _field_KeyA;
	jule::Ptr<_213d11988_Var> _field_KeyB;
	

	inline bool operator==(_213cba722_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_213cba722_RangeIter _other) { return !this->operator==(_other); }


};
struct _213cbab1d_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_213cbab1d_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_213cbab1d_ContSt _other) { return !this->operator==(_other); }


};
struct _213cbaec5_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_213cbaec5_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_213cbaec5_BreakSt _other) { return !this->operator==(_other); }


};
struct _213cbb2b1_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_213cbb2b1_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_213cbb2b1_Label _other) { return !this->operator==(_other); }


};
struct _213cbb59c_GotoSt {
	jule::Str _field_Ident;
	

	inline bool operator==(_213cbb59c_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_213cbb59c_GotoSt _other) { return !this->operator==(_other); }


};
struct _213cbb954_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_213cbb954_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_213cbb954_Postfix _other) { return !this->operator==(_other); }


};
struct _213cbbdc7_Assign {
	jule::Ptr<_213c68307_OperandExprModel> _field_L;
	jule::Ptr<_213c68307_OperandExprModel> _field_R;
	jule::Ptr<_2114c1b73_Token> _field_Op;
	

	inline bool operator==(_213cbbdc7_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_213cbbdc7_Assign _other) { return !this->operator==(_other); }


};
struct _213cbc27e_MultiAssign {
	jule::Slice<jule::Ptr<_213d5ae22_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _213cbc889_Match {
	jule::Ptr<_213d5ae22_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_213cbd3d4_Case>> _field_Cases;
	jule::Ptr<_213cbd3d4_Case> _field_Default;
	


};
struct _213cbd3d4_Case {
	jule::Ptr<_213cbc889_Match> _field_Owner;
	jule::Ptr<_213cb8a72_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_213d5ae22_Data>> _field_Exprs;
	jule::Ptr<_213cbd3d4_Case> _field_Next;
	


};
struct _213cbd9ab_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_213cbd9ab_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_213cbd9ab_FallSt _other) { return !this->operator==(_other); }


};
struct _213cbdd0d_RetSt {
	jule::Ptr<_213c796ae_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_213cbdd0d_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213cbdd0d_RetSt _other) { return !this->operator==(_other); }


};
struct _213cbe418_scopeLabel {
	jule::Ptr<_2114c1b73_Token> _field_token;
	jule::Ptr<_213cbb2b1_Label> _field_label;
	jule::I32 _field_pos = 0;
	jule::Ptr<_213cc06a0_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_213cbe418_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_213cbe418_scopeLabel _other) { return !this->operator==(_other); }


};
struct _213cbe88b_scopeGoto {
	jule::Ptr<_213c4e530_GotoSt> _field_gt;
	jule::Ptr<_213cc06a0_scopeChecker> _field_scope;
	jule::I32 _field_pos = 0;
	

	inline bool operator==(_213cbe88b_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_213cbe88b_scopeGoto _other) { return !this->operator==(_other); }


};
struct _213cc06a0_scopeChecker {
	jule::Ptr<_2114c1b73_Token> _field_calledFrom;
	jule::Ptr<_213ce1050_Sema> _field_s;
	jule::Ptr<_213c796ae_FnIns> _field_owner;
	jule::Ptr<_213cc06a0_scopeChecker> _field_parent;
	jule::I32 _field_childIndex = 0;
	jule::Ptr<_213d56417_SymbolTable> _field_table;
	jule::Ptr<_213cb8a72_Scope> _field_scope;
	jule::Ptr<_213c51961_ScopeTree> _field_tree;
	jule::Ptr<_213c796ae_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_213cbe418_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_213cbe88b_scopeGoto>>> _field_gotos;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_213cc06a0_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_213cc06a0_scopeChecker _other) { return !this->operator==(_other); }


};
struct _213cd1b9a_directiveChecker {
	jule::Ptr<_213ce1050_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_213c0e314_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_213cd1b9a_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_213cd1b9a_directiveChecker _other) { return !this->operator==(_other); }


};
struct _213cd7c7d_ImportInfo {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_Selected;
	jule::Ptr<_213cda8b8_Package> _field_Package;
	jule::I32 _field_ModId = 0;
	


};
struct _213cda8b8_Package {
	jule::Slice<jule::Ptr<_213d56417_SymbolTable>> _field_Files;
	


};
struct _213ce0538_commonSemaMeta {
	jule::Slice<jule::Ptr<_213ca374e_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _213ce1050_Sema {
	jule::Slice<_2110be2cb_Log> _field_errors;
	jule::Slice<jule::Ptr<_213d56417_SymbolTable>> _field_files;
	jule::Ptr<_213d56417_SymbolTable> _field_file;
	jule::I32 _field_flags = 0LL;
	jule::Ptr<_213ce0538_commonSemaMeta> _field_meta;
	


};
struct _213d0d732_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _213d10943_IterRelation {
	jule::Ptr<_213d11988_Var> _field_Range;
	

	inline bool operator==(_213d10943_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_213d10943_IterRelation _other) { return !this->operator==(_other); }


};
struct _213d11988_Var {
	jule::Ptr<_213cb8a72_Scope> _field_Scope;
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_213d906d7_TypeSymbol> _field_Kind;
	jule::Ptr<_213d5be9a_Value> _field_Value;
	jule::Ptr<_213c7c618_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_213c0e314_Directive>> _field_Directives;
	jule::Ptr<_213d10943_IterRelation> _field_IterRelation;
	jule::I32 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_213d11988_Var>> _field_Depends;
	


};
struct _213d12736_FuncPattern {
	


};
struct _213d4459d_typeCompatibilityChecker {
	jule::Ptr<_213ce1050_Sema> _field_s;
	jule::Ptr<_213d88834_TypeKind> _field_dest;
	jule::Ptr<_213d88834_TypeKind> _field_src;
	jule::Ptr<_2114c1b73_Token> _field_errorToken;
	

	inline bool operator==(_213d4459d_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_213d4459d_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _213d461c6_assignTypeChecker {
	jule::Ptr<_213ce1050_Sema> _field_s;
	jule::Ptr<_213d88834_TypeKind> _field_dest;
	jule::Ptr<_213d5ae22_Data> _field_d;
	jule::Ptr<_2114c1b73_Token> _field_errorToken;
	

	inline bool operator==(_213d461c6_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_213d461c6_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _213d47bab_dynamicTypeAnnotation {
	jule::Ptr<_213d5c990_Eval> _field_e;
	jule::Ptr<_213c796ae_FnIns> _field_f;
	jule::Ptr<_213c787e0_ParamIns> _field_p;
	jule::Ptr<_213d5ae22_Data> _field_a;
	jule::Ptr<_2114c1b73_Token> _field_errorToken;
	jule::Ptr<_213d88834_TypeKind>* _field_k = nullptr;
	jule::Ptr<_213c41d2a_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_213d88834_TypeKind>> _field_ignored;
	


};
struct _213d4c5a6_fnCallArgChecker {
	jule::Ptr<_213d5c990_Eval> _field_e;
	jule::Slice<jule::Ptr<_213c45ea5_Expr>> _field_args;
	jule::Ptr<_2114c1b73_Token> _field_errorToken;
	jule::Ptr<_213c796ae_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_213d88834_TypeKind>> _field_ignored;
	


};
struct _213d50268_structLitChecker {
	jule::Ptr<_213d5c990_Eval> _field_e;
	jule::Ptr<_2114c1b73_Token> _field_errorToken;
	jule::Ptr<_213c64402_StructIns> _field_s;
	jule::Slice<jule::Ptr<_213c69171_StructArgExprModel>> _field_args;
	


};
struct _213d51d4c_rangeChecker {
	jule::Ptr<_213cc06a0_scopeChecker> _field_sc;
	jule::Ptr<_213c560b4_RangeKind> _field_rang;
	jule::Ptr<_213cba722_RangeIter> _field_Kind;
	jule::Ptr<_213d5ae22_Data> _field_d;
	

	inline bool operator==(_213d51d4c_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_213d51d4c_rangeChecker _other) { return !this->operator==(_other); }


};
struct _213d54349_retTypeChecker {
	jule::Ptr<_213cc06a0_scopeChecker> _field_sc;
	jule::Ptr<_213c796ae_FnIns> _field_f;
	jule::Slice<jule::Ptr<_213d88834_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_213c45ea5_Expr>> _field_exprs;
	jule::Ptr<_2114c1b73_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _213d56417_SymbolTable {
	jule::Ptr<_2114c700d_File> _field_File;
	jule::Slice<_213c7d949_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_213cd7c7d_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_213d11988_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_213c615db_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_213c76a0d_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_213c88b63_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_213c8b3e6_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_213c8c9e1_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_213cb3a17_Impl>> _field_Impls;
	


};
struct _213d5ae22_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_213d88834_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_2121a4c51_Const> _field_Constant;
	

	inline bool operator==(_213d5ae22_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_213d5ae22_Data _other) { return !this->operator==(_other); }


};
struct _213d5be9a_Value {
	jule::Ptr<_213c45ea5_Expr> _field_Expr;
	jule::Ptr<_213d5ae22_Data> _field_Data;
	

	inline bool operator==(_213d5be9a_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_213d5be9a_Value _other) { return !this->operator==(_other); }


};
struct _213d5c990_Eval {
	jule::Ptr<_213ce1050_Sema> _field_s;
	jule::Trait<_213da6b60_Lookup> _field_lookup;
	jule::Ptr<_213d88834_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_213d11988_Var> _field_owner;
	jule::Ptr<_213c6390c_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_213d5c990_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_213d5c990_Eval _other) { return !this->operator==(_other); }


};
struct _213d798d0_unaryEval {
	jule::Ptr<_213d5c990_Eval> _field_e;
	jule::Ptr<_213d5ae22_Data> _field_d;
	jule::Ptr<_213c482a4_UnaryExpr> _field_u;
	

	inline bool operator==(_213d798d0_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_213d798d0_unaryEval _other) { return !this->operator==(_other); }


};
struct _213d7b6a1_binaryEval {
	jule::Ptr<_213d5c990_Eval> _field_e;
	jule::Ptr<_213d5ae22_Data> _field_l;
	jule::Ptr<_213d5ae22_Data> _field_r;
	jule::Ptr<_2114c1b73_Token> _field_op;
	

	inline bool operator==(_213d7b6a1_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_213d7b6a1_binaryEval _other) { return !this->operator==(_other); }


};
struct _213d870a2_InsGeneric {
	jule::Ptr<_213d88834_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_213d88834_TypeKind>> _field_Constraint;
	


};
struct _213d87adb_TypeAlias {
	jule::Ptr<_213c51961_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_213d906d7_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> _field_Generics;
	


};
struct _213d88834_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_213d883c2_Kind> _field_Kind;
	

	inline bool operator==(_213d88834_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_213d88834_TypeKind _other) { return !this->operator==(_other); }


};
struct _213d906d7_TypeSymbol {
	jule::Ptr<_213c41d2a_TypeDecl> _field_Decl;
	jule::Ptr<_213d88834_TypeKind> _field_Kind;
	

	inline bool operator==(_213d906d7_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_213d906d7_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _213d91089_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_213d91089_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_213d91089_Prim _other) { return !this->operator==(_other); }


};
struct _213d947da_Sptr {
	jule::Ptr<_213d88834_TypeKind> _field_Elem;
	

	inline bool operator==(_213d947da_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_213d947da_Sptr _other) { return !this->operator==(_other); }


};
struct _213d95247_Slc {
	jule::Ptr<_213d88834_TypeKind> _field_Elem;
	

	inline bool operator==(_213d95247_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_213d95247_Slc _other) { return !this->operator==(_other); }


};
struct _213d95d4c_Tuple {
	jule::Slice<jule::Ptr<_213d88834_TypeKind>> _field_Types;
	


};
struct _213d967ed_Map {
	jule::Ptr<_213d88834_TypeKind> _field_Key;
	jule::Ptr<_213d88834_TypeKind> _field_Val;
	

	inline bool operator==(_213d967ed_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_213d967ed_Map _other) { return !this->operator==(_other); }


};
struct _213d973e2_Arr {
	jule::Bool _field_Auto = false;
	jule::I32 _field_N = 0;
	jule::Ptr<_213d88834_TypeKind> _field_Elem;
	

	inline bool operator==(_213d973e2_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_213d973e2_Arr _other) { return !this->operator==(_other); }


};
struct _213d97d4e_Ptr {
	jule::Ptr<_213d88834_TypeKind> _field_Elem;
	

	inline bool operator==(_213d97d4e_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_213d97d4e_Ptr _other) { return !this->operator==(_other); }


};
struct _213d98c95_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_213d98c95_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_213d98c95_referencer _other) { return !this->operator==(_other); }


};
struct _213d99b75_typeChecker {
	jule::Ptr<_213ce1050_Sema> _field_s;
	jule::Trait<_213da6b60_Lookup> _field_rootLookup;
	jule::Trait<_213da6b60_Lookup> _field_lookup;
	jule::Ptr<_213d98c95_referencer> _field_referencer;
	jule::Ptr<_213c7c618_ReferenceStack> _field_refers;
	jule::Ptr<_2114c1b73_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_213d88834_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_213d87adb_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _213da2067_identTypeLookup {
	

	inline bool operator==(_213da2067_identTypeLookup _other) { return true; }

	inline bool operator!=(_213da2067_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1e7b5c569_FileInfo {
	jule::Ptr<_213c0d07c_Ast> _field_Ast;
	jule::Slice<_2110be2cb_Log> _field_Errors;
	


};
struct _1e7ba19cb_stmt {
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1e7ba2306_scopeParser {
	jule::Ptr<_1e7bbd9e8_parser> _field_p;
	jule::Ptr<_213c51961_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1e7ba19cb_stmt>> _field_stmts;
	jule::I32 _field_pos = 0;
	


};
struct _1e7badba3_exprBuilder {
	jule::Ptr<_1e7bbd9e8_parser> _field_p;
	

	inline bool operator==(_1e7badba3_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1e7badba3_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1e7bba4d9_assignInfo {
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_l;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_r;
	jule::Ptr<_2114c1b73_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1e7bbd9e8_parser {
	jule::Ptr<_213c0d07c_Ast> _field_ast;
	jule::Slice<jule::Ptr<_213c0e314_Directive>> _field_directives;
	jule::Slice<_2110be2cb_Log> _field_errors;
	jule::Ptr<_1e7badba3_exprBuilder> _field_ep;
	


};
struct _1cdcd02a5_typeBuilder {
	jule::Ptr<_1e7bbd9e8_parser> _field_p;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _field_tokens;
	jule::I32* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _214041ed7_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	inline bool operator==(_214041ed7_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_214041ed7_CompileInfo _other) { return !this->operator==(_other); }


};
struct _21404333a_directiveEval {
	jule::Slice<_2110be2cb_Log> _field_logs;
	jule::Ptr<_213c0e314_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1cdcd4023_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_213cd7c7d_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1cdcd8cc5_OrderedDefines {
	jule::Slice<jule::Ptr<_213c615db_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_213d11988_Var>> _field_Globals;
	


};
struct _1cdcd9039_defineOrderer {
	

	inline bool operator==(_1cdcd9039_defineOrderer _other) { return true; }

	inline bool operator!=(_1cdcd9039_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1cddd4b3a_liveTable {
	jule::Slice<jule::Ptr<_213d11988_Var>> _field_vars;
	jule::Slice<jule::Ptr<_213c796ae_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_213c64402_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_213c88b63_Trait>> _field_traits;
	


};
struct _1cde1acb4_scopeDeadCode {
	jule::Ptr<_1cde1acb4_scopeDeadCode> _field_parent;
	jule::Ptr<_213cb8a72_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I32 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_213cbb2b1_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_213cbb59c_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1cde1acb4_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1cde1acb4_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1cde1ec1e_exprDeadCode {
	jule::Ptr<_1cde1acb4_scopeDeadCode> _field_s;
	

	inline bool operator==(_1cde1ec1e_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1cde1ec1e_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _213e6290d_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_2121a4c51_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_213e6290d_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_213e6290d_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _213e62cc6_StrAppendExprModel {
	jule::Any _field_Str = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_213e62cc6_StrAppendExprModel _other) {
		return 
			this->_field_Str == _other._field_Str &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213e62cc6_StrAppendExprModel _other) { return !this->operator==(_other); }


};
struct _213e630b2_UnsafeBinopExprModel {
	jule::Ptr<_213c687be_BinopExprModel> _field_Node;
	

	inline bool operator==(_213e630b2_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_213e630b2_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _213e63447_UnsafeIndexingExprModel {
	jule::Ptr<_213c6b030_IndexingExprModel> _field_Node;
	

	inline bool operator==(_213e63447_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_213e63447_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _213e637cc_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_213c6aaac_SliceExprModel> _field_Elems;
	

	inline bool operator==(_213e637cc_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_213e637cc_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _213e63b84_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_213e63b84_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_213e63b84_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _213e641c3_MutSlicingExprModel {
	jule::Ptr<_2114c1b73_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_213e641c3_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_213e641c3_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _213e646ac_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_213e646ac_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_213e646ac_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
struct _213e64954_InlineStdInternalNosafeStobs {
	jule::Any _field_Str = jule::Any(nullptr);
	

	inline bool operator==(_213e64954_InlineStdInternalNosafeStobs _other) {
		return 
			this->_field_Str == _other._field_Str;
	}

	inline bool operator!=(_213e64954_InlineStdInternalNosafeStobs _other) { return !this->operator==(_other); }


};
struct _213e65b86_scopeOptimizer {
	jule::I32 _field_i = 0;
	jule::Ptr<_213cb8a72_Scope> _field_scope;
	

	inline bool operator==(_213e65b86_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_213e65b86_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _213e6b4c7_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_213e6b4c7_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_213e6b4c7_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1cdcda7ee_stdCacheData {
	jule::Ptr<_213c796ae_FnIns> _field_f;
	jule::Fn<void(_213e6b4c7_exprOptimizer*,_1cdcda7ee_stdCacheData*,jule::Ptr<_213c6a705_FnCallExprModel>*)> _field_do;
	


};
struct _1cde26cd1_Optimizer {
	jule::Ptr<_1cdcd6784_IR> _field_ir;
	

	inline bool operator==(_1cde26cd1_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1cde26cd1_Optimizer _other) { return !this->operator==(_other); }


};
struct _1cde4e1e3_AnsiEscape {
	

	inline bool operator==(_1cde4e1e3_AnsiEscape _other) { return true; }

	inline bool operator!=(_1cde4e1e3_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1cde50777_Logger {
	

	inline bool operator==(_1cde50777_Logger _other) { return true; }

	inline bool operator!=(_1cde50777_Logger _other) { return !this->operator==(_other); }


};
struct _213aeb322_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_213aeb322_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_213aeb322_AbsTime _other) { return !this->operator==(_other); }


};
struct _213aeb9b5_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_213aeb9b5_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_213aeb9b5_Time _other) { return !this->operator==(_other); }


};
struct _1b63eb169_scopeCoder {
	jule::Ptr<_213b05b01_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b63eb169_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b63eb169_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1b640465b_exprCoder {
	jule::Ptr<_213b05b01_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b640465b_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b640465b_exprCoder _other) { return !this->operator==(_other); }


};
struct _1b6414429_deriveCoder {
	jule::Ptr<_213b05b01_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b6414429_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b6414429_deriveCoder _other) { return !this->operator==(_other); }


};
struct _1b6415d10_TestCoder {
	jule::Ptr<_213c64402_StructIns> _field_t;
	jule::Ptr<_213c76a0d_Fn> _field_tmReset;
	jule::Ptr<_213c76a0d_Fn> _field_tmFailed;
	jule::Ptr<_213c76a0d_Fn> _field_tmSkipped;
	jule::Ptr<_213b05b01_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b6415d10_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b6415d10_TestCoder _other) { return !this->operator==(_other); }


};
struct _1b6418351_identCoder {
	

	inline bool operator==(_1b6418351_identCoder _other) { return true; }

	inline bool operator!=(_1b6418351_identCoder _other) { return !this->operator==(_other); }


};
struct _213b0425e_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_213b0425e_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_213b0425e_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _213b04726_traitHash {
	jule::Ptr<_213c88b63_Trait> _field_t;
	jule::Ptr<_213c64402_StructIns> _field_s;
	jule::I32 _field_i = 0;
	

	inline bool operator==(_213b04726_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_213b04726_traitHash _other) { return !this->operator==(_other); }


};
struct _213b04acd_traitCast {
	jule::Ptr<_213c88b63_Trait> _field_t1;
	jule::Ptr<_213c88b63_Trait> _field_t2;
	

	inline bool operator==(_213b04acd_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_213b04acd_traitCast _other) { return !this->operator==(_other); }


};
struct _213b144e4_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_213b144e4_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_213b144e4_customType _other) { return !this->operator==(_other); }


};
struct _213b14e73_typeCoder {
	jule::Ptr<_213b05b01_ObjectCoder> _field_oc;
	jule::Ptr<_213b1ca3b_resultCoder> _field_rc;
	

	inline bool operator==(_213b14e73_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_213b14e73_typeCoder _other) { return !this->operator==(_other); }


};
struct _213b1ca3b_resultCoder {
	jule::Ptr<_213b14e73_typeCoder> _field_tc;
	

	inline bool operator==(_213b1ca3b_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_213b1ca3b_resultCoder _other) { return !this->operator==(_other); }


};
struct _1b95b57d6_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1b95b57d6_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b95b57d6_Flag _other) { return !this->operator==(_other); }


};struct _1b95b908c_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1b95b908c_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b95b908c_Flag _other) { return !this->operator==(_other); }


};struct _1b95bc744_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1b95bc744_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b95bc744_Flag _other) { return !this->operator==(_other); }


};struct _1b95c0e40_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1b95c0e40_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b95c0e40_Flag _other) { return !this->operator==(_other); }


};struct _1b95c45e7_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1b95c45e7_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b95c45e7_Flag _other) { return !this->operator==(_other); }


};
struct _1b662c3ab_FlagSet {
	jule::Slice<jule::Trait<_1b662a94d_CommonFlag>> _field_flags;
	


};
struct _1b662eab7_argParser {
	_1b662c3ab_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i = 0;
	


};
struct _213b05b01_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_1cdcd6784_IR> _field_ir;
	_213b0425e_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_213b04726_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_213d88834_TypeKind>> _field_anyTypeMap;
	jule::Slice<_213b04acd_traitCast> _field_traitCastMap;
	jule::Ptr<_1b640465b_exprCoder> _field_ec;
	jule::Ptr<_1b63eb169_scopeCoder> _field_sc;
	jule::Ptr<_213b14e73_typeCoder> _field_tc;
	jule::Ptr<_1b6414429_deriveCoder> _field_dc;
	jule::I32 _field_headPos = 0;
	jule::I32 _field_declPos = 0;
	


};
struct _1cddd5003_ObjectDeadCode {
	_1cddd4b3a_liveTable _field_live;
	jule::Ptr<_1cdcd6784_IR> _field_ir;
	


};
struct _1cdcd6784_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_213cda8b8_Package> _field_Main;
	jule::Slice<jule::Ptr<_213cd7c7d_ImportInfo>> _field_Used;
	_1cdcd8cc5_OrderedDefines _field_Ordered;
	


};
struct _213c64402_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_213c615db_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_213d870a2_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_213c6390c_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_213d11988_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_213c76a0d_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_213c7c618_ReferenceStack> _field_Refers;
	_213c607c7_Operators _field_Operators;
	


};
struct _211160dea_Cmd {
	_2111a4801_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_213d5ae22_Data__jule_tuple_x_213d5ae22_Data {
	jule::Ptr<_213d5ae22_Data> __jule_result_arg0;
	jule::Ptr<_213d5ae22_Data> __jule_result_arg1;
};
struct __jule_tuple_x_213c5821a_Case__jule_tuple_bool {
	jule::Ptr<_213c5821a_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_213c5821a_Case__jule_tuple_x_213c5714d_Else {
	jule::Slice<jule::Ptr<_213c5821a_Case>> __jule_result_arg0;
	jule::Ptr<_213c5714d_Else> __jule_result_arg1;
};
struct __jule_tuple__213c51125_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_213c50465_AssignSt__jule_tuple_bool {
	jule::Ptr<_213c50465_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool {
	jule::Ptr<_213c41d2a_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_213c44a97_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_213c44a97_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log {
	jule::Slice<jule::Ptr<_213c0d07c_Ast>> __jule_result_arg0;
	jule::Slice<_2110be2cb_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_2110be2cb_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_2110be2cb_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1cdcd6784_IR__jule_tuple_s_2110be2cb_Log {
	jule::Ptr<_1cdcd6784_IR> __jule_result_arg0;
	jule::Slice<_2110be2cb_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__211a9dc00_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__211a9dc00_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__211a9dc00_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__211a9dc00_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_213d56417_SymbolTable__jule_tuple_s_2110be2cb_Log {
	jule::Ptr<_213d56417_SymbolTable> __jule_result_arg0;
	jule::Slice<_2110be2cb_Log> __jule_result_arg1;
};
struct __jule_tuple_x_213cda8b8_Package__jule_tuple_s_2110be2cb_Log {
	jule::Ptr<_213cda8b8_Package> __jule_result_arg0;
	jule::Slice<_2110be2cb_Log> __jule_result_arg1;
};
struct __jule_tuple_x_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log {
	jule::Ptr<_213c0d07c_Ast> __jule_result_arg0;
	jule::Slice<_2110be2cb_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_2114c1b73_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_2114c1b73_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_2114c1b73_Token__jule_tuple_sx_2114c1b73_Token {
	jule::Slice<jule::Ptr<_2114c1b73_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_2114c1b73_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_2114c1b73_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log {
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> __jule_result_arg0;
	jule::Slice<_2110be2cb_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U8 _21103a643_index(_21103a214_lazyBuff*, jule::I32);
inline void _21103a8b8_append(_21103a214_lazyBuff*, jule::U8);
inline jule::Str _21103ab2c_string(_21103a214_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_22a8b2423_DirEntry>>> static__21103e768_Read(jule::Str);
inline jule::VoidExceptional static__21103e977_Create(jule::Str);
inline jule::VoidExceptional static__21103eb86_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_22a8be9e6_File>> static__22a8b1411_Open(jule::Str, jule::I32, jule::I32);
inline jule::VoidExceptional static__22a8b1620_Remove(jule::Str);
inline jule::Exceptional<jule::I32> _22a8b1a71_Write(_22a8be9e6_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I32> _22a8b1d7e_Read(_22a8be9e6_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_22a8be9e6_File> static__22a8bee14_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_22a8be9e6_File>> static__22a8c01ab_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__22a8c0453_Read(jule::Str);
inline jule::VoidExceptional static__22a8c07a5_Write(jule::Str, jule::Slice<jule::U8>, jule::I32);
inline jule::Exceptional<jule::I32> _22a8c1421_WriteStr(_22a8be9e6_File*, jule::Str*);
inline jule::VoidExceptional _22a8c15ec_Close(_22a8be9e6_File*);
inline jule::Exceptional<jule::Ptr<_22a8c20e2_Status>> static__22a8b2db3_Of(jule::Str);
inline jule::Bool _22a8c24aa_IsDir(_22a8c20e2_Status*);
inline jule::Bool _22a8c271e_IsReg(_22a8c20e2_Status*);
inline jule::U32 _22a8c2983_Size(_22a8c20e2_Status*);
inline jule::U8 _2114c1ed6_Prec(_2114c1b73_Token*);
inline void _2114c73c6_Fill(_2114c700d_File*, jule::Slice<jule::U8>);
inline jule::Str _2114c763a_Dir(_2114c700d_File*);
inline jule::Str _2114c789e_Name(_2114c700d_File*);
inline jule::Str _2114c7e21_GetRow(_2114c700d_File*, jule::I32);
inline void _2114ceda1_pushErr(_2114ce851_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _2114d039b_lex(_2114ce851_lex*);
inline jule::Str _2114d06a9_id(_2114ce851_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _2114d091d_resume(_2114ce851_lex*);
inline void _2114d0b93_lexLineComment(_2114ce851_lex*, jule::Ptr<_2114c1b73_Token>*);
inline void _2114d0e18_lexRangeComment(_2114ce851_lex*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Str _2114d1226_num(_2114ce851_lex*, jule::Slice<jule::U8>*);
inline jule::Str _2114d1534_escapeSeq(_2114ce851_lex*, jule::Slice<jule::U8>*);
inline jule::Str _2114d18db_getRune(_2114ce851_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _2114d1be9_lexRune(_2114ce851_lex*, jule::Slice<jule::U8>*);
inline jule::Str _2114d1e5d_lexStr(_2114ce851_lex*);
inline void _2114d239d_newLine(_2114ce851_lex*);
inline jule::Bool _2114d2898_isOp(_2114ce851_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U32, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _2114d2c50_lexBasicOps(_2114ce851_lex*, jule::Slice<jule::U8>, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _2114d3107_lexId(_2114ce851_lex*, jule::Slice<jule::U8>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _2114d34ae_lexNum(_2114ce851_lex*, jule::Slice<jule::U8>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Ptr<_2114c1b73_Token> _2114d3723_token(_2114ce851_lex*);
inline jule::Bool _212187e98_set(_212190dc4_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _2121882a6_floatBits(_212190dc4_decimal*, _211aa1164_floatInfo*);
inline void _212191259_assign(_212190dc4_decimal*, jule::U64);
inline void _2121914ce_shift(_212190dc4_decimal*, jule::I32);
inline void _212191754_roundDown(_212190dc4_decimal*, jule::I32);
inline void _2121919c9_roundUp(_212190dc4_decimal*, jule::I32);
inline void _212191c4e_round(_212190dc4_decimal*, jule::I32);
inline jule::U64 _212191eb3_roundedInteger(_212190dc4_decimal*);
inline jule::Ptr<_2121a4c51_Const> static__2121a5180_NewI64(jule::I64);
inline jule::Ptr<_2121a4c51_Const> static__2121a5427_NewU64(jule::U64);
inline jule::Ptr<_2121a4c51_Const> static__2121a56be_NewBool(jule::Bool);
inline jule::Ptr<_2121a4c51_Const> static__2121a5966_NewStr(jule::Str);
inline jule::Ptr<_2121a4c51_Const> static__2121a5c0d_NewF64(jule::F64);
inline jule::Ptr<_2121a4c51_Const> static__2121a5e0b_NewNil(void);
inline jule::I64 _2121a6549_ReadI64(_2121a4c51_Const*);
inline jule::U64 _2121a67ad_ReadU64(_2121a4c51_Const*);
inline jule::Bool _2121a6a22_ReadBool(_2121a4c51_Const*);
inline jule::Str _2121a6c86_ReadStr(_2121a4c51_Const*);
inline jule::F64 _2121a6eea_ReadF64(_2121a4c51_Const*);
inline jule::I64 _2121a725e_AsI64(_2121a4c51_Const*);
inline jule::U64 _2121a74c3_AsU64(_2121a4c51_Const*);
inline jule::F64 _2121a7737_AsF64(_2121a4c51_Const*);
inline void _2121a79ac_SetI64(_2121a4c51_Const*, jule::I64);
inline void _2121a7c32_SetU64(_2121a4c51_Const*, jule::U64);
inline void _2121a7ea7_SetBool(_2121a4c51_Const*, jule::Bool);
inline void _2121a822c_SetStr(_2121a4c51_Const*, jule::Str);
inline void _2121a84a2_SetF64(_2121a4c51_Const*, jule::F64);
inline jule::Bool _2121a88e2_IsI64(_2121a4c51_Const*);
inline jule::Bool _2121a8b56_IsU64(_2121a4c51_Const*);
inline jule::Bool _2121a8dba_IsBool(_2121a4c51_Const*);
inline jule::Bool _2121a912e_IsStr(_2121a4c51_Const*);
inline jule::Bool _2121a9393_IsF64(_2121a4c51_Const*);
inline jule::Bool _2121a9607_IsNil(_2121a4c51_Const*);
inline jule::Bool _2121a9c23_And(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121aa031_Or(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121ab384_Add(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121ab692_Sub(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121ab9a0_Mul(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121abcad_Div(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121ac0bb_Mod(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121ac3c9_BitwiseAnd(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121ac6d7_BitwiseOr(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121ac9e5_Xor(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121acd03_Lshift(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _2121ad111_Rshift(_2121a4c51_Const*, _2121a4c51_Const);
inline jule::Bool _213c43b62_IsUnsafe(_213c43810_PtrTypeDecl*);
inline jule::Bool _213c44338_AutoSized(_213c43ed6_ArrTypeDecl*);
inline jule::Bool _213c4733b_IsNil(_213c46ed9_LitExpr*);
inline jule::Bool _213c4a22e_Unhandled(_213c49dbb_FnCallExpr*);
inline jule::Bool _213c4a493_Ignored(_213c49dbb_FnCallExpr*);
inline jule::Bool _213c5249a_IsSelf(_213c52137_ParamDecl*);
inline jule::Bool _213c537a9_IsAnon(_213c53457_FnDecl*);
inline jule::Bool _213c552a0_IsInf(_213c54e4d_Iter*);
inline jule::Bool _213c55a75_IsWhileNext(_213c55723_WhileKind*);
inline jule::Ptr<_213c6390c_FieldIns> _213c5dd7a_instance(jule::Ptr<_213c5da17_Field>);
inline jule::Ptr<_213c64402_StructIns> _213c61a4d_instance(jule::Ptr<_213c615db_Struct>);
inline jule::Ptr<_213c64402_StructIns> _213c61d28_appendInstance(_213c615db_Struct*, jule::Ptr<_213c64402_StructIns>*);
inline jule::Ptr<_213c76a0d_Fn> _213c621d0_FindMethod(_213c615db_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_213d11988_Var> _213c624dd_FindStatic(_213c615db_Struct*, jule::Str);
inline jule::Ptr<_213c5da17_Field> _213c627eb_FindField(_213c615db_Struct*, jule::Str);
inline jule::Bool _213c62b09_IsImplements(_213c615db_Struct*, jule::Ptr<_213c88b63_Trait>);
inline jule::Bool _213c62e17_IsDerives(_213c615db_Struct*, jule::Str);
inline jule::Bool _213c63225_IsUses(_213c615db_Struct*, jule::Ptr<_213c615db_Struct>);
inline jule::Ptr<_213c787e0_ParamIns> _213c75545_instance(jule::Ptr<_213c751c1_Param>);
inline jule::Bool _213c757a9_IsSelf(_213c751c1_Param*);
inline jule::Bool _213c75a1d_IsRef(_213c751c1_Param*);
inline jule::Bool _213c76e70_IsVoid(_213c76a0d_Fn*);
inline jule::Bool _213c771d4_IsMethod(_213c76a0d_Fn*);
inline jule::Bool _213c77448_IsEntryPoint(_213c76a0d_Fn*);
inline jule::Bool _213c776ac_IsInit(_213c76a0d_Fn*);
inline jule::Bool _213c77921_IsAnon(_213c76a0d_Fn*);
inline jule::Bool _213c77b85_AnyVar(_213c76a0d_Fn*);
inline jule::Ptr<_213c796ae_FnIns> _213c77de9_instanceForce(jule::Ptr<_213c76a0d_Fn>);
inline jule::Ptr<_213c796ae_FnIns> _213c7815d_instance(jule::Ptr<_213c76a0d_Fn>);
inline jule::Ptr<_213c796ae_FnIns> _213c78438_appendInstance(_213c76a0d_Fn*, jule::Ptr<_213c796ae_FnIns>*);
inline jule::Str _213c78b42_Str(_213c787e0_ParamIns*);
inline jule::Str _213c799de_Str(_213c796ae_FnIns*);
inline jule::Bool _213c79cec_Equal(jule::Ptr<_213c796ae_FnIns>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Bool _213c7a25e_EqualFn(jule::Ptr<_213c796ae_FnIns>, jule::Ptr<_213c796ae_FnIns>*);
inline jule::Bool _213c7a56c_equalTrait(jule::Ptr<_213c796ae_FnIns>, jule::Ptr<_213c796ae_FnIns>*);
inline jule::Slice<jule::Ptr<_213d88834_TypeKind>> _213c7a7d1_Types(_213c796ae_FnIns*);
inline jule::Bool _213c7aa45_IsBuiltin(_213c796ae_FnIns*);
inline jule::Bool _213c7aca9_IsAnon(_213c796ae_FnIns*);
inline jule::Bool _213c7b0b7_Same(_213c796ae_FnIns*, jule::Ptr<_213c796ae_FnIns>);
inline jule::Str _213c7b3c5_GetKindStr(_213c796ae_FnIns*, jule::Bool);
inline jule::Ptr<_213c7c618_ReferenceStack> static__213c7c827_new(void);
inline jule::I32 _213c7cc01_Len(_213c7c618_ReferenceStack*);
inline jule::Any _213c7d00e_At(_213c7c618_ReferenceStack*, jule::I32);
inline void _213c7d284_Push(_213c7c618_ReferenceStack*, jule::Any);
inline jule::Bool _1b8601768_Exist(_213c7c618_ReferenceStack*, jule::Ptr<_213c796ae_FnIns>);
inline jule::Bool _1b8614d86_Exist(_213c7c618_ReferenceStack*, jule::Ptr<_213d11988_Var>);
inline jule::Bool _1b86a6c2a_Exist(_213c7c618_ReferenceStack*, jule::Ptr<_213c64402_StructIns>);
inline jule::Bool _1b895689d_Exist(_213c7c618_ReferenceStack*, jule::Ptr<_213c88b63_Trait>);
inline void _213c839b5_pushErr(_213c8318a_symbolBuilder*, jule::Ptr<_2114c1b73_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _213c8419c_pushSuggestion(_213c8318a_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _213c84554_checkCppUseDeclPath(_213c8318a_symbolBuilder*, jule::Ptr<_213c59183_UseDecl>*, jule::Str);
inline jule::Ptr<_213cd7c7d_ImportInfo> _213c8482e_buildCppHeaderImport(_213c8318a_symbolBuilder*, jule::Ptr<_213c59183_UseDecl>*);
inline jule::Ptr<_213cd7c7d_ImportInfo> _213c84b3c_buildStdImport(_213c8318a_symbolBuilder*, jule::Ptr<_213c59183_UseDecl>*);
inline jule::Ptr<_213cd7c7d_ImportInfo> _213c84e4a_buildIdentImport(jule::Ptr<_213c8318a_symbolBuilder>, jule::Ptr<_213c59183_UseDecl>*);
inline jule::Ptr<_213cd7c7d_ImportInfo> _213c85258_buildImport(jule::Ptr<_213c8318a_symbolBuilder>, jule::Ptr<_213c59183_UseDecl>*);
inline jule::Bool _213c85566_checkDuplicateUseDecl(_213c8318a_symbolBuilder*, jule::Ptr<_213cd7c7d_ImportInfo>*);
inline void _213c85885_implImportSelections(_213c8318a_symbolBuilder*, jule::Ptr<_213cd7c7d_ImportInfo>*, jule::Ptr<_213c59183_UseDecl>*);
inline jule::Str _213c85b93_getAsLinkPath(jule::Ptr<_213c8318a_symbolBuilder>, jule::Str);
inline void _213c8605b_pushCycleError(jule::Ptr<_213c8318a_symbolBuilder>, jule::Ptr<_213c8318a_symbolBuilder>*, jule::Str, jule::Str*);
inline void _213c86424_pushCrossCycleError(jule::Ptr<_213c8318a_symbolBuilder>, jule::Ptr<_213c8318a_symbolBuilder>*, jule::Ptr<_213cd7c7d_ImportInfo>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _213c867cb_checkImportCycles(jule::Ptr<_213c8318a_symbolBuilder>, jule::Ptr<_213cd7c7d_ImportInfo>, jule::Ptr<_213c59183_UseDecl>*);
inline void _213c86bb6_checkPackageAccessibility(_213c8318a_symbolBuilder*, jule::Ptr<_213c59183_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _213c8707e_importPackage(jule::Ptr<_213c8318a_symbolBuilder>, jule::Ptr<_213cd7c7d_ImportInfo>*, jule::Ptr<_213c59183_UseDecl>*);
inline jule::Ptr<_213cd7c7d_ImportInfo> _213c8738c_importUseDecl(jule::Ptr<_213c8318a_symbolBuilder>, jule::Ptr<_213c59183_UseDecl>*);
inline void _213c87568_importUseDecls(jule::Ptr<_213c8318a_symbolBuilder>);
inline void _213c877dd_appendNode(_213c8318a_symbolBuilder*, _213c0de18_Node*);
inline void _213c879b9_appendNodes(_213c8318a_symbolBuilder*);
inline void _213c87c3e_pushDirectivePass(_213c8318a_symbolBuilder*, jule::Ptr<_213c0e314_Directive>*);
inline void _213c87e1a_appendTopDirectives(_213c8318a_symbolBuilder*);
inline void _213c880e6_build(jule::Ptr<_213c8318a_symbolBuilder>);
inline jule::Str _213c8901a_Str(_213c88b63_Trait*);
inline jule::Bool _213c89328_Equal(jule::Ptr<_213c88b63_Trait>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Bool _213c89702_IsBuiltin(_213c88b63_Trait*);
inline jule::Ptr<_213c76a0d_Fn> _213c89a10_FindMethod(_213c88b63_Trait*, jule::Str);
inline jule::Ptr<_213c76a0d_Fn> _213c8a12b_findMethodInherit(_213c88b63_Trait*, jule::Str*);
inline jule::Bool _213c8ac97_AutoExpr(_213c8a901_EnumItem*);
inline jule::Str _213c8b759_Str(_213c8b3e6_Enum*);
inline jule::Bool _213c8ba67_Equal(jule::Ptr<_213c8b3e6_Enum>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_213c8a901_EnumItem> _213c8be63_FindItem(_213c8b3e6_Enum*, jule::Str);
inline jule::Str _213c8cd21_Str(_213c8c9e1_TypeEnum*);
inline jule::Bool _213c8d12e_Equal(jule::Ptr<_213c8c9e1_TypeEnum>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_213c8c45d_TypeEnumItem> _213c8d52a_FindItem(_213c8c9e1_TypeEnum*, jule::Str);
inline jule::Str _213c8eeee_Str(_213c8eb47_comptimeRange*);
inline jule::Bool _213c9030c_Equal(jule::Ptr<_213c8eb47_comptimeRange>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Str _213c909a0_Str(_213c9063c_comptimeStructField*);
inline jule::Bool _213c90cad_Equal(jule::Ptr<_213c9063c_comptimeStructField>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_213d5ae22_Data> _213c91286__Name(jule::Ptr<_213c9063c_comptimeStructField>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213c9163d__Type(jule::Ptr<_213c9063c_comptimeStructField>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213c919e5__Public(jule::Ptr<_213c9063c_comptimeStructField>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213c91d03_subIdent(jule::Ptr<_213c9063c_comptimeStructField>, jule::Str);
inline jule::Str _213c924da_Str(_213c92166_comptimeStructFields*);
inline jule::Bool _213c927e8_Equal(jule::Ptr<_213c92166_comptimeStructFields>, jule::Ptr<_213d88834_TypeKind>);
inline void _213c92c27_ready(_213c92166_comptimeStructFields*, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
inline void _213c930e0_step(_213c92166_comptimeStructFields*, jule::I32, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
inline jule::I32 _213c93354_len(_213c92166_comptimeStructFields*);
inline jule::Str _213c939a3_Str(_213c93640_comptimeStatic*);
inline jule::Bool _213c93cb1_Equal(jule::Ptr<_213c93640_comptimeStatic>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_213d5ae22_Data> _213c94289__Name(jule::Ptr<_213c93640_comptimeStatic>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213c94641__Type(jule::Ptr<_213c93640_comptimeStatic>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213c949e8__Public(jule::Ptr<_213c93640_comptimeStatic>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213c94d06_subIdent(jule::Ptr<_213c93640_comptimeStatic>, jule::Str);
inline jule::Str _213c9a3c2_Str(_213c9a05e_comptimeStatics*);
inline jule::Bool _213c9a6d0_Equal(jule::Ptr<_213c9a05e_comptimeStatics>, jule::Ptr<_213d88834_TypeKind>);
inline void _213c9aa87_ready(_213c9a05e_comptimeStatics*, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
inline void _213c9ae50_step(_213c9a05e_comptimeStatics*, jule::I32, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
inline jule::I32 _213c9b1b4_len(_213c9a05e_comptimeStatics*);
inline jule::Str _213c9b813_Str(_213c9b4a0_comptimeEnumField*);
inline jule::Bool _213c9bb21_Equal(jule::Ptr<_213c9b4a0_comptimeEnumField>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_213d5ae22_Data> _213c9c0c7__Name(jule::Ptr<_213c9b4a0_comptimeEnumField>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213c9c3d5_subIdent(jule::Ptr<_213c9b4a0_comptimeEnumField>, jule::Str);
inline jule::Str _213c9cb44_Str(_213c9c6c1_comptimeEnumFields*);
inline jule::Bool _213c9ce52_Equal(jule::Ptr<_213c9c6c1_comptimeEnumFields>, jule::Ptr<_213d88834_TypeKind>);
inline void _213c9d309_ready(_213c9c6c1_comptimeEnumFields*, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
inline void _213c9d6c2_step(_213c9c6c1_comptimeEnumFields*, jule::I32, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
inline jule::I32 _213c9d936_len(_213c9c6c1_comptimeEnumFields*);
inline jule::Str _213c9e085_Str(_213c9dc22_comptimeParam*);
inline jule::Bool _213c9e393_Equal(jule::Ptr<_213c9dc22_comptimeParam>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_213d5ae22_Data> _213c9e87c__Name(jule::Ptr<_213c9dc22_comptimeParam>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213c9ec34__Type(jule::Ptr<_213c9dc22_comptimeParam>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca00db__Variadic(jule::Ptr<_213c9dc22_comptimeParam>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca0493__Reference(jule::Ptr<_213c9dc22_comptimeParam>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca07a1_subIdent(jule::Ptr<_213c9dc22_comptimeParam>, jule::Str);
inline jule::Str _213ca1131_Str(_213ca0cbd_comptimeParams*);
inline jule::Bool _213ca143e_Equal(jule::Ptr<_213ca0cbd_comptimeParams>, jule::Ptr<_213d88834_TypeKind>);
inline void _213ca186d_ready(_213ca0cbd_comptimeParams*, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
inline void _213ca1c36_step(_213ca0cbd_comptimeParams*, jule::I32, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
inline jule::I32 _213ca1e9a_len(_213ca0cbd_comptimeParams*);
inline jule::Str _213ca25e9_Str(_213ca2286_comptimeTypeInfos*);
inline jule::Bool _213ca2907_Equal(jule::Ptr<_213ca2286_comptimeTypeInfos>, jule::Ptr<_213d88834_TypeKind>);
inline void _213ca2d36_ready(_213ca2286_comptimeTypeInfos*, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
inline void _213ca31ee_step(_213ca2286_comptimeTypeInfos*, jule::I32, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
inline jule::I32 _213ca3463_len(_213ca2286_comptimeTypeInfos*);
inline jule::Str _213ca3ab2_Str(_213ca374e_comptimeTypeInfo*);
inline jule::Bool _213ca3dc0_Equal(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_213d5ae22_Data> _213ca44b9__Str(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca4871__Kind(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca4c28__Bits(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca50d0__Elem(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca5487__Size(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca583e__Key(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca5be6__Value(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca609d__Fields(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca6455__Statics(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca680c__Public(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca6bb4__Binded(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca706b__Ordered(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca7423__Comparable(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca77ca__Mutable(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca7b82__Types(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca8039__Exceptional(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca83e1__CanNil(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca8798__Result(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca8b50__Params(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213ca8e5d_subIdent(jule::Ptr<_213ca374e_comptimeTypeInfo>, jule::Str);
inline jule::Str _213ca95ac_Str(_213ca9249_comptimeValue*);
inline jule::Bool _213ca98ba_Equal(jule::Ptr<_213ca9249_comptimeValue>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_213d5ae22_Data> _213ca9dc6__Unwrap(jule::Ptr<_213ca9249_comptimeValue>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213caa27d__Type(jule::Ptr<_213ca9249_comptimeValue>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213caa635__Lvalue(jule::Ptr<_213ca9249_comptimeValue>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213caa9dc__Mutable(jule::Ptr<_213ca9249_comptimeValue>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213caad94__Const(jule::Ptr<_213ca9249_comptimeValue>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213cab24b__Field(jule::Ptr<_213ca9249_comptimeValue>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213cab559_subIdent(jule::Ptr<_213ca9249_comptimeValue>, jule::Str);
inline jule::Str _213cabba8_Str(_213cab845_comptimeFiles*);
inline jule::Bool _213cabeb6_Equal(jule::Ptr<_213cab845_comptimeFiles>, jule::Ptr<_213d88834_TypeKind>);
inline void _213cac3e5_ready(_213cab845_comptimeFiles*, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
inline void _213cac7ad_step(_213cab845_comptimeFiles*, jule::I32, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
inline jule::I32 _213caca22_len(_213cab845_comptimeFiles*);
inline jule::Str _213cad171_Str(_213cacd0d_comptimeFile*);
inline jule::Bool _213cad47e_Equal(jule::Ptr<_213cacd0d_comptimeFile>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_213d5ae22_Data> _213cad957__Path(jule::Ptr<_213cacd0d_comptimeFile>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213cadd0e__Name(jule::Ptr<_213cacd0d_comptimeFile>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213cae1b6__Dir(jule::Ptr<_213cacd0d_comptimeFile>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213cae4c4_subIdent(jule::Ptr<_213cacd0d_comptimeFile>, jule::Str);
inline jule::Fn<jule::Bool(jule::Ptr<_213ce1050_Sema>*,jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>*)> _213cb2054_readyFn(jule::Ptr<_213cb1b69_constraintChecker>);
inline jule::Bool _213cb22b8_readyFi(jule::Ptr<_213cb1b69_constraintChecker>);
inline jule::Bool _213cb252c_readySi(jule::Ptr<_213cb1b69_constraintChecker>);
inline jule::Bool _213cb2791_ready(jule::Ptr<_213cb1b69_constraintChecker>);
inline jule::Bool _213cb2a05_check(jule::Ptr<_213cb1b69_constraintChecker>);
inline jule::Bool _213cb3dbe_IsTraitImpl(_213cb3a17_Impl*);
inline jule::Bool _213cb4133_IsStructImpl(_213cb3a17_Impl*);
inline jule::Ptr<_213cd7c7d_ImportInfo> _213cc0b23_SelectPackage(_213cc06a0_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)>);
inline jule::Ptr<_213d11988_Var> _213cc0eca_FindVar(_213cc06a0_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_213d87adb_TypeAlias> _213cc1382_FindTypeAlias(_213cc06a0_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_213c615db_Struct> _213cc1739_FindStruct(_213cc06a0_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_213c76a0d_Fn> _213cc1ae1_FindFn(_213cc06a0_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_213c88b63_Trait> _213cc1dee_FindTrait(_213cc06a0_scopeChecker*, jule::Str);
inline jule::Ptr<_213c8b3e6_Enum> _213cc220c_FindEnum(_213cc06a0_scopeChecker*, jule::Str);
inline jule::Ptr<_213c8c9e1_TypeEnum> _213cc251a_FindTypeEnum(_213cc06a0_scopeChecker*, jule::Str);
inline jule::Bool _213cc284a_isUnsafe(jule::Ptr<_213cc06a0_scopeChecker>);
inline jule::Bool _213cc2aae_isRoot(_213cc06a0_scopeChecker*);
inline void _213cc2c8a_stop(_213cc06a0_scopeChecker*);
inline jule::Bool _213cc2eee_stopped(_213cc06a0_scopeChecker*);
inline jule::Bool _213cc3263_isDeferred(jule::Ptr<_213cc06a0_scopeChecker>);
inline jule::Ptr<_213cc06a0_scopeChecker> _213cc34c7_getRoot(jule::Ptr<_213cc06a0_scopeChecker>);
inline jule::Ptr<_213cc06a0_scopeChecker> _213cc373b_getHardRoot(jule::Ptr<_213cc06a0_scopeChecker>);
inline jule::Ptr<_213cbb2b1_Label> _213cc3a49_findLabel(_213cc06a0_scopeChecker*, jule::Str);
inline jule::Ptr<_213cbe418_scopeLabel> _213cc3d57_findLabelScope(jule::Ptr<_213cc06a0_scopeChecker>, jule::Str);
inline jule::Ptr<_213cbe418_scopeLabel> _213cc4165_findLabelAll(_213cc06a0_scopeChecker*, jule::Str);
inline jule::Bool _213cc451c_isDuplicatedIdent(_213cc06a0_scopeChecker*, jule::Uintptr, jule::Str);
inline void _213cc4792_checkVarDecl(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c54436_VarDecl>);
inline void _213cc4a17_checkTypeAliasDecl(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c57c97_TypeAliasDecl>);
inline jule::Ptr<_213cb8a72_Scope> _213cc4c7b_getChild(_213cc06a0_scopeChecker*);
inline void _213cc5144_checkChildSsc(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c51961_ScopeTree>*, jule::Ptr<_213cb8a72_Scope>*, jule::Ptr<_213cc06a0_scopeChecker>*);
inline jule::Ptr<_213cb8a72_Scope> _213cc54eb_checkChildSc(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c51961_ScopeTree>*, jule::Ptr<_213cc06a0_scopeChecker>*);
inline jule::Ptr<_213cb8a72_Scope> _213cc5809_checkChild(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c51961_ScopeTree>*);
inline void _213cc5a7e_checkAnonScope(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c51961_ScopeTree>);
inline void _213cc5d9d_processErrorCall(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c72b6e_BuiltinErrorCallExprModel>*, jule::Ptr<_2114c1b73_Token>);
inline void _213cc6123_checkExpr(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c45ea5_Expr>);
inline jule::Ptr<_213cb8e6d_If> _213cc6431_checkIf(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c56c96_If>);
inline jule::Ptr<_213cb9259_Else> _213cc673e_checkElse(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c5714d_Else>);
inline void _213cc69b4_checkConditional(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c575c1_Conditional>);
inline void _213cc6e26_checkIterScopeSsc(jule::Ptr<_213cc06a0_scopeChecker>, jule::Uintptr, jule::Ptr<_213c51961_ScopeTree>, jule::Ptr<_213cb8a72_Scope>*, jule::Ptr<_213cc06a0_scopeChecker>);
inline jule::Ptr<_213cb8a72_Scope> _213cc7377_checkIterScopeSc(jule::Ptr<_213cc06a0_scopeChecker>, jule::Uintptr, jule::Ptr<_213c51961_ScopeTree>, jule::Ptr<_213cc06a0_scopeChecker>);
inline jule::Ptr<_213cb8a72_Scope> _213cc772e_checkIterScope(jule::Ptr<_213cc06a0_scopeChecker>, jule::Uintptr, jule::Ptr<_213c51961_ScopeTree>*);
inline void _213cc79a4_checkInfIter(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c54e4d_Iter>*);
inline void _213cc7c29_checkWhileIter(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c54e4d_Iter>*);
inline void _213cc80e2_checkComptimeRangeIter(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c54e4d_Iter>*, jule::Ptr<_213cba722_RangeIter>*, jule::Ptr<_213d5ae22_Data>*);
inline void _213cc8367_checkRangeIter(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c54e4d_Iter>*);
inline void _213cc85dc_checkIter(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c54e4d_Iter>);
inline jule::Bool _213cc88ea_checkValidContLabel(jule::Ptr<_213cc06a0_scopeChecker>, jule::Uintptr);
inline jule::Bool _213cc8c08_checkValidBreakLabel(jule::Ptr<_213cc06a0_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_213cbab1d_ContSt> _213cc9016_checkContValidScope(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c56823_ContSt>);
inline void _213cc928b_checkCont(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c56823_ContSt>);
inline void _213cc9511_checkLabel(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c4e178_LabelSt>);
inline void _213cc9786_pushGoto(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c4e530_GotoSt>);
inline void _213cc9a0b_checkPostfix(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c50465_AssignSt>);
inline jule::Bool _213cc9d19_isNewAssignIdent(_213cc06a0_scopeChecker*, jule::Str);
inline void _213cca08e_removeInteriorMutRisk(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213d5ae22_Data>*);
inline jule::Bool _213cca4e0_checkStructureAssignOp(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c64402_StructIns>*, jule::Ptr<_213c50465_AssignSt>*, jule::Ptr<_213d5ae22_Data>*);
inline void _213cca765_checkSingleAssign(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c50465_AssignSt>*);
inline void _213ccac93_processEndPartOfMultiAssign(_213cc06a0_scopeChecker*, jule::Ptr<_213cbc27e_MultiAssign>*, jule::Ptr<_213c50465_AssignSt>*, jule::Ptr<_213c4ee26_AssignLeft>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*);
inline void _213ccb029_checkMultiAssign(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c50465_AssignSt>*);
inline void _213ccb29e_singleDeclAssign(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c50465_AssignSt>*);
inline void _213ccb524_checkAssignSt(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c50465_AssignSt>);
inline jule::Ptr<_213cb8a72_Scope> _213ccb8cb_checkCaseScope(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213cbd3d4_Case>*, jule::Ptr<_213c51961_ScopeTree>*);
inline jule::Ptr<_213cbd3d4_Case> _213ccbdc6_checkCase(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213cbc889_Match>, jule::I32, jule::Ptr<_213c5821a_Case>, jule::Ptr<_213d5ae22_Data>);
inline void _213ccc28e_checkCases(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c588e1_MatchCase>*, jule::Ptr<_213cbc889_Match>, jule::Ptr<_213d5ae22_Data>);
inline jule::Ptr<_213cbd3d4_Case> _213ccc646_checkDefault(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213cbc889_Match>, jule::Ptr<_213c5714d_Else>);
inline void _213ccc965_checkComptimePanic(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_2114c1b73_Token>, jule::Ptr<_213cb8a72_Scope>*);
inline void _213cccc84_processConstMatch(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213cbc889_Match>*, jule::Ptr<_213c588e1_MatchCase>*);
inline void _213ccd009_checkTypeMatch(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c588e1_MatchCase>*);
inline void _213ccd27e_checkCommonMatch(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c588e1_MatchCase>*);
inline void _213ccd504_checkMatch(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c588e1_MatchCase>);
inline void _213ccd779_checkFall(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c4e81b_FallSt>);
inline jule::Ptr<_213cbaec5_BreakSt> _213ccda87_checkBreakWithLabel(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c5646b_BreakSt>);
inline jule::Ptr<_213cbaec5_BreakSt> _213ccdd95_checkPlainBreak(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c5646b_BreakSt>);
inline void _213cce11a_checkBreak(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c5646b_BreakSt>);
inline void _213cce390_checkRet(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c547dd_RetSt>);
inline void _213cce615_checkUseExpr(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c46846_UseExpr>);
inline void _213cce88a_checkNode(jule::Ptr<_213cc06a0_scopeChecker>, jule::Any*);
inline void _213ccea66_checkResult(jule::Ptr<_213cc06a0_scopeChecker>);
inline void _213ccec42_checkTree(jule::Ptr<_213cc06a0_scopeChecker>);
inline void _213cd0061_checkGoto(_213cc06a0_scopeChecker*, jule::Ptr<_213cbe88b_scopeGoto>*, jule::Ptr<_213cbe418_scopeLabel>*);
inline void _213cd023c_checkGotos(_213cc06a0_scopeChecker*);
inline void _213cd0418_checkLabels(_213cc06a0_scopeChecker*);
inline void _213cd05e4_checkVars(_213cc06a0_scopeChecker*);
inline void _213cd07c0_checkAliases(_213cc06a0_scopeChecker*);
inline void _213cd0ade_check(jule::Ptr<_213cc06a0_scopeChecker>, jule::Ptr<_213c51961_ScopeTree>*, jule::Ptr<_213cb8a72_Scope>*);
inline jule::Ptr<_213cc06a0_scopeChecker> _213cd0d53_newChildChecker(jule::Ptr<_213cc06a0_scopeChecker>);
inline void _213cd2096_checkCdef(_213cd1b9a_directiveChecker*, jule::Ptr<_213c0e314_Directive>*);
inline void _213cd231b_checkTypedef(_213cd1b9a_directiveChecker*, jule::Ptr<_213c0e314_Directive>*);
inline void _213cd2591_checkDerive(_213cd1b9a_directiveChecker*, jule::Ptr<_213c0e314_Directive>*);
inline void _213cd2816_checkNamespace(_213cd1b9a_directiveChecker*, jule::Ptr<_213c0e314_Directive>*);
inline void _213cd2a8b_checkDeprecated(_213cd1b9a_directiveChecker*, jule::Ptr<_213c0e314_Directive>*);
inline void _213cd2d11_checkTest(_213cd1b9a_directiveChecker*, jule::Ptr<_213c0e314_Directive>*);
inline void _213cd3086_checkDirective(_213cd1b9a_directiveChecker*, jule::Ptr<_213c0e314_Directive>*);
inline void _213cd3262_check(_213cd1b9a_directiveChecker*);
inline jule::Ptr<_213cd7c7d_ImportInfo> _213cd8245_SelectPackage(_213cd7c7d_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)>);
inline jule::Ptr<_213d11988_Var> _213cd85ec_FindVar(_213cd7c7d_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_213d87adb_TypeAlias> _213cd89a4_FindTypeAlias(_213cd7c7d_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_213c615db_Struct> _213cd8d5b_FindStruct(_213cd7c7d_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_213c76a0d_Fn> _213cd9213_FindFn(_213cd7c7d_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_213c88b63_Trait> _213cd9521_FindTrait(_213cd7c7d_ImportInfo*, jule::Str);
inline jule::Ptr<_213c8b3e6_Enum> _213cd982e_FindEnum(_213cd7c7d_ImportInfo*, jule::Str);
inline jule::Ptr<_213c8c9e1_TypeEnum> _213cd9b3c_FindTypeEnum(_213cd7c7d_ImportInfo*, jule::Str);
inline jule::Bool _213cda027_isLookupable(_213cd7c7d_ImportInfo*, jule::Str);
inline jule::Bool _213cda335_existIdent(_213cd7c7d_ImportInfo*, jule::Str);
inline jule::Bool _213cda5bb_isAccessibleViaSelection(_213cd7c7d_ImportInfo*);
inline jule::Ptr<_213cd7c7d_ImportInfo> _213cdad3b_SelectPackage(_213cda8b8_Package*, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)>);
inline jule::Ptr<_213d11988_Var> _213cdb1e3_FindVar(_213cda8b8_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_213d87adb_TypeAlias> _213cdb59a_FindTypeAlias(_213cda8b8_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_213c615db_Struct> _213cdb952_FindStruct(_213cda8b8_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_213c76a0d_Fn> _213cdbd09_FindFn(_213cda8b8_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_213c88b63_Trait> _213cdc117_FindTrait(_213cda8b8_Package*, jule::Str);
inline jule::Ptr<_213c8b3e6_Enum> _213cdc425_FindEnum(_213cda8b8_Package*, jule::Str);
inline jule::Ptr<_213c8c9e1_TypeEnum> _213cdc733_FindTypeEnum(_213cda8b8_Package*, jule::Str);
inline jule::Ptr<_213ca374e_comptimeTypeInfo> _213ce0978_pushComptimeTypeInfo(_213ce0538_commonSemaMeta*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Ptr<_213cd7c7d_ImportInfo> _213ce14c3_SelectPackage(_213ce1050_Sema*, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)>);
inline jule::Ptr<_213d11988_Var> _213ce187a_FindVar(_213ce1050_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_213d87adb_TypeAlias> _213ce1c32_FindTypeAlias(_213ce1050_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_213c615db_Struct> _213ce20d9_FindStruct(_213ce1050_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_213c76a0d_Fn> _213ce2491_FindFn(_213ce1050_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_213c88b63_Trait> _213ce279e_FindTrait(_213ce1050_Sema*, jule::Str);
inline jule::Ptr<_213c8b3e6_Enum> _213ce2aac_FindEnum(_213ce1050_Sema*, jule::Str);
inline jule::Ptr<_213c8c9e1_TypeEnum> _213ce2dba_FindTypeEnum(_213ce1050_Sema*, jule::Str);
inline jule::Bool _213ce3294_isFlag(_213ce1050_Sema*, jule::I32);
inline void _213ce3519_setCurrentFile(_213ce1050_Sema*, jule::Ptr<_213d56417_SymbolTable>);
inline void _213ce38d2_pushErr(_213ce1050_Sema*, jule::Ptr<_2114c1b73_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _213ce3c01_pushSuggestion(_213ce1050_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _213ce40a8_isAccessibleDefine(_213ce1050_Sema*, jule::Bool, jule::Ptr<_2114c1b73_Token>);
inline jule::Bool _213ce4509_isDuplicatedIdent(_213ce1050_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _213ce4828_checkDirectives(jule::Ptr<_213ce1050_Sema>, jule::Slice<jule::Ptr<_213c0e314_Directive>>*, jule::Any);
inline jule::Bool _213ce4c79_checkGenericQuantity(_213ce1050_Sema*, jule::I32, jule::I32, jule::Ptr<_2114c1b73_Token>);
inline jule::Bool _213ce5153_isDuplicatedImportSelection(_213ce1050_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _213ce551b_getImportDef(_213ce1050_Sema*, jule::Str, jule::Ptr<_213cd7c7d_ImportInfo>*);
inline jule::Bool _1b8279a95_checkImportSelection(_213ce1050_Sema*, jule::Ptr<_2114c1b73_Token>*, jule::Ptr<_213d11988_Var>*);
inline jule::Bool _1b827d703_checkImportSelection(_213ce1050_Sema*, jule::Ptr<_2114c1b73_Token>*, jule::Ptr<_213d87adb_TypeAlias>*);
inline jule::Bool _1b828230b_checkImportSelection(_213ce1050_Sema*, jule::Ptr<_2114c1b73_Token>*, jule::Ptr<_213c615db_Struct>*);
inline jule::Bool _1b82861cd_checkImportSelection(_213ce1050_Sema*, jule::Ptr<_2114c1b73_Token>*, jule::Ptr<_213c88b63_Trait>*);
inline jule::Bool _1b8289d08_checkImportSelection(_213ce1050_Sema*, jule::Ptr<_2114c1b73_Token>*, jule::Ptr<_213c8b3e6_Enum>*);
inline jule::Bool _1b828d933_checkImportSelection(_213ce1050_Sema*, jule::Ptr<_2114c1b73_Token>*, jule::Ptr<_213c8c9e1_TypeEnum>*);
inline jule::Bool _1b829255d_checkImportSelection(_213ce1050_Sema*, jule::Ptr<_2114c1b73_Token>*, jule::Ptr<_213c76a0d_Fn>*);
inline jule::Bool _213ce5c03_checkImportSelectedSelections(_213ce1050_Sema*, jule::Ptr<_213cd7c7d_ImportInfo>*);
inline jule::Bool _1b8296540_checkImportsAllSelectionsFromCollection(_213ce1050_Sema*, jule::Slice<jule::Ptr<_213d11988_Var>>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _1b82998c8_checkImportsAllSelectionsFromCollection(_213ce1050_Sema*, jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _1b829a038_checkImportsAllSelectionsFromCollection(_213ce1050_Sema*, jule::Slice<jule::Ptr<_213c615db_Struct>>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _1b829cada_checkImportsAllSelectionsFromCollection(_213ce1050_Sema*, jule::Slice<jule::Ptr<_213c76a0d_Fn>>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _1b829e15d_checkImportsAllSelectionsFromCollection(_213ce1050_Sema*, jule::Slice<jule::Ptr<_213c88b63_Trait>>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _1b82a32e9_checkImportsAllSelectionsFromCollection(_213ce1050_Sema*, jule::Slice<jule::Ptr<_213c8b3e6_Enum>>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _1b82a5d9b_checkImportsAllSelectionsFromCollection(_213ce1050_Sema*, jule::Slice<jule::Ptr<_213c8c9e1_TypeEnum>>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _213ce642e_checkImportAllSelections(_213ce1050_Sema*, jule::Ptr<_213cd7c7d_ImportInfo>*);
inline jule::Bool _213ce674d_checkImportSelections(_213ce1050_Sema*, jule::Ptr<_213cd7c7d_ImportInfo>*);
inline jule::Bool _213ce6a5b_isUseAliasDuplication(_213ce1050_Sema*, jule::Ptr<_213cd7c7d_ImportInfo>*);
inline jule::Bool _213ce6d69_checkImport(_213ce1050_Sema*, jule::Ptr<_213cd7c7d_ImportInfo>*);
inline void _213ce7045_checkImports(_213ce1050_Sema*);
inline void _213ce7221_implFileImpls(jule::Ptr<_213ce1050_Sema>);
inline void _213ce73ec_implImpls(jule::Ptr<_213ce1050_Sema>);
inline void _213ce75c8_checkEnums(jule::Ptr<_213ce1050_Sema>);
inline void _213ce77a4_checkFileInherits(jule::Ptr<_213ce1050_Sema>);
inline void _213ce7980_checkInherits(jule::Ptr<_213ce1050_Sema>);
inline _213d99b75_typeChecker _213ce7dd1_typeChecker(jule::Ptr<_213ce1050_Sema>, jule::Trait<_213da6b60_Lookup>, jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>, jule::Ptr<_213d98c95_referencer>);
inline jule::Ptr<_213d88834_TypeKind> _213ce83cb_buildTypeWithRefers(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c41d2a_TypeDecl>*, jule::Trait<_213da6b60_Lookup>, jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>, jule::Ptr<_213d98c95_referencer>);
inline jule::Bool _213ce88c6_checkTypeWithRefers(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d906d7_TypeSymbol>*, jule::Trait<_213da6b60_Lookup>, jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>, jule::Ptr<_213d98c95_referencer>);
inline jule::Ptr<_213cb1b69_constraintChecker> _213ce8b3a_constraintChecker(jule::Ptr<_213ce1050_Sema>);
inline jule::Bool _213ce8ee2_checkType(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d906d7_TypeSymbol>*, jule::Trait<_213da6b60_Lookup>);
inline jule::Ptr<_213d88834_TypeKind> _213ce9443_buildTypeWithGenerics(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c41d2a_TypeDecl>*, jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>, jule::Ptr<_213c7c618_ReferenceStack>);
inline jule::Ptr<_213d88834_TypeKind> _213ce9a5e_selectType(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c41d2a_TypeDecl>*);
inline jule::Ptr<_213d5c990_Eval> _213ce9eb0_evalpd(jule::Ptr<_213ce1050_Sema>, jule::Trait<_213da6b60_Lookup>, jule::Ptr<_213d88834_TypeKind>, jule::Ptr<_213d11988_Var>);
inline jule::Ptr<_213d5c990_Eval> _213cea367_evalp(jule::Ptr<_213ce1050_Sema>, jule::Trait<_213da6b60_Lookup>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_213d5c990_Eval> _213cea675_eval(jule::Ptr<_213ce1050_Sema>, jule::Trait<_213da6b60_Lookup>);
inline jule::Bool _213ceab70_checkAssignType(jule::Ptr<_213ce1050_Sema>, jule::Bool, jule::Ptr<_213d88834_TypeKind>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_2114c1b73_Token>);
inline jule::Bool _213ceb0c1_checkTypeCompatibility(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d88834_TypeKind>*, jule::Ptr<_213d88834_TypeKind>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Ptr<_213d88834_TypeKind> _213ceb544_buildNonGenericTypeKind(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c41d2a_TypeDecl>*, jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>>*, jule::Slice<jule::Ptr<_213d88834_TypeKind>>*);
inline jule::Bool _213ceb92e_buildFnNonGenericTypeKinds(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c796ae_FnIns>*, jule::Slice<jule::Ptr<_213d88834_TypeKind>>*);
inline jule::Ptr<_213c796ae_FnIns> _213cebc4d_getTraitCheckFnKind(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c76a0d_Fn>*);
inline jule::Bool _213cec19e_checkConstraintsFn(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c796ae_FnIns>*, jule::Ptr<_2114c1b73_Token>*, jule::Ptr<_213c796ae_FnIns>);
inline jule::Bool _213cec600_checkConstraintsStruct(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c64402_StructIns>*, jule::Ptr<_2114c1b73_Token>*, jule::Ptr<_213c64402_StructIns>);
inline jule::Bool _213cec9a7_fnEnvironment(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c796ae_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_213ce1050_Sema>*,jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>*)>);
inline void _213cecc2c_checkFnParamKind(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c787e0_ParamIns>*);
inline jule::Bool _213ced03a_reloadFnInsTypes(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c796ae_FnIns>);
inline jule::Bool _213ced4ad_checkRefValidityForInitExpr(jule::Ptr<_213ce1050_Sema>, jule::Bool, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _213ced7cc_isMutRiskyStruct(_213ce1050_Sema*, jule::Ptr<_213c64402_StructIns>*);
inline jule::Bool _213cedd93_checkValidityForInitExpr(jule::Ptr<_213ce1050_Sema>, jule::Bool, jule::Bool, jule::Ptr<_213d88834_TypeKind>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _213cee25b_checkTypeAliasDeclKind(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d87adb_TypeAlias>*, jule::Trait<_213da6b60_Lookup>);
inline void _213cee57a_checkTypeAliasDecl(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d87adb_TypeAlias>*, jule::Trait<_213da6b60_Lookup>);
inline void _213cee800_checkTypeAliasDeclDup(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d87adb_TypeAlias>*);
inline jule::Bool _213ceea64_checkTypeAliasDecls(jule::Ptr<_213ce1050_Sema>);
inline void _1b83382b3_checkEnumItemsDup(_213ce1050_Sema*, jule::Slice<jule::Ptr<_213c8a901_EnumItem>>);
inline void _1b834280b_checkEnumItemsDup(_213ce1050_Sema*, jule::Slice<jule::Ptr<_213c8c45d_TypeEnumItem>>);
inline void _213d0005e_checkEnumItemsStr(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c8b3e6_Enum>*);
inline void _1b831e651_checkEnumItemInt(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c8b3e6_Enum>*, jule::Ptr<_213d91089_Prim>*, jule::Ptr<_213c8a901_EnumItem>*, jule::U64*);
inline void _1b832be88_checkEnumItemInt(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c8b3e6_Enum>*, jule::Ptr<_213d91089_Prim>*, jule::Ptr<_213c8a901_EnumItem>*, jule::I64*);
inline void _1b831acce_checkEnumItemsInt1(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d91089_Prim>*, jule::Ptr<_213c8b3e6_Enum>*);
inline void _1b8326735_checkEnumItemsInt1(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d91089_Prim>*, jule::Ptr<_213c8b3e6_Enum>*);
inline void _213d00b0e_checkEnumItemsInt(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c8b3e6_Enum>*);
inline void _213d00d84_checkEnumDecl(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c8b3e6_Enum>*);
inline void _213d01109_checkTypeEnumDecl(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c8c9e1_TypeEnum>*);
inline jule::Bool _213d0136d_checkEnumDecls(jule::Ptr<_213ce1050_Sema>);
inline jule::Bool _213d015d2_checkTypeEnumDecls(jule::Ptr<_213ce1050_Sema>);
inline jule::Bool _213d018e0_checkDeclGenerics(_213ce1050_Sema*, jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>>*);
inline jule::Bool _213d01bed_checkFnDeclParamsDup(_213ce1050_Sema*, jule::Ptr<_213c76a0d_Fn>*);
inline jule::Bool _213d0200b_checkFnDeclResultDup(_213ce1050_Sema*, jule::Ptr<_213c76a0d_Fn>*);
inline jule::Bool _213d02319_checkFnVariadicParam(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c76a0d_Fn>*);
inline void _213d0258e_checkFnDeclPrototype(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c76a0d_Fn>*);
inline jule::Bool _213d029e0_catchTraitInheritCycle(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c88b63_Trait>, jule::Ptr<_213c88b63_Trait>, jule::Str*);
inline jule::Bool _213d02d20__checkTraitDeclInherits(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c88b63_Trait>*);
inline void _213d030a6_checkTraitDeclInherits(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c88b63_Trait>*);
inline void _213d0332b_checkTraitDeclMethod(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c76a0d_Fn>*);
inline void _213d035a1_checkTraitDeclMethods(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c88b63_Trait>*);
inline void _213d03826_checkTraitDecl(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c88b63_Trait>*);
inline jule::Bool _213d03a8a_checkTraitDecls(jule::Ptr<_213ce1050_Sema>);
inline jule::Bool _213d03e42_checkTraitImplMethods(_213ce1050_Sema*, jule::Ptr<_213c88b63_Trait>*, jule::Ptr<_213cb3a17_Impl>*);
inline jule::Bool _213d042e9_implToStruct(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c615db_Struct>*, jule::Ptr<_213cb3a17_Impl>*);
inline void _213d0456e_implTrait(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213cb3a17_Impl>*);
inline void _213d047e4_implStruct(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213cb3a17_Impl>*);
inline void _213d04a69_implImpl(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213cb3a17_Impl>*);
inline void _213d04d88_checkVarDecl(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d11988_Var>*, jule::Trait<_213da6b60_Lookup>);
inline void _213d0510d_checkGlobalVarDecl(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d11988_Var>*);
inline jule::Bool _213d05372_checkGlobalDecls(jule::Ptr<_213ce1050_Sema>);
inline jule::Bool _213d05729_checkStructTraitImpl(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c615db_Struct>*, jule::Ptr<_213c88b63_Trait>*);
inline jule::Bool _213d05a37_checkStructImpls(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c615db_Struct>*);
inline jule::Bool _213d05d45_checkStructFields(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c615db_Struct>*);
inline void _213d060ba_checkStructDecl(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c615db_Struct>*);
inline jule::Bool _213d0632e_checkStructDecls(jule::Ptr<_213ce1050_Sema>);
inline void _213d065a4_checkAnonFuncDecl(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c76a0d_Fn>*);
inline void _213d06829_checkFuncDecl(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c76a0d_Fn>*);
inline jule::Bool _213d06b37_checkFuncDeclsBy(jule::Ptr<_213ce1050_Sema>, jule::Slice<jule::Ptr<_213c76a0d_Fn>>*);
inline jule::Bool _213d06d9b_checkFuncDecls(jule::Ptr<_213ce1050_Sema>);
inline void _213d07264_pushCycleError(_213ce1050_Sema*, jule::Str*, jule::Str*, jule::Str*);
inline jule::Bool _213d076b5_checkCrossCycle(_213ce1050_Sema*, jule::Ptr<_213c615db_Struct>*, jule::Ptr<_213c615db_Struct>*, jule::Str*);
inline jule::Bool _213d07b38_checkStructDeriveIllegalCycles(_213ce1050_Sema*, jule::Str, jule::Ptr<_213c615db_Struct>*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d07e79_checkStructInsDeriveClone(_213ce1050_Sema*, jule::Ptr<_213c64402_StructIns>);
inline void _213d08166_checkPackageDecls(jule::Ptr<_213ce1050_Sema>);
inline void _213d084a7_checkDataForTypeInference(_213ce1050_Sema*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_2114c1b73_Token>*);
inline void _213d0873d_checkVarValue(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d11988_Var>*);
inline void _213d08a5c_evalVarValue(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d11988_Var>*, jule::Trait<_213da6b60_Lookup>);
inline void _213d08d7b_checkVar(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213d11988_Var>*, jule::Trait<_213da6b60_Lookup>);
inline void _213d09057_checkGlobals(jule::Ptr<_213ce1050_Sema>);
inline jule::Ptr<_213c796ae_FnIns> _213d0940e_readyToCheckFn(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c64402_StructIns>*, jule::Ptr<_213c76a0d_Fn>*);
inline void _213d0972d_checkTypeMethod(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c64402_StructIns>*, jule::Ptr<_213c76a0d_Fn>*);
inline jule::Ptr<_213c796ae_FnIns> _213d09b7e_checkStructInsOp(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c64402_StructIns>*, jule::Ptr<_213c76a0d_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_213c76a0d_Fn>)>);
inline jule::Bool _213d0a036_checkStructEnv(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c64402_StructIns>*, jule::Ptr<_2114c1b73_Token>);
inline jule::Bool _213d0a3dd_precheckStructIns(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c64402_StructIns>*, jule::Ptr<_2114c1b73_Token>);
inline void _213d0a663_checkStructIns(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c64402_StructIns>*);
inline void _213d0a8d8_checkTypeStruct(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c615db_Struct>*);
inline void _213d0aab4_checkStructTypes(jule::Ptr<_213ce1050_Sema>);
inline void _213d0ad5b_checkStructInsOperators(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c64402_StructIns>);
inline void _213d0b0e2_precheckStructType(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c615db_Struct>*);
inline void _213d0b2bd_precheckStructTypes(jule::Ptr<_213ce1050_Sema>);
inline void _213d0b543_checkRets(_213ce1050_Sema*, jule::Ptr<_213c796ae_FnIns>*);
inline void _213d0b862_checkFnInsSc(_213ce1050_Sema*, jule::Ptr<_213c796ae_FnIns>*, jule::Ptr<_213cc06a0_scopeChecker>*);
inline void _213d0bb81_checkFnInsCaller(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c796ae_FnIns>*, jule::Ptr<_2114c1b73_Token>);
inline void _213d0be06_checkFnIns(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c796ae_FnIns>*);
inline void _213d0c17b_checkFunc(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c76a0d_Fn>*);
inline void _213d0c401_checkTestFn(_213ce1050_Sema*, jule::Ptr<_213c796ae_FnIns>*);
inline void _213d0c676_precheckFunc(jule::Ptr<_213ce1050_Sema>, jule::Ptr<_213c76a0d_Fn>*);
inline void _213d0c852_precheckFuncs(jule::Ptr<_213ce1050_Sema>);
inline void _213d0ca2d_checkFuncs(jule::Ptr<_213ce1050_Sema>);
inline void _213d0cc09_checkPackageTypes(jule::Ptr<_213ce1050_Sema>);
inline void _213d0cdd5_setFileSemaFields(jule::Ptr<_213ce1050_Sema>);
inline void _213d0d0b1_setSemaFields(jule::Ptr<_213ce1050_Sema>);
inline void _213d0d336_check(jule::Ptr<_213ce1050_Sema>, jule::Slice<jule::Ptr<_213d56417_SymbolTable>>*);
inline _213d0d732_missingRetChecker static__213d0daea_new(void);
inline jule::Bool _213d0ddc5_checkConditional(_213d0d732_missingRetChecker*, jule::Ptr<_213cb95cd_Conditional>);
inline jule::Bool _213d0e1d3_checkMatch(_213d0d732_missingRetChecker*, jule::Ptr<_213cbc889_Match>);
inline jule::Bool _213d0e4e1_checkInfIter(_213d0d732_missingRetChecker*, jule::Ptr<_213cb98b9_InfIter>);
inline jule::Bool _213d0e7ee_checkScope(_213d0d732_missingRetChecker*, jule::Ptr<_213cb8a72_Scope>);
inline jule::Bool _213d0eb0c_check(_213d0d732_missingRetChecker*, jule::Ptr<_213cb8a72_Scope>);
inline jule::Bool _213d11d0c_IsInitialized(_213d11988_Var*);
inline jule::Bool _213d12071_IsTypeInferred(_213d11988_Var*);
inline jule::Bool _213d122d5_untypedConstant(_213d11988_Var*);
inline jule::Bool static__213d12d63_Dispose(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d1310a_Str(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d1344b_logical(jule::Ptr<_213c76a0d_Fn>*, jule::Str);
inline jule::Bool static__213d136e3_Eq(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d1398a_Gt(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d13c32_GtEq(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d13ec9_Lt(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d14271_LtEq(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d145b2_result(jule::Ptr<_213c76a0d_Fn>*, jule::Str);
inline jule::Bool static__213d14859_Shl(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d14b01_Shr(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d14d98_Add(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d15140_Sub(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d153d7_Div(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d1567e_Mul(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d15926_Mod(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d15bbd_BitAnd(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d15e65_BitOr(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d1620c_BitXor(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d1654d_unary(jule::Ptr<_213c76a0d_Fn>*, jule::Str);
inline jule::Bool static__213d167e5_Neg(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d16a8c_Pos(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d16d34_BitNot(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d17175_assign(jule::Ptr<_213c76a0d_Fn>*, jule::Str);
inline jule::Bool static__213d1741c_AddAssign(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d176b4_SubAssign(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d1795b_DivAssign(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d17c03_MulAssign(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d17e9a_ModAssign(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d18242_ShlAssign(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d184d9_ShrAssign(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d18781_BitOrAssign(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d18a28_BitAndAssign(jule::Ptr<_213c76a0d_Fn>);
inline jule::Bool static__213d18cc0_BitXorAssign(jule::Ptr<_213c76a0d_Fn>);
inline void _213d44a76_pushErr(_213d4459d_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _213d44cda_checkTrait(_213d4459d_typeCompatibilityChecker*);
inline jule::Bool _213d4504e_checkPtr(_213d4459d_typeCompatibilityChecker*);
inline jule::Bool _213d452b3_checkPrim(_213d4459d_typeCompatibilityChecker*);
inline jule::Bool _213d4566a_typeEnum(_213d4459d_typeCompatibilityChecker*, jule::Ptr<_213c8c9e1_TypeEnum>*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d458ce_checkTypeEnum(_213d4459d_typeCompatibilityChecker*);
inline jule::Bool _213d45b43_check(_213d4459d_typeCompatibilityChecker*);
inline void _213d46638_pushErr(_213d461c6_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _213d4689c_checkValidity(_213d461c6_assignTypeChecker*);
inline jule::Bool _213d46b11_checkConst(_213d461c6_assignTypeChecker*);
inline jule::Bool _213d46d75_isPrim(_213d461c6_assignTypeChecker*);
inline jule::Bool _213d470d9_checkCompatibility(_213d461c6_assignTypeChecker*);
inline jule::Bool _213d4734d_check(_213d461c6_assignTypeChecker*);
inline jule::Bool _1b84b8487_annotateConstraintElem(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _1b84b87b7_annotateConstraintElem(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _1b84b7ca0_annotateConstraintElem(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _1b84c0ec8_annotateConstraintElem(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d4854c_annotateConstraintMap(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d4885a_annotateConstraintTup(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d48b68_annotateConstraintFn(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d48e98_annotateConstraintIdent(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d492b7_annotateConstraint(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline void _213d495d6_pushGeneric(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*, jule::I32);
inline jule::Bool _213d498e4_annotatePrim(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d49c02_annotateArr(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d4a010_annotateSlc(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d4a3b7_checkMapKey(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d4a6c5_annotateMap(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d4a9d3_annotateFn(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d4ace1_annotatePtr(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d4b0ee_annotateSptr(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d4b40c_annotateStruct(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d4b71a_annotateAny(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d4ba28_annotateKind(_213d47bab_dynamicTypeAnnotation*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213d4bc8c_annotate(_213d47bab_dynamicTypeAnnotation*);
inline void _213d4cb06_pushErrToken(_213d4c5a6_fnCallArgChecker*, jule::Ptr<_2114c1b73_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _213d4ce25_pushErr(_213d4c5a6_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_213c787e0_ParamIns>> _213d4d189_getParams(_213d4c5a6_fnCallArgChecker*);
inline jule::Bool _213d4d464_checkCounts(_213d4c5a6_fnCallArgChecker*, jule::Slice<jule::Ptr<_213c787e0_ParamIns>>*);
inline jule::Bool _213d4d8b5_checkArg(_213d4c5a6_fnCallArgChecker*, jule::Ptr<_213c787e0_ParamIns>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Bool _213d4dc6c_push(_213d4c5a6_fnCallArgChecker*, jule::Ptr<_213c787e0_ParamIns>*, jule::Ptr<_213c45ea5_Expr>);
inline jule::Bool _213d4e124_pushVariadic(_213d4c5a6_fnCallArgChecker*, jule::Ptr<_213c787e0_ParamIns>*, jule::I32);
inline jule::Bool _213d4e432_checkArgs(_213d4c5a6_fnCallArgChecker*, jule::Slice<jule::Ptr<_213c787e0_ParamIns>>*);
inline jule::Bool _213d4e6b8_checkDynamicTypeAnnotation(_213d4c5a6_fnCallArgChecker*);
inline jule::Bool _213d4e93d_check(_213d4c5a6_fnCallArgChecker*);
inline void _213d50774_pushErr(_213d50268_structLitChecker*, jule::Ptr<_2114c1b73_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _213d50a93_pushSuggestion(_213d50268_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _213d50e5b_pushMatch(_213d50268_structLitChecker*, jule::Ptr<_213c6390c_FieldIns>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_2114c1b73_Token>*);
inline void _213d5127a_checkPair(_213d50268_structLitChecker*, jule::Ptr<_213c4a84a_FieldExprPair>*, jule::Slice<jule::Ptr<_213c45ea5_Expr>>*);
inline jule::Bool _213d51588_readyExprs(_213d50268_structLitChecker*, jule::Slice<jule::Ptr<_213c45ea5_Expr>>*);
inline void _213d5180d_check(_213d50268_structLitChecker*, jule::Slice<jule::Ptr<_213c45ea5_Expr>>*);
inline jule::Ptr<_213d11988_Var> _213d52314_buildVar(_213d51d4c_rangeChecker*, jule::Ptr<_213c54436_VarDecl>*);
inline void _213d524e0_setSizeKey(_213d51d4c_rangeChecker*);
inline void _213d528a8_checkRangeExprValidity(_213d51d4c_rangeChecker*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d88834_TypeKind>*);
inline void _213d52a84_checkSlice(_213d51d4c_rangeChecker*);
inline void _213d52c60_checkArray(_213d51d4c_rangeChecker*);
inline void _213d52e3b_checkMapKeyA(_213d51d4c_rangeChecker*);
inline void _213d53117_checkMapKeyB(_213d51d4c_rangeChecker*);
inline void _213d532e3_checkMap(_213d51d4c_rangeChecker*);
inline void _213d534be_checkStr(_213d51d4c_rangeChecker*);
inline void _213d5369a_checkComptime(_213d51d4c_rangeChecker*);
inline jule::Bool _213d5390e_checkComptimeRange(_213d51d4c_rangeChecker*);
inline jule::Bool _213d53b73_check(_213d51d4c_rangeChecker*);
inline void _213d54756_prepareTypes(_213d54349_retTypeChecker*);
inline void _213d549cb_prepareExprs(_213d54349_retTypeChecker*, jule::Ptr<_213c45ea5_Expr>*);
inline void _213d54ba7_checkExprs(_213d54349_retTypeChecker*);
inline jule::Bool _213d54eb5_check(_213d54349_retTypeChecker*, jule::Ptr<_213c45ea5_Expr>*);
inline jule::Ptr<_213cd7c7d_ImportInfo> _213d568ce_SelectPackage(_213d56417_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)>);
inline jule::Ptr<_213d11988_Var> _213d56c86_FindVar(_213d56417_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_213d87adb_TypeAlias> _213d5713d_FindTypeAlias(_213d56417_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_213c615db_Struct> _213d574e5_FindStruct(_213d56417_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_213c76a0d_Fn> _213d5789c_FindFn(_213d56417_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_213c88b63_Trait> _213d57baa_FindTrait(_213d56417_SymbolTable*, jule::Str);
inline jule::Ptr<_213c8b3e6_Enum> _213d57eb8_FindEnum(_213d56417_SymbolTable*, jule::Str);
inline jule::Ptr<_213c8c9e1_TypeEnum> _213d582c6_FindTypeEnum(_213d56417_SymbolTable*, jule::Str);
inline jule::Ptr<_213d11988_Var> _213d5888c_findVar(_213d56417_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_213d87adb_TypeAlias> _213d58cdd_findTypeAlias(_213d56417_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _213d59195_defByIdent(_213d56417_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _213d595e6_isDuplicatedIdent(_213d56417_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
inline jule::Bool _213d5b2b8_IsNil(_213d5ae22_Data*);
inline jule::Bool _213d5b52c_IsVoid(_213d5ae22_Data*);
inline jule::Bool _213d5b791_IsConst(_213d5ae22_Data*);
inline jule::Bool _213d5ba9e_GoodOperand(_213d5ae22_Data*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d5ce9b_pushErr(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _213d5d2ba_pushSuggestion(_213d5c990_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _213d5d496_allowBuiltin(_213d5c990_Eval*);
inline void _213d5d672_disallowBuiltin(_213d5c990_Eval*);
inline jule::Bool _213d5d8d6_isUnsafe(_213d5c990_Eval*);
inline jule::Bool _213d5db4a_isGlobal(_213d5c990_Eval*);
inline jule::Bool _213d5de25_applyNumericPrefix(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213d5e189_litNil(_213d5c990_Eval*);
inline jule::Ptr<_213d5ae22_Data> _213d5e497_litStr(_213d5c990_Eval*, jule::Ptr<_213c46ed9_LitExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213d5e7a5_litBool(_213d5c990_Eval*, jule::Ptr<_213c46ed9_LitExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213d5eab3_litRune(_213d5c990_Eval*, jule::Ptr<_213c46ed9_LitExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213d5edc1_litFloat(_213d5c990_Eval*, jule::Ptr<_213c46ed9_LitExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213d601ce_litInt(_213d5c990_Eval*, jule::Ptr<_213c46ed9_LitExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213d604dc_litNum(_213d5c990_Eval*, jule::Ptr<_213c46ed9_LitExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213d607ea_evalLit(_213d5c990_Eval*, jule::Ptr<_213c46ed9_LitExpr>);
inline jule::Any _213d60b08_findBuiltins(_213d5c990_Eval*, jule::Str);
inline jule::Any _213d60eb0_getDef(_213d5c990_Eval*, jule::Str, jule::Bool);
inline void _1b85edd2b_pushReference(_213d5c990_Eval*, jule::Ptr<_213c796ae_FnIns>*);
inline void _1b861248d_pushReference(_213d5c990_Eval*, jule::Ptr<_213d11988_Var>*);
inline void _1b86a42bb_pushReference(_213d5c990_Eval*, jule::Ptr<_213c64402_StructIns>*);
inline jule::Ptr<_213d5ae22_Data> _213d61543__evalEnum(_213d5c990_Eval*, jule::Ptr<_213c8b3e6_Enum>);
inline jule::Ptr<_213d5ae22_Data> _213d618ea_evalEnum(_213d5c990_Eval*, jule::Ptr<_213c8b3e6_Enum>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d61c08__evalTypeEnum(_213d5c990_Eval*, jule::Ptr<_213c8c9e1_TypeEnum>);
inline jule::Ptr<_213d5ae22_Data> _213d620b0_evalTypeEnum(_213d5c990_Eval*, jule::Ptr<_213c8c9e1_TypeEnum>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d623bd__evalStruct(_213d5c990_Eval*, jule::Ptr<_213c64402_StructIns>);
inline jule::Ptr<_213d5ae22_Data> _213d62775_evalStruct(_213d5c990_Eval*, jule::Ptr<_213c64402_StructIns>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d62a83_evalFnIns(_213d5c990_Eval*, jule::Ptr<_213c796ae_FnIns>);
inline void _213d62da2_checkDeprecated(_213d5c990_Eval*, jule::Slice<jule::Ptr<_213c0e314_Directive>>*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d63259_evalFn(_213d5c990_Eval*, jule::Ptr<_213c76a0d_Fn>, jule::Ptr<_2114c1b73_Token>);
inline void _213d63622_pushIllegalCycleError(_213d5c990_Eval*, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*, jule::Str*);
inline jule::Bool _213d639c9_checkCrossCycle(_213d5c990_Eval*, jule::Ptr<_213d11988_Var>*, jule::Str*);
inline jule::Bool _213d63d81_checkIllegalCycles(_213d5c990_Eval*, jule::Ptr<_213d11988_Var>*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d64238_evalVar(_213d5c990_Eval*, jule::Ptr<_213d11988_Var>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d645e0_evalTypeAlias(_213d5c990_Eval*, jule::Ptr<_213d87adb_TypeAlias>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d64997_evalDef(_213d5c990_Eval*, jule::Any, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d64ca5_evalIdent(_213d5c990_Eval*, jule::Ptr<_213c47a9a_IdentExpr>);
inline jule::Ptr<_213d5ae22_Data> _213d650b3_evalUnary(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c482a4_UnaryExpr>);
inline jule::Ptr<_213d5ae22_Data> _213d653c1_evalVariadic(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c4865b_VariadicExpr>);
inline jule::Ptr<_213d5ae22_Data> _213d656ce_evalUnsafe(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c47627_UnsafeExpr>);
inline jule::Ptr<_213d5ae22_Data> _213d659dc_evalArr(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c4c5e9_SliceExpr>);
inline jule::Ptr<_213d5ae22_Data> _213d65e3d_evalExpSlc(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c4c5e9_SliceExpr>, jule::Ptr<_213d88834_TypeKind>, jule::Any);
inline jule::Ptr<_213d5ae22_Data> _213d6624b_evalSliceExpr(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c4c5e9_SliceExpr>);
inline void _213d6658c_checkIntegerIndexingByData(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_2114c1b73_Token>);
inline void _213d66966_indexingPtr(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4ce57_IndexingExpr>*);
inline void _213d66d2e_indexingArr(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4ce57_IndexingExpr>*);
inline void _213d671e7_indexingSlc(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4ce57_IndexingExpr>*);
inline void _213d675b0_indexingMap(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4ce57_IndexingExpr>*);
inline void _213d67978_indexingStr(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4ce57_IndexingExpr>*);
inline void _213d67d41_toIndexing(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4ce57_IndexingExpr>*);
inline jule::Bool _213d682b4_pushGenericsFromExprSubIdent(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c4933d_SubIdentExpr>*, jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>>*, jule::Ptr<_213c45ea5_Expr>*);
inline jule::Bool _213d6867c_pushGenericsFromData(jule::Ptr<_213d5c990_Eval>, jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>>*, jule::Ptr<_213c45ea5_Expr>*);
inline void _213d689bd_evalIdentDeclFromIndexing(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4ce57_IndexingExpr>*);
inline jule::Bool _213d68e30_checkGenericFn(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c796ae_FnIns>*, jule::Ptr<_2114c1b73_Token>*, jule::Any*);
inline void _213d69271_evalFnGenericFromIndexing(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4ce57_IndexingExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213d69590_evalIndexing(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c4ce57_IndexingExpr>);
inline __jule_tuple_x_213d5ae22_Data__jule_tuple_x_213d5ae22_Data _213d6989d_evalSlicingExprs(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c4d562_SlicingExpr>*);
inline void _213d69b23_slicingArr(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d69edb_slicingStr(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d6a44d_checkSlicing(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4d562_SlicingExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213d6a75b_evalSlicing(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c4d562_SlicingExpr>);
inline void _213d6ab24_castPtr(_213d5c990_Eval*, jule::Ptr<_213d88834_TypeKind>, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline void _213d6aedc_castStruct(_213d5c990_Eval*, jule::Ptr<_213d88834_TypeKind>, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline void _213d6b3a5_castRef(_213d5c990_Eval*, jule::Ptr<_213d88834_TypeKind>, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline void _213d6b76d_castSlc(_213d5c990_Eval*, jule::Ptr<_213d88834_TypeKind>, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline void _213d6ba8c_castStr(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline void _213d6be55_castInt(_213d5c990_Eval*, jule::Ptr<_213d88834_TypeKind>, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline void _213d6c31d_castNum(_213d5c990_Eval*, jule::Ptr<_213d88834_TypeKind>, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline void _213d6c6d6_castPrim(_213d5c990_Eval*, jule::Ptr<_213d88834_TypeKind>, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline void _213d6ca05_castConstant(_213d5c990_Eval*, jule::Ptr<_213d88834_TypeKind>*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d6cdbd_castTypeEnum(_213d5c990_Eval*, jule::Ptr<_213d88834_TypeKind>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_2114c1b73_Token>*);
inline void _213d6d286_castTypeEnumT(_213d5c990_Eval*, jule::Ptr<_213d88834_TypeKind>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Ptr<_213d5ae22_Data> _213d6d6d7_evalCastByTypeNData(_213d5c990_Eval*, jule::Ptr<_213d88834_TypeKind>, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d6db38_evalCastT(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213d88834_TypeKind>*, jule::Ptr<_213c45ea5_Expr>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Ptr<_213d5ae22_Data> _213d6de46_evalCast(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c48a13_CastExpr>);
inline jule::Ptr<_213d5ae22_Data> _213d6e254_evalNsSelection(_213d5c990_Eval*, jule::Ptr<_213c48dba_NsSelectionExpr>);
inline jule::Ptr<_213d5ae22_Data> _213d6e6a5_evalStructLitExplicit(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c64402_StructIns>, jule::Slice<jule::Ptr<_213c45ea5_Expr>>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d6e9b3_evalStructLit(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c4b120_StructLit>);
inline _213d99b75_typeChecker _213d6ec27_typeChecker(_213d5c990_Eval*);
inline jule::Ptr<_213d5ae22_Data> _213d70035_evalType(_213d5c990_Eval*, jule::Ptr<_213c41d2a_TypeDecl>);
inline void _213d70354_callTypeFn(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d70673_callBuiltinFn(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d709b4_checkFnOfConcurrentCall(_213d5c990_Eval*, jule::Ptr<_213c796ae_FnIns>*, jule::Ptr<_2114c1b73_Token>);
inline void _213d70db0_processExceptionalHandler(_213d5c990_Eval*, jule::Ptr<_213c796ae_FnIns>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d711e0_callFn(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213d714ed_evalFnCall(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c49dbb_FnCallExpr>);
inline jule::Ptr<_213d5ae22_Data> _213d718a5_evalEnumStatic(_213d5c990_Eval*, jule::Ptr<_213c8b3e6_Enum>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d71c5c_evalTypeEnumStatic(_213d5c990_Eval*, jule::Ptr<_213c8c9e1_TypeEnum>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d72114_evalStructStatic(_213d5c990_Eval*, jule::Ptr<_213c64402_StructIns>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d72565_evalTraitSubIdent(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_213c88b63_Trait>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d72a82_evalStructSubIdentField(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c64402_StructIns>*, jule::Ptr<_2114c1b73_Token>*, jule::Ptr<_213c6390c_FieldIns>*);
inline jule::Ptr<_213d5ae22_Data> _213d7308d_evalStructSubIdent(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_213c64402_StructIns>, jule::Ptr<_213c4933d_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_213d5ae22_Data> _213d73445_evalSliceSubIdent(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d737ec_evalArraySubIdent(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d73b0a_evalIntTypeStatic(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d73e18_evalUintTypeStatic(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d74226_evalI8TypeStatic(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d74534_evalI16TypeStatic(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d74842_evalI32TypeStatic(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d74b50_evalI64TypeStatic(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d74e5d_evalU8TypeStatic(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d7526b_evalU16TypeStatic(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d75579_evalU32TypeStatic(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d75887_evalU64TypeStatic(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d75b95_evalF32TypeStatic(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d75ea3_evalF64TypeStatic(_213d5c990_Eval*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d7635a_evalPrimStatic(_213d5c990_Eval*, jule::Str, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213d5ae22_Data> _213d76712_evalTypeStatic(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_213c4933d_SubIdentExpr>);
inline jule::Ptr<_213d5ae22_Data> _1b879c1b6_comptimeObjSubIdent(_213d5c990_Eval*, jule::Ptr<_213ca374e_comptimeTypeInfo>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4933d_SubIdentExpr>*);
inline jule::Ptr<_213d5ae22_Data> _1b87a56db_comptimeObjSubIdent(_213d5c990_Eval*, jule::Ptr<_213c9063c_comptimeStructField>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4933d_SubIdentExpr>*);
inline jule::Ptr<_213d5ae22_Data> _1b87a8d60_comptimeObjSubIdent(_213d5c990_Eval*, jule::Ptr<_213c9b4a0_comptimeEnumField>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4933d_SubIdentExpr>*);
inline jule::Ptr<_213d5ae22_Data> _1b87ac79d_comptimeObjSubIdent(_213d5c990_Eval*, jule::Ptr<_213c9dc22_comptimeParam>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4933d_SubIdentExpr>*);
inline jule::Ptr<_213d5ae22_Data> _1b87b0e22_comptimeObjSubIdent(_213d5c990_Eval*, jule::Ptr<_213c93640_comptimeStatic>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4933d_SubIdentExpr>*);
inline jule::Ptr<_213d5ae22_Data> _1b87b4596_comptimeObjSubIdent(_213d5c990_Eval*, jule::Ptr<_213ca9249_comptimeValue>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4933d_SubIdentExpr>*);
inline jule::Ptr<_213d5ae22_Data> _1b87b7c1a_comptimeObjSubIdent(_213d5c990_Eval*, jule::Ptr<_213cacd0d_comptimeFile>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c4933d_SubIdentExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213d7701a_evalObjSubIdent(_213d5c990_Eval*, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_213c4933d_SubIdentExpr>);
inline jule::Ptr<_213d5ae22_Data> _213d77328_evalSubIdent(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c4933d_SubIdentExpr>);
inline jule::Ptr<_213d5ae22_Data> _213d77636_evalTuple(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c46b32_TupleExpr>);
inline jule::Ptr<_213d5ae22_Data> _213d779dd_evalMap(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213d967ed_Map>, jule::Ptr<_213c4b593_BraceLit>);
inline jule::Ptr<_213d5ae22_Data> _213d77ceb_evalBraceLit(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c4b593_BraceLit>);
inline jule::Ptr<_213d5ae22_Data> _213d78109_evalAnonFunc(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c53457_FnDecl>);
inline jule::Ptr<_213d5ae22_Data> _213d78417_evalBinop(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c497b1_BinopExpr>);
inline jule::Ptr<_213d5ae22_Data> _213d78725_evalExprKind(jule::Ptr<_213d5c990_Eval>, jule::Any);
inline jule::Ptr<_213d5ae22_Data> _213d78a33_eval1(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c45ea5_Expr>);
inline jule::Ptr<_213d5ae22_Data> _213d78d41_eval(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c45ea5_Expr>);
inline jule::Ptr<_213d5ae22_Data> _213d7914e_evalExpr1(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c45ea5_Expr>);
inline jule::Ptr<_213d5ae22_Data> _213d7945c_evalExpr(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_213c45ea5_Expr>);
inline _213d798d0_unaryEval static__213d79d0e_new(jule::Ptr<_213d5c990_Eval>);
inline void _213d79eda_minus(_213d798d0_unaryEval*);
inline void _213d7a1b6_plus(_213d798d0_unaryEval*);
inline void _213d7a392_caret(_213d798d0_unaryEval*);
inline void _213d7a56d_excl(_213d798d0_unaryEval*);
inline void _213d7a749_star(_213d798d0_unaryEval*);
inline void _213d7a925_amper(_213d798d0_unaryEval*);
inline void _213d7ab01_typeDecl(_213d798d0_unaryEval*);
inline void _213d7accc_evalData(_213d798d0_unaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7b0da_eval(_213d798d0_unaryEval*, jule::Ptr<_213c482a4_UnaryExpr>);
inline _213d7b6a1_binaryEval static__213d7bc78_newPlain(jule::Ptr<_213d5c990_Eval>);
inline _213d7b6a1_binaryEval static__213d7c086_new(jule::Ptr<_213d5c990_Eval>, jule::Ptr<_2114c1b73_Token>);
inline jule::Bool _213d7c2ea_checkTypeCompatibility(_213d7b6a1_binaryEval*);
inline jule::Bool _213d7c592_checkStructCommonOperatorCompatibility(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7c839_evalComptimeTypeInfo(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7ca9d_evalNil(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7cd12_evalEnum(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7d076_evalTypeEnum(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7d2da_evalSptr(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7d54e_evalPtr(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7d7b3_evalArr(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7da27_evalSlc(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7dc8b_evalStruct(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7e000_evalTrait(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7e264_evalAny(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7e4c8_evalBool(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d7e73c_evalStr(_213d7b6a1_binaryEval*);
inline void _213d7e918_setTypeToGreater(_213d7b6a1_binaryEval*);
inline void _213d7eb5a_checkModData(_213d7b6a1_binaryEval*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d7ed36_mod(_213d7b6a1_binaryEval*);
inline jule::Bool _213d801dd_numbersAreCompatibile(_213d7b6a1_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_213d5ae22_Data> _213d80452_evalFloat(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d806b6_evalInt(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d8092a_evalPrim(_213d7b6a1_binaryEval*);
inline void _213d80b06_checkSpecialCases(_213d7b6a1_binaryEval*);
inline jule::Ptr<_213d5ae22_Data> _213d80d6a_evalOp(_213d7b6a1_binaryEval*);
inline void _213d810e0_evalConst(_213d7b6a1_binaryEval*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d81365_checkData(_213d7b6a1_binaryEval*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d81541_checkDatas(_213d7b6a1_binaryEval*);
inline void _213d817b6_setModel(_213d7b6a1_binaryEval*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d81a3b_postEval(_213d7b6a1_binaryEval*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213d81de3_solveExplicit(_213d7b6a1_binaryEval*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213d82201_eval(_213d7b6a1_binaryEval*, jule::Ptr<_213c497b1_BinopExpr>*);
inline jule::Str _213d88bdb_Str(_213d88834_TypeKind*);
inline jule::Bool _213d88ee9_Equal(jule::Ptr<_213d88834_TypeKind>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Bool _213d89626_Binded(_213d88834_TypeKind*);
inline jule::Bool _213d8988a_IsNil(_213d88834_TypeKind*);
inline jule::Bool _213d89aee_Void(_213d88834_TypeKind*);
inline jule::Bool _213d89d63_Comparable(_213d88834_TypeKind*);
inline jule::Bool _213d8a0c7_Mutable(_213d88834_TypeKind*);
inline jule::Bool _213d8a33b_Ordered(_213d88834_TypeKind*);
inline jule::Bool _213d8a5a0_NilCompatible(_213d88834_TypeKind*);
inline jule::Bool _213d8a814_PerformsRC(_213d88834_TypeKind*);
inline jule::Bool _213d8aa78_SupportsCloning(_213d88834_TypeKind*);
inline jule::Bool _213d8acdc_Variadicable(_213d88834_TypeKind*);
inline jule::Ptr<_213d91089_Prim> _213d8b051_Prim(_213d88834_TypeKind*);
inline jule::Ptr<_213d947da_Sptr> _213d8b2b5_Sptr(_213d88834_TypeKind*);
inline jule::Ptr<_213d97d4e_Ptr> _213d8b529_Ptr(_213d88834_TypeKind*);
inline jule::Ptr<_213c8b3e6_Enum> _213d8b78d_Enum(_213d88834_TypeKind*);
inline jule::Ptr<_213c8c9e1_TypeEnum> _213d8ba02_TypeEnum(_213d88834_TypeKind*);
inline jule::Ptr<_213d973e2_Arr> _213d8bc66_Arr(_213d88834_TypeKind*);
inline jule::Ptr<_213d95247_Slc> _213d8beca_Slc(_213d88834_TypeKind*);
inline jule::Ptr<_213c796ae_FnIns> _213d8c23e_Fn(_213d88834_TypeKind*);
inline jule::Ptr<_213c64402_StructIns> _213d8c4a3_Struct(_213d88834_TypeKind*);
inline jule::Ptr<_213c88b63_Trait> _213d8c717_Trait(_213d88834_TypeKind*);
inline jule::Ptr<_213d967ed_Map> _213d8c97b_Map(_213d88834_TypeKind*);
inline jule::Ptr<_213d95d4c_Tuple> _213d8cbe0_Tup(_213d88834_TypeKind*);
inline jule::Bool _213d8ce54_comptime(_213d88834_TypeKind*);
inline jule::Ptr<_213c92166_comptimeStructFields> _213d8d1b8_comptimeStructFields(_213d88834_TypeKind*);
inline jule::Ptr<_213c9063c_comptimeStructField> _213d8d42c_comptimeStructField(_213d88834_TypeKind*);
inline jule::Ptr<_213c9c6c1_comptimeEnumFields> _213d8d691_comptimeEnumFields(_213d88834_TypeKind*);
inline jule::Ptr<_213c9b4a0_comptimeEnumField> _213d8d905_comptimeEnumField(_213d88834_TypeKind*);
inline jule::Ptr<_213ca0cbd_comptimeParams> _213d8db69_comptimeParams(_213d88834_TypeKind*);
inline jule::Ptr<_213c9dc22_comptimeParam> _213d8ddcd_comptimeParam(_213d88834_TypeKind*);
inline jule::Ptr<_213c8eb47_comptimeRange> _213d8e142_comptimeRange(_213d88834_TypeKind*);
inline jule::Ptr<_213ca2286_comptimeTypeInfos> _213d8e3a6_comptimeTypeInfos(_213d88834_TypeKind*);
inline jule::Ptr<_213ca374e_comptimeTypeInfo> _213d8e61a_comptimeTypeInfo(_213d88834_TypeKind*);
inline jule::Ptr<_213c9a05e_comptimeStatics> _213d8e87e_comptimeStatics(_213d88834_TypeKind*);
inline jule::Ptr<_213c93640_comptimeStatic> _213d8eae3_comptimeStatic(_213d88834_TypeKind*);
inline jule::Ptr<_213ca9249_comptimeValue> _213d8ed57_comptimeValue(_213d88834_TypeKind*);
inline jule::Ptr<_213cacd0d_comptimeFile> _213d900bb_comptimeFile(_213d88834_TypeKind*);
inline jule::Ptr<_213cab845_comptimeFiles> _213d90330_comptimeFiles(_213d88834_TypeKind*);
inline jule::Bool _213d90a4a_checked(_213d906d7_TypeSymbol*);
inline jule::Str _213d913b9_Str(_213d91089_Prim*);
inline jule::Bool _213d916c7_Equal(jule::Ptr<_213d91089_Prim>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Bool _213d91b4a_IsConstraint(_213d91089_Prim*);
inline jule::Bool _213d91dae_IsI8(_213d91089_Prim*);
inline jule::Bool _213d92123_IsI16(_213d91089_Prim*);
inline jule::Bool _213d92387_IsI32(_213d91089_Prim*);
inline jule::Bool _213d925eb_IsI64(_213d91089_Prim*);
inline jule::Bool _213d92860_IsU8(_213d91089_Prim*);
inline jule::Bool _213d92ac4_IsU16(_213d91089_Prim*);
inline jule::Bool _213d92d38_IsU32(_213d91089_Prim*);
inline jule::Bool _213d9309c_IsU64(_213d91089_Prim*);
inline jule::Bool _213d93311_IsF32(_213d91089_Prim*);
inline jule::Bool _213d93575_IsF64(_213d91089_Prim*);
inline jule::Bool _213d937d9_IsInt(_213d91089_Prim*);
inline jule::Bool _213d93a4d_IsUint(_213d91089_Prim*);
inline jule::Bool _213d93cb2_IsUintptr(_213d91089_Prim*);
inline jule::Bool _213d94026_IsBool(_213d91089_Prim*);
inline jule::Bool _213d9428a_IsStr(_213d91089_Prim*);
inline jule::Bool _213d944ee_IsAny(_213d91089_Prim*);
inline jule::Str _213d94b4d_Str(_213d947da_Sptr*);
inline jule::Bool _213d94e5b_Equal(jule::Ptr<_213d947da_Sptr>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Str _213d956ba_Str(_213d95247_Slc*);
inline jule::Bool _213d959c8_Equal(jule::Ptr<_213d95247_Slc>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Str _213d961b0_Str(_213d95d4c_Tuple*);
inline jule::Bool _213d964bd_Equal(jule::Ptr<_213d95d4c_Tuple>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Str _213d96b61_Str(_213d967ed_Map*);
inline jule::Bool _213d96e6e_Equal(jule::Ptr<_213d967ed_Map>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Str _213d97755_Str(_213d973e2_Arr*);
inline jule::Bool _213d97a63_Equal(jule::Ptr<_213d973e2_Arr>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Str _213d981b2_Str(_213d97d4e_Ptr*);
inline jule::Bool _213d984c0_Equal(jule::Ptr<_213d97d4e_Ptr>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Bool _213d98822_IsUnsafe(_213d97d4e_Ptr*);
inline void _213d9a36d_pushErr(_213d99b75_typeChecker*, jule::Ptr<_2114c1b73_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _213d9a549_allowBuiltin(_213d99b75_typeChecker*);
inline void _213d9a725_disallowBuiltin(_213d99b75_typeChecker*);
inline void _1b895213a_pushReference(_213d99b75_typeChecker*, jule::Ptr<_213c64402_StructIns>*);
inline void _1b8954c64_pushReference(_213d99b75_typeChecker*, jule::Ptr<_213c88b63_Trait>*);
inline void _213d9ac20_pushReferenceByKind(_213d99b75_typeChecker*, jule::Ptr<_213d88834_TypeKind>*);
inline void _213d9b0d8_pushCycleError(_213d99b75_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _213d9b490_checkCrossCycle(_213d99b75_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _213d9b847_checkIllegalCycles(_213d99b75_typeChecker*, jule::Ptr<_213c423e1_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_213d883c2_Kind> _213d9bbee_fromTypeAlias(_213d99b75_typeChecker*, jule::Ptr<_213c423e1_IdentTypeDecl>*, jule::Ptr<_213d87adb_TypeAlias>*);
inline jule::Ptr<_213c8b3e6_Enum> _213d9c0a6_fromEnum(_213d99b75_typeChecker*, jule::Ptr<_213c423e1_IdentTypeDecl>*, jule::Ptr<_213c8b3e6_Enum>*);
inline jule::Ptr<_213c8c9e1_TypeEnum> _213d9c45d_fromTypeEnum(_213d99b75_typeChecker*, jule::Ptr<_213c423e1_IdentTypeDecl>*, jule::Ptr<_213c8c9e1_TypeEnum>*);
inline jule::Ptr<_213c88b63_Trait> _213d9c815_fromTrait(_213d99b75_typeChecker*, jule::Ptr<_213c423e1_IdentTypeDecl>*, jule::Ptr<_213c88b63_Trait>*);
inline jule::Bool _213d9cbbc_checkStructIns(_213d99b75_typeChecker*, jule::Ptr<_213c64402_StructIns>*, jule::Ptr<_2114c1b73_Token>*);
inline void _213d9ce64_appendUsedStructReference(_213d99b75_typeChecker*, jule::Ptr<_213c615db_Struct>*);
inline jule::Ptr<_213c64402_StructIns> _213d9d32c_buildStructInstance(_213d99b75_typeChecker*, jule::Ptr<_213c423e1_IdentTypeDecl>*, jule::Ptr<_213c615db_Struct>*);
inline jule::Ptr<_213c64402_StructIns> _213d9d6d4_fromStruct(_213d99b75_typeChecker*, jule::Ptr<_213c423e1_IdentTypeDecl>*, jule::Ptr<_213c615db_Struct>*);
inline jule::Trait<_213d883c2_Kind> _213d9d9e2_getDef(_213d99b75_typeChecker*, jule::Ptr<_213c423e1_IdentTypeDecl>*);
inline jule::Trait<_213d883c2_Kind> _213d9dd00_buildIdent(_213d99b75_typeChecker*, jule::Ptr<_213c423e1_IdentTypeDecl>);
inline jule::Trait<_213d883c2_Kind> _213d9e10d_buildSubIdent(_213d99b75_typeChecker*, jule::Ptr<_213c426cc_SubIdentTypeDecl>);
inline jule::Ptr<_213d947da_Sptr> _213d9e41b_buildSptrFromType(_213d99b75_typeChecker*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Ptr<_213d947da_Sptr> _213d9e729_buildSptr(_213d99b75_typeChecker*, jule::Ptr<_213c42d3c_SptrTypeDecl>);
inline jule::Ptr<_213d97d4e_Ptr> _213d9ea37_buildPtrFromType(_213d99b75_typeChecker*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Ptr<_213d97d4e_Ptr> _213d9ed45_buildPtr(_213d99b75_typeChecker*, jule::Ptr<_213c43810_PtrTypeDecl>);
inline jule::Ptr<_213d95247_Slc> _213da0153_buildSlc(_213d99b75_typeChecker*, jule::Ptr<_213c43238_SlcTypeDecl>);
inline jule::Ptr<_213d973e2_Arr> _213da0461_buildArr(_213d99b75_typeChecker*, jule::Ptr<_213c43ed6_ArrTypeDecl>);
inline jule::Ptr<_213d967ed_Map> _213da076e_buildMap(_213d99b75_typeChecker*, jule::Ptr<_213c446e0_MapTypeDecl>);
inline jule::Ptr<_213d95d4c_Tuple> _213da0a7c_buildTuple(_213d99b75_typeChecker*, jule::Ptr<_213c43524_TupleTypeDecl>);
inline jule::Bool _213da0d8a_checkFuncTypes(_213d99b75_typeChecker*, jule::Ptr<_213c796ae_FnIns>*);
inline jule::Ptr<_213c796ae_FnIns> _213da1198_buildFunc(_213d99b75_typeChecker*, jule::Ptr<_213c53457_FnDecl>);
inline jule::Trait<_213d883c2_Kind> _213da14a6_buildByNamespace(_213d99b75_typeChecker*, jule::Ptr<_213c42a51_NamespaceTypeDecl>);
inline jule::Ptr<_213d88834_TypeKind> _213da17b4_build(_213d99b75_typeChecker*, jule::Any*);
inline jule::Ptr<_213d88834_TypeKind> _213da1ac2_checkDecl(_213d99b75_typeChecker*, jule::Ptr<_213c41d2a_TypeDecl>*);
inline jule::Bool static__213da24a7_prim(jule::Str*, jule::Ptr<_213d91089_Prim>);
inline jule::Bool static__213da27e8_exist(jule::Str*, jule::Ptr<_213d88834_TypeKind>*);
inline void _1e7ba2955_stop(_1e7ba2306_scopeParser*);
inline jule::Bool _1e7ba2bb9_stopped(_1e7ba2306_scopeParser*);
inline jule::Bool _1e7ba2e2d_finished(_1e7ba2306_scopeParser*);
inline jule::Bool _1e7ba3192_isLastSt(_1e7ba2306_scopeParser*);
inline void _1e7ba34b1_pushErr(_1e7ba2306_scopeParser*, jule::Ptr<_2114c1b73_Token>, jule::Str);
inline void _1e7ba37d0_pushSuggestion(_1e7ba2306_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1e7ba3a55_insertAsNext(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_1e7ba19cb_stmt> _1e7ba3cb9_next(_1e7ba2306_scopeParser*);
inline jule::Ptr<_213c51961_ScopeTree> _1e7ba4171_buildScope(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213c54436_VarDecl> _1e7ba447e_buildVarSt(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c547dd_RetSt> _1e7ba478c_buildRetSt(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c54e4d_Iter> _1e7ba4a9a_buildWhileNextIter(_1e7ba2306_scopeParser*, jule::Ptr<_1e7ba19cb_stmt>*);
inline jule::Ptr<_213c55723_WhileKind> _1e7ba4da8_buildWhileIterKind(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _1e7ba51b6_getRangeKindKeysTokens(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c54436_VarDecl> _1e7ba54c4_buildRangeKindKey(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Slice<jule::Ptr<_213c54436_VarDecl>> _1e7ba57d2_buildRangeKindKeys(_1e7ba2306_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>>*);
inline void _1e7ba5b23_setupRangeKindKeysPlain(_1e7ba2306_scopeParser*, jule::Ptr<_213c560b4_RangeKind>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1e7ba5e75_setupRangeKindKeysExplicit(_1e7ba2306_scopeParser*, jule::Ptr<_213c560b4_RangeKind>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1e7ba62a5_setupRangeKindKeys(_1e7ba2306_scopeParser*, jule::Ptr<_213c560b4_RangeKind>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c560b4_RangeKind> _1e7ba6706_buildRangeIterKind(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Any _1e7ba6aad_buildCommonIterKind(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Ptr<_213c54e4d_Iter> _1e7ba6dbb_buildCommonIter(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c54e4d_Iter> _1e7ba71c9_buildIterSt(_1e7ba2306_scopeParser*, jule::Ptr<_1e7ba19cb_stmt>*);
inline jule::Ptr<_213c5646b_BreakSt> _1e7ba74d7_buildBreakSt(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c56823_ContSt> _1e7ba77e5_buildContSt(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c56c96_If> _1e7ba7b03_buildIf(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c5714d_Else> _1e7ba7e11_buildElse(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c575c1_Conditional> _1e7ba821e_buildIfElseChain(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c45ea5_Expr> _1e7ba852c_buildCoCallSt(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c4e530_GotoSt> _1e7ba883a_buildGotoSt(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c4e81b_FallSt> _1e7ba8b48_buildFallSt(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c57c97_TypeAliasDecl> _1e7ba8e56_buildTypeAliasSt(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1e7ba93b8_pushCaseExpr(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>, jule::Ptr<_2114c1b73_Token>, jule::Bool, jule::Slice<jule::Ptr<_213c45ea5_Expr>>*);
inline jule::Slice<jule::Ptr<_213c45ea5_Expr>> _1e7ba9819_buildCaseExprs(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Ptr<_2114c1b73_Token>*, jule::Bool);
inline jule::Ptr<_213c51961_ScopeTree> _1e7ba9b27_buildCaseScope(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline __jule_tuple_x_213c5821a_Case__jule_tuple_bool _1e7ba9ece_buildCase(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Bool);
inline __jule_tuple_sx_213c5821a_Case__jule_tuple_x_213c5714d_Else _1e7baa386_buildCases(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>, jule::Bool);
inline jule::Ptr<_213c588e1_MatchCase> _1e7baa694_buildMatchCase(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c51961_ScopeTree> _1e7baa9a2_buildScopeSt(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c4e178_LabelSt> _1e7baacb0_buildLabelSt(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline __jule_tuple__213c51125_StmtData__jule_tuple_bool _1e7bab0bd_buildIdSt(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_1e7bba4d9_assignInfo> _1e7bab3cb_buildAssignInfo(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c4ee26_AssignLeft> _1e7bab6d9_buildAssignL(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Slice<jule::Ptr<_213c4ee26_AssignLeft>> _1e7bab9e7_buildAssignLs(_1e7ba2306_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>>*);
inline __jule_tuple_x_213c50465_AssignSt__jule_tuple_bool _1e7babd05_buildPlainAssign(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Bool _1e7bac1ac_buildDeclAssign1(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Ptr<_213c50465_AssignSt>*);
inline __jule_tuple_x_213c50465_AssignSt__jule_tuple_bool _1e7bac4ba_buildDeclAssign(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline __jule_tuple_x_213c50465_AssignSt__jule_tuple_bool _1e7bac7c8_buildAssignSt(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c46846_UseExpr> _1e7bacad6_buildUseExpr(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Any _1e7bacde4_buildSt(_1e7ba2306_scopeParser*, jule::Ptr<_1e7ba19cb_stmt>*);
inline void _1e7bad213_build(_1e7ba2306_scopeParser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Ptr<_213c51961_ScopeTree>*);
inline void _1e7bae434_pushErr(_1e7badba3_exprBuilder*, jule::Ptr<_2114c1b73_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e7bae753_pushSuggestion(_1e7badba3_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_213c46b32_TupleExpr> _1e7baea61_buildTuple(_1e7badba3_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>>*);
inline jule::Ptr<_213c46ed9_LitExpr> _1e7baed6e_buildLit(_1e7badba3_exprBuilder*, jule::Ptr<_2114c1b73_Token>);
inline jule::Any _1e7bb048a_buildSingle(_1e7badba3_exprBuilder*, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213c47a9a_IdentExpr> _1e7bb0798_buildBindIdent(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c482a4_UnaryExpr> _1e7bb0aa6_buildUnary(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c4933d_SubIdentExpr> _1e7bb0db4_buildObjSubIdent(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c48dba_NsSelectionExpr> _1e7bb11c2_buildNsSubIdent(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c41d2a_TypeDecl> _1e7bb14d0_buildType(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Any _1e7bb17dd_buildSubIdent(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c4865b_VariadicExpr> _1e7bb1aeb_buildVariadic(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c46291_RangeExpr> _1e7bb1e2b_buildBetweenParentheses(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c48a13_CastExpr> _1e7bb224a_tryBuildCast(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1e7bb2613_pushArg(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_213c45ea5_Expr>>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>, jule::Ptr<_2114c1b73_Token>);
inline jule::Slice<jule::Ptr<_213c45ea5_Expr>> _1e7bb2921_buildArgs(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c49dbb_FnCallExpr> _1e7bb3180_buildFnCall(_1e7badba3_exprBuilder*, jule::Ptr<_2114c1b73_Token>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Any _1e7bb348d_buildParenthesesRange(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c47627_UnsafeExpr> _1e7bb379b_buildUnsafeExpr(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c53457_FnDecl> _1e7bb3aa9_buildAnonFn(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Any _1e7bb3db7_buildUnsafe(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1e7bb4280_pushRangeLitPart(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>, jule::Ptr<_2114c1b73_Token>, jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _1e7bb45b0_getBraceRangeLitExprParts(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c4a84a_FieldExprPair> _1e7bb48ce_buildFieldExprPair(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c45ea5_Expr> _1e7bb4bdc_buildStructLitExpr(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Slice<jule::Ptr<_213c45ea5_Expr>> _1e7bb4eea_buildStructLitExprs(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c4b120_StructLit> _1e7bb532a_buildTypedStructLiteral(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c45ea5_Expr> _1e7bb5649_buildBraceLitPart(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c4b593_BraceLit> _1e7bb5957_buildBraceLit(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Any _1e7bb5c65_buildBraceRange(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _1e7bb6073_getEnumerableParts(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c4c5e9_SliceExpr> _1e7bb6381_buildSlice(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c4ce57_IndexingExpr> _1e7bb67d2_buildIndexing(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>, jule::Slice<jule::Ptr<_2114c1b73_Token>>, jule::Ptr<_2114c1b73_Token>);
inline jule::Ptr<_213c4d562_SlicingExpr> _1e7bb6d76_buildSlicing(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Ptr<_2114c1b73_Token>*, jule::Ptr<_2114c1b73_Token>);
inline jule::Any _1e7bb7184_buildBracketRange(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Any _1e7bb7492_buildExclRight(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Any _1e7bb77a0_buildData(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Any _1e7bb7b57_buildBinop(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::I32);
inline jule::Any _1e7bb7e65_build(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Any _1e7bb8273_buildKind(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c45ea5_Expr> _1e7bb8581_buildFromTokens(_1e7badba3_exprBuilder*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline void _1e7bbdcd4_stop(_1e7bbd9e8_parser*);
inline jule::Bool _1e7bbe048_stopped(_1e7bbd9e8_parser*);
inline void _1e7bbe411_pushErr(_1e7bbd9e8_parser*, jule::Ptr<_2114c1b73_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1e7bbe730_pushSuggestion(_1e7bbd9e8_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_213c45ea5_Expr> _1e7bbea3d_buildExpr(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c0e314_Directive> _1e7bbed4b_buildDirective(_1e7bbd9e8_parser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline void _1e7bc00c1_pushDirective(_1e7bbd9e8_parser*, jule::Ptr<_213c0e314_Directive>);
inline jule::Ptr<_213c51961_ScopeTree> _1e7bc0478_buildScope(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Ptr<_2114c1b73_Token>);
inline __jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool _1e7bc08c9__buildType(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::I32*, jule::Bool);
inline __jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool _1e7bc0d2a_buildType(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_213c57c97_TypeAliasDecl> _1e7bc1138_buildTypeAliasDecl(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1e7bc1457_buildVarTypeAndExpr(jule::Ptr<_1e7bbd9e8_parser>, jule::Ptr<_213c54436_VarDecl>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1e7bc1776_buildVarCommon(jule::Ptr<_1e7bbd9e8_parser>, jule::Ptr<_213c54436_VarDecl>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline void _1e7bc1b3e_buildVarBegin(_1e7bbd9e8_parser*, jule::Ptr<_213c54436_VarDecl>*, jule::I32*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c54436_VarDecl> _1e7bc1e4c_buildVar(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c4dcc1_GenericDecl> _1e7bc225a_buildGeneric(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>> _1e7bc2612_buildGenerics(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Ptr<_2114c1b73_Token>*);
inline jule::Ptr<_213c52137_ParamDecl> _1e7bc2920_buildSelfParam(_1e7bbd9e8_parser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline void _1e7bc2cd8_paramTypeBegin(_1e7bbd9e8_parser*, jule::Ptr<_213c52137_ParamDecl>*, jule::I32*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1e7bc3107_buildParamType(jule::Ptr<_1e7bbd9e8_parser>, jule::Ptr<_213c52137_ParamDecl>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1e7bc3426_buildParamBody(jule::Ptr<_1e7bbd9e8_parser>, jule::Ptr<_213c52137_ParamDecl>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c52137_ParamDecl> _1e7bc3734_buildParam(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline void _1e7bc39a9_checkParams(_1e7bbd9e8_parser*, jule::Slice<jule::Ptr<_213c52137_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_213c52137_ParamDecl>> _1e7bc3d61_buildParams(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Bool);
inline __jule_tuple_x_213c44a97_RetTypeDecl__jule_tuple_bool _1e7bc4218_buildMultiRetType(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::I32*);
inline __jule_tuple_x_213c44a97_RetTypeDecl__jule_tuple_bool _1e7bc45c0_buildRetType(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::I32*);
inline jule::Ptr<_213c53457_FnDecl> _1e7bc4a21_buildFnPrototype(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::I32*, jule::Bool);
inline jule::Ptr<_213c53457_FnDecl> _1e7bc4e72_buildFn(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_2114c1b73_Token>> _1e7bc5280_getUseDeclSelectors(_1e7bbd9e8_parser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline void _1e7bc559e_buildBindUseDecl(_1e7bbd9e8_parser*, jule::Ptr<_213c59183_UseDecl>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1e7bc58bd_buildStdUseDecl(_1e7bbd9e8_parser*, jule::Ptr<_213c59183_UseDecl>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline void _1e7bc5bdc_buildIdentUseDecl(_1e7bbd9e8_parser*, jule::Ptr<_213c59183_UseDecl>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline void _1e7bc600b_parseUseDecl(_1e7bbd9e8_parser*, jule::Ptr<_213c59183_UseDecl>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c59183_UseDecl> _1e7bc63b3_buildUseDecl(_1e7bbd9e8_parser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>, jule::Bool);
inline jule::Ptr<_213c41d2a_TypeDecl> _1e7bc676a_buildTypeEnumItemKind(jule::Ptr<_1e7bbd9e8_parser>, jule::I32*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Slice<jule::Ptr<_213c5a904_TypeEnumItemDecl>> _1e7bc6a78_buildTypeEnumItems(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c5b00e_TypeEnumDecl> _1e7bc6d86_buildTypeEnumDecl(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c45ea5_Expr> _1e7bc723d_buildEnumItemExpr(jule::Ptr<_1e7bbd9e8_parser>, jule::I32*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Slice<jule::Ptr<_213c59606_EnumItemDecl>> _1e7bc754b_buildEnumItems(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c5a12e_EnumDecl> _1e7bc7859_buildEnumDecl(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Any _1e7bc7b67_buildNodeEnumDecl(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c5b273_FieldDecl> _1e7bc7e75_buildField(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Slice<jule::Ptr<_213c5b273_FieldDecl>> _1e7bc8283_buildStructDeclFields(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c5bac0_StructDecl> _1e7bc8591_buildStructDecl(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1e7bc8816_checkMethodReceiver(_1e7bbd9e8_parser*, jule::Ptr<_213c53457_FnDecl>*);
inline void _1e7bc8b35_buildTraitBody(jule::Ptr<_1e7bbd9e8_parser>, jule::Ptr<_213c5c296_TraitDecl>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c5c296_TraitDecl> _1e7bc8e43_buildTraitDecl(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c53457_FnDecl> _1e7bc9251_buildBindFn(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c54436_VarDecl> _1e7bc955e_buildBindVar(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c5bac0_StructDecl> _1e7bc986c_buildBindStruct(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c57c97_TypeAliasDecl> _1e7bc9b7a_buildBindTypeAlias(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Ptr<_213c59183_UseDecl> _1cdccaa42_buildBindUse(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Any _1cdccad2d_buildBind(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c53457_FnDecl> _1cdccb13b_getMethod(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1cdccb45a_parseImplBody(jule::Ptr<_1e7bbd9e8_parser>, jule::Ptr<_213c5c8a1_Impl>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c5c8a1_Impl> _1cdccb768_buildImpl(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Any _1cdccba76_buildNodeData(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1cdccbceb_applyFnMeta(_1e7bbd9e8_parser*, jule::Ptr<_213c53457_FnDecl>*);
inline void _1cdccc071_applyMeta(_1e7bbd9e8_parser*, _213c0de18_Node*);
inline void _1cdccc2e6_pushUseDecl(jule::Ptr<_1e7bbd9e8_parser>, jule::Ptr<_213c59183_UseDecl>*);
inline jule::Bool _1cdccc604_pushMetaNodes(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline _213c0de18_Node _1cdccc912_parseNode(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1cdcccb87_appendNode(jule::Ptr<_1e7bbd9e8_parser>, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1cdccd0e9_removeRange(_1e7bbd9e8_parser*, jule::I32, jule::U32, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Slice<jule::I32>*);
inline void _1cdccd4b2_pushWrongOrderCloseErr(_1e7bbd9e8_parser*, jule::Ptr<_2114c1b73_Token>*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Slice<jule::I32>*);
inline void _1cdccd924_pushRangeClose(_1e7bbd9e8_parser*, jule::Ptr<_2114c1b73_Token>, jule::U32, jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::Slice<jule::I32>*);
inline void _1cdccdb99_checkRanges(_1e7bbd9e8_parser*, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline void _1cdccde1e_parse(jule::Ptr<_1e7bbd9e8_parser>, jule::Ptr<_2114c700d_File>*);
inline void _1cdcd0816_pushErr(_1cdcd02a5_typeBuilder*, jule::Ptr<_2114c1b73_Token>, jule::Str);
inline void _1cdcd0b35_pushSuggestion(_1cdcd02a5_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd0d99_buildNamespace(_1cdcd02a5_typeBuilder*);
inline jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> _1cdcd110d_buildGenerics(_1cdcd02a5_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _1cdcd1372_identGenerics(_1cdcd02a5_typeBuilder*);
inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd15d6_buildIdent(_1cdcd02a5_typeBuilder*);
inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd184a_buildCppLink(_1cdcd02a5_typeBuilder*);
inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd1aae_buildFn(_1cdcd02a5_typeBuilder*);
inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd1d23_buildPtr(_1cdcd02a5_typeBuilder*);
inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd2087_buildSptr(_1cdcd02a5_typeBuilder*);
inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd22eb_buildSlc(_1cdcd02a5_typeBuilder*);
inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd2560_buildArr(_1cdcd02a5_typeBuilder*);
inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd27c4_buildMap(_1cdcd02a5_typeBuilder*);
inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd2a38_buildEnumerable(_1cdcd02a5_typeBuilder*);
inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd2c9c_step(_1cdcd02a5_typeBuilder*);
inline __jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool _1cdcd3011_build(_1cdcd02a5_typeBuilder*);
inline void _214043846_pushErr(_21404333a_directiveEval*, jule::Ptr<_2114c1b73_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _214043bed_splitOperans(_21404333a_directiveEval*, jule::U32, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Bool _21404400b_evalDirectiveIdent(_21404333a_directiveEval*, jule::Str);
inline jule::Bool _214044319_evalDirectivePart(_21404333a_directiveEval*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Bool _21404457d_eval(_21404333a_directiveEval*);
inline jule::Ptr<_1cdcd4023_JuleImporter> static__1cdcd440d_New(_214041ed7_CompileInfo);
inline jule::Slice<jule::Ptr<_213cd7c7d_ImportInfo>> _1cdcd4672_AllPackages(_1cdcd4023_JuleImporter*);
inline void _1cdcd4a7e_SetModPath(_1cdcd4023_JuleImporter*, jule::Str);
inline jule::Str _1cdcd4ce3_GetModPath(_1cdcd4023_JuleImporter*);
inline jule::Str _1cdcd5101_ModById(_1cdcd4023_JuleImporter*, jule::I32);
inline jule::Ptr<_213cd7c7d_ImportInfo> _1cdcd540e_GetImport(_1cdcd4023_JuleImporter*, jule::Str);
inline __jule_tuple_sx_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log _1cdcd57b6_ImportPackage(_1cdcd4023_JuleImporter*, jule::Str, jule::Bool);
inline void _1cdcd5a3b_Imported(_1cdcd4023_JuleImporter*, jule::Ptr<_213cd7c7d_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_2110be2cb_Log _1cdcd5e37_isPassBuildDirectives(_1cdcd4023_JuleImporter*, jule::Ptr<_213c0d07c_Ast>*);
inline jule::Bool _1b8eb7e64_isCommonOrdered(jule::Slice<jule::Ptr<_213c615db_Struct>>, jule::Ptr<_213c615db_Struct>);
inline jule::Bool _1b8ebc85e_isCommonOrdered(jule::Slice<jule::Ptr<_213d11988_Var>>, jule::Ptr<_213d11988_Var>);
inline void _1b8eb4a87_orderCommon(jule::Slice<jule::Ptr<_213c615db_Struct>>*);
inline void _1b8eb53c3_orderCommon(jule::Slice<jule::Ptr<_213d11988_Var>>*);
inline void static__1cdcd98b9_orderStructures(jule::Slice<jule::Ptr<_213c615db_Struct>>*);
inline void static__1cdcd9ac8_orderVars(jule::Slice<jule::Ptr<_213d11988_Var>>*);
inline void _1cde1b248_optimizeChild(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Ptr<_213cb8a72_Scope>*);
inline void _1cde1b4e0_optimizeBodyChildExceptional(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Ptr<_213cb8a72_Scope>*);
inline void _1cde1b776_optimizeBodyChild(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Ptr<_213cb8a72_Scope>*);
inline void _1cde1b9eb_optimizeExprModel(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Any*);
inline void _1cde1bbc7_eliminateFollowed(_1cde1acb4_scopeDeadCode*);
inline void _1cde1be4c_pushGoto(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Ptr<_213cbb59c_GotoSt>);
inline void _1cde1c1c2_pushLabel(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Ptr<_213cbb2b1_Label>);
inline void _1cde1c447_optimizeRangeIter(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Ptr<_213cba722_RangeIter>);
inline void _1cde1c6bc_optimizeWhileIter(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Ptr<_213cb9d3c_WhileIter>);
inline void _1cde1c942_optimizeInfIter(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Ptr<_213cb98b9_InfIter>);
inline void _1cde1cbb7_optimizeConditional(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Ptr<_213cb95cd_Conditional>);
inline void _1cde1ce3c_optimizeMatch(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Ptr<_213cbc889_Match>);
inline void _1cde1d1b2_optimizeAssign(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Ptr<_213cbbdc7_Assign>);
inline void _1cde1d437_optimizeMultiAssign(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Ptr<_213cbc27e_MultiAssign>);
inline void _1cde1d6ac_optimizeStmt(jule::Ptr<_1cde1acb4_scopeDeadCode>, jule::Any);
inline void _1cde1d888_optimizeStmts(jule::Ptr<_1cde1acb4_scopeDeadCode>);
inline _1cde1ec1e_exprDeadCode static__1cde20307_new(jule::Ptr<_1cde1acb4_scopeDeadCode>*);
inline void _1cde2057c_binary(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c687be_BinopExprModel>);
inline void _1cde20802_unary(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c68b76_UnaryExprModel>);
inline void _1cde20a77_structureLit(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c694e5_StructLitExprModel>);
inline void _1cde20cec_allocStructure(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c69803_AllocStructLitExprModel>);
inline void _1cde21072_casting(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c69d53_CastingExprModel>);
inline void _1cde212e7_args(_1cde1ec1e_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1cde2156c_funcCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6a705_FnCallExprModel>);
inline void _1cde217e2_slice(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6aaac_SliceExprModel>);
inline void _1cde21a67_array(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6d7d5_ArrayExprModel>);
inline void _1cde21cdc_indexing(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6b030_IndexingExprModel>);
inline void _1cde22062_anonFunc(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6b3d7_AnonFnExprModel>);
inline void _1cde222d7_mapExpr(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6bc12_MapExprModel>);
inline void _1cde2255c_slicing(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6c251_SlicingExprModel>);
inline void _1cde227d2_traitSub(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6c790_TraitSubIdentExprModel>);
inline void _1cde22a57_structureSub(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6d076_StructSubIdentExprModel>);
inline void _1cde22ccc_commonSub(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6e132_CommonSubIdentExprModel>);
inline void _1cde23052_tuple(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6e42e_TupleExprModel>);
inline void _1cde232c7_newCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c703ec_BuiltinNewCallExprModel>);
inline void _1cde2354c_outCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6e808_BuiltinOutCallExprModel>);
inline void _1cde237c2_outlnCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c6ebe3_BuiltinOutlnCallExprModel>);
inline void _1cde23a47_panicCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c707d7_BuiltinPanicCallExprModel>);
inline void _1cde23cbc_assertCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c70c8d_BuiltinAssertCallExprModel>);
inline void _1cde24042_errorCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c72b6e_BuiltinErrorCallExprModel>);
inline void _1cde242b7_makeCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c71244_BuiltinMakeCallExprModel>);
inline void _1cde2453c_appendCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c7162e_BuiltinAppendCallExprModel>);
inline void _1cde247b2_lenCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c7194d_BuiltinLenCallExprModel>);
inline void _1cde24a37_capCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c71c6c_BuiltinCapCallExprModel>);
inline void _1cde24cac_cloneCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c70012_BuiltinCloneCallExprModel>);
inline void _1cde25032_deleteCall(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c72421_BuiltinDeleteCallExprModel>);
inline void _1cde252a7_sizeof(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c72e6b_SizeofExprModel>);
inline void _1cde2552c_alignof(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c73257_AlignofExprModel>);
inline void _1cde257a2_integratedToStr(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c73851_IntegratedToStrExprModel>);
inline void _1cde25a27_free(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c74005_FreeExprModel>);
inline void _1cde25c9c_backendEmit(_1cde1ec1e_exprDeadCode*, jule::Ptr<_213c73c19_BackendEmitExprModel>);
inline void _1cde26022_optimize(_1cde1ec1e_exprDeadCode*, jule::Any*);
inline jule::Ptr<_213e65b86_scopeOptimizer> static__213e660e8_new(jule::Ptr<_213cb8a72_Scope>);
inline void _213e6636d_setCurrentStmt(_213e65b86_scopeOptimizer*, jule::Any);
inline void _213e665e3_optimizeData(_213e65b86_scopeOptimizer*, jule::Ptr<_213d5ae22_Data>);
inline void _213e66868_optimizeVar(_213e65b86_scopeOptimizer*, jule::Ptr<_213d11988_Var>);
inline void _213e66add_optimizeConditional(_213e65b86_scopeOptimizer*, jule::Ptr<_213cb95cd_Conditional>);
inline void _213e66ec8_buildDefaultConstantTrueCase(_213e65b86_scopeOptimizer*, jule::Ptr<_213cbd3d4_Case>, jule::I32*, jule::Ptr<_213cbc889_Match>*);
inline void _213e671d7_optimizeMatch(_213e65b86_scopeOptimizer*, jule::Ptr<_213cbc889_Match>);
inline void _213e6745c_optimizeRangeIter(_213e65b86_scopeOptimizer*, jule::Ptr<_213cba722_RangeIter>);
inline void _213e676d2_optimizeWhileIter(_213e65b86_scopeOptimizer*, jule::Ptr<_213cb9d3c_WhileIter>);
inline jule::Bool _213e679e0_substr(_213e65b86_scopeOptimizer*, jule::Ptr<_213cbbdc7_Assign>);
inline jule::Bool _213e67ced_strInsert(_213e65b86_scopeOptimizer*, jule::Ptr<_213cbbdc7_Assign>);
inline jule::Bool _213e6810b_strAppend(_213e65b86_scopeOptimizer*, jule::Ptr<_213cbbdc7_Assign>);
inline jule::Bool _213e68419_strAssign(_213e65b86_scopeOptimizer*, jule::Ptr<_213cbbdc7_Assign>);
inline void _213e6868e_optimizeAssign(_213e65b86_scopeOptimizer*, jule::Ptr<_213cbbdc7_Assign>);
inline void _213e68914_optimizeMultiAssign(_213e65b86_scopeOptimizer*, jule::Ptr<_213cbc27e_MultiAssign>);
inline void _213e68b89_optimizeRet(_213e65b86_scopeOptimizer*, jule::Ptr<_213cbdd0d_RetSt>);
inline void _213e68e0e_optimizeStmt(_213e65b86_scopeOptimizer*, jule::Any);
inline void _213e69184_optimizeChild(_213e65b86_scopeOptimizer*, jule::Ptr<_213cb8a72_Scope>);
inline void _213e69360_optimize(_213e65b86_scopeOptimizer*);
inline void static__213e6b9d3_optimize(jule::Any*);
inline jule::Bool _213e6bcd0_strCond(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c687be_BinopExprModel>);
inline void _213e6c055_binary(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c687be_BinopExprModel>);
inline void _213e6c2ca_unary(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c68b76_UnaryExprModel>);
inline void _213e6c550_structureLit(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c694e5_StructLitExprModel>);
inline void _213e6c7c5_allocStructure(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c69803_AllocStructLitExprModel>);
inline void _213e6ca4a_casting(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c69d53_CastingExprModel>);
inline void _213e6ccc0_args(_213e6b4c7_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _213e6d045_scope(_213e6b4c7_exprOptimizer*, jule::Ptr<_213cb8a72_Scope>*);
inline jule::Bool _213e6d375_optimizeSpecialFuncCalls(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6a705_FnCallExprModel>*);
inline void _213e6d60b_funcCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6a705_FnCallExprModel>);
inline void _213e6d881_slice(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6aaac_SliceExprModel>);
inline void _213e6db06_array(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6d7d5_ArrayExprModel>);
inline void _213e6dd7b_indexing(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6b030_IndexingExprModel>);
inline void _213e6e101_anonFunc(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6b3d7_AnonFnExprModel>);
inline void _213e6e376_mapExpr(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6bc12_MapExprModel>);
inline void _213e6e5eb_slicing(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6c251_SlicingExprModel>);
inline void _213e6e871_traitSub(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6c790_TraitSubIdentExprModel>);
inline void _213e6eae6_structureSub(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6d076_StructSubIdentExprModel>);
inline void _213e6ed6b_commonSub(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6e132_CommonSubIdentExprModel>);
inline void _213e700e1_tuple(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6e42e_TupleExprModel>);
inline void _213e70366_newCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c703ec_BuiltinNewCallExprModel>);
inline void _213e705db_outCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6e808_BuiltinOutCallExprModel>);
inline void _213e70861_outlnCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c6ebe3_BuiltinOutlnCallExprModel>);
inline void _213e70ad6_panicCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c707d7_BuiltinPanicCallExprModel>);
inline void _213e70d5b_assertCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c70c8d_BuiltinAssertCallExprModel>);
inline void _213e710d1_errorCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c72b6e_BuiltinErrorCallExprModel>);
inline void _213e71356_makeCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c71244_BuiltinMakeCallExprModel>);
inline void _213e715cb_appendCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c7162e_BuiltinAppendCallExprModel>);
inline void _213e71851_lenCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c7194d_BuiltinLenCallExprModel>);
inline void _213e71ac6_capCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c71c6c_BuiltinCapCallExprModel>);
inline void _213e71d4b_cloneCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c70012_BuiltinCloneCallExprModel>);
inline void _213e720c1_deleteCall(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c72421_BuiltinDeleteCallExprModel>);
inline void _213e72346_sizeof(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c72e6b_SizeofExprModel>);
inline void _213e725bb_alignof(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c73257_AlignofExprModel>);
inline void _213e72841_integratedToStr(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c73851_IntegratedToStrExprModel>);
inline void _213e72ab6_free(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c74005_FreeExprModel>);
inline void _213e72d3b_backendEmit(_213e6b4c7_exprOptimizer*, jule::Ptr<_213c73c19_BackendEmitExprModel>);
inline void _213e73017_do(_213e6b4c7_exprOptimizer*);
inline jule::Ptr<_1cde26cd1_Optimizer> static__1cde27210_New(jule::Ptr<_1cdcd6784_IR>*);
inline void _1cde27485_optimizeGlobal(_1cde26cd1_Optimizer*, jule::Ptr<_213d11988_Var>*);
inline void _1cde2770a_optimizeFunction(_1cde26cd1_Optimizer*, jule::Ptr<_213c76a0d_Fn>*);
inline void _1cde27980_optimizeStruct(_1cde26cd1_Optimizer*, jule::Ptr<_213c615db_Struct>*);
inline void _1cde27c05_optimizeGlobals(_1cde26cd1_Optimizer*, jule::Ptr<_213cda8b8_Package>*);
inline void _1cde27e7a_optimizeFunctions(_1cde26cd1_Optimizer*, jule::Ptr<_213cda8b8_Package>*);
inline void _1cde28200_optimizeStructs(_1cde26cd1_Optimizer*, jule::Ptr<_213cda8b8_Package>*);
inline void _1cde28475_optimizePackage(_1cde26cd1_Optimizer*, jule::Ptr<_213cda8b8_Package>*);
inline void _1cde28651_Optimize(_1cde26cd1_Optimizer*);
inline void static__1cde4d159_Reset(void);
inline void static__1cde29157_Print(jule::Str, jule::Str);
inline void static__1cde509b9_LogFlat(_2110be2cb_Log*);
inline void static__1cde50bc8_LogError(_2110be2cb_Log*);
inline void static__1cde50dd7_Log(_2110be2cb_Log*);
inline void static__1cde510e6_PrintLogs(jule::Slice<_2110be2cb_Log>*);
inline _213aeb9b5_Time static__213aebd5b_Unix(jule::U64);
inline _213aeb9b5_Time static__213aec059_Now(void);
inline _213aeb322_AbsTime _213aed621_Abs(_213aeb9b5_Time*);
inline jule::Ptr<_1b63eb169_scopeCoder> static__1b63eb763_new(jule::Ptr<_213b05b01_ObjectCoder>*);
inline void _1b9242474_iterHead(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cba722_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1b63ebda1_rangeIndexIter(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cba722_RangeIter>*);
inline void _1b63ec126_rangeHashmapIter(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cba722_RangeIter>*);
inline void _1b63ec39b_ifCase(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cb8e6d_If>);
inline void _1b63ec621_conditional(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cb95cd_Conditional>);
inline void _1b63ec896_infIter(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cb98b9_InfIter>);
inline void _1b63ecb1b_whileIter(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cb9d3c_WhileIter>);
inline void _1b63ecd91_rangeIter(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cba722_RangeIter>);
inline void _1b63ed116_cont(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbab1d_ContSt>);
inline void _1b63ed38b_label(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbb2b1_Label>);
inline void _1b63ed611_gotoSt(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbb59c_GotoSt>);
inline void _1b63ed886_postfix(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbb954_Postfix>);
inline void _1b63edb0b_assign(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbbdc7_Assign>);
inline void _1b63edd81_mapLookupAssign(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbc27e_MultiAssign>*);
inline void _1b63ee106_multiAssignTup(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbc27e_MultiAssign>*);
inline void _1b63ee37b_multiAssignFn(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbc27e_MultiAssign>*);
inline void _1b63ee601_multiAssign(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbc27e_MultiAssign>);
inline jule::Fn<void(void)> _1b63ee90e_matchExpr(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbc889_Match>);
inline void _1b63eec2d_case(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbc889_Match>, jule::Ptr<_213cbd3d4_Case>);
inline void _1b63eeea3_matchSt(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbc889_Match>);
inline void _1b6400228_fallSt(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbd9ab_FallSt>);
inline void _1b640049d_breakSt(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbaec5_BreakSt>);
inline void _1b6400723_setResult(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbdd0d_RetSt>);
inline void _1b6400998_retSt(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cbdd0d_RetSt>);
inline void _1b6400c1d_var(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213d11988_Var>);
inline void _1b6400e93_strAppend(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213e62cc6_StrAppendExprModel>);
inline void _1b6401218_st(jule::Ptr<_1b63eb169_scopeCoder>, jule::Any);
inline void _1b640148d_scopeStmts(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cb8a72_Scope>*);
inline void _1b6401713_scope(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213cb8a72_Scope>);
inline void _1b6401988_funcScope(jule::Ptr<_1b63eb169_scopeCoder>, jule::Ptr<_213c796ae_FnIns>);
inline jule::Ptr<_1b640465b_exprCoder> static__1b6404a13_new(jule::Ptr<_213b05b01_ObjectCoder>*);
inline void _1b6404c88_string(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_2121a4c51_Const>*);
inline void _1b640500d_boolean(jule::Ptr<_1b640465b_exprCoder>, jule::Bool);
inline void _1b64051d9_nilLit(jule::Ptr<_1b640465b_exprCoder>);
inline jule::Bool _1b64054e7_ftoaSpecialCases(jule::Ptr<_1b640465b_exprCoder>, jule::F64*);
inline void _1b640576c_float32(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_2121a4c51_Const>*);
inline void _1b64059e2_float64(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_2121a4c51_Const>*);
inline void _1b6405c67_constant(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_2121a4c51_Const>);
inline void _1b6406130_divByZeroBinary(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_2114c1b73_Token>*, jule::Ptr<_213c68307_OperandExprModel>*, jule::Ptr<_213c68307_OperandExprModel>*);
inline void _1b64063a5_unsafeBinary(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c687be_BinopExprModel>);
inline void _1b640662a_binary(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c687be_BinopExprModel>);
inline void _1b64068a0_var(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213d11988_Var>);
inline void _1b6406b25_structureIns(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c64402_StructIns>);
inline void _1b6406d9a_unary(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c68b76_UnaryExprModel>);
inline void _1b6407120_structureLit(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c694e5_StructLitExprModel>);
inline void _1b6407395_allocStructure(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c69803_AllocStructLitExprModel>);
inline void _1b640761a_possibleRefExpr(jule::Ptr<_1b640465b_exprCoder>, jule::Any);
inline void _1b64079d3_castTraitFromTrait(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c69d53_CastingExprModel>*, jule::Ptr<_213c88b63_Trait>, jule::Ptr<_213c88b63_Trait>);
inline void _1b6407c58_casting(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c69d53_CastingExprModel>);
inline void _1b6407ecd_models(jule::Ptr<_1b640465b_exprCoder>, jule::Slice<jule::Any>);
inline void _1b6408253_args(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6a705_FnCallExprModel>*);
inline void _1b64084c8_modelForCall(jule::Ptr<_1b640465b_exprCoder>, jule::Any);
inline void _1b640874d_pushCallInf(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6a705_FnCallExprModel>*);
inline jule::Bool _1b6408a5b_isWrapped(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6a705_FnCallExprModel>*);
inline void _1b6408cd1_pureFuncCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6a705_FnCallExprModel>*);
inline void _1b6409056_coFuncCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6a705_FnCallExprModel>*);
inline void _1b6409375_writeUseExpr(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c796ae_FnIns>*, jule::Ptr<_213d5ae22_Data>);
inline void _1b64095ea_funcCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6a705_FnCallExprModel>);
inline void _1b6409870_slice(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6aaac_SliceExprModel>);
inline void _1b6409ae5_indexing(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6b030_IndexingExprModel>);
inline void _1b6409d6a_unsafeIndexing(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213e63447_UnsafeIndexingExprModel>);
inline void _1b640a0e0_anonFunc(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6b3d7_AnonFnExprModel>);
inline void _1b640a365_mapExpr(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6bc12_MapExprModel>);
inline void _1b640a5da_slicing(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6c251_SlicingExprModel>);
inline void _1b640a860_traitSub(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6c790_TraitSubIdentExprModel>);
inline void _1b640aad5_structureSub(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6d076_StructSubIdentExprModel>);
inline void _1b640ad5a_commonIdent(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6dac1_CommonIdentExprModel>);
inline void _1b640b0d0_commonSub(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6e132_CommonSubIdentExprModel>);
inline void _1b640b355_array(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6d7d5_ArrayExprModel>);
inline void _1b640b5ca_funcInsCommon(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c796ae_FnIns>);
inline void _1b640b850_funcIns(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c796ae_FnIns>);
inline void _1b640bac5_tuple(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6e42e_TupleExprModel>);
inline void _1b640bd4a_newCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c703ec_BuiltinNewCallExprModel>);
inline void _1b640c0c0_outCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6e808_BuiltinOutCallExprModel>);
inline void _1b640c345_outlnCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6ebe3_BuiltinOutlnCallExprModel>);
inline void _1b640c5ba_panicCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c707d7_BuiltinPanicCallExprModel>);
inline void _1b640c840_assertCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c70c8d_BuiltinAssertCallExprModel>);
inline void _1b640cab5_errorCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c72b6e_BuiltinErrorCallExprModel>);
inline void _1b640cd3a_copyCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c72784_BuiltinCopyCallExprModel>);
inline void _1b640d0b0_lenCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c7194d_BuiltinLenCallExprModel>);
inline void _1b640d335_capCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c71c6c_BuiltinCapCallExprModel>);
inline void _1b640d5aa_deleteCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c72421_BuiltinDeleteCallExprModel>);
inline void _1b640d830_makeCallSlice(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c71244_BuiltinMakeCallExprModel>*);
inline void _1b640daa5_makeCallStr(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c71244_BuiltinMakeCallExprModel>*);
inline void _1b640dd2a_makeCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c71244_BuiltinMakeCallExprModel>);
inline void _1b640e0a0_pushToSlice(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213e637cc_PushToSliceExprModel>);
inline void _1b640e325_appendToSlice(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213e63b84_AppendToSliceExprModel>);
inline void _1b640e59a_appendCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c7162e_BuiltinAppendCallExprModel>);
inline void _1b640e820_cloneCall(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c70012_BuiltinCloneCallExprModel>);
inline void _1b640ea95_sizeof(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c72e6b_SizeofExprModel>);
inline void _1b640ed1a_alignof(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c73257_AlignofExprModel>);
inline jule::Str _1b6410128_runeLit(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c73543_RuneExprModel>);
inline void _1b641039d_structureStatic(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c6d41c_StructStaticIdentExprModel>);
inline void _1b6410623_integratedToStr(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c73851_IntegratedToStrExprModel>);
inline void _1b6410898_backendEmit(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c73c19_BackendEmitExprModel>);
inline void _1b6410b1d_free(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213c74005_FreeExprModel>);
inline void _1b6410d93_mutSlicing(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213e641c3_MutSlicingExprModel>);
inline void _1b6411118_strInsertBegin(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213e646ac_StrInsertBeginExprModel>);
inline void _1b641138d_strComp(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213e6290d_StrCompExprModel>);
inline void _1b6411635_inlineStdInternalNosafeStobs(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213e64954_InlineStdInternalNosafeStobs>);
inline void _1b64118bb_model(jule::Ptr<_1b640465b_exprCoder>, jule::Any);
inline void _1b6411b41_initExpr(jule::Ptr<_1b640465b_exprCoder>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_1b6414429_deriveCoder> static__1b64147c0_new(jule::Ptr<_213b05b01_ObjectCoder>);
inline jule::Str _1b6414acd_cloneFuncDecl(_1b6414429_deriveCoder*, jule::Ptr<_213c615db_Struct>*);
inline jule::Str _1b6414ddb_cloneFuncDef(_1b6414429_deriveCoder*, jule::Ptr<_213c615db_Struct>*);
inline jule::Ptr<_1b6415d10_TestCoder> static__1b641623e_New(jule::Ptr<_213b05b01_ObjectCoder>*);
inline jule::Ptr<_213cd7c7d_ImportInfo> _1b64164a3_findTestingPackage(jule::Ptr<_1b6415d10_TestCoder>);
inline void _1b6416728_appendTest(jule::Ptr<_1b6415d10_TestCoder>, jule::Ptr<_213c796ae_FnIns>);
inline void _1b641699d_appendPackageTests(jule::Ptr<_1b6415d10_TestCoder>, jule::Ptr<_213cda8b8_Package>*);
inline jule::Bool _1b6416c12_readyTestingPackage(jule::Ptr<_1b6415d10_TestCoder>);
inline void _1b6416ddd_callTmReset(jule::Ptr<_1b6415d10_TestCoder>);
inline void _1b64170b9_callTmFailed(jule::Ptr<_1b6415d10_TestCoder>);
inline void _1b6417295_callTmSkipped(jule::Ptr<_1b6415d10_TestCoder>);
inline void _1b6417471_Serialize(jule::Ptr<_1b6415d10_TestCoder>);
inline jule::Str static__1b64188d4_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1b6418cbe_toLocal(jule::I32, jule::I32, jule::Str*);
inline jule::Str static__1b6419066_func(jule::Ptr<_213c76a0d_Fn>*);
inline jule::Str static__1b641930d_funcIns(jule::Ptr<_213c796ae_FnIns>*);
inline jule::Str static__1b64195a5_traitDecl(jule::Ptr<_213c88b63_Trait>);
inline jule::Str static__1b641984c_param(jule::Ptr<_213c751c1_Param>*);
inline jule::Str static__1b6419ae4_structure(jule::Ptr<_213c615db_Struct>*);
inline jule::Str static__1b6419d8b_structureIns(jule::Ptr<_213c64402_StructIns>*);
inline jule::Str static__1b641a133_field(jule::Ptr<_213c5da17_Field>*);
inline jule::Str static__1b641a3ca_var(jule::Ptr<_213d11988_Var>);
inline jule::Str static__1b641a672_iterBegin(jule::Uintptr);
inline jule::Str static__1b641a919_iterEnd(jule::Uintptr);
inline jule::Str static__1b641abb1_iterNext(jule::Uintptr);
inline jule::Str static__1b641ae58_label(jule::Str*);
inline jule::Str static__1b641b200_matchEnd(jule::Uintptr);
inline jule::Str static__1b641b497_caseBegin(jule::Uintptr);
inline jule::Str _213b14769_Str(_213b144e4_customType*);
inline jule::Bool _213b14a77_Equal(jule::Ptr<_213b144e4_customType>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_213b14e73_typeCoder> static__213b154b2_new(jule::Ptr<_213b05b01_ObjectCoder>*);
inline jule::Str _213b157c0_toType(_213b14e73_typeCoder*, jule::Str);
inline jule::Str _213b15acd_prim(_213b14e73_typeCoder*, jule::Ptr<_213d91089_Prim>);
inline jule::Str _213b15ddb_tuple(_213b14e73_typeCoder*, jule::Ptr<_213d95d4c_Tuple>);
inline jule::Str _213b161e9_asSptr(_213b14e73_typeCoder*, jule::Str);
inline jule::Str _213b16507_asPtr(_213b14e73_typeCoder*, jule::Str);
inline jule::Str _213b16815_sptr(_213b14e73_typeCoder*, jule::Ptr<_213d947da_Sptr>);
inline jule::Str _213b16b23_ptr(_213b14e73_typeCoder*, jule::Ptr<_213d97d4e_Ptr>);
inline jule::Str _213b16e31_enumDecl(_213b14e73_typeCoder*, jule::Ptr<_213c8b3e6_Enum>);
inline jule::Str _213b1723e_typeEnumDecl(_213b14e73_typeCoder*, jule::Ptr<_213c8c9e1_TypeEnum>);
inline jule::Str _213b1754c_asSlice(_213b14e73_typeCoder*, jule::Ptr<_213d88834_TypeKind>);
inline jule::Str _213b1785a_slice(_213b14e73_typeCoder*, jule::Ptr<_213d95247_Slc>);
inline jule::Str _213b17b68_mapType(_213b14e73_typeCoder*, jule::Ptr<_213d967ed_Map>);
inline jule::Str _213b17e76_traitIdent(_213b14e73_typeCoder*, jule::Str);
inline jule::Str _213b18284_traitDecl(_213b14e73_typeCoder*, jule::Ptr<_213c88b63_Trait>);
inline jule::Str _213b18592_structure(_213b14e73_typeCoder*, jule::Ptr<_213c615db_Struct>);
inline jule::Str _213b188a0_structureIns(_213b14e73_typeCoder*, jule::Ptr<_213c64402_StructIns>);
inline jule::Str _213b18bad_array(_213b14e73_typeCoder*, jule::Ptr<_213d973e2_Arr>);
inline jule::Str _213b192c9_paramIns(_213b14e73_typeCoder*, jule::Ptr<_213c787e0_ParamIns>*);
inline void _213b19906_funcInsResult(_213b14e73_typeCoder*, jule::Str*, jule::Ptr<_213c796ae_FnIns>*);
inline jule::Str _213b19c14_anonFunc(_213b14e73_typeCoder*, jule::Ptr<_213c796ae_FnIns>);
inline jule::Str _213b1a022_func(_213b14e73_typeCoder*, jule::Ptr<_213c796ae_FnIns>);
inline jule::Str _213b1a330_kind(_213b14e73_typeCoder*, jule::Ptr<_213d88834_TypeKind>);
inline jule::Ptr<_213b1ca3b_resultCoder> static__213b1d003_new(jule::Ptr<_213b14e73_typeCoder>*);
inline void _213b1d322_ptr(_213b1ca3b_resultCoder*, jule::Str*, jule::Ptr<_213d97d4e_Ptr>);
inline void _213b1d641_sptr(_213b1ca3b_resultCoder*, jule::Str*, jule::Ptr<_213d947da_Sptr>);
inline void _213b1d960_mapType(_213b1ca3b_resultCoder*, jule::Str*, jule::Ptr<_213d967ed_Map>);
inline void _213b1dc7e_slice(_213b1ca3b_resultCoder*, jule::Str*, jule::Ptr<_213d95247_Slc>);
inline void _213b1e09d_arr(_213b1ca3b_resultCoder*, jule::Str*, jule::Ptr<_213d973e2_Arr>);
inline void _213b1e3bc_func(_213b1ca3b_resultCoder*, jule::Str*, jule::Ptr<_213c796ae_FnIns>);
inline void _213b1e6db_tup(_213b1ca3b_resultCoder*, jule::Str*, jule::Ptr<_213d95d4c_Tuple>);
inline void _213b1ea0a_codeMut(_213b1ca3b_resultCoder*, jule::Str*, jule::Ptr<_213d88834_TypeKind>*);
inline void _213b1ed29_codeMut1(_213b1ca3b_resultCoder*, jule::Str*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Str _213b20104_code(_213b1ca3b_resultCoder*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Str _1b95b551c_Name(_1b95b57d6_Flag*);
inline jule::Str _1b95b5660_What(_1b95b57d6_Flag*);
inline void _1b95b5ac2_Reset(_1b95b57d6_Flag*);
inline jule::I32 _1b95b5c04_Short(_1b95b57d6_Flag*);
inline jule::Str _1b95b8b19_Name(_1b95b908c_Flag*);
inline jule::Str _1b95b9378_What(_1b95b908c_Flag*);
inline void _1b95b94aa_Reset(_1b95b908c_Flag*);
inline jule::I32 _1b95b95dc_Short(_1b95b908c_Flag*);
inline jule::Str _1b95bc2c1_Name(_1b95bc744_Flag*);
inline jule::Str _1b95bca30_What(_1b95bc744_Flag*);
inline void _1b95bcb62_Reset(_1b95bc744_Flag*);
inline jule::I32 _1b95bcc94_Short(_1b95bc744_Flag*);
inline jule::Str _1b95c09bc_Name(_1b95c0e40_Flag*);
inline jule::Str _1b95c122b_What(_1b95c0e40_Flag*);
inline void _1b95c135d_Reset(_1b95c0e40_Flag*);
inline jule::I32 _1b95c1490_Short(_1b95c0e40_Flag*);
inline jule::Str _1b95c4174_Name(_1b95c45e7_Flag*);
inline jule::Str _1b95c48d3_What(_1b95c45e7_Flag*);
inline void _1b95c4a15_Reset(_1b95c45e7_Flag*);
inline jule::I32 _1b95c4b47_Short(_1b95c45e7_Flag*);
inline jule::Ptr<_1b662c3ab_FlagSet> static__1b662c697_New(void);
inline jule::Trait<_1b662a94d_CommonFlag> _1b662cad7_FindFlag(_1b662c3ab_FlagSet*, jule::Str);
inline jule::Trait<_1b662a94d_CommonFlag> _1b662cde5_FindFlagShort(_1b662c3ab_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1b662d467_Parse(_1b662c3ab_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1b95c45e7_Flag> _1b9638172_addFlagCommon(_1b662c3ab_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1b95c0e40_Flag> _1b9641103_addFlagCommon(_1b662c3ab_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1b96360c6_AddVar(_1b662c3ab_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1b963e09b_AddVar(_1b662c3ab_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1b95d7165_parseInteger(_1b662eab7_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>);
inline __jule_tuple_u64__jule_tuple_bool _1b95de6bc_parseInteger(_1b662eab7_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>);
inline jule::Str _1b663037b_getData(_1b662eab7_argParser*);
inline jule::VoidExceptional _1b66305bd_processFlag(_1b662eab7_argParser*, jule::Trait<_1b662a94d_CommonFlag>*);
inline jule::VoidExceptional _1b6630843_singleDash(_1b662eab7_argParser*, jule::Str*);
inline jule::VoidExceptional _1b6630ab8_doubleDash(_1b662eab7_argParser*, jule::Str*);
inline jule::VoidExceptional _1b6630c94_tryArg(_1b662eab7_argParser*);
inline jule::VoidExceptional _1b6630e70_parse(_1b662eab7_argParser*);
inline jule::Ptr<_213b05b01_ObjectCoder> static__213b05eca_New(jule::Ptr<_1cdcd6784_IR>*, _213b0425e_SerializationInfo);
inline void _213b06250_write(jule::Ptr<_213b05b01_ObjectCoder>, jule::Str);
inline void _213b064c5_writeR(jule::Ptr<_213b05b01_ObjectCoder>, jule::Str*);
inline void _213b066a1_addIndent(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b0687c_doneIndent(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b06a58_indent(jule::Ptr<_213b05b01_ObjectCoder>);
inline jule::I32 _213b06d66_findAnyType(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213d88834_TypeKind>*);
inline jule::I32 _213b07174_pushAnyType(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213d88834_TypeKind>);
inline void _213b073e9_pushResultIns(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c796ae_FnIns>*);
inline void _213b0766e_pushResult(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c76a0d_Fn>*);
inline jule::I32 _213b07a26_findTypeOffsetS(_213b05b01_ObjectCoder*, jule::Ptr<_213c88b63_Trait>, jule::Ptr<_213c64402_StructIns>);
inline jule::I32 _213b07dcd_findTypeOffset(_213b05b01_ObjectCoder*, jule::Ptr<_213c88b63_Trait>, jule::Ptr<_213d88834_TypeKind>);
inline void _213b081ec_pushAndWriteMaskMapper(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c88b63_Trait>, jule::Ptr<_213c88b63_Trait>);
inline void _213b08472_locInfo(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_2114c1b73_Token>*);
inline void _213b0864d_head(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b08829_links(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b08a9e_prepareStructure(_213b05b01_ObjectCoder*, jule::Ptr<_213c615db_Struct>*);
inline void _213b08c7a_prepareStructures(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b09000_iterPackages(jule::Ptr<_213b05b01_ObjectCoder>, jule::Fn<void(jule::Ptr<_213cda8b8_Package>*)>);
inline void _213b091cb_buildTraitMap(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b093a7_traitDecls(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b0962c_structurePlainDecl(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c615db_Struct>*);
inline void _213b09808_structurePlainDecls(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b09a7d_fieldDecl(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c6390c_FieldIns>*);
inline void _213b09d03_structureDestructor(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c64402_StructIns>*);
inline void _213b0a09a_structureDeriveDefsDecls(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c64402_StructIns>*);
inline void _213b0a3ca_structureOperatorEq(jule::Ptr<_213b05b01_ObjectCoder>, jule::Str*, jule::Ptr<_213c64402_StructIns>*);
inline void _213b0a6e9_structureOperatorNotEq(jule::Ptr<_213b05b01_ObjectCoder>, jule::Str*, jule::Ptr<_213c64402_StructIns>*);
inline void _213b0aab2_structureOperator(jule::Ptr<_213b05b01_ObjectCoder>, jule::Str*, jule::Ptr<_213c796ae_FnIns>*, jule::Str);
inline void _213b0ad37_structureOperators(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c64402_StructIns>*);
inline void _213b0b0ac_structureInsDecl(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c64402_StructIns>*);
inline void _213b0b332_structureDecl(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c615db_Struct>*);
inline void _213b0b50d_structureDecls(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b0b6d9_structureMethodDecls(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b0b95e_paramsDecls(jule::Ptr<_213b05b01_ObjectCoder>, jule::Slice<jule::Ptr<_213c787e0_ParamIns>>*);
inline void _213b0bc7d_funcHead(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c796ae_FnIns>*, jule::Bool);
inline void _213b0c09c_funcDeclIns(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c796ae_FnIns>*, jule::Bool);
inline void _213b0c3bb_funcDecl(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c76a0d_Fn>*, jule::Bool);
inline void _213b0c784_funcDeclTrait(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c88b63_Trait>*, jule::Ptr<_213c76a0d_Fn>*, jule::Bool);
inline void _213b0c960_funcDecls(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b0cc7e_traitDataTypeMethods(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c88b63_Trait>*, jule::Ptr<_213c88b63_Trait>*);
inline void _213b0ce5a_traitDataTypes(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b0d1d0_paramIns(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c787e0_ParamIns>*);
inline void _213b0d455_paramsIns(jule::Ptr<_213b05b01_ObjectCoder>, jule::Slice<jule::Ptr<_213c787e0_ParamIns>>*);
inline void _213b0d774_varInitExpr(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213d11988_Var>*, jule::Fn<void(void)>);
inline void _213b0d9e9_var(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213d11988_Var>);
inline void _213b0dc6e_funcIns(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c796ae_FnIns>*);
inline void _213b0dee4_func(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c76a0d_Fn>*);
inline void _213b0e313_funcTrait(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213b04726_traitHash>*, jule::Ptr<_213c76a0d_Fn>*);
inline void _213b0e632_traitWrapper(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c76a0d_Fn>*, jule::Ptr<_213b04726_traitHash>*);
inline void _213b0e80d_traitWrappers(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b0eb2c_traitDataMethods(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c88b63_Trait>*, jule::Ptr<_213b04726_traitHash>*);
inline void _213b0ee4b_traitData(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213b04726_traitHash>*, jule::Ptr<_213c88b63_Trait>*);
inline void _213b10127_traitDatas(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b10303_globals(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b104ce_decls(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b10754_structureMethods(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c64402_StructIns>*);
inline void _213b109c9_structureDeriveDefs(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c64402_StructIns>*);
inline void _213b10c4e_structureOstream(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c64402_StructIns>*);
inline void _213b10ec4_structureIns(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c64402_StructIns>*);
inline void _213b11249_structure(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213c615db_Struct>*);
inline void _213b11425_structures(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b11601_funcs(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b11876_pushInit(jule::Ptr<_213b05b01_ObjectCoder>, jule::Ptr<_213cda8b8_Package>*);
inline void _213b11a52_initCaller(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b11c2d_end(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b11e09_serializeHead(jule::Ptr<_213b05b01_ObjectCoder>);
inline void _213b120d5_Serialize(jule::Ptr<_213b05b01_ObjectCoder>);
inline jule::Ptr<_1cddd5003_ObjectDeadCode> static__1cddd5487_new(jule::Ptr<_1cdcd6784_IR>*);
inline jule::Bool _1b8ee56ab_isLive(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213c88b63_Trait>*);
inline jule::Bool _1b8eea31a_isLive(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213c796ae_FnIns>*);
inline jule::Bool _1b900470e_isLive(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213c64402_StructIns>*);
inline jule::Bool _1b9008108_isLive(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213d11988_Var>*);
inline void _1b8ee5a0d_pushLive(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213c88b63_Trait>);
inline void _1b8eead32_pushLive(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213c796ae_FnIns>);
inline void _1b9001d49_pushLive(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213c64402_StructIns>);
inline void _1b900845a_pushLive(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213d11988_Var>);
inline void _1cde176c8_setReferencesAsLive(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213c7c618_ReferenceStack>*);
inline void _1cde1794d_inits(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213cda8b8_Package>*);
inline void _1cde17bc3_collectLivePackage(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213cda8b8_Package>*);
inline void _1cde17d9e_collectLive(jule::Ptr<_1cddd5003_ObjectDeadCode>);
inline void _1cde18124_removeDeadGlobals(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Slice<jule::Ptr<_213d11988_Var>>*);
inline void _1cde18399_removeDeadFns(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Slice<jule::Ptr<_213c76a0d_Fn>>*);
inline void _1cde1861e_removeDeadStructs(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Slice<jule::Ptr<_213c615db_Struct>>*);
inline void _1cde18894_removeDeadTraits(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Slice<jule::Ptr<_213c88b63_Trait>>*);
inline void _1cde18b19_removeDeadsFile(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213d56417_SymbolTable>*);
inline void _1cde18d8e_removeDeadsPackage(jule::Ptr<_1cddd5003_ObjectDeadCode>, jule::Ptr<_213cda8b8_Package>*);
inline void _1cde1906a_removeDeads(jule::Ptr<_1cddd5003_ObjectDeadCode>);
inline void _1cde19246_elimanate(jule::Ptr<_1cddd5003_ObjectDeadCode>);
inline __jule_tuple_x_1cdcd6784_IR__jule_tuple_s_2110be2cb_Log static__1cdcd6bc4_Build(jule::Str, jule::I32);
inline void _1cdcd7169_appendStructs(_1cdcd6784_IR*, jule::Ptr<_213cda8b8_Package>*, jule::Slice<jule::Ptr<_213c615db_Struct>>*);
inline jule::Slice<jule::Ptr<_213c615db_Struct>> _1cdcd73cd_GetAllStructures(_1cdcd6784_IR*);
inline void _1cdcd76ec_appendGlobals(_1cdcd6784_IR*, jule::Ptr<_213cda8b8_Package>*, jule::Slice<jule::Ptr<_213d11988_Var>>*);
inline jule::Slice<jule::Ptr<_213d11988_Var>> _1cdcd7961_GetAllGlobals(_1cdcd6784_IR*);
inline void _1cdcd7b3c_Order(_1cdcd6784_IR*);
inline jule::Str _213c64765_Str(_213c64402_StructIns*);
inline jule::Bool _213c64a73_Equal(jule::Ptr<_213c64402_StructIns>, jule::Ptr<_213d88834_TypeKind>);
inline jule::Bool _213c64ee6_Same(_213c64402_StructIns*, jule::Ptr<_213c64402_StructIns>);
inline jule::Ptr<_213c76a0d_Fn> _213c6539d_FindMethod(_213c64402_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_213c6390c_FieldIns> _213c656ab_FindField(_213c64402_StructIns*, jule::Str);
inline jule::Ptr<_213d11988_Var> _213c659b9_FindStatic(_213c64402_StructIns*, jule::Str);
inline jule::Ptr<_211160dea_Cmd> static__211161307_New(jule::Str);
inline jule::VoidExceptional _2111614d3_Spawn(_211160dea_Cmd*);
inline jule::Exceptional<jule::I32> _211161923_Wait(_211160dea_Cmd*);
inline jule::VoidExceptional _2111a5428_spawn(_211160dea_Cmd*);
inline jule::Exceptional<jule::I32> _2111a5868_wait(_211160dea_Cmd*);
inline void _22a8405e3_Free(void*);
inline jule::Str _22a869e9c_BytePtrToStr(jule::U8*);
inline jule::I32 _2299ad564_GetLastErrno(void);
inline jule::I32 _22a87d741_Fcntl(jule::I32, jule::I32, jule::I32);
inline jule::I32 _22a87da82_Stat(jule::U8*, struct stat*);
inline jule::I32 _22a87de6c_Open(jule::U8*, jule::I32, jule::I32);
inline jule::U8* _22a87e2ad_Getcwd(jule::U8*, jule::U32);
inline DIR* _22a87e786_Opendir(jule::U8*);
inline struct dirent* _22a87ea2d_Readdir(DIR*);
inline jule::I32 _22a87ecc5_Closedir(DIR*);
inline jule::I32 _22a880655_Mkdir(jule::U8*, jule::I32);
inline jule::I32 _22a8808ec_Rmdir(jule::U8*);
inline jule::I32 _22a880b94_Unlink(jule::U8*);
inline jule::I32 _22a8aa73a_Read(jule::I32, void*, jule::U32);
inline jule::I32 _22a8aaaae_Close(jule::I32);
inline jule::I32 _22a8aae99_Write(jule::I32, void*, jule::U32);
inline void _22a8ab1a8_Exit(jule::I32);
inline jule::Slice<jule::U8> _22a8bd2db_Stobs(jule::Str*);
inline void _22a8bd990_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline jule::I32 _22a96b8b7_getLastOsError(void);
inline jule::Slice<jule::Str> _22a970bda_Args(void);
inline jule::Exceptional<jule::Str> _22a97115d_WorkingDir(void);
inline jule::Exceptional<jule::Str> _22a971a21_getwd(void);
inline jule::Bool _22c652447_IsLetter(jule::I32);
inline jule::Bool _22c6b9e1b_is16(jule::Slice<_22c6b8359_Range16>, jule::U16);
inline jule::Bool _22c6ba25c_is32(jule::Slice<_22c6b87cc_Range32>, jule::U32);
inline jule::Bool _22c6ba9ee_isExcludingLatin(jule::Ptr<_22c6b8c50_RangeTable>, jule::I32);
inline jule::Bool _22c6bac96_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _210ee97de_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _210ee9b0d_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _210ee9da5_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _210eeab53_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _210eeae94_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I32 _210eeb4d3_RuneCountStr(jule::Str);
inline jule::Bool _210eeb77a_RuneStart(jule::U8);
inline jule::I32 _21101d45b_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _21103077b_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I32 _211030a45_FindByteStr(jule::Str*, jule::U8);
inline jule::I32 _211030d86_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _21103124e_Repeat(jule::Str, jule::I32);
inline jule::Bool _21103167d_hasPrefix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _2110319be_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _211031e31_hasSuffix(jule::Str*, jule::Str*, jule::I32);
inline jule::Bool _21103223e_HasSuffix(jule::Str, jule::Str);
inline jule::I32 _211032629_FindAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _211032e65_FindLastAt(jule::Str, jule::Str, jule::I32);
inline jule::I32 _2110332a6_FindLast(jule::Str, jule::Str);
inline jule::I32 _21103454e_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I32 _211034d8a_FindLastByte(jule::Str, jule::U8);
inline jule::I32 _211035b9e_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _2110363ca_Split(jule::Str, jule::Str, jule::I32);
inline jule::Bool _21103671b_Contains(jule::Str, jule::Str);
inline jule::Bool _2110371de_ContainsAny(jule::Str, jule::Str);
inline jule::I32 _211037530_Count(jule::Str, jule::Str);
inline jule::Str _2110379b4_Replace(jule::Str, jule::Str, jule::Str, jule::I32);
inline void _211034a27_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _211038a70_TrimLeft(jule::Str, jule::Str);
inline void _211038d28_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _2110394aa_Trim(jule::Str, jule::Str);
inline jule::Str _2110397eb_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _21103aec3_Clean(jule::Str);
inline jule::Str _21103b556_FromSlash(jule::Str);
inline jule::Str _21103b875_Join(jule::Slice<jule::Str>);
inline jule::Str _21103bb1c_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21103bdb4_Abs(jule::Str);
inline jule::Str _21103c15b_Base(jule::Str);
inline jule::Str _21103c4d0_Dir(jule::Str);
inline jule::Str _21103c777_VolumeName(jule::Str);
inline jule::Bool _21103d5d0_IsPathSep(jule::U8);
inline jule::Bool _21103d8bb_IsAbs(jule::Str);
inline jule::I32 _21103db63_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _21103de82_abs(jule::Str);
inline jule::Str _21103e229_join(jule::Slice<jule::Str>);
inline jule::I32 _22a8b0ae7_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _21116269e_AtoiBp(jule::U8*, jule::I32);
inline jule::Str _2111a15cd_Itoa(jule::I32);
inline jule::Str _2111a18b9_Utoa(jule::U32);
inline jule::Slice<char*> _2111a4b97_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I32 _2111a4ed8_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _2111a51e7_setenv(jule::Slice<jule::Str>*);
inline jule::I32 _2111a60a5_processErrorFromCode(jule::I32);
inline jule::I32 _2111a62e7_getLastProcessError(void);
inline void _2111a6a9a_Exit(jule::I32);
inline jule::Str _2111a6c98_Executable(void);
inline jule::Bool _2110b171e_IsStdHeaderPath(jule::Str);
inline jule::Bool _2110b19c7_IsValidHeaderExt(jule::Str);
inline jule::Bool _2110b1c6e_IsValidCppExt(jule::Str);
inline jule::Str _2110be71b_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _2110bea07_argToStr(jule::Any);
inline jule::I32 _2110bec9e_findNextFmt(jule::Str);
inline jule::Str _2110c0134_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2110c11ac_IsTopDirective(jule::Str);
inline jule::Bool _2110c25dc_IsWindows(jule::Str);
inline jule::Bool _2110c2895_IsDarwin(jule::Str);
inline jule::Bool _2110c2b3c_IsLinux(jule::Str);
inline jule::Bool _2110c2e5b_IsI386(jule::Str);
inline jule::Bool _2110c3203_IsAmd64(jule::Str);
inline jule::Bool _2110c349a_IsArm64(jule::Str);
inline jule::Bool _2110c3742_IsUnix(jule::Str);
inline jule::Bool _2110c3ab6_Is32Bit(jule::Str);
inline jule::Bool _2110c3d5d_Is64Bit(jule::Str);
inline void _2111a8030_init(void);
inline jule::Bool _2114c237c_IsUnaryOp(jule::U32);
inline jule::Bool _2114c2668_IsBinOp(jule::U32);
inline jule::Bool _2114c2c2e_IsStr(jule::Str);
inline jule::Bool _2114c2ec6_IsRawStr(jule::Str);
inline jule::Bool _2114c326d_IsRune(jule::Str);
inline jule::Bool _2114c3889_IsBool(jule::Str);
inline jule::Bool _2114c3b31_IsFloat(jule::Str);
inline jule::Bool _2114c3dc8_IsNum(jule::Str);
inline jule::Bool _2114c4417_IsIgnoreIdent(jule::Str);
inline jule::Bool _2114c46ae_IsAnonIdent(jule::Str);
inline jule::Bool _2114c4bed_IsSpace(jule::I32);
inline jule::Bool _2114c514e_IsLetter(jule::I32);
inline jule::Bool _2114c568d_IsDecimal(jule::U8);
inline jule::Bool _2114c5935_IsBinary(jule::U8);
inline jule::Bool _2114c5bcc_IsOctal(jule::U8);
inline jule::Bool _2114c5e74_IsHex(jule::U8);
inline jule::Bool _2114c621b_IsAssign(jule::U32);
inline jule::Bool _2114c64b3_IsPostfixOp(jule::U32);
inline jule::Bool _2114c675a_IsAssignOp(jule::U32);
inline jule::Ptr<_2114c700d_File> _2114c82b7_NewFileSet(jule::Str);
inline _2110be2cb_Log _2114c9a5a_makeErr(jule::I32, jule::I32, jule::Ptr<_2114c700d_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _2114c9de0_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _2114ca231_floatFmtE(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _2114ca5b6_floatFmtP(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _2114ca907_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _2114cac48_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _2114cb089_floatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _2114cb4da_floatNum(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _2114cb782_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _2114cba29_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _2114cbd6a_isFloatFmtE(jule::U8, jule::I32);
inline jule::Bool _2114cc1ab_isFloatFmtP(jule::U8, jule::I32);
inline jule::Bool _2114cc4ec_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _2114cc83d_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Bool _2114ccb7e_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _2114cd0d0_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _2114cd377_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _2114cd6b8_hexEscape(jule::Slice<jule::U8>*, jule::I32);
inline jule::Str _2114cd960_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _2114cdc29_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _2114cddd3_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _2114ce169_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_2110be2cb_Log> _2114d3b63_Lex(jule::Ptr<_2114c700d_File>, jule::I32);
inline jule::I32 _2121342eb_LeadingZeros64(jule::U64);
inline jule::I32 _212135231_TrailingZeros(jule::U32);
inline jule::I32 _212135b27_TrailingZeros32(jule::U32);
inline jule::I32 _212135dbe_TrailingZeros64(jule::U64);
inline jule::I32 _21213b4ce_Len32(jule::U32);
inline jule::I32 _21213b776_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _21213c436_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _21213dab9_Mul64(jule::U64, jule::U64);
inline jule::U32 _212064638_F32Bits(jule::F32);
inline jule::F32 _212064924_F32FromBits(jule::U32);
inline jule::U64 _212064bbb_F64Bits(jule::F64);
inline jule::F64 _212064eda_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _2120674c6_Frexp(jule::F64);
inline jule::F64 _212145a9e_NaN(void);
inline jule::Bool _212145d8a_IsNaN(jule::F64);
inline jule::F64 _212146132_Inf(jule::I32);
inline jule::Bool _212146440_IsInf(jule::F64, jule::I32);
inline __jule_tuple_f64__jule_tuple_int _2121466d7_normalize(jule::F64);
inline jule::F64 _2121480bd_Log(jule::F64);
inline jule::F64 _21214895e_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _2121503a0_Modf(jule::F64);
inline jule::F64 _212150b64_Log2(jule::F64);
inline jule::Str _21217e577_FmtFloat(jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _21217eae9_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I32, jule::I32);
inline jule::Slice<jule::U8> _21218026a_bigFtoa(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _211aa1164_floatInfo*);
inline jule::Slice<jule::U8> _2121808b9_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _21217e038_decimalSlice, jule::I32, jule::U8);
inline void _212180cb5_roundShortest(_212190dc4_decimal*, jule::U64, jule::I32, _211aa1164_floatInfo*);
inline jule::Slice<jule::U8> _2121812e3_fmtE(jule::Slice<jule::U8>, jule::Bool, _21217e038_decimalSlice, jule::I32, jule::U8);
inline jule::Slice<jule::U8> _212181777_fmtF(jule::Slice<jule::U8>, jule::Bool, _21217e038_decimalSlice, jule::I32);
inline jule::Slice<jule::U8> _212181d82_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I32, _211aa1164_floatInfo*);
inline jule::Slice<jule::U8> _212182503_fmtX(jule::Slice<jule::U8>, jule::I32, jule::U8, jule::Bool, jule::U64, jule::I32, _211aa1164_floatInfo*);
inline jule::I32 _212182844_min(jule::I32, jule::I32);
inline jule::I32 _212182b85_max(jule::I32, jule::I32);
inline jule::U8 _2121836ad_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__211a9dc00_ConvError _212183adc_parseUint(jule::Str*, jule::I32, jule::I32);
inline jule::Exceptional<jule::U64> _212183ec7_ParseUint(jule::Str, jule::I32, jule::I32);
inline jule::Exceptional<jule::I64> _212184439_ParseInt(jule::Str, jule::I32, jule::I32);
inline __jule_tuple_f64__jule_tuple_bool _212185050_eiselLemire64(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _21218544b_eiselLemire32(jule::U64, jule::I32, jule::Bool);
inline jule::I32 _212187294_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>*, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _212187591_special(jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _212187838_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _2121892b8_atof64exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _2121896a3_atof32exact(jule::U64, jule::I32, jule::Bool);
inline __jule_tuple_f64__jule_tuple__211a9dc00_ConvError _212189bd1_atofHex(_211aa1164_floatInfo*, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__211a9dc00_ConvError _21218a088_atof32(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__211a9dc00_ConvError _21218a330_atof64(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__211a9dc00_ConvError _21218a671_parseFloatPrefix(jule::Str*, jule::I32);
inline jule::Exceptional<jule::F64> _21218a9b2_ParseFloat(jule::Str, jule::I32);
inline void _21218b232_ryuFtoaFixed32(_21217e038_decimalSlice*, jule::U32, jule::I32, jule::I32);
inline void _21218b672_ryuFtoaFixed64(_21217e038_decimalSlice*, jule::U64, jule::I32, jule::I32);
inline void _21218be58_formatDecimal(_21217e038_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I32);
inline void _21218c3cb_ryuFtoaShortest(_21217e038_decimalSlice*, jule::U64, jule::I32, _211aa1164_floatInfo*);
inline jule::I32 _21218c673_mulByLog2Log10(jule::I32);
inline jule::I32 _21218c91a_mulByLog10Log2(jule::I32);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _21218cd05_computeBounds(jule::U64, jule::I32, _211aa1164_floatInfo*);
inline void _21218d399_ryuDigits(_21217e038_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _21218d982_ryuDigits32(_21217e038_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I32);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _21218dd6c_mult64bitPow10(jule::U32, jule::I32, jule::I32);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _21218e257_mult128bitPow10(jule::U64, jule::I32, jule::I32);
inline jule::Bool _21218e598_divisibleByPow5(jule::U64, jule::I32);
inline __jule_tuple_u32__jule_tuple_u32 _21218e840_divmod1e9(jule::U64);
inline void _2121925ac_trim(_212190dc4_decimal*);
inline void _212192865_rightShift(_212190dc4_decimal*, jule::U32);
inline jule::Bool _212192cc7_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I32, jule::Str*);
inline void _21219304c_leftShift(_212190dc4_decimal*, jule::U32);
inline jule::Bool _21219338d_shouldRoundUp(_212190dc4_decimal*, jule::I32);
inline jule::Str _2121949aa_FmtUint(jule::U64, jule::I32);
inline jule::Str _212194d40_FmtInt(jule::I64, jule::I32);
inline jule::Str _2121950d7_Itoa(jule::I32);
inline jule::Str _212195406_small(jule::I32);
inline jule::Bool _21219569d_isPowerOfTwo(jule::I32);
inline __jule_tuple_su8__jule_tuple_str _212195bcb_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I32, jule::Bool, jule::Bool);
inline jule::Str _2121970d9_RealKindOf(jule::Str);
inline jule::I32 _212197381_BitsizeOf(jule::Str);
inline jule::Str _2121976a0_IntFromBits(jule::I32);
inline jule::Str _212197947_UintFromBits(jule::I32);
inline jule::Str _212197bde_FloatFromBits(jule::I32);
inline jule::Bool _21219878e_CheckBitFloat(jule::Str, jule::I32);
inline jule::I32 _212198a36_BitsizeOfFloat(jule::F64);
inline jule::I32 _212198ccd_BitsizeOfInt(jule::I64);
inline jule::I32 _212199075_BitsizeOfUint(jule::U64);
inline void _2121991da_UpdateTarget(void);
inline void _212199350_init(void);
inline jule::I64 _21219d189_MinI(jule::Str);
inline jule::I64 _21219d475_MaxI(jule::Str);
inline jule::U64 _21219d71c_MaxU(jule::Str);
inline jule::F64 _21219d92b_Min(jule::Str);
inline jule::F64 _21219dbc3_Max(jule::Str);
inline jule::Bool _21219e124_IsI8Compatible(jule::Str);
inline jule::Bool _21219e410_IsI16Compatible(jule::Str);
inline jule::Bool _21219e6a7_IsI32Compatible(jule::Str);
inline jule::Bool _21219e9c6_IsI64Compatible(jule::Str);
inline jule::Bool _21219ec6d_IsU8Compatible(jule::Str);
inline jule::Bool _2121a0015_IsU16Compatible(jule::Str);
inline jule::Bool _2121a02ac_IsU32Compatible(jule::Str);
inline jule::Bool _2121a0631_IsU64Compatible(jule::Str);
inline jule::Bool _2121a08c8_IsF32Compatible(jule::Str);
inline jule::Bool _2121a0b70_IsF64Compatible(jule::Str);
inline jule::Bool _2121a0eb1_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _2121a1258_IsI16Greater(jule::Str);
inline jule::Bool _2121a1500_IsI32Greater(jule::Str);
inline jule::Bool _2121a1797_IsI64Greater(jule::Str);
inline jule::Bool _2121a1a3e_IsU16Greater(jule::Str);
inline jule::Bool _2121a1e90_IsU32Greater(jule::Str);
inline jule::Bool _2121a2237_IsU64Greater(jule::Str);
inline jule::Bool _2121a24ce_IsF32Greater(jule::Str);
inline jule::Bool _2121a2776_IsF64Greater(jule::Str);
inline jule::Bool _2121a2ab7_IsGreater(jule::Str, jule::Str);
inline jule::Bool _2121a3aeb_IsSigInt(jule::Str);
inline jule::Bool _2121a3dd7_IsUnsigInt(jule::Str);
inline jule::Bool _2121a417e_IsInt(jule::Str);
inline jule::Bool _2121a449d_IsFloat(jule::Str);
inline jule::Bool _2121a4745_IsNum(jule::Str);
inline jule::Bool _2121a49dc_IsSigNum(jule::Str);
inline void _2121ad474_lshiftUnsig(_2121a4c51_Const*, _2121a4c51_Const*);
inline void _2121ad771_rshiftUnsig(_2121a4c51_Const*, _2121a4c51_Const*);
inline jule::Bool _213d2a210_IsAscii(jule::I32);
inline jule::I32 _213d2a342_ToRune(jule::Slice<jule::U8>);
inline jule::Str _213d41ec4_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _213d422e3_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _213d4258a_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _213d42898_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::Slice<jule::U8> _213d42bd9_strEsqSeq(jule::Slice<jule::U8>, jule::I32*);
inline jule::I32 _213e480db_findFormatPrefix(jule::Slice<jule::U8>*, jule::I32*);
inline jule::Slice<jule::U8> _213e4db91_getFormatRange(jule::I32*, jule::Slice<jule::U8>*);
inline void _213e4de49_FmtByDefault(jule::Str*, jule::Any*);
inline void _213e4e323_applyFmtByDefault(jule::Str*, jule::I32*, jule::Slice<jule::Any>);
inline void _213e4e71e_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I32*, jule::Slice<jule::Any>);
inline jule::Str _213e4ea2c_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _213e51710_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _213c7b7c1_parameterUsesGenerics(jule::Ptr<_213c787e0_ParamIns>*, jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>>*);
inline jule::Ptr<_213d906d7_TypeSymbol> _213c7dc9b_buildType(jule::Ptr<_213c41d2a_TypeDecl>);
inline jule::Ptr<_213d5be9a_Value> _213c7e087_buildExpr(jule::Ptr<_213c45ea5_Expr>);
inline jule::Ptr<_213d87adb_TypeAlias> _213c7e32e_buildTypeAlias(jule::Ptr<_213c57c97_TypeAliasDecl>);
inline jule::Ptr<_213c5da17_Field> _213c7e64d_buildField(jule::Ptr<_213c5b273_FieldDecl>);
inline jule::Slice<jule::Ptr<_213c5da17_Field>> _213c7e8e5_buildFields(jule::Slice<jule::Ptr<_213c5b273_FieldDecl>>*);
inline jule::Ptr<_213c615db_Struct> _213c7eb8c_buildStruct(jule::Ptr<_213c5bac0_StructDecl>);
inline jule::Ptr<_213c751c1_Param> _213c7ee34_buildParam(jule::Ptr<_213c52137_ParamDecl>);
inline jule::Slice<jule::Ptr<_213c751c1_Param>> _213c802a8_buildParams(jule::Slice<jule::Ptr<_213c52137_ParamDecl>>*);
inline jule::Ptr<_213c749b7_RetType> _213c80550_buildRetType(jule::Ptr<_213c44a97_RetTypeDecl>);
inline jule::Ptr<_213c76a0d_Fn> _213c807e7_buildFunc(jule::Ptr<_213c53457_FnDecl>);
inline jule::Slice<jule::Ptr<_213c76a0d_Fn>> _213c80a8e_buildMethods(jule::Slice<jule::Ptr<_213c53457_FnDecl>>*);
inline jule::Slice<jule::Ptr<_213d906d7_TypeSymbol>> _213c80d36_buildTraitInherits(jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>>*);
inline jule::Ptr<_213c88b63_Trait> _213c810cd_buildTrait(jule::Ptr<_213c5c296_TraitDecl>);
inline jule::Ptr<_213c8a901_EnumItem> _213c81375_buildEnumItem(jule::Ptr<_213c59606_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_213c8a901_EnumItem>> _213c8161c_buildEnumItems(jule::Slice<jule::Ptr<_213c59606_EnumItemDecl>>*);
inline jule::Ptr<_213c8b3e6_Enum> _213c81a6d_buildEnum(jule::Ptr<_213c5a12e_EnumDecl>);
inline jule::Ptr<_213c8c45d_TypeEnumItem> _213c81d15_buildTypeEnumItem(jule::Ptr<_213c5a904_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_213c8c45d_TypeEnumItem>> _213c820ac_buildTypeEnumItems(jule::Slice<jule::Ptr<_213c5a904_TypeEnumItemDecl>>*);
inline jule::Ptr<_213c8c9e1_TypeEnum> _213c82354_buildTypeEnum(jule::Ptr<_213c5b00e_TypeEnumDecl>);
inline jule::Ptr<_213d11988_Var> _213c825eb_buildVar(jule::Ptr<_213c54436_VarDecl>);
inline jule::Slice<jule::Ptr<_213d11988_Var>> _213c82893_buildVars(jule::Slice<jule::Ptr<_213c54436_VarDecl>>);
inline jule::Ptr<_213cb3a17_Impl> _213c82b3a_buildImpl(jule::Ptr<_213c5c8a1_Impl>);
inline jule::Ptr<_213d5ae22_Data> _213cae848_buildAsComptimeMethodData(jule::Ptr<_213c796ae_FnIns>*);
inline jule::Ptr<_213cd7c7d_ImportInfo> _213caea35_findComptimePackage(jule::Ptr<_213ce1050_Sema>*);
inline jule::Ptr<_213d5ae22_Data> _213caed98_buildComptimeTypeInfoData(jule::Ptr<_213ce1050_Sema>*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Ptr<_213d5ae22_Data> _213cb01c8_buildComptimeValue(jule::Ptr<_213d5ae22_Data>*);
inline jule::Bool _213cb2e45_matchConstraint(jule::Str*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213cb3231_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_213cc06a0_scopeChecker> _213cb5aa2_newScopeCheckerBase(jule::Ptr<_213ce1050_Sema>*, jule::Ptr<_213c796ae_FnIns>);
inline jule::Ptr<_213cc06a0_scopeChecker> _213cb5e37_newScopeChecker(jule::Ptr<_213ce1050_Sema>*, jule::Ptr<_213c796ae_FnIns>);
inline jule::Ptr<_213cbe418_scopeLabel> _213cb6278_findLabelParent(jule::Str, jule::Ptr<_213cc06a0_scopeChecker>);
inline jule::Bool _213cb660d_modelIsGotoScope(jule::Any, jule::Ptr<_213cb8a72_Scope>*);
inline jule::Bool _213cb694e_stmtIsGotoScope(jule::Any*, jule::Ptr<_213cb8a72_Scope>*);
inline jule::I32 _213cb6c90_countMatchType(jule::Ptr<_213cbc889_Match>*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Slice<jule::Ptr<_213d5ae22_Data>> _213cb7037_getDatasFromTupleData(jule::Ptr<_213d5ae22_Data>*);
inline jule::Bool _213cb7873_checkMut(jule::Ptr<_213ce1050_Sema>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline jule::Bool _213cb7d07_checkAssign(jule::Ptr<_213ce1050_Sema>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>, jule::Ptr<_2114c1b73_Token>);
inline jule::Bool _213cb809e_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _213cb8346_isValidStForNextSt(jule::Any*);
inline jule::Bool _213cb85dd_stmtIsDef(jule::Any*);
inline jule::U32 _213cd11a5_removeEqFromOp(jule::U32);
inline jule::Ptr<_213d11988_Var> _213cd5495_findVarInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_213d87adb_TypeAlias> _213cd58c4_findTypeAliasInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_213c615db_Struct> _213cd5cae_findStructInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_213c76a0d_Fn> _213cd6221_findFnInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_213c88b63_Trait> _213cd652e_findTraitInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>*, jule::Str);
inline jule::Ptr<_213c8b3e6_Enum> _213cd6870_findEnumInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>*, jule::Str);
inline jule::Ptr<_213c8c9e1_TypeEnum> _213cd6bb1_findTypeEnumInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>*, jule::Str);
inline jule::Any _213cd71ab_defByIdentPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _213cdcb73_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _213cdd8cc_isValidModelForRef(jule::Any*);
inline _2110be2cb_Log _213cddd72_compilerErr(jule::Ptr<_2114c1b73_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _213cde1b3_impIsLookupable(jule::Ptr<_213cd7c7d_ImportInfo>*, jule::Str);
inline void _213cde4b0_appendRetVars(jule::Slice<jule::Ptr<_213d11988_Var>>*, jule::Ptr<_213c796ae_FnIns>*);
inline void _213cde768_appendParamVars(jule::Slice<jule::Ptr<_213d11988_Var>>*, jule::Ptr<_213c796ae_FnIns>*);
inline void _213cdea43_appendGenericTypeAliases(jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>*, jule::Ptr<_213c796ae_FnIns>*);
inline jule::Ptr<_213d56417_SymbolTable> _213cded95_findFile(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>*, jule::Ptr<_2114c700d_File>*);
inline void _213ce0307_pushSuggestion(_2110be2cb_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _213d0ee70_pushImplemented(jule::Ptr<_213c88b63_Trait>, jule::Ptr<_213c615db_Struct>*);
inline void _213d10228_pushImplements(jule::Ptr<_213c615db_Struct>*, jule::Ptr<_213c88b63_Trait>);
inline jule::Bool _213d43338_traitHasReferenceReceiver(jule::Ptr<_213c88b63_Trait>*);
inline jule::Bool _213d435d0_floatAssignable(jule::Str, jule::Ptr<_213d5ae22_Data>*);
inline jule::Bool _213d43921_sigAssignable(jule::Str, jule::Ptr<_213d5ae22_Data>*);
inline jule::Bool _213d43ca6_unsigAssignable(jule::Str, jule::Ptr<_213d5ae22_Data>*);
inline jule::Bool _213d440e7_intAssignable(jule::Str, jule::Ptr<_213d5ae22_Data>*);
inline void _213d4ecc3_checkMutRiskOfStructLit(jule::Ptr<_213ce1050_Sema>*, jule::Ptr<_213c694e5_StructLitExprModel>*);
inline jule::Ptr<_213d88834_TypeKind> _213d55306_lenKind(void);
inline jule::Bool _213d55636_isGoodValueToInfer(jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213c0e314_Directive> _213d825ec_findDirective(jule::Slice<jule::Ptr<_213c0e314_Directive>>*, jule::Str);
inline jule::Any _213d82982_findBuiltinsImport(jule::Str, jule::Ptr<_213cd7c7d_ImportInfo>);
inline void _213d82b91_fitBitsize(jule::Ptr<_213d5ae22_Data>*);
inline void _213d82e8d_makeStructLitAlloc(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c694e5_StructLitExprModel>*);
inline jule::Ptr<_213d11988_Var> _213d832ce_buildErrorVar(jule::Ptr<_213cb8a72_Scope>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Any _213d83620_findBuiltinsSema(jule::Str, jule::Ptr<_213ce1050_Sema>);
inline jule::Bool _213d838b7_isOkForShifting(jule::Ptr<_213d5ae22_Data>*);
inline jule::Bool _213d83c6e_isInstancedStruct(jule::Ptr<_213c64402_StructIns>);
inline jule::Bool _213d840d2_isPtrArithmeticCompatible(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d84324_applyCastKindModel(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d88834_TypeKind>*);
inline void _213d845cc_applyCastKind(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d88834_TypeKind>*);
inline jule::Ptr<_213d5ae22_Data> _213d847ca_buildVoidData(void);
inline jule::Str _213d84a94_checkDataForIntegerIndexing(jule::Ptr<_213d5ae22_Data>*);
inline void _213d84d5d_applyCastModelByEnum(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213c8b3e6_Enum>);
inline void _213d85116_castConstByType(jule::Str*, jule::Ptr<_213d5ae22_Data>*);
inline void _213d85622_updateModelToGenericIns(jule::Any*, jule::Ptr<_213c796ae_FnIns>*);
inline jule::Bool _213d85864_pushSubIdentFromExpr(jule::Any, jule::Ptr<_213c426cc_SubIdentTypeDecl>*);
inline jule::Str _213d85b0b_constoa(jule::Ptr<_2121a4c51_Const>*);
inline jule::Ptr<_213d5ae22_Data> _213d85e4c_evalEnumStatic(jule::Ptr<_213c8b3e6_Enum>*, jule::Ptr<_213c8a901_EnumItem>*);
inline jule::Ptr<_213c694e5_StructLitExprModel> _213d861e4_isLitBased(jule::Any*);
inline jule::Bool _213da2be4_kindUsesGenerics(jule::Ptr<_213d88834_TypeKind>*, jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>>*);
inline jule::Bool _213da3079_hasDirective(jule::Slice<jule::Ptr<_213c0e314_Directive>>*, jule::Str);
inline jule::Bool _213da3321_canGetPtr(jule::Ptr<_213d5ae22_Data>*);
inline jule::Bool _213da3640_isValidForSptrType(jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213da38d7_isValidForRef(jule::Ptr<_213d88834_TypeKind>*);
inline jule::Bool _213da3ba1_isBuiltinStrConvertable(jule::Ptr<_213d88834_TypeKind>*);
inline jule::Str _213da3e26_buildLinkPathByTokens(jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213d91089_Prim> _213da42cd_buildPrimType(jule::Str);
inline jule::Ptr<_213c615db_Struct> _213da4575_getStructFromKind(jule::Ptr<_213d88834_TypeKind>);
inline void _213da482d_applyImplicitCast(jule::Ptr<_213d88834_TypeKind>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Bool _213da4ac5_validTypeForXof(jule::Ptr<_213d88834_TypeKind>*);
inline __jule_tuple_x_213d56417_SymbolTable__jule_tuple_s_2110be2cb_Log _213da7875_buildSymbols(jule::Ptr<_213c0d07c_Ast>*, jule::Trait<_213cd50cc_Importer>*, jule::Ptr<_213c8318a_symbolBuilder>);
inline __jule_tuple_x_213cda8b8_Package__jule_tuple_s_2110be2cb_Log _213da7ca4_analyzePackage(jule::Slice<jule::Ptr<_213c0d07c_Ast>>*, jule::Trait<_213cd50cc_Importer>*, jule::I32*);
inline __jule_tuple_x_213cda8b8_Package__jule_tuple_s_2110be2cb_Log _213da818e_AnalyzePackage(jule::Slice<jule::Ptr<_213c0d07c_Ast>>, jule::Trait<_213cd50cc_Importer>, jule::I32);
inline jule::Ptr<_213c796ae_FnIns> _213e51e80_findBuiltinFn(jule::Str);
inline jule::Ptr<_213d87adb_TypeAlias> _213e52205_primTypeAlias(jule::Ptr<_213d88834_TypeKind>*);
inline jule::Ptr<_213d87adb_TypeAlias> _213e55a22_findBuiltinTypeAlias(jule::Str);
inline jule::Any _213e55c31_findBuiltinDef(jule::Str);
inline jule::Any _213e55ec8_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _213e56270_findBuiltinDefStdMem(jule::Str);
inline jule::Any _213e56539_findBuiltinDefStdComptime(jule::Str);
inline jule::Any _213e568e1_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _213e56bbb_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_213d5ae22_Data> _213e570c8_builtinCallerCommonPlain(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e574c4_builtinCallerCommon(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e578ae_builtinCallerCommonMut(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e57c00_builtinCallerError(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*);
inline jule::Ptr<_213d5ae22_Data> _213e580da_builtinCallerOut(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e584c5_builtinCallerOutln(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e58ae1_builtinCallerNew(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e58ecb_builtinCallerPanic(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e593b6_builtinCallerMake(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e597a1_builtinCallerAppend(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e59c35_callerCopySlice(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5a1b9_callerCopyStr(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5a5a4_builtinCallerCopy(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5a8e5_callerLenSlice(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5ac36_callerLenMap(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5b077_callerLenArr(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5b3b8_callerLenStr(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5b709_callerLenComptime(jule::Ptr<_213d5ae22_Data>*, jule::I32);
inline jule::Ptr<_213d5ae22_Data> _213e5bae4_builtinCallerLen(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5be35_callerCapSlice(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5c276_callerCapStr(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5c661_builtinCallerCap(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5cc27_callerDeleteMap(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5d112_builtinCallerDelete(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5d4ec_builtinCallerClone(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5d8d7_builtinCallerAssert(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5dce4_builtinCallerStdComptimeTypeOf(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5e212_builtinCallerStdComptimeValueOf(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5e4ba_rangeData(jule::Trait<_213c8e96b_comptimeRangeKind>);
inline jule::Ptr<_213d5ae22_Data> _213e5e8c7_builtinCallerStdComptimeRange(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e5ece5_builtinCallerStdComptimeLine(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e60213_builtinCallerStdComptimeFile(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e60631_builtinCallerStdComptimeFiles(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e60a4e_builtinCallerStdMemSizeOf(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e60e6c_builtinCallerStdMemAlignOf(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e6138a_builtinCallerStdMemFree(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e617b9_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e61bd7_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e62127_builtinCallerStdDebugOut(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Ptr<_213d5ae22_Data> _213e62512_builtinCallerStdDebugOutln(jule::Ptr<_213d5c990_Eval>*, jule::Ptr<_213c49dbb_FnCallExpr>*, jule::Ptr<_213d5ae22_Data>*);
inline jule::Bool _214053416_FindModuleFile(jule::Slice<jule::Ptr<_22a8b2423_DirEntry>>*);
inline jule::Str _214053548_FindModuleFileDeep(jule::Str);
inline jule::Slice<_2110be2cb_Log> _214053746_CheckModuleFile(jule::Str);
inline jule::Ptr<_1e7b5c569_FileInfo> _1e7b9e91e_ParseFile(jule::Ptr<_2114c700d_File>);
inline __jule_tuple_x_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log _1e7b9eea2_parseFileset(jule::Ptr<_2114c700d_File>);
inline jule::Ptr<_213c51961_ScopeTree> _1e7ba08cb_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1e7ba0bb7_isSt(jule::Ptr<_2114c1b73_Token>, jule::Ptr<_2114c1b73_Token>);
inline jule::Bool _1e7ba1008_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::I32*);
inline __jule_tuple_int__jule_tuple_bool _1e7ba138d_nextStPos(jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::I32);
inline __jule_tuple_sx_2114c1b73_Token__jule_tuple_bool _1e7ba16ce_skipSt(jule::I32*, jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Slice<jule::Ptr<_1e7ba19cb_stmt>> _1e7ba1d72_splitStmts(jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Bool _1e7bb8927_isTypeOp(jule::U32*);
inline jule::Bool _1e7bb8c13_isTypeRange(jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Slice<jule::Ptr<_2114c1b73_Token>> _1e7bb8eaa_getBlockExpr(jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline __jule_tuple_sx_2114c1b73_Token__jule_tuple_sx_2114c1b73_Token _1e7bb9340_splitDelim(jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::U32);
inline jule::I32 _1e7bb95d7_findLowestPrecOp(jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Ptr<_213c47a9a_IdentExpr> _1e7bb987e_buildIdentExpr(jule::Ptr<_2114c1b73_Token>*);
inline __jule_tuple_sx_2114c1b73_Token__jule_tuple_int _1e7bb9b26_getRangeExprTokens(jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Bool _1e7bba880_checkAssignTokens(jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline _2110be2cb_Log _1e7bbbaa1_makeErr(jule::I32, jule::I32, jule::Ptr<_2114c700d_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_2114c1b73_Token>> _1e7bbc079_range(jule::I32*, jule::U32, jule::U32, jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline __jule_tuple_sx_2114c1b73_Token__jule_tuple_sx_2114c1b73_Token _1e7bbc321_rangeLast(jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline __jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log _1e7bbc70b_parts(jule::Slice<jule::Ptr<_2114c1b73_Token>>*, jule::U32, jule::Bool);
inline jule::U32 _1e7bbc9a3_getCloseOfBrace(jule::U32);
inline _2110be2cb_Log _1e7bbcd8d_compilerErr(jule::Ptr<_2114c1b73_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1e7bbd1e0_pushSuggestion(_2110be2cb_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1e7bbd564_tokstoa(jule::Slice<jule::Ptr<_2114c1b73_Token>>*);
inline jule::Bool _1cdcce23d_isPub(jule::Str*);
inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcceace_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _21402c434_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _2140274ea_checkArch(jule::Str);
inline jule::Bool _214027709_isPassFileAnnotation(jule::Str);
inline void _2140422e5_setOsVars(jule::Slice<jule::Str>*);
inline void _214042548_setArchVars(jule::Slice<jule::Str>*);
inline void _214042801_initVars(jule::Slice<jule::Str>*, _214041ed7_CompileInfo*);
inline jule::Slice<jule::U8> _1cdcd37d6_readBuff(jule::Str);
inline _2110be2cb_Log _1cdcd3a8e_flatCompilerErr(jule::Str);
inline void _1cdcd7ea0_pushPasses(jule::Ptr<_213cda8b8_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1cdcd8335_getAllUniquePasses(jule::Ptr<_213cda8b8_Package>*, jule::Slice<jule::Ptr<_213cd7c7d_ImportInfo>>);
inline _214041ed7_CompileInfo _1cdcd8533_buildCompileInfo(void);
inline void _1cde19554_EliminateDefines(jule::Ptr<_1cdcd6784_IR>*);
inline jule::Ptr<_213c0e314_Directive> _1cde198d9_findDirective(jule::Slice<jule::Ptr<_213c0e314_Directive>>*, jule::Str);
inline jule::Bool _1cde19c2a_hasDirective(jule::Slice<jule::Ptr<_213c0e314_Directive>>*, jule::Str);
inline jule::Bool _1cde1a0b0_isTraitMethod(jule::Ptr<_213c64402_StructIns>*, jule::Ptr<_213c796ae_FnIns>*);
inline void _1cde1dbb8_eliminateDeadCodeOfScope(jule::Ptr<_213cb8a72_Scope>);
inline void _1cde1de4e_eliminateScopeFunctions(jule::Slice<jule::Ptr<_213c76a0d_Fn>>*);
inline void _1cde1e191_eliminateFunctionsScopePackage(jule::Ptr<_213cda8b8_Package>*);
inline void _1cde1e438_eliminateScopePackage(jule::Ptr<_213cda8b8_Package>*);
inline void _1cde1e647_EliminateScopes(jule::Ptr<_1cdcd6784_IR>*);
inline jule::Bool _213e697a0_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _213e69aad_isConstantValidConditionalCase(jule::Ptr<_213cb8e6d_If>*);
inline jule::Bool _213e69d66_isUnreachableExpr(jule::Any*);
inline jule::Bool _213e6a1a7_isConstantValidMatchCase(jule::Ptr<_213cbd3d4_Case>*);
inline jule::Bool _213e6a44e_isUnreachableConditionalCase(jule::Ptr<_213cb8e6d_If>*);
inline jule::Bool _213e6a707_isUnreachableMatchCase(jule::Ptr<_213cbd3d4_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _213e73457_checkForBitShiftOpt(jule::Ptr<_213c68307_OperandExprModel>*, jule::Ptr<_213c68307_OperandExprModel>*);
inline jule::Bool _213e737dc_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _213e73ee6_doInternalNosafeStobs(_213e6b4c7_exprOptimizer*, _1cdcda7ee_stdCacheData*, jule::Ptr<_213c6a705_FnCallExprModel>*);
inline void _1cdcdae81_buildCache(jule::Ptr<_1cdcd6784_IR>*);
inline void _1cdcdb1c3_buildStdInternalNosafeCache(jule::Ptr<_1cdcd6784_IR>*);
inline void _1cdcdb536_pushCache(jule::Ptr<_213cda8b8_Package>*, jule::Str, jule::Fn<void(_213e6b4c7_exprOptimizer*,_1cdcda7ee_stdCacheData*,jule::Ptr<_213c6a705_FnCallExprModel>*)>);
inline jule::Ptr<_213c796ae_FnIns> _1cdcdb8bb_getFunc(jule::Ptr<_213cda8b8_Package>*, jule::Str*);
inline jule::Ptr<_213cda8b8_Package> _1cdcdbc0c_getPackage(jule::Ptr<_1cdcd6784_IR>*, jule::Str*);
inline void _1cdcde34c_PushOptLevel(jule::I32);
inline void _1cde288b5_detectEnabled(void);
inline void _1cde51a64_Throw(jule::Str);
inline jule::U64 _213aed951_unix(void);
inline jule::Bool _1b6401d2e_isCopyOptimizable(jule::Ptr<_213d5ae22_Data>*);
inline jule::Bool _1b64021b4_isIterCopyOptimizable(jule::Ptr<_213d5ae22_Data>*, jule::Ptr<_213d11988_Var>*);
inline jule::Str _1b6411ed7_decomposeCommonEsq(jule::U8);
inline jule::Str _1b64122c3_sbtoa(jule::U8);
inline jule::Str _1b641256a_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1b6412889_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1b6412b97_ftoa(jule::F64, jule::I32);
inline jule::Str _1b6412e3e_itoa(jule::I64);
inline jule::Str _1b64131d6_utoa(jule::U64);
inline jule::Bool _1b641358d_isForwarded(jule::Ptr<_213cb8a72_Scope>*);
inline jule::Bool _1b6413857_isBuiltinCallHasDebuginf(jule::Ptr<_213c6a705_FnCallExprModel>*);
inline jule::Bool _1b6413a88_isExprComesFromBind(jule::Ptr<_213d5ae22_Data>*);
inline jule::Bool _1b6413d30_isAny(jule::Ptr<_213d88834_TypeKind>*);
inline void _213b1248c_iterFiles(jule::Ptr<_213cda8b8_Package>*, jule::Fn<void(jule::Ptr<_213d56417_SymbolTable>*)>);
inline jule::Str _213b12778_concatAllParts(jule::Slice<jule::Ptr<_2114c1b73_Token>>);
inline jule::Bool _213b12ab9_containsTraitMethod(jule::Ptr<_213c88b63_Trait>*, jule::Str*);
inline void _213b12db6_pushMethodsFromInherit(jule::Ptr<_213c88b63_Trait>*, jule::Ptr<_213c88b63_Trait>*);
inline void _213b13191_pushMethodsFromInherits(jule::Ptr<_213c88b63_Trait>*, jule::Ptr<_213c88b63_Trait>*);
inline jule::Bool _213b13449_isOpMethod(jule::Ptr<_213c76a0d_Fn>*);
inline jule::Bool _213b136e1_isHeadDecl(jule::Ptr<_213c76a0d_Fn>*);
inline jule::Ptr<_213c0e314_Directive> _213b21a2e_findDirective(jule::Slice<jule::Ptr<_213c0e314_Directive>>*, jule::Str);
inline jule::Bool _213b21db4_hasDirective(jule::Slice<jule::Ptr<_213c0e314_Directive>>*, jule::Str);
inline jule::Bool _213b2215b_shouldInitialized(jule::Ptr<_213d88834_TypeKind>*);
inline void _2111aae23_printErrorMessage(jule::Str);
inline void _2111ab176_help(jule::Slice<jule::Str>*);
inline void _2111ab385_version(jule::Slice<jule::Str>*);
inline void _2111ab572_toolDistos(void);
inline void _2111ab6d7_toolDistarch(void);
inline void _2111ab8e6_tool(jule::Slice<jule::Str>*);
inline void _2111abb05_julenv(jule::Slice<jule::Str>*);
inline void _2111abde1_mod(jule::Slice<jule::Str>*);
inline jule::Bool _2111ac188_processCommand(jule::Slice<jule::Str>*);
inline void _2111ac2ed_showInfo(void);
void entry_point(void);
inline void _1b6632548_init(void);
inline jule::Ptr<_22a8be9e6_File> _1b6632801_openOutput(jule::Str*);
inline void _1b6632966_clearObjects(void);
inline void _1b6632c63_compileIr(jule::Str, jule::Str);
inline jule::Bool _1b663300a_isCppSourceFile(jule::Str);
inline void _1b6633219_pushCompCmdClang(jule::Str*);
inline void _1b6633428_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _1b6633879_genCompileCmd(jule::Str, jule::Ptr<_1cdcd6784_IR>*);
inline jule::Str _1b6633a77_getCompilePath(void);
inline void _1b6633cb9_applyTargetIndependentOptimizations(jule::Ptr<_1cdcd6784_IR>*);
inline void _1b6633e2e_checkCompilerFlag(void);
inline void _1b66340e9_checkTargetArch(jule::Str);
inline void _1b6634308_checkTargetOs(jule::Str);
inline void _1b6634517_checkTargetFlag(jule::Str*);
inline void _1b6634726_checkOptFlag(jule::Str*);
inline void _1b6634a9a_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1b6634d31_checkFlags(jule::Slice<jule::Str>*);
inline void _1b6635040_setupSemaFlags(jule::I32*);
inline jule::Ptr<_1cdcd6784_IR> _1b66352d7_buildIr(jule::Slice<jule::Str>*);
inline void _1b66354e6_compileCommand(jule::Slice<jule::Str>*);


struct _213c8e96b_comptimeRangeKindMptrData {
	void(*_213c8e1eb_ready)(jule::Trait<_213c8e96b_comptimeRangeKind>, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
	void(*_213c8e5b4_step)(jule::Trait<_213c8e96b_comptimeRangeKind>, jule::I32, jule::Ptr<_213d11988_Var>*, jule::Ptr<_213d11988_Var>*);
	jule::I32(*_213c8e828_len)(jule::Trait<_213c8e96b_comptimeRangeKind>);
};

struct _213cd50cc_ImporterMptrData {
	void(*_213cd3eee_SetModPath)(jule::Trait<_213cd50cc_Importer>, jule::Str);
	jule::Str(*_213cd4241_GetModPath)(jule::Trait<_213cd50cc_Importer>);
	jule::Str(*_213cd454e_ModById)(jule::Trait<_213cd50cc_Importer>, jule::I32);
	jule::Ptr<_213cd7c7d_ImportInfo>(*_213cd485c_GetImport)(jule::Trait<_213cd50cc_Importer>, jule::Str);
	__jule_tuple_sx_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log(*_213cd4c14_ImportPackage)(jule::Trait<_213cd50cc_Importer>, jule::Str, jule::Bool);
	void(*_213cd4e89_Imported)(jule::Trait<_213cd50cc_Importer>, jule::Ptr<_213cd7c7d_ImportInfo>);
};

struct _213d883c2_KindMptrData {
	jule::Str(*_213d87e71_Str)(jule::Trait<_213d883c2_Kind>);
	jule::Bool(*_213d8827e_Equal)(jule::Trait<_213d883c2_Kind>, jule::Ptr<_213d88834_TypeKind>);
};

struct _213da6b60_LookupMptrData {
	jule::Ptr<_213cd7c7d_ImportInfo>(*_213da5125_SelectPackage)(jule::Trait<_213da6b60_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)>);
	jule::Ptr<_213d11988_Var>(*_213da54cc_FindVar)(jule::Trait<_213da6b60_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_213d87adb_TypeAlias>(*_213da5884_FindTypeAlias)(jule::Trait<_213da6b60_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_213c615db_Struct>(*_213da5c3b_FindStruct)(jule::Trait<_213da6b60_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_213c76a0d_Fn>(*_213da60e3_FindFn)(jule::Trait<_213da6b60_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_213c88b63_Trait>(*_213da6401_FindTrait)(jule::Trait<_213da6b60_Lookup>, jule::Str);
	jule::Ptr<_213c8b3e6_Enum>(*_213da670e_FindEnum)(jule::Trait<_213da6b60_Lookup>, jule::Str);
	jule::Ptr<_213c8c9e1_TypeEnum>(*_213da6a1c_FindTypeEnum)(jule::Trait<_213da6b60_Lookup>, jule::Str);
};

struct _1b662a94d_CommonFlagMptrData {
	jule::Str(*_1b65eae7e_Name)(jule::Trait<_1b662a94d_CommonFlag>);
	jule::I32(*_1b65eb0b1_Short)(jule::Trait<_1b662a94d_CommonFlag>);
	jule::Str(*_1b65eb1e3_What)(jule::Trait<_1b662a94d_CommonFlag>);
	void(*_1b662a81b_Reset)(jule::Trait<_1b662a94d_CommonFlag>);
};



inline void _213c8e1eb_ready_comptimeRangeKind_0(jule::Trait<_213c8e96b_comptimeRangeKind> _self_, jule::Ptr<_213d11988_Var>* _1329_keyA, jule::Ptr<_213d11988_Var>* _1346_keyB) {
	_213c92c27_ready(_self_.safe_ptr<_213c92166_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _213c8e5b4_step_comptimeRangeKind_0(jule::Trait<_213c8e96b_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_213d11988_Var>* _1436_keyA, jule::Ptr<_213d11988_Var>* _1453_keyB) {
	_213c930e0_step(_self_.safe_ptr<_213c92166_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _213c8e828_len_comptimeRangeKind_0(jule::Trait<_213c8e96b_comptimeRangeKind> _self_) {
	return _213c93354_len(_self_.safe_ptr<_213c92166_comptimeStructFields>());
}
inline void _213c8e1eb_ready_comptimeRangeKind_1(jule::Trait<_213c8e96b_comptimeRangeKind> _self_, jule::Ptr<_213d11988_Var>* _1329_keyA, jule::Ptr<_213d11988_Var>* _1346_keyB) {
	_213c9aa87_ready(_self_.safe_ptr<_213c9a05e_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _213c8e5b4_step_comptimeRangeKind_1(jule::Trait<_213c8e96b_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_213d11988_Var>* _1436_keyA, jule::Ptr<_213d11988_Var>* _1453_keyB) {
	_213c9ae50_step(_self_.safe_ptr<_213c9a05e_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _213c8e828_len_comptimeRangeKind_1(jule::Trait<_213c8e96b_comptimeRangeKind> _self_) {
	return _213c9b1b4_len(_self_.safe_ptr<_213c9a05e_comptimeStatics>());
}
inline void _213c8e1eb_ready_comptimeRangeKind_2(jule::Trait<_213c8e96b_comptimeRangeKind> _self_, jule::Ptr<_213d11988_Var>* _1329_keyA, jule::Ptr<_213d11988_Var>* _1346_keyB) {
	_213c9d309_ready(_self_.safe_ptr<_213c9c6c1_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _213c8e5b4_step_comptimeRangeKind_2(jule::Trait<_213c8e96b_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_213d11988_Var>* _1436_keyA, jule::Ptr<_213d11988_Var>* _1453_keyB) {
	_213c9d6c2_step(_self_.safe_ptr<_213c9c6c1_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _213c8e828_len_comptimeRangeKind_2(jule::Trait<_213c8e96b_comptimeRangeKind> _self_) {
	return _213c9d936_len(_self_.safe_ptr<_213c9c6c1_comptimeEnumFields>());
}
inline void _213c8e1eb_ready_comptimeRangeKind_3(jule::Trait<_213c8e96b_comptimeRangeKind> _self_, jule::Ptr<_213d11988_Var>* _1329_keyA, jule::Ptr<_213d11988_Var>* _1346_keyB) {
	_213ca186d_ready(_self_.safe_ptr<_213ca0cbd_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _213c8e5b4_step_comptimeRangeKind_3(jule::Trait<_213c8e96b_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_213d11988_Var>* _1436_keyA, jule::Ptr<_213d11988_Var>* _1453_keyB) {
	_213ca1c36_step(_self_.safe_ptr<_213ca0cbd_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _213c8e828_len_comptimeRangeKind_3(jule::Trait<_213c8e96b_comptimeRangeKind> _self_) {
	return _213ca1e9a_len(_self_.safe_ptr<_213ca0cbd_comptimeParams>());
}
inline void _213c8e1eb_ready_comptimeRangeKind_4(jule::Trait<_213c8e96b_comptimeRangeKind> _self_, jule::Ptr<_213d11988_Var>* _1329_keyA, jule::Ptr<_213d11988_Var>* _1346_keyB) {
	_213ca2d36_ready(_self_.safe_ptr<_213ca2286_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _213c8e5b4_step_comptimeRangeKind_4(jule::Trait<_213c8e96b_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_213d11988_Var>* _1436_keyA, jule::Ptr<_213d11988_Var>* _1453_keyB) {
	_213ca31ee_step(_self_.safe_ptr<_213ca2286_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _213c8e828_len_comptimeRangeKind_4(jule::Trait<_213c8e96b_comptimeRangeKind> _self_) {
	return _213ca3463_len(_self_.safe_ptr<_213ca2286_comptimeTypeInfos>());
}
inline void _213c8e1eb_ready_comptimeRangeKind_5(jule::Trait<_213c8e96b_comptimeRangeKind> _self_, jule::Ptr<_213d11988_Var>* _1329_keyA, jule::Ptr<_213d11988_Var>* _1346_keyB) {
	_213cac3e5_ready(_self_.safe_ptr<_213cab845_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _213c8e5b4_step_comptimeRangeKind_5(jule::Trait<_213c8e96b_comptimeRangeKind> _self_, jule::I32 _1423_i, jule::Ptr<_213d11988_Var>* _1436_keyA, jule::Ptr<_213d11988_Var>* _1453_keyB) {
	_213cac7ad_step(_self_.safe_ptr<_213cab845_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I32 _213c8e828_len_comptimeRangeKind_5(jule::Trait<_213c8e96b_comptimeRangeKind> _self_) {
	return _213caca22_len(_self_.safe_ptr<_213cab845_comptimeFiles>());
}
inline void _213cd3eee_SetModPath_Importer_0(jule::Trait<_213cd50cc_Importer> _self_, jule::Str _1729_path) {
	_1cdcd4a7e_SetModPath(_self_.safe_ptr<_1cdcd4023_JuleImporter>(), _1729_path);
}
inline jule::Str _213cd4241_GetModPath_Importer_0(jule::Trait<_213cd50cc_Importer> _self_) {
	return _1cdcd4ce3_GetModPath(_self_.safe_ptr<_1cdcd4023_JuleImporter>());
}
inline jule::Str _213cd454e_ModById_Importer_0(jule::Trait<_213cd50cc_Importer> _self_, jule::I32 _2522_id) {
	return _1cdcd5101_ModById(_self_.safe_ptr<_1cdcd4023_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_213cd7c7d_ImportInfo> _213cd485c_GetImport_Importer_0(jule::Trait<_213cd50cc_Importer> _self_, jule::Str _3128_path) {
	return _1cdcd540e_GetImport(_self_.safe_ptr<_1cdcd4023_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log _213cd4c14_ImportPackage_Importer_0(jule::Trait<_213cd50cc_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1cdcd57b6_ImportPackage(_self_.safe_ptr<_1cdcd4023_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _213cd4e89_Imported_Importer_0(jule::Trait<_213cd50cc_Importer> _self_, jule::Ptr<_213cd7c7d_ImportInfo> _4131__0) {
	_1cdcd5a3b_Imported(_self_.safe_ptr<_1cdcd4023_JuleImporter>(), _4131__0);
}
inline jule::Str _213d87e71_Str_Kind_0(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c64765_Str(_self_.safe_ptr<_213c64402_StructIns>());
}
inline jule::Bool _213d8827e_Equal_Kind_0(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c64a73_Equal(_self_.data.as<_213c64402_StructIns>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_1(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c799de_Str(_self_.safe_ptr<_213c796ae_FnIns>());
}
inline jule::Bool _213d8827e_Equal_Kind_1(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c79cec_Equal(_self_.data.as<_213c796ae_FnIns>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_2(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c8901a_Str(_self_.safe_ptr<_213c88b63_Trait>());
}
inline jule::Bool _213d8827e_Equal_Kind_2(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c89328_Equal(_self_.data.as<_213c88b63_Trait>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_3(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c8b759_Str(_self_.safe_ptr<_213c8b3e6_Enum>());
}
inline jule::Bool _213d8827e_Equal_Kind_3(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c8ba67_Equal(_self_.data.as<_213c8b3e6_Enum>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_4(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c8cd21_Str(_self_.safe_ptr<_213c8c9e1_TypeEnum>());
}
inline jule::Bool _213d8827e_Equal_Kind_4(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c8d12e_Equal(_self_.data.as<_213c8c9e1_TypeEnum>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_5(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c8eeee_Str(_self_.safe_ptr<_213c8eb47_comptimeRange>());
}
inline jule::Bool _213d8827e_Equal_Kind_5(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c9030c_Equal(_self_.data.as<_213c8eb47_comptimeRange>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_6(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c909a0_Str(_self_.safe_ptr<_213c9063c_comptimeStructField>());
}
inline jule::Bool _213d8827e_Equal_Kind_6(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c90cad_Equal(_self_.data.as<_213c9063c_comptimeStructField>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_7(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c924da_Str(_self_.safe_ptr<_213c92166_comptimeStructFields>());
}
inline jule::Bool _213d8827e_Equal_Kind_7(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c927e8_Equal(_self_.data.as<_213c92166_comptimeStructFields>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_8(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c939a3_Str(_self_.safe_ptr<_213c93640_comptimeStatic>());
}
inline jule::Bool _213d8827e_Equal_Kind_8(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c93cb1_Equal(_self_.data.as<_213c93640_comptimeStatic>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_9(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c9a3c2_Str(_self_.safe_ptr<_213c9a05e_comptimeStatics>());
}
inline jule::Bool _213d8827e_Equal_Kind_9(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c9a6d0_Equal(_self_.data.as<_213c9a05e_comptimeStatics>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_10(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c9b813_Str(_self_.safe_ptr<_213c9b4a0_comptimeEnumField>());
}
inline jule::Bool _213d8827e_Equal_Kind_10(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c9bb21_Equal(_self_.data.as<_213c9b4a0_comptimeEnumField>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_11(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c9cb44_Str(_self_.safe_ptr<_213c9c6c1_comptimeEnumFields>());
}
inline jule::Bool _213d8827e_Equal_Kind_11(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c9ce52_Equal(_self_.data.as<_213c9c6c1_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_12(jule::Trait<_213d883c2_Kind> _self_) {
	return _213c9e085_Str(_self_.safe_ptr<_213c9dc22_comptimeParam>());
}
inline jule::Bool _213d8827e_Equal_Kind_12(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213c9e393_Equal(_self_.data.as<_213c9dc22_comptimeParam>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_13(jule::Trait<_213d883c2_Kind> _self_) {
	return _213ca1131_Str(_self_.safe_ptr<_213ca0cbd_comptimeParams>());
}
inline jule::Bool _213d8827e_Equal_Kind_13(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213ca143e_Equal(_self_.data.as<_213ca0cbd_comptimeParams>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_14(jule::Trait<_213d883c2_Kind> _self_) {
	return _213ca25e9_Str(_self_.safe_ptr<_213ca2286_comptimeTypeInfos>());
}
inline jule::Bool _213d8827e_Equal_Kind_14(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213ca2907_Equal(_self_.data.as<_213ca2286_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_15(jule::Trait<_213d883c2_Kind> _self_) {
	return _213ca3ab2_Str(_self_.safe_ptr<_213ca374e_comptimeTypeInfo>());
}
inline jule::Bool _213d8827e_Equal_Kind_15(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213ca3dc0_Equal(_self_.data.as<_213ca374e_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_16(jule::Trait<_213d883c2_Kind> _self_) {
	return _213ca95ac_Str(_self_.safe_ptr<_213ca9249_comptimeValue>());
}
inline jule::Bool _213d8827e_Equal_Kind_16(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213ca98ba_Equal(_self_.data.as<_213ca9249_comptimeValue>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_17(jule::Trait<_213d883c2_Kind> _self_) {
	return _213cabba8_Str(_self_.safe_ptr<_213cab845_comptimeFiles>());
}
inline jule::Bool _213d8827e_Equal_Kind_17(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213cabeb6_Equal(_self_.data.as<_213cab845_comptimeFiles>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_18(jule::Trait<_213d883c2_Kind> _self_) {
	return _213cad171_Str(_self_.safe_ptr<_213cacd0d_comptimeFile>());
}
inline jule::Bool _213d8827e_Equal_Kind_18(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213cad47e_Equal(_self_.data.as<_213cacd0d_comptimeFile>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_19(jule::Trait<_213d883c2_Kind> _self_) {
	return _213d88bdb_Str(_self_.safe_ptr<_213d88834_TypeKind>());
}
inline jule::Bool _213d8827e_Equal_Kind_19(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213d88ee9_Equal(_self_.data.as<_213d88834_TypeKind>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_20(jule::Trait<_213d883c2_Kind> _self_) {
	return _213d913b9_Str(_self_.safe_ptr<_213d91089_Prim>());
}
inline jule::Bool _213d8827e_Equal_Kind_20(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213d916c7_Equal(_self_.data.as<_213d91089_Prim>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_21(jule::Trait<_213d883c2_Kind> _self_) {
	return _213d94b4d_Str(_self_.safe_ptr<_213d947da_Sptr>());
}
inline jule::Bool _213d8827e_Equal_Kind_21(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213d94e5b_Equal(_self_.data.as<_213d947da_Sptr>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_22(jule::Trait<_213d883c2_Kind> _self_) {
	return _213d956ba_Str(_self_.safe_ptr<_213d95247_Slc>());
}
inline jule::Bool _213d8827e_Equal_Kind_22(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213d959c8_Equal(_self_.data.as<_213d95247_Slc>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_23(jule::Trait<_213d883c2_Kind> _self_) {
	return _213d961b0_Str(_self_.safe_ptr<_213d95d4c_Tuple>());
}
inline jule::Bool _213d8827e_Equal_Kind_23(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213d964bd_Equal(_self_.data.as<_213d95d4c_Tuple>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_24(jule::Trait<_213d883c2_Kind> _self_) {
	return _213d96b61_Str(_self_.safe_ptr<_213d967ed_Map>());
}
inline jule::Bool _213d8827e_Equal_Kind_24(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213d96e6e_Equal(_self_.data.as<_213d967ed_Map>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_25(jule::Trait<_213d883c2_Kind> _self_) {
	return _213d97755_Str(_self_.safe_ptr<_213d973e2_Arr>());
}
inline jule::Bool _213d8827e_Equal_Kind_25(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213d97a63_Equal(_self_.data.as<_213d973e2_Arr>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_26(jule::Trait<_213d883c2_Kind> _self_) {
	return _213d981b2_Str(_self_.safe_ptr<_213d97d4e_Ptr>());
}
inline jule::Bool _213d8827e_Equal_Kind_26(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213d984c0_Equal(_self_.data.as<_213d97d4e_Ptr>(), _5621_other);
}
inline jule::Str _213d87e71_Str_Kind_27(jule::Trait<_213d883c2_Kind> _self_) {
	return _213b14769_Str(_self_.safe_ptr<_213b144e4_customType>());
}
inline jule::Bool _213d8827e_Equal_Kind_27(jule::Trait<_213d883c2_Kind> _self_, jule::Ptr<_213d88834_TypeKind> _5621_other) {
	return _213b14a77_Equal(_self_.data.as<_213b144e4_customType>(), _5621_other);
}
inline jule::Ptr<_213cd7c7d_ImportInfo> _213da5125_SelectPackage_Lookup_0(jule::Trait<_213da6b60_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)> _932_selector) {
	return _213cc0b23_SelectPackage(_self_.safe_ptr<_213cc06a0_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_213d11988_Var> _213da54cc_FindVar_Lookup_0(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _213cc0eca_FindVar(_self_.safe_ptr<_213cc06a0_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_213d87adb_TypeAlias> _213da5884_FindTypeAlias_Lookup_0(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _213cc1382_FindTypeAlias(_self_.safe_ptr<_213cc06a0_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_213c615db_Struct> _213da5c3b_FindStruct_Lookup_0(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _213cc1739_FindStruct(_self_.safe_ptr<_213cc06a0_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_213c76a0d_Fn> _213da60e3_FindFn_Lookup_0(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _213cc1ae1_FindFn(_self_.safe_ptr<_213cc06a0_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_213c88b63_Trait> _213da6401_FindTrait_Lookup_0(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2928_ident) {
	return _213cc1dee_FindTrait(_self_.safe_ptr<_213cc06a0_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_213c8b3e6_Enum> _213da670e_FindEnum_Lookup_0(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _3327_ident) {
	return _213cc220c_FindEnum(_self_.safe_ptr<_213cc06a0_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_213c8c9e1_TypeEnum> _213da6a1c_FindTypeEnum_Lookup_0(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _3731_ident) {
	return _213cc251a_FindTypeEnum(_self_.safe_ptr<_213cc06a0_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_213cd7c7d_ImportInfo> _213da5125_SelectPackage_Lookup_1(jule::Trait<_213da6b60_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)> _932_selector) {
	return _213cd8245_SelectPackage(_self_.safe_ptr<_213cd7c7d_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_213d11988_Var> _213da54cc_FindVar_Lookup_1(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _213cd85ec_FindVar(_self_.safe_ptr<_213cd7c7d_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_213d87adb_TypeAlias> _213da5884_FindTypeAlias_Lookup_1(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _213cd89a4_FindTypeAlias(_self_.safe_ptr<_213cd7c7d_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_213c615db_Struct> _213da5c3b_FindStruct_Lookup_1(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _213cd8d5b_FindStruct(_self_.safe_ptr<_213cd7c7d_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_213c76a0d_Fn> _213da60e3_FindFn_Lookup_1(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _213cd9213_FindFn(_self_.safe_ptr<_213cd7c7d_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_213c88b63_Trait> _213da6401_FindTrait_Lookup_1(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2928_ident) {
	return _213cd9521_FindTrait(_self_.safe_ptr<_213cd7c7d_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_213c8b3e6_Enum> _213da670e_FindEnum_Lookup_1(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _3327_ident) {
	return _213cd982e_FindEnum(_self_.safe_ptr<_213cd7c7d_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_213c8c9e1_TypeEnum> _213da6a1c_FindTypeEnum_Lookup_1(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _3731_ident) {
	return _213cd9b3c_FindTypeEnum(_self_.safe_ptr<_213cd7c7d_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_213cd7c7d_ImportInfo> _213da5125_SelectPackage_Lookup_2(jule::Trait<_213da6b60_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)> _932_selector) {
	return _213cdad3b_SelectPackage(_self_.safe_ptr<_213cda8b8_Package>(), _932_selector);
}
inline jule::Ptr<_213d11988_Var> _213da54cc_FindVar_Lookup_2(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _213cdb1e3_FindVar(_self_.safe_ptr<_213cda8b8_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_213d87adb_TypeAlias> _213da5884_FindTypeAlias_Lookup_2(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _213cdb59a_FindTypeAlias(_self_.safe_ptr<_213cda8b8_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_213c615db_Struct> _213da5c3b_FindStruct_Lookup_2(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _213cdb952_FindStruct(_self_.safe_ptr<_213cda8b8_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_213c76a0d_Fn> _213da60e3_FindFn_Lookup_2(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _213cdbd09_FindFn(_self_.safe_ptr<_213cda8b8_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_213c88b63_Trait> _213da6401_FindTrait_Lookup_2(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2928_ident) {
	return _213cdc117_FindTrait(_self_.safe_ptr<_213cda8b8_Package>(), _2928_ident);
}
inline jule::Ptr<_213c8b3e6_Enum> _213da670e_FindEnum_Lookup_2(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _3327_ident) {
	return _213cdc425_FindEnum(_self_.safe_ptr<_213cda8b8_Package>(), _3327_ident);
}
inline jule::Ptr<_213c8c9e1_TypeEnum> _213da6a1c_FindTypeEnum_Lookup_2(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _3731_ident) {
	return _213cdc733_FindTypeEnum(_self_.safe_ptr<_213cda8b8_Package>(), _3731_ident);
}
inline jule::Ptr<_213cd7c7d_ImportInfo> _213da5125_SelectPackage_Lookup_3(jule::Trait<_213da6b60_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)> _932_selector) {
	return _213ce14c3_SelectPackage(_self_.safe_ptr<_213ce1050_Sema>(), _932_selector);
}
inline jule::Ptr<_213d11988_Var> _213da54cc_FindVar_Lookup_3(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _213ce187a_FindVar(_self_.safe_ptr<_213ce1050_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_213d87adb_TypeAlias> _213da5884_FindTypeAlias_Lookup_3(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _213ce1c32_FindTypeAlias(_self_.safe_ptr<_213ce1050_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_213c615db_Struct> _213da5c3b_FindStruct_Lookup_3(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _213ce20d9_FindStruct(_self_.safe_ptr<_213ce1050_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_213c76a0d_Fn> _213da60e3_FindFn_Lookup_3(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _213ce2491_FindFn(_self_.safe_ptr<_213ce1050_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_213c88b63_Trait> _213da6401_FindTrait_Lookup_3(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2928_ident) {
	return _213ce279e_FindTrait(_self_.safe_ptr<_213ce1050_Sema>(), _2928_ident);
}
inline jule::Ptr<_213c8b3e6_Enum> _213da670e_FindEnum_Lookup_3(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _3327_ident) {
	return _213ce2aac_FindEnum(_self_.safe_ptr<_213ce1050_Sema>(), _3327_ident);
}
inline jule::Ptr<_213c8c9e1_TypeEnum> _213da6a1c_FindTypeEnum_Lookup_3(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _3731_ident) {
	return _213ce2dba_FindTypeEnum(_self_.safe_ptr<_213ce1050_Sema>(), _3731_ident);
}
inline jule::Ptr<_213cd7c7d_ImportInfo> _213da5125_SelectPackage_Lookup_4(jule::Trait<_213da6b60_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)> _932_selector) {
	return _213d568ce_SelectPackage(_self_.safe_ptr<_213d56417_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_213d11988_Var> _213da54cc_FindVar_Lookup_4(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _213d56c86_FindVar(_self_.safe_ptr<_213d56417_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_213d87adb_TypeAlias> _213da5884_FindTypeAlias_Lookup_4(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _213d5713d_FindTypeAlias(_self_.safe_ptr<_213d56417_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_213c615db_Struct> _213da5c3b_FindStruct_Lookup_4(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _213d574e5_FindStruct(_self_.safe_ptr<_213d56417_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_213c76a0d_Fn> _213da60e3_FindFn_Lookup_4(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _213d5789c_FindFn(_self_.safe_ptr<_213d56417_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_213c88b63_Trait> _213da6401_FindTrait_Lookup_4(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _2928_ident) {
	return _213d57baa_FindTrait(_self_.safe_ptr<_213d56417_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_213c8b3e6_Enum> _213da670e_FindEnum_Lookup_4(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _3327_ident) {
	return _213d57eb8_FindEnum(_self_.safe_ptr<_213d56417_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_213c8c9e1_TypeEnum> _213da6a1c_FindTypeEnum_Lookup_4(jule::Trait<_213da6b60_Lookup> _self_, jule::Str _3731_ident) {
	return _213d582c6_FindTypeEnum(_self_.safe_ptr<_213d56417_SymbolTable>(), _3731_ident);
}
inline jule::Str _1b65eae7e_Name_CommonFlag_0(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95b551c_Name(_self_.safe_ptr<_1b95b57d6_Flag>());
}
inline jule::I32 _1b65eb0b1_Short_CommonFlag_0(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95b5c04_Short(_self_.safe_ptr<_1b95b57d6_Flag>());
}
inline jule::Str _1b65eb1e3_What_CommonFlag_0(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95b5660_What(_self_.safe_ptr<_1b95b57d6_Flag>());
}
inline void _1b662a81b_Reset_CommonFlag_0(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	_1b95b5ac2_Reset(_self_.safe_ptr<_1b95b57d6_Flag>());
}
inline jule::Str _1b65eae7e_Name_CommonFlag_1(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95b8b19_Name(_self_.safe_ptr<_1b95b908c_Flag>());
}
inline jule::I32 _1b65eb0b1_Short_CommonFlag_1(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95b95dc_Short(_self_.safe_ptr<_1b95b908c_Flag>());
}
inline jule::Str _1b65eb1e3_What_CommonFlag_1(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95b9378_What(_self_.safe_ptr<_1b95b908c_Flag>());
}
inline void _1b662a81b_Reset_CommonFlag_1(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	_1b95b94aa_Reset(_self_.safe_ptr<_1b95b908c_Flag>());
}
inline jule::Str _1b65eae7e_Name_CommonFlag_2(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95bc2c1_Name(_self_.safe_ptr<_1b95bc744_Flag>());
}
inline jule::I32 _1b65eb0b1_Short_CommonFlag_2(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95bcc94_Short(_self_.safe_ptr<_1b95bc744_Flag>());
}
inline jule::Str _1b65eb1e3_What_CommonFlag_2(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95bca30_What(_self_.safe_ptr<_1b95bc744_Flag>());
}
inline void _1b662a81b_Reset_CommonFlag_2(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	_1b95bcb62_Reset(_self_.safe_ptr<_1b95bc744_Flag>());
}
inline jule::Str _1b65eae7e_Name_CommonFlag_3(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95c09bc_Name(_self_.safe_ptr<_1b95c0e40_Flag>());
}
inline jule::I32 _1b65eb0b1_Short_CommonFlag_3(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95c1490_Short(_self_.safe_ptr<_1b95c0e40_Flag>());
}
inline jule::Str _1b65eb1e3_What_CommonFlag_3(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95c122b_What(_self_.safe_ptr<_1b95c0e40_Flag>());
}
inline void _1b662a81b_Reset_CommonFlag_3(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	_1b95c135d_Reset(_self_.safe_ptr<_1b95c0e40_Flag>());
}
inline jule::Str _1b65eae7e_Name_CommonFlag_4(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95c4174_Name(_self_.safe_ptr<_1b95c45e7_Flag>());
}
inline jule::I32 _1b65eb0b1_Short_CommonFlag_4(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95c4b47_Short(_self_.safe_ptr<_1b95c45e7_Flag>());
}
inline jule::Str _1b65eb1e3_What_CommonFlag_4(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	return _1b95c48d3_What(_self_.safe_ptr<_1b95c45e7_Flag>());
}
inline void _1b662a81b_Reset_CommonFlag_4(jule::Trait<_1b662a94d_CommonFlag> _self_) {
	_1b95c4a15_Reset(_self_.safe_ptr<_1b95c45e7_Flag>());
}


static _213c8e96b_comptimeRangeKindMptrData _213c8e96b_comptimeRangeKind_mptr_data[] = {
	{
		._213c8e1eb_ready=_213c8e1eb_ready_comptimeRangeKind_0,
		._213c8e5b4_step=_213c8e5b4_step_comptimeRangeKind_0,
		._213c8e828_len=_213c8e828_len_comptimeRangeKind_0,
	},
	{
		._213c8e1eb_ready=_213c8e1eb_ready_comptimeRangeKind_1,
		._213c8e5b4_step=_213c8e5b4_step_comptimeRangeKind_1,
		._213c8e828_len=_213c8e828_len_comptimeRangeKind_1,
	},
	{
		._213c8e1eb_ready=_213c8e1eb_ready_comptimeRangeKind_2,
		._213c8e5b4_step=_213c8e5b4_step_comptimeRangeKind_2,
		._213c8e828_len=_213c8e828_len_comptimeRangeKind_2,
	},
	{
		._213c8e1eb_ready=_213c8e1eb_ready_comptimeRangeKind_3,
		._213c8e5b4_step=_213c8e5b4_step_comptimeRangeKind_3,
		._213c8e828_len=_213c8e828_len_comptimeRangeKind_3,
	},
	{
		._213c8e1eb_ready=_213c8e1eb_ready_comptimeRangeKind_4,
		._213c8e5b4_step=_213c8e5b4_step_comptimeRangeKind_4,
		._213c8e828_len=_213c8e828_len_comptimeRangeKind_4,
	},
	{
		._213c8e1eb_ready=_213c8e1eb_ready_comptimeRangeKind_5,
		._213c8e5b4_step=_213c8e5b4_step_comptimeRangeKind_5,
		._213c8e828_len=_213c8e828_len_comptimeRangeKind_5,
	},
};
static _213cd50cc_ImporterMptrData _213cd50cc_Importer_mptr_data[] = {
	{
		._213cd3eee_SetModPath=_213cd3eee_SetModPath_Importer_0,
		._213cd4241_GetModPath=_213cd4241_GetModPath_Importer_0,
		._213cd454e_ModById=_213cd454e_ModById_Importer_0,
		._213cd485c_GetImport=_213cd485c_GetImport_Importer_0,
		._213cd4c14_ImportPackage=_213cd4c14_ImportPackage_Importer_0,
		._213cd4e89_Imported=_213cd4e89_Imported_Importer_0,
	},
};
static _213d883c2_KindMptrData _213d883c2_Kind_mptr_data[] = {
	{
		._213d87e71_Str=_213d87e71_Str_Kind_0,
		._213d8827e_Equal=_213d8827e_Equal_Kind_0,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_1,
		._213d8827e_Equal=_213d8827e_Equal_Kind_1,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_2,
		._213d8827e_Equal=_213d8827e_Equal_Kind_2,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_3,
		._213d8827e_Equal=_213d8827e_Equal_Kind_3,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_4,
		._213d8827e_Equal=_213d8827e_Equal_Kind_4,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_5,
		._213d8827e_Equal=_213d8827e_Equal_Kind_5,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_6,
		._213d8827e_Equal=_213d8827e_Equal_Kind_6,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_7,
		._213d8827e_Equal=_213d8827e_Equal_Kind_7,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_8,
		._213d8827e_Equal=_213d8827e_Equal_Kind_8,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_9,
		._213d8827e_Equal=_213d8827e_Equal_Kind_9,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_10,
		._213d8827e_Equal=_213d8827e_Equal_Kind_10,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_11,
		._213d8827e_Equal=_213d8827e_Equal_Kind_11,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_12,
		._213d8827e_Equal=_213d8827e_Equal_Kind_12,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_13,
		._213d8827e_Equal=_213d8827e_Equal_Kind_13,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_14,
		._213d8827e_Equal=_213d8827e_Equal_Kind_14,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_15,
		._213d8827e_Equal=_213d8827e_Equal_Kind_15,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_16,
		._213d8827e_Equal=_213d8827e_Equal_Kind_16,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_17,
		._213d8827e_Equal=_213d8827e_Equal_Kind_17,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_18,
		._213d8827e_Equal=_213d8827e_Equal_Kind_18,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_19,
		._213d8827e_Equal=_213d8827e_Equal_Kind_19,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_20,
		._213d8827e_Equal=_213d8827e_Equal_Kind_20,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_21,
		._213d8827e_Equal=_213d8827e_Equal_Kind_21,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_22,
		._213d8827e_Equal=_213d8827e_Equal_Kind_22,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_23,
		._213d8827e_Equal=_213d8827e_Equal_Kind_23,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_24,
		._213d8827e_Equal=_213d8827e_Equal_Kind_24,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_25,
		._213d8827e_Equal=_213d8827e_Equal_Kind_25,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_26,
		._213d8827e_Equal=_213d8827e_Equal_Kind_26,
	},
	{
		._213d87e71_Str=_213d87e71_Str_Kind_27,
		._213d8827e_Equal=_213d8827e_Equal_Kind_27,
	},
};
static _213da6b60_LookupMptrData _213da6b60_Lookup_mptr_data[] = {
	{
		._213da5125_SelectPackage=_213da5125_SelectPackage_Lookup_0,
		._213da54cc_FindVar=_213da54cc_FindVar_Lookup_0,
		._213da5884_FindTypeAlias=_213da5884_FindTypeAlias_Lookup_0,
		._213da5c3b_FindStruct=_213da5c3b_FindStruct_Lookup_0,
		._213da60e3_FindFn=_213da60e3_FindFn_Lookup_0,
		._213da6401_FindTrait=_213da6401_FindTrait_Lookup_0,
		._213da670e_FindEnum=_213da670e_FindEnum_Lookup_0,
		._213da6a1c_FindTypeEnum=_213da6a1c_FindTypeEnum_Lookup_0,
	},
	{
		._213da5125_SelectPackage=_213da5125_SelectPackage_Lookup_1,
		._213da54cc_FindVar=_213da54cc_FindVar_Lookup_1,
		._213da5884_FindTypeAlias=_213da5884_FindTypeAlias_Lookup_1,
		._213da5c3b_FindStruct=_213da5c3b_FindStruct_Lookup_1,
		._213da60e3_FindFn=_213da60e3_FindFn_Lookup_1,
		._213da6401_FindTrait=_213da6401_FindTrait_Lookup_1,
		._213da670e_FindEnum=_213da670e_FindEnum_Lookup_1,
		._213da6a1c_FindTypeEnum=_213da6a1c_FindTypeEnum_Lookup_1,
	},
	{
		._213da5125_SelectPackage=_213da5125_SelectPackage_Lookup_2,
		._213da54cc_FindVar=_213da54cc_FindVar_Lookup_2,
		._213da5884_FindTypeAlias=_213da5884_FindTypeAlias_Lookup_2,
		._213da5c3b_FindStruct=_213da5c3b_FindStruct_Lookup_2,
		._213da60e3_FindFn=_213da60e3_FindFn_Lookup_2,
		._213da6401_FindTrait=_213da6401_FindTrait_Lookup_2,
		._213da670e_FindEnum=_213da670e_FindEnum_Lookup_2,
		._213da6a1c_FindTypeEnum=_213da6a1c_FindTypeEnum_Lookup_2,
	},
	{
		._213da5125_SelectPackage=_213da5125_SelectPackage_Lookup_3,
		._213da54cc_FindVar=_213da54cc_FindVar_Lookup_3,
		._213da5884_FindTypeAlias=_213da5884_FindTypeAlias_Lookup_3,
		._213da5c3b_FindStruct=_213da5c3b_FindStruct_Lookup_3,
		._213da60e3_FindFn=_213da60e3_FindFn_Lookup_3,
		._213da6401_FindTrait=_213da6401_FindTrait_Lookup_3,
		._213da670e_FindEnum=_213da670e_FindEnum_Lookup_3,
		._213da6a1c_FindTypeEnum=_213da6a1c_FindTypeEnum_Lookup_3,
	},
	{
		._213da5125_SelectPackage=_213da5125_SelectPackage_Lookup_4,
		._213da54cc_FindVar=_213da54cc_FindVar_Lookup_4,
		._213da5884_FindTypeAlias=_213da5884_FindTypeAlias_Lookup_4,
		._213da5c3b_FindStruct=_213da5c3b_FindStruct_Lookup_4,
		._213da60e3_FindFn=_213da60e3_FindFn_Lookup_4,
		._213da6401_FindTrait=_213da6401_FindTrait_Lookup_4,
		._213da670e_FindEnum=_213da670e_FindEnum_Lookup_4,
		._213da6a1c_FindTypeEnum=_213da6a1c_FindTypeEnum_Lookup_4,
	},
};
static _1b662a94d_CommonFlagMptrData _1b662a94d_CommonFlag_mptr_data[] = {
	{
		._1b65eae7e_Name=_1b65eae7e_Name_CommonFlag_0,
		._1b65eb0b1_Short=_1b65eb0b1_Short_CommonFlag_0,
		._1b65eb1e3_What=_1b65eb1e3_What_CommonFlag_0,
		._1b662a81b_Reset=_1b662a81b_Reset_CommonFlag_0,
	},
	{
		._1b65eae7e_Name=_1b65eae7e_Name_CommonFlag_1,
		._1b65eb0b1_Short=_1b65eb0b1_Short_CommonFlag_1,
		._1b65eb1e3_What=_1b65eb1e3_What_CommonFlag_1,
		._1b662a81b_Reset=_1b662a81b_Reset_CommonFlag_1,
	},
	{
		._1b65eae7e_Name=_1b65eae7e_Name_CommonFlag_2,
		._1b65eb0b1_Short=_1b65eb0b1_Short_CommonFlag_2,
		._1b65eb1e3_What=_1b65eb1e3_What_CommonFlag_2,
		._1b662a81b_Reset=_1b662a81b_Reset_CommonFlag_2,
	},
	{
		._1b65eae7e_Name=_1b65eae7e_Name_CommonFlag_3,
		._1b65eb0b1_Short=_1b65eb0b1_Short_CommonFlag_3,
		._1b65eb1e3_What=_1b65eb1e3_What_CommonFlag_3,
		._1b662a81b_Reset=_1b662a81b_Reset_CommonFlag_3,
	},
	{
		._1b65eae7e_Name=_1b65eae7e_Name_CommonFlag_4,
		._1b65eb0b1_Short=_1b65eb0b1_Short_CommonFlag_4,
		._1b65eb1e3_What=_1b65eb1e3_What_CommonFlag_4,
		._1b662a81b_Reset=_1b662a81b_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c796ae_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_213c796ae_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213d11988_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_213d11988_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c64402_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_213c64402_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c88b63_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_213c88b63_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c5c8a1_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_213c5c8a1_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c57c97_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_213c57c97_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c5bac0_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_213c5bac0_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c53457_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_213c53457_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c5c296_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_213c5c296_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c54436_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_213c54436_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c5a12e_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_213c5a12e_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c5b00e_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_213c5b00e_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_2121a4c51_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_2121a4c51_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c423e1_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_213c423e1_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cbb2b1_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_213cbb2b1_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cb8a72_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_213cb8a72_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c72b6e_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_213c72b6e_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213d5ae22_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_213d5ae22_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c73c19_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_213c73c19_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c7162e_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_213c7162e_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c70012_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_213c70012_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6e808_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_213c6e808_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6ebe3_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_213c6ebe3_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c707d7_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_213c707d7_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c70c8d_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_213c70c8d_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c72784_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_213c72784_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c72421_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_213c72421_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c74005_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_213c74005_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6a705_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_213c6a705_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cb95cd_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_213cb95cd_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cb98b9_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_213cb98b9_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c55723_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_213c55723_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cb9d3c_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_213cb9d3c_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c560b4_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_213c560b4_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cba722_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_213cba722_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cbab1d_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_213cbab1d_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cbb59c_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_213cbb59c_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cbb954_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_213cbb954_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cbbdc7_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_213cbbdc7_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6b030_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_213c6b030_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cbc27e_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_213cbc27e_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cbc889_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_213cbc889_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cbd9ab_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_213cbd9ab_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cbaec5_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_213cbaec5_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213cbdd0d_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_213cbdd0d_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c51961_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_213c51961_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c45ea5_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_213c45ea5_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c575c1_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_213c575c1_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c54e4d_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_213c54e4d_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c56823_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_213c56823_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c4e178_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_213c4e178_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c4e530_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_213c4e530_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c50465_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_213c50465_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c588e1_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_213c588e1_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c4e81b_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_213c4e81b_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c5646b_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_213c5646b_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c547dd_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_213c547dd_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c46846_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_213c46846_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c76a0d_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_213c76a0d_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c615db_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_213c615db_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213d87adb_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_213d87adb_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c8b3e6_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_213c8b3e6_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c8c9e1_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_213c8c9e1_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6c790_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_213c6c790_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6d076_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_213c6d076_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6dac1_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_213c6dac1_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6e132_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_213c6e132_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c68b76_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_213c68b76_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c43ed6_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_213c43ed6_ArrTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c43238_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_213c43238_SlcTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c43810_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_213c43810_PtrTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c42d3c_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_213c42d3c_SptrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c446e0_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_213c446e0_MapTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c43524_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_213c43524_TupleTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c4865b_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_213c4865b_VariadicExpr> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6aaac_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_213c6aaac_SliceExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c4a84a_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_213c4a84a_FieldExprPair> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c4be78_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_213c4be78_KeyValPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c47a9a_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_213c47a9a_IdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c46b32_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_213c46b32_TupleExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6e42e_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_213c6e42e_TupleExprModel> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c73543_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_213c73543_RuneExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213d88834_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_213d88834_TypeKind> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6d7d5_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_213c6d7d5_ArrayExprModel> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c4933d_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_213c4933d_SubIdentExpr> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c426cc_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_213c426cc_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c482a4_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_213c482a4_UnaryExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c41d2a_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_213c41d2a_TypeDecl> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c48dba_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_213c48dba_NsSelectionExpr> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c42a51_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_213c42a51_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6c251_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_213c6c251_SlicingExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c69d53_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_213c69d53_CastingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c4c5e9_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_213c4c5e9_SliceExpr> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c694e5_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_213c694e5_StructLitExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6d41c_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_213c6d41c_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6bc12_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_213c6bc12_MapExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c6b3d7_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_213c6b3d7_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c46291_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_213c46291_RangeExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c46ed9_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_213c46ed9_LitExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c47627_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_213c47627_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c4ce57_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_213c4ce57_IndexingExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c4d562_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_213c4d562_SlicingExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c48a13_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_213c48a13_CastExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c4b120_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_213c4b120_StructLit> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c49dbb_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_213c49dbb_FnCallExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c4b593_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_213c4b593_BraceLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c497b1_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_213c497b1_BinopExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c687be_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_213c687be_BinopExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c69803_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_213c69803_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c703ec_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_213c703ec_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c71244_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_213c71244_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c7194d_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_213c7194d_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c71c6c_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_213c71c6c_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c72e6b_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_213c72e6b_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c73257_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_213c73257_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213c73851_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_213c73851_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213e641c3_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_213e641c3_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213e646ac_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_213e646ac_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213e62cc6_StrAppendExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_213e62cc6_StrAppendExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213e637cc_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_213e637cc_PushToSliceExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213e63b84_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_213e63b84_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213e6290d_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_213e6290d_StrCompExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213e630b2_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_213e630b2_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213e63447_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_213e63447_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_213e64954_InlineStdInternalNosafeStobs>().dealloc(); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_213e64954_InlineStdInternalNosafeStobs> &other) { return any.type == &__jule_any_type131 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
void __jule_any_type137_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type137_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type137_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_any_type137_dealloc, .eq=__jule_any_type137_eq, .to_str=__jule_any_type137_to_str};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type137 && __jule_any_type137_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _2111aac47_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1b6631d3e_OutDir = jule::Str("dist", 4);
jule::Str _1b66320c5_OutName = jule::Str("ir.cpp", 6);
jule::Str _1b663238e_Out = jule::Str();
jule::Str _2299129a2_Compiler = jule::Str();
jule::Str _229913c28_CompilerPath = jule::Str();
jule::Str _229913e48_CppStd = jule::Str("cpp17", 5);
jule::Bool _2299141e0_Shadowing = false;
jule::Bool _229914465_Transpilation = false;
jule::Bool _22991472e_Test = false;
jule::Bool _2299149e8_RC = true;
jule::Bool _229914dc2_Safety = true;
jule::Bool _22991518b_Production = false;
jule::Ptr<_22c6b8c50_RangeTable> _22c65448d__L = jule::new_ptr<_22c6b8c50_RangeTable>(_22c6b8c50_RangeTable{._field_R16=jule::Slice<_22c6b8359_Range16>::make({_22c6b8359_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_22c6b8359_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_22c6b8359_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_22c6b8359_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_22c6b8359_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_22c6b8359_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_22c6b8359_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_22c6b8359_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_22c6b8359_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_22c6b8359_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_22c6b8359_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_22c6b8359_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_22c6b8359_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_22c6b8359_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_22c6b8359_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_22c6b8359_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_22c6b8359_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_22c6b8359_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_22c6b8359_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_22c6b8359_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_22c6b8359_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_22c6b8359_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_22c6b8359_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_22c6b8359_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_22c6b8359_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_22c6b8359_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_22c6b8359_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_22c6b8359_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_22c6b8359_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_22c6b8359_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_22c6b8359_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_22c6b8359_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_22c6b8359_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_22c6b8359_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_22c6b8359_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_22c6b8359_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_22c6b8359_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_22c6b8359_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_22c6b8359_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_22c6b8359_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22c6b8359_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_22c6b8359_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_22c6b8359_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_22c6b8359_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_22c6b8359_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_22c6b8359_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_22c6b8359_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22c6b8359_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22c6b8359_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_22c6b8359_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_22c6b8359_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_22c6b8359_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_22c6b8359_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_22c6b8359_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_22c6b8359_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_22c6b8359_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_22c6b8359_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_22c6b8359_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_22c6b8359_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_22c6b8359_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22c6b87cc_Range32>::make({_22c6b87cc_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_22c6b87cc_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_22c6b87cc_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_22c6b87cc_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_22c6b87cc_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_22c6b87cc_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_22c6b87cc_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_22c6b87cc_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_22c6b87cc_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_22c6b87cc_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_22c6b87cc_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_22c6b87cc_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_22c6b87cc_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_22c6b87cc_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_22c6b87cc_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_22c6b87cc_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_22c6b87cc_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_22c6b87cc_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_22c6b87cc_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_22c6b87cc_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_22c6b87cc_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_22c6b87cc_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_22c6b87cc_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22c6b87cc_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22c6b87cc_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22c6b87cc_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_22c6b87cc_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_22c6b87cc_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_22c6b87cc_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_22c6b87cc_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_22c6b87cc_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_22c6b8c50_RangeTable> _22c65547d__LU = jule::new_ptr<_22c6b8c50_RangeTable>(_22c6b8c50_RangeTable{._field_R16=jule::Slice<_22c6b8359_Range16>::make({_22c6b8359_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_22c6b8359_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_22c6b8359_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_22c6b8359_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_22c6b8359_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_22c6b8359_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_22c6b8359_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22c6b8359_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22c6b8359_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22c6b8359_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_22c6b8359_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_22c6b8359_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_22c6b8359_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_22c6b8359_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_22c6b8359_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_22c6b8359_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_22c6b8359_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22c6b87cc_Range32>::make({_22c6b87cc_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_22c6b87cc_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22c6b87cc_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22c6b87cc_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22c6b87cc_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22c6b87cc_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_22c6b87cc_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _22c6b26b6__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _210ee86bc_first = jule::Array<jule::U8,256>({});
jule::Array<_210ee8c50_acceptRange,16> _210ee905d_acceptRanges = jule::Array<_210ee8c50_acceptRange,16>({_210ee8c50_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_210ee8c50_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_210ee8c50_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_210ee8c50_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_210ee8c50_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _2110414e5_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _2110ae8b5_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _2110aead5_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _2111a7084_PathStdlib = jule::Str();
jule::Str _2111a72a4_PathExec = jule::Str();
jule::Str _2111a755c_PathWd = jule::Str();
jule::Str _2111a786a_PathApi = jule::Str();
jule::Str _2111a7b34_Os = jule::Str("linux", 5);
jule::Str _2111a7ded_Arch = jule::Str("i386", 4);
jule::Array<jule::I32,5> _21142b4c3_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U32,6> _21142b6e3_UnaryOps = jule::Array<jule::U32,6>({static_cast<jule::U32>(61LLU),static_cast<jule::U32>(60LLU),static_cast<jule::U32>(67LLU),static_cast<jule::U32>(68LLU),static_cast<jule::U32>(62LLU),static_cast<jule::U32>(65LLU)});
jule::Array<jule::U32,18> _21142b913_BinOps = jule::Array<jule::U32,18>({static_cast<jule::U32>(60LLU),static_cast<jule::U32>(61LLU),static_cast<jule::U32>(62LLU),static_cast<jule::U32>(63LLU),static_cast<jule::U32>(64LLU),static_cast<jule::U32>(65LLU),static_cast<jule::U32>(66LLU),static_cast<jule::U32>(67LLU),static_cast<jule::U32>(56LLU),static_cast<jule::U32>(57LLU),static_cast<jule::U32>(69LLU),static_cast<jule::U32>(70LLU),static_cast<jule::U32>(53LLU),static_cast<jule::U32>(52LLU),static_cast<jule::U32>(54LLU),static_cast<jule::U32>(55LLU),static_cast<jule::U32>(50LLU),static_cast<jule::U32>(51LLU)});
jule::Array<jule::U32,2> _2114baed0_PostfixOps = jule::Array<jule::U32,2>({static_cast<jule::U32>(58LLU),static_cast<jule::U32>(59LLU)});
jule::Array<jule::U32,11> _2114bb2cc_AssignOps = jule::Array<jule::U32,11>({static_cast<jule::U32>(71LLU),static_cast<jule::U32>(40LLU),static_cast<jule::U32>(41LLU),static_cast<jule::U32>(43LLU),static_cast<jule::U32>(42LLU),static_cast<jule::U32>(44LLU),static_cast<jule::U32>(46LLU),static_cast<jule::U32>(45LLU),static_cast<jule::U32>(49LLU),static_cast<jule::U32>(48LLU),static_cast<jule::U32>(47LLU)});
jule::Array<_2114c8ce0_kindPair,31> _2114c921e_keywords = jule::Array<_2114c8ce0_kindPair,31>({_2114c8ce0_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U32>(4LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U32>(4LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U32>(4LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U32>(6LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U32>(2LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U32>(7LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U32>(9LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U32>(10LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U32>(11LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U32>(12LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U32>(13LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U32>(14LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U32>(16LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U32>(18LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U32>(20LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U32>(21LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U32>(22LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U32>(23LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U32>(24LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U32>(25LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U32>(26LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U32>(27LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U32>(28LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U32>(29LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U32>(30LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U32>(31LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U32>(32LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U32>(33LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U32>(34LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U32>(36LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U32>(37LLU)}});
jule::Array<_2114c8ce0_kindPair,46> _2114c9560_basicOps = jule::Array<_2114c8ce0_kindPair,46>({_2114c8ce0_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U32>(19LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str(":=", 2), ._field_id=static_cast<jule::U32>(38LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U32>(8LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U32>(3LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U32>(5LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U32>(39LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U32>(17LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U32>(40LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U32>(41LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U32>(42LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U32>(43LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U32>(44LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U32>(45LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U32>(46LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U32>(47LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U32>(48LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U32>(49LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U32>(50LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U32>(51LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U32>(52LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U32>(53LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U32>(54LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U32>(55LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U32>(56LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U32>(57LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U32>(58LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U32>(59LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U32>(60LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U32>(61LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U32>(62LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U32>(63LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U32>(64LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U32>(65LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U32>(66LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U32>(67LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U32>(68LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U32>(69LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U32>(70LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U32>(71LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U32>(35LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("{", 1), ._field_id=static_cast<jule::U32>(72LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("}", 1), ._field_id=static_cast<jule::U32>(73LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("[", 1), ._field_id=static_cast<jule::U32>(76LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("]", 1), ._field_id=static_cast<jule::U32>(77LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str("(", 1), ._field_id=static_cast<jule::U32>(74LLU)},_2114c8ce0_kindPair{._field_kind=jule::Str(")", 1), ._field_id=static_cast<jule::U32>(75LLU)}});
jule::Array<jule::U8,32> _212134906__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _212134ebc__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_211aa1164_floatInfo _21217d7c9_f32info = _211aa1164_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_211aa1164_floatInfo _21217dad7_f64info = _211aa1164_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _212185db9_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I32> _212187b79_powtab = jule::Slice<jule::I32>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _2121886d5_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _212188a26_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _21218b9a2_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_212190401_leftCheat> _212190830_leftCheats = jule::Slice<_212190401_leftCheat>::make({_212190401_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_212190401_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_212190401_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_212190401_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_212190401_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_212190401_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_212190401_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_212190401_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_212190401_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_212190401_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_212190401_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_212190401_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_212190401_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_212190401_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_212190401_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_212190401_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_212190401_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_212190401_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_212190401_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_212190401_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_212190401_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_212190401_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_212190401_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_212190401_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_212190401_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_212190401_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_212190401_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_212190401_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_212190401_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_212190401_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_212190401_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_212190401_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_212190401_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_212190401_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_212190401_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_212190401_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_212190401_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_212190401_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_212190401_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_212190401_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_212190401_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_212190401_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_212190401_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_212190401_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_212190401_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_212190401_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_212190401_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_212190401_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_212190401_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_212190401_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_212190401_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_212190401_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_212190401_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_212190401_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_212190401_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_212190401_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_212190401_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_212190401_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_212190401_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_212190401_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_212190401_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I32 _21219636e_BitSize = 0LL;
jule::Str _212196638_SysInt = jule::Str();
jule::Str _212196902_SysUint = jule::Str();
jule::Slice<jule::Str> _213cb13a5_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Ptr<_213d88834_TypeKind> _213e52502_primVoid = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("void", 4)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e52810_primAny = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("any", 3)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e52ac9_primStr = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("str", 3)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e52dd7_primBool = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("bool", 4)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e531a1_primUintptr = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("uintptr", 7)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e5346a_primUint = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("uint", 4)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e53734_primInt = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("int", 3)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e53b0d_primI8 = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("i8", 2)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e53dc7_primI16 = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("i16", 3)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e54191_primI32 = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("i32", 3)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e5445a_primI64 = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("i64", 3)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e54724_primU8 = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("u8", 2)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e549dd_primU16 = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("u16", 3)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e54ca7_primU32 = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("u32", 3)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e55071_primU64 = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("u64", 3)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e554e4_primF32 = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("f32", 3)), 20)});
jule::Ptr<_213d88834_TypeKind> _213e557ad_primF64 = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(jule::Str("f64", 3)), 20)});
jule::Str _1cdcda403_stdPackageInternalNosafe = jule::Str("std::internal::nosafe", 21);
jule::Map<jule::Uintptr,_1cdcda7ee_stdCacheData> _1cdcdac2d_stdCache = nullptr;
jule::Bool _1cdcdc4d2_Copy = false;
jule::Bool _1cdcdc7e0_Deadcode = false;
jule::Bool _1cdcdcaa9_Append = false;
jule::Bool _1cdcdcdb7_Math = false;
jule::Bool _1cdcdd181_Access = false;
jule::Bool _1cdcdd44a_Inline = false;
jule::Bool _1cdcdd714_Ptr = false;
jule::Bool _1cdcddadd_Cond = false;
jule::Bool _1cdcddda7_Str = false;
jule::Bool _1cdcde171_StdInternalNosafe = false;
jule::Bool _1cde265c7_exprEnabled = false;
jule::Bool _1cde267e7_scopeEnabled = false;
jule::Bool _1cde26a5b_stdEnabled = false;
jule::Array<jule::U64,12> _213aea8a4_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1b63ea9a4_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_22c6b8c50_RangeTable> _22c662b83_Upper = _22c65547d__LU;
jule::Ptr<_22c6b8c50_RangeTable> _22c65b62c_Letter = _22c65448d__L;





std::ostream &operator<<(std::ostream &_Stream, _22c6b8359_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22c6b87cc_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22c6b8c50_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _210ee8c50_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _21103a643_index(_21103a214_lazyBuff* _self_, jule::I32 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _21103a8b8_append(_21103a214_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _21103ab2c_string(_21103a214_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _21103a214_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22a8b2423_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_22a8b2423_DirEntry>>> static__21103e768_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_22a8b2423_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _22a87e786_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_22a8b2423_DirEntry>>>(jule::Any(_22a8b0ae7_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _22a87ea2d_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1b73a19ae;
			};
			jule::Str _2517_name = _22a869e9c_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_22a8c20e2_Status> _2621_stat = ({
				auto except = static__22a8b2db3_Of(_21103b875_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_22a8b2423_DirEntry>>>(except.error);
				} jule::Ptr<_22a8c20e2_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_22a8b2423_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_22a8b2423_DirEntry>(_22a8b2423_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat})); };
		}
	_iter_next_1b73a19ae:;
	}
	_iter_end_1b73a19ae:;;
	_22a87ecc5_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_22a8b2423_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__21103e977_Create(jule::Str _3922_path) {
	if ((_22a880655_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22a8b0ae7_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__21103eb86_Remove(jule::Str _5122_path) {
	if ((_22a8808ec_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22a8b0ae7_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _22a8b2687_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_22a8be9e6_File>> static__22a8b1411_Open(jule::Str _1820_path, jule::I32 _1831_flag, jule::I32 _1844_mode) {
	jule::I32 _1913_handle = _22a87de6c_Open((&(_1820_path[0LL])), static_cast<jule::I32>(_1831_flag), _1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_22a8be9e6_File>>(jule::Any(_22a8b0ae7_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_22a8be9e6_File>>(jule::Any(), static__22a8bee14_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__22a8b1620_Remove(jule::Str _3022_path) {
	if ((_22a880b94_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22a8b0ae7_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _22a8b1a71_Write(_22a8be9e6_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_22a8aae99_Write(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_22a8b0ae7_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I32> _22a8b1d7e_Read(_22a8be9e6_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I32 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I32>(_22a8aa73a_Read(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>(jule::Any(_22a8b0ae7_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_22a8be9e6_File> static__22a8bee14_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_22a8be9e6_File>(_22a8be9e6_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_22a8be9e6_File>> static__22a8c01ab_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_22a8be9e6_File>>(jule::Any(), ({
		auto except = static__22a8b1411_Open(_5622_path, static_cast<jule::I32>(578LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_22a8be9e6_File>>(except.error);
		} jule::Ptr<_22a8be9e6_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__22a8c0453_Read(jule::Str _6820_path) {
	jule::Ptr<_22a8c20e2_Status> _6913_s = ({
		auto except = static__22a8b2db3_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_22a8c20e2_Status>(nullptr);});
	});;
	if ((!(_22a8c271e_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0));
	};
	if ((_22a8c2983_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_22a8be9e6_File> _7917_f = ({
		auto except = static__22a8b1411_Open(_6820_path, static_cast<jule::I32>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_22a8be9e6_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _22a8c15ec_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I32>(_22a8c2983_Size(_6913_s.ptr())), static_cast<jule::I32>(_22a8c2983_Size(_6913_s.ptr())), 0);;
	jule::I32 _8313_n = ({
		auto except = _22a8b1d7e_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__22a8c07a5_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I32 _9246_perm) {
	jule::Ptr<_22a8be9e6_File> _9317_f = ({
		auto except = static__22a8b1411_Open(_9221_path, static_cast<jule::I32>(577LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_22a8be9e6_File>(nullptr);});
	});;
	({
		auto except = _22a8b1a71_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _22a8c15ec_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _22a8c1421_WriteStr(_22a8be9e6_File* _self_, jule::Str* _12028_data) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result = static_cast<jule::I32>(({
		auto except = _22a8b1a71_Write(_self_, _22a8bd2db_Stobs(_12028_data));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I32>(except.error);
		} 0;});
	}));
	return jule::Exceptional<jule::I32>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional _22a8c15ec_Close(_22a8be9e6_File* _self_) {
	if ((_22a8aaaae_Close(static_cast<jule::I32>(static_cast<jule::I32>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_22a8b0ae7_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _22a8be9e6_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_22a8c20e2_Status>> static__22a8b2db3_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_22a8c20e2_Status>>(jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I32 _1613_code = _22a87da82_Stat((&(_1118_path[0LL])), (&(_1517_handle)));;
	if ((_1613_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_22a8c20e2_Status>>(jule::Any(_22a8b0ae7_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_22a8c20e2_Status> _2017_stat = jule::new_ptr<_22a8c20e2_Status>();;
	_2017_stat.get()._field_size=_1517_handle.st_size;
	if (((_1517_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_1517_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_22a8c20e2_Status>>(jule::Any(), _2017_stat);;
}



inline jule::Bool _22a8c24aa_IsDir(_22a8c20e2_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _22a8c271e_IsReg(_22a8c20e2_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _22a8c2983_Size(_22a8c20e2_Status* _self_) {
	return (*(_self_))._field_size;;
}







std::ostream &operator<<(std::ostream &_Stream, _22a8c20e2_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2111a4801_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2110be2cb_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _2114c1ed6_Prec(_2114c1b73_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b7482e03:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b74834b9:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b7483530:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1b74835a7:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1b748362e:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1b7482b06:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b748296e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _2114c1b73_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _2114c73c6_Fill(_2114c700d_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _2114c763a_Dir(_2114c700d_File* _self_) {
	return _21103c4d0_Dir((*(_self_))._field_Path);;
}



inline jule::Str _2114c789e_Name(_2114c700d_File* _self_) {
	return _21103c15b_Base((*(_self_))._field_Path);;
}



inline jule::Str _2114c7e21_GetRow(_2114c700d_File* _self_, jule::I32 _3821_row) {
	jule::I32 _3917_n = 0LL;;
	jule::I32 _4017_lineStart = 0LL;;
	jule::I32 _4117_i = 0LL;;
	for (; (_4117_i < (*(_self_))._field_Data.len()); (_4117_i)++) {
		{
			if (((*(_self_))._field_Data[_4117_i] != '\n')) {
				goto _iter_next_1b74885e0;
			};
			(_3917_n)++;
			if ((_3917_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4017_lineStart, _4117_i));;
			};
			_4017_lineStart=static_cast<jule::I32>((_4117_i + 1LL));
		}
	_iter_next_1b74885e0:;
	}
	_iter_end_1b74885e0:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _2114c700d_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _2114c8ce0_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _2114ceda1_pushErr(_2114ce851_lex* _self_, jule::Str _44926_fmt, jule::Slice<jule::Any> _44939_args) {
	{ jule::Slice<_2110be2cb_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_2114c9a5a_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44926_fmt, _44939_args)); };
}



inline void _2114d039b_lex(_2114ce851_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_2114d239d_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_2114c1b73_Token> _46421_token = _2114d3723_token(_self_);;
			if ((_46421_token.get()._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_2114c1b73_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46421_token); };
			};
		}
	_iter_next_1b74bbce9:;
	}
	_iter_end_1b74bbce9:;;
}



inline jule::Str _2114d06a9_id(_2114ce851_lex* _self_, jule::Slice<jule::U8>* _47322_ln) {
	if (((*(_47322_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _47714_r = 0;;
	jule::I32 _47721_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee97de_DecodeRune((*(_47322_ln)));
		_47714_r = __jule_assign_result.__jule_result_arg0;
		_47721_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_47714_r != '_') && (!(_2114c514e_IsLetter(_47714_r))))) {
		return jule::Str();;
	};
	while ((_47721_i < (*(_47322_ln)).len())) {
		{
			jule::I32 _48318_pr = 0;;
			jule::I32 _48322_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee97de_DecodeRune((*(_47322_ln)).slice(_47721_i));
				_48318_pr = __jule_assign_result.__jule_result_arg0;
				_48322_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48318_pr != '_') && (!(_2114c568d_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48318_pr)))))) && (!(_2114c514e_IsLetter(_48318_pr))))) {
				(*(_self_))._field_pos+=_47721_i;
				return static_cast<jule::Str>((*(_47322_ln)).slice(0LL, _47721_i));;
			};
			_47721_i+=_48322_n;
		}
	_iter_next_1b74bee62:;
	}
	_iter_end_1b74bee62:;;
	(*(_self_))._field_pos+=(*(_47322_ln)).len();
	return static_cast<jule::Str>((*(_47322_ln)));;
}



inline jule::Slice<jule::U8> _2114d091d_resume(_2114ce851_lex* _self_) {
	jule::I32 _49817_i = (*(_self_))._field_pos;;
	for (; (_49817_i < (*(_self_))._field_file.get()._field_Data.len()); (_49817_i)++) {
		{
			jule::I32 _50017_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_49817_i]);;
			if (_2114c4bed_IsSpace(_50017_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _50017_r };
					
					if (_match_expr == '\n') {
						_case_begin_1b74c4197:;
						{
							_2114d239d_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1b74c3e55:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1b74c3b25:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1b74c399e:;
				};
				goto _iter_next_1b74c2041;
			};
			jule::I32 _51521_j = _49817_i;;
			for (; (_51521_j < (*(_self_))._field_file.get()._field_Data.len()); (_51521_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_51521_j] == '\n')) {
						goto _iter_end_1b74c2eba;
					};
				}
			_iter_next_1b74c2eba:;
			}
			_iter_end_1b74c2eba:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_49817_i, _51521_j);;
		}
	_iter_next_1b74c2041:;
	}
	_iter_end_1b74c2041:;;
	return nullptr;;
}



inline void _2114d0b93_lexLineComment(_2114ce851_lex* _self_, jule::Ptr<_2114c1b73_Token>* _52638_token) {
	jule::I32 _52713_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53017_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_53017_r == '\n') || (_53017_r == '\r'))) {
				goto _iter_end_1b74c6496;
			};
		}
	_iter_next_1b74c6496:;
	}
	_iter_end_1b74c6496:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*(_52638_token)).get()._field_Id=static_cast<jule::U32>(15LLU);
		(*(_52638_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_52713_start, (*(_self_))._field_pos));
	};
}



inline void _2114d0e18_lexRangeComment(_2114ce851_lex* _self_, jule::Ptr<_2114c1b73_Token>* _54139_token) {
	jule::I32 _54213_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54517_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_54517_r == '\r')) {
				goto _iter_next_1b74c9433;
			};
			if ((_54517_r == '\n')) {
				_2114d239d_newLine(_self_);
				goto _iter_next_1b74c9433;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_54517_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*(_54139_token)).get()._field_Id=static_cast<jule::U32>(15LLU);
					(*(_54139_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_54213_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1b74c9433:;
	}
	_iter_end_1b74c9433:;;
	_2114ceda1_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _2114d1226_num(_2114ce851_lex* _self_, jule::Slice<jule::U8>* _56923_txt) {
	jule::Str __jule_func_result;
	if (((*(_56923_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_2114cd377_hexNum(_56923_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_2114cd0d0_octalNum(_56923_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_2114cba29_binaryNum(_56923_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_2114cb782_commonNum(_56923_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _2114d1534_escapeSeq(_2114ce851_lex* _self_, jule::Slice<jule::U8>* _59129_txt) {
	jule::Str _59217_seq = jule::Str();;
	if (((*(_59129_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_59129_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1b74d3393:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_59129_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b74d32c7:;
			{
				_59217_seq=_2114cd960_bigUnicodePointEscape(_59129_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1b74d300d:;
			{
				_59217_seq=_2114cdc29_littleUnicodePointEscape(_59129_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b74d3074:;
			{
				_59217_seq=_2114cddd3_hexByteEscape(_59129_txt);
			}
		}
		else {
			_case_begin_1b74d28c0:;
			{
				_59217_seq=_2114ce169_byteEscape(_59129_txt);
			}
		}
		_match_end_1b74d2ddc:;
	};
	_julec_label_end:;
	if (_59217_seq.empty()) {
		((*(_self_))._field_pos)++;
		_2114ceda1_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59217_seq.len();
	return _59217_seq;;
}



inline jule::Str _2114d18db_getRune(_2114ce851_lex* _self_, jule::Slice<jule::U8>* _62127_txt, jule::Bool _62140_raw) {
	if (((!(_62140_raw)) && ((*(_62127_txt))[0LL] == '\\'))) {
		return _2114d1534_escapeSeq(_self_, _62127_txt);;
	};
	jule::I32 _62514_r = 0;;
	jule::I32 _62517_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee97de_DecodeRune((*(_62127_txt)));
		_62514_r = __jule_assign_result.__jule_result_arg0;
		_62517_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62517_n;
	return jule::Str::from_rune(_62514_r);;
}



inline jule::Str _2114d1be9_lexRune(_2114ce851_lex* _self_, jule::Slice<jule::U8>* _63027_txt) {
	jule::Str _63117_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I32 _63317_n = 0LL;;
	jule::I32 _63417_i = 1LL;;
	for (; (_63417_i < (*(_63027_txt)).len()); (_63417_i)++) {
		{
			if (((*(_63027_txt))[_63417_i] == '\r')) {
				goto _iter_next_1b74d9003;
			};
			if (((*(_63027_txt))[_63417_i] == '\n')) {
				_2114ceda1_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_2114d239d_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64617_part = (*(_63027_txt)).slice(_63417_i);;
			jule::Str _64717_r = _2114d18db_getRune(_self_, &(_64617_part), false);;
			_63117_run+=_64717_r;
			(*(_self_))._field_column+=_210eeb4d3_RuneCountStr(_64717_r);
			if (_64717_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1b74d9003;
			};
			if ((_64717_r.len() > 1LL)) {
				_63417_i+=(_64717_r.len() - 1LL);
			};
			(_63317_n)++;
		}
	_iter_next_1b74d9003:;
	}
	_iter_end_1b74d9003:;;
	if ((_63317_n == 0LL)) {
		_2114ceda1_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63317_n > 1LL)) {
		_2114ceda1_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _63117_run;;
}



inline jule::Str _2114d1e5d_lexStr(_2114ce851_lex* _self_) {
	jule::Str _67017_s = jule::Str();;
	jule::U8 _67113_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _67313_raw = (_67113_mark == '`');;
	(_67017_s).append(_67113_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _67817_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_67817_ch == '\r')) {
				goto _iter_next_1b74de2b1;
			};
			if ((_67817_ch == '\n')) {
				_2114d239d_newLine(_self_);
				if ((!(_67313_raw))) {
					_2114ceda1_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _69021_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69117_r = _2114d18db_getRune(_self_, &(_69021_part), _67313_raw);;
			_67017_s+=_69117_r;
			(*(_self_))._field_column+=_210eeb4d3_RuneCountStr(_69117_r);
			if ((_67817_ch == _67113_mark)) {
				goto _iter_end_1b74de2b1;
			};
		}
	_iter_next_1b74de2b1:;
	}
	_iter_end_1b74de2b1:;;
	return _67017_s;;
}



inline void _2114d239d_newLine(_2114ce851_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _2114d2898_isOp(_2114ce851_lex* _self_, jule::Slice<jule::U8>* _71124_txt, jule::Str _71137_kind, jule::U32 _71148_id, jule::Ptr<_2114c1b73_Token>* _71166_t) {
	if ((!(_2114c9de0_bytesHasPrefix(_71124_txt, _71137_kind)))) {
		return false;;
	};
	(*(_71166_t)).get()._field_Kind=_71137_kind;
	(*(_71166_t)).get()._field_Id=_71148_id;
	(*(_self_))._field_pos+=_71137_kind.len();
	return true;;
}



inline jule::Bool _2114d2c50_lexBasicOps(_2114ce851_lex* _self_, jule::Slice<jule::U8> _72130_txt, jule::Ptr<_2114c1b73_Token>* _72148_tok) {
	{
		auto expr = &(_2114c9560_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74e51c9:;
		if (it != expr_end) {
			_2114c8ce0_kindPair *_72216_pair = it;
			{
				if (_2114d2898_isOp(_self_, &(_72130_txt), (*(_72216_pair))._field_kind, (*(_72216_pair))._field_id, _72148_tok)) {
					return true;;
				};
			}
			_iter_next_1b74e51c9:;
			++it;
			goto _iter_begin_1b74e51c9;
		}
		_iter_end_1b74e51c9:;
	};
	return false;;
}



inline jule::Bool _2114d3107_lexId(_2114ce851_lex* _self_, jule::Slice<jule::U8>* _73025_txt, jule::Ptr<_2114c1b73_Token>* _73043_t) {
	jule::Str _73113_lex = _2114d06a9_id(_self_, _73025_txt);;
	if (_73113_lex.empty()) {
		return false;;
	};
	(*(_73043_t)).get()._field_Kind=_73113_lex;
	(*(_73043_t)).get()._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _2114d34ae_lexNum(_2114ce851_lex* _self_, jule::Slice<jule::U8>* _74026_txt, jule::Ptr<_2114c1b73_Token>* _74044_t) {
	jule::Str _74113_lex = _2114d1226_num(_self_, _74026_txt);;
	if (_74113_lex.empty()) {
		return false;;
	};
	(*(_74044_t)).get()._field_Kind=_74113_lex;
	(*(_74044_t)).get()._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_2114c1b73_Token> _2114d3723_token(_2114ce851_lex* _self_) {
	jule::Ptr<_2114c1b73_Token> _75217_t = jule::new_ptr<_2114c1b73_Token>(_2114c1b73_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _75713_txt = _2114d091d_resume(_self_);;
	if ((_75713_txt == nullptr)) {
		return _75217_t;;
	};
	_75217_t.get()._field_Column=(*(_self_))._field_column;
	_75217_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_2114d34ae_lexNum(_self_, &(_75713_txt), &(_75217_t))) {
			_case_begin_1b74eb0e2:;
			{
				goto _match_end_1b74ea520;
			}
		}
		else if ((_75713_txt[0LL] == '\'')) {
			_case_begin_1b74eb60e:;
			{
				_75217_t.get()._field_Kind=_2114d1be9_lexRune(_self_, &(_75713_txt));
				_75217_t.get()._field_Id=static_cast<jule::U32>(4LLU);
				return _75217_t;;
			}
		}
		else if (((_75713_txt[0LL] == '\"') || (_75713_txt[0LL] == '`'))) {
			_case_begin_1b74eba3d:;
			{
				_75217_t.get()._field_Kind=_2114d1e5d_lexStr(_self_);
				_75217_t.get()._field_Id=static_cast<jule::U32>(4LLU);
				return _75217_t;;
			}
		}
		else if (_2114c9de0_bytesHasPrefix(&(_75713_txt), jule::Str("//", 2))) {
			_case_begin_1b74ebaa4:;
			{
				_2114d0b93_lexLineComment(_self_, &(_75217_t));
				return _75217_t;;
			}
		}
		else if (_2114c9de0_bytesHasPrefix(&(_75713_txt), jule::Str("/*", 2))) {
			_case_begin_1b74ebb1a:;
			{
				_2114d0e18_lexRangeComment(_self_, &(_75217_t));
				return _75217_t;;
			}
		}
		else if (_2114d2c50_lexBasicOps(_self_, _75713_txt, &(_75217_t))) {
			_case_begin_1b74ea586:;
			{
				goto _match_end_1b74ea520;
			}
		}
		else if (_2114d3107_lexId(_self_, &(_75713_txt), &(_75217_t))) {
			_case_begin_1b74ea5ec:;
			{
				{
					auto expr = &(_2114c921e_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b74eee92:;
					if (it != expr_end) {
						_2114c8ce0_kindPair *_78920_pair = it;
						{
							if (((*(_78920_pair))._field_kind == _75217_t.get()._field_Kind)) {
								_75217_t.get()._field_Id=(*(_78920_pair))._field_id;
								goto _iter_end_1b74eee92;
							};
						}
						_iter_next_1b74eee92:;
						++it;
						goto _iter_begin_1b74eee92;
					}
					_iter_end_1b74eee92:;
				};
			}
		}
		else {
			_case_begin_1b74e9b3a:;
			{
				jule::I32 _79618_r = 0;;
				jule::I32 _79621_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee97de_DecodeRune(_75713_txt);
					_79618_r = __jule_assign_result.__jule_result_arg0;
					_79621_sz = __jule_assign_result.__jule_result_arg1;
				});
				_2114ceda1_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79618_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79621_sz;
				return _75217_t;;
			}
		}
		_match_end_1b74ea520:;
	};
	(*(_self_))._field_column+=_210eeb4d3_RuneCountStr(_75217_t.get()._field_Kind);
	return _75217_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _2114ce851_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _211aa1164_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _21217e038_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _212190401_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _212187e98_set(_212190dc4_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _23917_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23917_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23917_i] == '+')) {
			_case_begin_1b796d685:;
			{
				(_23917_i)++;
			}
		}
		else if ((_23822_s[_23917_i] == '-')) {
			_case_begin_1b796d894:;
			{
				(*(_self_))._field_neg=true;
				(_23917_i)++;
			}
		}
		_match_end_1b796d7a6:;
	};
	jule::Bool _25617_sawdot = false;;
	jule::Bool _25717_sawdigits = false;;
	for (; (_23917_i < _23822_s.len()); (_23917_i)++) {
		{
			{
				
				if ((_23822_s[_23917_i] == '_')) {
					_case_begin_1b7970335:;
					{
						goto _iter_next_1b796ebb4;
					}
				}
				else if ((_23822_s[_23917_i] == '.')) {
					_case_begin_1b79703ac:;
					{
						if (_25617_sawdot) {
							return __jule_func_result;;
						};
						_25617_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1b796ebb4;
					}
				}
				else if ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9'))) {
					_case_begin_1b7970434:;
					{
						_25717_sawdigits=true;
						if (((_23822_s[_23917_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1b796ebb4;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23917_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23917_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1b796ebb4;
					}
				}
				_match_end_1b7970214:;
			};
			goto _iter_end_1b796ebb4;
		}
	_iter_next_1b796ebb4:;
	}
	_iter_end_1b796ebb4:;;
	if ((!(_25717_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25617_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23917_i < _23822_s.len()) && (_2121836ad_lower(_23822_s[_23917_i]) == 'e'))) {
		(_23917_i)++;
		if ((_23917_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _30221_esign = 1LL;;
		if ((_23822_s[_23917_i] == '+')) {
			(_23917_i)++;
		} else if ((_23822_s[_23917_i] == '-')) {
			(_23917_i)++;
			_30221_esign=-1LL;
		};
		if ((((_23917_i >= _23822_s.len()) || (_23822_s[_23917_i] < '0')) || (_23822_s[_23917_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _31221_e = 0LL;;
		for (; ((_23917_i < _23822_s.len()) && ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9')) || (_23822_s[_23917_i] == '_'))); (_23917_i)++) {
			{
				if ((_23822_s[_23917_i] == '_')) {
					goto _iter_next_1b7976061;
				};
				if ((_31221_e < 10000LL)) {
					_31221_e=static_cast<jule::I32>((((_31221_e * 10LL) + static_cast<jule::I32>(_23822_s[_23917_i])) - '0'));
				};
			}
		_iter_next_1b7976061:;
		}
		_iter_end_1b7976061:;;
		(*(_self_))._field_dp+=(_31221_e * _30221_esign);
	};
	if ((_23917_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _2121882a6_floatBits(_212190dc4_decimal* _self_, _211aa1164_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _33317_exp = 0LL;;
	jule::U64 _33417_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_out;
	};
	_33317_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _35921_n = 0LL;;
			if (((*(_self_))._field_dp >= _212187b79_powtab.len())) {
				_35921_n=27LL;
			} else {
				_35921_n=_212187b79_powtab[(*(_self_))._field_dp];
			};
			_2121914ce_shift(_self_, static_cast<jule::I32>((-(_35921_n))));
			_33317_exp+=_35921_n;
		}
	_iter_next_1b797bab1:;
	}
	_iter_end_1b797bab1:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _36921_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _212187b79_powtab.len())) {
				_36921_n=27LL;
			} else {
				_36921_n=_212187b79_powtab[(-((*(_self_))._field_dp))];
			};
			_2121914ce_shift(_self_, _36921_n);
			_33317_exp-=_36921_n;
		}
	_iter_next_1b797c5a6:;
	}
	_iter_end_1b797c5a6:;;
	(_33317_exp)--;
	if ((_33317_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I32 _38617_n = (((*(_33229_flt))._field_bias + 1LL) - _33317_exp);;
		_2121914ce_shift(_self_, static_cast<jule::I32>((-(_38617_n))));
		_33317_exp+=_38617_n;
	};
	if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_2121914ce_shift(_self_, static_cast<jule::I32>(static_cast<jule::I32>((1LL + (*(_33229_flt))._field_mantbits))));
	_33417_mant=static_cast<jule::U64>(_212191eb3_roundedInteger(_self_));
	if ((_33417_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33417_mant>>=1LLU;
		(_33317_exp)++;
		if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_33417_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33317_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_33417_mant=0LLU;
	_33317_exp=static_cast<jule::I32>(static_cast<jule::I32>((((static_cast<jule::U32>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U32>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _42217_bits = (_33417_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42217_bits|=(static_cast<jule::U64>(((_33317_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42217_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42217_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _212191259_assign(_212190dc4_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>();;
	jule::I32 _15517_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15717_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15717_v1);
			_15217_buf[_15517_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15517_n)++;
			_15129_v=_15717_v1;
		}
	_iter_next_1b79891c8:;
	}
	_iter_end_1b79891c8:;;
	(*(_self_))._field_nd=0LL;
	(_15517_n)--;
	for (; (_15517_n >= 0LL); (_15517_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15517_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1b7989eed:;
	}
	_iter_end_1b7989eed:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_2121925ac_trim(_self_);
}



inline void _2121914ce_shift(_212190dc4_decimal* _self_, jule::I32 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1b798ba38:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1b798bab0:;
			{
				while ((_17628_k > 60LL)) {
					{
						_21219304c_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1b798c6c6:;
				}
				_iter_end_1b798c6c6:;;
				_21219304c_leftShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1b798bb37:;
			{
				while ((_17628_k < -60LL)) {
					{
						_212192865_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1b798c61b:;
				}
				_iter_end_1b798c61b:;;
				_212192865_rightShift(_self_, static_cast<jule::U32>(static_cast<jule::U32>((-(_17628_k)))));
			}
		}
		_match_end_1b798b917:;
	};
}



inline void _212191754_roundDown(_212190dc4_decimal* _self_, jule::I32 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_2121925ac_trim(_self_);
}



inline void _2121919c9_roundUp(_212190dc4_decimal* _self_, jule::I32 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _21117_i = (_20526_nd - 1LL);;
	for (; (_21117_i >= 0LL); (_21117_i)--) {
		{
			jule::U8 _21317_c = (*(_self_))._field_d[_21117_i];;
			if ((_21317_c < '9')) {
				((*(_self_))._field_d[_21117_i])++;
				(*(_self_))._field_nd=static_cast<jule::I32>((_21117_i + 1LL));
				return;;
			};
		}
	_iter_next_1b7990b19:;
	}
	_iter_end_1b7990b19:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _212191c4e_round(_212190dc4_decimal* _self_, jule::I32 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_21219338d_shouldRoundUp(_self_, _23224_nd)) {
		_2121919c9_roundUp(_self_, _23224_nd);
	} else {
		_212191754_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _212191eb3_roundedInteger(_212190dc4_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _24917_i = 0LL;;
	jule::U64 _25017_n = 0LLU;;
	for (; ((_24917_i < (*(_self_))._field_dp) && (_24917_i < (*(_self_))._field_nd)); (_24917_i)++) {
		{
			_25017_n=static_cast<jule::U64>(((_25017_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24917_i] - '0'))));
		}
	_iter_next_1b79934bd:;
	}
	_iter_end_1b79934bd:;;
	for (; (_24917_i < (*(_self_))._field_dp); (_24917_i)++) {
		{
			_25017_n*=10LLU;
		}
	_iter_next_1b7995a53:;
	}
	_iter_end_1b7995a53:;;
	if (_21219338d_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25017_n)++;
	};
	return _25017_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _212190dc4_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_2121a4c51_Const> static__2121a5180_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_2121a4c51_Const>(_2121a4c51_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_2121a4c51_Const> static__2121a5427_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_2121a4c51_Const>(_2121a4c51_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_2121a4c51_Const> static__2121a56be_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_2121a4c51_Const>(_2121a4c51_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_2121a4c51_Const> static__2121a5966_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_2121a4c51_Const>(_2121a4c51_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_2121a4c51_Const> static__2121a5c0d_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_2121a4c51_Const>(_2121a4c51_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_2121a4c51_Const> static__2121a5e0b_NewNil(void) {
	return jule::new_ptr<_2121a4c51_Const>(_2121a4c51_Const{._field_data=nullptr});;
}



inline jule::I64 _2121a6549_ReadI64(_2121a4c51_Const* _self_) {
	if ((!(_2121a88e2_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _2121a67ad_ReadU64(_2121a4c51_Const* _self_) {
	if ((!(_2121a8b56_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _2121a6a22_ReadBool(_2121a4c51_Const* _self_) {
	if ((!(_2121a8dba_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _2121a6c86_ReadStr(_2121a4c51_Const* _self_) {
	if ((!(_2121a912e_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _2121a6eea_ReadF64(_2121a4c51_Const* _self_) {
	if ((!(_2121a9393_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _2121a725e_AsI64(_2121a4c51_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b7a16772:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b7a16dd2:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b7a16e48:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1b7a16cb1:;
			{
				return 0LL;;
			}
		}
		_match_end_1b7a16b18:;
	};
}



inline jule::U64 _2121a74c3_AsU64(_2121a4c51_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b7a18675:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b7a18730:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b7a18796:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1b7a174cb:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b7a177a6:;
	};
}



inline jule::F64 _2121a7737_AsF64(_2121a4c51_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b7a1a435:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b7a19e07:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b7a19ea1:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1b7a18c4c:;
			{
				return 0LL;;
			}
		}
		_match_end_1b7a19027:;
	};
}



inline void _2121a79ac_SetI64(_2121a4c51_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _2121a7c32_SetU64(_2121a4c51_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _2121a7ea7_SetBool(_2121a4c51_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _2121a822c_SetStr(_2121a4c51_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _2121a84a2_SetF64(_2121a4c51_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline jule::Bool _2121a88e2_IsI64(_2121a4c51_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b7a1dba8:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b7a1de3e:;
			{
				return false;;
			}
		}
		_match_end_1b7a1ddd9:;
	};
}



inline jule::Bool _2121a8b56_IsU64(_2121a4c51_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b7a1e802:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b7a1e208:;
			{
				return false;;
			}
		}
		_match_end_1b7a1e1a3:;
	};
}



inline jule::Bool _2121a8dba_IsBool(_2121a4c51_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b7a20281:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b7a1eb98:;
			{
				return false;;
			}
		}
		_match_end_1b7a1eb43:;
	};
}



inline jule::Bool _2121a912e_IsStr(_2121a4c51_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b7a20c10:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b7a20627:;
			{
				return false;;
			}
		}
		_match_end_1b7a205c2:;
	};
}



inline jule::Bool _2121a9393_IsF64(_2121a4c51_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b7a2168e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b7a210a6:;
			{
				return false;;
			}
		}
		_match_end_1b7a21051:;
	};
}



inline jule::Bool _2121a9607_IsNil(_2121a4c51_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _2121a9c23_And(_2121a4c51_Const* _self_, _2121a4c51_Const _23818_x) {
	{
		
		if ((_2121a8dba_IsBool(_self_) && _2121a8dba_IsBool(&_23818_x))) {
			_case_begin_1b7a25a7d:;
			{
				return (_2121a6a22_ReadBool(_self_) && _2121a6a22_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1b7a25a17:;
			{
				return false;;
			}
		}
		_match_end_1b7a2560a:;
	};
}



inline jule::Bool _2121aa031_Or(_2121a4c51_Const* _self_, _2121a4c51_Const _24917_x) {
	{
		
		if ((_2121a8dba_IsBool(_self_) && _2121a8dba_IsBool(&_24917_x))) {
			_case_begin_1b7a26dc0:;
			{
				return (_2121a6a22_ReadBool(_self_) || _2121a6a22_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1b7a26562:;
			{
				return false;;
			}
		}
		_match_end_1b7a26496:;
	};
}



inline jule::Bool _2121aa33e_Eq(_2121a4c51_Const* _self_, _2121a4c51_Const _26017_x) {
	{
		
		if (_2121a9607_IsNil(_self_)) {
			_case_begin_1b7a28784:;
			{
				return _2121a9607_IsNil(&_26017_x);;
			}
		}
		else if (_2121a8dba_IsBool(_self_)) {
			_case_begin_1b7a28234:;
			{
				return (_2121a8dba_IsBool(&_26017_x) && (_2121a6a22_ReadBool(_self_) == _2121a6a22_ReadBool(&_26017_x)));;
			}
		}
		else if (_2121a912e_IsStr(_self_)) {
			_case_begin_1b7a282ab:;
			{
				return (_2121a912e_IsStr(&_26017_x) && (_2121a6c86_ReadStr(_self_) == _2121a6c86_ReadStr(&_26017_x)));;
			}
		}
		else if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a284ed:;
			{
				return (_2121a6549_ReadI64(_self_) == _2121a725e_AsI64(&_26017_x));;
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a28564:;
			{
				return (_2121a67ad_ReadU64(_self_) == _2121a74c3_AsU64(&_26017_x));;
			}
		}
		else if (_2121a9393_IsF64(_self_)) {
			_case_begin_1b7a285ca:;
			{
				return (_2121a6eea_ReadF64(_self_) == _2121a7737_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1b7a2783d:;
			{
				return false;;
			}
		}
		_match_end_1b7a27772:;
	};
}



inline jule::Bool _2121aa64c_Lt(_2121a4c51_Const* _self_, _2121a4c51_Const _28717_x) {
	{
		
		if (_2121a912e_IsStr(_self_)) {
			_case_begin_1b7a2bd70:;
			{
				return (_2121a912e_IsStr(&_28717_x) && (_2121a6c86_ReadStr(_self_) < _2121a6c86_ReadStr(&_28717_x)));;
			}
		}
		else if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a2bdd6:;
			{
				return (_2121a6549_ReadI64(_self_) < _2121a725e_AsI64(&_28717_x));;
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a2be5d:;
			{
				return (_2121a67ad_ReadU64(_self_) < _2121a74c3_AsU64(&_28717_x));;
			}
		}
		else if (_2121a9393_IsF64(_self_)) {
			_case_begin_1b7a2bed5:;
			{
				return (_2121a6eea_ReadF64(_self_) < _2121a7737_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1b7a28b2a:;
			{
				return false;;
			}
		}
		_match_end_1b7a28a5e:;
	};
}



inline jule::Bool _2121aa95a_LtEq(_2121a4c51_Const* _self_, _2121a4c51_Const _31019_x) {
	{
		
		if (_2121a912e_IsStr(_self_)) {
			_case_begin_1b7a2ea32:;
			{
				return (_2121a912e_IsStr(&_31019_x) && (_2121a6c86_ReadStr(_self_) <= _2121a6c86_ReadStr(&_31019_x)));;
			}
		}
		else if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a2ea98:;
			{
				return (_2121a6549_ReadI64(_self_) <= _2121a725e_AsI64(&_31019_x));;
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a2eb20:;
			{
				return (_2121a67ad_ReadU64(_self_) <= _2121a74c3_AsU64(&_31019_x));;
			}
		}
		else if (_2121a9393_IsF64(_self_)) {
			_case_begin_1b7a2eb97:;
			{
				return (_2121a6eea_ReadF64(_self_) <= _2121a7737_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1b7a2c766:;
			{
				return false;;
			}
		}
		_match_end_1b7a2c69a:;
	};
}



inline jule::Bool _2121aac68_Gt(_2121a4c51_Const* _self_, _2121a4c51_Const _33317_x) {
	{
		
		if (_2121a912e_IsStr(_self_)) {
			_case_begin_1b7a326e4:;
			{
				return (_2121a912e_IsStr(&_33317_x) && (_2121a6c86_ReadStr(_self_) > _2121a6c86_ReadStr(&_33317_x)));;
			}
		}
		else if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a3275a:;
			{
				return (_2121a6549_ReadI64(_self_) > _2121a725e_AsI64(&_33317_x));;
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a327d2:;
			{
				return (_2121a67ad_ReadU64(_self_) > _2121a74c3_AsU64(&_33317_x));;
			}
		}
		else if (_2121a9393_IsF64(_self_)) {
			_case_begin_1b7a32859:;
			{
				return (_2121a6eea_ReadF64(_self_) > _2121a7737_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1b7a30428:;
			{
				return false;;
			}
		}
		_match_end_1b7a3035c:;
	};
}



inline jule::Bool _2121ab076_GtEq(_2121a4c51_Const* _self_, _2121a4c51_Const _35619_x) {
	{
		
		if (_2121a912e_IsStr(_self_)) {
			_case_begin_1b7a353a6:;
			{
				return (_2121a912e_IsStr(&_35619_x) && (_2121a6c86_ReadStr(_self_) >= _2121a6c86_ReadStr(&_35619_x)));;
			}
		}
		else if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a3541c:;
			{
				return (_2121a6549_ReadI64(_self_) >= _2121a725e_AsI64(&_35619_x));;
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a35494:;
			{
				return (_2121a67ad_ReadU64(_self_) >= _2121a74c3_AsU64(&_35619_x));;
			}
		}
		else if (_2121a9393_IsF64(_self_)) {
			_case_begin_1b7a3551b:;
			{
				return (_2121a6eea_ReadF64(_self_) >= _2121a7737_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1b7a330da:;
			{
				return false;;
			}
		}
		_match_end_1b7a3301e:;
	};
}



inline jule::Bool _2121ab384_Add(_2121a4c51_Const* _self_, _2121a4c51_Const _37722_x) {
	{
		
		if (_2121a912e_IsStr(_self_)) {
			_case_begin_1b7a3cdc5:;
			{
				if ((!(_2121a912e_IsStr(&_37722_x)))) {
					return false;;
				};
				_2121a822c_SetStr(_self_, (_2121a6c86_ReadStr(_self_) + _2121a6c86_ReadStr(&_37722_x)));
			}
		}
		else if (_2121a9393_IsF64(_self_)) {
			_case_begin_1b7a3ce3b:;
			{
				_2121a84a2_SetF64(_self_, static_cast<jule::F64>((_2121a6eea_ReadF64(_self_) + _2121a7737_AsF64(&_37722_x))));
			}
		}
		else if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a3ceb3:;
			{
				if (_2121a9393_IsF64(&_37722_x)) {
					_2121a84a2_SetF64(_self_, static_cast<jule::F64>((_2121a7737_AsF64(_self_) + _2121a6eea_ReadF64(&_37722_x))));
				} else {
					_2121a79ac_SetI64(_self_, static_cast<jule::I64>((_2121a6549_ReadI64(_self_) + _2121a725e_AsI64(&_37722_x))));
				};
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a3d03a:;
			{
				if (_2121a9393_IsF64(&_37722_x)) {
					_2121a84a2_SetF64(_self_, static_cast<jule::F64>((_2121a7737_AsF64(_self_) + _2121a6eea_ReadF64(&_37722_x))));
				} else {
					_2121a7c32_SetU64(_self_, static_cast<jule::U64>((_2121a67ad_ReadU64(_self_) + _2121a74c3_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1b7a35c9c:;
			{
				return false;;
			}
		}
		_match_end_1b7a35bd1:;
	};
	return true;;
}



inline jule::Bool _2121ab692_Sub(_2121a4c51_Const* _self_, _2121a4c51_Const _40622_x) {
	{
		
		if (_2121a9393_IsF64(_self_)) {
			_case_begin_1b7a42d20:;
			{
				_2121a84a2_SetF64(_self_, static_cast<jule::F64>((_2121a6eea_ReadF64(_self_) - _2121a7737_AsF64(&_40622_x))));
			}
		}
		else if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a42d86:;
			{
				if (_2121a9393_IsF64(&_40622_x)) {
					_2121a84a2_SetF64(_self_, static_cast<jule::F64>((_2121a7737_AsF64(_self_) - _2121a6eea_ReadF64(&_40622_x))));
				} else {
					_2121a79ac_SetI64(_self_, static_cast<jule::I64>((_2121a6549_ReadI64(_self_) - _2121a725e_AsI64(&_40622_x))));
				};
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a42dec:;
			{
				if (_2121a9393_IsF64(&_40622_x)) {
					_2121a84a2_SetF64(_self_, static_cast<jule::F64>((_2121a7737_AsF64(_self_) - _2121a6eea_ReadF64(&_40622_x))));
				} else {
					_2121a7c32_SetU64(_self_, static_cast<jule::U64>((_2121a67ad_ReadU64(_self_) - _2121a74c3_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1b7a42649:;
			{
				return false;;
			}
		}
		_match_end_1b7a4257d:;
	};
	return true;;
}



inline jule::Bool _2121ab9a0_Mul(_2121a4c51_Const* _self_, _2121a4c51_Const _43022_x) {
	{
		
		if (_2121a9393_IsF64(_self_)) {
			_case_begin_1b7a46dce:;
			{
				_2121a84a2_SetF64(_self_, static_cast<jule::F64>((_2121a6eea_ReadF64(_self_) * _2121a7737_AsF64(&_43022_x))));
			}
		}
		else if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a46e45:;
			{
				if (_2121a9393_IsF64(&_43022_x)) {
					_2121a84a2_SetF64(_self_, static_cast<jule::F64>((_2121a7737_AsF64(_self_) * _2121a6eea_ReadF64(&_43022_x))));
				} else {
					_2121a79ac_SetI64(_self_, static_cast<jule::I64>((_2121a6549_ReadI64(_self_) * _2121a725e_AsI64(&_43022_x))));
				};
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a46eab:;
			{
				if (_2121a9393_IsF64(&_43022_x)) {
					_2121a84a2_SetF64(_self_, static_cast<jule::F64>((_2121a7737_AsF64(_self_) * _2121a6eea_ReadF64(&_43022_x))));
				} else {
					_2121a7c32_SetU64(_self_, static_cast<jule::U64>((_2121a67ad_ReadU64(_self_) * _2121a74c3_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1b7a465b5:;
			{
				return false;;
			}
		}
		_match_end_1b7a464e9:;
	};
	return true;;
}



inline jule::Bool _2121abcad_Div(_2121a4c51_Const* _self_, _2121a4c51_Const _45822_x) {
	{
		
		if (_2121a9393_IsF64(_self_)) {
			_case_begin_1b7a4ae8d:;
			{
				jule::F64 _46117_l = _2121a7737_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_2121a84a2_SetF64(_self_, static_cast<jule::F64>(jule::div(_2121a6eea_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a4b004:;
			{
				jule::F64 _46717_l = _2121a7737_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_2121a84a2_SetF64(_self_, static_cast<jule::F64>(jule::div(_2121a7737_AsF64(_self_),_46717_l)));
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a4b06a:;
			{
				jule::F64 _47317_l = _2121a7737_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_2121a84a2_SetF64(_self_, static_cast<jule::F64>(jule::div(_2121a7737_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1b7a4a674:;
			{
				return false;;
			}
		}
		_match_end_1b7a4a5a8:;
	};
	return true;;
}



inline jule::Bool _2121ac0bb_Mod(_2121a4c51_Const* _self_, _2121a4c51_Const _48722_x) {
	{
		
		if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a50190:;
			{
				jule::I64 _49017_l = _2121a725e_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_2121a79ac_SetI64(_self_, static_cast<jule::I64>(jule::mod(_2121a6549_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a50206:;
			{
				jule::U64 _49617_l = _2121a74c3_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_2121a7c32_SetU64(_self_, static_cast<jule::U64>(jule::mod(_2121a67ad_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1b7a50129:;
			{
				return false;;
			}
		}
		_match_end_1b7a4dce8:;
	};
	return true;;
}



inline jule::Bool _2121ac3c9_BitwiseAnd(_2121a4c51_Const* _self_, _2121a4c51_Const _50929_x) {
	{
		
		if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a530c7:;
			{
				_2121a79ac_SetI64(_self_, static_cast<jule::I64>((_2121a6549_ReadI64(_self_) & _2121a725e_AsI64(&_50929_x))));
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a5313d:;
			{
				_2121a7c32_SetU64(_self_, static_cast<jule::U64>((_2121a67ad_ReadU64(_self_) & _2121a74c3_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1b7a53061:;
			{
				return false;;
			}
		}
		_match_end_1b7a51c30:;
	};
	return true;;
}



inline jule::Bool _2121ac6d7_BitwiseOr(_2121a4c51_Const* _self_, _2121a4c51_Const _52328_x) {
	{
		
		if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a54e42:;
			{
				_2121a79ac_SetI64(_self_, static_cast<jule::I64>((_2121a6549_ReadI64(_self_) | _2121a725e_AsI64(&_52328_x))));
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a54ea8:;
			{
				_2121a7c32_SetU64(_self_, static_cast<jule::U64>((_2121a67ad_ReadU64(_self_) | _2121a74c3_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1b7a54dcb:;
			{
				return false;;
			}
		}
		_match_end_1b7a54d21:;
	};
	return true;;
}



inline jule::Bool _2121ac9e5_Xor(_2121a4c51_Const* _self_, _2121a4c51_Const _53722_x) {
	{
		
		if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a56cce:;
			{
				_2121a79ac_SetI64(_self_, static_cast<jule::I64>((_2121a6549_ReadI64(_self_) ^ _2121a725e_AsI64(&_53722_x))));
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a56d45:;
			{
				_2121a7c32_SetU64(_self_, static_cast<jule::U64>((_2121a67ad_ReadU64(_self_) ^ _2121a74c3_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1b7a56c68:;
			{
				return false;;
			}
		}
		_match_end_1b7a56bad:;
	};
	return true;;
}



inline jule::Bool _2121acd03_Lshift(_2121a4c51_Const* _self_, _2121a4c51_Const _55125_x) {
	{
		
		if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a58b6b:;
			{
				jule::I64 _55417_l = _2121a725e_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _2121a74c3_AsU64(&_55125_x);;
					_2121a79ac_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_2121ad474_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a58bd2:;
			{
				_2121ad474_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1b7a58b05:;
			{
				return false;;
			}
		}
		_match_end_1b7a58a4a:;
	};
	return true;;
}



inline jule::Bool _2121ad111_Rshift(_2121a4c51_Const* _self_, _2121a4c51_Const _57125_x) {
	{
		
		if (_2121a88e2_IsI64(_self_)) {
			_case_begin_1b7a5b245:;
			{
				jule::I64 _57417_l = _2121a725e_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _2121a74c3_AsU64(&_57125_x);;
					_2121a79ac_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_2121ad771_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_2121a8b56_IsU64(_self_)) {
			_case_begin_1b7a5b2ab:;
			{
				_2121ad771_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1b7a5b1ce:;
			{
				return false;;
			}
		}
		_match_end_1b7a5b113:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _2121a4c51_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c0d07c_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c0de18_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c0e314_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c41d2a_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c423e1_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c426cc_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c42a51_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c42d3c_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c43238_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c43524_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213c43b62_IsUnsafe(_213c43810_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _213c43810_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213c44338_AutoSized(_213c43ed6_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _213c43ed6_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c446e0_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c44a97_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c45ea5_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c46291_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c46846_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c46b32_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213c4733b_IsNil(_213c46ed9_LitExpr* _self_) {
	return (*(_self_))._field_Value.equal("nil", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _213c46ed9_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c47627_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c47a9a_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c482a4_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4865b_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c48a13_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c48dba_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4933d_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c497b1_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213c4a22e_Unhandled(_213c49dbb_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _213c4a493_Ignored(_213c49dbb_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _213c49dbb_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4a84a_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4b120_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4b593_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4be78_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4c5e9_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4ce57_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4d562_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4d84d_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4dcc1_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4e178_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4e530_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4e81b_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c4ee26_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c50465_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c51356_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c51961_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213c5249a_IsSelf(_213c52137_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _213c52137_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213c537a9_IsAnon(_213c53457_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _213c53457_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c54436_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c547dd_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213c552a0_IsInf(_213c54e4d_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _213c54e4d_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213c55a75_IsWhileNext(_213c55723_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _213c55723_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c560b4_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c5646b_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c56823_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c56c96_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c5714d_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c575c1_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c57c97_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c5821a_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c588e1_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c59183_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c59606_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c5a12e_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c5a904_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c5b00e_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c5b273_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c5bac0_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c5c296_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c5c8a1_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213c6390c_FieldIns> _213c5dd7a_instance(jule::Ptr<_213c5da17_Field> _self_) {
	return jule::new_ptr<_213c6390c_FieldIns>(_213c6390c_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _213c5da17_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c607c7_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213c64402_StructIns> _213c61a4d_instance(jule::Ptr<_213c615db_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_213c64402_StructIns> _9917_ins = jule::new_ptr<_213c64402_StructIns>(_213c64402_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_213c6390c_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_213d11988_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__213c7c827_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d52162:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> _10621_s = *it;
			{
				{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = _9917_ins.get()._field_Statics; __jule_push_dest.push(jule::new_ptr<_213d11988_Var>((*(_10621_s)))); };
			}
			_iter_next_1b7d52162:;
			++it;
			goto _iter_begin_1b7d52162;
		}
		_iter_end_1b7d52162:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d52a03:;
		if (it != expr_end) {
			jule::Ptr<_213c5da17_Field> _11021_f = *it;
			{
				{ jule::Slice<jule::Ptr<_213c6390c_FieldIns>> &__jule_push_dest = _9917_ins.get()._field_Fields; __jule_push_dest.push(_213c5dd7a_instance(_11021_f)); };
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _213d8a0c7_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1b7d52a03:;
			++it;
			goto _iter_begin_1b7d52a03;
		}
		_iter_end_1b7d52a03:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_213c76a0d_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7d55550:;
			if (it != expr_end) {
				jule::Ptr<_213c76a0d_Fn> _12125_f = *it;
				{
					jule::Ptr<_213c76a0d_Fn> _12225_fins = jule::new_ptr<_213c76a0d_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_213c76a0d_Fn>> &__jule_push_dest = _9917_ins.get()._field_Methods; __jule_push_dest.push(_12225_fins); };
				}
				_iter_next_1b7d55550:;
				++it;
				goto _iter_begin_1b7d55550;
			}
			_iter_end_1b7d55550:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_213c64402_StructIns> _213c61d28_appendInstance(_213c615db_Struct* _self_, jule::Ptr<_213c64402_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d577b6:;
		if (it != expr_end) {
			jule::Ptr<_213c64402_StructIns> _13921_ains = *it;
			{
				if (_213c64ee6_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_1b7d577b6:;
			++it;
			goto _iter_begin_1b7d577b6;
		}
		_iter_end_1b7d577b6:;
	};
	{ jule::Slice<jule::Ptr<_213c64402_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13338_ins))); };
	return nullptr;;
}



inline jule::Ptr<_213c76a0d_Fn> _213c621d0_FindMethod(_213c615db_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d58bc4:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1b7d58bc4:;
			++it;
			goto _iter_begin_1b7d58bc4;
		}
		_iter_end_1b7d58bc4:;
	};
	return nullptr;;
}



inline jule::Ptr<_213d11988_Var> _213c624dd_FindStatic(_213c615db_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d593de:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1b7d593de:;
			++it;
			goto _iter_begin_1b7d593de;
		}
		_iter_end_1b7d593de:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c5da17_Field> _213c627eb_FindField(_213c615db_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d5abc6:;
		if (it != expr_end) {
			jule::Ptr<_213c5da17_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1b7d5abc6:;
			++it;
			goto _iter_begin_1b7d5abc6;
		}
		_iter_end_1b7d5abc6:;
	};
	return nullptr;;
}



inline jule::Bool _213c62b09_IsImplements(_213c615db_Struct* _self_, jule::Ptr<_213c88b63_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d5baa6:;
		if (it != expr_end) {
			jule::Ptr<_213c88b63_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_1b7d5baa6:;
			++it;
			goto _iter_begin_1b7d5baa6;
		}
		_iter_end_1b7d5baa6:;
	};
	return false;;
}



inline jule::Bool _213c62e17_IsDerives(_213c615db_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d5c128:;
		if (it != expr_end) {
			jule::Ptr<_213c0e314_Directive> *_19416_d = it;
			{
				if ((*(_19416_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1b7d5c128:;
			++it;
			goto _iter_begin_1b7d5c128;
		}
		_iter_end_1b7d5c128:;
	};
	return false;;
}



inline jule::Bool _213c63225_IsUses(_213c615db_Struct* _self_, jule::Ptr<_213c615db_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d5e4e3:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_1b7d5ec63:;
				}
				_iter_end_1b7d5ec63:;;
			}
			_iter_next_1b7d5e4e3:;
			++it;
			goto _iter_begin_1b7d5e4e3;
		}
		_iter_end_1b7d5e4e3:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _213c615db_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6390c_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c68307_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c687be_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c68b76_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c69171_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c694e5_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c69803_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c69d53_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6a705_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6aaac_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6b030_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6b3d7_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6b78e_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6bc12_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6c251_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6c790_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6d076_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6d41c_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6d7d5_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6dac1_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6e132_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6e42e_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6e808_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c6ebe3_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c70012_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c703ec_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c707d7_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c70c8d_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c71244_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c7162e_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c7194d_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c71c6c_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c72421_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c72784_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c72b6e_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c72e6b_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c73257_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c73543_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c73851_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c73c19_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c74005_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c749b7_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213c787e0_ParamIns> _213c75545_instance(jule::Ptr<_213c751c1_Param> _self_) {
	return jule::new_ptr<_213c787e0_ParamIns>(_213c787e0_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _213c757a9_IsSelf(_213c751c1_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _213c75a1d_IsRef(_213c751c1_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _213c751c1_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213c76e70_IsVoid(_213c76a0d_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _213c771d4_IsMethod(_213c76a0d_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _213c77448_IsEntryPoint(_213c76a0d_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _213c776ac_IsInit(_213c76a0d_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _213c77921_IsAnon(_213c76a0d_Fn* _self_) {
	return _2114c46ae_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _213c77b85_AnyVar(_213c76a0d_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_213c796ae_FnIns> _213c77de9_instanceForce(jule::Ptr<_213c76a0d_Fn> _self_) {
	jule::Ptr<_213c796ae_FnIns> _10017_ins = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_213cb8a72_Scope>(), ._field_Refers=static__213c7c827_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_213c787e0_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d72e74:;
		if (it != expr_end) {
			jule::Ptr<_213c751c1_Param> _10721_p = *it;
			{
				{ jule::Slice<jule::Ptr<_213c787e0_ParamIns>> &__jule_push_dest = _10017_ins.get()._field_Params; __jule_push_dest.push(_213c75545_instance(_10721_p)); };
			}
			_iter_next_1b7d72e74:;
			++it;
			goto _iter_begin_1b7d72e74;
		}
		_iter_end_1b7d72e74:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_213c796ae_FnIns> _213c7815d_instance(jule::Ptr<_213c76a0d_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _213c77de9_instanceForce(_self_);;
}



inline jule::Ptr<_213c796ae_FnIns> _213c78438_appendInstance(_213c76a0d_Fn* _self_, jule::Ptr<_213c796ae_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_213c796ae_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_213c796ae_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d76ce1:;
		if (it != expr_end) {
			jule::Ptr<_213c796ae_FnIns> _14421_ains = *it;
			{
				if (_213c7b0b7_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_1b7d76ce1:;
			++it;
			goto _iter_begin_1b7d76ce1;
		}
		_iter_end_1b7d76ce1:;
	};
	{ jule::Slice<jule::Ptr<_213c796ae_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12838_ins))); };
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _213c76a0d_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _213c78b42_Str(_213c787e0_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		(_16617_s).append("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		(_16617_s).append("&_:", 3);
	};
	if (_213c757a9_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_213c75a1d_IsRef((*(_self_))._field_Decl.ptr())) {
			(_16617_s).append("&", 1);
		};
		(_16617_s).append("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		(_16617_s).append("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_213d88bdb_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _213c787e0_ParamIns _Src) {
	_Stream << _213c78b42_Str(&_Src);
	return _Stream;
}



inline jule::Str _213c799de_Str(_213c796ae_FnIns* _self_) {
	;
	return _213c7b3c5_GetKindStr(_self_, false);;
}



inline jule::Bool _213c79cec_Equal(jule::Ptr<_213c796ae_FnIns> _self_, jule::Ptr<_213d88834_TypeKind> _21721_other) {
	jule::Ptr<_213c796ae_FnIns> _21813_f = _213d8c23e_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _213c7a25e_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _213c7a25e_EqualFn(jule::Ptr<_213c796ae_FnIns> _self_, jule::Ptr<_213c796ae_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_213c76e70_IsVoid(_self_.get()._field_Decl.ptr()) != _213c76e70_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_213c787e0_ParamIns>,jule::Ptr<_213c787e0_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_213c787e0_ParamIns>,jule::Ptr<_213c787e0_ParamIns>)>([=](jule::Ptr<_213c787e0_ParamIns> _23830_p1, jule::Ptr<_213c787e0_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_213c757a9_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_213c757a9_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_213c75a1d_IsRef(_23830_p1.get()._field_Decl.ptr()) != _213c75a1d_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _213d88ee9_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I32 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1b7d844c4:;
	}
	_iter_end_1b7d844c4:;;
	if ((!(_213c76e70_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_213d88ee9_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _213c7a56c_equalTrait(jule::Ptr<_213c796ae_FnIns> _self_, jule::Ptr<_213c796ae_FnIns>* _28727_other) {
	if ((_self_.get()._field_Decl.get()._field_Public != (*(_28727_other)).get()._field_Decl.get()._field_Public)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Ident != (*(_28727_other)).get()._field_Decl.get()._field_Ident)) {
		return false;;
	};
	if ((!(_213c7a25e_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_213d88834_TypeKind>> _213c7a7d1_Types(_213c796ae_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1b7d88495:;
			{
				return nullptr;;
			}
		}
		else if ((_213d8cbe0_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1b7d8850b:;
			{
				return jule::Slice<jule::Ptr<_213d88834_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1b7d8842e:;
			{
				return _213d8cbe0_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1b7d88363:;
	};
}



inline jule::Bool _213c7aa45_IsBuiltin(_213c796ae_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _213c7aca9_IsAnon(_213c796ae_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _213c77921_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _213c7b0b7_Same(_213c796ae_FnIns* _self_, jule::Ptr<_213c796ae_FnIns> _33019_f) {
	if ((((*(_self_))._field_Decl != _33019_f.get()._field_Decl) || (_33019_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d8b7c8:;
		if (it != expr_end) {
			jule::I32 _33513_i = it - expr->begin();
			jule::Ptr<_213d870a2_InsGeneric> *_33516_g = it;
			{
				jule::Ptr<_213d870a2_InsGeneric> _33617_g2 = _33019_f.get()._field_Generics[_33513_i];;
				if ((((*(_33516_g)).get()._field_Kind.get()._field_BindIdent != _33617_g2.get()._field_Kind.get()._field_BindIdent) || (!(_213d88ee9_Equal((*(_33516_g)).get()._field_Kind, _33617_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b7d8b7c8:;
			++it;
			_33513_i++;
			goto _iter_begin_1b7d8b7c8;
		}
		_iter_end_1b7d8b7c8:;
	};
	return true;;
}



inline jule::Str _213c7b3c5_GetKindStr(_213c796ae_FnIns* _self_, jule::Bool _34725_ident) {
	jule::Str _34817_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		(_34817_s).append("unsafe ", 7);
	};
	(_34817_s).append("fn", 2);
	if ((_34725_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34817_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	(_34817_s).append("(", 1);
	jule::I32 _36113_n = (*(_self_))._field_Params.len();;
	if ((_36113_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7d90854:;
			if (it != expr_end) {
				jule::Ptr<_213c787e0_ParamIns> *_36320_p = it;
				{
					_34817_s+=_213c78b42_Str((*(_36320_p)).ptr());
					(_34817_s).append(",", 1);
				}
				_iter_next_1b7d90854:;
				++it;
				goto _iter_begin_1b7d90854;
			}
			_iter_end_1b7d90854:;
		};
		(_34817_s).mut_slice(0LL, (_34817_s.len() - 1LL));;
	};
	(_34817_s).append(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		(_34817_s).append("!", 1);
	};
	if ((!(_213c76e70_IsVoid((*(_self_))._field_Decl.ptr())))) {
		(_34817_s).append(":", 1);
		_34817_s+=_213d88bdb_Str((*(_self_))._field_Result.ptr());
	};
	return _34817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _213c796ae_FnIns _Src) {
	_Stream << _213c799de_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_213c7c618_ReferenceStack> static__213c7c827_new(void) {
	return jule::new_ptr<_213c7c618_ReferenceStack>(_213c7c618_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I32 _213c7cc01_Len(_213c7c618_ReferenceStack* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_buffer.len());;
}



inline jule::Any _213c7d00e_At(_213c7c618_ReferenceStack* _self_, jule::I32 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _213c7d284_Push(_213c7c618_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1b8601768_Exist(_213c7c618_ReferenceStack* _self_, jule::Ptr<_213c796ae_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8602a44:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b8602a44:;
			++it;
			goto _iter_begin_1b8602a44;
		}
		_iter_end_1b8602a44:;
	};
	return false;;
}

inline jule::Bool _1b8614d86_Exist(_213c7c618_ReferenceStack* _self_, jule::Ptr<_213d11988_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b861611d:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b861611d:;
			++it;
			goto _iter_begin_1b861611d;
		}
		_iter_end_1b861611d:;
	};
	return false;;
}

inline jule::Bool _1b86a6c2a_Exist(_213c7c618_ReferenceStack* _self_, jule::Ptr<_213c64402_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b86a8006:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b86a8006:;
			++it;
			goto _iter_begin_1b86a8006;
		}
		_iter_end_1b86a8006:;
	};
	return false;;
}

inline jule::Bool _1b895689d_Exist(_213c7c618_ReferenceStack* _self_, jule::Ptr<_213c88b63_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8957b02:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b8957b02:;
			++it;
			goto _iter_begin_1b8957b02;
		}
		_iter_end_1b8957b02:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _213c7c618_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c7d949_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _213c839b5_pushErr(_213c8318a_symbolBuilder* _self_, jule::Ptr<_2114c1b73_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_2110be2cb_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_213cddd72_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _213c8419c_pushSuggestion(_213c8318a_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_213ce0307_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _213c84554_checkCppUseDeclPath(_213c8318a_symbolBuilder* _self_, jule::Ptr<_213c59183_UseDecl>* _34539_decl, jule::Str _34555_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _21103bb1c_Ext(_34555_path);;
	if (((!(_2110b19c7_IsValidHeaderExt(_34613_ext))) && (!(_2110b1c6e_IsValidCppExt(_34613_ext))))) {
		_213c839b5_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_22a8c20e2_Status> _35313_info = ({
		auto except = static__22a8b2db3_Of(_34555_path);
		(except.ok()) ? (except.result) : ({{
			_213c839b5_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_22a8c20e2_Status>(nullptr);});
	});;
	if (_22a8c24aa_IsDir(_35313_info.ptr())) {
		_213c839b5_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _213c8482e_buildCppHeaderImport(_213c8318a_symbolBuilder* _self_, jule::Ptr<_213c59183_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*(_36544_decl)).get()._field_LinkPath;;
	if ((!(_2110b171e_IsStdHeaderPath((*(_36544_decl)).get()._field_LinkPath)))) {
		_36617_path=_21103b875_Join(jule::Slice<jule::Str>::make({_2114c763a_Dir((*(_36544_decl)).get()._field_Token.get()._field_File.ptr()),(*(_36544_decl)).get()._field_LinkPath}));
		jule::Bool _37021_ok = _213c84554_checkCppUseDeclPath(_self_, _36544_decl, _36617_path);;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21103bdb4_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_213c839b5_pushErr(_self_, &((*(_36544_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_36544_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_213cd7c7d_ImportInfo>(_213cd7c7d_ImportInfo{._field_Token=(*(_36544_decl)).get()._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*(_36544_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _213c84b3c_buildStdImport(_213c8318a_symbolBuilder* _self_, jule::Ptr<_213c59183_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*(_39338_decl)).get()._field_LinkPath.slice(5LL);;
	_39417_path=_2110379b4_Replace(_39417_path, jule::Str("::", 2), jule::Str("/", 1), -1LL);
	_39417_path=_21103b875_Join(jule::Slice<jule::Str>::make({_2111a7084_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21103bdb4_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_213c839b5_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_22a8c20e2_Status> _40413_info = ({
		auto except = static__22a8b2db3_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_213c839b5_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_22a8c20e2_Status>(nullptr);});
	});;
	if ((!(_22a8c24aa_IsDir(_40413_info.ptr())))) {
		_213c839b5_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _41413_i = (_2110332a6_FindLast((*(_39338_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*(_39338_decl)).get()._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_213cd7c7d_ImportInfo>(_213cd7c7d_ImportInfo{._field_Token=(*(_39338_decl)).get()._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*(_39338_decl)).get()._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*(_39338_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*(_39338_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_213cda8b8_Package>(_213cda8b8_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _213c84e4a_buildIdentImport(jule::Ptr<_213c8318a_symbolBuilder> _self_, jule::Ptr<_213c59183_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _213cd50cc_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._213cd4241_GetModPath(_self_.get()._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_213c839b5_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_213c8419c_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*(_43241_decl)).get()._field_LinkPath;;
	_44017_path=_2110379b4_Replace(_44017_path, jule::Str("::", 2), jule::Str("/", 1), -1LL);
	_44017_path=_21103b875_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21103bdb4_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_213c839b5_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_22a8c20e2_Status> _45113_info = ({
		auto except = static__22a8b2db3_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_213c839b5_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_22a8c20e2_Status>(nullptr);});
	});;
	if ((!(_22a8c24aa_IsDir(_45113_info.ptr())))) {
		_213c839b5_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _46113_i = (_2110332a6_FindLast((*(_43241_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*(_43241_decl)).get()._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_213cd7c7d_ImportInfo>(_213cd7c7d_ImportInfo{._field_Token=(*(_43241_decl)).get()._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*(_43241_decl)).get()._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*(_43241_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*(_43241_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_213cda8b8_Package>(_213cda8b8_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _213c85258_buildImport(jule::Ptr<_213c8318a_symbolBuilder> _self_, jule::Ptr<_213c59183_UseDecl>* _47936_decl) {
	{
		
		if ((*(_47936_decl)).get()._field_Binded) {
			_case_begin_1b7dc3755:;
			{
				return _213c8482e_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*(_47936_decl)).get()._field_Std) {
			_case_begin_1b7dc3997:;
			{
				return _213c84b3c_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1b7dc305c:;
			{
				return _213c84e4a_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1b7dc2e91:;
	};
}



inline jule::Bool _213c85566_checkDuplicateUseDecl(_213c8318a_symbolBuilder* _self_, jule::Ptr<_213cd7c7d_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213cd7c7d_ImportInfo> _49213_lpkg = _213d568ce_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)>([=](jule::Ptr<_213cd7c7d_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*(_49041_pkg)).get()._field_Path == _49248_spkg.get()._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_213c839b5_pushErr(_self_, &((*(_49041_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_49041_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_213c8419c_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _213c85885_implImportSelections(_213c8318a_symbolBuilder* _self_, jule::Ptr<_213cd7c7d_ImportInfo>* _50444_imp, jule::Ptr<_213c59183_UseDecl>* _50467_decl) {
	(*(_50444_imp)).get()._field_Selected=(*(_50467_decl)).get()._field_Selected;
	{
		auto expr = &((*(_50444_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7dc71b5:;
		if (it != expr_end) {
			jule::Ptr<_2114c1b73_Token> _50616_item = *it;
			{
				{
					auto expr = &((*(_50444_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7dc78e1:;
					if (it != expr_end) {
						jule::Ptr<_2114c1b73_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1b7dc78e1;
							} else if ((_50616_item.get()._field_Kind == _50720_citem.get()._field_Kind)) {
								_213c839b5_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_50616_item.get()._field_Kind, &__jule_any_type5)}));
								_213c8419c_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1b7dc78e1;
							};
						}
						_iter_next_1b7dc78e1:;
						++it;
						goto _iter_begin_1b7dc78e1;
					}
					_iter_end_1b7dc78e1:;
				};
			}
			_iter_next_1b7dc71b5:;
			++it;
			goto _iter_begin_1b7dc71b5;
		}
		_iter_end_1b7dc71b5:;
	};
}



inline jule::Str _213c85b93_getAsLinkPath(jule::Ptr<_213c8318a_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_2110319be_HasPrefix(_51937_path, _2111a7084_PathStdlib)) {
		(_51937_path).mut_slice(_2111a7084_PathStdlib.len());;
		return (jule::Str("std", 3) + _2110379b4_Replace(_51937_path, jule::Str("/", 1), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21103bdb4_Abs(_213cd50cc_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._213cd4241_GetModPath(_self_.get()._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 47LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _2110379b4_Replace(_51937_path, jule::Str("/", 1), jule::Str("::", 2), -1LL);;
}



inline void _213c8605b_pushCycleError(jule::Ptr<_213c8318a_symbolBuilder> _self_, jule::Ptr<_213c8318a_symbolBuilder>* _53335_sb, jule::Str _53355_path, jule::Str* _53371_message) {
	;
	jule::Str _53513_refersTo = _2110be71b_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_213c85b93_getAsLinkPath(_self_, _2114c763a_Dir((*(_53335_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_213c85b93_getAsLinkPath(_self_, _53355_path), &__jule_any_type5)}));;
	((*(_53371_message))).buffer.insert(0, (((_21103124e_Repeat(jule::Str(" ", 1), 7LL) + _53513_refersTo) + jule::Str("\n", 1))));;
}



inline void _213c86424_pushCrossCycleError(jule::Ptr<_213c8318a_symbolBuilder> _self_, jule::Ptr<_213c8318a_symbolBuilder>* _54240_target, jule::Ptr<_213cd7c7d_ImportInfo>* _54265_imp, jule::Ptr<_2114c1b73_Token>* _54284_errorToken) {
	jule::Str _54317_message = jule::Str();;
	_213c8605b_pushCycleError(_self_, &(_self_), (*(_54265_imp)).get()._field_Path, &(_54317_message));
	jule::Ptr<_213c8318a_symbolBuilder> _54717_owner = _self_.get()._field_owner;;
	jule::Ptr<_213c8318a_symbolBuilder> _54817_old = _self_;;
	while ((_54717_owner.get()._field_owner != nullptr)) {
		{
			_213c8605b_pushCycleError(_self_, &(_54817_old.get()._field_owner), _2114c763a_Dir(_54817_old.get()._field_table.get()._field_File.ptr()), &(_54317_message));
			if ((_54717_owner.get()._field_owner == (*(_54240_target)))) {
				_213c8605b_pushCycleError(_self_, _54240_target, _2114c763a_Dir(_54717_owner.get()._field_table.get()._field_File.ptr()), &(_54317_message));
				goto _iter_end_1b7dcdba0;
			};
			_54817_old=_54717_owner;
			_54717_owner=_54717_owner.get()._field_owner;
		}
	_iter_next_1b7dcdba0:;
	}
	_iter_end_1b7dcdba0:;;
	_213c839b5_pushErr(_self_.ptr(), _54284_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_54317_message, &__jule_any_type5)}));
}



inline jule::Bool _213c867cb_checkImportCycles(jule::Ptr<_213c8318a_symbolBuilder> _self_, jule::Ptr<_213cd7c7d_ImportInfo> _56537_imp, jule::Ptr<_213c59183_UseDecl>* _56556_decl) {
	if ((_56537_imp.get()._field_Path == _2114c763a_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_213c839b5_pushErr(_self_.ptr(), &((*(_56556_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_213c85b93_getAsLinkPath(_self_, _56537_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_2114c763a_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_213c86424_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_213c8318a_symbolBuilder> _58017_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_2114c763a_Dir(_58017_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_213c86424_pushCrossCycleError(_self_, &(_58017_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	if ((_58017_owner.get()._field_owner != nullptr)) {
		_58017_owner=_58017_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _213c86bb6_checkPackageAccessibility(_213c8318a_symbolBuilder* _self_, jule::Ptr<_213c59183_UseDecl>* _60145_decl, jule::Str* _60162_mod, jule::Str* _60173_path) {
	if (((_213cd50cc_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._213cd4241_GetModPath((*(_self_))._field_importer) != (*(_60162_mod))) && _21103671b_Contains((*(_60173_path)), jule::Str("internal", 8)))) {
		_213c839b5_pushErr(_self_, &((*(_60145_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _213c8707e_importPackage(jule::Ptr<_213c8318a_symbolBuilder> _self_, jule::Ptr<_213cd7c7d_ImportInfo>* _60738_imp, jule::Ptr<_213c59183_UseDecl>* _60761_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_60738_imp)).get()._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_213cd7c7d_ImportInfo> _61217_port = _213cd50cc_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._213cd485c_GetImport(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path);;
	if ((_61217_port != nullptr)) {
		(*(_60738_imp)).get()._field_Package=_61217_port.get()._field_Package;
		(*(_60738_imp)).get()._field_Duplicate=true;
		jule::Str _61717_oldMod = _213cd50cc_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._213cd4241_GetModPath(_self_.get()._field_importer);;
		_213cd50cc_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._213cd3eee_SetModPath(_self_.get()._field_importer, _213cd50cc_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._213cd454e_ModById(_self_.get()._field_importer, (*(_60738_imp)).get()._field_ModId));
		_213c86bb6_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_61717_oldMod), &(_61217_port.get()._field_Path));
		_213cd50cc_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._213cd3eee_SetModPath(_self_.get()._field_importer, _61717_oldMod);
	} else {
		if ((!(_213c867cb_checkImportCycles(_self_, (*(_60738_imp)), _60761_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _62617_oldMod = _213cd50cc_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._213cd4241_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_213cd50cc_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._213cd3eee_SetModPath(_self_.get()._field_importer, _62617_oldMod);
		});;
		if ((*(_60738_imp)).get()._field_Std) {
			_213cd50cc_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._213cd3eee_SetModPath(_self_.get()._field_importer, _2111a7084_PathStdlib);
		};
		jule::Slice<jule::Ptr<_213c0d07c_Ast>> _63122_asts;;
		jule::Slice<_2110be2cb_Log> _63132_errors;;
		({
			__jule_tuple_sx_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log __jule_assign_result = _213cd50cc_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._213cd4c14_ImportPackage(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path, (!((*(_60738_imp)).get()._field_Std)));
			_63122_asts = __jule_assign_result.__jule_result_arg0;
			_63132_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63132_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_63132_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_213c86bb6_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_62617_oldMod), &((*(_60738_imp)).get()._field_Path));
		{
			auto expr = &(_63122_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7ddceab:;
			if (it != expr_end) {
				jule::Ptr<_213c0d07c_Ast> _63925_ast = *it;
				{
					jule::Ptr<_213d56417_SymbolTable> _64025_table = nullptr;;
					({
						__jule_tuple_x_213d56417_SymbolTable__jule_tuple_s_2110be2cb_Log __jule_assign_result = _213da7875_buildSymbols(&(_63925_ast), &(_self_.get()._field_importer), _self_);
						_64025_table = __jule_assign_result.__jule_result_arg0;
						_63132_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63132_errors.len() > 0LL)) {
						(_self_.get()._field_errors).append(_63132_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_213d56417_SymbolTable>> &__jule_push_dest = (*(_60738_imp)).get()._field_Package.get()._field_Files; __jule_push_dest.push(_64025_table); };
				}
				_iter_next_1b7ddceab:;
				++it;
				goto _iter_begin_1b7ddceab;
			}
			_iter_end_1b7ddceab:;
		};
	};
	_213c85885_implImportSelections(_self_.ptr(), _60738_imp, _60761_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _213c8738c_importUseDecl(jule::Ptr<_213c8318a_symbolBuilder> _self_, jule::Ptr<_213c59183_UseDecl>* _65438_decl) {
	jule::Ptr<_213cd7c7d_ImportInfo> _65517_imp = _213c85258_buildImport(_self_, _65438_decl);;
	if ((_65517_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66117_ok = _213c85566_checkDuplicateUseDecl(_self_.ptr(), &(_65517_imp));;
	if ((!(_66117_ok))) {
		return nullptr;;
	};
	_66117_ok=_213c8707e_importPackage(_self_, &(_65517_imp), _65438_decl);
	{ jule::Slice<jule::Ptr<_213cd7c7d_ImportInfo>> &__jule_push_dest = _self_.get()._field_table.get()._field_Imports; __jule_push_dest.push(_65517_imp); };
	if (_66117_ok) {
		_213cd50cc_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._213cd4e89_Imported(_self_.get()._field_importer, _65517_imp);
		return _65517_imp;;
	};
	return nullptr;;
}



inline void _213c87568_importUseDecls(jule::Ptr<_213c8318a_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7de2785:;
		if (it != expr_end) {
			jule::Ptr<_213c59183_UseDecl> _67621_decl = *it;
			{
				_213c8738c_importUseDecl(_self_, &(_67621_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1b7de2785;
				};
			}
			_iter_next_1b7de2785:;
			++it;
			goto _iter_begin_1b7de2785;
		}
		_iter_end_1b7de2785:;
	};
}



inline void _213c877dd_appendNode(_213c8318a_symbolBuilder* _self_, _213c0de18_Node* _68534_node) {
	{
		auto &_match_expr{ (*(_68534_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b7de392e:;
			{
				{ jule::Slice<jule::Ptr<_213cb3a17_Impl>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Impls; __jule_push_dest.push(_213c82b3a_buildImpl((*(_68534_node))._field_Data.cast_ptr<_213c5c8a1_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b7de3ba4:;
			{
				jule::Ptr<_213d87adb_TypeAlias> _69021_ta = _213c7e32e_buildTypeAlias((*(_68534_node))._field_Data.cast_ptr<_213c57c97_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeAliases; __jule_push_dest.push(_69021_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b7de3c1a:;
			{
				jule::Ptr<_213c615db_Struct> _69321_srct = _213c7eb8c_buildStruct((*(_68534_node))._field_Data.cast_ptr<_213c5bac0_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_213c615db_Struct>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Structs; __jule_push_dest.push(_69321_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b7de3c81:;
			{
				jule::Ptr<_213c76a0d_Fn> _69621_f = _213c807e7_buildFunc((*(_68534_node))._field_Data.cast_ptr<_213c53457_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_213c76a0d_Fn>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Funcs; __jule_push_dest.push(_69621_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b7de3ce7:;
			{
				jule::Ptr<_213c88b63_Trait> _69921_t = _213c810cd_buildTrait((*(_68534_node))._field_Data.cast_ptr<_213c5c296_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_213c88b63_Trait>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Traits; __jule_push_dest.push(_69921_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b7de4556:;
			{
				jule::Ptr<_213d11988_Var> _70221_v = _213c825eb_buildVar((*(_68534_node))._field_Data.cast_ptr<_213c54436_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_70221_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b7de45bc:;
			{
				jule::Ptr<_213c8b3e6_Enum> _70521_e = _213c81a6d_buildEnum((*(_68534_node))._field_Data.cast_ptr<_213c5a12e_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_213c8b3e6_Enum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Enums; __jule_push_dest.push(_70521_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1b7de4633:;
			{
				jule::Ptr<_213c8c9e1_TypeEnum> _70821_e = _213c82354_buildTypeEnum((*(_68534_node))._field_Data.cast_ptr<_213c5b00e_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_213c8c9e1_TypeEnum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeEnums; __jule_push_dest.push(_70821_e); };
			}
		}
		else {
			_case_begin_1b7de3b3d:;
			{
				_213c839b5_pushErr(_self_, &((*(_68534_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b7de3ad8:;
	};
}



inline void _213c879b9_appendNodes(_213c8318a_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7deb30a:;
		if (it != expr_end) {
			_213c0de18_Node _71621_node = *it;
			{
				_213c877dd_appendNode(_self_, &(_71621_node));
			}
			_iter_next_1b7deb30a:;
			++it;
			goto _iter_begin_1b7deb30a;
		}
		_iter_end_1b7deb30a:;
	};
}



inline void _213c87c3e_pushDirectivePass(_213c8318a_symbolBuilder* _self_, jule::Ptr<_213c0e314_Directive>* _72141_d) {
	if (((*(_72141_d)).get()._field_Args.len() == 0LL)) {
		_213c839b5_pushErr(_self_, &((*(_72141_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_72141_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_2114c1b73_Token> _72617_arg = (*(_72141_d)).get()._field_Args[1LL];;
		_213c839b5_pushErr(_self_, &(_72617_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_72141_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_2114c1b73_Token> _73013_arg = (*(_72141_d)).get()._field_Args[0LL];;
	if ((_73013_arg.get()._field_Id != static_cast<jule::U32>(4LLU))) {
		_213c839b5_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_73013_arg.get()._field_Kind[0LL] != '\"')) {
		_213c839b5_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_213c7d949_Pass> &__jule_push_dest = (*(_self_))._field_table.get()._field_Passes; __jule_push_dest.push(_213c7d949_Pass{._field_Token=(*(_72141_d)).get()._field_Tag, ._field_Text=_73013_arg.get()._field_Kind.slice(1LL, (_73013_arg.get()._field_Kind.len() - 1LL))}); };
}



inline void _213c87e1a_appendTopDirectives(_213c8318a_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e01651:;
		if (it != expr_end) {
			jule::Ptr<_213c0e314_Directive> _74821_d = *it;
			{
				{
					auto &_match_expr{ _74821_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1b7e02ed2:;
						{
							_213c87c3e_pushDirectivePass(_self_, &(_74821_d));
						}
					}
					_match_end_1b7e02e5a:;
				};
			}
			_iter_next_1b7e01651:;
			++it;
			goto _iter_begin_1b7e01651;
		}
		_iter_end_1b7e01651:;
	};
}



inline void _213c880e6_build(jule::Ptr<_213c8318a_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_213d56417_SymbolTable>(_213d56417_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_213c87e1a_appendTopDirectives(_self_.ptr());
	_213c87568_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_213c879b9_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213c8318a_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _213c8901a_Str(_213c88b63_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _213c89328_Equal(jule::Ptr<_213c88b63_Trait> _self_, jule::Ptr<_213d88834_TypeKind> _2521_other) {
	jule::Ptr<_213c88b63_Trait> _2613_trt = _213d8c717_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Bool _213c89702_IsBuiltin(_213c88b63_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_213c76a0d_Fn> _213c89a10_FindMethod(_213c88b63_Trait* _self_, jule::Str _3929_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e068cb:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _4021_f = *it;
			{
				if ((_4021_f.get()._field_Ident == _3929_ident)) {
					return _4021_f;;
				};
			}
			_iter_next_1b7e068cb:;
			++it;
			goto _iter_begin_1b7e068cb;
		}
		_iter_end_1b7e068cb:;
	};
	return _213c8a12b_findMethodInherit(_self_, &(_3929_ident));;
}



inline jule::Ptr<_213c76a0d_Fn> _213c8a12b_findMethodInherit(_213c88b63_Trait* _self_, jule::Str* _6037_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e09082:;
		if (it != expr_end) {
			jule::Ptr<_213d906d7_TypeSymbol> _6121_i = *it;
			{
				if ((_6121_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1b7e09082;
				};
				jule::Ptr<_213c88b63_Trait> _6521_t = _213d8c717_Trait(_6121_i.get()._field_Kind.ptr());;
				if ((_6521_t != nullptr)) {
					jule::Ptr<_213c76a0d_Fn> _6725_f2 = _213c89a10_FindMethod(_6521_t.ptr(), (*(_6037_ident)));;
					if ((_6725_f2 != nullptr)) {
						return _6725_f2;;
					};
				};
			}
			_iter_next_1b7e09082:;
			++it;
			goto _iter_begin_1b7e09082;
		}
		_iter_end_1b7e09082:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _213c88b63_Trait _Src) {
	_Stream << _213c8901a_Str(&_Src);
	return _Stream;
}



inline jule::Bool _213c8ac97_AutoExpr(_213c8a901_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _213c8a901_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _213c8b759_Str(_213c8b3e6_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _213c8ba67_Equal(jule::Ptr<_213c8b3e6_Enum> _self_, jule::Ptr<_213d88834_TypeKind> _3821_other) {
	jule::Ptr<_213c8b3e6_Enum> _3913_enm = _213d8b78d_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_213c8a901_EnumItem> _213c8be63_FindItem(_213c8b3e6_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e0ca14:;
		if (it != expr_end) {
			jule::Ptr<_213c8a901_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1b7e0ca14:;
			++it;
			goto _iter_begin_1b7e0ca14;
		}
		_iter_end_1b7e0ca14:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _213c8b3e6_Enum _Src) {
	_Stream << _213c8b759_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213c8c45d_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _213c8cd21_Str(_213c8c9e1_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _213c8d12e_Equal(jule::Ptr<_213c8c9e1_TypeEnum> _self_, jule::Ptr<_213d88834_TypeKind> _8021_other) {
	jule::Ptr<_213c8c9e1_TypeEnum> _8113_tenm = _213d8ba02_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_213c8c45d_TypeEnumItem> _213c8d52a_FindItem(_213c8c9e1_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e0ead2:;
		if (it != expr_end) {
			jule::Ptr<_213c8c45d_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1b7e0ead2:;
			++it;
			goto _iter_begin_1b7e0ead2;
		}
		_iter_end_1b7e0ead2:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _213c8c9e1_TypeEnum _Src) {
	_Stream << _213c8cd21_Str(&_Src);
	return _Stream;
}



inline jule::Str _213c8eeee_Str(_213c8eb47_comptimeRange* _self_) {
	return jule::Str("comptimeRange", 13);;
}



inline jule::Bool _213c9030c_Equal(jule::Ptr<_213c8eb47_comptimeRange> _self_, jule::Ptr<_213d88834_TypeKind> _2521_other) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _213c8eb47_comptimeRange _Src) {
	_Stream << _213c8eeee_Str(&_Src);
	return _Stream;
}



inline jule::Str _213c909a0_Str(_213c9063c_comptimeStructField* _self_) {
	return jule::Str("comptimeStructField", 19);;
}



inline jule::Bool _213c90cad_Equal(jule::Ptr<_213c9063c_comptimeStructField> _self_, jule::Ptr<_213d88834_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_213d5ae22_Data> _213c91286__Name(jule::Ptr<_213c9063c_comptimeStructField> _self_, jule::Ptr<_213d5c990_Eval>* _3926_e, jule::Ptr<_213c49dbb_FnCallExpr>* _3941_fc) {
	if (((*(_3941_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_3926_e)).ptr(), (*(_3941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _4417_constant = static__2121a5966_NewStr(_self_.get()._field_field.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Model=jule::Any(_4417_constant, &__jule_any_type19), ._field_Constant=_4417_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213c9163d__Type(jule::Ptr<_213c9063c_comptimeStructField> _self_, jule::Ptr<_213d5c990_Eval>* _5230_e, jule::Ptr<_213c49dbb_FnCallExpr>* _5245_fc) {
	if (((*(_5245_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_5230_e)).ptr(), (*(_5245_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _213caed98_buildComptimeTypeInfoData(&((*(_5230_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind));;
}



inline jule::Ptr<_213d5ae22_Data> _213c919e5__Public(jule::Ptr<_213c9063c_comptimeStructField> _self_, jule::Ptr<_213d5c990_Eval>* _6032_e, jule::Ptr<_213c49dbb_FnCallExpr>* _6047_fc) {
	if (((*(_6047_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_6032_e)).ptr(), (*(_6047_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _6517_constant = static__2121a56be_NewBool(_self_.get()._field_field.get()._field_Decl.get()._field_Public);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_6517_constant, &__jule_any_type19), ._field_Constant=_6517_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213c91d03_subIdent(jule::Ptr<_213c9063c_comptimeStructField> _self_, jule::Str _7328_ident) {
	{
		auto &_match_expr{ _7328_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b7e1a46c:;
			{
				jule::Ptr<_213c796ae_FnIns> _7621_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _7733_e, jule::Ptr<_213c49dbb_FnCallExpr>* _7748_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213c91286__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_7621_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1b7e1a4d3:;
			{
				jule::Ptr<_213c796ae_FnIns> _8321_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _8433_e, jule::Ptr<_213c49dbb_FnCallExpr>* _8448_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213c919e5__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_8321_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1b7e1a291:;
			{
				jule::Ptr<_213c796ae_FnIns> _9021_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _9133_e, jule::Ptr<_213c49dbb_FnCallExpr>* _9148_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213c9163d__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_9021_method));;
			}
		}
		else {
			_case_begin_1b7e19d51:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7e19c30:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213c9063c_comptimeStructField _Src) {
	_Stream << _213c909a0_Str(&_Src);
	return _Stream;
}



inline jule::Str _213c924da_Str(_213c92166_comptimeStructFields* _self_) {
	return jule::Str("comptimeStructFields", 20);;
}



inline jule::Bool _213c927e8_Equal(jule::Ptr<_213c92166_comptimeStructFields> _self_, jule::Ptr<_213d88834_TypeKind> _10921_other) {
	return false;;
}



inline void _213c92c27_ready(_213c92166_comptimeStructFields* _self_, jule::Ptr<_213d11988_Var>* _11329_keyA, jule::Ptr<_213d11988_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*(_11329_keyA)).get()._field_Constant=true;
		(*(_11329_keyA)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		(*(_11329_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_11329_keyA)).get()._field_Kind=_213e55a22_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*(_11346_keyB)).get()._field_Constant=true;
		(*(_11346_keyB)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		(*(_11346_keyB)).get()._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213c9063c_comptimeStructField>(), 6)})});
	};
}



inline void _213c930e0_step(_213c92166_comptimeStructFields* _self_, jule::I32 _13523_i, jule::Ptr<_213d11988_Var>* _13536_keyA, jule::Ptr<_213d11988_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		_213d8d42c_comptimeStructField((*(_13553_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I32 _213c93354_len(_213c92166_comptimeStructFields* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _213c92166_comptimeStructFields _Src) {
	_Stream << _213c924da_Str(&_Src);
	return _Stream;
}



inline jule::Str _213c939a3_Str(_213c93640_comptimeStatic* _self_) {
	return jule::Str("comptimeStatic", 14);;
}



inline jule::Bool _213c93cb1_Equal(jule::Ptr<_213c93640_comptimeStatic> _self_, jule::Ptr<_213d88834_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_213d5ae22_Data> _213c94289__Name(jule::Ptr<_213c93640_comptimeStatic> _self_, jule::Ptr<_213d5c990_Eval>* _16326_e, jule::Ptr<_213c49dbb_FnCallExpr>* _16341_fc) {
	if (((*(_16341_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_16326_e)).ptr(), (*(_16341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _16817_constant = static__2121a5966_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Model=jule::Any(_16817_constant, &__jule_any_type19), ._field_Constant=_16817_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213c94641__Type(jule::Ptr<_213c93640_comptimeStatic> _self_, jule::Ptr<_213d5c990_Eval>* _17630_e, jule::Ptr<_213c49dbb_FnCallExpr>* _17645_fc) {
	if (((*(_17645_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_17630_e)).ptr(), (*(_17645_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _213caed98_buildComptimeTypeInfoData(&((*(_17630_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind.get()._field_Kind));;
}



inline jule::Ptr<_213d5ae22_Data> _213c949e8__Public(jule::Ptr<_213c93640_comptimeStatic> _self_, jule::Ptr<_213d5c990_Eval>* _18432_e, jule::Ptr<_213c49dbb_FnCallExpr>* _18447_fc) {
	if (((*(_18447_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_18432_e)).ptr(), (*(_18447_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _18917_constant = static__2121a56be_NewBool(_self_.get()._field_field.get()._field_Public);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_18917_constant, &__jule_any_type19), ._field_Constant=_18917_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213c94d06_subIdent(jule::Ptr<_213c93640_comptimeStatic> _self_, jule::Str _19728_ident) {
	{
		auto &_match_expr{ _19728_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b7e2d0c8:;
			{
				jule::Ptr<_213c796ae_FnIns> _20021_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _20133_e, jule::Ptr<_213c49dbb_FnCallExpr>* _20148_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213c94289__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_20021_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1b7e2d13e:;
			{
				jule::Ptr<_213c796ae_FnIns> _20721_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _20833_e, jule::Ptr<_213c49dbb_FnCallExpr>* _20848_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213c949e8__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_20721_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1b7e2cdec:;
			{
				jule::Ptr<_213c796ae_FnIns> _21421_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _21533_e, jule::Ptr<_213c49dbb_FnCallExpr>* _21548_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213c94641__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_21421_method));;
			}
		}
		else {
			_case_begin_1b7e2c9ac:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7e2c902:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213c93640_comptimeStatic _Src) {
	_Stream << _213c939a3_Str(&_Src);
	return _Stream;
}



inline jule::Str _213c9a3c2_Str(_213c9a05e_comptimeStatics* _self_) {
	return jule::Str("comptimeStatics", 15);;
}



inline jule::Bool _213c9a6d0_Equal(jule::Ptr<_213c9a05e_comptimeStatics> _self_, jule::Ptr<_213d88834_TypeKind> _23321_other) {
	return false;;
}



inline void _213c9aa87_ready(_213c9a05e_comptimeStatics* _self_, jule::Ptr<_213d11988_Var>* _23729_keyA, jule::Ptr<_213d11988_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*(_23729_keyA)).get()._field_Constant=true;
		(*(_23729_keyA)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		(*(_23729_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_23729_keyA)).get()._field_Kind=_213e55a22_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*(_23746_keyB)).get()._field_Constant=true;
		(*(_23746_keyB)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		(*(_23746_keyB)).get()._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213c93640_comptimeStatic>(), 8)})});
	};
}



inline void _213c9ae50_step(_213c9a05e_comptimeStatics* _self_, jule::I32 _25923_i, jule::Ptr<_213d11988_Var>* _25936_keyA, jule::Ptr<_213d11988_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		_213d8eae3_comptimeStatic((*(_25953_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I32 _213c9b1b4_len(_213c9a05e_comptimeStatics* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _213c9a05e_comptimeStatics _Src) {
	_Stream << _213c9a3c2_Str(&_Src);
	return _Stream;
}



inline jule::Str _213c9b813_Str(_213c9b4a0_comptimeEnumField* _self_) {
	return jule::Str("comptimeEnumField", 17);;
}



inline jule::Bool _213c9bb21_Equal(jule::Ptr<_213c9b4a0_comptimeEnumField> _self_, jule::Ptr<_213d88834_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_213d5ae22_Data> _213c9c0c7__Name(jule::Ptr<_213c9b4a0_comptimeEnumField> _self_, jule::Ptr<_213d5c990_Eval>* _28726_e, jule::Ptr<_213c49dbb_FnCallExpr>* _28741_fc) {
	if (((*(_28741_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_28726_e)).ptr(), (*(_28741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _29217_constant = static__2121a5966_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Model=jule::Any(_29217_constant, &__jule_any_type19), ._field_Constant=_29217_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213c9c3d5_subIdent(jule::Ptr<_213c9b4a0_comptimeEnumField> _self_, jule::Str _30028_ident) {
	{
		auto &_match_expr{ _30028_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b7e3b8de:;
			{
				jule::Ptr<_213c796ae_FnIns> _30321_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _30433_e, jule::Ptr<_213c49dbb_FnCallExpr>* _30448_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213c9c0c7__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_30321_method));;
			}
		}
		else {
			_case_begin_1b7e3ba10:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7e3b955:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213c9b4a0_comptimeEnumField _Src) {
	_Stream << _213c9b813_Str(&_Src);
	return _Stream;
}



inline jule::Str _213c9cb44_Str(_213c9c6c1_comptimeEnumFields* _self_) {
	return jule::Str("comptimeEnumFields", 18);;
}



inline jule::Bool _213c9ce52_Equal(jule::Ptr<_213c9c6c1_comptimeEnumFields> _self_, jule::Ptr<_213d88834_TypeKind> _32221_other) {
	return false;;
}



inline void _213c9d309_ready(_213c9c6c1_comptimeEnumFields* _self_, jule::Ptr<_213d11988_Var>* _32629_keyA, jule::Ptr<_213d11988_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*(_32629_keyA)).get()._field_Constant=true;
		(*(_32629_keyA)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		(*(_32629_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_32629_keyA)).get()._field_Kind=_213e55a22_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*(_32646_keyB)).get()._field_Constant=true;
		(*(_32646_keyB)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		(*(_32646_keyB)).get()._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213c9b4a0_comptimeEnumField>(), 10)})});
	};
}



inline void _213c9d6c2_step(_213c9c6c1_comptimeEnumFields* _self_, jule::I32 _34823_i, jule::Ptr<_213d11988_Var>* _34836_keyA, jule::Ptr<_213d11988_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		_213d8d905_comptimeEnumField((*(_34853_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I32 _213c9d936_len(_213c9c6c1_comptimeEnumFields* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _213c9c6c1_comptimeEnumFields _Src) {
	_Stream << _213c9cb44_Str(&_Src);
	return _Stream;
}



inline jule::Str _213c9e085_Str(_213c9dc22_comptimeParam* _self_) {
	return jule::Str("comptimeParam", 13);;
}



inline jule::Bool _213c9e393_Equal(jule::Ptr<_213c9dc22_comptimeParam> _self_, jule::Ptr<_213d88834_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_213d5ae22_Data> _213c9e87c__Name(jule::Ptr<_213c9dc22_comptimeParam> _self_, jule::Ptr<_213d5c990_Eval>* _37626_e, jule::Ptr<_213c49dbb_FnCallExpr>* _37641_fc) {
	if (((*(_37641_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_37626_e)).ptr(), (*(_37641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _38117_constant = static__2121a5966_NewStr(_self_.get()._field_param.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Model=jule::Any(_38117_constant, &__jule_any_type19), ._field_Constant=_38117_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213c9ec34__Type(jule::Ptr<_213c9dc22_comptimeParam> _self_, jule::Ptr<_213d5c990_Eval>* _38930_e, jule::Ptr<_213c49dbb_FnCallExpr>* _38945_fc) {
	if (((*(_38945_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_38930_e)).ptr(), (*(_38945_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _213caed98_buildComptimeTypeInfoData(&((*(_38930_e)).get()._field_s), &(_self_.get()._field_param.get()._field_Kind));;
}



inline jule::Ptr<_213d5ae22_Data> _213ca00db__Variadic(jule::Ptr<_213c9dc22_comptimeParam> _self_, jule::Ptr<_213d5c990_Eval>* _39734_e, jule::Ptr<_213c49dbb_FnCallExpr>* _39749_fc) {
	if (((*(_39749_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_39734_e)).ptr(), (*(_39749_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Variadic", 8), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _40217_constant = static__2121a56be_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Variadic);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_40217_constant, &__jule_any_type19), ._field_Constant=_40217_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213ca0493__Reference(jule::Ptr<_213c9dc22_comptimeParam> _self_, jule::Ptr<_213d5c990_Eval>* _41035_e, jule::Ptr<_213c49dbb_FnCallExpr>* _41050_fc) {
	if (((*(_41050_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_41035_e)).ptr(), (*(_41050_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Reference", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _41517_constant = static__2121a56be_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Reference);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_41517_constant, &__jule_any_type19), ._field_Constant=_41517_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213ca07a1_subIdent(jule::Ptr<_213c9dc22_comptimeParam> _self_, jule::Str _42328_ident) {
	{
		auto &_match_expr{ _42328_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b7e4d390:;
			{
				jule::Ptr<_213c796ae_FnIns> _42621_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _42733_e, jule::Ptr<_213c49dbb_FnCallExpr>* _42748_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213c9e87c__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_42621_method));;
			}
		}
		else if (_match_expr == jule::Str("Variadic", 8)) {
			_case_begin_1b7e4d406:;
			{
				jule::Ptr<_213c796ae_FnIns> _43321_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _43433_e, jule::Ptr<_213c49dbb_FnCallExpr>* _43448_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca00db__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_43321_method));;
			}
		}
		else if (_match_expr == jule::Str("Reference", 9)) {
			_case_begin_1b7e4d1b4:;
			{
				jule::Ptr<_213c796ae_FnIns> _44021_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _44133_e, jule::Ptr<_213c49dbb_FnCallExpr>* _44148_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca0493__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_44021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1b7e4d22a:;
			{
				jule::Ptr<_213c796ae_FnIns> _44721_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _44833_e, jule::Ptr<_213c49dbb_FnCallExpr>* _44848_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213c9ec34__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_44721_method));;
			}
		}
		else {
			_case_begin_1b7e4cc74:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7e4cb53:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213c9dc22_comptimeParam _Src) {
	_Stream << _213c9e085_Str(&_Src);
	return _Stream;
}



inline jule::Str _213ca1131_Str(_213ca0cbd_comptimeParams* _self_) {
	return jule::Str("comptimeParams", 14);;
}



inline jule::Bool _213ca143e_Equal(jule::Ptr<_213ca0cbd_comptimeParams> _self_, jule::Ptr<_213d88834_TypeKind> _46621_other) {
	return false;;
}



inline void _213ca186d_ready(_213ca0cbd_comptimeParams* _self_, jule::Ptr<_213d11988_Var>* _47029_keyA, jule::Ptr<_213d11988_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*(_47029_keyA)).get()._field_Constant=true;
		(*(_47029_keyA)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		(*(_47029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_47029_keyA)).get()._field_Kind=_213e55a22_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*(_47046_keyB)).get()._field_Constant=true;
		(*(_47046_keyB)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		(*(_47046_keyB)).get()._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213c9dc22_comptimeParam>(), 12)})});
	};
}



inline void _213ca1c36_step(_213ca0cbd_comptimeParams* _self_, jule::I32 _49223_i, jule::Ptr<_213d11988_Var>* _49236_keyA, jule::Ptr<_213d11988_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		_213d8ddcd_comptimeParam((*(_49253_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I32 _213ca1e9a_len(_213ca0cbd_comptimeParams* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_params.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _213ca0cbd_comptimeParams _Src) {
	_Stream << _213ca1131_Str(&_Src);
	return _Stream;
}



inline jule::Str _213ca25e9_Str(_213ca2286_comptimeTypeInfos* _self_) {
	return jule::Str("comptimeTypeInfos", 17);;
}



inline jule::Bool _213ca2907_Equal(jule::Ptr<_213ca2286_comptimeTypeInfos> _self_, jule::Ptr<_213d88834_TypeKind> _51621_other) {
	return false;;
}



inline void _213ca2d36_ready(_213ca2286_comptimeTypeInfos* _self_, jule::Ptr<_213d11988_Var>* _52029_keyA, jule::Ptr<_213d11988_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*(_52029_keyA)).get()._field_Constant=true;
		(*(_52029_keyA)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		(*(_52029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_52029_keyA)).get()._field_Kind=_213e55a22_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*(_52046_keyB)).get()._field_Constant=true;
		(*(_52046_keyB)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		(*(_52046_keyB)).get()._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213ca374e_comptimeTypeInfo>(), 15)})});
	};
}



inline void _213ca31ee_step(_213ca2286_comptimeTypeInfos* _self_, jule::I32 _54223_i, jule::Ptr<_213d11988_Var>* _54236_keyA, jule::Ptr<_213d11988_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*(_54253_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_213d883c2_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I32 _213ca3463_len(_213ca2286_comptimeTypeInfos* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_types.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _213ca2286_comptimeTypeInfos _Src) {
	_Stream << _213ca25e9_Str(&_Src);
	return _Stream;
}



inline jule::Str _213ca3ab2_Str(_213ca374e_comptimeTypeInfo* _self_) {
	return ((jule::Str("comptimeTypeInfo[", 17) + _213d88bdb_Str((*(_self_))._field_base.ptr())) + jule::Str("]", 1));;
}



inline jule::Bool _213ca3dc0_Equal(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d88834_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_213d5ae22_Data> _213ca44b9__Str(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _57025_e, jule::Ptr<_213c49dbb_FnCallExpr>* _57040_fc) {
	if (((*(_57040_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_57025_e)).ptr(), (*(_57040_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Str", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _57517_constant = static__2121a5966_NewStr(_213d88bdb_Str(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Model=jule::Any(_57517_constant, &__jule_any_type19), ._field_Constant=_57517_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213ca4871__Kind(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _58330_e, jule::Ptr<_213c49dbb_FnCallExpr>* _58345_fc) {
	if (((*(_58345_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_58330_e)).ptr(), (*(_58345_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Kind", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213c8b3e6_Enum> _58817_enm = _213cd982e_FindEnum(_213caea35_findComptimePackage(&((*(_58330_e)).get()._field_s)).ptr(), jule::Str("Kind", 4));;
	jule::Ptr<_213c8a901_EnumItem> _58917_item = nullptr;;
	{
		
		if (_213d89aee_Void(_self_.get()._field_base.ptr())) {
			_case_begin_1b70e1006:;
			{
				_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Void", 4));
			}
		}
		else if ((_213d8c4a3_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70e1127:;
			{
				_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Struct", 6));
			}
		}
		else if ((_213d8c717_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70e0d2a:;
			{
				_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Trait", 5));
			}
		}
		else if ((_213d8b529_Ptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70e0d91:;
			{
				if (_213d98822_IsUnsafe(_213d8b529_Ptr(_self_.get()._field_base.ptr()).ptr())) {
					_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("UnsafePtr", 9));
				} else {
					_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Ptr", 3));
				};
			}
		}
		else if ((_213d8b2b5_Sptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70e1699:;
			{
				_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Ref", 3));
			}
		}
		else if ((_213d8b78d_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70e1710:;
			{
				_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Enum", 4));
			}
		}
		else if ((_213d8c97b_Map(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70e1776:;
			{
				_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Map", 3));
			}
		}
		else if ((_213d8beca_Slc(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70e17dc:;
			{
				_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Slice", 5));
			}
		}
		else if ((_213d8bc66_Arr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70e1853:;
			{
				_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Array", 5));
			}
		}
		else if ((_213d8c23e_Fn(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70e18b9:;
			{
				_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Func", 4));
			}
		}
		else if ((_213d8cbe0_Tup(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70e1930:;
			{
				_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Tuple", 5));
			}
		}
		else if ((_213d8b051_Prim(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70e1996:;
			{
				jule::Ptr<_213d91089_Prim> _61817_prim = _213d8b051_Prim(_self_.get()._field_base.ptr());;
				{
					
					if (_213d944ee_IsAny(_61817_prim.ptr())) {
						_case_begin_1b70e9a6a:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Any", 3));
						}
					}
					else if (_213d94026_IsBool(_61817_prim.ptr())) {
						_case_begin_1b70e9c57:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Bool", 4));
						}
					}
					else if (_213d9428a_IsStr(_61817_prim.ptr())) {
						_case_begin_1b70e9d78:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Str", 3));
						}
					}
					else if (_213d93311_IsF32(_61817_prim.ptr())) {
						_case_begin_1b70ea3ea:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("F32", 3));
						}
					}
					else if (_213d93575_IsF64(_61817_prim.ptr())) {
						_case_begin_1b70ea461:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("F64", 3));
						}
					}
					else if (_213d91dae_IsI8(_61817_prim.ptr())) {
						_case_begin_1b70ea4c7:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("I8", 2));
						}
					}
					else if (_213d92123_IsI16(_61817_prim.ptr())) {
						_case_begin_1b70ea53d:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("I16", 3));
						}
					}
					else if (_213d92387_IsI32(_61817_prim.ptr())) {
						_case_begin_1b70ea5a4:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("I32", 3));
						}
					}
					else if (_213d925eb_IsI64(_61817_prim.ptr())) {
						_case_begin_1b70ea61a:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("I64", 3));
						}
					}
					else if (_213d92860_IsU8(_61817_prim.ptr())) {
						_case_begin_1b70ea681:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("U8", 2));
						}
					}
					else if (_213d92ac4_IsU16(_61817_prim.ptr())) {
						_case_begin_1b70ea6e7:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("U16", 3));
						}
					}
					else if (_213d92d38_IsU32(_61817_prim.ptr())) {
						_case_begin_1b70ea75d:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("U32", 3));
						}
					}
					else if (_213d9309c_IsU64(_61817_prim.ptr())) {
						_case_begin_1b70ea7c4:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("U64", 3));
						}
					}
					else if (_213d937d9_IsInt(_61817_prim.ptr())) {
						_case_begin_1b70ea83a:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Int", 3));
						}
					}
					else if (_213d93a4d_IsUint(_61817_prim.ptr())) {
						_case_begin_1b70ea8a1:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Uint", 4));
						}
					}
					else if (_213d93cb2_IsUintptr(_61817_prim.ptr())) {
						_case_begin_1b70ea928:;
						{
							_58917_item=_213c8be63_FindItem(_58817_enm.ptr(), jule::Str("Uintptr", 7));
						}
					}
					else {
						_case_begin_1b70e98b1:;
						{
							jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _213d88bdb_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_1b70e984a:;
				};
			}
		}
		else {
			_case_begin_1b70e0bc6:;
			{
				jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _213d88bdb_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_1b70e0830:;
	};
	return _213d85e4c_evalEnumStatic(&(_58817_enm), &(_58917_item));;
}



inline jule::Ptr<_213d5ae22_Data> _213ca4c28__Bits(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _66130_e, jule::Ptr<_213c49dbb_FnCallExpr>* _66145_fc) {
	if (((*(_66145_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213d91089_Prim> _66613_prim = _213d8b051_Prim(_self_.get()._field_base.ptr());;
	if ((_66613_prim == nullptr)) {
		_213d5ce9b_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _67113_n = _212197381_BitsizeOf(_66613_prim.get()._field_Kind);;
	if ((_67113_n == -1LL)) {
		_213d5ce9b_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _67617_constant = static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67113_n)));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Model=jule::Any(_67617_constant, &__jule_any_type19), ._field_Constant=_67617_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213ca50d0__Elem(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _68430_e, jule::Ptr<_213c49dbb_FnCallExpr>* _68445_fc) {
	if (((*(_68445_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213d97d4e_Ptr> _68917_ptr = _213d8b529_Ptr(_self_.get()._field_base.ptr());;
	if ((_68917_ptr != nullptr)) {
		if (_213d98822_IsUnsafe(_68917_ptr.ptr())) {
			_213d5ce9b_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		return _213caed98_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_68917_ptr.get()._field_Elem));;
	};
	jule::Ptr<_213d947da_Sptr> _69717_sptr = _213d8b2b5_Sptr(_self_.get()._field_base.ptr());;
	if ((_69717_sptr != nullptr)) {
		return _213caed98_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_69717_sptr.get()._field_Elem));;
	};
	jule::Ptr<_213d95247_Slc> _70117_slice = _213d8beca_Slc(_self_.get()._field_base.ptr());;
	if ((_70117_slice != nullptr)) {
		return _213caed98_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70117_slice.get()._field_Elem));;
	};
	jule::Ptr<_213d973e2_Arr> _70517_array = _213d8bc66_Arr(_self_.get()._field_base.ptr());;
	if ((_70517_array != nullptr)) {
		return _213caed98_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70517_array.get()._field_Elem));;
	};
	jule::Ptr<_213c8b3e6_Enum> _70917_enm = _213d8b78d_Enum(_self_.get()._field_base.ptr());;
	if ((_70917_enm != nullptr)) {
		return _213caed98_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70917_enm.get()._field_Kind.get()._field_Kind));;
	};
	_213d5ce9b_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_213d5ae22_Data> _213ca5487__Size(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _71730_e, jule::Ptr<_213c49dbb_FnCallExpr>* _71745_fc) {
	if (((*(_71745_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213d973e2_Arr> _72217_arr = _213d8bc66_Arr(_self_.get()._field_base.ptr());;
	if ((_72217_arr == nullptr)) {
		_213d5ce9b_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _72717_constant = static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_72217_arr.get()._field_N)));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e53734_primInt, ._field_Model=jule::Any(_72717_constant, &__jule_any_type19), ._field_Constant=_72717_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213ca583e__Key(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _73529_e, jule::Ptr<_213c49dbb_FnCallExpr>* _73544_fc) {
	if (((*(_73544_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213d967ed_Map> _74017_m = _213d8c97b_Map(_self_.get()._field_base.ptr());;
	if ((_74017_m == nullptr)) {
		_213d5ce9b_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	return _213caed98_buildComptimeTypeInfoData(&((*(_73529_e)).get()._field_s), &(_74017_m.get()._field_Key));;
}



inline jule::Ptr<_213d5ae22_Data> _213ca5be6__Value(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _74831_e, jule::Ptr<_213c49dbb_FnCallExpr>* _74846_fc) {
	if (((*(_74846_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213d967ed_Map> _75317_m = _213d8c97b_Map(_self_.get()._field_base.ptr());;
	if ((_75317_m == nullptr)) {
		_213d5ce9b_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	return _213caed98_buildComptimeTypeInfoData(&((*(_74831_e)).get()._field_s), &(_75317_m.get()._field_Val));;
}



inline jule::Ptr<_213d5ae22_Data> _213ca609d__Fields(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _76132_e, jule::Ptr<_213c49dbb_FnCallExpr>* _76147_fc) {
	if (((*(_76147_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213c64402_StructIns> _76617_s = _213d8c4a3_Struct(_self_.get()._field_base.ptr());;
	if ((_76617_s != nullptr)) {
		return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213c92166_comptimeStructFields>(_213c92166_comptimeStructFields{._field_fields=_76617_s.get()._field_Fields}), 7)}), });;
	};
	jule::Ptr<_213c8b3e6_Enum> _77617_enm = _213d8b78d_Enum(_self_.get()._field_base.ptr());;
	if ((_77617_enm != nullptr)) {
		return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213c9c6c1_comptimeEnumFields>(_213c9c6c1_comptimeEnumFields{._field_fields=_77617_enm.get()._field_Items}), 11)}), });;
	};
	_213d5ce9b_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_213d5ae22_Data> _213ca6455__Statics(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _79033_e, jule::Ptr<_213c49dbb_FnCallExpr>* _79048_fc) {
	if (((*(_79048_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Statics", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213c64402_StructIns> _79517_s = _213d8c4a3_Struct(_self_.get()._field_base.ptr());;
	if ((_79517_s == nullptr)) {
		_213d5ce9b_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213c9a05e_comptimeStatics>(_213c9a05e_comptimeStatics{._field_fields=_79517_s.get()._field_Statics}), 9)}), });;
}



inline jule::Ptr<_213d5ae22_Data> _213ca680c__Public(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _80932_e, jule::Ptr<_213c49dbb_FnCallExpr>* _80947_fc) {
	if (((*(_80947_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Bool _81417_public = false;;
	{
		
		if ((_213d8c4a3_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b7122114:;
			{
				_81417_public=_213d8c4a3_Struct(_self_.get()._field_base.ptr()).get()._field_Decl.get()._field_Public;
			}
		}
		else if ((_213d8c717_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b712217a:;
			{
				_81417_public=_213d8c717_Trait(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_213d8b78d_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b7121e8d:;
			{
				_81417_public=_213d8b78d_Enum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_213d8ba02_TypeEnum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b7122004:;
			{
				_81417_public=_213d8ba02_TypeEnum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else {
			_case_begin_1b71211bd:;
			{
				_213d5ce9b_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b71210ad:;
	};
	jule::Ptr<_2121a4c51_Const> _82817_constant = static__2121a56be_NewBool(_81417_public);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_82817_constant, &__jule_any_type19), ._field_Constant=_82817_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213ca6bb4__Binded(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _83632_e, jule::Ptr<_213c49dbb_FnCallExpr>* _83647_fc) {
	if (((*(_83647_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_83632_e)).ptr(), (*(_83647_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Binded", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _84117_constant = static__2121a56be_NewBool(_213d89626_Binded(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_84117_constant, &__jule_any_type19), ._field_Constant=_84117_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213ca706b__Ordered(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _84929_e, jule::Ptr<_213c49dbb_FnCallExpr>* _84944_fc) {
	if (((*(_84944_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_84929_e)).ptr(), (*(_84944_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Ordered", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _85417_constant = static__2121a56be_NewBool(_213d8a33b_Ordered(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Model=jule::Any(_85417_constant, &__jule_any_type19), ._field_Constant=_85417_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213ca7423__Comparable(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _86232_e, jule::Ptr<_213c49dbb_FnCallExpr>* _86247_fc) {
	if (((*(_86247_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_86232_e)).ptr(), (*(_86247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Comparable", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _86717_constant = static__2121a56be_NewBool(_213d89d63_Comparable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Model=jule::Any(_86717_constant, &__jule_any_type19), ._field_Constant=_86717_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213ca77ca__Mutable(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _87529_e, jule::Ptr<_213c49dbb_FnCallExpr>* _87544_fc) {
	if (((*(_87544_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_87529_e)).ptr(), (*(_87544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _88017_constant = static__2121a56be_NewBool(_213d8a0c7_Mutable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_88017_constant, &__jule_any_type19), ._field_Constant=_88017_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213ca7b82__Types(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _88831_e, jule::Ptr<_213c49dbb_FnCallExpr>* _88846_fc) {
	if (((*(_88846_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213d95d4c_Tuple> _89317_tup = _213d8cbe0_Tup(_self_.get()._field_base.ptr());;
	if ((_89317_tup == nullptr)) {
		_213d5ce9b_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213ca2286_comptimeTypeInfos> _89817_infos = jule::new_ptr<_213ca2286_comptimeTypeInfos>(_213ca2286_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_213ca374e_comptimeTypeInfo>>::alloc(0LL, _89317_tup.get()._field_Types.len())});;
	{
		auto expr = &(_89317_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7131e15:;
		if (it != expr_end) {
			jule::Ptr<_213d88834_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_213ca374e_comptimeTypeInfo>> &__jule_push_dest = _89817_infos.get()._field_types; __jule_push_dest.push(_213ce0978_pushComptimeTypeInfo((*(_88831_e)).get()._field_s.get()._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_1b7131e15:;
			++it;
			goto _iter_begin_1b7131e15;
		}
		_iter_end_1b7131e15:;
	};
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_89817_infos, 14)}), });;
}



inline jule::Ptr<_213d5ae22_Data> _213ca8039__Exceptional(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _91137_e, jule::Ptr<_213c49dbb_FnCallExpr>* _91152_fc) {
	if (((*(_91152_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213c796ae_FnIns> _91617_f = _213d8c23e_Fn(_self_.get()._field_base.ptr());;
	if ((_91617_f == nullptr)) {
		_213d5ce9b_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _92117_constant = static__2121a56be_NewBool(((_91617_f.get()._field_Decl != nullptr) && _91617_f.get()._field_Decl.get()._field_Exceptional));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_92117_constant, &__jule_any_type19), ._field_Constant=_92117_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213ca83e1__CanNil(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _92932_e, jule::Ptr<_213c49dbb_FnCallExpr>* _92947_fc) {
	if (((*(_92947_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_92932_e)).ptr(), (*(_92947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("CanNil", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _93417_constant = static__2121a56be_NewBool(_213d8a5a0_NilCompatible(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_93417_constant, &__jule_any_type19), ._field_Constant=_93417_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213ca8798__Result(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _94232_e, jule::Ptr<_213c49dbb_FnCallExpr>* _94247_fc) {
	if (((*(_94247_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213c796ae_FnIns> _94717_f = _213d8c23e_Fn(_self_.get()._field_base.ptr());;
	if ((_94717_f == nullptr)) {
		_213d5ce9b_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	if ((_94717_f.get()._field_Result == nullptr)) {
		return _213caed98_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_213e52502_primVoid));;
	};
	return _213caed98_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_94717_f.get()._field_Result));;
}



inline jule::Ptr<_213d5ae22_Data> _213ca8b50__Params(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Ptr<_213d5c990_Eval>* _95832_e, jule::Ptr<_213c49dbb_FnCallExpr>* _95847_fc) {
	if (((*(_95847_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213c796ae_FnIns> _96317_f = _213d8c23e_Fn(_self_.get()._field_base.ptr());;
	if ((_96317_f == nullptr)) {
		_213d5ce9b_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213ca0cbd_comptimeParams>(_213ca0cbd_comptimeParams{._field_params=_96317_f.get()._field_Params}), 13)}), });;
}



inline jule::Ptr<_213d5ae22_Data> _213ca8e5d_subIdent(jule::Ptr<_213ca374e_comptimeTypeInfo> _self_, jule::Str _97528_ident) {
	{
		auto &_match_expr{ _97528_ident };
		
		if (_match_expr == jule::Str("Str", 3)) {
			_case_begin_1b71402db:;
			{
				jule::Ptr<_213c796ae_FnIns> _97821_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _97933_e, jule::Ptr<_213c49dbb_FnCallExpr>* _97948_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca44b9__Str(_self_, _97933_e, _97948_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_97821_method));;
			}
		}
		else if (_match_expr == jule::Str("Bits", 4)) {
			_case_begin_1b7140a4a:;
			{
				jule::Ptr<_213c796ae_FnIns> _98521_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _98633_e, jule::Ptr<_213c49dbb_FnCallExpr>* _98648_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca4c28__Bits(_self_, _98633_e, _98648_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_98521_method));;
			}
		}
		else if (_match_expr == jule::Str("Elem", 4)) {
			_case_begin_1b7140ab1:;
			{
				jule::Ptr<_213c796ae_FnIns> _99221_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _99333_e, jule::Ptr<_213c49dbb_FnCallExpr>* _99348_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca50d0__Elem(_self_, _99333_e, _99348_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_99221_method));;
			}
		}
		else if (_match_expr == jule::Str("Size", 4)) {
			_case_begin_1b7140572:;
			{
				jule::Ptr<_213c796ae_FnIns> _99921_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _100033_e, jule::Ptr<_213c49dbb_FnCallExpr>* _100048_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca5487__Size(_self_, _100033_e, _100048_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_99921_method));;
			}
		}
		else if (_match_expr == jule::Str("Key", 3)) {
			_case_begin_1b71405d8:;
			{
				jule::Ptr<_213c796ae_FnIns> _100621_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _100733_e, jule::Ptr<_213c49dbb_FnCallExpr>* _100748_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca583e__Key(_self_, _100733_e, _100748_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_100621_method));;
			}
		}
		else if (_match_expr == jule::Str("Value", 5)) {
			_case_begin_1b7140660:;
			{
				jule::Ptr<_213c796ae_FnIns> _101321_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _101433_e, jule::Ptr<_213c49dbb_FnCallExpr>* _101448_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca5be6__Value(_self_, _101433_e, _101448_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_101321_method));;
			}
		}
		else if (_match_expr == jule::Str("Fields", 6)) {
			_case_begin_1b71406d7:;
			{
				jule::Ptr<_213c796ae_FnIns> _102021_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _102133_e, jule::Ptr<_213c49dbb_FnCallExpr>* _102148_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca609d__Fields(_self_, _102133_e, _102148_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_102021_method));;
			}
		}
		else if (_match_expr == jule::Str("Statics", 7)) {
			_case_begin_1b7140b38:;
			{
				jule::Ptr<_213c796ae_FnIns> _102721_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _102833_e, jule::Ptr<_213c49dbb_FnCallExpr>* _102848_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca6455__Statics(_self_, _102833_e, _102848_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_102721_method));;
			}
		}
		else if (_match_expr == jule::Str("Params", 6)) {
			_case_begin_1b7140bb0:;
			{
				jule::Ptr<_213c796ae_FnIns> _103421_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _103533_e, jule::Ptr<_213c49dbb_FnCallExpr>* _103548_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca8b50__Params(_self_, _103533_e, _103548_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_103421_method));;
			}
		}
		else if (_match_expr == jule::Str("Types", 5)) {
			_case_begin_1b7140c37:;
			{
				jule::Ptr<_213c796ae_FnIns> _104121_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _104233_e, jule::Ptr<_213c49dbb_FnCallExpr>* _104248_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca7b82__Types(_self_, _104233_e, _104248_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_104121_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1b7140cae:;
			{
				jule::Ptr<_213c796ae_FnIns> _104821_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _104933_e, jule::Ptr<_213c49dbb_FnCallExpr>* _104948_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca680c__Public(_self_, _104933_e, _104948_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_104821_method));;
			}
		}
		else if (_match_expr == jule::Str("Binded", 6)) {
			_case_begin_1b7140d36:;
			{
				jule::Ptr<_213c796ae_FnIns> _105521_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _105633_e, jule::Ptr<_213c49dbb_FnCallExpr>* _105648_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca6bb4__Binded(_self_, _105633_e, _105648_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_105521_method));;
			}
		}
		else if (_match_expr == jule::Str("Ordered", 7)) {
			_case_begin_1b7140dad:;
			{
				jule::Ptr<_213c796ae_FnIns> _106221_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _106333_e, jule::Ptr<_213c49dbb_FnCallExpr>* _106348_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca706b__Ordered(_self_, _106333_e, _106348_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_106221_method));;
			}
		}
		else if (_match_expr == jule::Str("Comparable", 10)) {
			_case_begin_1b7140e35:;
			{
				jule::Ptr<_213c796ae_FnIns> _106921_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _107033_e, jule::Ptr<_213c49dbb_FnCallExpr>* _107048_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca7423__Comparable(_self_, _107033_e, _107048_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_106921_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1b7140eac:;
			{
				jule::Ptr<_213c796ae_FnIns> _107621_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _107733_e, jule::Ptr<_213c49dbb_FnCallExpr>* _107748_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca77ca__Mutable(_self_, _107733_e, _107748_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_107621_method));;
			}
		}
		else if (_match_expr == jule::Str("Exceptional", 11)) {
			_case_begin_1b7141034:;
			{
				jule::Ptr<_213c796ae_FnIns> _108321_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _108433_e, jule::Ptr<_213c49dbb_FnCallExpr>* _108448_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca8039__Exceptional(_self_, _108433_e, _108448_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_108321_method));;
			}
		}
		else if (_match_expr == jule::Str("CanNil", 6)) {
			_case_begin_1b71410ab:;
			{
				jule::Ptr<_213c796ae_FnIns> _109021_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _109133_e, jule::Ptr<_213c49dbb_FnCallExpr>* _109148_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca83e1__CanNil(_self_, _109133_e, _109148_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_109021_method));;
			}
		}
		else if (_match_expr == jule::Str("Result", 6)) {
			_case_begin_1b7141133:;
			{
				jule::Ptr<_213c796ae_FnIns> _109721_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _109833_e, jule::Ptr<_213c49dbb_FnCallExpr>* _109848_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca8798__Result(_self_, _109833_e, _109848_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_109721_method));;
			}
		}
		else if (_match_expr == jule::Str("Kind", 4)) {
			_case_begin_1b71411aa:;
			{
				jule::Ptr<_213c796ae_FnIns> _110421_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _110533_e, jule::Ptr<_213c49dbb_FnCallExpr>* _110548_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca4871__Kind(_self_, _110533_e, _110548_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_110421_method));;
			}
		}
		else {
			_case_begin_1b714042e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7140374:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213ca374e_comptimeTypeInfo _Src) {
	_Stream << _213ca3ab2_Str(&_Src);
	return _Stream;
}



inline jule::Str _213ca95ac_Str(_213ca9249_comptimeValue* _self_) {
	return jule::Str("comptimeValue", 13);;
}



inline jule::Bool _213ca98ba_Equal(jule::Ptr<_213ca9249_comptimeValue> _self_, jule::Ptr<_213d88834_TypeKind> _112321_other) {
	return false;;
}



inline jule::Ptr<_213d5ae22_Data> _213ca9dc6__Unwrap(jule::Ptr<_213ca9249_comptimeValue> _self_, jule::Ptr<_213d5c990_Eval>* _112732_e, jule::Ptr<_213c49dbb_FnCallExpr>* _112747_fc) {
	if (((*(_112747_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_112732_e)).ptr(), (*(_112747_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Unwrap", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return _self_.get()._field_data;;
}



inline jule::Ptr<_213d5ae22_Data> _213caa27d__Type(jule::Ptr<_213ca9249_comptimeValue> _self_, jule::Ptr<_213d5c990_Eval>* _113530_e, jule::Ptr<_213c49dbb_FnCallExpr>* _113545_fc) {
	if (((*(_113545_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_113530_e)).ptr(), (*(_113545_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _213caed98_buildComptimeTypeInfoData(&((*(_113530_e)).get()._field_s), &(_self_.get()._field_data.get()._field_Kind));;
}



inline jule::Ptr<_213d5ae22_Data> _213caa635__Lvalue(jule::Ptr<_213ca9249_comptimeValue> _self_, jule::Ptr<_213d5c990_Eval>* _114332_e, jule::Ptr<_213c49dbb_FnCallExpr>* _114347_fc) {
	if (((*(_114347_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_114332_e)).ptr(), (*(_114347_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Lvalue", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _114817_constant = static__2121a56be_NewBool(_self_.get()._field_data.get()._field_Lvalue);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_114817_constant, &__jule_any_type19), ._field_Constant=_114817_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213caa9dc__Mutable(jule::Ptr<_213ca9249_comptimeValue> _self_, jule::Ptr<_213d5c990_Eval>* _115633_e, jule::Ptr<_213c49dbb_FnCallExpr>* _115648_fc) {
	if (((*(_115648_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_115633_e)).ptr(), (*(_115648_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _116117_constant = static__2121a56be_NewBool(_self_.get()._field_data.get()._field_Mutable);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_116117_constant, &__jule_any_type19), ._field_Constant=_116117_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213caad94__Const(jule::Ptr<_213ca9249_comptimeValue> _self_, jule::Ptr<_213d5c990_Eval>* _116931_e, jule::Ptr<_213c49dbb_FnCallExpr>* _116946_fc) {
	if (((*(_116946_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_116931_e)).ptr(), (*(_116946_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Const", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _117417_constant = static__2121a56be_NewBool(_213d5b791_IsConst(_self_.get()._field_data.ptr()));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_117417_constant, &__jule_any_type19), ._field_Constant=_117417_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213cab24b__Field(jule::Ptr<_213ca9249_comptimeValue> _self_, jule::Ptr<_213d5c990_Eval>* _118231_e, jule::Ptr<_213c49dbb_FnCallExpr>* _118246_fc) {
	if (((*(_118246_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213c64402_StructIns> _118717_s = _213d8c4a3_Struct(_self_.get()._field_data.get()._field_Kind.ptr());;
	if ((_118717_s == nullptr)) {
		_213d5ce9b_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_self_.get()._field_data.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213c45ea5_Expr> _119217_arg = (*(_118246_fc)).get()._field_Args[0LL];;
	jule::Ptr<_213d5ae22_Data> _119317_d = _213d7945c_evalExpr((*(_118231_e)), _119217_arg);;
	if ((_119317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_213d5b791_IsConst(_119317_d.ptr())))) {
		_213d5ce9b_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213d91089_Prim> _120113_prim = _213d8b051_Prim(_119317_d.get()._field_Kind.ptr());;
	if (((_120113_prim == nullptr) || (!(_213d9428a_IsStr(_120113_prim.ptr()))))) {
		_213d5ce9b_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_213d88bdb_Str(_119317_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Str _120613_ident = _2121a6c86_ReadStr(_119317_d.get()._field_Constant.ptr());;
	jule::Ptr<_213c6390c_FieldIns> _120717_f = _213c656ab_FindField(_118717_s.ptr(), _120613_ident);;
	if ((_120717_f == nullptr)) {
		_213d5ce9b_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_118717_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_120613_ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_119317_d=jule::new_ptr<_213d5ae22_Data>((*(_self_.get()._field_data)));
	_119317_d=_213d72a82_evalStructSubIdentField((*(_118231_e)).ptr(), &(_119317_d), &(_118717_s), &(_119217_arg.get()._field_Token), &(_120717_f));
	return _213cb01c8_buildComptimeValue(&(_119317_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213cab559_subIdent(jule::Ptr<_213ca9249_comptimeValue> _self_, jule::Str _121728_ident) {
	{
		auto &_match_expr{ _121728_ident };
		
		if (_match_expr == jule::Str("Unwrap", 6)) {
			_case_begin_1b7179bd8:;
			{
				jule::Ptr<_213c796ae_FnIns> _122021_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _122133_e, jule::Ptr<_213c49dbb_FnCallExpr>* _122148_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213ca9dc6__Unwrap(_self_, _122133_e, _122148_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_122021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1b7179c4e:;
			{
				jule::Ptr<_213c796ae_FnIns> _122721_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _122833_e, jule::Ptr<_213c49dbb_FnCallExpr>* _122848_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213caa27d__Type(_self_, _122833_e, _122848_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_122721_method));;
			}
		}
		else if (_match_expr == jule::Str("Lvalue", 6)) {
			_case_begin_1b7179a1d:;
			{
				jule::Ptr<_213c796ae_FnIns> _123421_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _123533_e, jule::Ptr<_213c49dbb_FnCallExpr>* _123548_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213caa635__Lvalue(_self_, _123533_e, _123548_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_123421_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1b7179a95:;
			{
				jule::Ptr<_213c796ae_FnIns> _124121_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _124233_e, jule::Ptr<_213c49dbb_FnCallExpr>* _124248_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213caa9dc__Mutable(_self_, _124233_e, _124248_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_124121_method));;
			}
		}
		else if (_match_expr == jule::Str("Const", 5)) {
			_case_begin_1b7179b1c:;
			{
				jule::Ptr<_213c796ae_FnIns> _124821_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _124933_e, jule::Ptr<_213c49dbb_FnCallExpr>* _124948_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213caad94__Const(_self_, _124933_e, _124948_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_124821_method));;
			}
		}
		else if (_match_expr == jule::Str("Field", 5)) {
			_case_begin_1b7179732:;
			{
				jule::Ptr<_213c796ae_FnIns> _125521_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _125633_e, jule::Ptr<_213c49dbb_FnCallExpr>* _125648_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213cab24b__Field(_self_, _125633_e, _125648_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_125521_method));;
			}
		}
		else {
			_case_begin_1b71795cd:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7179534:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213ca9249_comptimeValue _Src) {
	_Stream << _213ca95ac_Str(&_Src);
	return _Stream;
}



inline jule::Str _213cabba8_Str(_213cab845_comptimeFiles* _self_) {
	return jule::Str("comptimeFiles", 13);;
}



inline jule::Bool _213cabeb6_Equal(jule::Ptr<_213cab845_comptimeFiles> _self_, jule::Ptr<_213d88834_TypeKind> _127421_other) {
	return false;;
}



inline void _213cac3e5_ready(_213cab845_comptimeFiles* _self_, jule::Ptr<_213d11988_Var>* _127829_keyA, jule::Ptr<_213d11988_Var>* _127846_keyB) {
	if (((*(_127829_keyA)) != nullptr)) {
		(*(_127829_keyA)).get()._field_Constant=true;
		(*(_127829_keyA)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		(*(_127829_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_127829_keyA)).get()._field_Kind=_213e55a22_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_127846_keyB)) != nullptr)) {
		(*(_127846_keyB)).get()._field_Constant=true;
		(*(_127846_keyB)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		(*(_127846_keyB)).get()._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213cacd0d_comptimeFile>(), 18)})});
	};
}



inline void _213cac7ad_step(_213cab845_comptimeFiles* _self_, jule::I32 _130023_i, jule::Ptr<_213d11988_Var>* _130036_keyA, jule::Ptr<_213d11988_Var>* _130053_keyB) {
	if (((*(_130036_keyA)) != nullptr)) {
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_130023_i)));
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_130053_keyB)) != nullptr)) {
		(*(_130053_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind.cast_ptr<_213cacd0d_comptimeFile>(18).get()._field_file=(*(_self_))._field_files[_130023_i];
	};
}



inline jule::I32 _213caca22_len(_213cab845_comptimeFiles* _self_) {
	return static_cast<jule::I32>((*(_self_))._field_files.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _213cab845_comptimeFiles _Src) {
	_Stream << _213cabba8_Str(&_Src);
	return _Stream;
}



inline jule::Str _213cad171_Str(_213cacd0d_comptimeFile* _self_) {
	return jule::Str("comptimeFile", 12);;
}



inline jule::Bool _213cad47e_Equal(jule::Ptr<_213cacd0d_comptimeFile> _self_, jule::Ptr<_213d88834_TypeKind> _132421_other) {
	return false;;
}



inline jule::Ptr<_213d5ae22_Data> _213cad957__Path(jule::Ptr<_213cacd0d_comptimeFile> _self_, jule::Ptr<_213d5c990_Eval>* _132830_e, jule::Ptr<_213c49dbb_FnCallExpr>* _132845_fc) {
	if (((*(_132845_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_132830_e)).ptr(), (*(_132845_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Path", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _133317_constant = static__2121a5966_NewStr(_self_.get()._field_file.get()._field_File.get()._field_Path);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Model=jule::Any(_133317_constant, &__jule_any_type19), ._field_Constant=_133317_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213cadd0e__Name(jule::Ptr<_213cacd0d_comptimeFile> _self_, jule::Ptr<_213d5c990_Eval>* _134130_e, jule::Ptr<_213c49dbb_FnCallExpr>* _134145_fc) {
	if (((*(_134145_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_134130_e)).ptr(), (*(_134145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _134617_constant = static__2121a5966_NewStr(_2114c789e_Name(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Model=jule::Any(_134617_constant, &__jule_any_type19), ._field_Constant=_134617_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213cae1b6__Dir(jule::Ptr<_213cacd0d_comptimeFile> _self_, jule::Ptr<_213d5c990_Eval>* _135429_e, jule::Ptr<_213c49dbb_FnCallExpr>* _135444_fc) {
	if (((*(_135444_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_135429_e)).ptr(), (*(_135444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Dir", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_2121a4c51_Const> _135917_constant = static__2121a5966_NewStr(_2114c763a_Dir(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Model=jule::Any(_135917_constant, &__jule_any_type19), ._field_Constant=_135917_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213cae4c4_subIdent(jule::Ptr<_213cacd0d_comptimeFile> _self_, jule::Str _136728_ident) {
	{
		auto &_match_expr{ _136728_ident };
		
		if (_match_expr == jule::Str("Path", 4)) {
			_case_begin_1b7193e88:;
			{
				jule::Ptr<_213c796ae_FnIns> _137021_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _137133_e, jule::Ptr<_213c49dbb_FnCallExpr>* _137148_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213cad957__Path(_self_, _137133_e, _137148_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_137021_method));;
			}
		}
		else if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b7193eee:;
			{
				jule::Ptr<_213c796ae_FnIns> _137721_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _137833_e, jule::Ptr<_213c49dbb_FnCallExpr>* _137848_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213cadd0e__Name(_self_, _137833_e, _137848_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_137721_method));;
			}
		}
		else if (_match_expr == jule::Str("Dir", 3)) {
			_case_begin_1b7193cac:;
			{
				jule::Ptr<_213c796ae_FnIns> _138421_method = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>([=](jule::Ptr<_213d5c990_Eval>* _138533_e, jule::Ptr<_213c49dbb_FnCallExpr>* _138548_fc, jule::Ptr<_213d5ae22_Data>* ) mutable -> jule::Ptr<_213d5ae22_Data> {
					return _213cae1b6__Dir(_self_, _138533_e, _138548_fc);;
				}), });;
				return _213cae848_buildAsComptimeMethodData(&(_138421_method));;
			}
		}
		else {
			_case_begin_1b719387d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b719354d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213cacd0d_comptimeFile _Src) {
	_Stream << _213cad171_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_213ce1050_Sema>*,jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>*)> _213cb2054_readyFn(jule::Ptr<_213cb1b69_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_213ce1050_Sema>*,jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>*)>([=](jule::Ptr<_213ce1050_Sema>* _6321_sema, jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b71a2150:;
			if (it != expr_end) {
				jule::I32 _6418_i = it - expr->begin();
				jule::Ptr<_213c4dcc1_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_213d870a2_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1b71a2150;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_213d88834_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b71a430b:;
						if (it != expr_end) {
							jule::Ptr<_213c41d2a_TypeDecl> _7029_mask = *it;
							{
								jule::I32 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_213d88834_TypeKind> _7229_kind = _213ce83cb_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_213da6b60_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1b71a5ebc:;
											{
												jule::Ptr<_213c423e1_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_213c423e1_IdentTypeDecl>(&__jule_any_type20);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _213cb3231_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(_7637_itd.get()._field_Ident), 20)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1b71a5d24:;
									};
									return false;;
								};
								_julec_label_success:;
								{ jule::Slice<jule::Ptr<_213d88834_TypeKind>> &__jule_push_dest = _6525_generic.get()._field_Constraint; __jule_push_dest.push(_7229_kind); };
							}
							_iter_next_1b71a430b:;
							++it;
							goto _iter_begin_1b71a430b;
						}
						_iter_end_1b71a430b:;
					};
				}
				_iter_next_1b71a2150:;
				++it;
				_6418_i++;
				goto _iter_begin_1b71a2150;
			}
			_iter_end_1b71a2150:;
		};
		return true;;
	});;
}



inline jule::Bool _213cb22b8_readyFi(jule::Ptr<_213cb1b69_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _213cec9a7_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _213cb2054_readyFn(_self_)));;
}



inline jule::Bool _213cb252c_readySi(jule::Ptr<_213cb1b69_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _213cb2054_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _213cb2791_ready(jule::Ptr<_213cb1b69_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _213cb22b8_readyFi(_self_);;
	};
	return _213cb252c_readySi(_self_);;
}



inline jule::Bool _213cb2a05_check(jule::Ptr<_213cb1b69_constraintChecker> _self_) {
	if ((!(_213cb2791_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71acac8:;
		if (it != expr_end) {
			jule::I32 _11914_i = it - expr->begin();
			jule::Ptr<_213d870a2_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1b71acac8;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b71ad634:;
					if (it != expr_end) {
						jule::Ptr<_213d88834_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_213d91089_Prim> _12425_prim = _213d8b051_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _213d91b4a_IsConstraint(_12425_prim.ptr()))) {
								if (_213cb2e45_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1b71acac8;
								};
								goto _iter_next_1b71ad634;
							};
							if (_213d88ee9_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1b71acac8;
							};
						}
						_iter_next_1b71ad634:;
						++it;
						goto _iter_begin_1b71ad634;
					}
					_iter_end_1b71ad634:;
				};
				_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1b71acac8:;
			++it;
			_11914_i++;
			goto _iter_begin_1b71acac8;
		}
		_iter_end_1b71acac8:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _213cb1b69_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213cb3dbe_IsTraitImpl(_213cb3a17_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _213cb4133_IsStructImpl(_213cb3a17_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _213cb3a17_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cb8a72_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cb8e6d_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cb9259_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cb95cd_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cb98b9_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cb9d3c_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cba722_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbab1d_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbaec5_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbb2b1_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbb59c_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbb954_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbbdc7_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbc27e_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbc889_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbd3d4_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbd9ab_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbdd0d_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbe418_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213cbe88b_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _213cc0b23_SelectPackage(_213cc06a0_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)> _45632_selector) {
	return _213ce14c3_SelectPackage((*(_self_))._field_s.ptr(), _45632_selector);;
}



inline jule::Ptr<_213d11988_Var> _213cc0eca_FindVar(_213cc06a0_scopeChecker* _self_, jule::Str _46726_ident, jule::Bool _46738_binded) {
	;
	jule::Ptr<_213d11988_Var> _47017_v = _213d5888c_findVar((*(_self_))._field_table.ptr(), _46726_ident, _46738_binded, true);;
	if ((_47017_v != nullptr)) {
		return _47017_v;;
	};
	jule::Ptr<_213cc06a0_scopeChecker> _47517_parent = (*(_self_))._field_parent;;
	while ((_47517_parent != nullptr)) {
		{
			_47017_v=_213d5888c_findVar(_47517_parent.get()._field_table.ptr(), _46726_ident, _46738_binded, true);
			if ((_47017_v != nullptr)) {
				return _47017_v;;
			};
			_47517_parent=_47517_parent.get()._field_parent;
		}
	_iter_next_1b71d97c5:;
	}
	_iter_end_1b71d97c5:;;
	return _213ce187a_FindVar((*(_self_))._field_s.ptr(), _46726_ident, _46738_binded);;
}



inline jule::Ptr<_213d87adb_TypeAlias> _213cc1382_FindTypeAlias(_213cc06a0_scopeChecker* _self_, jule::Str _49432_ident, jule::Bool _49444_binded) {
	;
	jule::Ptr<_213d87adb_TypeAlias> _49717_ta = _213d58cdd_findTypeAlias((*(_self_))._field_table.ptr(), _49432_ident, _49444_binded, true);;
	if ((_49717_ta != nullptr)) {
		return _49717_ta;;
	};
	jule::Ptr<_213cc06a0_scopeChecker> _50217_parent = (*(_self_))._field_parent;;
	while ((_50217_parent != nullptr)) {
		{
			_49717_ta=_213d58cdd_findTypeAlias(_50217_parent.get()._field_table.ptr(), _49432_ident, _49444_binded, true);
			if ((_49717_ta != nullptr)) {
				return _49717_ta;;
			};
			_50217_parent=_50217_parent.get()._field_parent;
		}
	_iter_next_1b71dc388:;
	}
	_iter_end_1b71dc388:;;
	return _213ce1c32_FindTypeAlias((*(_self_))._field_s.ptr(), _49432_ident, _49444_binded);;
}



inline jule::Ptr<_213c615db_Struct> _213cc1739_FindStruct(_213cc06a0_scopeChecker* _self_, jule::Str _51929_ident, jule::Bool _51941_binded) {
	return _213ce20d9_FindStruct((*(_self_))._field_s.ptr(), _51929_ident, _51941_binded);;
}



inline jule::Ptr<_213c76a0d_Fn> _213cc1ae1_FindFn(_213cc06a0_scopeChecker* _self_, jule::Str _52825_ident, jule::Bool _52837_binded) {
	return _213ce2491_FindFn((*(_self_))._field_s.ptr(), _52825_ident, _52837_binded);;
}



inline jule::Ptr<_213c88b63_Trait> _213cc1dee_FindTrait(_213cc06a0_scopeChecker* _self_, jule::Str _53728_ident) {
	return _213ce279e_FindTrait((*(_self_))._field_s.ptr(), _53728_ident);;
}



inline jule::Ptr<_213c8b3e6_Enum> _213cc220c_FindEnum(_213cc06a0_scopeChecker* _self_, jule::Str _54627_ident) {
	return _213ce2aac_FindEnum((*(_self_))._field_s.ptr(), _54627_ident);;
}



inline jule::Ptr<_213c8c9e1_TypeEnum> _213cc251a_FindTypeEnum(_213cc06a0_scopeChecker* _self_, jule::Str _55531_ident) {
	return _213ce2dba_FindTypeEnum((*(_self_))._field_s.ptr(), _55531_ident);;
}



inline jule::Bool _213cc284a_isUnsafe(jule::Ptr<_213cc06a0_scopeChecker> _self_) {
	jule::Ptr<_213cc06a0_scopeChecker> _56317_scope = _self_;;
	_julec_label_iter:;
	if (_56317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_56317_scope.get()._field_parent != nullptr)) {
		_56317_scope=_56317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _213cc2aae_isRoot(_213cc06a0_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _213cc2c8a_stop(_213cc06a0_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _213cc2eee_stopped(_213cc06a0_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _213cc3263_isDeferred(jule::Ptr<_213cc06a0_scopeChecker> _self_) {
	jule::Ptr<_213cc06a0_scopeChecker> _59617_scope = _self_;;
	_julec_label_iter:;
	if (_59617_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_59617_scope.get()._field_parent != nullptr)) {
		_59617_scope=_59617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_213cc06a0_scopeChecker> _213cc34c7_getRoot(jule::Ptr<_213cc06a0_scopeChecker> _self_) {
	jule::Ptr<_213cc06a0_scopeChecker> _61417_root = _self_;;
	while (((_61417_root.get()._field_parent != nullptr) && (_61417_root.get()._field_owner == nullptr))) {
		{
			_61417_root=_61417_root.get()._field_parent;
		}
	_iter_next_1b80bcd5b:;
	}
	_iter_end_1b80bcd5b:;;
	return _61417_root;;
}



inline jule::Ptr<_213cc06a0_scopeChecker> _213cc373b_getHardRoot(jule::Ptr<_213cc06a0_scopeChecker> _self_) {
	jule::Ptr<_213cc06a0_scopeChecker> _62417_root = _self_;;
	while ((_62417_root.get()._field_parent != nullptr)) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1b80bde39:;
	}
	_iter_end_1b80bde39:;;
	return _62417_root;;
}



inline jule::Ptr<_213cbb2b1_Label> _213cc3a49_findLabel(_213cc06a0_scopeChecker* _self_, jule::Str _63428_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80beb1b:;
		if (it != expr_end) {
			jule::Any _63521_st = *it;
			{
				{
					auto &_match_expr{ _63521_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1b80c0611:;
						{
							jule::Ptr<_213cbb2b1_Label> _63825_label = _63521_st.cast_ptr<_213cbb2b1_Label>(&__jule_any_type21);;
							if ((_63825_label.get()._field_Ident == _63428_ident)) {
								return _63825_label;;
							};
						}
					}
					_match_end_1b80c0512:;
				};
			}
			_iter_next_1b80beb1b:;
			++it;
			goto _iter_begin_1b80beb1b;
		}
		_iter_end_1b80beb1b:;
	};
	return nullptr;;
}



inline jule::Ptr<_213cbe418_scopeLabel> _213cc3d57_findLabelScope(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Str _65034_ident) {
	jule::Ptr<_213cbe418_scopeLabel> _65117_label = _213cc4165_findLabelAll(_self_.ptr(), _65034_ident);;
	if (((_65117_label != nullptr) && (_65117_label.get()._field_scope == _self_))) {
		return _65117_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_213cbe418_scopeLabel> _213cc4165_findLabelAll(_213cc06a0_scopeChecker* _self_, jule::Str _66231_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80c2723:;
		if (it != expr_end) {
			jule::Ptr<_213cbe418_scopeLabel> _66321_lbl = *it;
			{
				if ((_66321_lbl.get()._field_label.get()._field_Ident == _66231_ident)) {
					return _66321_lbl;;
				};
			}
			_iter_next_1b80c2723:;
			++it;
			goto _iter_begin_1b80c2723;
		}
		_iter_end_1b80c2723:;
	};
	return nullptr;;
}



inline jule::Bool _213cc451c_isDuplicatedIdent(_213cc06a0_scopeChecker* _self_, jule::Uintptr _67436_itself, jule::Str _67453_ident) {
	jule::Ptr<_213d11988_Var> _67513_v = _213cc0eca_FindVar(_self_, _67453_ident, false);;
	if (((_67513_v != nullptr) && (static_cast<jule::Uintptr>(_67513_v) != _67436_itself))) {
		if ((_67513_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_67513_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_213ce3294_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_213d87adb_TypeAlias> _68313_ta = _213cc1382_FindTypeAlias(_self_, _67453_ident, false);;
	if (((_68313_ta != nullptr) && (static_cast<jule::Uintptr>(_68313_ta) != _67436_itself))) {
		if ((_68313_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_213ce3294_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _213cc4792_checkVarDecl(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c54436_VarDecl> _69436_decl) {
	jule::Ptr<_213d11988_Var> _69517_v = _213c825eb_buildVar(_69436_decl);;
	_69517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = _self_.get()._field_table.get()._field_Vars; __jule_push_dest.push(_69517_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_69517_v, &__jule_any_type8)); };
	});;
	if (_213cc451c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69517_v)), _69517_v.get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _69517_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_69517_v.get()._field_Ident, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_213cc2c8a_stop(_self_.ptr());
		return;;
	};
	_213d04d88_checkVarDecl(_self_.get()._field_s, &(_69517_v), jule::Trait<_213da6b60_Lookup>(_self_, 0));
	if (((!(_213d12071_IsTypeInferred(_69517_v.ptr()))) && ((_69517_v.get()._field_Kind == nullptr) || (_69517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_213d08a5c_evalVarValue(_self_.get()._field_s, &(_69517_v), jule::Trait<_213da6b60_Lookup>(_self_, 0));
	if (((!(_213d11d0c_IsInitialized(_69517_v.ptr()))) || (_69517_v.get()._field_Value.get()._field_Data == nullptr))) {
		return;;
	};
	_213cca08e_removeInteriorMutRisk(_self_, &(_69517_v.get()._field_Value.get()._field_Data));
	_213d0873d_checkVarValue(_self_.get()._field_s, &(_69517_v));
}



inline void _213cc4a17_checkTypeAliasDecl(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c57c97_TypeAliasDecl> _72542_decl) {
	jule::Ptr<_213d87adb_TypeAlias> _72617_ta = _213c7e32e_buildTypeAlias(_72542_decl);;
	if (_213cc451c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72617_ta)), _72617_ta.get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _72617_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_72617_ta.get()._field_Ident, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_213cc2c8a_stop(_self_.ptr());
		return;;
	};
	_213cee57a_checkTypeAliasDecl(_self_.get()._field_s, &(_72617_ta), jule::Trait<_213da6b60_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> &__jule_push_dest = _self_.get()._field_table.get()._field_TypeAliases; __jule_push_dest.push(_72617_ta); };
	if ((_72617_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_213cc2c8a_stop(_self_.ptr());
	};
}



inline jule::Ptr<_213cb8a72_Scope> _213cc4c7b_getChild(_213cc06a0_scopeChecker* _self_) {
	return jule::new_ptr<_213cb8a72_Scope>(_213cb8a72_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _213cc5144_checkChildSsc(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c51961_ScopeTree>* _74938_tree, jule::Ptr<_213cb8a72_Scope>* _74961_s, jule::Ptr<_213cc06a0_scopeChecker>* _74977_ssc) {
	(*(_74977_ssc)).get()._field_parent=_self_;
	_213cd0ade_check((*(_74977_ssc)), _74938_tree, _74961_s);
}



inline jule::Ptr<_213cb8a72_Scope> _213cc54eb_checkChildSc(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c51961_ScopeTree>* _75437_tree, jule::Ptr<_213cc06a0_scopeChecker>* _75460_ssc) {
	jule::Ptr<_213cb8a72_Scope> _75517_s = _213cc4c7b_getChild(_self_.ptr());;
	_213cc5144_checkChildSsc(_self_, _75437_tree, &(_75517_s), _75460_ssc);
	return _75517_s;;
}



inline jule::Ptr<_213cb8a72_Scope> _213cc5809_checkChild(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c51961_ScopeTree>* _76035_tree) {
	jule::Ptr<_213cc06a0_scopeChecker> _76117_ssc = _213cd0d53_newChildChecker(_self_);;
	return _213cc54eb_checkChildSc(_self_, _76035_tree, &(_76117_ssc));;
}



inline void _213cc5a7e_checkAnonScope(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c51961_ScopeTree> _76538_tree) {
	jule::Ptr<_213cb8a72_Scope> _76617_s = _213cc5809_checkChild(_self_, &(_76538_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_76617_s, &__jule_any_type22)); };
}



inline void _213cc5d9d_processErrorCall(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c72b6e_BuiltinErrorCallExprModel>* _77041_m, jule::Ptr<_2114c1b73_Token> _77072_err) {
	if (_213cc3263_isDeferred(_self_)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _77072_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_213cc06a0_scopeChecker> _77517_root = _213cc34c7_getRoot(_self_);;
	if ((!(_77517_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _77072_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_213ce3c01_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_77041_m)).get()._field_Func=_77517_root.get()._field_owner;
}



inline void _213cc6123_checkExpr(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c45ea5_Expr> _78333_expr) {
	jule::Ptr<_213d5c990_Eval> _78417_eval = _213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0));;
	_78417_eval.get()._field_ignored=true;
	jule::Ptr<_213d5ae22_Data> _78617_d = _213d7945c_evalExpr(_78417_eval, _78333_expr);;
	if ((_78617_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78617_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b80d844d:;
			{
				jule::Ptr<_213c72b6e_BuiltinErrorCallExprModel> _79321_m = _78617_d.get()._field_Model.cast_ptr<_213c72b6e_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_213cc5d9d_processErrorCall(_self_, &(_79321_m), _78333_expr.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_78617_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_1b80d865c:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_78617_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1b80d8508:;
			{
				_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _78333_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b80d85e6:;
	};
}



inline jule::Ptr<_213cb8e6d_If> _213cc6431_checkIf(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c56c96_If> _81331_i) {
	jule::Ptr<_213cb8a72_Scope> _81417_s = _213cc5809_checkChild(_self_, &(_81331_i.get()._field_Scope));;
	jule::Ptr<_213d5ae22_Data> _81617_d = _213d7945c_evalExpr(_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0)), _81331_i.get()._field_Expr);;
	if ((_81617_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_213d91089_Prim> _82117_prim = _213d8b051_Prim(_81617_d.get()._field_Kind.ptr());;
	if (((_82117_prim == nullptr) || (!(_213d94026_IsBool(_82117_prim.ptr()))))) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _81331_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_213cb8e6d_If>(_213cb8e6d_If{._field_Expr=_81617_d.get()._field_Model, ._field_Scope=_81417_s});;
}



inline jule::Ptr<_213cb9259_Else> _213cc673e_checkElse(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c5714d_Else> _83333_e) {
	return jule::new_ptr<_213cb9259_Else>(_213cb9259_Else{._field_Scope=_213cc5809_checkChild(_self_, &(_83333_e.get()._field_Scope))});;
}



inline void _213cc69b4_checkConditional(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c575c1_Conditional> _83940_conditional) {
	jule::Ptr<_213cb95cd_Conditional> _84017_c = jule::new_ptr<_213cb95cd_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_84017_c, &__jule_any_type36)); };
	_84017_c.get()._field_Elifs=jule::Slice<jule::Ptr<_213cb8e6d_If>>::alloc(0LL, (_83940_conditional.get()._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_213cb8e6d_If>> &__jule_push_dest = _84017_c.get()._field_Elifs; __jule_push_dest.push(_213cc6431_checkIf(_self_, _83940_conditional.get()._field_Head)); };
	{
		auto expr = &(_83940_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80e2b1c:;
		if (it != expr_end) {
			jule::Ptr<_213c56c96_If> _84621_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_213cb8e6d_If>> &__jule_push_dest = _84017_c.get()._field_Elifs; __jule_push_dest.push(_213cc6431_checkIf(_self_, _84621_elif)); };
			}
			_iter_next_1b80e2b1c:;
			++it;
			goto _iter_begin_1b80e2b1c;
		}
		_iter_end_1b80e2b1c:;
	};
	if ((_83940_conditional.get()._field_Default != nullptr)) {
		_84017_c.get()._field_Default=_213cc673e_checkElse(_self_, _83940_conditional.get()._field_Default);
	};
}



inline void _213cc6e26_checkIterScopeSsc(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Uintptr _85537_it, jule::Ptr<_213c51961_ScopeTree> _85554_tree, jule::Ptr<_213cb8a72_Scope>* _85577_s, jule::Ptr<_213cc06a0_scopeChecker> _85592_ssc) {
	_85592_ssc.get()._field_it=_85537_it;
	_213cc5144_checkChildSsc(_self_, &(_85554_tree), _85577_s, &(_85592_ssc));
}



inline jule::Ptr<_213cb8a72_Scope> _213cc7377_checkIterScopeSc(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Uintptr _86036_it, jule::Ptr<_213c51961_ScopeTree> _86053_tree, jule::Ptr<_213cc06a0_scopeChecker> _86075_ssc) {
	jule::Ptr<_213cb8a72_Scope> _86117_scope = _213cc4c7b_getChild(_self_.ptr());;
	_213cc6e26_checkIterScopeSsc(_self_, _86036_it, _86053_tree, &(_86117_scope), _86075_ssc);
	return _86117_scope;;
}



inline jule::Ptr<_213cb8a72_Scope> _213cc772e_checkIterScope(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Uintptr _86634_it, jule::Ptr<_213c51961_ScopeTree>* _86652_tree) {
	jule::Ptr<_213cc06a0_scopeChecker> _86717_ssc = _213cd0d53_newChildChecker(_self_);;
	return _213cc7377_checkIterScopeSc(_self_, _86634_it, (*(_86652_tree)), _86717_ssc);;
}



inline void _213cc79a4_checkInfIter(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c54e4d_Iter>* _87137_it) {
	jule::Ptr<_213cb98b9_InfIter> _87217_kind = jule::new_ptr<_213cb98b9_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_87217_kind, &__jule_any_type37)); };
	_87217_kind.get()._field_Scope=_213cc772e_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87217_kind)), &((*(_87137_it)).get()._field_Scope));
}



inline void _213cc7c29_checkWhileIter(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c54e4d_Iter>* _87739_it) {
	jule::Ptr<_213c55723_WhileKind> _87817_wh = (*(_87739_it)).get()._field_Kind.cast_ptr<_213c55723_WhileKind>(&__jule_any_type38);;
	if (((_87817_wh.get()._field_Expr == nullptr) && (_87817_wh.get()._field_Next == nullptr))) {
		_213cc79a4_checkInfIter(_self_, _87739_it);
		return;;
	};
	jule::Ptr<_213cb9d3c_WhileIter> _88417_kind = jule::new_ptr<_213cb9d3c_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_88417_kind, &__jule_any_type39)); };
	_88417_kind.get()._field_Scope=_213cc772e_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88417_kind)), &((*(_87739_it)).get()._field_Scope));
	if ((_87817_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_213d5ae22_Data> _88921_d = _213d7945c_evalExpr(_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0)), _87817_wh.get()._field_Expr);;
		if ((_88921_d == nullptr)) {
			return;;
		};
		jule::Ptr<_213d91089_Prim> _89417_prim = _213d8b051_Prim(_88921_d.get()._field_Kind.ptr());;
		if ((_89417_prim == nullptr)) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), (*(_87739_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_213d94026_IsBool(_89417_prim.ptr())))) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), (*(_87739_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_88417_kind.get()._field_Expr=_88921_d.get()._field_Model;
	};
	if (_213c55a75_IsWhileNext(_87817_wh.ptr())) {
		if ((!(_213cb809e_isValidAstStForNextSt(&(_87817_wh.get()._field_Next))))) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _87817_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _91417_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_213cce88a_checkNode(_self_, &(_87817_wh.get()._field_Next));
		if ((_91417_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91725_st = _self_.get()._field_scope.get()._field_Stmts[_91417_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _91417_n);
			if ((!(_213cb8346_isValidStForNextSt(&(_91725_st))))) {
				_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _87817_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_88417_kind.get()._field_Next=_91725_st;
		};
	};
}



inline void _213cc80e2_checkComptimeRangeIter(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c54e4d_Iter>* _92747_it, jule::Ptr<_213cba722_RangeIter>* _92763_kind, jule::Ptr<_213d5ae22_Data>* _92786_d) {
	if (((*(_92763_kind)).get()._field_KeyA != nullptr)) {
		if (((!(_213ce3294_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _213cc451c_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92763_kind)).get()._field_KeyA.get()._field_Ident))) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), (*(_92763_kind)).get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92763_kind)).get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_213ce3c01_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*(_92763_kind)).get()._field_KeyB != nullptr)) {
		if (((!(_213ce3294_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _213cc451c_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92763_kind)).get()._field_KeyB.get()._field_Ident))) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), (*(_92763_kind)).get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92763_kind)).get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_213ce3c01_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_213c8eb47_comptimeRange> _94117_comptime = _213d8e142_comptimeRange((*(_92786_d)).get()._field_Kind.ptr());;
	_213c8e96b_comptimeRangeKind_mptr_data[(_94117_comptime.get()._field_kind).type_offset]._213c8e1eb_ready(_94117_comptime.get()._field_kind, &((*(_92763_kind)).get()._field_KeyA), &((*(_92763_kind)).get()._field_KeyB));
	jule::I32 _94317_i = 0LL;;
	jule::I32 _94413_errors = _self_.get()._field_s.get()._field_errors.len();;
	for (; (_94317_i < _213c8e96b_comptimeRangeKind_mptr_data[(_94117_comptime.get()._field_kind).type_offset]._213c8e828_len(_94117_comptime.get()._field_kind)); (_94317_i)++) {
		{
			jule::Ptr<_213cc06a0_scopeChecker> _94621_ssc = _213cd0d53_newChildChecker(_self_);;
			jule::Ptr<_213cb8a72_Scope> _94721_scope = _213cc4c7b_getChild(_self_.ptr());;
			if (((*(_92763_kind)).get()._field_KeyA != nullptr)) {
				(*(_92763_kind)).get()._field_KeyA.get()._field_Scope=_94721_scope;
				{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = _94621_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92763_kind)).get()._field_KeyA); };
			};
			if (((*(_92763_kind)).get()._field_KeyB != nullptr)) {
				(*(_92763_kind)).get()._field_KeyB.get()._field_Scope=_94721_scope;
				{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = _94621_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92763_kind)).get()._field_KeyB); };
			};
			_213c8e96b_comptimeRangeKind_mptr_data[(_94117_comptime.get()._field_kind).type_offset]._213c8e5b4_step(_94117_comptime.get()._field_kind, _94317_i, &((*(_92763_kind)).get()._field_KeyA), &((*(_92763_kind)).get()._field_KeyB));
			_213cc5144_checkChildSsc(_self_, &((*(_92747_it)).get()._field_Scope), &(_94721_scope), &(_94621_ssc));
			if ((_94413_errors != _self_.get()._field_s.get()._field_errors.len())) {
				goto _iter_end_1b81077ad;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_94721_scope, &__jule_any_type22)); };
		}
	_iter_next_1b81077ad:;
	}
	_iter_end_1b81077ad:;;
}



inline void _213cc8367_checkRangeIter(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c54e4d_Iter>* _96639_it) {
	jule::Ptr<_213c560b4_RangeKind> _96717_rang = (*(_96639_it)).get()._field_Kind.cast_ptr<_213c560b4_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_213d5ae22_Data> _96917_d = _213d7914e_evalExpr1(_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0)), _96717_rang.get()._field_Expr);;
	if ((_96917_d == nullptr)) {
		return;;
	};
	jule::Ptr<_213cba722_RangeIter> _97417_kind = jule::new_ptr<_213cba722_RangeIter>(_213cba722_RangeIter{._field_Expr=_96917_d, });;
	_213d51d4c_rangeChecker _97817_rc = _213d51d4c_rangeChecker{._field_sc=_self_, ._field_rang=_96717_rang, ._field_Kind=_97417_kind, ._field_d=_96917_d};;
	jule::Bool _98413_ok = _213d53b73_check(&_97817_rc);;
	if ((!(_98413_ok))) {
		return;;
	};
	jule::Ptr<_213c8eb47_comptimeRange> _98917_comptimeRange = _213d8e142_comptimeRange(_96917_d.get()._field_Kind.ptr());;
	if ((_98917_comptimeRange != nullptr)) {
		_213cc80e2_checkComptimeRangeIter(_self_, _96639_it, &(_97417_kind), &(_96917_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_97417_kind, &__jule_any_type41)); };
	jule::Ptr<_213cc06a0_scopeChecker> _99717_ssc = _213cd0d53_newChildChecker(_self_);;
	jule::Ptr<_213cb8a72_Scope> _99817_scope = _213cc4c7b_getChild(_self_.ptr());;
	if ((_97417_kind.get()._field_KeyA != nullptr)) {
		if (((!(_213ce3294_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _213cc451c_isDuplicatedIdent(_self_.ptr(), 0LLU, _97417_kind.get()._field_KeyA.get()._field_Ident))) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _97417_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_97417_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_213ce3c01_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_97417_kind.get()._field_KeyA.get()._field_Scope=_99817_scope;
		{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = _99717_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_97417_kind.get()._field_KeyA); };
	};
	if ((_97417_kind.get()._field_KeyB != nullptr)) {
		if (((!(_213ce3294_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _213cc451c_isDuplicatedIdent(_self_.ptr(), 0LLU, _97417_kind.get()._field_KeyB.get()._field_Ident))) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _97417_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_97417_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_213ce3c01_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_97417_kind.get()._field_KeyB.get()._field_Scope=_99817_scope;
		{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = _99717_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_97417_kind.get()._field_KeyB); };
	};
	_213cc6e26_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_97417_kind)), (*(_96639_it)).get()._field_Scope, &(_99817_scope), _99717_ssc);
	_97417_kind.get()._field_Scope=_99817_scope;
}



inline void _213cc85dc_checkIter(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c54e4d_Iter> _102233_it) {
	if (_213c552a0_IsInf(_102233_it.ptr())) {
		_213cc79a4_checkInfIter(_self_, &(_102233_it));
		return;;
	};
	{
		auto &_match_expr{ _102233_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b811878b:;
			{
				_213cc7c29_checkWhileIter(_self_, &(_102233_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b81182e6:;
			{
				_213cc8367_checkRangeIter(_self_, &(_102233_it));
			}
		}
		else {
			_case_begin_1b8117c0d:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1b8117ba8:;
	};
}



inline jule::Bool _213cc88ea_checkValidContLabel(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Uintptr _103839_it) {
	jule::Ptr<_213cc06a0_scopeChecker> _103917_scope = _self_;;
	_julec_label_iter:;
	if ((_103917_scope.get()._field_it == _103839_it)) {
		return true;;
	};
	if ((_103917_scope.get()._field_parent != nullptr)) {
		_103917_scope=_103917_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _213cc8c08_checkValidBreakLabel(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Uintptr _105440_ptr) {
	jule::Ptr<_213cc06a0_scopeChecker> _105517_scope = _self_;;
	_julec_label_iter:;
	if ((_105517_scope.get()._field_it == _105440_ptr)) {
		return true;;
	};
	if ((_105517_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _106317_mtch = static_cast<jule::Uintptr>(((_213cbd3d4_Case*)(_105517_scope.get()._field_cse))->_field_Owner);;
		if ((_106317_mtch == _105440_ptr)) {
			return true;;
		};
	};
	if ((_105517_scope.get()._field_parent != nullptr)) {
		_105517_scope=_105517_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_213cbab1d_ContSt> _213cc9016_checkContValidScope(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c56823_ContSt> _107739_c) {
	if (_213cc3263_isDeferred(_self_)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _107739_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_107739_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_213cbab1d_ContSt>();;
	};
	jule::Ptr<_213cc06a0_scopeChecker> _108717_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_108717_scope.get()._field_it == 0LLU) && (_108717_scope.get()._field_parent != nullptr)) && (_108717_scope.get()._field_owner == nullptr))) {
			_case_begin_1b81206c7:;
			{
				_108717_scope=_108717_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_108717_scope.get()._field_it != 0LLU)) {
			_case_begin_1b812074e:;
			{
				return jule::new_ptr<_213cbab1d_ContSt>(_213cbab1d_ContSt{._field_It=_108717_scope.get()._field_it});;
			}
		}
		_match_end_1b812061c:;
	};
	_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _107739_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _213cc928b_checkCont(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c56823_ContSt> _110129_c) {
	jule::Ptr<_213cbab1d_ContSt> _110217_cont = _213cc9016_checkContValidScope(_self_, _110129_c);;
	if ((_110217_cont == nullptr)) {
		return;;
	};
	if ((_110129_c.get()._field_Label != nullptr)) {
		jule::Ptr<_213cbe418_scopeLabel> _110821_label = _213cb6278_findLabelParent(_110129_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_110821_label == nullptr)) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _110129_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_110129_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_110821_label.get()._field_used=true;
		if (((_110821_label.get()._field_pos + 1LL) >= _110821_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _110129_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_110129_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I32 _112117_i = (_110821_label.get()._field_pos + 1LL);;
		if ((_112117_i >= _110821_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _110129_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _112525_st = _110821_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_112117_i];;
			{
				auto &_match_expr{ _112525_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1b81283b1:;
					{
						_110217_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112525_st.cast_ptr<_213cb98b9_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_1b8128636:;
					{
						_110217_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112525_st.cast_ptr<_213cba722_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1b812869c:;
					{
						_110217_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112525_st.cast_ptr<_213cb9d3c_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_1b812849e:;
					{
						_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _110129_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_110129_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1b8128449:;
			};
		};
	};
	if ((_110217_cont.get()._field_It != 0LLU)) {
		if ((!(_213cc88ea_checkValidContLabel(_self_, _110217_cont.get()._field_It)))) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _110129_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_110129_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_110217_cont, &__jule_any_type42)); };
}



inline void _213cc9511_checkLabel(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c4e178_LabelSt> _114834_l) {
	if ((_213cc3a49_findLabel(_self_.ptr(), _114834_l.get()._field_Ident) != nullptr)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _114834_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_114834_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_213cbb2b1_Label> _115417_label = jule::new_ptr<_213cbb2b1_Label>(_213cbb2b1_Label{._field_Ident=_114834_l.get()._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_115417_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_213cbe418_scopeLabel>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(jule::new_ptr<_213cbe418_scopeLabel>(_213cbe418_scopeLabel{._field_token=_114834_l.get()._field_Token, ._field_label=_115417_label, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _213cc9786_pushGoto(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c4e530_GotoSt> _116732_gt) {
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_213cbb59c_GotoSt>(_213cbb59c_GotoSt{._field_Ident=_116732_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type43)); };
	{ jule::Slice<jule::Ptr<_213cbe88b_scopeGoto>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(jule::new_ptr<_213cbe88b_scopeGoto>(_213cbe88b_scopeGoto{._field_gt=_116732_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I32>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})); };
}



inline void _213cc9a0b_checkPostfix(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c50465_AssignSt> _117936_a) {
	if ((_117936_a.get()._field_Left.len() > 1LL)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _117936_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_213c45ea5_Expr> _118517_expr = _117936_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_213d5ae22_Data> _118617_d = _213d7945c_evalExpr(_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0)), _118517_expr);;
	if ((_118617_d == nullptr)) {
		return;;
	};
	_213cb7d07_checkAssign(&(_self_.get()._field_s), &(_118617_d), nullptr, _117936_a.get()._field_Setter);
	if ((_213d8b529_Ptr(_118617_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_213d97d4e_Ptr> _119421_ptr = _213d8b529_Ptr(_118617_d.get()._field_Kind.ptr());;
		if (_213d98822_IsUnsafe(_119421_ptr.ptr())) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _117936_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117936_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str(_118617_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_213d8b051_Prim(_118617_d.get()._field_Kind.ptr()) == nullptr) || (!(_2121a4745_IsNum(_213d8b051_Prim(_118617_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _117936_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117936_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str(_118617_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_213cbb954_Postfix>(_213cbb954_Postfix{._field_Expr=_118617_d.get()._field_Model, ._field_Op=_117936_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type44)); };
}



inline jule::Bool _213cc9d19_isNewAssignIdent(_213cc06a0_scopeChecker* _self_, jule::Str _121235_ident) {
	if ((_2114c4417_IsIgnoreIdent(_121235_ident) || _121235_ident.empty())) {
		return false;;
	};
	return (_213d59195_defByIdent((*(_self_))._field_table.ptr(), _121235_ident, false) == nullptr);;
}



inline void _213cca08e_removeInteriorMutRisk(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213d5ae22_Data>* _122546_d) {
	jule::Ptr<_213c64402_StructIns> _122613_s = _213d8c4a3_Struct((*(_122546_d)).get()._field_Kind.ptr());;
	if ((_122613_s == nullptr)) {
		return;;
	};
	jule::Ptr<_213cc06a0_scopeChecker> _123013_root = _213cc373b_getHardRoot(_self_);;
	if ((_123013_root.get()._field_owner.get()._field_Owner != _122613_s)) {
		return;;
	};
	(*(_122546_d)).get()._field_Mutable=true;
}



inline jule::Bool _213cca4e0_checkStructureAssignOp(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c64402_StructIns>* _123947_s, jule::Ptr<_213c50465_AssignSt>* _123967_a, jule::Ptr<_213d5ae22_Data>* _123986_r) {
	jule::Ptr<_213c796ae_FnIns> _124217_overload = nullptr;;
	{
		auto &_match_expr{ (*(_123967_a)).get()._field_Setter.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1b813d10c:;
			{
				_124217_overload=(*(_123947_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1b813bb77:;
			{
				_124217_overload=(*(_123947_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1b813c10b:;
			{
				_124217_overload=(*(_123947_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1b813c172:;
			{
				_124217_overload=(*(_123947_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1b813c1d8:;
			{
				_124217_overload=(*(_123947_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1b813c24e:;
			{
				_124217_overload=(*(_123947_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1b813d173:;
			{
				_124217_overload=(*(_123947_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1b813d1d9:;
			{
				_124217_overload=(*(_123947_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1b813d250:;
			{
				_124217_overload=(*(_123947_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1b813d2b6:;
			{
				_124217_overload=(*(_123947_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1b813c095:;
			{
				_213ce38d2_pushErr(_self_.get()._field_s.ptr(), (*(_123967_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_123967_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_213c64765_Str((*(_123947_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1b813c040:;
	};
	if ((_124217_overload == nullptr)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), (*(_123967_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_123967_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_213c64765_Str((*(_123947_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_213c787e0_ParamIns> _127417_p = _124217_overload.get()._field_Params[1LL];;
	return _213ceab70_checkAssignType(_self_.get()._field_s, _127417_p.get()._field_Decl.get()._field_Reference, &(_127417_p.get()._field_Kind), _123986_r, (*(_123967_a)).get()._field_Setter);;
}



inline void _213cca765_checkSingleAssign(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c50465_AssignSt>* _127842_a) {
	jule::Ptr<_213d5ae22_Data> _127917_l = nullptr;;
	if ((!(_2114c4417_IsIgnoreIdent((*(_127842_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_213c45ea5_Expr> _128221_expr = (*(_127842_a)).get()._field_Left[0LL].get()._field_Expr;;
		_127917_l=_213d7945c_evalExpr(_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0)), _128221_expr);
		if ((_127917_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_213d5c990_Eval> _128917_eval = nullptr;;
	if ((_127917_l != nullptr)) {
		_128917_eval=_213cea367_evalp(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0), _127917_l.get()._field_Kind);
	} else {
		_128917_eval=_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0));
	};
	_128917_eval.get()._field_unsafety=_213cc284a_isUnsafe(_self_);
	jule::Ptr<_213d5ae22_Data> _129617_r = _213d7945c_evalExpr(_128917_eval, (*(_127842_a)).get()._field_Right);;
	if ((_129617_r == nullptr)) {
		return;;
	};
	_213cca08e_removeInteriorMutRisk(_self_, &(_129617_r));
	if ((_127917_l == nullptr)) {
		if (_213d89aee_Void(_129617_r.get()._field_Kind.ptr())) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), (*(_127842_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_129617_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_213cb7d07_checkAssign(&(_self_.get()._field_s), &(_127917_l), _129617_r, (*(_127842_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_213d8cbe0_Tup(_129617_r.get()._field_Kind.ptr()) != nullptr)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), (*(_127842_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_213c68307_OperandExprModel> _132017_lm = jule::new_ptr<_213c68307_OperandExprModel>(_213c68307_OperandExprModel{._field_Kind=_127917_l.get()._field_Kind, ._field_Model=_127917_l.get()._field_Model});;
	jule::Ptr<_213c68307_OperandExprModel> _132417_rm = jule::new_ptr<_213c68307_OperandExprModel>(_213c68307_OperandExprModel{._field_Kind=_129617_r.get()._field_Kind, ._field_Model=_129617_r.get()._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_213cbbdc7_Assign>(_213cbbdc7_Assign{._field_L=_132017_lm, ._field_R=_132417_rm, ._field_Op=(*(_127842_a)).get()._field_Setter}), &__jule_any_type45)); };
	if (((*(_127842_a)).get()._field_Setter.get()._field_Id != static_cast<jule::U32>(71LLU))) {
		jule::Ptr<_213c64402_StructIns> _133121_strct = _213d8c4a3_Struct(_127917_l.get()._field_Kind.ptr());;
		if ((_133121_strct != nullptr)) {
			_213cca4e0_checkStructureAssignOp(_self_, &(_133121_strct), _127842_a, &(_129617_r));
			return;;
		};
		jule::U32 _133617_id = (*(_127842_a)).get()._field_Setter.get()._field_Id;;
		(*(_127842_a)).get()._field_Setter.get()._field_Id=_213cd11a5_removeEqFromOp((*(_127842_a)).get()._field_Setter.get()._field_Id);
		_213d7b6a1_binaryEval _133821_solver = static__213d7c086_new(_128917_eval, (*(_127842_a)).get()._field_Setter);;
		_129617_r=_213d81de3_solveExplicit(&_133821_solver, &(_127917_l), &(_129617_r));
		(*(_127842_a)).get()._field_Setter.get()._field_Id=_133617_id;
		if ((_129617_r == nullptr)) {
			return;;
		};
		return;;
	};
	_213d461c6_assignTypeChecker _134717_checker = _213d461c6_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_127917_l.get()._field_Kind, ._field_d=_129617_r, ._field_errorToken=(*(_127842_a)).get()._field_Setter};;
	if (_213d4734d_check(&_134717_checker)) {
		_132417_rm.get()._field_Model=_129617_r.get()._field_Model;
		_132017_lm.get()._field_Model=_127917_l.get()._field_Model;
	};
}



inline void _213ccac93_processEndPartOfMultiAssign(_213cc06a0_scopeChecker* _self_, jule::Ptr<_213cbc27e_MultiAssign>* _135951_st, jule::Ptr<_213c50465_AssignSt>* _136014_a, jule::Ptr<_213c4ee26_AssignLeft>* _136033_lexpr, jule::Ptr<_213d5ae22_Data>* _136058_l, jule::Ptr<_213d5ae22_Data>* _136073_r) {
	if (((!((*(_136033_lexpr)).get()._field_Reference)) && _2114c4417_IsIgnoreIdent((*(_136033_lexpr)).get()._field_Ident))) {
		if (_213d89aee_Void((*(_136073_r)).get()._field_Kind.ptr())) {
			_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_136014_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_213d5ae22_Data>> &__jule_push_dest = (*(_135951_st)).get()._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*(_136014_a)).get()._field_Declarative && ((*(_136033_lexpr)).get()._field_Reference || _213cc9d19_isNewAssignIdent(_self_, (*(_136033_lexpr)).get()._field_Ident)))) {
		if (_213cc451c_isDuplicatedIdent(_self_, 0LLU, (*(_136033_lexpr)).get()._field_Ident)) {
			_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_136033_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_136033_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_213ce3c01_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_213cc2c8a_stop(_self_);
			return;;
		};
		if (_2114c4417_IsIgnoreIdent((*(_136033_lexpr)).get()._field_Ident)) {
			_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_136033_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_213d11988_Var> _138121_v = jule::new_ptr<_213d11988_Var>(_213d11988_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_136033_lexpr)).get()._field_Token, ._field_Ident=(*(_136033_lexpr)).get()._field_Ident, ._field_Mutable=(*(_136033_lexpr)).get()._field_Mutable, ._field_Reference=(*(_136033_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Expr=(*(_136014_a)).get()._field_Right, ._field_Data=(*(_136073_r))}), });;
		_213d0873d_checkVarValue((*(_self_))._field_s, &(_138121_v));
		_138121_v.get()._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_213d5ae22_Data>> &__jule_push_dest = (*(_135951_st)).get()._field_L; __jule_push_dest.push(jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_138121_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_138121_v.get()._field_Mutable, ._field_Reference=_138121_v.get()._field_Reference, ._field_Lvalue=(!(_138121_v.get()._field_Constant)), ._field_Model=jule::Any(_138121_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_138121_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_138121_v, &__jule_any_type8)); };
		return;;
	};
	if (((*(_136033_lexpr)).get()._field_Mutable || (*(_136033_lexpr)).get()._field_Reference)) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_136033_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_136033_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_213cb7d07_checkAssign(&((*(_self_))._field_s), _136058_l, (*(_136073_r)), (*(_136033_lexpr)).get()._field_Token)))) {
		return;;
	};
	;
	_213cedd93_checkValidityForInitExpr((*(_self_))._field_s, (*(_136058_l)).get()._field_Mutable, false, &((*(_136058_l)).get()._field_Kind), _136073_r, &((*(_136014_a)).get()._field_Setter));
	_213d461c6_assignTypeChecker _142417_checker = _213d461c6_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_136058_l)).get()._field_Kind, ._field_d=(*(_136073_r)), ._field_errorToken=(*(_136014_a)).get()._field_Setter};;
	_213d4734d_check(&_142417_checker);
	{ jule::Slice<jule::Ptr<_213d5ae22_Data>> &__jule_push_dest = (*(_135951_st)).get()._field_L; __jule_push_dest.push((*(_136058_l))); };
}



inline void _213ccb029_checkMultiAssign(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c50465_AssignSt>* _143441_a) {
	jule::Ptr<_213d5ae22_Data> _143517_rd = _213d7945c_evalExpr(_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0)), (*(_143441_a)).get()._field_Right);;
	if ((_143517_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_213d5ae22_Data>> _143917_right = _213cb7037_getDatasFromTupleData(&(_143517_rd));;
	if ((_143917_right.len() == 1LL)) {
		{
			auto &_match_expr{ _143917_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1b815e6d3:;
				{
					jule::Ptr<_213c6b030_IndexingExprModel> _144325_iem = _143917_right[0LL].get()._field_Model.cast_ptr<_213c6b030_IndexingExprModel>(&__jule_any_type46);;
					if ((_213d8c97b_Map(_144325_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_143917_right=jule::Slice<jule::Ptr<_213d5ae22_Data>>::make({jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213d8c97b_Map(_144325_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, })});
					};
				}
			}
			_match_end_1b815e67d:;
		};
	};
	{
		
		if (((*(_143441_a)).get()._field_Left.len() > _143917_right.len())) {
			_case_begin_1b815e2c6:;
			{
				_213ce38d2_pushErr(_self_.get()._field_s.ptr(), (*(_143441_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_143441_a)).get()._field_Left.len() < _143917_right.len())) {
			_case_begin_1b815e34d:;
			{
				_213ce38d2_pushErr(_self_.get()._field_s.ptr(), (*(_143441_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b815e073:;
	};
	jule::Ptr<_213cbc27e_MultiAssign> _146217_st = jule::new_ptr<_213cbc27e_MultiAssign>(_213cbc27e_MultiAssign{._field_R=_143517_rd.get()._field_Model});;
	{
		auto expr = &((*(_143441_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8163165:;
		if (it != expr_end) {
			jule::I32 _146513_i = it - expr->begin();
			{
				jule::Ptr<_213c4ee26_AssignLeft> _146621_lexpr = (*(_143441_a)).get()._field_Left[_146513_i];;
				jule::Ptr<_213d5ae22_Data> _146721_l = nullptr;;
				if (((!(_2114c4417_IsIgnoreIdent(_146621_lexpr.get()._field_Ident))) && ((!((*(_143441_a)).get()._field_Declarative)) || (!(_213cc9d19_isNewAssignIdent(_self_.ptr(), _146621_lexpr.get()._field_Ident)))))) {
					_146721_l=_213d7945c_evalExpr(_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0)), _146621_lexpr.get()._field_Expr);
					if ((_146721_l == nullptr)) {
						goto _iter_next_1b8163165;
					};
				};
				jule::Ptr<_213d5ae22_Data> _147521_r = _143917_right[_146513_i];;
				_213cca08e_removeInteriorMutRisk(_self_, &(_147521_r));
				_213ccac93_processEndPartOfMultiAssign(_self_.ptr(), &(_146217_st), _143441_a, &(_146621_lexpr), &(_146721_l), &(_147521_r));
			}
			_iter_next_1b8163165:;
			++it;
			_146513_i++;
			goto _iter_begin_1b8163165;
		}
		_iter_end_1b8163165:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_146217_st, &__jule_any_type47)); };
}



inline void _213ccb29e_singleDeclAssign(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c50465_AssignSt>* _148241_a) {
	jule::Ptr<_213c4ee26_AssignLeft> _148317_lexpr = (*(_148241_a)).get()._field_Left[0LL];;
	if (_213cc451c_isDuplicatedIdent(_self_.ptr(), 0LLU, _148317_lexpr.get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _148317_lexpr.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_148317_lexpr.get()._field_Ident, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_213cc2c8a_stop(_self_.ptr());
		return;;
	};
	if (_2114c4417_IsIgnoreIdent(_148317_lexpr.get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _148317_lexpr.get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	jule::Ptr<_213d5ae22_Data> _149417_r = _213d7945c_evalExpr(_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0)), (*(_148241_a)).get()._field_Right);;
	if ((_149417_r == nullptr)) {
		return;;
	};
	_213cca08e_removeInteriorMutRisk(_self_, &(_149417_r));
	jule::Ptr<_213d11988_Var> _150217_v = jule::new_ptr<_213d11988_Var>(_213d11988_Var{._field_Scope=_self_.get()._field_scope, ._field_Token=_148317_lexpr.get()._field_Token, ._field_Ident=_148317_lexpr.get()._field_Ident, ._field_Mutable=_148317_lexpr.get()._field_Mutable, ._field_Reference=_148317_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Expr=(*(_148241_a)).get()._field_Right, ._field_Data=_149417_r}), });;
	_213d0873d_checkVarValue(_self_.get()._field_s, &(_150217_v));
	{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = _self_.get()._field_table.get()._field_Vars; __jule_push_dest.push(_150217_v); };
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_150217_v, &__jule_any_type8)); };
}



inline void _213ccb524_checkAssignSt(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c50465_AssignSt> _151837_a) {
	{
		
		if (_2114c64b3_IsPostfixOp(_151837_a.get()._field_Setter.get()._field_Id)) {
			_case_begin_1b816d35c:;
			{
				_213cc9a0b_checkPostfix(_self_, _151837_a);
			}
		}
		else if ((_151837_a.get()._field_Left.len() == 1LL)) {
			_case_begin_1b816d736:;
			{
				if (_151837_a.get()._field_Declarative) {
					_213ccb29e_singleDeclAssign(_self_, &(_151837_a));
				} else {
					_213cca765_checkSingleAssign(_self_, &(_151837_a));
				};
			}
		}
		else {
			_case_begin_1b816c416:;
			{
				_213ccb029_checkMultiAssign(_self_, &(_151837_a));
			}
		}
		_match_end_1b816c34a:;
	};
}



inline jule::Ptr<_213cb8a72_Scope> _213ccb8cb_checkCaseScope(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213cbd3d4_Case>* _153335_c, jule::Ptr<_213c51961_ScopeTree>* _153350_tree) {
	jule::Ptr<_213cc06a0_scopeChecker> _153417_ssc = _213cd0d53_newChildChecker(_self_);;
	_153417_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_153335_c))));
	return _213cc54eb_checkChildSc(_self_, _153350_tree, &(_153417_ssc));;
}



inline jule::Ptr<_213cbd3d4_Case> _213ccbdc6_checkCase(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213cbc889_Match> _153933_m, jule::I32 _153944_i, jule::Ptr<_213c5821a_Case> _153956_c, jule::Ptr<_213d5ae22_Data> _153975_expr) {
	jule::Ptr<_213cbd3d4_Case> _154017_case = _153933_m.get()._field_Cases[_153944_i];;
	_154017_case.get()._field_Exprs=jule::Slice<jule::Ptr<_213d5ae22_Data>>::alloc(0LL, _153956_c.get()._field_Exprs.len());
	jule::Bool _154217_constMatched = false;;
	jule::Ptr<_213d5c990_Eval> _154317_eval = _213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0));;
	{
		auto expr = &(_153956_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8172c68:;
		if (it != expr_end) {
			jule::Ptr<_213c45ea5_Expr> _154421_e = *it;
			{
				jule::Ptr<_213d5ae22_Data> _154521_d = _213d78725_evalExprKind(_154317_eval, _154421_e.get()._field_Kind);;
				if ((_154521_d == nullptr)) {
					goto _iter_next_1b8172c68;
				};
				if (_153933_m.get()._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_213d5ae22_Data>> &__jule_push_dest = _154017_case.get()._field_Exprs; __jule_push_dest.push(_154521_d); };
					if ((_213cb6c90_countMatchType(&(_153933_m), &(_154521_d.get()._field_Kind)) > 1LL)) {
						_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _154421_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_154521_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_153975_expr.get()._field_Kind.get()._field_Generic) {
						_154217_constMatched=(_154217_constMatched || _213d88ee9_Equal(_153975_expr.get()._field_Kind, _154521_d.get()._field_Kind));
					} else {
						if ((_213d8ba02_TypeEnum(_153975_expr.get()._field_Kind.ptr()) != nullptr)) {
							_213ceb0c1_checkTypeCompatibility(_self_.get()._field_s, &(_153975_expr.get()._field_Kind), &(_154521_d.get()._field_Kind), &(_154421_e.get()._field_Token));
						} else {
							jule::Ptr<_213c88b63_Trait> _156029_trt = _213d8c717_Trait(_153975_expr.get()._field_Kind.ptr());;
							if ((_156029_trt != nullptr)) {
								_213ceb0c1_checkTypeCompatibility(_self_.get()._field_s, &(_153975_expr.get()._field_Kind), &(_154521_d.get()._field_Kind), &(_154421_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1b8172c68;
				} else if (_153933_m.get()._field_Comptime) {
					if ((!(_213d5b791_IsConst(_154521_d.ptr())))) {
						_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _154421_e.get()._field_Token, jule::Str("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_154217_constMatched=(_154217_constMatched || _2121a6a22_ReadBool(_154521_d.get()._field_Constant.ptr()));
					};
				};
				if (_154521_d.get()._field_Decl) {
					_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _154421_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_213ce3c01_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1b8172c68;
				};
				{ jule::Slice<jule::Ptr<_213d5ae22_Data>> &__jule_push_dest = _154017_case.get()._field_Exprs; __jule_push_dest.push(_154521_d); };
				_213d461c6_assignTypeChecker _158321_checker = _213d461c6_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_153975_expr.get()._field_Kind, ._field_d=_154521_d, ._field_errorToken=_154421_e.get()._field_Token};;
				_213d4734d_check(&_158321_checker);
			}
			_iter_next_1b8172c68:;
			++it;
			goto _iter_begin_1b8172c68;
		}
		_iter_end_1b8172c68:;
	};
	if (((!(_153933_m.get()._field_Comptime)) || _154217_constMatched)) {
		_154017_case.get()._field_Scope=_213ccb8cb_checkCaseScope(_self_, &(_154017_case), &(_153956_c.get()._field_Scope));
	};
	return _154017_case;;
}



inline void _213ccc28e_checkCases(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c588e1_MatchCase>* _159735_m, jule::Ptr<_213cbc889_Match> _159754_rm, jule::Ptr<_213d5ae22_Data> _159770_expr) {
	_159754_rm.get()._field_Cases=jule::Slice<jule::Ptr<_213cbd3d4_Case>>::alloc(0LL, (*(_159735_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_159735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b817c6bd:;
		if (it != expr_end) {
			jule::I32 _159913_i = it - expr->begin();
			{
				jule::Ptr<_213cbd3d4_Case> _160021_case = jule::new_ptr<_213cbd3d4_Case>(_213cbd3d4_Case{._field_Owner=_159754_rm, });;
				if ((_159913_i > 0LL)) {
					_159754_rm.get()._field_Cases[(_159913_i - 1LL)].get()._field_Next=_160021_case;
				};
				{ jule::Slice<jule::Ptr<_213cbd3d4_Case>> &__jule_push_dest = _159754_rm.get()._field_Cases; __jule_push_dest.push(_160021_case); };
			}
			_iter_next_1b817c6bd:;
			++it;
			_159913_i++;
			goto _iter_begin_1b817c6bd;
		}
		_iter_end_1b817c6bd:;
	};
	if (((_159754_rm.get()._field_Default != nullptr) && ((*(_159735_m)).get()._field_Cases.len() > 0LL))) {
		_159754_rm.get()._field_Cases[(_159754_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_159754_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_159735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81801a4:;
		if (it != expr_end) {
			jule::I32 _161314_i = it - expr->begin();
			jule::Ptr<_213c5821a_Case> _161321_c = *it;
			{
				_213ccbdc6_checkCase(_self_, _159754_rm, _161314_i, _161321_c, _159770_expr);
			}
			_iter_next_1b81801a4:;
			++it;
			_161314_i++;
			goto _iter_begin_1b81801a4;
		}
		_iter_end_1b81801a4:;
	};
}



inline jule::Ptr<_213cbd3d4_Case> _213ccc646_checkDefault(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213cbc889_Match> _161836_m, jule::Ptr<_213c5714d_Else> _161851_d) {
	jule::Ptr<_213cbd3d4_Case> _161917_def = jule::new_ptr<_213cbd3d4_Case>(_213cbd3d4_Case{._field_Owner=_161836_m, });;
	_161917_def.get()._field_Scope=_213ccb8cb_checkCaseScope(_self_, &(_161917_def), &(_161851_d.get()._field_Scope));
	return _161917_def;;
}



inline void _213ccc965_checkComptimePanic(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_2114c1b73_Token> _162638_callToken, jule::Ptr<_213cb8a72_Scope>* _162658_s) {
	if (((*(_162658_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _163013_stmt = (*(_162658_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _163013_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b818332d:;
			{
				jule::Ptr<_213d5ae22_Data> _163317_d = _163013_stmt.cast_ptr<_213d5ae22_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ _163317_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1b818421e:;
						{
							jule::Ptr<_213c707d7_BuiltinPanicCallExprModel> _163621_m = _163317_d.get()._field_Model.cast_ptr<_213c707d7_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ _163621_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1b8185121:;
									{
										jule::Ptr<_2121a4c51_Const> _163925_c = _163621_m.get()._field_Expr.cast_ptr<_2121a4c51_Const>(&__jule_any_type19);;
										if (_2121a912e_IsStr(_163925_c.ptr())) {
											if ((_162638_callToken == nullptr)) {
												jule::Ptr<_213cc06a0_scopeChecker> _164237_root = _213cc373b_getHardRoot(_self_);;
												_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _164237_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_2121a6c86_ReadStr(_163925_c.ptr()), &__jule_any_type5)}));
											} else {
												_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _162638_callToken, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_2121a6c86_ReadStr(_163925_c.ptr()), &__jule_any_type5)}));
											};
											_213cc2c8a_stop(_self_.ptr());
										};
									}
								}
								_match_end_1b8184e12:;
							};
						}
					}
					_match_end_1b8184120:;
				};
			}
		}
		_match_end_1b818322e:;
	};
}



inline void _213cccc84_processConstMatch(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213cbc889_Match>* _165442_tm, jule::Ptr<_213c588e1_MatchCase>* _165459_m) {
	{
		auto expr = &((*(_165442_tm)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81849e4:;
		if (it != expr_end) {
			jule::I32 _165514_i = it - expr->begin();
			jule::Ptr<_213cbd3d4_Case> _165521_c = *it;
			{
				if ((_165521_c.get()._field_Scope != nullptr)) {
					jule::Ptr<_2114c1b73_Token> _165725_token = nullptr;;
					if (((!((*(_165442_tm)).get()._field_TypeMatch)) && (_165521_c.get()._field_Scope.get()._field_Stmts.len() > 0LL))) {
						_165725_token=(*(_165459_m)).get()._field_Cases[_165514_i].get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
					};
					_213ccc965_checkComptimePanic(_self_, _165725_token, &(_165521_c.get()._field_Scope));
					(*(_165442_tm)).get()._field_Default=_165521_c;
					(*(_165442_tm)).get()._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1b81849e4:;
			++it;
			_165514_i++;
			goto _iter_begin_1b81849e4;
		}
		_iter_end_1b81849e4:;
	};
	if (((*(_165459_m)).get()._field_Default != nullptr)) {
		(*(_165442_tm)).get()._field_Cases=nullptr;
		(*(_165442_tm)).get()._field_Default=_213ccc646_checkDefault(_self_, (*(_165442_tm)), (*(_165459_m)).get()._field_Default);
		if (((*(_165442_tm)).get()._field_Default != nullptr)) {
			jule::Ptr<_2114c1b73_Token> _167125_token = nullptr;;
			if ((!((*(_165442_tm)).get()._field_TypeMatch))) {
				_167125_token=(*(_165459_m)).get()._field_Default.get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
			};
			_213ccc965_checkComptimePanic(_self_, _167125_token, &((*(_165442_tm)).get()._field_Default.get()._field_Scope));
		};
	} else {
		(*(_165442_tm)).get()._field_Cases=nullptr;
	};
}



inline void _213ccd009_checkTypeMatch(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c588e1_MatchCase>* _168339_m) {
	jule::Ptr<_213d5ae22_Data> _168417_d = _213d78d41_eval(_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0)), (*(_168339_m)).get()._field_Expr);;
	if ((_168417_d == nullptr)) {
		return;;
	};
	if (((!(_168417_d.get()._field_Kind.get()._field_Generic)) && (!(((((_213d8b051_Prim(_168417_d.get()._field_Kind.ptr()) != nullptr) && _213d944ee_IsAny(_213d8b051_Prim(_168417_d.get()._field_Kind.ptr()).ptr())) || (_213d8c717_Trait(_168417_d.get()._field_Kind.ptr()) != nullptr)) || (_213d8ba02_TypeEnum(_168417_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), (*(_168339_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_213cbc889_Match> _169517_tm = jule::new_ptr<_213cbc889_Match>(_213cbc889_Match{._field_Expr=_168417_d, ._field_TypeMatch=true, });;
	_169517_tm.get()._field_Comptime=_169517_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic;
	if (((!(_169517_tm.get()._field_Comptime)) && ((*(_168339_m)).get()._field_Default != nullptr))) {
		_169517_tm.get()._field_Default=_213ccc646_checkDefault(_self_, _169517_tm, (*(_168339_m)).get()._field_Default);
	};
	_213ccc28e_checkCases(_self_, _168339_m, _169517_tm, _168417_d);
	if (_169517_tm.get()._field_Comptime) {
		_213cccc84_processConstMatch(_self_, &(_169517_tm), _168339_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_169517_tm, &__jule_any_type48)); };
}



inline void _213ccd27e_checkCommonMatch(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c588e1_MatchCase>* _171641_m) {
	jule::Ptr<_213d5ae22_Data> _171717_d = nullptr;;
	if (((*(_171641_m)).get()._field_Expr == nullptr)) {
		_171717_d=jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Constant=static__2121a56be_NewBool(true)});
		_171717_d.get()._field_Model=jule::Any(_171717_d.get()._field_Constant, &__jule_any_type19);
	} else {
		_171717_d=_213d7945c_evalExpr(_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0)), (*(_171641_m)).get()._field_Expr);
		if ((_171717_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_213cbc889_Match> _173117_mc = jule::new_ptr<_213cbc889_Match>(_213cbc889_Match{._field_Expr=_171717_d, ._field_Comptime=(((((*(_171641_m)).get()._field_Expr != nullptr) && _213d5b791_IsConst(_171717_d.ptr())) && _2121a8dba_IsBool(_171717_d.get()._field_Constant.ptr())) && _2121a6a22_ReadBool(_171717_d.get()._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_173117_mc, &__jule_any_type48)); };
	if (((!(_173117_mc.get()._field_Comptime)) && ((*(_171641_m)).get()._field_Default != nullptr))) {
		_173117_mc.get()._field_Default=_213ccc646_checkDefault(_self_, _173117_mc, (*(_171641_m)).get()._field_Default);
	};
	_213ccc28e_checkCases(_self_, _171641_m, _173117_mc, _171717_d);
	if (_173117_mc.get()._field_Comptime) {
		_213cccc84_processConstMatch(_self_, &(_173117_mc), _171641_m);
	};
}



inline void _213ccd504_checkMatch(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c588e1_MatchCase> _175434_m) {
	if (_175434_m.get()._field_TypeMatch) {
		_213ccd009_checkTypeMatch(_self_, &(_175434_m));
		return;;
	};
	_213ccd27e_checkCommonMatch(_self_, &(_175434_m));
}



inline void _213ccd779_checkFall(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c4e81b_FallSt> _176229_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _213cc3263_isDeferred(_self_))) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _176229_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_213cbd3d4_Case* _177017_case = ((_213cbd3d4_Case*)(_self_.get()._field_cse));;
	if (_177017_case->_field_Owner.get()._field_Comptime) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _176229_f.get()._field_Token, jule::Str("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if ((_177017_case->_field_Next == nullptr)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _176229_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_213ce3c01_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_213cbd9ab_FallSt>(_213cbd9ab_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177017_case->_field_Next))}), &__jule_any_type49)); };
}



inline jule::Ptr<_213cbaec5_BreakSt> _213ccda87_checkBreakWithLabel(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c5646b_BreakSt> _178539_b) {
	jule::Ptr<_213cbaec5_BreakSt> _178617_brk = _213ccdd95_checkPlainBreak(_self_, _178539_b);;
	if ((_178617_brk == nullptr)) {
		return nullptr;;
	};
	_178617_brk.get()._field_It=0LLU;
	_178617_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_213cbe418_scopeLabel> _179617_label = _213cb6278_findLabelParent(_178539_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_179617_label == nullptr)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _178539_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_178539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_179617_label.get()._field_used=true;
	if (((_179617_label.get()._field_pos + 1LL) >= _179617_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _178539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I32 _180913_i = (_179617_label.get()._field_pos + 1LL);;
	if ((_180913_i >= _179617_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _178539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _181321_st = _179617_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_180913_i];;
		{
			auto &_match_expr{ _181321_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1b81a4728:;
				{
					_178617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181321_st.cast_ptr<_213cb98b9_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1b81a49ae:;
				{
					_178617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181321_st.cast_ptr<_213cba722_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1b81a4a25:;
				{
					_178617_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181321_st.cast_ptr<_213cb9d3c_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1b81a4a8b:;
				{
					_178617_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181321_st.cast_ptr<_213cbc889_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1b81a48b0:;
				{
					_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _178539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1b81a485a:;
		};
	};
	if ((_178617_brk.get()._field_It != 0LLU)) {
		if ((!(_213cc8c08_checkValidBreakLabel(_self_, _178617_brk.get()._field_It)))) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _178539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_178617_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_213cc8c08_checkValidBreakLabel(_self_, _178617_brk.get()._field_Mtch)))) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _178539_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178539_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _178617_brk;;
}



inline jule::Ptr<_213cbaec5_BreakSt> _213ccdd95_checkPlainBreak(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c5646b_BreakSt> _184335_b) {
	if (_213cc3263_isDeferred(_self_)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _184335_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213cc06a0_scopeChecker> _184917_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_184917_scope.get()._field_it == 0LLU) && (_184917_scope.get()._field_cse == 0LLU)) && (_184917_scope.get()._field_parent != nullptr)) && (_184917_scope.get()._field_owner == nullptr))) {
			_case_begin_1b81aa674:;
			{
				_184917_scope=_184917_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_184917_scope.get()._field_it != 0LLU)) {
			_case_begin_1b81aa6eb:;
			{
				return jule::new_ptr<_213cbaec5_BreakSt>(_213cbaec5_BreakSt{._field_It=_184917_scope.get()._field_it, });;
			}
		}
		else if ((_184917_scope.get()._field_cse != 0LLU)) {
			_case_begin_1b81aa773:;
			{
				return jule::new_ptr<_213cbaec5_BreakSt>(_213cbaec5_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_213cbd3d4_Case*)(_184917_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1b81aa5ca:;
	};
	_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _184335_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _213cce11a_checkBreak(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c5646b_BreakSt> _186530_b) {
	if ((_186530_b.get()._field_Label != nullptr)) {
		jule::Ptr<_213cbaec5_BreakSt> _186721_brk = _213ccda87_checkBreakWithLabel(_self_, _186530_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_186721_brk, &__jule_any_type50)); };
		return;;
	};
	jule::Ptr<_213cbaec5_BreakSt> _187217_brk = _213ccdd95_checkPlainBreak(_self_, _186530_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_187217_brk, &__jule_any_type50)); };
}



inline void _213cce390_checkRet(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c547dd_RetSt> _187632_r) {
	if (_213cc3263_isDeferred(_self_)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _187632_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_213cbdd0d_RetSt> _188117_rt = jule::new_ptr<_213cbdd0d_RetSt>(_213cbdd0d_RetSt{._field_Func=_213cc34c7_getRoot(_self_).get()._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_188117_rt, &__jule_any_type51)); };
	jule::Ptr<_213d54349_retTypeChecker> _188617_rtc = jule::new_ptr<_213d54349_retTypeChecker>(_213d54349_retTypeChecker{._field_sc=_self_, ._field_f=_188117_rt.get()._field_Func, ._field_errorToken=_187632_r.get()._field_Token, });;
	jule::Bool _189113_ok = _213d54eb5_check(_188617_rtc.ptr(), &(_187632_r.get()._field_Expr));;
	if ((!(_189113_ok))) {
		return;;
	};
	if ((_187632_r.get()._field_Expr != nullptr)) {
		_188117_rt.get()._field_Expr=_188617_rtc.get()._field_model;
	};
}



inline void _213cce615_checkUseExpr(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c46846_UseExpr> _190132_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _190132_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_213cc3263_isDeferred(_self_)) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _190132_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _190132_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _213cce88a_checkNode(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Any* _191734_node) {
	{
		auto &_match_expr{ (*(_191734_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b81b7609:;
			{
				_213cc5a7e_checkAnonScope(_self_, (*(_191734_node)).cast_ptr<_213c51961_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b81b6dde:;
			{
				_213cc4792_checkVarDecl(_self_, (*(_191734_node)).cast_ptr<_213c54436_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b81b74b6:;
			{
				_213cc4a17_checkTypeAliasDecl(_self_, (*(_191734_node)).cast_ptr<_213c57c97_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b81b72da:;
			{
				_213cc6123_checkExpr(_self_, (*(_191734_node)).cast_ptr<_213c45ea5_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1b81b76e7:;
			{
				_213cc69b4_checkConditional(_self_, (*(_191734_node)).cast_ptr<_213c575c1_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1b81b775d:;
			{
				_213cc85dc_checkIter(_self_, (*(_191734_node)).cast_ptr<_213c54e4d_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1b81b77c4:;
			{
				_213cc928b_checkCont(_self_, (*(_191734_node)).cast_ptr<_213c56823_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b81b783a:;
			{
				_213cc9511_checkLabel(_self_, (*(_191734_node)).cast_ptr<_213c4e178_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1b81b78a1:;
			{
				_213cc9786_pushGoto(_self_, (*(_191734_node)).cast_ptr<_213c4e530_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b81b7917:;
			{
				_213ccb524_checkAssignSt(_self_, (*(_191734_node)).cast_ptr<_213c50465_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1b81b797d:;
			{
				_213ccd504_checkMatch(_self_, (*(_191734_node)).cast_ptr<_213c588e1_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1b81b79e4:;
			{
				_213ccd779_checkFall(_self_, (*(_191734_node)).cast_ptr<_213c4e81b_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1b81b7a5a:;
			{
				_213cce11a_checkBreak(_self_, (*(_191734_node)).cast_ptr<_213c5646b_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b81b7ad2:;
			{
				_213cce390_checkRet(_self_, (*(_191734_node)).cast_ptr<_213c547dd_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b81b7b59:;
			{
				_213cce615_checkUseExpr(_self_, (*(_191734_node)).cast_ptr<_213c46846_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1b81b7065:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1b81b6e88:;
	};
}



inline void _213ccea66_checkResult(jule::Ptr<_213cc06a0_scopeChecker> _self_) {
	_213c51356_Stmt _195517_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _195517_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b81c0777:;
			{
				jule::Ptr<_213c46846_UseExpr> _195821_ue = _195517_stmt._field_Data.cast_ptr<_213c46846_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_213d5ae22_Data> _195921_d = _213d7945c_evalExpr(_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0)), _195821_ue.get()._field_Expr);;
				if ((_195921_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_195921_d, &__jule_any_type24)); };
				jule::Ptr<_213d54349_retTypeChecker> _196421_rtc = jule::new_ptr<_213d54349_retTypeChecker>(_213d54349_retTypeChecker{._field_sc=_self_, ._field_types=_213c7a7d1_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_195821_ue.get()._field_Expr.get()._field_Token, });;
				_213d54eb5_check(_196421_rtc.ptr(), &(_195821_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b81c005c:;
			{
				jule::Ptr<_213c45ea5_Expr> _197121_expr = _195517_stmt._field_Data.cast_ptr<_213c45ea5_Expr>(&__jule_any_type53);;
				jule::Ptr<_213d5ae22_Data> _197221_d = _213d7945c_evalExpr(_213cea675_eval(_self_.get()._field_s, jule::Trait<_213da6b60_Lookup>(_self_, 0)), _197121_expr);;
				if ((_197221_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _197221_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b81c52c6:;
						{
							jule::Ptr<_213c72b6e_BuiltinErrorCallExprModel> _197825_m = _197221_d.get()._field_Model.cast_ptr<_213c72b6e_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_213cc5d9d_processErrorCall(_self_, &(_197825_m), _197121_expr.get()._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_197221_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1b81c4d31:;
						{
							return;;
						}
					}
					_match_end_1b81c4e1e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1b81c00c3:;
			{
				_213cce88a_checkNode(_self_, &(_195517_stmt._field_Data));
			}
		}
		else {
			_case_begin_1b81beee6:;
			{
				_213cce88a_checkNode(_self_, &(_195517_stmt._field_Data));
				return;;
			}
		}
		_match_end_1b81bee91:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _213ccec42_checkTree(jule::Ptr<_213cc06a0_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I32 _200017_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_200017_n)--;
	};
	for (; (_self_.get()._field_i < _200017_n); (_self_.get()._field_i)++) {
		{
			_213c51356_Stmt _200821_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_213cce88a_checkNode(_self_, &(_200821_stmt._field_Data));
			if (_213cc2eee_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1b81c8197:;
	}
	_iter_end_1b81c8197:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_213ccea66_checkResult(_self_);
	};
}



inline void _213cd0061_checkGoto(_213cc06a0_scopeChecker* _self_, jule::Ptr<_213cbe88b_scopeGoto>* _201933_gt, jule::Ptr<_213cbe418_scopeLabel>* _201954_label) {
	jule::Ptr<_213cc06a0_scopeChecker> _202017_gtsc = (*(_201933_gt)).get()._field_scope;;
	while (((_202017_gtsc.get()._field_childIndex - 1LL) > (*(_201954_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_202017_gtsc=_202017_gtsc.get()._field_parent;
		}
	_iter_next_1b81ca81a:;
	}
	_iter_end_1b81ca81a:;;
	jule::I32 _202517_n = 0LL;;
	if ((_202017_gtsc.get()._field_scope == (*(_201954_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_201933_gt)).get()._field_pos > (*(_201954_label)).get()._field_pos)) {
			return;;
		};
		_202517_n=(*(_201933_gt)).get()._field_pos;
	};
	jule::I32 _203817_i = ((*(_201954_label)).get()._field_pos - 1LL);;
	if ((_202517_n == 0LL)) {
		{
			auto expr = &((*(_201954_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b81cd015:;
			if (it != expr_end) {
				jule::I32 _204117_j = it - expr->begin();
				jule::Any _204120_stmt = *it;
				{
					if (_213cb694e_stmtIsGotoScope(&(_204120_stmt), &(_202017_gtsc.get()._field_scope))) {
						_202517_n=_204117_j;
						goto _iter_end_1b81cd015;
					};
				}
				_iter_next_1b81cd015:;
				++it;
				_204117_j++;
				goto _iter_begin_1b81cd015;
			}
			_iter_end_1b81cd015:;
		};
	};
	for (; (_203817_i >= _202517_n); (_203817_i)--) {
		{
			jule::Any _205121_stmt = (*(_201954_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_203817_i];;
			if (_213cb85dd_stmtIsDef(&(_205121_stmt))) {
				_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_201933_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_201933_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1b81cdeb1:;
	}
	_iter_end_1b81cdeb1:;;
}



inline void _213cd023c_checkGotos(_213cc06a0_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81ccc18:;
		if (it != expr_end) {
			jule::Ptr<_213cbe88b_scopeGoto> _206021_gt = *it;
			{
				jule::Ptr<_213cbe418_scopeLabel> _206121_label = _213cc4165_findLabelAll(_self_, _206021_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_206121_label == nullptr)) {
					_213ce38d2_pushErr((*(_self_))._field_s.ptr(), _206021_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_206021_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1b81ccc18;
				};
				_206121_label.get()._field_used=true;
				_213cd0061_checkGoto(_self_, &(_206021_gt), &(_206121_label));
			}
			_iter_next_1b81ccc18:;
			++it;
			goto _iter_begin_1b81ccc18;
		}
		_iter_end_1b81ccc18:;
	};
}



inline void _213cd0418_checkLabels(_213cc06a0_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81d0b83:;
		if (it != expr_end) {
			jule::Ptr<_213cbe418_scopeLabel> _207316_l = *it;
			{
				if ((!(_207316_l.get()._field_used))) {
					_213ce38d2_pushErr((*(_self_))._field_s.ptr(), _207316_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_207316_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1b81d0b83:;
			++it;
			goto _iter_begin_1b81d0b83;
		}
		_iter_end_1b81d0b83:;
	};
}



inline void _213cd05e4_checkVars(_213cc06a0_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81d304d:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> _208116_v = *it;
			{
				if (((((!(_208116_v.get()._field_Used)) && (!(_208116_v.get()._field_Constant))) && (!(_2114c4417_IsIgnoreIdent(_208116_v.get()._field_Ident)))) && (!(_2114c46ae_IsAnonIdent(_208116_v.get()._field_Ident))))) {
					_213ce38d2_pushErr((*(_self_))._field_s.ptr(), _208116_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_208116_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1b81d304d:;
			++it;
			goto _iter_begin_1b81d304d;
		}
		_iter_end_1b81d304d:;
	};
}



inline void _213cd07c0_checkAliases(_213cc06a0_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81d5d53:;
		if (it != expr_end) {
			jule::Ptr<_213d87adb_TypeAlias> _208916_a = *it;
			{
				if ((((!(_208916_a.get()._field_Used)) && (!(_2114c4417_IsIgnoreIdent(_208916_a.get()._field_Ident)))) && (!(_2114c46ae_IsAnonIdent(_208916_a.get()._field_Ident))))) {
					_213ce38d2_pushErr((*(_self_))._field_s.ptr(), _208916_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_208916_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1b81d5d53:;
			++it;
			goto _iter_begin_1b81d5d53;
		}
		_iter_end_1b81d5d53:;
	};
}



inline void _213cd0ade_check(jule::Ptr<_213cc06a0_scopeChecker> _self_, jule::Ptr<_213c51961_ScopeTree>* _209730_tree, jule::Ptr<_213cb8a72_Scope>* _209753_s) {
	(*(_209753_s)).get()._field_Deferred=(*(_209730_tree)).get()._field_Deferred;
	(*(_209753_s)).get()._field_Unsafety=(*(_209730_tree)).get()._field_Unsafety;
	jule::I32 _210113_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_209730_tree));
	_self_.get()._field_scope=(*(_209753_s));
	_213ccec42_checkTree(_self_);
	if ((_210113_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_213cd05e4_checkVars(_self_.ptr());
		_213cd07c0_checkAliases(_self_.ptr());
		if (_213cc2aae_isRoot(_self_.ptr())) {
			_213cd023c_checkGotos(_self_.ptr());
			_213cd0418_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_213cc06a0_scopeChecker> _213cd0d53_newChildChecker(jule::Ptr<_213cc06a0_scopeChecker> _self_) {
	jule::Ptr<_213cc06a0_scopeChecker> _212117_base = _213cb5aa2_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_212117_base.get()._field_parent=_self_;
	_212117_base.get()._field_labels=_self_.get()._field_labels;
	_212117_base.get()._field_gotos=_self_.get()._field_gotos;
	_212117_base.get()._field_childIndex=static_cast<jule::I32>((_self_.get()._field_childIndex + 1LL));
	return _212117_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _213cc06a0_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _213cd2096_checkCdef(_213cd1b9a_directiveChecker* _self_, jule::Ptr<_213c0e314_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b81db94c:;
			{
				if ((*(_self_))._field_o.cast_ptr<_213c76a0d_Fn>(&__jule_any_type65).get()._field_Binded) {
					goto _match_end_1b81dbb7d;
				};
				goto _case_begin_1b81dbbd3;
			}
		}
		else {
			_case_begin_1b81dbbd3:;
			{
				_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b81dbb7d:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _213cd231b_checkTypedef(_213cd1b9a_directiveChecker* _self_, jule::Ptr<_213c0e314_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b81dddb1:;
			{
				if ((*(_self_))._field_o.cast_ptr<_213c615db_Struct>(&__jule_any_type66).get()._field_Binded) {
					goto _match_end_1b81de0d1;
				};
				goto _case_begin_1b81de136;
			}
		}
		else {
			_case_begin_1b81de136:;
			{
				_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b81de0d1:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _213cd2591_checkDerive(_213cd1b9a_directiveChecker* _self_, jule::Ptr<_213c0e314_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b81e1347:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_213c615db_Struct>(&__jule_any_type66).get()._field_Binded))) {
					goto _match_end_1b81e1567;
				};
				goto _case_begin_1b81e15bc;
			}
		}
		else {
			_case_begin_1b81e15bc:;
			{
				_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b81e1567:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_213ce3c01_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1b81e49dd:;
		}
		else {
			_case_begin_1b81e1e5d:;
			{
				_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b81e4625:;
	};
}



inline void _213cd2816_checkNamespace(_213cd1b9a_directiveChecker* _self_, jule::Ptr<_213c0e314_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b81e5d0d:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_213c615db_Struct>(&__jule_any_type66).get()._field_Binded))) {
					_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b81e5d74:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_213c76a0d_Fn>(&__jule_any_type65).get()._field_Binded))) {
					_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b81e5dda:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_213d11988_Var>(&__jule_any_type8).get()._field_Binded))) {
					_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1b81e5c31:;
			{
				_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b81e5bcb:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_2114c1b73_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U32>(4LLU))) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b81ed80a:;
			{
				if ((_213d825ec_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_213c0e314_Directive> _11625_typedef = jule::new_ptr<_213c0e314_Directive>(_213c0e314_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					{ jule::Slice<jule::Ptr<_213c0e314_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_11625_typedef); };
				};
			}
		}
		_match_end_1b81ed7a5:;
	};
}



inline void _213cd2a8b_checkDeprecated(_213cd1b9a_directiveChecker* _self_, jule::Ptr<_213c0e314_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b81eb819:;
			{
				if ((*(_self_))._field_o.cast_ptr<_213c615db_Struct>(&__jule_any_type66).get()._field_Binded) {
					_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b8200aa4:;
			{
				if ((*(_self_))._field_o.cast_ptr<_213c76a0d_Fn>(&__jule_any_type65).get()._field_Binded) {
					_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b8200b1a:;
			{
				if ((*(_self_))._field_o.cast_ptr<_213d11988_Var>(&__jule_any_type8).get()._field_Binded) {
					_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1b8200466:;
			{
				_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b8200323:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_2114c1b73_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U32>(4LLU))) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _213cd2d11_checkTest(_213cd1b9a_directiveChecker* _self_, jule::Ptr<_213c0e314_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b8204943:;
			{
				jule::Ptr<_213c76a0d_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_213c76a0d_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_Binded)) && (!(_213c776ac_IsInit(_16717_f.ptr())))) && (!(_213c77448_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1b820823d;
				};
				if (_213c771d4_IsMethod(_16717_f.ptr())) {
					_213ce38d2_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1b820823d;
				};
				goto _case_begin_1b8208293;
			}
		}
		else {
			_case_begin_1b8208293:;
			{
				_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b820823d:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _213cd3086_checkDirective(_213cd1b9a_directiveChecker* _self_, jule::Ptr<_213c0e314_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1b820bc36:;
			{
				_213cd2096_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1b820bc9c:;
			{
				_213cd231b_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1b820bd13:;
			{
				_213cd2591_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1b820bd79:;
			{
				_213cd2816_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1b820c8b3:;
			{
				_213cd2a8b_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1b820c929:;
			{
				_213cd2d11_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1b820c990:;
			{
				_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1b820bbc0:;
			{
				_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b820bb6a:;
	};
}



inline void _213cd3262_check(_213cd1b9a_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b820eb6d:;
		if (it != expr_end) {
			jule::Ptr<_213c0e314_Directive> _20821_d = *it;
			{
				_213cd3086_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1b820eb6d:;
			++it;
			goto _iter_begin_1b820eb6d;
		}
		_iter_end_1b820eb6d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213cd1b9a_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _213cd8245_SelectPackage(_213cd7c7d_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_213d11988_Var> _213cd85ec_FindVar(_213cd7c7d_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_213cda027_isLookupable(_self_, _18926_ident)))) {
		return nullptr;;
	};
	return _213cd5495_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _18926_ident, false);;
}



inline jule::Ptr<_213d87adb_TypeAlias> _213cd89a4_FindTypeAlias(_213cd7c7d_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_213cda027_isLookupable(_self_, _20132_ident)))) {
		return nullptr;;
	};
	return _213cd58c4_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20132_ident, false);;
}



inline jule::Ptr<_213c615db_Struct> _213cd8d5b_FindStruct(_213cd7c7d_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_213cda027_isLookupable(_self_, _21329_ident)))) {
		return nullptr;;
	};
	return _213cd5cae_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21329_ident, false);;
}



inline jule::Ptr<_213c76a0d_Fn> _213cd9213_FindFn(_213cd7c7d_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_213cda027_isLookupable(_self_, _22525_ident)))) {
		return nullptr;;
	};
	return _213cd6221_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22525_ident, false);;
}



inline jule::Ptr<_213c88b63_Trait> _213cd9521_FindTrait(_213cd7c7d_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_213cda027_isLookupable(_self_, _23628_ident)))) {
		return nullptr;;
	};
	return _213cd652e_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23628_ident);;
}



inline jule::Ptr<_213c8b3e6_Enum> _213cd982e_FindEnum(_213cd7c7d_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_213cda027_isLookupable(_self_, _24727_ident)))) {
		return nullptr;;
	};
	return _213cd6870_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _24727_ident);;
}



inline jule::Ptr<_213c8c9e1_TypeEnum> _213cd9b3c_FindTypeEnum(_213cd7c7d_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_213cda027_isLookupable(_self_, _25831_ident)))) {
		return nullptr;;
	};
	return _213cd6bb1_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25831_ident);;
}



inline jule::Bool _213cda027_isLookupable(_213cd7c7d_ImportInfo* _self_, jule::Str _26727_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _213cda335_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_213cda335_existIdent(_self_, _26727_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _213cda335_existIdent(_213cd7c7d_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8229836:;
		if (it != expr_end) {
			jule::Ptr<_2114c1b73_Token> *_28816_sident = it;
			{
				if (((*(_28816_sident)).get()._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1b8229836:;
			++it;
			goto _iter_begin_1b8229836;
		}
		_iter_end_1b8229836:;
	};
	return false;;
}



inline jule::Bool _213cda5bb_isAccessibleViaSelection(_213cd7c7d_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _213cda335_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _213cd7c7d_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _213cdad3b_SelectPackage(_213cda8b8_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_213d11988_Var> _213cdb1e3_FindVar(_213cda8b8_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _213cd5495_findVarInPackage(&((*(_self_))._field_Files), _31426_ident, _31438_binded);;
}



inline jule::Ptr<_213d87adb_TypeAlias> _213cdb59a_FindTypeAlias(_213cda8b8_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _213cd58c4_findTypeAliasInPackage(&((*(_self_))._field_Files), _32032_ident, _32044_binded);;
}



inline jule::Ptr<_213c615db_Struct> _213cdb952_FindStruct(_213cda8b8_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _213cd5cae_findStructInPackage(&((*(_self_))._field_Files), _32629_ident, _32641_binded);;
}



inline jule::Ptr<_213c76a0d_Fn> _213cdbd09_FindFn(_213cda8b8_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _213cd6221_findFnInPackage(&((*(_self_))._field_Files), _33225_ident, _33237_binded);;
}



inline jule::Ptr<_213c88b63_Trait> _213cdc117_FindTrait(_213cda8b8_Package* _self_, jule::Str _33828_ident) {
	return _213cd652e_findTraitInPackage(&((*(_self_))._field_Files), _33828_ident);;
}



inline jule::Ptr<_213c8b3e6_Enum> _213cdc425_FindEnum(_213cda8b8_Package* _self_, jule::Str _34427_ident) {
	return _213cd6870_findEnumInPackage(&((*(_self_))._field_Files), _34427_ident);;
}



inline jule::Ptr<_213c8c9e1_TypeEnum> _213cdc733_FindTypeEnum(_213cda8b8_Package* _self_, jule::Str _35031_ident) {
	return _213cd6bb1_findTypeEnumInPackage(&((*(_self_))._field_Files), _35031_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _213cda8b8_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213ca374e_comptimeTypeInfo> _213ce0978_pushComptimeTypeInfo(_213ce0538_commonSemaMeta* _self_, jule::Ptr<_213d88834_TypeKind>* _21344_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8251d7a:;
		if (it != expr_end) {
			jule::Ptr<_213ca374e_comptimeTypeInfo> _21421_t2 = *it;
			{
				if (((_21421_t2.get()._field_base.get()._field_BindIdent == (*(_21344_t)).get()._field_BindIdent) && _213d88ee9_Equal(_21421_t2.get()._field_base, (*(_21344_t))))) {
					return _21421_t2;;
				};
			}
			_iter_next_1b8251d7a:;
			++it;
			goto _iter_begin_1b8251d7a;
		}
		_iter_end_1b8251d7a:;
	};
	jule::Ptr<_213ca374e_comptimeTypeInfo> _21917_t1 = jule::new_ptr<_213ca374e_comptimeTypeInfo>(_213ca374e_comptimeTypeInfo{._field_base=(*(_21344_t))});;
	{ jule::Slice<jule::Ptr<_213ca374e_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_21917_t1); };
	return _21917_t1;;
}







std::ostream &operator<<(std::ostream &_Stream, _213ce0538_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _213ce14c3_SelectPackage(_213ce1050_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)> _24232_selector) {
	return _213d568ce_SelectPackage((*(_self_))._field_file.ptr(), _24232_selector);;
}



inline jule::Ptr<_213d11988_Var> _213ce187a_FindVar(_213ce1050_Sema* _self_, jule::Str _25226_ident, jule::Bool _25238_binded) {
	jule::Ptr<_213d11988_Var> _25417_v = _213cd5495_findVarInPackage(&((*(_self_))._field_files), _25226_ident, _25238_binded);;
	if ((_25417_v != nullptr)) {
		return _25417_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82550ae:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _26021_imp = *it;
			{
				if ((!(_213cde1b3_impIsLookupable(&(_26021_imp), _25226_ident)))) {
					goto _iter_next_1b82550ae;
				};
				_25417_v=_213cd85ec_FindVar(_26021_imp.ptr(), _25226_ident, _25238_binded);
				if (((_25417_v != nullptr) && _213ce40a8_isAccessibleDefine(_self_, _25417_v.get()._field_Public, _25417_v.get()._field_Token))) {
					return _25417_v;;
				};
			}
			_iter_next_1b82550ae:;
			++it;
			goto _iter_begin_1b82550ae;
		}
		_iter_end_1b82550ae:;
	};
	return nullptr;;
}



inline jule::Ptr<_213d87adb_TypeAlias> _213ce1c32_FindTypeAlias(_213ce1050_Sema* _self_, jule::Str _27932_ident, jule::Bool _27944_binded) {
	jule::Ptr<_213d87adb_TypeAlias> _28117_ta = _213cd58c4_findTypeAliasInPackage(&((*(_self_))._field_files), _27932_ident, _27944_binded);;
	if ((_28117_ta != nullptr)) {
		return _28117_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8257798:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _28721_imp = *it;
			{
				if ((!(_213cde1b3_impIsLookupable(&(_28721_imp), _27932_ident)))) {
					goto _iter_next_1b8257798;
				};
				_28117_ta=_213cd89a4_FindTypeAlias(_28721_imp.ptr(), _27932_ident, _27944_binded);
				if (((_28117_ta != nullptr) && _213ce40a8_isAccessibleDefine(_self_, _28117_ta.get()._field_Public, _28117_ta.get()._field_Token))) {
					return _28117_ta;;
				};
			}
			_iter_next_1b8257798:;
			++it;
			goto _iter_begin_1b8257798;
		}
		_iter_end_1b8257798:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c615db_Struct> _213ce20d9_FindStruct(_213ce1050_Sema* _self_, jule::Str _30629_ident, jule::Bool _30641_binded) {
	jule::Ptr<_213c615db_Struct> _30817_s = _213cd5cae_findStructInPackage(&((*(_self_))._field_files), _30629_ident, _30641_binded);;
	if ((_30817_s != nullptr)) {
		return _30817_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8259e82:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _31321_imp = *it;
			{
				if ((!(_213cde1b3_impIsLookupable(&(_31321_imp), _30629_ident)))) {
					goto _iter_next_1b8259e82;
				};
				_30817_s=_213cd8d5b_FindStruct(_31321_imp.ptr(), _30629_ident, _30641_binded);
				if (((_30817_s != nullptr) && _213ce40a8_isAccessibleDefine(_self_, _30817_s.get()._field_Public, _30817_s.get()._field_Token))) {
					return _30817_s;;
				};
			}
			_iter_next_1b8259e82:;
			++it;
			goto _iter_begin_1b8259e82;
		}
		_iter_end_1b8259e82:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c76a0d_Fn> _213ce2491_FindFn(_213ce1050_Sema* _self_, jule::Str _33125_ident, jule::Bool _33137_binded) {
	jule::Ptr<_213c76a0d_Fn> _33317_f = _213cd6221_findFnInPackage(&((*(_self_))._field_files), _33125_ident, _33137_binded);;
	if ((_33317_f != nullptr)) {
		return _33317_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b825c66b:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _33921_imp = *it;
			{
				if ((!(_213cde1b3_impIsLookupable(&(_33921_imp), _33125_ident)))) {
					goto _iter_next_1b825c66b;
				};
				_33317_f=_213cd9213_FindFn(_33921_imp.ptr(), _33125_ident, _33137_binded);
				if (((_33317_f != nullptr) && _213ce40a8_isAccessibleDefine(_self_, _33317_f.get()._field_Public, _33317_f.get()._field_Token))) {
					return _33317_f;;
				};
			}
			_iter_next_1b825c66b:;
			++it;
			goto _iter_begin_1b825c66b;
		}
		_iter_end_1b825c66b:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c88b63_Trait> _213ce279e_FindTrait(_213ce1050_Sema* _self_, jule::Str _35828_ident) {
	jule::Ptr<_213c88b63_Trait> _36017_t = _213cd652e_findTraitInPackage(&((*(_self_))._field_files), _35828_ident);;
	if ((_36017_t != nullptr)) {
		return _36017_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b825e98c:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _36621_imp = *it;
			{
				if ((!(_213cde1b3_impIsLookupable(&(_36621_imp), _35828_ident)))) {
					goto _iter_next_1b825e98c;
				};
				_36017_t=_213cd9521_FindTrait(_36621_imp.ptr(), _35828_ident);
				if (((_36017_t != nullptr) && _213ce40a8_isAccessibleDefine(_self_, _36017_t.get()._field_Public, _36017_t.get()._field_Token))) {
					return _36017_t;;
				};
			}
			_iter_next_1b825e98c:;
			++it;
			goto _iter_begin_1b825e98c;
		}
		_iter_end_1b825e98c:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c8b3e6_Enum> _213ce2aac_FindEnum(_213ce1050_Sema* _self_, jule::Str _38527_ident) {
	jule::Ptr<_213c8b3e6_Enum> _38717_e = _213cd6870_findEnumInPackage(&((*(_self_))._field_files), _38527_ident);;
	if ((_38717_e != nullptr)) {
		return _38717_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8261e23:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _39321_imp = *it;
			{
				if ((!(_213cde1b3_impIsLookupable(&(_39321_imp), _38527_ident)))) {
					goto _iter_next_1b8261e23;
				};
				_38717_e=_213cd982e_FindEnum(_39321_imp.ptr(), _38527_ident);
				if (((_38717_e != nullptr) && _213ce40a8_isAccessibleDefine(_self_, _38717_e.get()._field_Public, _38717_e.get()._field_Token))) {
					return _38717_e;;
				};
			}
			_iter_next_1b8261e23:;
			++it;
			goto _iter_begin_1b8261e23;
		}
		_iter_end_1b8261e23:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c8c9e1_TypeEnum> _213ce2dba_FindTypeEnum(_213ce1050_Sema* _self_, jule::Str _41231_ident) {
	jule::Ptr<_213c8c9e1_TypeEnum> _41417_e = _213cd6bb1_findTypeEnumInPackage(&((*(_self_))._field_files), _41231_ident);;
	if ((_41417_e != nullptr)) {
		return _41417_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82643a9:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _42021_imp = *it;
			{
				if ((!(_213cde1b3_impIsLookupable(&(_42021_imp), _41231_ident)))) {
					goto _iter_next_1b82643a9;
				};
				_41417_e=_213cd9b3c_FindTypeEnum(_42021_imp.ptr(), _41231_ident);
				if (((_41417_e != nullptr) && _213ce40a8_isAccessibleDefine(_self_, _41417_e.get()._field_Public, _41417_e.get()._field_Token))) {
					return _41417_e;;
				};
			}
			_iter_next_1b82643a9:;
			++it;
			goto _iter_begin_1b82643a9;
		}
		_iter_end_1b82643a9:;
	};
	return nullptr;;
}



inline jule::Bool _213ce3294_isFlag(_213ce1050_Sema* _self_, jule::I32 _43621_flags) {
	return (((*(_self_))._field_flags & _43621_flags) == _43621_flags);;
}



inline void _213ce3519_setCurrentFile(_213ce1050_Sema* _self_, jule::Ptr<_213d56417_SymbolTable> _43837_f) {
	(*(_self_))._field_file=_43837_f;
}



inline void _213ce38d2_pushErr(_213ce1050_Sema* _self_, jule::Ptr<_2114c1b73_Token> _44026_token, jule::Str _44041_fmt, jule::Slice<jule::Any> _44054_args) {
	{ jule::Slice<_2110be2cb_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_213cddd72_compilerErr(&(_44026_token), true, _44041_fmt, _44054_args)); };
}



inline void _213ce3c01_pushSuggestion(_213ce1050_Sema* _self_, jule::Str _44533_fmt, jule::Slice<jule::Any> _44546_args) {
	{
		_213ce0307_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _44533_fmt, _44546_args);
	};
}



inline jule::Bool _213ce40a8_isAccessibleDefine(_213ce1050_Sema* _self_, jule::Bool _45033_public, jule::Ptr<_2114c1b73_Token> _45047_token) {
	return ((_45033_public || (_45047_token.get()._field_File == nullptr)) || (_2114c763a_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _2114c763a_Dir(_45047_token.get()._field_File.ptr())));;
}



inline jule::Bool _213ce4509_isDuplicatedIdent(_213ce1050_Sema* _self_, jule::Uintptr _45732_itself, jule::Str _45749_ident, jule::Bool _45761_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b826a701:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> *_45816_f = it;
			{
				if (_213d595e6_isDuplicatedIdent((*(_45816_f)).ptr(), _45732_itself, _45749_ident, _45761_binded)) {
					return true;;
				};
				{
					auto expr = &((*(_45816_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b826b290:;
					if (it != expr_end) {
						jule::Ptr<_213cd7c7d_ImportInfo> *_46320_imp = it;
						{
							{
								auto expr = &((*(_46320_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b826bd0c:;
								if (it != expr_end) {
									jule::Ptr<_2114c1b73_Token> *_46424_selected = it;
									{
										if (((*(_46424_selected)).get()._field_Kind == _45749_ident)) {
											return true;;
										};
									}
									_iter_next_1b826bd0c:;
									++it;
									goto _iter_begin_1b826bd0c;
								}
								_iter_end_1b826bd0c:;
							};
						}
						_iter_next_1b826b290:;
						++it;
						goto _iter_begin_1b826b290;
					}
					_iter_end_1b826b290:;
				};
			}
			_iter_next_1b826a701:;
			++it;
			goto _iter_begin_1b826a701;
		}
		_iter_end_1b826a701:;
	};
	return false;;
}



inline void _213ce4828_checkDirectives(jule::Ptr<_213ce1050_Sema> _self_, jule::Slice<jule::Ptr<_213c0e314_Directive>>* _47440_d, jule::Any _47466_o) {
	_213cd1b9a_directiveChecker _47517_dc = _213cd1b9a_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_213c0e314_Directive>>>)((&((*(_47440_d)))))), ._field_o=_47466_o};;
	_213cd3262_check(&_47517_dc);
}



inline jule::Bool _213ce4c79_checkGenericQuantity(_213ce1050_Sema* _self_, jule::I32 _48339_required, jule::I32 _48354_given, jule::Ptr<_2114c1b73_Token> _48366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_48339_required == 0LL) && (_48354_given > 0LL))) {
			_case_begin_1b826e32b:;
			{
				_213ce38d2_pushErr(_self_, _48366_token, jule::Str("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_48339_required > 0LL) && (_48354_given == 0LL))) {
			_case_begin_1b826e3a3:;
			{
				_213ce38d2_pushErr(_self_, _48366_token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required < _48354_given)) {
			_case_begin_1b826e42a:;
			{
				_213ce38d2_pushErr(_self_, _48366_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required > _48354_given)) {
			_case_begin_1b826e4a2:;
			{
				_213ce38d2_pushErr(_self_, _48366_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b826e2a4:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b826e1d8:;
	};
}



inline jule::Bool _213ce5153_isDuplicatedImportSelection(_213ce1050_Sema* _self_, jule::Uintptr _50242_itself, jule::Str _50259_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8271d89:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> *_50316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_50316_imp))) == _50242_itself)) {
					goto _iter_end_1b8271d89;
				};
				if (_213cda335_existIdent((*(_50316_imp)).ptr(), _50259_ident)) {
					return true;;
				};
			}
			_iter_next_1b8271d89:;
			++it;
			goto _iter_begin_1b8271d89;
		}
		_iter_end_1b8271d89:;
	};
	return false;;
}



inline jule::Any _213ce551b_getImportDef(_213ce1050_Sema* _self_, jule::Str _51527_ident, jule::Ptr<_213cd7c7d_ImportInfo>* _51544_imp) {
	if ((_213e56bbb_findPackageBuiltinDef((*(_51544_imp)).get()._field_LinkPath, _51527_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_51544_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8273c04:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _51921_f = *it;
			{
				;
				jule::Any _52221_def = _213d59195_defByIdent(_51921_f.ptr(), _51527_ident, false);;
				if ((_52221_def != nullptr)) {
					return _52221_def;;
				};
			}
			_iter_next_1b8273c04:;
			++it;
			goto _iter_begin_1b8273c04;
		}
		_iter_end_1b8273c04:;
	};
	return nullptr;;
}



inline jule::Bool _1b8279a95_checkImportSelection(_213ce1050_Sema* _self_, jule::Ptr<_2114c1b73_Token>* _53043_ident, jule::Ptr<_213d11988_Var>* _53059_s) {
	if ((!(_213ce40a8_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_213cd71ab_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b827d703_checkImportSelection(_213ce1050_Sema* _self_, jule::Ptr<_2114c1b73_Token>* _53043_ident, jule::Ptr<_213d87adb_TypeAlias>* _53059_s) {
	if ((!(_213ce40a8_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_213cd71ab_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b828230b_checkImportSelection(_213ce1050_Sema* _self_, jule::Ptr<_2114c1b73_Token>* _53043_ident, jule::Ptr<_213c615db_Struct>* _53059_s) {
	if ((!(_213ce40a8_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_213cd71ab_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b82861cd_checkImportSelection(_213ce1050_Sema* _self_, jule::Ptr<_2114c1b73_Token>* _53043_ident, jule::Ptr<_213c88b63_Trait>* _53059_s) {
	if ((!(_213ce40a8_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_213cd71ab_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b8289d08_checkImportSelection(_213ce1050_Sema* _self_, jule::Ptr<_2114c1b73_Token>* _53043_ident, jule::Ptr<_213c8b3e6_Enum>* _53059_s) {
	if ((!(_213ce40a8_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_213cd71ab_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b828d933_checkImportSelection(_213ce1050_Sema* _self_, jule::Ptr<_2114c1b73_Token>* _53043_ident, jule::Ptr<_213c8c9e1_TypeEnum>* _53059_s) {
	if ((!(_213ce40a8_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_213cd71ab_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b829255d_checkImportSelection(_213ce1050_Sema* _self_, jule::Ptr<_2114c1b73_Token>* _53043_ident, jule::Ptr<_213c76a0d_Fn>* _53059_s) {
	if ((!(_213ce40a8_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_213cd71ab_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_213ce38d2_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _213ce5c03_checkImportSelectedSelections(_213ce1050_Sema* _self_, jule::Ptr<_213cd7c7d_ImportInfo>* _54453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_54453_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82757c7:;
		if (it != expr_end) {
			jule::Ptr<_2114c1b73_Token> _54616_ident = *it;
			{
				if (_54616_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_1b82757c7;
				};
				if (_213ce5153_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_54453_imp)))), _54616_ident.get()._field_Kind)) {
					_213ce38d2_pushErr(_self_, _54616_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
					_213ce3c01_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b82757c7;
				};
				jule::Any _55821_def = _213ce551b_getImportDef(_self_, _54616_ident.get()._field_Kind, _54453_imp);;
				{
					auto &_match_expr{ _55821_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1b82787ca:;
						{
							goto _iter_next_1b82757c7;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b82767b7:;
						{
							jule::Ptr<_213d11988_Var> _56425_v = _55821_def.cast_ptr<_213d11988_Var>(&__jule_any_type8);;
							__jule_func_result=(_1b8279a95_checkImportSelection(_self_, &(_54616_ident), &(_56425_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1b8277e4a:;
						{
							jule::Ptr<_213d87adb_TypeAlias> _56725_ta = _55821_def.cast_ptr<_213d87adb_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1b827d703_checkImportSelection(_self_, &(_54616_ident), &(_56725_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1b8277eb1:;
						{
							jule::Ptr<_213c615db_Struct> _57025_s = _55821_def.cast_ptr<_213c615db_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1b828230b_checkImportSelection(_self_, &(_54616_ident), &(_57025_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1b827890c:;
						{
							jule::Ptr<_213c88b63_Trait> _57325_t = _55821_def.cast_ptr<_213c88b63_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1b82861cd_checkImportSelection(_self_, &(_54616_ident), &(_57325_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1b8278973:;
						{
							jule::Ptr<_213c8b3e6_Enum> _57625_e = _55821_def.cast_ptr<_213c8b3e6_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1b8289d08_checkImportSelection(_self_, &(_54616_ident), &(_57625_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1b82789d9:;
						{
							jule::Ptr<_213c8c9e1_TypeEnum> _57925_e = _55821_def.cast_ptr<_213c8c9e1_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1b828d933_checkImportSelection(_self_, &(_54616_ident), &(_57925_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1b8278a50:;
						{
							jule::Ptr<_213c76a0d_Fn> _58225_f = _55821_def.cast_ptr<_213c76a0d_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1b829255d_checkImportSelection(_self_, &(_54616_ident), &(_58225_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1b8277c19:;
						{
							_213ce38d2_pushErr(_self_, _54616_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1b82757c7;
						}
					}
					_match_end_1b8277bb4:;
				};
			}
			_iter_next_1b82757c7:;
			++it;
			goto _iter_begin_1b82757c7;
		}
		_iter_end_1b82757c7:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b8296540_checkImportsAllSelectionsFromCollection(_213ce1050_Sema* _self_, jule::Slice<jule::Ptr<_213d11988_Var>>* _59362_s, jule::Ptr<_2114c1b73_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8298113:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b8279a95_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b8298113:;
			++it;
			goto _iter_begin_1b8298113;
		}
		_iter_end_1b8298113:;
	};
	return _59417_ok;;
}

inline jule::Bool _1b82998c8_checkImportsAllSelectionsFromCollection(_213ce1050_Sema* _self_, jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>* _59362_s, jule::Ptr<_2114c1b73_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b829ac1a:;
		if (it != expr_end) {
			jule::Ptr<_213d87adb_TypeAlias> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b827d703_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b829ac1a:;
			++it;
			goto _iter_begin_1b829ac1a;
		}
		_iter_end_1b829ac1a:;
	};
	return _59417_ok;;
}

inline jule::Bool _1b829a038_checkImportsAllSelectionsFromCollection(_213ce1050_Sema* _self_, jule::Slice<jule::Ptr<_213c615db_Struct>>* _59362_s, jule::Ptr<_2114c1b73_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b829d811:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b828230b_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b829d811:;
			++it;
			goto _iter_begin_1b829d811;
		}
		_iter_end_1b829d811:;
	};
	return _59417_ok;;
}

inline jule::Bool _1b829cada_checkImportsAllSelectionsFromCollection(_213ce1050_Sema* _self_, jule::Slice<jule::Ptr<_213c76a0d_Fn>>* _59362_s, jule::Ptr<_2114c1b73_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82a1429:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b829255d_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b82a1429:;
			++it;
			goto _iter_begin_1b82a1429;
		}
		_iter_end_1b82a1429:;
	};
	return _59417_ok;;
}

inline jule::Bool _1b829e15d_checkImportsAllSelectionsFromCollection(_213ce1050_Sema* _self_, jule::Slice<jule::Ptr<_213c88b63_Trait>>* _59362_s, jule::Ptr<_2114c1b73_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82a3ecb:;
		if (it != expr_end) {
			jule::Ptr<_213c88b63_Trait> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b82861cd_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b82a3ecb:;
			++it;
			goto _iter_begin_1b82a3ecb;
		}
		_iter_end_1b82a3ecb:;
	};
	return _59417_ok;;
}

inline jule::Bool _1b82a32e9_checkImportsAllSelectionsFromCollection(_213ce1050_Sema* _self_, jule::Slice<jule::Ptr<_213c8b3e6_Enum>>* _59362_s, jule::Ptr<_2114c1b73_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82a6a7d:;
		if (it != expr_end) {
			jule::Ptr<_213c8b3e6_Enum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b8289d08_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b82a6a7d:;
			++it;
			goto _iter_begin_1b82a6a7d;
		}
		_iter_end_1b82a6a7d:;
	};
	return _59417_ok;;
}

inline jule::Bool _1b82a5d9b_checkImportsAllSelectionsFromCollection(_213ce1050_Sema* _self_, jule::Slice<jule::Ptr<_213c8c9e1_TypeEnum>>* _59362_s, jule::Ptr<_2114c1b73_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82a96b8:;
		if (it != expr_end) {
			jule::Ptr<_213c8c9e1_TypeEnum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b828d933_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b82a96b8:;
			++it;
			goto _iter_begin_1b82a96b8;
		}
		_iter_end_1b82a96b8:;
	};
	return _59417_ok;;
}



inline jule::Bool _213ce642e_checkImportAllSelections(_213ce1050_Sema* _self_, jule::Ptr<_213cd7c7d_ImportInfo>* _60344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_60344_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8293163:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> *_60516_file = it;
			{
				__jule_func_result=(_1b8296540_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Vars), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b82998c8_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeAliases), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b829a038_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Structs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b829cada_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Funcs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b829e15d_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Traits), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b82a32e9_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Enums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b82a5d9b_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeEnums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1b8293163:;
			++it;
			goto _iter_begin_1b8293163;
		}
		_iter_end_1b8293163:;
	};
	return __jule_func_result;;
}



inline jule::Bool _213ce674d_checkImportSelections(_213ce1050_Sema* _self_, jule::Ptr<_213cd7c7d_ImportInfo>* _61745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_61745_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _213ce5c03_checkImportSelectedSelections(_self_, _61745_imp);
		return __jule_func_result;;
	} else if ((*(_61745_imp)).get()._field_ImportAll) {
		__jule_func_result = _213ce642e_checkImportAllSelections(_self_, _61745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _213ce6a5b_isUseAliasDuplication(_213ce1050_Sema* _self_, jule::Ptr<_213cd7c7d_ImportInfo>* _62641_imp) {
	if (((*(_62641_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82abbc6:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _63121_imp2 = *it;
			{
				if ((_63121_imp2 == (*(_62641_imp)))) {
					goto _iter_end_1b82abbc6;
				};
				if ((_63121_imp2.get()._field_Alias == (*(_62641_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_63121_imp2.get()._field_Ident == _63121_imp2.get()._field_LinkPath) && (_63121_imp2.get()._field_Ident == (*(_62641_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1b82abbc6:;
			++it;
			goto _iter_begin_1b82abbc6;
		}
		_iter_end_1b82abbc6:;
	};
	return false;;
}



inline jule::Bool _213ce6d69_checkImport(_213ce1050_Sema* _self_, jule::Ptr<_213cd7c7d_ImportInfo>* _64635_imp) {
	if (((*(_64635_imp)).get()._field_Binded || ((*(_64635_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_213ce6a5b_isUseAliasDuplication(_self_, _64635_imp)) {
		_213ce38d2_pushErr(_self_, (*(_64635_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_64635_imp)).get()._field_Alias, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_64635_imp)).get()._field_Duplicate))) {
		jule::Ptr<_213ce1050_Sema> _65721_sema = jule::new_ptr<_213ce1050_Sema>(_213ce1050_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_213d0d336_check(_65721_sema, &((*(_64635_imp)).get()._field_Package.get()._field_Files));
		if ((_65721_sema.get()._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append(_65721_sema.get()._field_errors);;
			_65721_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _213ce674d_checkImportSelections(_self_, _64635_imp);;
}



inline void _213ce7045_checkImports(_213ce1050_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82b15d2:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _67221_file = *it;
			{
				_213ce3519_setCurrentFile(_self_, _67221_file);
				{
					auto expr = &(_67221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b82b2ec9:;
					if (it != expr_end) {
						jule::Ptr<_213cd7c7d_ImportInfo> _67425_imp = *it;
						{
							jule::Bool _67521_ok = _213ce6d69_checkImport(_self_, &(_67425_imp));;
							if ((!(_67521_ok))) {
								return;;
							};
						}
						_iter_next_1b82b2ec9:;
						++it;
						goto _iter_begin_1b82b2ec9;
					}
					_iter_end_1b82b2ec9:;
				};
			}
			_iter_next_1b82b15d2:;
			++it;
			goto _iter_begin_1b82b15d2;
		}
		_iter_end_1b82b15d2:;
	};
}



inline void _213ce7221_implFileImpls(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82b2b33:;
		if (it != expr_end) {
			jule::Ptr<_213cb3a17_Impl> _68521_imp = *it;
			{
				_213d04a69_implImpl(_self_, &(_68521_imp));
			}
			_iter_next_1b82b2b33:;
			++it;
			goto _iter_begin_1b82b2b33;
		}
		_iter_end_1b82b2b33:;
	};
}



inline void _213ce73ec_implImpls(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82b4b13:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _69121_file = *it;
			{
				_213ce3519_setCurrentFile(_self_.ptr(), _69121_file);
				_213ce7221_implFileImpls(_self_);
			}
			_iter_next_1b82b4b13:;
			++it;
			goto _iter_begin_1b82b4b13;
		}
		_iter_end_1b82b4b13:;
	};
}



inline void _213ce75c8_checkEnums(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82b58a0:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _69821_file = *it;
			{
				_213ce3519_setCurrentFile(_self_.ptr(), _69821_file);
				{
					
					if ((!(_213d0136d_checkEnumDecls(_self_)))) {
						_case_begin_1b82b6373:;
					}
					else if ((!(_213d015d2_checkTypeEnumDecls(_self_)))) {
						_case_begin_1b82b63ea:;
					}
					_match_end_1b82b62c9:;
				};
			}
			_iter_next_1b82b58a0:;
			++it;
			goto _iter_begin_1b82b58a0;
		}
		_iter_end_1b82b58a0:;
	};
}



inline void _213ce77a4_checkFileInherits(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82b5d56:;
		if (it != expr_end) {
			jule::Ptr<_213c88b63_Trait> _70821_t = *it;
			{
				jule::Bool _70917_ok = _213d02d20__checkTraitDeclInherits(_self_, &(_70821_t));;
				if ((!(_70917_ok))) {
					return;;
				};
			}
			_iter_next_1b82b5d56:;
			++it;
			goto _iter_begin_1b82b5d56;
		}
		_iter_end_1b82b5d56:;
	};
}



inline void _213ce7980_checkInherits(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82b71ba:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _71721_file = *it;
			{
				_213ce3519_setCurrentFile(_self_.ptr(), _71721_file);
				_213ce77a4_checkFileInherits(_self_);
			}
			_iter_next_1b82b71ba:;
			++it;
			goto _iter_begin_1b82b71ba;
		}
		_iter_end_1b82b71ba:;
	};
}



inline _213d99b75_typeChecker _213ce7dd1_typeChecker(jule::Ptr<_213ce1050_Sema> _self_, jule::Trait<_213da6b60_Lookup> _72335_l, jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> _72350_generics, jule::Ptr<_213d98c95_referencer> _72413_referencer) {
	_213d99b75_typeChecker _72517_tc = _213d99b75_typeChecker{._field_s=_self_, ._field_rootLookup=_72335_l, ._field_lookup=_72335_l, ._field_referencer=_72413_referencer, ._field_useGenerics=_72350_generics, };;
	{
		auto &_match_expr{ _72335_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b82b9b07:;
			{
				jule::Ptr<_213cc06a0_scopeChecker> _73421_hard = _213cc373b_getHardRoot(_72335_l.cast_ptr<_213cc06a0_scopeChecker>(0));;
				_72517_tc._field_refers=_73421_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1b82b9a5d:;
	};
	if (((_72413_referencer != nullptr) && (_72413_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _72413_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1b82baec1:;
				{
					_72517_tc._field_ownerAlias=_72413_referencer.get()._field_owner.cast_ptr<_213d87adb_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1b82bad7d:;
		};
	};
	return _72517_tc;;
}



inline jule::Ptr<_213d88834_TypeKind> _213ce83cb_buildTypeWithRefers(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c41d2a_TypeDecl>* _75044_t, jule::Trait<_213da6b60_Lookup> _75067_l, jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> _75113_generics, jule::Ptr<_213d98c95_referencer> _75141_referencer) {
	return ({ auto _wrap_copy = _213ce7dd1_typeChecker(_self_, _75067_l, _75113_generics, _75141_referencer); _213da1ac2_checkDecl(&_wrap_copy, _75044_t); });;
}



inline jule::Bool _213ce88c6_checkTypeWithRefers(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d906d7_TypeSymbol>* _75744_t, jule::Trait<_213da6b60_Lookup> _75764_l, jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> _75813_generics, jule::Ptr<_213d98c95_referencer> _75841_referencer) {
	jule::Bool __jule_func_result = false;
	if (_213d90a4a_checked((*(_75744_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_75744_t)).get()._field_Kind=_213ce83cb_buildTypeWithRefers(_self_, &((*(_75744_t)).get()._field_Decl), _75764_l, _75813_generics, _75841_referencer);
	__jule_func_result = _213d90a4a_checked((*(_75744_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_213cb1b69_constraintChecker> _213ce8b3a_constraintChecker(jule::Ptr<_213ce1050_Sema> _self_) {
	return jule::new_ptr<_213cb1b69_constraintChecker>(_213cb1b69_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _213ce8ee2_checkType(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d906d7_TypeSymbol>* _77234_t, jule::Trait<_213da6b60_Lookup> _77254_l) {
	return _213ce88c6_checkTypeWithRefers(_self_, _77234_t, _77254_l, nullptr, nullptr);;
}



inline jule::Ptr<_213d88834_TypeKind> _213ce9443_buildTypeWithGenerics(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c41d2a_TypeDecl>* _77846_t, jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> _77913_generics, jule::Ptr<_213c7c618_ReferenceStack> _77941_refers) {
	jule::Ptr<_213d99b75_typeChecker> _78017_tc = jule::new_ptr<_213d99b75_typeChecker>(_213d99b75_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_213da6b60_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_213da6b60_Lookup>(_self_, 3), ._field_refers=_77941_refers, ._field_useGenerics=_77913_generics, });;
	return _213da1ac2_checkDecl(_78017_tc.ptr(), _77846_t);;
}



inline jule::Ptr<_213d88834_TypeKind> _213ce9a5e_selectType(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c41d2a_TypeDecl>* _79635_t) {
	jule::Ptr<_213d99b75_typeChecker> _79717_tc = jule::new_ptr<_213d99b75_typeChecker>(_213d99b75_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_213da6b60_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_213da6b60_Lookup>(_self_, 3), ._field_selection=true, });;
	return _213da1ac2_checkDecl(_79717_tc.ptr(), _79635_t);;
}



inline jule::Ptr<_213d5c990_Eval> _213ce9eb0_evalpd(jule::Ptr<_213ce1050_Sema> _self_, jule::Trait<_213da6b60_Lookup> _80830_l, jule::Ptr<_213d88834_TypeKind> _80845_p, jule::Ptr<_213d11988_Var> _80863_owner) {
	jule::Ptr<_213d5c990_Eval> _80917_e = jule::new_ptr<_213d5c990_Eval>(_213d5c990_Eval{._field_s=_self_, ._field_lookup=_80830_l, ._field_owner=_80863_owner, });;
	{
		auto &_match_expr{ _80830_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b82c4617:;
			{
				_80917_e.get()._field_unsafety=_213cc284a_isUnsafe(_80830_l.cast_ptr<_213cc06a0_scopeChecker>(0));
			}
		}
		_match_end_1b82c4529:;
	};
	_80917_e.get()._field_prefix=_80845_p;
	return _80917_e;;
}



inline jule::Ptr<_213d5c990_Eval> _213cea367_evalp(jule::Ptr<_213ce1050_Sema> _self_, jule::Trait<_213da6b60_Lookup> _82329_l, jule::Ptr<_213d88834_TypeKind> _82344_p) {
	return _213ce9eb0_evalpd(_self_, _82329_l, _82344_p, nullptr);;
}



inline jule::Ptr<_213d5c990_Eval> _213cea675_eval(jule::Ptr<_213ce1050_Sema> _self_, jule::Trait<_213da6b60_Lookup> _82828_l) {
	return _213cea367_evalp(_self_, _82828_l, nullptr);;
}



inline jule::Bool _213ceab70_checkAssignType(jule::Ptr<_213ce1050_Sema> _self_, jule::Bool _83235_destIsRef, jule::Ptr<_213d88834_TypeKind>* _83257_dest, jule::Ptr<_213d5ae22_Data>* _83314_d, jule::Ptr<_2114c1b73_Token> _83328_errorToken) {
	if ((*(_83314_d)).get()._field_Decl) {
		_213ce38d2_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_83235_destIsRef) {
		if ((!(_213d88ee9_Equal((*(_83257_dest)), (*(_83314_d)).get()._field_Kind)))) {
			_213ce38d2_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_83257_dest)).ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_83314_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_213d461c6_assignTypeChecker> _84421_atc = jule::new_ptr<_213d461c6_assignTypeChecker>(_213d461c6_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_83257_dest)), ._field_d=(*(_83314_d)), ._field_errorToken=_83328_errorToken});;
		jule::Bool _85017_ok = _213d4734d_check(_84421_atc.ptr());;
		if ((!(_85017_ok))) {
			return false;;
		};
	};
	if (((!(_213d5b791_IsConst((*(_83314_d)).ptr()))) || (_213d8b051_Prim((*(_83257_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _86017_kind = _213d8b051_Prim((*(_83257_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_2121a3aeb_IsSigInt(_86017_kind)) {
			_case_begin_1b82ca970:;
			{
				_2121a79ac_SetI64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_2121a725e_AsI64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_2121a3dd7_IsUnsigInt(_86017_kind)) {
			_case_begin_1b82ca9e7:;
			{
				_2121a7c32_SetU64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_2121a74c3_AsU64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_2121a449d_IsFloat(_86017_kind)) {
			_case_begin_1b82caa6e:;
			{
				_2121a84a2_SetF64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_2121a7737_AsF64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1b82ca909:;
	};
	return true;;
}



inline jule::Bool _213ceb0c1_checkTypeCompatibility(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d88834_TypeKind>* _87447_dest, jule::Ptr<_213d88834_TypeKind>* _87514_src, jule::Ptr<_2114c1b73_Token>* _87535_errorToken) {
	if (((*(_87514_src)) == nullptr)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_213d8cbe0_Tup((*(_87514_src)).ptr()) != nullptr)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_213d4459d_typeCompatibilityChecker _88917_tcc = _213d4459d_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_87447_dest)), ._field_src=(*(_87514_src)), ._field_errorToken=(*(_87535_errorToken))};;
	if (_213d45b43_check(&_88917_tcc)) {
		return true;;
	};
	_213ce38d2_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_213d88834_TypeKind> _213ceb544_buildNonGenericTypeKind(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c41d2a_TypeDecl>* _91048_ast, jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>>* _91114_generics, jule::Slice<jule::Ptr<_213d88834_TypeKind>>* _91150_ignored) {
	jule::Ptr<_213d99b75_typeChecker> _91217_tc = jule::new_ptr<_213d99b75_typeChecker>(_213d99b75_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_213da6b60_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_213da6b60_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_91114_generics)), ._field_ignoredGenerics=(&((*(_91150_ignored)))), });;
	return _213da1ac2_checkDecl(_91217_tc.ptr(), _91048_ast);;
}



inline jule::Bool _213ceb92e_buildFnNonGenericTypeKinds(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c796ae_FnIns>* _92251_f, jule::Slice<jule::Ptr<_213d88834_TypeKind>>* _92267_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>> _92417_generics = nullptr;;
	if (_213c771d4_IsMethod((*(_92251_f)).get()._field_Decl.ptr())) {
		_92417_generics=jule::append((*(_92251_f)).get()._field_Decl.get()._field_Generics,(*(_92251_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_92417_generics=(*(_92251_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_92251_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82d4418:;
		if (it != expr_end) {
			jule::Ptr<_213c787e0_ParamIns> _93121_p = *it;
			{
				if ((!(_213c757a9_IsSelf(_93121_p.get()._field_Decl.ptr())))) {
					_93121_p.get()._field_Kind=_213ceb544_buildNonGenericTypeKind(_self_, &(_93121_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
					__jule_func_result=(__jule_func_result && (_93121_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1b82d4418:;
			++it;
			goto _iter_begin_1b82d4418;
		}
		_iter_end_1b82d4418:;
	};
	if ((!(_213c76e70_IsVoid((*(_92251_f)).get()._field_Decl.ptr())))) {
		(*(_92251_f)).get()._field_Result=_213ceb544_buildNonGenericTypeKind(_self_, &((*(_92251_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
		__jule_func_result=(__jule_func_result && ((*(_92251_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_213c796ae_FnIns> _213cebc4d_getTraitCheckFnKind(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c76a0d_Fn>* _94444_f) {
	if (((*(_94444_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_94444_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_213c796ae_FnIns> _94817_ins = _213c77de9_instanceForce((*(_94444_f)));;
	jule::Ptr<_213d99b75_typeChecker> _95017_tc = jule::new_ptr<_213d99b75_typeChecker>(_213d99b75_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_213da6b60_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_213da6b60_Lookup>(_self_, 3), });;
	{
		auto expr = &(_94817_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82d8b7b:;
		if (it != expr_end) {
			jule::Ptr<_213c787e0_ParamIns> _95521_p = *it;
			{
				if ((!(_213c757a9_IsSelf(_95521_p.get()._field_Decl.ptr())))) {
					_95521_p.get()._field_Kind=_213da1ac2_checkDecl(_95017_tc.ptr(), &(_95521_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1b82d8b7b:;
			++it;
			goto _iter_begin_1b82d8b7b;
		}
		_iter_end_1b82d8b7b:;
	};
	if ((!(_213c76e70_IsVoid((*(_94444_f)).ptr())))) {
		_94817_ins.get()._field_Result=_213da1ac2_checkDecl(_95017_tc.ptr(), &((*(_94444_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _94817_ins;;
}



inline jule::Bool _213cec19e_checkConstraintsFn(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c796ae_FnIns>* _96743_f, jule::Ptr<_2114c1b73_Token>* _96759_et, jule::Ptr<_213c796ae_FnIns> _96775_exist) {
	jule::Ptr<_213cb1b69_constraintChecker> _96817_cc = _213ce8b3a_constraintChecker(_self_);;
	_96817_cc.get()._field_et=(*(_96759_et));
	_96817_cc.get()._field_fi=(*(_96743_f));
	if ((_96775_exist != nullptr)) {
		{
			auto expr = &(_96775_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b82dc08b:;
			if (it != expr_end) {
				jule::I32 _97218_i = it - expr->begin();
				jule::Ptr<_213d870a2_InsGeneric> _97225_g = *it;
				{
					(*(_96743_f)).get()._field_Generics[_97218_i].get()._field_Constraint=_97225_g.get()._field_Constraint;
				}
				_iter_next_1b82dc08b:;
				++it;
				_97218_i++;
				goto _iter_begin_1b82dc08b;
			}
			_iter_end_1b82dc08b:;
		};
	} else {
		_96817_cc.get()._field_uniq=true;
	};
	return _213cb2a05_check(_96817_cc);;
}



inline jule::Bool _213cec600_checkConstraintsStruct(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c64402_StructIns>* _98147_s, jule::Ptr<_2114c1b73_Token>* _98167_et, jule::Ptr<_213c64402_StructIns> _98183_exist) {
	jule::Ptr<_213cb1b69_constraintChecker> _98217_cc = _213ce8b3a_constraintChecker(_self_);;
	_98217_cc.get()._field_et=(*(_98167_et));
	_98217_cc.get()._field_si=(*(_98147_s));
	if ((_98183_exist != nullptr)) {
		{
			auto expr = &(_98183_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b82de874:;
			if (it != expr_end) {
				jule::I32 _98618_i = it - expr->begin();
				jule::Ptr<_213d870a2_InsGeneric> _98625_g = *it;
				{
					(*(_98147_s)).get()._field_Generics[_98618_i].get()._field_Constraint=_98625_g.get()._field_Constraint;
				}
				_iter_next_1b82de874:;
				++it;
				_98618_i++;
				goto _iter_begin_1b82de874;
			}
			_iter_end_1b82de874:;
		};
	} else {
		_98217_cc.get()._field_uniq=true;
	};
	return _213cb2a05_check(_98217_cc);;
}



inline jule::Bool _213cec9a7_fnEnvironment(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c796ae_FnIns>* _99838_f, jule::Fn<jule::Bool(jule::Ptr<_213ce1050_Sema>*,jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>*)> _99849_algo) {
	jule::Ptr<_213ce1050_Sema> _99917_sema = (*(_99838_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_213d56417_SymbolTable> _100017_old = (*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_213ce3519_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100017_old);
	});;
	jule::Ptr<_213d56417_SymbolTable> _100217_file = _213cded95_findFile(&((*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_99838_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_100217_file != nullptr)) {
		_213ce3519_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100217_file);
	};
	jule::I32 _100717_size = (*(_99838_f)).get()._field_Generics.len();;
	if ((((*(_99838_f)).get()._field_Decl != nullptr) && ((*(_99838_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_100717_size+=(*(_99838_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> _101217_generics = jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>::alloc(0LL, _100717_size);;
	_213cdea43_appendGenericTypeAliases(&(_101217_generics), _99838_f);
	jule::Bool _101513_ok = _99849_algo(&(_99917_sema), &(_101217_generics));;
	if ((_99917_sema != _self_)) {
		(_self_.get()._field_errors).append(_99917_sema.get()._field_errors);;
		_99917_sema.get()._field_errors=nullptr;
	};
	return _101513_ok;;
}



inline void _213cecc2c_checkFnParamKind(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c787e0_ParamIns>* _102541_p) {
	(*(_102541_p)).get()._field_Kind.get()._field_Variadic=(*(_102541_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_102541_p)).get()._field_Decl.get()._field_Reference && (!(_213da38d7_isValidForRef(&((*(_102541_p)).get()._field_Kind)))))) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_102541_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_102541_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _213ced03a_reloadFnInsTypes(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c796ae_FnIns> _103240_f) {
	if ((_213c7aa45_IsBuiltin(_103240_f.ptr()) || _213c7aca9_IsAnon(_103240_f.ptr()))) {
		return true;;
	};
	return _213cec9a7_fnEnvironment(_self_, &(_103240_f), jule::Fn<jule::Bool(jule::Ptr<_213ce1050_Sema>*,jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>*)>([=](jule::Ptr<_213ce1050_Sema>* _103643_sema, jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>* _103661_generics) mutable -> jule::Bool {
		jule::Bool _103721_ok = true;;
		{
			auto expr = &(_103240_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b82e9e89:;
			if (it != expr_end) {
				jule::Ptr<_213c787e0_ParamIns> _103825_p = *it;
				{
					if (_213c757a9_IsSelf(_103825_p.get()._field_Decl.ptr())) {
						if (_213c75a1d_IsRef(_103825_p.get()._field_Decl.ptr())) {
							_103825_p.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213d947da_Sptr>(_213d947da_Sptr{._field_Elem=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_103240_f.get()._field_Owner, 0)})}), 21)});
						} else {
							_103825_p.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_103240_f.get()._field_Owner, 0)});
						};
					} else {
						_103825_p.get()._field_Kind=_213ce9443_buildTypeWithGenerics((*(_103643_sema)), &(_103825_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
						if ((_103825_p.get()._field_Kind != nullptr)) {
							_213cecc2c_checkFnParamKind(_self_, &(_103825_p));
						} else {
							_103721_ok=false;
						};
					};
				}
				_iter_next_1b82e9e89:;
				++it;
				goto _iter_begin_1b82e9e89;
			}
			_iter_end_1b82e9e89:;
		};
		if ((!(_213c76e70_IsVoid(_103240_f.get()._field_Decl.ptr())))) {
			_103240_f.get()._field_Result=_213ce9443_buildTypeWithGenerics((*(_103643_sema)), &(_103240_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
			_103721_ok=((_103240_f.get()._field_Result != nullptr) && _103721_ok);
		};
		return _103721_ok;;
	}));;
}



inline jule::Bool _213ced4ad_checkRefValidityForInitExpr(jule::Ptr<_213ce1050_Sema> _self_, jule::Bool _106847_leftMut, jule::Ptr<_213d5ae22_Data>* _106867_d, jule::Ptr<_2114c1b73_Token>* _106882_errorToken) {
	{
		auto &_match_expr{ (*(_106867_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b82ee8b7:;
			{
				goto _match_end_1b82ee950;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b8300401:;
			{
				jule::Ptr<_213c6c790_TraitSubIdentExprModel> _107321_model = (*(_106867_d)).get()._field_Model.cast_ptr<_213c6c790_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_213cdd8cc_isValidModelForRef(&(_107321_model.get()._field_Expr))))) {
					_213ce38d2_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107321_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b8300467:;
			{
				jule::Ptr<_213c6d076_StructSubIdentExprModel> _107921_model = (*(_106867_d)).get()._field_Model.cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_213cdd8cc_isValidModelForRef(&(_107921_model.get()._field_Expr.get()._field_Model))))) {
					_213ce38d2_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107921_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1b82eebc5:;
			{
				_213ce38d2_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b82eec3b:;
			{
				jule::Ptr<_213c68b76_UnaryExprModel> _108921_unary = (*(_106867_d)).get()._field_Model.cast_ptr<_213c68b76_UnaryExprModel>(&__jule_any_type74);;
				if ((_108921_unary.get()._field_Op.get()._field_Id == static_cast<jule::U32>(62LLU))) {
					if ((!(_213cdd8cc_isValidModelForRef(&((*(_106867_d)).get()._field_Model))))) {
						_213ce38d2_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1b82ee950;
				};
				goto _case_begin_1b82eeae8;
			}
		}
		else {
			_case_begin_1b82eeae8:;
			{
				_213ce38d2_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b82ee950:;
	};
	if ((_106847_leftMut && (!((*(_106867_d)).get()._field_Mutable)))) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _213ced7cc_isMutRiskyStruct(_213ce1050_Sema* _self_, jule::Ptr<_213c64402_StructIns>* _111432_s) {
	{
		auto expr = &((*(_111432_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83060b6:;
		if (it != expr_end) {
			jule::Ptr<_213c6390c_FieldIns> *_111516_f = it;
			{
				if ((((*(_111516_f)).get()._field_Decl.get()._field_Mutable && _213d8a0c7_Mutable((*(_111516_f)).get()._field_Kind.ptr())) && _213ce40a8_isAccessibleDefine(_self_, (*(_111516_f)).get()._field_Decl.get()._field_Public, (*(_111516_f)).get()._field_Decl.get()._field_Token))) {
					return true;;
				};
			}
			_iter_next_1b83060b6:;
			++it;
			goto _iter_begin_1b83060b6;
		}
		_iter_end_1b83060b6:;
	};
	return false;;
}



inline jule::Bool _213cedd93_checkValidityForInitExpr(jule::Ptr<_213ce1050_Sema> _self_, jule::Bool _114144_leftMut, jule::Bool _114159_leftRef, jule::Ptr<_213d88834_TypeKind>* _114210_leftKind, jule::Ptr<_213d5ae22_Data>* _114236_d, jule::Ptr<_2114c1b73_Token>* _114251_errorToken) {
	if ((_114144_leftMut && (!((*(_114236_d)).get()._field_Mutable)))) {
		if (_213d8a0c7_Mutable((*(_114236_d)).get()._field_Kind.ptr())) {
			_213ce38d2_pushErr(_self_.ptr(), (*(_114251_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_114236_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
		jule::Ptr<_213c64402_StructIns> _115017_s = _213d8c4a3_Struct((*(_114236_d)).get()._field_Kind.ptr());;
		if (((_115017_s != nullptr) && _213ced7cc_isMutRiskyStruct(_self_.ptr(), &(_115017_s)))) {
			_213ce38d2_pushErr(_self_.ptr(), (*(_114251_errorToken)), jule::Str("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_114236_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	};
	if (_114159_leftRef) {
		if ((!(_213ced4ad_checkRefValidityForInitExpr(_self_, _114144_leftMut, _114236_d, _114251_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_213d461c6_assignTypeChecker> _116117_atc = jule::new_ptr<_213d461c6_assignTypeChecker>(_213d461c6_assignTypeChecker{._field_s=_self_, ._field_d=(*(_114236_d)), ._field_errorToken=(*(_114251_errorToken))});;
	return _213d4689c_checkValidity(_116117_atc.ptr());;
}



inline jule::Bool _213cee25b_checkTypeAliasDeclKind(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d87adb_TypeAlias>* _116947_ta, jule::Trait<_213da6b60_Lookup> _116967_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213d56417_SymbolTable> _117017_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_213ce3519_setCurrentFile(_self_.ptr(), _117017_old);
	});;
	if (((*(_116947_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_213d56417_SymbolTable> _117521_file = _213cded95_findFile(&(_self_.get()._field_files), &((*(_116947_ta)).get()._field_Token.get()._field_File));;
		if ((_117521_file != nullptr)) {
			_213ce3519_setCurrentFile(_self_.ptr(), _117521_file);
		};
	};
	__jule_func_result=_213ce88c6_checkTypeWithRefers(_self_, &((*(_116947_ta)).get()._field_Kind), _116967_l, nullptr, jule::new_ptr<_213d98c95_referencer>(_213d98c95_referencer{._field_ident=(*(_116947_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_116947_ta)), &__jule_any_type67), ._field_refs=(&((*(_116947_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_213d8bc66_Arr((*(_116947_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _213d8bc66_Arr((*(_116947_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_116947_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _213cee57a_checkTypeAliasDecl(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d87adb_TypeAlias>* _119243_ta, jule::Trait<_213da6b60_Lookup> _119263_l) {
	if (_2114c4417_IsIgnoreIdent((*(_119243_ta)).get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_119243_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_213cee25b_checkTypeAliasDeclKind(_self_, _119243_ta, _119263_l);
}



inline void _213cee800_checkTypeAliasDeclDup(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d87adb_TypeAlias>* _120046_ta) {
	if (_2114c4417_IsIgnoreIdent((*(_120046_ta)).get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_120046_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_213ce4509_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_120046_ta)))), (*(_120046_ta)).get()._field_Ident, (*(_120046_ta)).get()._field_Binded)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_120046_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_120046_ta)).get()._field_Ident, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_213cee25b_checkTypeAliasDeclKind(_self_, _120046_ta, jule::Trait<_213da6b60_Lookup>(_self_, 3));
}



inline jule::Bool _213ceea64_checkTypeAliasDecls(jule::Ptr<_213ce1050_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8314712:;
		if (it != expr_end) {
			jule::Ptr<_213d87adb_TypeAlias> _121321_ta = *it;
			{
				_213cee800_checkTypeAliasDeclDup(_self_, &(_121321_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b8314712:;
			++it;
			goto _iter_begin_1b8314712;
		}
		_iter_end_1b8314712:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b83382b3_checkEnumItemsDup(_213ce1050_Sema* _self_, jule::Slice<jule::Ptr<_213c8a901_EnumItem>> _122439_items) {
	{
		auto expr = &(_122439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8339539:;
		if (it != expr_end) {
			jule::Ptr<_213c8a901_EnumItem> *_122516_item = it;
			{
				if ((*(_122516_item)).get()._field_Ident.empty()) {
					goto _iter_next_1b8339539;
				} else if (_2114c4417_IsIgnoreIdent((*(_122516_item)).get()._field_Ident)) {
					_213ce38d2_pushErr(_self_, (*(_122516_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_122439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b833a1c7:;
						if (it != expr_end) {
							jule::Ptr<_213c8a901_EnumItem> *_123124_citem = it;
							{
								if (((*(_122516_item)) == (*(_123124_citem)))) {
									goto _iter_end_1b833a1c7;
								} else if (((*(_122516_item)).get()._field_Ident == (*(_123124_citem)).get()._field_Ident)) {
									_213ce38d2_pushErr(_self_, (*(_122516_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_122516_item)).get()._field_Ident, &__jule_any_type5)}));
									_213ce3c01_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1b833a1c7;
								};
							}
							_iter_next_1b833a1c7:;
							++it;
							goto _iter_begin_1b833a1c7;
						}
						_iter_end_1b833a1c7:;
					};
				};
			}
			_iter_next_1b8339539:;
			++it;
			goto _iter_begin_1b8339539;
		}
		_iter_end_1b8339539:;
	};
}

inline void _1b834280b_checkEnumItemsDup(_213ce1050_Sema* _self_, jule::Slice<jule::Ptr<_213c8c45d_TypeEnumItem>> _122439_items) {
	{
		auto expr = &(_122439_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8343a60:;
		if (it != expr_end) {
			jule::Ptr<_213c8c45d_TypeEnumItem> *_122516_item = it;
			{
				if ((*(_122516_item)).get()._field_Ident.empty()) {
					goto _iter_next_1b8343a60;
				} else if (_2114c4417_IsIgnoreIdent((*(_122516_item)).get()._field_Ident)) {
					_213ce38d2_pushErr(_self_, (*(_122516_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_122439_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b83446ed:;
						if (it != expr_end) {
							jule::Ptr<_213c8c45d_TypeEnumItem> *_123124_citem = it;
							{
								if (((*(_122516_item)) == (*(_123124_citem)))) {
									goto _iter_end_1b83446ed;
								} else if (((*(_122516_item)).get()._field_Ident == (*(_123124_citem)).get()._field_Ident)) {
									_213ce38d2_pushErr(_self_, (*(_122516_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_122516_item)).get()._field_Ident, &__jule_any_type5)}));
									_213ce3c01_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1b83446ed;
								};
							}
							_iter_next_1b83446ed:;
							++it;
							goto _iter_begin_1b83446ed;
						}
						_iter_end_1b83446ed:;
					};
				};
			}
			_iter_next_1b8343a60:;
			++it;
			goto _iter_begin_1b8343a60;
		}
		_iter_end_1b8343a60:;
	};
}



inline void _213d0005e_checkEnumItemsStr(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c8b3e6_Enum>* _124442_e) {
	jule::Ptr<_213d5c990_Eval> _124517_eval = _213cea675_eval(_self_, jule::Trait<_213da6b60_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_124442_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b831611a:;
		if (it != expr_end) {
			jule::Ptr<_213c8a901_EnumItem> _124621_item = *it;
			{
				if (_213c8ac97_AutoExpr(_124621_item.ptr())) {
					_124621_item.get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Constant=static__2121a5966_NewStr(_124621_item.get()._field_Ident)})});
					_124621_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_124621_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_213d5ae22_Data> _125525_d = _213d7945c_evalExpr(_124517_eval, _124621_item.get()._field_Value.get()._field_Expr);;
					if ((_125525_d == nullptr)) {
						goto _iter_next_1b831611a;
					};
					if ((!(_213d5b791_IsConst(_125525_d.ptr())))) {
						_213ce38d2_pushErr(_self_.ptr(), _124621_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_213ceab70_checkAssignType(_self_, false, &((*(_124442_e)).get()._field_Kind.get()._field_Kind), &(_125525_d), _124621_item.get()._field_Token);
					_124621_item.get()._field_Value.get()._field_Data=_125525_d;
				};
			}
			_iter_next_1b831611a:;
			++it;
			goto _iter_begin_1b831611a;
		}
		_iter_end_1b831611a:;
	};
}



inline void _1b831e651_checkEnumItemInt(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d5c990_Eval>* _127046_eval, jule::Ptr<_213c8b3e6_Enum>* _127064_e, jule::Ptr<_213d91089_Prim>* _127075_prim, jule::Ptr<_213c8a901_EnumItem>* _127093_item, jule::U64* _1270115_n) {
	if (_213c8ac97_AutoExpr((*(_127093_item)).ptr())) {
		(*(_127093_item)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		{
			
{
				_case_begin_1b8322324:;
				{
					(*(_127093_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__2121a5427_NewU64((*(_1270115_n)));
				}
			}
			_match_end_1b8322049:;
		};
		(*(_127093_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_127093_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_213d5ae22_Data> _128521_d = _213d7945c_evalExpr((*(_127046_eval)), (*(_127093_item)).get()._field_Value.get()._field_Expr);;
		if ((_128521_d == nullptr)) {
			return;;
		};
		if ((!(_213d5b791_IsConst(_128521_d.ptr())))) {
			_213ce38d2_pushErr(_self_.ptr(), (*(_127093_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_213ceab70_checkAssignType(_self_, false, &((*(_127064_e)).get()._field_Kind.get()._field_Kind), &(_128521_d), (*(_127093_item)).get()._field_Token);
		(*(_127093_item)).get()._field_Value.get()._field_Data=_128521_d;
		{
			
{
				_case_begin_1b8325602:;
				{
					(*(_1270115_n))=static_cast<jule::U64>(_2121a67ad_ReadU64((*(_127093_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b8325514:;
		};
	};
}

inline void _1b832be88_checkEnumItemInt(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d5c990_Eval>* _127046_eval, jule::Ptr<_213c8b3e6_Enum>* _127064_e, jule::Ptr<_213d91089_Prim>* _127075_prim, jule::Ptr<_213c8a901_EnumItem>* _127093_item, jule::I64* _1270115_n) {
	if (_213c8ac97_AutoExpr((*(_127093_item)).ptr())) {
		(*(_127093_item)).get()._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()});
		{
			
{
				_case_begin_1b832ea90:;
				{
					(*(_127093_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__2121a5180_NewI64((*(_1270115_n)));
				}
			}
			_match_end_1b832e83c:;
		};
		(*(_127093_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_127093_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_213d5ae22_Data> _128521_d = _213d7945c_evalExpr((*(_127046_eval)), (*(_127093_item)).get()._field_Value.get()._field_Expr);;
		if ((_128521_d == nullptr)) {
			return;;
		};
		if ((!(_213d5b791_IsConst(_128521_d.ptr())))) {
			_213ce38d2_pushErr(_self_.ptr(), (*(_127093_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_213ceab70_checkAssignType(_self_, false, &((*(_127064_e)).get()._field_Kind.get()._field_Kind), &(_128521_d), (*(_127093_item)).get()._field_Token);
		(*(_127093_item)).get()._field_Value.get()._field_Data=_128521_d;
		{
			
{
				_case_begin_1b8333005:;
				{
					(*(_1270115_n))=static_cast<jule::I64>(_2121a6549_ReadI64((*(_127093_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b8332e8e:;
		};
	};
}



inline void _1b831acce_checkEnumItemsInt1(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d91089_Prim>* _130544_prim, jule::Ptr<_213c8b3e6_Enum>* _130562_e) {
	jule::U64 _130617_max = 0LLU;;
	{
		
{
			_case_begin_1b831cb49:;
			{
				_130617_max=static_cast<jule::U64>(_21219d71c_MaxU(_213d913b9_Str((*(_130544_prim)).ptr())));
			}
		}
		_match_end_1b831c918:;
	};
	jule::Ptr<_213d5c990_Eval> _131617_eval = _213cea675_eval(_self_, jule::Trait<_213da6b60_Lookup>(_self_, 3));;
	jule::U64 _131717_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_213c8a901_EnumItem> _131817_first = (*(_130562_e)).get()._field_Items[0LL];;
	_1b831e651_checkEnumItemInt(_self_, &(_131617_eval), _130562_e, _130544_prim, &(_131817_first), &(_131717_n));
	if ((_131817_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b8325d2d:;
				{
					_131717_n=static_cast<jule::U64>(_2121a74c3_AsU64(_131817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b831e981:;
		};
	};
	{
		auto expr = (*(_130562_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b83214bb:;
		if (it != expr_end) {
			jule::Ptr<_213c8a901_EnumItem> _133021_item = *it;
			{
				if (((_213c8ac97_AutoExpr(_133021_item.ptr()) && (_131717_n > 0LLU)) && ((_130617_max - _131717_n) <= 0LLU))) {
					_213ce38d2_pushErr(_self_.ptr(), _133021_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1b83214bb;
				};
				(_131717_n)++;
				_1b831e651_checkEnumItemInt(_self_, &(_131617_eval), _130562_e, _130544_prim, &(_133021_item), &(_131717_n));
			}
			_iter_next_1b83214bb:;
			++it;
			goto _iter_begin_1b83214bb;
		}
		_iter_end_1b83214bb:;
	};
}

inline void _1b8326735_checkEnumItemsInt1(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d91089_Prim>* _130544_prim, jule::Ptr<_213c8b3e6_Enum>* _130562_e) {
	jule::I64 _130617_max = 0LL;;
	{
		
{
			_case_begin_1b832a22d:;
			{
				_130617_max=static_cast<jule::I64>(_21219d475_MaxI(_213d913b9_Str((*(_130544_prim)).ptr())));
			}
		}
		_match_end_1b832a0b8:;
	};
	jule::Ptr<_213d5c990_Eval> _131617_eval = _213cea675_eval(_self_, jule::Trait<_213da6b60_Lookup>(_self_, 3));;
	jule::I64 _131717_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_213c8a901_EnumItem> _131817_first = (*(_130562_e)).get()._field_Items[0LL];;
	_1b832be88_checkEnumItemInt(_self_, &(_131617_eval), _130562_e, _130544_prim, &(_131817_first), &(_131717_n));
	if ((_131817_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b832c8a1:;
				{
					_131717_n=static_cast<jule::I64>(_2121a725e_AsI64(_131817_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b832b174:;
		};
	};
	{
		auto expr = (*(_130562_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b832d61b:;
		if (it != expr_end) {
			jule::Ptr<_213c8a901_EnumItem> _133021_item = *it;
			{
				if (((_213c8ac97_AutoExpr(_133021_item.ptr()) && (_131717_n > 0LL)) && ((_130617_max - _131717_n) <= 0LL))) {
					_213ce38d2_pushErr(_self_.ptr(), _133021_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1b832d61b;
				};
				(_131717_n)++;
				_1b832be88_checkEnumItemInt(_self_, &(_131617_eval), _130562_e, _130544_prim, &(_133021_item), &(_131717_n));
			}
			_iter_next_1b832d61b:;
			++it;
			goto _iter_begin_1b832d61b;
		}
		_iter_end_1b832d61b:;
	};
}



inline void _213d00b0e_checkEnumItemsInt(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c8b3e6_Enum>* _134042_e) {
	jule::Ptr<_213d91089_Prim> _134113_prim = _213d8b051_Prim((*(_134042_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_2121a3aeb_IsSigInt(_134113_prim.get()._field_Kind)) {
			_case_begin_1b8327eea:;
			{
				_1b8326735_checkEnumItemsInt1(_self_, &(_134113_prim), _134042_e);
			}
		}
		else {
			_case_begin_1b831a570:;
			{
				_1b831acce_checkEnumItemsInt1(_self_, &(_134113_prim), _134042_e);
			}
		}
		_match_end_1b831a509:;
	};
}



inline void _213d00d84_checkEnumDecl(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c8b3e6_Enum>* _135038_e) {
	if (_2114c4417_IsIgnoreIdent((*(_135038_e)).get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_135038_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_213ce4509_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_135038_e)))), (*(_135038_e)).get()._field_Ident, false)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_135038_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_135038_e)).get()._field_Ident, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_135038_e)).get()._field_Items.len() == 0LL)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_135038_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_135038_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1b83382b3_checkEnumItemsDup(_self_.ptr(), (*(_135038_e)).get()._field_Items);
	if (((*(_135038_e)).get()._field_Kind != nullptr)) {
		if ((!(_213ce8ee2_checkType(_self_, &((*(_135038_e)).get()._field_Kind), jule::Trait<_213da6b60_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_135038_e)).get()._field_Kind=_213e55a22_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	jule::Ptr<_213d91089_Prim> _137417_t = _213d8b051_Prim((*(_135038_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_137417_t == nullptr)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_135038_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_213d9428a_IsStr(_137417_t.ptr())) {
			_case_begin_1b833de9a:;
			{
				_213d0005e_checkEnumItemsStr(_self_, _135038_e);
			}
		}
		else if (_2121a417e_IsInt(_213d913b9_Str(_137417_t.ptr()))) {
			_case_begin_1b833d890:;
			{
				_213d00b0e_checkEnumItemsInt(_self_, _135038_e);
			}
		}
		else {
			_case_begin_1b833d054:;
			{
				_213ce38d2_pushErr(_self_.ptr(), (*(_135038_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b833d6a3:;
	};
}



inline void _213d01109_checkTypeEnumDecl(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c8c9e1_TypeEnum>* _139142_e) {
	if (_2114c4417_IsIgnoreIdent((*(_139142_e)).get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_139142_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_213ce4509_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_139142_e)))), (*(_139142_e)).get()._field_Ident, false)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_139142_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_139142_e)).get()._field_Ident, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_139142_e)).get()._field_Items.len() == 0LL)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_139142_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_139142_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1b834280b_checkEnumItemsDup(_self_.ptr(), (*(_139142_e)).get()._field_Items);
	{
		auto expr = &((*(_139142_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8342c07:;
		if (it != expr_end) {
			jule::Ptr<_213c8c45d_TypeEnumItem> _140521_item = *it;
			{
				if ((_140521_item.get()._field_Kind == nullptr)) {
					_213ce38d2_pushErr(_self_.ptr(), _140521_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1b8342c07;
				};
				jule::Bool _141017_ok = _213ce8ee2_checkType(_self_, &(_140521_item.get()._field_Kind), jule::Trait<_213da6b60_Lookup>(_self_, 3));;
				if ((!(_141017_ok))) {
					goto _iter_next_1b8342c07;
				};
				jule::Ptr<_213d91089_Prim> _141417_p = _213d8b051_Prim(_140521_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_141417_p != nullptr) && _213d944ee_IsAny(_141417_p.ptr()))) {
					_213ce38d2_pushErr(_self_.ptr(), _140521_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b8342c07:;
			++it;
			goto _iter_begin_1b8342c07;
		}
		_iter_end_1b8342c07:;
	};
	if (((*(_139142_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_213c8c45d_TypeEnumItem> _142021_item = (*(_139142_e)).get()._field_Items[0LL];;
		_213d88834_TypeKind _142117_tk = _213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>((*(_139142_e)), 4)};;
		if (((_142021_item.get()._field_Kind.get()._field_Kind != nullptr) && _213d88ee9_Equal(_142021_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_213d88834_TypeKind>)((&(_142117_tk))))))) {
			_213ce38d2_pushErr(_self_.ptr(), _142021_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_213c8cd21_Str((*(_139142_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _213d0136d_checkEnumDecls(jule::Ptr<_213ce1050_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b834b31a:;
		if (it != expr_end) {
			jule::Ptr<_213c8b3e6_Enum> _143221_e = *it;
			{
				_213d00d84_checkEnumDecl(_self_, &(_143221_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b834b31a:;
			++it;
			goto _iter_begin_1b834b31a;
		}
		_iter_end_1b834b31a:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _213d015d2_checkTypeEnumDecls(jule::Ptr<_213ce1050_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b834c6b2:;
		if (it != expr_end) {
			jule::Ptr<_213c8c9e1_TypeEnum> _144421_e = *it;
			{
				_213d01109_checkTypeEnumDecl(_self_, &(_144421_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b834c6b2:;
			++it;
			goto _iter_begin_1b834c6b2;
		}
		_iter_end_1b834c6b2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _213d018e0_checkDeclGenerics(_213ce1050_Sema* _self_, jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>>* _145437_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _145437_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b834d9e3:;
		if (it != expr_end) {
			jule::I32 _145613_i = it - expr->begin();
			jule::Ptr<_213c4dcc1_GenericDecl> *_145616_g = it;
			{
				if (_2114c4417_IsIgnoreIdent((*(_145616_g)).get()._field_Ident)) {
					_213ce38d2_pushErr(_self_, (*(_145616_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b834d9e3;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _145437_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b834e807:;
					if (it != expr_end) {
						jule::I32 _146517_j = it - expr->begin();
						jule::Ptr<_213c4dcc1_GenericDecl> *_146520_ct = it;
						{
							{
								
								if ((_146517_j >= _145613_i)) {
									_case_begin_1b8350c9d:;
									{
										goto _iter_end_1b834e807;
									}
								}
								else if (((*(_145616_g)).get()._field_Ident == (*(_146520_ct)).get()._field_Ident)) {
									_case_begin_1b8350d25:;
									{
										_213ce38d2_pushErr(_self_, (*(_145616_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_145616_g)).get()._field_Ident, &__jule_any_type5)}));
										_213ce3c01_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1b834e807;
									}
								}
								_match_end_1b8350b8d:;
							};
						}
						_iter_next_1b834e807:;
						++it;
						_146517_j++;
						goto _iter_begin_1b834e807;
					}
					_iter_end_1b834e807:;
				};
			}
			_iter_next_1b834d9e3:;
			++it;
			_145613_i++;
			goto _iter_begin_1b834d9e3;
		}
		_iter_end_1b834d9e3:;
	};
	return __jule_func_result;;
}



inline jule::Bool _213d01bed_checkFnDeclParamsDup(_213ce1050_Sema* _self_, jule::Ptr<_213c76a0d_Fn>* _148140_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_148140_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8352bd4:;
		if (it != expr_end) {
			jule::I32 _148413_i = it - expr->begin();
			jule::Ptr<_213c751c1_Param> *_148416_p = it;
			{
				{
					auto expr = &((*(_148140_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8353784:;
					if (it != expr_end) {
						jule::Ptr<_213c4dcc1_GenericDecl> *_148620_g = it;
						{
							if (((*(_148416_p)).get()._field_Ident == (*(_148620_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_213ce38d2_pushErr(_self_, (*(_148416_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_148416_p)).get()._field_Ident, &__jule_any_type5)}));
								_213ce3c01_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1b8352bd4;
							};
						}
						_iter_next_1b8353784:;
						++it;
						goto _iter_begin_1b8353784;
					}
					_iter_end_1b8353784:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_148140_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8354103:;
					if (it != expr_end) {
						jule::I32 _149617_j = it - expr->begin();
						jule::Ptr<_213c751c1_Param> *_149620_jp = it;
						{
							{
								
								if ((_149617_j >= _148413_i)) {
									_case_begin_1b8355a3e:;
									{
										goto _iter_end_1b8354103;
									}
								}
								else if (_2114c4417_IsIgnoreIdent((*(_148416_p)).get()._field_Ident) || _2114c4417_IsIgnoreIdent((*(_149620_jp)).get()._field_Ident) || _2114c46ae_IsAnonIdent((*(_148416_p)).get()._field_Ident) || _2114c46ae_IsAnonIdent((*(_149620_jp)).get()._field_Ident)) {
									_case_begin_1b8355ab6:;
									{
										goto _iter_end_1b8354103;
									}
								}
								else if (((*(_148416_p)).get()._field_Ident == (*(_149620_jp)).get()._field_Ident)) {
									_case_begin_1b8355b3d:;
									{
										__jule_func_result=false;
										_213ce38d2_pushErr(_self_, (*(_148416_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_148416_p)).get()._field_Ident, &__jule_any_type5)}));
										_213ce3c01_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1b8352bd4;
									}
								}
								_match_end_1b835591d:;
							};
						}
						_iter_next_1b8354103:;
						++it;
						_149617_j++;
						goto _iter_begin_1b8354103;
					}
					_iter_end_1b8354103:;
				};
			}
			_iter_next_1b8352bd4:;
			++it;
			_148413_i++;
			goto _iter_begin_1b8352bd4;
		}
		_iter_end_1b8352bd4:;
	};
	return __jule_func_result;;
}



inline jule::Bool _213d0200b_checkFnDeclResultDup(_213ce1050_Sema* _self_, jule::Ptr<_213c76a0d_Fn>* _151840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_213c76e70_IsVoid((*(_151840_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_151840_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83586bd:;
		if (it != expr_end) {
			jule::I32 _152513_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> *_152516_v = it;
			{
				if ((_2114c4417_IsIgnoreIdent((*(_152516_v)).get()._field_Kind) || _2114c46ae_IsAnonIdent((*(_152516_v)).get()._field_Kind))) {
					goto _iter_next_1b83586bd;
				};
				{
					auto expr = &((*(_151840_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8359b31:;
					if (it != expr_end) {
						jule::Ptr<_213c4dcc1_GenericDecl> *_153020_g = it;
						{
							if (((*(_152516_v)).get()._field_Kind == (*(_153020_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1b8359b31:;
						++it;
						goto _iter_begin_1b8359b31;
					}
					_iter_end_1b8359b31:;
				};
				{
					auto expr = &((*(_151840_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b835aa55:;
					if (it != expr_end) {
						jule::Ptr<_213c751c1_Param> *_153620_p = it;
						{
							if (((*(_152516_v)).get()._field_Kind == (*(_153620_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1b835aa55:;
						++it;
						goto _iter_begin_1b835aa55;
					}
					_iter_end_1b835aa55:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_151840_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b835bddb:;
					if (it != expr_end) {
						jule::I32 _154417_j = it - expr->begin();
						jule::Ptr<_2114c1b73_Token> *_154420_jv = it;
						{
							{
								
								if ((_154417_j >= _152513_i)) {
									_case_begin_1b835cace:;
									{
										goto _iter_end_1b835bddb;
									}
								}
								else if (((*(_154420_jv)).get()._field_Kind == (*(_152516_v)).get()._field_Kind)) {
									_case_begin_1b835cb56:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1b835c9be:;
							};
						}
						_iter_next_1b835bddb:;
						++it;
						_154417_j++;
						goto _iter_begin_1b835bddb;
					}
					_iter_end_1b835bddb:;
				};
				goto _iter_next_1b83586bd;
				_julec_label_exist:;
				_213ce38d2_pushErr(_self_, (*(_152516_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_152516_v)).get()._field_Kind, &__jule_any_type5)}));
				_213ce3c01_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1b83586bd:;
			++it;
			_152513_i++;
			goto _iter_begin_1b83586bd;
		}
		_iter_end_1b83586bd:;
	};
	return __jule_func_result;;
}



inline jule::Bool _213d02319_checkFnVariadicParam(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c76a0d_Fn>* _156345_f) {
	if (((*(_156345_f)).get()._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_213c751c1_Param> _156717_param = (*(_156345_f)).get()._field_Params[((*(_156345_f)).get()._field_Params.len() - 1LL)];;
	if ((_156717_param.get()._field_Variadic && _156717_param.get()._field_Reference)) {
		_213ce38d2_pushErr(_self_.ptr(), _156717_param.get()._field_Token, jule::Str("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _213d0258e_checkFnDeclPrototype(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c76a0d_Fn>* _157645_f) {
	if (((*(_157645_f)).get()._field_Exceptional && (*(_157645_f)).get()._field_Binded)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_157645_f)).get()._field_Token, jule::Str("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_157645_f)).get()._field_Exceptional) {
		if (_213c77448_IsEntryPoint((*(_157645_f)).ptr())) {
			_213ce38d2_pushErr(_self_.ptr(), (*(_157645_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_213c776ac_IsInit((*(_157645_f)).ptr())) {
			_213ce38d2_pushErr(_self_.ptr(), (*(_157645_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_213d018e0_checkDeclGenerics(_self_.ptr(), &((*(_157645_f)).get()._field_Generics))))) {
			_case_begin_1b8362683:;
		}
		else if ((!(_213d01bed_checkFnDeclParamsDup(_self_.ptr(), _157645_f)))) {
			_case_begin_1b836270a:;
		}
		else if ((!(_213d0200b_checkFnDeclResultDup(_self_.ptr(), _157645_f)))) {
			_case_begin_1b8362782:;
		}
		else if ((!(_213d02319_checkFnVariadicParam(_self_, _157645_f)))) {
			_case_begin_1b836393c:;
		}
		_match_end_1b8362c49:;
	};
}



inline jule::Bool _213d029e0_catchTraitInheritCycle(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c88b63_Trait> _159842_t1, jule::Ptr<_213c88b63_Trait> _159858_t2, jule::Str* _159875_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &(_159858_t2.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b836581d:;
		if (it != expr_end) {
			jule::Ptr<_213d906d7_TypeSymbol> _160021_i = *it;
			{
				if ((_160021_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1b836581d;
				};
				jule::Ptr<_213c88b63_Trait> _160421_t3 = _213d8c717_Trait(_160021_i.get()._field_Kind.ptr());;
				if ((_159842_t1 == _160421_t3)) {
					_213d07264_pushCycleError(_self_.ptr(), &(_159858_t2.get()._field_Ident), &(_160421_t3.get()._field_Ident), _159875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_213d029e0_catchTraitInheritCycle(_self_, _159842_t1, _160421_t3, _159875_message)))) {
					_213d07264_pushCycleError(_self_.ptr(), &(_159858_t2.get()._field_Ident), &(_160421_t3.get()._field_Ident), _159875_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b836581d:;
			++it;
			goto _iter_begin_1b836581d;
		}
		_iter_end_1b836581d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _213d02d20__checkTraitDeclInherits(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c88b63_Trait>* _161748_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_161748_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83684be:;
		if (it != expr_end) {
			jule::I32 _161914_i = it - expr->begin();
			jule::Ptr<_213d906d7_TypeSymbol> _161921_it = *it;
			{
				if ((!(_213ce8ee2_checkType(_self_, &(_161921_it), jule::Trait<_213da6b60_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1b83684be;
				};
				jule::Ptr<_213c88b63_Trait> _162421_t2 = _213d8c717_Trait(_161921_it.get()._field_Kind.ptr());;
				if ((_162421_t2 == nullptr)) {
					_213ce38d2_pushErr(_self_.ptr(), _161921_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*(_161748_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_213d88bdb_Str(_161921_it.get()._field_Kind.ptr()), &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1b83684be;
				};
				{
					auto expr = &((*(_161748_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b836add9:;
					if (it != expr_end) {
						jule::I32 _163017_j = it - expr->begin();
						jule::Ptr<_213d906d7_TypeSymbol> _163020_it2 = *it;
						{
							if ((_163017_j >= _161914_i)) {
								goto _iter_end_1b836add9;
							};
							if (((_163020_it2.get()._field_Kind != nullptr) && _213d88ee9_Equal(_161921_it.get()._field_Kind, _163020_it2.get()._field_Kind))) {
								_213ce38d2_pushErr(_self_.ptr(), _161921_it.get()._field_Decl.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_162421_t2.get()._field_Ident, &__jule_any_type5)}));
								__jule_func_result=false;
								goto _iter_end_1b836add9;
							};
						}
						_iter_next_1b836add9:;
						++it;
						_163017_j++;
						goto _iter_begin_1b836add9;
					}
					_iter_end_1b836add9:;
				};
				if (((*(_161748_t)) == _162421_t2)) {
					_213ce38d2_pushErr(_self_.ptr(), _161921_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_161748_t)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				} else {
					jule::Str _164425_message = jule::Str();;
					__jule_func_result=(__jule_func_result && _213d029e0_catchTraitInheritCycle(_self_, (*(_161748_t)), _162421_t2, &(_164425_message)));
					if ((_164425_message.len() > 0LL)) {
						jule::Str _164729_errMsg = _164425_message;;
						_164425_message=jule::Str();
						_213d07264_pushCycleError(_self_.ptr(), &((*(_161748_t)).get()._field_Ident), &(_162421_t2.get()._field_Ident), &(_164425_message));
						_164729_errMsg+=_164425_message;
						_213ce38d2_pushErr(_self_.ptr(), _161921_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_164729_errMsg, &__jule_any_type5)}));
					};
				};
			}
			_iter_next_1b83684be:;
			++it;
			_161914_i++;
			goto _iter_begin_1b83684be;
		}
		_iter_end_1b83684be:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _213d030a6_checkTraitDeclInherits(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c88b63_Trait>* _165847_t) {
	{
		auto expr = &((*(_165847_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8368d3d:;
		if (it != expr_end) {
			jule::I32 _165914_i = it - expr->begin();
			jule::Ptr<_213d906d7_TypeSymbol> _165921_it = *it;
			{
				jule::Ptr<_213c88b63_Trait> _166021_t1 = _213d8c717_Trait(_165921_it.get()._field_Kind.ptr());;
				{
					auto expr = &((*(_165847_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8371670:;
					if (it != expr_end) {
						jule::I32 _166118_j = it - expr->begin();
						jule::Ptr<_213d906d7_TypeSymbol> _166125_it2 = *it;
						{
							if ((_166118_j == _165914_i)) {
								goto _iter_next_1b8371670;
							};
							jule::Ptr<_213c88b63_Trait> _166525_t2 = _213d8c717_Trait(_166125_it2.get()._field_Kind.ptr());;
							{
								auto expr = &(_166021_t1.get()._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b8372c8c:;
								if (it != expr_end) {
									jule::Ptr<_213c76a0d_Fn> _166629_t1m = *it;
									{
										jule::Ptr<_213c76a0d_Fn> _166729_t2m = _213c89a10_FindMethod(_166525_t2.ptr(), _166629_t1m.get()._field_Ident);;
										if ((_166729_t2m == nullptr)) {
											goto _iter_next_1b8372c8c;
										};
										jule::Ptr<_213c796ae_FnIns> _167125_t1f = _213cebc4d_getTraitCheckFnKind(_self_, &(_166629_t1m));;
										jule::Ptr<_213c796ae_FnIns> _167225_t2f = _213cebc4d_getTraitCheckFnKind(_self_, &(_166729_t2m));;
										if ((!(_213c7a56c_equalTrait(_167125_t1f, &(_167225_t2f))))) {
											_213ce38d2_pushErr(_self_.ptr(), _165921_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*(_165847_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_166525_t2.get()._field_Ident, &__jule_any_type5),jule::Any(_213c7b3c5_GetKindStr(_167125_t1f.ptr(), true), &__jule_any_type5),jule::Any(_213c7b3c5_GetKindStr(_167225_t2f.ptr(), true), &__jule_any_type5)}));
											return;;
										};
									}
									_iter_next_1b8372c8c:;
									++it;
									goto _iter_begin_1b8372c8c;
								}
								_iter_end_1b8372c8c:;
							};
						}
						_iter_next_1b8371670:;
						++it;
						_166118_j++;
						goto _iter_begin_1b8371670;
					}
					_iter_end_1b8371670:;
				};
			}
			_iter_next_1b8368d3d:;
			++it;
			_165914_i++;
			goto _iter_begin_1b8368d3d;
		}
		_iter_end_1b8368d3d:;
	};
}



inline void _213d0332b_checkTraitDeclMethod(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c76a0d_Fn>* _168345_f) {
	if (_2114c4417_IsIgnoreIdent((*(_168345_f)).get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_168345_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_2114c46ae_IsAnonIdent((*(_168345_f)).get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_168345_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*(_168345_f)).get()._field_sema=_self_;
	_213d0258e_checkFnDeclPrototype(_self_, _168345_f);
	jule::Ptr<_213c796ae_FnIns> _169117_ins = _213c7815d_instance((*(_168345_f)));;
	_213ced03a_reloadFnInsTypes(_self_, _169117_ins);
	_169117_ins.get()._field_reloaded=true;
	_213c78438_appendInstance((*(_168345_f)).ptr(), &(_169117_ins));
}



inline void _213d035a1_checkTraitDeclMethods(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c88b63_Trait>* _169746_t) {
	{
		auto expr = &((*(_169746_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83780d3:;
		if (it != expr_end) {
			jule::I32 _169814_i = it - expr->begin();
			jule::Ptr<_213c76a0d_Fn> _169821_f = *it;
			{
				_213d0332b_checkTraitDeclMethod(_self_, &(_169821_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_213c8a12b_findMethodInherit((*(_169746_t)).ptr(), &(_169821_f.get()._field_Ident)) != nullptr)) {
					_213ce38d2_pushErr(_self_.ptr(), _169821_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_169821_f.get()._field_Ident, &__jule_any_type5)}));
					_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1b83780d3;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_169746_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b837a635:;
					if (it != expr_end) {
						jule::I32 _171417_j = it - expr->begin();
						jule::Ptr<_213c76a0d_Fn> _171420_jf = *it;
						{
							{
								
								if ((_171417_j >= _169814_i)) {
									_case_begin_1b837b24b:;
									{
										goto _iter_end_1b837a635;
									}
								}
								else if ((_169821_f.get()._field_Ident == _171420_jf.get()._field_Ident)) {
									_case_begin_1b837b2c3:;
									{
										_213ce38d2_pushErr(_self_.ptr(), _169821_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_169821_f.get()._field_Ident, &__jule_any_type5)}));
										_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1b837a635;
									}
								}
								_match_end_1b837b13b:;
							};
						}
						_iter_next_1b837a635:;
						++it;
						_171417_j++;
						goto _iter_begin_1b837a635;
					}
					_iter_end_1b837a635:;
				};
			}
			_iter_next_1b83780d3:;
			++it;
			_169814_i++;
			goto _iter_begin_1b83780d3;
		}
		_iter_end_1b83780d3:;
	};
}



inline void _213d03826_checkTraitDecl(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c88b63_Trait>* _173339_t) {
	if (_2114c4417_IsIgnoreIdent((*(_173339_t)).get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_173339_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_213ce4509_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_173339_t)))), (*(_173339_t)).get()._field_Ident, false)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_173339_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_173339_t)).get()._field_Ident, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_213d030a6_checkTraitDeclInherits(_self_, _173339_t);
	_213d035a1_checkTraitDeclMethods(_self_, _173339_t);
}



inline jule::Bool _213d03a8a_checkTraitDecls(jule::Ptr<_213ce1050_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8384b8e:;
		if (it != expr_end) {
			jule::Ptr<_213c88b63_Trait> _174721_t = *it;
			{
				_213d03826_checkTraitDecl(_self_, &(_174721_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b8384b8e:;
			++it;
			goto _iter_begin_1b8384b8e;
		}
		_iter_end_1b8384b8e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _213d03e42_checkTraitImplMethods(_213ce1050_Sema* _self_, jule::Ptr<_213c88b63_Trait>* _175745_base, jule::Ptr<_213cb3a17_Impl>* _175760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_175760_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8386454:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> *_175916_f = it;
			{
				if ((_213c89a10_FindMethod((*(_175745_base)).ptr(), (*(_175916_f)).get()._field_Ident) == nullptr)) {
					_213ce38d2_pushErr(_self_, (*(_175916_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_175745_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_175916_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1b8386454:;
			++it;
			goto _iter_begin_1b8386454;
		}
		_iter_end_1b8386454:;
	};
	return __jule_func_result;;
}



inline jule::Bool _213d042e9_implToStruct(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c615db_Struct>* _176837_dest, jule::Ptr<_213cb3a17_Impl>* _176857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_176857_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83884ab:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _177221_f = *it;
			{
				if (((_213c621d0_FindMethod((*(_176837_dest)).ptr(), _177221_f.get()._field_Ident, _177221_f.get()._field_Statically) != nullptr) || (_213c627eb_FindField((*(_176837_dest)).ptr(), _177221_f.get()._field_Ident) != nullptr))) {
					_213ce38d2_pushErr(_self_.ptr(), _177221_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_176837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_177221_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1b83884ab;
				};
				if ((((*(_176837_dest)).get()._field_Generics.len() > 0LL) && (_177221_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_177221_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b838a733:;
						if (it != expr_end) {
							jule::Ptr<_213c4dcc1_GenericDecl> _178024_fg = *it;
							{
								{
									auto expr = &((*(_176837_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b838b019:;
									if (it != expr_end) {
										jule::Ptr<_213c4dcc1_GenericDecl> _178128_dg = *it;
										{
											if ((_178024_fg.get()._field_Ident == _178128_dg.get()._field_Ident)) {
												_213ce38d2_pushErr(_self_.ptr(), _178024_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1b838b019:;
										++it;
										goto _iter_begin_1b838b019;
									}
									_iter_end_1b838b019:;
								};
							}
							_iter_next_1b838a733:;
							++it;
							goto _iter_begin_1b838a733;
						}
						_iter_end_1b838a733:;
					};
				};
				_213ce4828_checkDirectives(_self_, &(_177221_f.get()._field_Directives), jule::Any(_177221_f, &__jule_any_type65));
				_177221_f.get()._field_sema=_self_;
				_177221_f.get()._field_Owner=(*(_176837_dest));
				{ jule::Slice<jule::Ptr<_213c76a0d_Fn>> &__jule_push_dest = (*(_176837_dest)).get()._field_Methods; __jule_push_dest.push(_177221_f); };
			}
			_iter_next_1b83884ab:;
			++it;
			goto _iter_begin_1b83884ab;
		}
		_iter_end_1b83884ab:;
	};
	{
		auto expr = &((*(_176857_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b838d318:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> _179721_v = *it;
			{
				;
				if (((_213c621d0_FindMethod((*(_176837_dest)).ptr(), _179721_v.get()._field_Ident, true) != nullptr) || (_213c624dd_FindStatic((*(_176837_dest)).ptr(), _179721_v.get()._field_Ident) != nullptr))) {
					_213ce38d2_pushErr(_self_.ptr(), _179721_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_176837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_179721_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1b838d318;
				};
				{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = (*(_176837_dest)).get()._field_Statics; __jule_push_dest.push(_179721_v); };
			}
			_iter_next_1b838d318:;
			++it;
			goto _iter_begin_1b838d318;
		}
		_iter_end_1b838d318:;
	};
	return __jule_func_result;;
}



inline void _213d0456e_implTrait(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213cb3a17_Impl>* _181034_decl) {
	jule::Ptr<_213d88834_TypeKind> _181117_base_t = _213ce9a5e_selectType(_self_, &((*(_181034_decl)).get()._field_Base));;
	if ((_181117_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_213c88b63_Trait> _181517_base = _213d8c717_Trait(_181117_base_t.ptr());;
	if ((_181517_base == nullptr)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_181034_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_181117_base_t.ptr()), &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_213d88834_TypeKind> _182217_destT = _213ce9a5e_selectType(_self_, &((*(_181034_decl)).get()._field_Dest));;
	if ((_182217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_213c64402_StructIns> _182617_destS = _213d8c4a3_Struct(_182217_destT.ptr());;
	if ((_182617_destS == nullptr)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_181034_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_182217_destT.ptr()), &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_213c615db_Struct> _183317_dest = _182617_destS.get()._field_Decl;;
	if ((_2114c763a_Dir(_183317_dest.get()._field_Token.get()._field_File.ptr()) != _2114c763a_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_181034_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_213d0ee70_pushImplemented(_181517_base, &(_183317_dest));
	_213d10228_pushImplements(&(_183317_dest), _181517_base);
	if (((*(_181034_decl)).get()._field_Statics.len() > 0LL)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_181034_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_213d03e42_checkTraitImplMethods(_self_.ptr(), &(_181517_base), _181034_decl)))) {
			_case_begin_1b83965a7:;
		}
		else if ((!(_213d042e9_implToStruct(_self_, &(_183317_dest), _181034_decl)))) {
			_case_begin_1b839662e:;
		}
		_match_end_1b8394a6c:;
	};
}



inline void _213d047e4_implStruct(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213cb3a17_Impl>* _185335_decl) {
	jule::Ptr<_213d88834_TypeKind> _185417_destT = _213ce9a5e_selectType(_self_, &((*(_185335_decl)).get()._field_Dest));;
	if ((_185417_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_213c64402_StructIns> _185817_destS = _213d8c4a3_Struct(_185417_destT.ptr());;
	if ((_185817_destS == nullptr)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_185335_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_185417_destT.ptr()), &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_213c615db_Struct> _186517_dest = _185817_destS.get()._field_Decl;;
	if ((_2114c763a_Dir(_186517_dest.get()._field_Token.get()._field_File.ptr()) != _2114c763a_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_185335_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_213d042e9_implToStruct(_self_, &(_186517_dest), _185335_decl)))) {
			_case_begin_1b839ab3e:;
		}
		_match_end_1b8399d3b:;
	};
}



inline void _213d04a69_implImpl(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213cb3a17_Impl>* _187733_decl) {
	{
		
		if (_213cb3dbe_IsTraitImpl((*(_187733_decl)).ptr())) {
			_case_begin_1b839b5e0:;
			{
				_213d0456e_implTrait(_self_, _187733_decl);
			}
		}
		else if (_213cb4133_IsStructImpl((*(_187733_decl)).ptr())) {
			_case_begin_1b839b667:;
			{
				_213d047e4_implStruct(_self_, _187733_decl);
			}
		}
		_match_end_1b839b4d0:;
	};
}



inline void _213d04d88_checkVarDecl(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d11988_Var>* _188837_decl, jule::Trait<_213da6b60_Lookup> _188853_l) {
	if (_2114c4417_IsIgnoreIdent((*(_188837_decl)).get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_188837_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_213d12071_IsTypeInferred((*(_188837_decl)).ptr())) {
		if ((!(_213d11d0c_IsInitialized((*(_188837_decl)).ptr())))) {
			_213ce38d2_pushErr(_self_.ptr(), (*(_188837_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_213ce8ee2_checkType(_self_, &((*(_188837_decl)).get()._field_Kind), _188853_l);
	};
	if (((*(_188837_decl)).get()._field_Constant && (*(_188837_decl)).get()._field_Reference)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_188837_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_213d11d0c_IsInitialized((*(_188837_decl)).ptr())))) {
		if ((*(_188837_decl)).get()._field_Constant) {
			_213ce38d2_pushErr(_self_.ptr(), (*(_188837_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_188837_decl)).get()._field_Statically) {
			_213ce38d2_pushErr(_self_.ptr(), (*(_188837_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_188837_decl)).get()._field_Reference) {
			_213ce38d2_pushErr(_self_.ptr(), (*(_188837_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _213d0510d_checkGlobalVarDecl(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d11988_Var>* _192043_decl) {
	if (_213ce4509_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_192043_decl)))), (*(_192043_decl)).get()._field_Ident, (*(_192043_decl)).get()._field_Binded)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_192043_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_192043_decl)).get()._field_Ident, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_192043_decl)).get()._field_Binded && (*(_192043_decl)).get()._field_Constant)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_192043_decl)).get()._field_Token, jule::Str("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*(_192043_decl)).get()._field_Binded)) && (!((*(_192043_decl)).get()._field_Constant))) && (!((*(_192043_decl)).get()._field_Statically)))) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_192043_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_213ce4828_checkDirectives(_self_, &((*(_192043_decl)).get()._field_Directives), jule::Any((*(_192043_decl)), &__jule_any_type8));
	_213d04d88_checkVarDecl(_self_, _192043_decl, jule::Trait<_213da6b60_Lookup>(_self_, 3));
}



inline jule::Bool _213d05372_checkGlobalDecls(jule::Ptr<_213ce1050_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83a5099:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> _193821_decl = *it;
			{
				_213d0510d_checkGlobalVarDecl(_self_, &(_193821_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b83a5099:;
			++it;
			goto _iter_begin_1b83a5099;
		}
		_iter_end_1b83a5099:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _213d05729_checkStructTraitImpl(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c615db_Struct>* _194845_strct, jule::Ptr<_213c88b63_Trait>* _194866_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_194866_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83a6782:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _194921_tf = *it;
			{
				jule::Bool _195021_exist = false;;
				jule::Ptr<_213c76a0d_Fn> _195121_sf = _213c621d0_FindMethod((*(_194845_strct)).ptr(), _194921_tf.get()._field_Ident, _194921_tf.get()._field_Statically);;
				jule::Ptr<_213c796ae_FnIns> _195217_tfK = _213cebc4d_getTraitCheckFnKind(_self_, &(_194921_tf));;
				if ((_195121_sf != nullptr)) {
					jule::Ptr<_213c796ae_FnIns> _195425_sfK = _213cebc4d_getTraitCheckFnKind(_self_, &(_195121_sf));;
					_195021_exist=_213c7a56c_equalTrait(_195217_tfK, &(_195425_sfK));
				};
				if (_195021_exist) {
					jule::Ptr<_213c0e314_Directive> _195821_d = _213d825ec_findDirective(&(_195121_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_195821_d != nullptr)) {
						_213ce38d2_pushErr(_self_.ptr(), _195821_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_213ce38d2_pushErr(_self_.ptr(), (*(_194845_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_194866_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_213c7b3c5_GetKindStr(_195217_tfK.ptr(), true), &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1b83a6782:;
			++it;
			goto _iter_begin_1b83a6782;
		}
		_iter_end_1b83a6782:;
	};
	return __jule_func_result;;
}



inline jule::Bool _213d05a37_checkStructImpls(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c615db_Struct>* _197241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_197241_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83ab633:;
		if (it != expr_end) {
			jule::Ptr<_213c88b63_Trait> _197421_trt = *it;
			{
				__jule_func_result=(_213d05729_checkStructTraitImpl(_self_, _197241_s, &(_197421_trt)) && __jule_func_result);
			}
			_iter_next_1b83ab633:;
			++it;
			goto _iter_begin_1b83ab633;
		}
		_iter_end_1b83ab633:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _213d05d45_checkStructFields(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c615db_Struct>* _198042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_198042_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83ac898:;
		if (it != expr_end) {
			jule::Ptr<_213c5da17_Field> _198221_f = *it;
			{
				_198221_f.get()._field_Owner=(*(_198042_st));
				{
					auto expr = &((*(_198042_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b83ad3e3:;
					if (it != expr_end) {
						jule::Ptr<_213c5da17_Field> _198420_cf = *it;
						{
							if ((_198221_f == _198420_cf)) {
								goto _iter_end_1b83ad3e3;
							} else if ((_198221_f.get()._field_Ident == _198420_cf.get()._field_Ident)) {
								_213ce38d2_pushErr(_self_.ptr(), _198221_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_198221_f.get()._field_Ident, &__jule_any_type5)}));
								_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1b83ad3e3:;
						++it;
						goto _iter_begin_1b83ad3e3;
					}
					_iter_end_1b83ad3e3:;
				};
			}
			_iter_next_1b83ac898:;
			++it;
			goto _iter_begin_1b83ac898;
		}
		_iter_end_1b83ac898:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _213d060ba_checkStructDecl(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c615db_Struct>* _199740_s) {
	if (_2114c4417_IsIgnoreIdent((*(_199740_s)).get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_199740_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_213ce4509_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_199740_s)))), (*(_199740_s)).get()._field_Ident, (*(_199740_s)).get()._field_Binded)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_199740_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_199740_s)).get()._field_Ident, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_213ce4828_checkDirectives(_self_, &((*(_199740_s)).get()._field_Directives), jule::Any((*(_199740_s)), &__jule_any_type66));
	{
		
		if ((!(_213d018e0_checkDeclGenerics(_self_.ptr(), &((*(_199740_s)).get()._field_Generics))))) {
			_case_begin_1b83b0060:;
		}
		else if ((!(_213d05d45_checkStructFields(_self_, _199740_s)))) {
			_case_begin_1b83b1abc:;
		}
		else if ((!(_213d05a37_checkStructImpls(_self_, _199740_s)))) {
			_case_begin_1b83b1b33:;
		}
		else if ((!(_213d06b37_checkFuncDeclsBy(_self_, &((*(_199740_s)).get()._field_Methods))))) {
			_case_begin_1b83b1b99:;
		}
		_match_end_1b83b198a:;
	};
}



inline jule::Bool _213d0632e_checkStructDecls(jule::Ptr<_213ce1050_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83b33b5:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> _201721_s = *it;
			{
				_213d060ba_checkStructDecl(_self_, &(_201721_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b83b33b5:;
			++it;
			goto _iter_begin_1b83b33b5;
		}
		_iter_end_1b83b33b5:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _213d065a4_checkAnonFuncDecl(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c76a0d_Fn>* _202742_f) {
	(*(_202742_f)).get()._field_sema=_self_;
	_213d0258e_checkFnDeclPrototype(_self_, _202742_f);
}



inline void _213d06829_checkFuncDecl(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c76a0d_Fn>* _203238_f) {
	if (_2114c4417_IsIgnoreIdent((*(_203238_f)).get()._field_Ident)) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_203238_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_213c77921_IsAnon((*(_203238_f)).ptr())) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_203238_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_213ce4828_checkDirectives(_self_, &((*(_203238_f)).get()._field_Directives), jule::Any((*(_203238_f)), &__jule_any_type65));
	_213d065a4_checkAnonFuncDecl(_self_, _203238_f);
	if ((((*(_203238_f)).get()._field_Owner == nullptr) && _213ce4509_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_203238_f)))), (*(_203238_f)).get()._field_Ident, (*(_203238_f)).get()._field_Binded))) {
		if ((*(_203238_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_213c76a0d_Fn> _204421_init = _213ce2491_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_204421_init != nullptr)) {
				return;;
			};
		};
		_213ce38d2_pushErr(_self_.ptr(), (*(_203238_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_203238_f)).get()._field_Ident, &__jule_any_type5)}));
		_213ce3c01_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _213d06b37_checkFuncDeclsBy(jule::Ptr<_213ce1050_Sema> _self_, jule::Slice<jule::Ptr<_213c76a0d_Fn>>* _205441_funcs) {
	{
		auto expr = _205441_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83b8cb1:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _205521_f = *it;
			{
				_213d06829_checkFuncDecl(_self_, &(_205521_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1b83b8cb1:;
			++it;
			goto _iter_begin_1b83b8cb1;
		}
		_iter_end_1b83b8cb1:;
	};
	return true;;
}



inline jule::Bool _213d06d9b_checkFuncDecls(jule::Ptr<_213ce1050_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _213d06b37_checkFuncDeclsBy(_self_, &(_self_.get()._field_file.get()._field_Funcs));
	return __jule_func_result;;
}



inline void _213d07264_pushCycleError(_213ce1050_Sema* _self_, jule::Str* _207030_st1, jule::Str* _207041_st2, jule::Str* _207056_message) {
	;
	jule::Str _207213_refers_to = _2110be71b_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_207030_st1)), &__jule_any_type5),jule::Any((*(_207041_st2)), &__jule_any_type5)}));;
	((*(_207056_message))).buffer.insert(0, (((_21103124e_Repeat(jule::Str(" ", 1), 7LL) + _207213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _213d076b5_checkCrossCycle(_213ce1050_Sema* _self_, jule::Ptr<_213c615db_Struct>* _207631_st1, jule::Ptr<_213c615db_Struct>* _207646_st2, jule::Str* _207665_message) {
	{
		auto expr = &((*(_207646_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83bc3d0:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> *_207716_u = it;
			{
				if (((*(_207716_u)) == (*(_207631_st1)))) {
					_213d07264_pushCycleError(_self_, &((*(_207646_st2)).get()._field_Ident), &((*(_207716_u)).get()._field_Ident), _207665_message);
					return false;;
				};
				if ((!(_213d076b5_checkCrossCycle(_self_, _207631_st1, _207716_u, _207665_message)))) {
					_213d07264_pushCycleError(_self_, &((*(_207646_st2)).get()._field_Ident), &((*(_207716_u)).get()._field_Ident), _207665_message);
					return false;;
				};
			}
			_iter_next_1b83bc3d0:;
			++it;
			goto _iter_begin_1b83bc3d0;
		}
		_iter_end_1b83bc3d0:;
	};
	return true;;
}



inline jule::Bool _213d07b38_checkStructDeriveIllegalCycles(_213ce1050_Sema* _self_, jule::Str _209049_derive, jule::Ptr<_213c615db_Struct>* _209063_st1, jule::Ptr<_213d88834_TypeKind>* _209082_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213c615db_Struct> _209117_st2 = _213da4575_getStructFromKind((*(_209082_k)));;
	if ((_209117_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_209063_st1)) == _209117_st2)) {
		_213ce38d2_pushErr(_self_, (*(_209063_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_209049_derive, &__jule_any_type5),jule::Any((*(_209063_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _210317_message = jule::Str();;
	if ((!(_213d076b5_checkCrossCycle(_self_, _209063_st1, &(_209117_st2), &(_210317_message))))) {
		jule::Str _210521_errMsg = _210317_message;;
		_210317_message=jule::Str();
		_213d07264_pushCycleError(_self_, &((*(_209063_st1)).get()._field_Ident), &(_209117_st2.get()._field_Ident), &(_210317_message));
		_210521_errMsg+=_210317_message;
		_213ce38d2_pushErr(_self_, (*(_209063_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_209049_derive, &__jule_any_type5),jule::Any(_210521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _213d07e79_checkStructInsDeriveClone(_213ce1050_Sema* _self_, jule::Ptr<_213c64402_StructIns> _211548_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_213c62e17_IsDerives(_211548_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_211548_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83c311c:;
		if (it != expr_end) {
			jule::Ptr<_213c6390c_FieldIns> _211921_f = *it;
			{
				if ((_211921_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1b83c311c;
				};
				if ((!(_213d8aa78_SupportsCloning(_211921_f.get()._field_Kind.ptr())))) {
					_213ce38d2_pushErr(_self_, _211548_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_211921_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_213d07b38_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_211548_st.get()._field_Decl), &(_211921_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b83c311c:;
			++it;
			goto _iter_begin_1b83c311c;
		}
		_iter_end_1b83c311c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _213d08166_checkPackageDecls(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83c2a67:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _213721_f = *it;
			{
				_213ce3519_setCurrentFile(_self_.ptr(), _213721_f);
				if ((!(_213ceea64_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b83c2a67:;
			++it;
			goto _iter_begin_1b83c2a67;
		}
		_iter_end_1b83c2a67:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83c640b:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _214421_f = *it;
			{
				_213ce3519_setCurrentFile(_self_.ptr(), _214421_f);
				if ((!(_213d03a8a_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b83c640b:;
			++it;
			goto _iter_begin_1b83c640b;
		}
		_iter_end_1b83c640b:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83c5cac:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _215121_f = *it;
			{
				_213ce3519_setCurrentFile(_self_.ptr(), _215121_f);
				if ((!(_213d05372_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b83c5cac:;
			++it;
			goto _iter_begin_1b83c5cac;
		}
		_iter_end_1b83c5cac:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83c6906:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _215821_f = *it;
			{
				_213ce3519_setCurrentFile(_self_.ptr(), _215821_f);
				{
					
					if ((!(_213d06d9b_checkFuncDecls(_self_)))) {
						_case_begin_1b83c872c:;
					}
					else if ((!(_213d0632e_checkStructDecls(_self_)))) {
						_case_begin_1b83c8793:;
					}
					else {
						_case_begin_1b83c86b6:;
						{
							goto _iter_next_1b83c6906;
						}
					}
					_match_end_1b83c8650:;
				};
				return;;
			}
			_iter_next_1b83c6906:;
			++it;
			goto _iter_begin_1b83c6906;
		}
		_iter_end_1b83c6906:;
	};
}



inline void _213d084a7_checkDataForTypeInference(_213ce1050_Sema* _self_, jule::Ptr<_213d5ae22_Data>* _217045_d, jule::Ptr<_2114c1b73_Token>* _217056_err_token) {
	{
		
		if (_213d5b2b8_IsNil((*(_217045_d)).ptr())) {
			_case_begin_1b83c95eb:;
			{
				_213ce38d2_pushErr(_self_, (*(_217056_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_213d5b52c_IsVoid((*(_217045_d)).ptr())) {
			_case_begin_1b83c9673:;
			{
				_213ce38d2_pushErr(_self_, (*(_217056_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_217045_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_1b83c96ea:;
			{
				_213ce38d2_pushErr(_self_, (*(_217056_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b83c94ca:;
	};
}



inline void _213d0873d_checkVarValue(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d11988_Var>* _218238_v) {
	if (_213d12071_IsTypeInferred((*(_218238_v)).ptr())) {
		(*(_218238_v)).get()._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=(*(_218238_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_213d084a7_checkDataForTypeInference(_self_.ptr(), &((*(_218238_v)).get()._field_Value.get()._field_Data), &((*(_218238_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_213cedd93_checkValidityForInitExpr(_self_, (*(_218238_v)).get()._field_Mutable, (*(_218238_v)).get()._field_Reference, &((*(_218238_v)).get()._field_Kind.get()._field_Kind), &((*(_218238_v)).get()._field_Value.get()._field_Data), &((*(_218238_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_213d973e2_Arr> _219521_arr = _213d8bc66_Arr((*(_218238_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_219521_arr != nullptr)) {
			if (_219521_arr.get()._field_Auto) {
				jule::Ptr<_213d973e2_Arr> _219825_dataArr = _213d8bc66_Arr((*(_218238_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_219825_dataArr != nullptr)) {
					_219521_arr.get()._field_N=_219825_dataArr.get()._field_N;
				};
			};
		};
		if (_213ceab70_checkAssignType(_self_, (*(_218238_v)).get()._field_Reference, &((*(_218238_v)).get()._field_Kind.get()._field_Kind), &((*(_218238_v)).get()._field_Value.get()._field_Data), (*(_218238_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_213cedd93_checkValidityForInitExpr(_self_, (*(_218238_v)).get()._field_Mutable, (*(_218238_v)).get()._field_Reference, &((*(_218238_v)).get()._field_Kind.get()._field_Kind), &((*(_218238_v)).get()._field_Value.get()._field_Data), &((*(_218238_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_218238_v)).get()._field_Reference && (!(_213da38d7_isValidForRef(&((*(_218238_v)).get()._field_Kind.get()._field_Kind)))))) {
		_213ce38d2_pushErr(_self_.ptr(), (*(_218238_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_218238_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_218238_v)).get()._field_Constant) {
		jule::Bool _222017_comptime = _213d8ce54_comptime((*(_218238_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
		if (((!(_213d5b791_IsConst((*(_218238_v)).get()._field_Value.get()._field_Data.ptr()))) && (!(_222017_comptime)))) {
			_213ce38d2_pushErr(_self_.ptr(), (*(_218238_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_222017_comptime && (_213d8e142_comptimeRange((*(_218238_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()) != nullptr))) {
			_213ce38d2_pushErr(_self_.ptr(), (*(_218238_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_218238_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		(*(_218238_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_213d8cbe0_Tup((*(_218238_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_218238_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _213d08a5c_evalVarValue(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d11988_Var>* _223837_decl, jule::Trait<_213da6b60_Lookup> _223853_l) {
	if ((!(_213d11d0c_IsInitialized((*(_223837_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_213d5c990_Eval> _224317_eval = nullptr;;
	if (((*(_223837_decl)).get()._field_Kind != nullptr)) {
		_224317_eval=_213ce9eb0_evalpd(_self_, _223853_l, (*(_223837_decl)).get()._field_Kind.get()._field_Kind, (*(_223837_decl)));
	} else {
		_224317_eval=_213ce9eb0_evalpd(_self_, _223853_l, nullptr, (*(_223837_decl)));
	};
	_224317_eval.get()._field_immutable=(!((*(_223837_decl)).get()._field_Mutable));
	(*(_223837_decl)).get()._field_Value.get()._field_Data=_213d7945c_evalExpr(_224317_eval, (*(_223837_decl)).get()._field_Value.get()._field_Expr);
}



inline void _213d08d7b_checkVar(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213d11988_Var>* _225533_decl, jule::Trait<_213da6b60_Lookup> _225549_l) {
	_213d08a5c_evalVarValue(_self_, _225533_decl, _225549_l);
	if (((*(_225533_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_213d0873d_checkVarValue(_self_, _225533_decl);
}



inline void _213d09057_checkGlobals(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83da0bd:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> _226521_decl = *it;
			{
				if (_226521_decl.get()._field_Binded) {
					goto _iter_next_1b83da0bd;
				};
				if (((_213d11d0c_IsInitialized(_226521_decl.ptr()) && (_226521_decl.get()._field_Value.get()._field_Data == nullptr)) || (_213d12071_IsTypeInferred(_226521_decl.ptr()) && (_226521_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_213d08d7b_checkVar(_self_, &(_226521_decl), jule::Trait<_213da6b60_Lookup>(_self_, 3));
				};
			}
			_iter_next_1b83da0bd:;
			++it;
			goto _iter_begin_1b83da0bd;
		}
		_iter_end_1b83da0bd:;
	};
}



inline jule::Ptr<_213c796ae_FnIns> _213d0940e_readyToCheckFn(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c64402_StructIns>* _227939_s, jule::Ptr<_213c76a0d_Fn>* _227959_f) {
	jule::Ptr<_213c796ae_FnIns> _228017_ins = _213c7815d_instance((*(_227959_f)));;
	if (((*(_227959_f)).get()._field_Instances.len() != 0LL)) {
		return _228017_ins;;
	};
	_228017_ins.get()._field_Owner=(*(_227939_s));
	_213c78438_appendInstance((*(_227959_f)).ptr(), &(_228017_ins));
	_228017_ins.get()._field_reloaded=true;
	if (_213ced03a_reloadFnInsTypes(_self_, _228017_ins)) {
		return _228017_ins;;
	};
	return nullptr;;
}



inline void _213d0972d_checkTypeMethod(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c64402_StructIns>* _229340_s, jule::Ptr<_213c76a0d_Fn>* _229360_f) {
	if (((*(_229360_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_213c796ae_FnIns> _229817_ins = (*(_229360_f)).get()._field_Instances[0LL];;
	if ((_229817_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_213d0be06_checkFnIns(_self_, &(_229817_ins));
}



inline jule::Ptr<_213c796ae_FnIns> _213d09b7e_checkStructInsOp(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c64402_StructIns>* _230641_s, jule::Ptr<_213c76a0d_Fn>* _230661_f, jule::Fn<jule::Bool(jule::Ptr<_213c76a0d_Fn>)> _230669_p) {
	if (((((*(_230661_f)) == nullptr) || ((*(_230661_f)).get()._field_Generics.len() > 0LL)) || (!(_230669_p((*(_230661_f))))))) {
		return nullptr;;
	};
	return (*(_230661_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _213d0a036_checkStructEnv(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c64402_StructIns>* _231639_s, jule::Ptr<_2114c1b73_Token> _231658_errorToken) {
	jule::Bool __jule_func_result = false;
	_213d99b75_typeChecker _231717_tc = _213d99b75_typeChecker{._field_s=(*(_231639_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_213da6b60_Lookup>((*(_231639_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_213da6b60_Lookup>((*(_231639_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_213d98c95_referencer>(_213d98c95_referencer{._field_ident=(*(_231639_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_231639_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_231639_s)).get()._field_Refers, };;
	if (((*(_231639_s)).get()._field_Generics.len() > 0LL)) {
		_231717_tc._field_useGenerics=jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>::alloc(0LL, (*(_231639_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_231639_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b83e4193:;
			if (it != expr_end) {
				jule::I32 _233018_i = it - expr->begin();
				jule::Ptr<_213d870a2_InsGeneric> _233025_g = *it;
				{
					jule::Ptr<_213c4dcc1_GenericDecl> _233125_decl = (*(_231639_s)).get()._field_Decl.get()._field_Generics[_233018_i];;
					{ jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> &__jule_push_dest = _231717_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_213d87adb_TypeAlias>(_213d87adb_TypeAlias{._field_Token=_233125_decl.get()._field_Token, ._field_Ident=_233125_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=_233025_g.get()._field_Kind}), })); };
				}
				_iter_next_1b83e4193:;
				++it;
				_233018_i++;
				goto _iter_begin_1b83e4193;
			}
			_iter_end_1b83e4193:;
		};
	};
	jule::Ptr<_213d56417_SymbolTable> _234017_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_213ce3519_setCurrentFile(_self_.ptr(), _234017_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_231639_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_213d56417_SymbolTable> _234421_file = _213cded95_findFile(&(_self_.get()._field_files), &((*(_231639_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_234421_file != nullptr)) {
			_213ce3519_setCurrentFile(_self_.ptr(), _234421_file);
		};
	};
	if (((*(_231639_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_213cb1b69_constraintChecker> _235121_cc = _213ce8b3a_constraintChecker(_self_);;
		_235121_cc.get()._field_et=_231658_errorToken;
		_235121_cc.get()._field_si=(*(_231639_s));
		_235121_cc.get()._field_genericsA=_231717_tc._field_useGenerics;
		_235121_cc.get()._field_uniq=true;
		if ((!(_213cb2a05_check(_235121_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_231639_s)).get()._field_Statics.len() > 0LL)) {
		jule::I32 _236421_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_231717_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_231639_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b83ea991:;
			if (it != expr_end) {
				jule::Ptr<_213d11988_Var> _236625_v = *it;
				{
					_213d04d88_checkVarDecl(_self_, &(_236625_v), jule::Trait<_213da6b60_Lookup>(_self_, 3));
					_213d08d7b_checkVar(_self_, &(_236625_v), jule::Trait<_213da6b60_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _236421_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1b83ea991:;
				++it;
				goto _iter_begin_1b83ea991;
			}
			_iter_end_1b83ea991:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_231717_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_213d5c990_Eval> _237717_eval = _213cea675_eval(_self_, jule::Trait<_213da6b60_Lookup>(_self_, 3));;
	(*(_231639_s)).get()._field_Comparable=(!((*(_231639_s)).get()._field_Decl.get()._field_Binded));
	{
		auto expr = &((*(_231639_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83ed642:;
		if (it != expr_end) {
			jule::Ptr<_213c6390c_FieldIns> _237921_f = *it;
			{
				jule::Ptr<_213d88834_TypeKind> _238021_kind = _213da1ac2_checkDecl(&_231717_tc, &(_237921_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_238021_kind != nullptr) && __jule_func_result);
				if ((_238021_kind == nullptr)) {
					if (((_self_ != (*(_231639_s)).get()._field_Decl.get()._field_sema) && ((*(_231639_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						(_self_.get()._field_errors).append((*(_231639_s)).get()._field_Decl.get()._field_sema.get()._field_errors);;
						(*(_231639_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1b83ed642;
				};
				_237921_f.get()._field_Kind=_238021_kind;
				(*(_231639_s)).get()._field_Mutable=((*(_231639_s)).get()._field_Mutable || ((!(_237921_f.get()._field_Decl.get()._field_Mutable)) && _213d8a0c7_Mutable(_237921_f.get()._field_Kind.ptr())));
				(*(_231639_s)).get()._field_Comparable=((*(_231639_s)).get()._field_Comparable && _213d89d63_Comparable(_237921_f.get()._field_Kind.ptr()));
				_213d07e79_checkStructInsDeriveClone(_self_.ptr(), (*(_231639_s)));
				if ((_237921_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1b83ed642;
				};
				_237717_eval.get()._field_prefix=_237921_f.get()._field_Kind;
				_237717_eval.get()._field_field=_237921_f;
				_237921_f.get()._field_Default=_213d7945c_evalExpr(_237717_eval, _237921_f.get()._field_Decl.get()._field_Default);
				if ((_237921_f.get()._field_Default == nullptr)) {
					goto _iter_next_1b83ed642;
				};
				;
				_213ceab70_checkAssignType(_self_, false, &(_237921_f.get()._field_Kind), &(_237921_f.get()._field_Default), _237921_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1b83ed642:;
			++it;
			goto _iter_begin_1b83ed642;
		}
		_iter_end_1b83ed642:;
	};
	return __jule_func_result;;
}



inline jule::Bool _213d0a3dd_precheckStructIns(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c64402_StructIns>* _241442_s, jule::Ptr<_2114c1b73_Token> _241461_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_213d0a036_checkStructEnv(_self_, _241442_s, _241461_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_241442_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8405171:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _241921_f = *it;
			{
				if ((_241921_f.get()._field_Generics.len() == 0LL)) {
					if ((_213d0940e_readyToCheckFn(_self_, _241442_s, &(_241921_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1b8405171:;
			++it;
			goto _iter_begin_1b8405171;
		}
		_iter_end_1b8405171:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _213d0a663_checkStructIns(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c64402_StructIns>* _242939_s) {
	{
		auto expr = &((*(_242939_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84068ae:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _243021_f = *it;
			{
				_213d0972d_checkTypeMethod(_self_, _242939_s, &(_243021_f));
			}
			_iter_next_1b84068ae:;
			++it;
			goto _iter_begin_1b84068ae;
		}
		_iter_end_1b84068ae:;
	};
}



inline void _213d0a8d8_checkTypeStruct(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c615db_Struct>* _243540_s) {
	if ((*(_243540_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_243540_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_243540_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8407edc:;
		if (it != expr_end) {
			jule::Ptr<_213c64402_StructIns> _244821_ins = *it;
			{
				_213d0a663_checkStructIns(_self_, &(_244821_ins));
			}
			_iter_next_1b8407edc:;
			++it;
			goto _iter_begin_1b8407edc;
		}
		_iter_end_1b8407edc:;
	};
}



inline void _213d0aab4_checkStructTypes(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8408680:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> _245421_s = *it;
			{
				_213d0a8d8_checkTypeStruct(_self_, &(_245421_s));
			}
			_iter_next_1b8408680:;
			++it;
			goto _iter_begin_1b8408680;
		}
		_iter_end_1b8408680:;
	};
}



inline void _213d0ad5b_checkStructInsOperators(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c64402_StructIns> _245947_s) {
	{
		auto expr = &(_245947_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b840984b:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _246021_m = *it;
			{
				{
					auto &_match_expr{ _246021_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1b840a5a5:;
						{
							_245947_s.get()._field_Operators._field_Eq=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d136e3_Eq);
							_245947_s.get()._field_Comparable=(_245947_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1b840a61b:;
						{
							_245947_s.get()._field_Operators._field_Gt=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d1398a_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1b840a682:;
						{
							_245947_s.get()._field_Operators._field_GtEq=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d13c32_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1b840a709:;
						{
							_245947_s.get()._field_Operators._field_Lt=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d13ec9_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1b840a781:;
						{
							_245947_s.get()._field_Operators._field_LtEq=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d14271_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1b840a808:;
						{
							_245947_s.get()._field_Operators._field_Shl=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d14859_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1b840a880:;
						{
							_245947_s.get()._field_Operators._field_Shr=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d14b01_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1b840a907:;
						{
							_245947_s.get()._field_Operators._field_Add=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d14d98_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1b840a97e:;
						{
							_245947_s.get()._field_Operators._field_Sub=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d15140_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1b840aa06:;
						{
							_245947_s.get()._field_Operators._field_Div=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d153d7_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1b840aa7d:;
						{
							_245947_s.get()._field_Operators._field_Mul=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d1567e_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1b840ab05:;
						{
							_245947_s.get()._field_Operators._field_Mod=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d15926_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1b840ab7c:;
						{
							_245947_s.get()._field_Operators._field_BitAnd=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d15bbd_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1b840ac04:;
						{
							_245947_s.get()._field_Operators._field_BitOr=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d15e65_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1b840ac7b:;
						{
							_245947_s.get()._field_Operators._field_BitXor=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d1620c_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1b840ad03:;
						{
							_245947_s.get()._field_Operators._field_Neg=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d167e5_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1b840ad7a:;
						{
							_245947_s.get()._field_Operators._field_Pos=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d16a8c_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1b840ae02:;
						{
							_245947_s.get()._field_Operators._field_BitNot=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d16d34_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1b840ae79:;
						{
							_245947_s.get()._field_Operators._field_AddAssign=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d1741c_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1b840b001:;
						{
							_245947_s.get()._field_Operators._field_SubAssign=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d176b4_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1b840b078:;
						{
							_245947_s.get()._field_Operators._field_DivAssign=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d1795b_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1b840b100:;
						{
							_245947_s.get()._field_Operators._field_MulAssign=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d17c03_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1b840b177:;
						{
							_245947_s.get()._field_Operators._field_ModAssign=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d17e9a_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1b840b1ee:;
						{
							_245947_s.get()._field_Operators._field_ShlAssign=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d18242_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1b840b276:;
						{
							_245947_s.get()._field_Operators._field_ShrAssign=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d184d9_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1b840b2ed:;
						{
							_245947_s.get()._field_Operators._field_BitOrAssign=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d18781_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1b840b375:;
						{
							_245947_s.get()._field_Operators._field_BitAndAssign=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d18a28_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1b840b3ec:;
						{
							_245947_s.get()._field_Operators._field_BitXorAssign=_213d09b7e_checkStructInsOp(_self_, &(_245947_s), &(_246021_m), static__213d18cc0_BitXorAssign);
						}
					}
					_match_end_1b840a187:;
				};
			}
			_iter_next_1b840984b:;
			++it;
			goto _iter_begin_1b840984b;
		}
		_iter_end_1b840984b:;
	};
}



inline void _213d0b0e2_precheckStructType(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c615db_Struct>* _252343_s) {
	if ((*(_252343_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_252343_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_252343_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_213c64402_StructIns> _253421_ins = _213c61a4d_instance((*(_252343_s)));;
		_253421_ins.get()._field_Checked=true;
		_213c61d28_appendInstance((*(_252343_s)).ptr(), &(_253421_ins));
		_213d0a3dd_precheckStructIns(_self_, &(_253421_ins), nullptr);
	};
	_213d0ad5b_checkStructInsOperators(_self_, (*(_252343_s)).get()._field_Instances[0LL]);
}



inline void _213d0b2bd_precheckStructTypes(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b841c254:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> _254421_s = *it;
			{
				_213d0b0e2_precheckStructType(_self_, &(_254421_s));
			}
			_iter_next_1b841c254:;
			++it;
			goto _iter_begin_1b841c254;
		}
		_iter_end_1b841c254:;
	};
}



inline void _213d0b543_checkRets(_213ce1050_Sema* _self_, jule::Ptr<_213c796ae_FnIns>* _254933_f) {
	if (_213c76e70_IsVoid((*(_254933_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_213d0d732_missingRetChecker _255313_mrc = static__213d0daea_new();;
	jule::Bool _255413_ok = _213d0eb0c_check(&_255313_mrc, (*(_254933_f)).get()._field_Scope);;
	if ((!(_255413_ok))) {
		_213ce38d2_pushErr(_self_, (*(_254933_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _213d0b862_checkFnInsSc(_213ce1050_Sema* _self_, jule::Ptr<_213c796ae_FnIns>* _256036_f, jule::Ptr<_213cc06a0_scopeChecker>* _256052_sc) {
	_213cde4b0_appendRetVars(&((*(_256052_sc)).get()._field_table.get()._field_Vars), _256036_f);
	_213cde768_appendParamVars(&((*(_256052_sc)).get()._field_table.get()._field_Vars), _256036_f);
	_213cdea43_appendGenericTypeAliases(&((*(_256052_sc)).get()._field_table.get()._field_TypeAliases), _256036_f);
	_213cd0ade_check((*(_256052_sc)), &((*(_256036_f)).get()._field_Decl.get()._field_Scope), &((*(_256036_f)).get()._field_Scope));
	if ((!(_213cc2eee_stopped((*(_256052_sc)).ptr())))) {
		_213d0b543_checkRets(_self_, _256036_f);
	};
}



inline void _213d0bb81_checkFnInsCaller(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c796ae_FnIns>* _257341_f, jule::Ptr<_2114c1b73_Token> _257356_caller) {
	if ((*(_257341_f)).get()._field_Decl.get()._field_Binded) {
		return;;
	};
	jule::Ptr<_213d56417_SymbolTable> _257817_old = (*(_257341_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_213ce3519_setCurrentFile((*(_257341_f)).get()._field_Decl.get()._field_sema.ptr(), _257817_old);
	});;
	jule::Ptr<_213d56417_SymbolTable> _258017_file = _213cded95_findFile(&((*(_257341_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_257341_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_258017_file != nullptr)) {
		_213ce3519_setCurrentFile((*(_257341_f)).get()._field_Decl.get()._field_sema.ptr(), _258017_file);
	};
	jule::Ptr<_213cc06a0_scopeChecker> _258517_sc = _213cb5e37_newScopeChecker(&((*(_257341_f)).get()._field_Decl.get()._field_sema), (*(_257341_f)));;
	_258517_sc.get()._field_calledFrom=_257356_caller;
	_213d0b862_checkFnInsSc(_self_.ptr(), _257341_f, &(_258517_sc));
	if (((*(_257341_f)).get()._field_Decl.get()._field_sema != _self_)) {
		(_self_.get()._field_errors).append((*(_257341_f)).get()._field_Decl.get()._field_sema.get()._field_errors);;
		(*(_257341_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _213d0be06_checkFnIns(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c796ae_FnIns>* _259535_f) {
	_213d0bb81_checkFnInsCaller(_self_, _259535_f, nullptr);
}



inline void _213d0c17b_checkFunc(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c76a0d_Fn>* _259934_f) {
	if ((*(_259934_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_259934_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_259934_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8426dc9:;
		if (it != expr_end) {
			jule::Ptr<_213c796ae_FnIns> _260921_ins = *it;
			{
				_213d0be06_checkFnIns(_self_, &(_260921_ins));
			}
			_iter_next_1b8426dc9:;
			++it;
			goto _iter_begin_1b8426dc9;
		}
		_iter_end_1b8426dc9:;
	};
}



inline void _213d0c401_checkTestFn(_213ce1050_Sema* _self_, jule::Ptr<_213c796ae_FnIns>* _261435_f) {
	if ((*(_261435_f)).get()._field_Decl.get()._field_Public) {
		_213ce38d2_pushErr(_self_, (*(_261435_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_213ce3c01_pushSuggestion(_self_, jule::Str("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_261435_f)).get()._field_Decl.get()._field_Unsafety || (!(_213c76e70_IsVoid((*(_261435_f)).get()._field_Decl.ptr())))) || ((*(_261435_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_261435_f)).get()._field_Params.len() != 1LL)) || (*(_261435_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_261435_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_213ce38d2_pushErr(_self_, (*(_261435_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_213ce3c01_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_213d947da_Sptr> _263217_sptr = _213d8b2b5_Sptr((*(_261435_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_263217_sptr == nullptr)) {
		_213ce38d2_pushErr(_self_, (*(_261435_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_213ce3c01_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_213c64402_StructIns> _263913_s = _213d8c4a3_Struct(_263217_sptr.get()._field_Elem.ptr());;
	if (((_263913_s == nullptr) || (!(_213cdcb73_isStdPackage(_263913_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_213ce38d2_pushErr(_self_, (*(_261435_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_213ce3c01_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _213d0c676_precheckFunc(jule::Ptr<_213ce1050_Sema> _self_, jule::Ptr<_213c76a0d_Fn>* _264737_f) {
	if ((*(_264737_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_264737_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_264737_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_213c796ae_FnIns> _265821_ins = _213c77de9_instanceForce((*(_264737_f)));;
		{ jule::Slice<jule::Ptr<_213c796ae_FnIns>> &__jule_push_dest = (*(_264737_f)).get()._field_Instances; __jule_push_dest.push(_265821_ins); };
		jule::Bool _266017_ok = _213ced03a_reloadFnInsTypes(_self_, _265821_ins);;
		_265821_ins.get()._field_reloaded=true;
		if ((_266017_ok && _213da3079_hasDirective(&((*(_264737_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_213d0c401_checkTestFn(_self_.ptr(), &(_265821_ins));
		};
	};
}



inline void _213d0c852_precheckFuncs(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8431b1a:;
		if (it != expr_end) {
			jule::Ptr<_213c88b63_Trait> _267121_decl = *it;
			{
				{
					auto expr = &(_267121_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8432478:;
					if (it != expr_end) {
						jule::Ptr<_213c76a0d_Fn> _267225_m = *it;
						{
							_213d0c676_precheckFunc(_self_, &(_267225_m));
						}
						_iter_next_1b8432478:;
						++it;
						goto _iter_begin_1b8432478;
					}
					_iter_end_1b8432478:;
				};
			}
			_iter_next_1b8431b1a:;
			++it;
			goto _iter_begin_1b8431b1a;
		}
		_iter_end_1b8431b1a:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84320b0:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _267621_decl = *it;
			{
				_213d0c676_precheckFunc(_self_, &(_267621_decl));
			}
			_iter_next_1b84320b0:;
			++it;
			goto _iter_begin_1b84320b0;
		}
		_iter_end_1b84320b0:;
	};
}



inline void _213d0ca2d_checkFuncs(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84332c0:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _268321_decl = *it;
			{
				_213d0c17b_checkFunc(_self_, &(_268321_decl));
			}
			_iter_next_1b84332c0:;
			++it;
			goto _iter_begin_1b84332c0;
		}
		_iter_end_1b84332c0:;
	};
}



inline void _213d0cc09_checkPackageTypes(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8434436:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _269121_f = *it;
			{
				_213ce3519_setCurrentFile(_self_.ptr(), _269121_f);
				_213d09057_checkGlobals(_self_);
				_213d0c852_precheckFuncs(_self_);
				_213d0b2bd_precheckStructTypes(_self_);
			}
			_iter_next_1b8434436:;
			++it;
			goto _iter_begin_1b8434436;
		}
		_iter_end_1b8434436:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84356ce:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _270221_f = *it;
			{
				_213ce3519_setCurrentFile(_self_.ptr(), _270221_f);
				_213d0ca2d_checkFuncs(_self_);
				_213d0aab4_checkStructTypes(_self_);
			}
			_iter_next_1b84356ce:;
			++it;
			goto _iter_begin_1b84356ce;
		}
		_iter_end_1b84356ce:;
	};
}



inline void _213d0cdd5_setFileSemaFields(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84367ce:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _271021_f = *it;
			{
				_271021_f.get()._field_sema=_self_;
			}
			_iter_next_1b84367ce:;
			++it;
			goto _iter_begin_1b84367ce;
		}
		_iter_end_1b84367ce:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8436b0e:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> _271321_st = *it;
			{
				_271321_st.get()._field_sema=_self_;
			}
			_iter_next_1b8436b0e:;
			++it;
			goto _iter_begin_1b8436b0e;
		}
		_iter_end_1b8436b0e:;
	};
}



inline void _213d0d0b1_setSemaFields(jule::Ptr<_213ce1050_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8437648:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _271921_file = *it;
			{
				_213ce3519_setCurrentFile(_self_.ptr(), _271921_file);
				_213d0cdd5_setFileSemaFields(_self_);
			}
			_iter_next_1b8437648:;
			++it;
			goto _iter_begin_1b8437648;
		}
		_iter_end_1b8437648:;
	};
}



inline void _213d0d336_check(jule::Ptr<_213ce1050_Sema> _self_, jule::Slice<jule::Ptr<_213d56417_SymbolTable>>* _272530_files) {
	_self_.get()._field_files=(*(_272530_files));
	_213ce7045_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_213d0d0b1_setSemaFields(_self_);
	_213ce7980_checkInherits(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_213ce73ec_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_213ce75c8_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_213d08166_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_213d0cc09_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _213ce1050_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _213d0d732_missingRetChecker static__213d0daea_new(void) {
	return _213d0d732_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _213d0ddc5_checkConditional(_213d0d732_missingRetChecker* _self_, jule::Ptr<_213cb95cd_Conditional> _277335_c) {
	{
		auto expr = &(_277335_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b843bdab:;
		if (it != expr_end) {
			jule::Ptr<_213cb8e6d_If> _277421_elif = *it;
			{
				if ((_277421_elif == nullptr)) {
					return false;;
				};
				if ((!(_213d0e7ee_checkScope(_self_, _277421_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1b843bdab:;
			++it;
			goto _iter_begin_1b843bdab;
		}
		_iter_end_1b843bdab:;
	};
	return ((_277335_c.get()._field_Default != nullptr) && _213d0e7ee_checkScope(_self_, _277335_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _213d0e1d3_checkMatch(_213d0d732_missingRetChecker* _self_, jule::Ptr<_213cbc889_Match> _278529_m) {
	{
		auto expr = &(_278529_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b843da4a:;
		if (it != expr_end) {
			jule::Ptr<_213cbd3d4_Case> _278621_c = *it;
			{
				if ((_278621_c == nullptr)) {
					return false;;
				};
				jule::I32 _279017_n = (*(_self_))._field_breaked.len();;
				jule::Bool _279117_ok = _213d0e7ee_checkScope(_self_, _278621_c.get()._field_Scope);;
				{
					
					if ((_279017_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1b84404ec:;
						{
							return false;;
						}
					}
					else if ((!(_279117_ok))) {
						_case_begin_1b8440574:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1b84405eb;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1b84405eb:;
						{
							(*(_self_))._field_falled=false;
							if ((_278621_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1b843da4a;
						}
					}
					_match_end_1b8440486:;
				};
			}
			_iter_next_1b843da4a:;
			++it;
			goto _iter_begin_1b843da4a;
		}
		_iter_end_1b843da4a:;
	};
	return ((_278529_m.get()._field_Default != nullptr) && _213d0e7ee_checkScope(_self_, _278529_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _213d0e4e1_checkInfIter(_213d0d732_missingRetChecker* _self_, jule::Ptr<_213cb98b9_InfIter> _281131_it) {
	jule::I32 _281213_n = (*(_self_))._field_breaked.len();;
	if (_213d0e7ee_checkScope(_self_, _281131_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _281213_n);
		return true;;
	};
	if ((_281213_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _281817_itaddr = static_cast<jule::Uintptr>(_281131_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_281213_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b8443ce7:;
			if (it != expr_end) {
				jule::Uintptr _281920_addr = *it;
				{
					if ((_281817_itaddr == _281920_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _281213_n);
						return false;;
					};
				}
				_iter_next_1b8443ce7:;
				++it;
				goto _iter_begin_1b8443ce7;
			}
			_iter_end_1b8443ce7:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _281213_n);
	};
	return true;;
}



inline jule::Bool _213d0e7ee_checkScope(_213d0d732_missingRetChecker* _self_, jule::Ptr<_213cb8a72_Scope> _283029_s) {
	if ((_283029_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_283029_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8445403:;
		if (it != expr_end) {
			jule::Any _283421_st = *it;
			{
				{
					auto &_match_expr{ _283421_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1b84461d4:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1b84462a0:;
						{
							jule::Uintptr _284021_addr = _283421_st.cast_ptr<_213cbaec5_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_284021_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_284021_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1b8446316:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1b844637c:;
						{
							if (_213d0e4e1_checkInfIter(_self_, _283421_st.cast_ptr<_213cb98b9_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1b84463e3:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1b8446459:;
						{
							if (_213d0e7ee_checkScope(_self_, _283421_st.cast_ptr<_213cb8a72_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1b84464d1:;
						{
							{
								auto &_match_expr{ _283421_st.cast_ptr<_213d5ae22_Data>(&__jule_any_type24).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1b8449d64:;
									{
										return true;;
									}
								}
								_match_end_1b8449a9a:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1b8446558:;
						{
							if (_213d0ddc5_checkConditional(_self_, _283421_st.cast_ptr<_213cb95cd_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1b84465d0:;
						{
							if (_213d0e1d3_checkMatch(_self_, _283421_st.cast_ptr<_213cbc889_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_1b84460a2:;
				};
			}
			_iter_next_1b8445403:;
			++it;
			goto _iter_begin_1b8445403;
		}
		_iter_end_1b8445403:;
	};
	return false;;
}



inline jule::Bool _213d0eb0c_check(_213d0d732_missingRetChecker* _self_, jule::Ptr<_213cb8a72_Scope> _287624_s) {
	return _213d0e7ee_checkScope(_self_, _287624_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _213d0d732_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213d10943_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213d11d0c_IsInitialized(_213d11988_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _213d12071_IsTypeInferred(_213d11988_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _213d122d5_untypedConstant(_213d11988_Var* _self_) {
	return (_213d12071_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _213d11988_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__213d12d63_Dispose(jule::Ptr<_213c76a0d_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _213c76e70_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_213c75a1d_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__213d1310a_Str(jule::Ptr<_213c76a0d_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _213c76e70_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _213c75a1d_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_213c796ae_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_213d91089_Prim> _3913_prim = _213d8b051_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _213d9428a_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__213d1344b_logical(jule::Ptr<_213c76a0d_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _213c76e70_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _213c75a1d_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_213c796ae_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_213d91089_Prim> _6413_prim = _213d8b051_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_213d94026_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _213d8c4a3_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__213d136e3_Eq(jule::Ptr<_213c76a0d_Fn> _7218_f) {
	return static__213d1344b_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__213d1398a_Gt(jule::Ptr<_213c76a0d_Fn> _7718_f) {
	return static__213d1344b_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__213d13c32_GtEq(jule::Ptr<_213c76a0d_Fn> _8220_f) {
	return static__213d1344b_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__213d13ec9_Lt(jule::Ptr<_213c76a0d_Fn> _8718_f) {
	return static__213d1344b_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__213d14271_LtEq(jule::Ptr<_213c76a0d_Fn> _9220_f) {
	return static__213d1344b_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__213d145b2_result(jule::Ptr<_213c76a0d_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _213c76e70_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _213c75a1d_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_213c796ae_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_213d8c4a3_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__213d14859_Shl(jule::Ptr<_213c76a0d_Fn> _11819_f) {
	return static__213d145b2_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__213d14b01_Shr(jule::Ptr<_213c76a0d_Fn> _12319_f) {
	return static__213d145b2_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__213d14d98_Add(jule::Ptr<_213c76a0d_Fn> _12819_f) {
	return static__213d145b2_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__213d15140_Sub(jule::Ptr<_213c76a0d_Fn> _13319_f) {
	return static__213d145b2_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__213d153d7_Div(jule::Ptr<_213c76a0d_Fn> _13819_f) {
	return static__213d145b2_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__213d1567e_Mul(jule::Ptr<_213c76a0d_Fn> _14319_f) {
	return static__213d145b2_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__213d15926_Mod(jule::Ptr<_213c76a0d_Fn> _14819_f) {
	return static__213d145b2_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__213d15bbd_BitAnd(jule::Ptr<_213c76a0d_Fn> _15322_f) {
	return static__213d145b2_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__213d15e65_BitOr(jule::Ptr<_213c76a0d_Fn> _15821_f) {
	return static__213d145b2_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__213d1620c_BitXor(jule::Ptr<_213c76a0d_Fn> _16322_f) {
	return static__213d145b2_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__213d1654d_unary(jule::Ptr<_213c76a0d_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _213c76e70_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _213c75a1d_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_213c796ae_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_213d8c4a3_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__213d167e5_Neg(jule::Ptr<_213c76a0d_Fn> _18719_f) {
	return static__213d1654d_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__213d16a8c_Pos(jule::Ptr<_213c76a0d_Fn> _19219_f) {
	return static__213d1654d_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__213d16d34_BitNot(jule::Ptr<_213c76a0d_Fn> _19722_f) {
	return static__213d1654d_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__213d17175_assign(jule::Ptr<_213c76a0d_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_213c76e70_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _213c75a1d_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__213d1741c_AddAssign(jule::Ptr<_213c76a0d_Fn> _22125_f) {
	return static__213d17175_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__213d176b4_SubAssign(jule::Ptr<_213c76a0d_Fn> _22625_f) {
	return static__213d17175_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__213d1795b_DivAssign(jule::Ptr<_213c76a0d_Fn> _23125_f) {
	return static__213d17175_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__213d17c03_MulAssign(jule::Ptr<_213c76a0d_Fn> _23625_f) {
	return static__213d17175_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__213d17e9a_ModAssign(jule::Ptr<_213c76a0d_Fn> _24125_f) {
	return static__213d17175_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__213d18242_ShlAssign(jule::Ptr<_213c76a0d_Fn> _24625_f) {
	return static__213d17175_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__213d184d9_ShrAssign(jule::Ptr<_213c76a0d_Fn> _25125_f) {
	return static__213d17175_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__213d18781_BitOrAssign(jule::Ptr<_213c76a0d_Fn> _25627_f) {
	return static__213d17175_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__213d18a28_BitAndAssign(jule::Ptr<_213c76a0d_Fn> _26128_f) {
	return static__213d17175_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__213d18cc0_BitXorAssign(jule::Ptr<_213c76a0d_Fn> _26628_f) {
	return static__213d17175_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _213d12736_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _213d44a76_pushErr(_213d4459d_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _213d44cda_checkTrait(_213d4459d_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_213d8988a_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_213c88b63_Trait> _12517_trt = _213d8c717_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_213d8b2b5_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1b848097c:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_213d8b2b5_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_213d8c4a3_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1b8480a04;
			}
		}
		else if ((_213d8c4a3_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1b8480a04:;
			{
				jule::Ptr<_213c64402_StructIns> _13617_s = _213d8c4a3_Struct((*(_self_))._field_src.ptr());;
				if ((!(_213c62b09_IsImplements(_13617_s.get()._field_Decl.ptr(), _12517_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _213d43338_traitHasReferenceReceiver(&(_12517_trt)))) {
					_213d44a76_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_213d8c717_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1b8480a7b:;
			{
				jule::Ptr<_213c88b63_Trait> _14621_base = _213d8c717_Trait((*(_self_))._field_src.ptr());;
				if ((_12517_trt == _14621_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_lookup:;
				{
					auto expr = &(_14621_base.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8485355:;
					if (it != expr_end) {
						jule::Ptr<_213c615db_Struct> _15120_s1 = *it;
						{
							{
								auto expr = &(_12517_trt.get()._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b848591b:;
								if (it != expr_end) {
									jule::Ptr<_213c615db_Struct> _15224_s2 = *it;
									{
										if ((_15120_s1 == _15224_s2)) {
											goto _iter_next_1b8485355;
										};
									}
									_iter_next_1b848591b:;
									++it;
									goto _iter_begin_1b848591b;
								}
								_iter_end_1b848591b:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1b8485355:;
						++it;
						goto _iter_begin_1b8485355;
					}
					_iter_end_1b8485355:;
				};
				{
					auto expr = &(_12517_trt.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8486499:;
					if (it != expr_end) {
						jule::Ptr<_213c76a0d_Fn> _15925_m1 = *it;
						{
							jule::Ptr<_213c76a0d_Fn> _16025_m2 = _213c89a10_FindMethod(_14621_base.ptr(), _15925_m1.get()._field_Ident);;
							if ((_16025_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_213c796ae_FnIns> _16421_m1k = _213cebc4d_getTraitCheckFnKind((*(_self_))._field_s, &(_15925_m1));;
							jule::Ptr<_213c796ae_FnIns> _16521_m2k = _213cebc4d_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m2));;
							if ((!(_213c7a56c_equalTrait(_16421_m1k, &(_16521_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1b8486499:;
						++it;
						goto _iter_begin_1b8486499;
					}
					_iter_end_1b8486499:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b8480916:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b84808a0:;
	};
}



inline jule::Bool _213d4504e_checkPtr(_213d4459d_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_213d8988a_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_213d97d4e_Ptr> _18017_dest = _213d8b529_Ptr((*(_self_))._field_dest.ptr());;
	if (_213d98822_IsUnsafe(_18017_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _213d88ee9_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _213d452b3_checkPrim(_213d4459d_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_213d91089_Prim> _18917_prim = _213d8b051_Prim((*(_self_))._field_dest.ptr());;
		if (((_18917_prim != nullptr) && _213d944ee_IsAny(_18917_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _213d88ee9_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _213d4566a_typeEnum(_213d4459d_typeCompatibilityChecker* _self_, jule::Ptr<_213c8c9e1_TypeEnum>* _19728_e, jule::Ptr<_213d88834_TypeKind>* _19747_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_19728_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b848a415:;
		if (it != expr_end) {
			jule::Ptr<_213c8c45d_TypeEnumItem> _19821_item = *it;
			{
				if (_213d88ee9_Equal(_19821_item.get()._field_Kind.get()._field_Kind, (*(_19747_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_213c8c9e1_TypeEnum> _20221_ke = _213d8ba02_TypeEnum(_19821_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_20221_ke == nullptr)) {
					goto _iter_next_1b848a415;
				};
				if (_213d4566a_typeEnum(_self_, &(_20221_ke), _19747_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b848a415:;
			++it;
			goto _iter_begin_1b848a415;
		}
		_iter_end_1b848a415:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _213d458ce_checkTypeEnum(_213d4459d_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_213d88ee9_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_213c8c9e1_TypeEnum> _21717_e = _213d8ba02_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _213d4566a_typeEnum(_self_, &(_21717_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _213d45b43_check(_213d4459d_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_213d8b529_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _213d4504e_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_213d8a5a0_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_213d8988a_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_213d8b051_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1b8491828:;
			{
				__jule_func_result = _213d452b3_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_213d8ba02_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1b8491c13:;
			{
				__jule_func_result = _213d458ce_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_213d8c717_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1b8491c79:;
			{
				__jule_func_result = _213d44cda_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b8490a9c:;
			{
				__jule_func_result = _213d88ee9_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1b8490904:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213d4459d_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _213d46638_pushErr(_213d461c6_assignTypeChecker* _self_, jule::Str _25326_fmt, jule::Slice<jule::Any> _25339_args) {
	_213ce38d2_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25326_fmt, _25339_args);
}



inline jule::Bool _213d4689c_checkValidity(_213d461c6_assignTypeChecker* _self_) {
	jule::Bool _25817_valid = true;;
	{
		
		if ((_213d8c23e_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b84944c9:;
			{
				jule::Ptr<_213c796ae_FnIns> _26117_f = _213d8c23e_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_213c7aa45_IsBuiltin(_26117_f.ptr())) {
						_case_begin_1b8495909:;
						{
							_213d46638_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (_26117_f.get()._field_Decl.get()._field_Binded) {
						_case_begin_1b8495981:;
						{
							_213d46638_pushErr(_self_, jule::Str("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((!(_26117_f.get()._field_Decl.get()._field_Statically)) && _213c771d4_IsMethod(_26117_f.get()._field_Decl.ptr()))) {
						_case_begin_1b8495a08:;
						{
							_213d46638_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((_26117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_26117_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1b8495a80:;
						{
							_213d46638_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_213ce3c01_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					_match_end_1b849582c:;
				};
			}
		}
		else if ((_213d8cbe0_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8494551:;
			{
				_213d46638_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25817_valid=false;
			}
		}
		_match_end_1b849441e:;
	};
	return _25817_valid;;
}



inline jule::Bool _213d46b11_checkConst(_213d461c6_assignTypeChecker* _self_) {
	if (((((!(_213d5b791_IsConst((*(_self_))._field_d.ptr()))) || (_213d8b051_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_213d8b051_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_2121a4745_IsNum(_213d8b051_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _29813_kind = _213d8b051_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_2121a449d_IsFloat(_29813_kind)) {
			_case_begin_1b849bbc9:;
			{
				if ((!(_213d435d0_floatAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_213d46638_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else if (_2121a417e_IsInt(_29813_kind)) {
			_case_begin_1b849bc40:;
			{
				if ((!(_213d440e7_intAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_213d46638_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else {
			_case_begin_1b849bb63:;
			{
				return false;;
			}
		}
		_match_end_1b849baec:;
	};
	return true;;
}



inline jule::Bool _213d46d75_isPrim(_213d461c6_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_213d89626_Binded((*(_self_))._field_dest.ptr()) || _213d89626_Binded((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_213d8b051_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_213d8b051_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _213d470d9_checkCompatibility(_213d461c6_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b84a1063:;
			{
				return false;;
			}
		}
		else if ((!(_213d4689c_checkValidity(_self_)))) {
			_case_begin_1b84a10da:;
			{
				return false;;
			}
		}
		else if (_213d46b11_checkConst(_self_)) {
			_case_begin_1b84a1162:;
			{
				return true;;
			}
		}
		else if ((_213d8b78d_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b84a11d9:;
			{
				jule::Ptr<_213d88834_TypeKind> _34221_dkind = (*(_self_))._field_dest;;
				if ((_213d8b78d_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34221_dkind=_213d8b78d_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_213d8b051_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1b84a0e42;
				};
				if (_2121a0eb1_TypesAreCompatible(_213d8b051_Prim(_213d8b78d_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _213d8b051_Prim(_34221_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_213d46d75_isPrim(_self_)) {
			_case_begin_1b84a1261:;
			{
				jule::Ptr<_213d91089_Prim> _35217_dest = _213d8b051_Prim((*(_self_))._field_dest.ptr());;
				if (_213d944ee_IsAny(_35217_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_213d91089_Prim> _35621_src = _213d8b051_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_2121a0eb1_TypesAreCompatible(_35217_dest.get()._field_Kind, _35621_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1b84a0e42:;
	};
	return _213ceb0c1_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _213d4734d_check(_213d461c6_assignTypeChecker* _self_) {
	jule::Bool _36513_ok = _213d470d9_checkCompatibility(_self_);;
	if ((_36513_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_213da482d_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36513_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _213d461c6_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b84b8487_annotateConstraintElem(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b84b9a60:;
			{
				jule::Ptr<_213d88834_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1b84ba896:;
						{
							_38821_elem=_213d8bc66_Arr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b84ba6ed:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_213c43ed6_ArrTypeDecl>(&__jule_any_type75).get()._field_Elem;
				return _213d492b7_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1b84b99a5:;
	};
	return false;;
}

inline jule::Bool _1b84b87b7_annotateConstraintElem(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b84bce92:;
			{
				jule::Ptr<_213d88834_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1b84bdd72:;
						{
							_38821_elem=_213d8beca_Slc((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b84bdb30:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_213c43238_SlcTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _213d492b7_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1b84bcdd7:;
	};
	return false;;
}

inline jule::Bool _1b84b7ca0_annotateConstraintElem(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b84c1490:;
			{
				jule::Ptr<_213d88834_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1b84c23d6:;
						{
							_38821_elem=_213d8b529_Ptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b84c212d:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_213c43810_PtrTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _213d492b7_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1b84c13d5:;
	};
	return false;;
}

inline jule::Bool _1b84c0ec8_annotateConstraintElem(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b84c453c:;
			{
				jule::Ptr<_213d88834_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1b84c54e9:;
						{
							_38821_elem=_213d8b2b5_Sptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b84c51ca:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_213c42d3c_SptrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _213d492b7_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1b84c4482:;
	};
	return false;;
}



inline jule::Bool _213d4854c_annotateConstraintMap(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _40545_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b84a87a7:;
			{
				jule::Ptr<_213d967ed_Map> _40821_m = _213d8c97b_Map((*(_40545_k)).ptr());;
				jule::Ptr<_213c446e0_MapTypeDecl> _40921_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_213c446e0_MapTypeDecl>(&__jule_any_type79);;
				(*(_self_))._field_c=_40921_m2.get()._field_Key;
				if ((!(_213d492b7_annotateConstraint(_self_, &(_40821_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_40921_m2.get()._field_Val;
				__jule_func_result = _213d492b7_annotateConstraint(_self_, &(_40821_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1b84a8730:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _213d4885a_annotateConstraintTup(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _42045_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b84aae4c:;
			{
				jule::Ptr<_213c43524_TupleTypeDecl> _42321_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_213c43524_TupleTypeDecl>(&__jule_any_type80);;
				jule::Ptr<_213d95d4c_Tuple> _42421_tup2 = _213d8cbe0_Tup((*(_42045_k)).ptr());;
				{
					auto expr = &(_42421_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b84ac35a:;
					if (it != expr_end) {
						jule::Ptr<_213d88834_TypeKind> _42525_t2 = *it;
						{
							{
								auto expr = &(_42321_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b84acb1e:;
								if (it != expr_end) {
									jule::Ptr<_213c41d2a_TypeDecl> _42629_t = *it;
									{
										(*(_self_))._field_c=_42629_t;
										if (_213d492b7_annotateConstraint(_self_, &(_42525_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1b84acb1e:;
									++it;
									goto _iter_begin_1b84acb1e;
								}
								_iter_end_1b84acb1e:;
							};
						}
						_iter_next_1b84ac35a:;
						++it;
						goto _iter_begin_1b84ac35a;
					}
					_iter_end_1b84ac35a:;
				};
			}
		}
		_match_end_1b84aada3:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _213d48b68_annotateConstraintFn(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _43744_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b84ac8aa:;
			{
				jule::Ptr<_213c53457_FnDecl> _44021_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_213c53457_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_213c796ae_FnIns> _44121_f = _213d8c23e_Fn((*(_43744_k)).ptr());;
				{
					auto expr = &(_44121_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b84aec64:;
					if (it != expr_end) {
						jule::I32 _44218_i = it - expr->begin();
						jule::Ptr<_213c787e0_ParamIns> _44225_fp = *it;
						{
							(*(_self_))._field_c=_44021_pf.get()._field_Params[_44218_i].get()._field_Kind;
							if (_213d492b7_annotateConstraint(_self_, &(_44225_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1b84aec64:;
						++it;
						_44218_i++;
						goto _iter_begin_1b84aec64;
					}
					_iter_end_1b84aec64:;
				};
				if ((_44021_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_44021_pf.get()._field_Result.get()._field_Kind;
					if (_213d492b7_annotateConstraint(_self_, &(_44121_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1b84ad999:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _213d48e98_annotateConstraintIdent(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _45847_k) {
	jule::Ptr<_213c423e1_IdentTypeDecl> _45917_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_213c423e1_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_213c64402_StructIns> _46017_s = _213d8c4a3_Struct((*(_45847_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84b25d5:;
		if (it != expr_end) {
			jule::I32 _46113_i = it - expr->begin();
			jule::Ptr<_213c4dcc1_GenericDecl> _46116_g = *it;
			{
				if ((_46116_g.get()._field_Ident == _45917_ident.get()._field_Ident)) {
					jule::Ptr<_213d870a2_InsGeneric> _46325_fg = (*(_self_))._field_f.get()._field_Generics[_46113_i];;
					if ((_46325_fg != nullptr)) {
						return false;;
					};
					_213d495d6_pushGeneric(_self_, _45847_k, _46113_i);
					return true;;
				};
				if ((_46017_s == nullptr)) {
					goto _iter_next_1b84b25d5;
				};
				jule::Ptr<_213c41d2a_TypeDecl> _47321_c = (*(_self_))._field_c;;
				{
					auto expr = &(_45917_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b84b352b:;
					if (it != expr_end) {
						jule::Ptr<_213c41d2a_TypeDecl> _47425_ig = *it;
						{
							(*(_self_))._field_c=_47425_ig;
							{
								auto expr = &(_46017_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b84b5cc0:;
								if (it != expr_end) {
									jule::Ptr<_213d870a2_InsGeneric> _47629_sg = *it;
									{
										if (_213d492b7_annotateConstraint(_self_, &(_47629_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1b84b5cc0:;
									++it;
									goto _iter_begin_1b84b5cc0;
								}
								_iter_end_1b84b5cc0:;
							};
						}
						_iter_next_1b84b352b:;
						++it;
						goto _iter_begin_1b84b352b;
					}
					_iter_end_1b84b352b:;
				};
				(*(_self_))._field_c=_47321_c;
			}
			_iter_next_1b84b25d5:;
			++it;
			_46113_i++;
			goto _iter_begin_1b84b25d5;
		}
		_iter_end_1b84b25d5:;
	};
	return false;;
}



inline jule::Bool _213d492b7_annotateConstraint(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _48742_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b84b572b:;
			{
				return _213d48e98_annotateConstraintIdent(_self_, _48742_k);;
			}
		}
		_match_end_1b84b56c6:;
	};
	{
		
		if ((_213d8bc66_Arr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b84b772d:;
			{
				return _1b84b8487_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_213d8beca_Slc((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b84b7145:;
			{
				return _1b84b87b7_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_213d8b529_Ptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b84b71ab:;
			{
				return _1b84b7ca0_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_213d8b2b5_Sptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b84b6c9e:;
			{
				return _1b84c0ec8_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_213d8c97b_Map((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b84b6d15:;
			{
				return _213d4854c_annotateConstraintMap(_self_, _48742_k);;
			}
		}
		else if ((_213d8c23e_Fn((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b84b6d7b:;
			{
				return _213d48b68_annotateConstraintFn(_self_, _48742_k);;
			}
		}
		else if ((_213d8cbe0_Tup((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b84b6de2:;
			{
				return _213d4885a_annotateConstraintTup(_self_, _48742_k);;
			}
		}
		else {
			_case_begin_1b84b58d5:;
			{
				return false;;
			}
		}
		_match_end_1b84b586e:;
	};
}



inline void _213d495d6_pushGeneric(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _51235_k, jule::I32 _51249_i) {
	(*(_self_))._field_f.get()._field_Generics[_51249_i]=jule::new_ptr<_213d870a2_InsGeneric>(_213d870a2_InsGeneric{._field_Kind=(*(_51235_k)), });
	jule::Ptr<_213c4dcc1_GenericDecl> _51417_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_51249_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84c7b5b:;
		if (it != expr_end) {
			jule::Ptr<_213d88834_TypeKind> _51521_ignored = *it;
			{
				if ((_51417_gd.get()._field_Ident == _213d88bdb_Str(_51521_ignored.ptr()))) {
					_51521_ignored.get()._field_Kind=(*(_51235_k)).get()._field_Kind;
				};
			}
			_iter_next_1b84c7b5b:;
			++it;
			goto _iter_begin_1b84c7b5b;
		}
		_iter_end_1b84c7b5b:;
	};
	if (((_51417_gd.get()._field_Constraint == nullptr) || (_51417_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_51417_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_213d492b7_annotateConstraint(_self_, _51235_k);
}



inline jule::Bool _213d498e4_annotatePrim(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _52743_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _213d4b71a_annotateAny(_self_, _52743_k);
	return __jule_func_result;;
}



inline jule::Bool _213d49c02_annotateArr(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213d973e2_Arr> _53217_parr = _213d8bc66_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53217_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_213d973e2_Arr> _53617_arr = _213d8bc66_Arr((*(_53142_k)).ptr());;
	(*(_self_))._field_k=(&(_53217_parr.get()._field_Elem));
	__jule_func_result = _213d4ba28_annotateKind(_self_, &(_53617_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _213d4a010_annotateSlc(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _54142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213d95247_Slc> _54217_pslc = _213d8beca_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54217_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_213d95247_Slc> _54617_slc = _213d8beca_Slc((*(_54142_k)).ptr());;
	(*(_self_))._field_k=(&(_54217_pslc.get()._field_Elem));
	__jule_func_result = _213d4ba28_annotateKind(_self_, &(_54617_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _213d4a3b7_checkMapKey(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _55141_k, jule::Ptr<_213d88834_TypeKind>* _55161_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213d88834_TypeKind>* _55217_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55141_k;
	__jule_func_result=_213d4ba28_annotateKind(_self_, _55161_ck);
	(*(_self_))._field_k=_55217_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _213d4a6c5_annotateMap(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _55942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213d967ed_Map> _56017_pmap = _213d8c97b_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56017_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_213d967ed_Map> _56417_m = _213d8c97b_Map((*(_55942_k)).ptr());;
	__jule_func_result = (_213d4a3b7_checkMapKey(_self_, (&(_56017_pmap.get()._field_Key)), &(_56417_m.get()._field_Key)) && _213d4a3b7_checkMapKey(_self_, (&(_56017_pmap.get()._field_Val)), &(_56417_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _213d4a9d3_annotateFn(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _56941_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213c796ae_FnIns> _57017_pf = _213d8c23e_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57017_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_213c796ae_FnIns> _57417_f = _213d8c23e_Fn((*(_56941_k)).ptr());;
	{
		
		if ((_57017_pf.get()._field_Params.len() != _57417_f.get()._field_Params.len())) {
			_case_begin_1b84d39e1:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_213c76e70_IsVoid(_57017_pf.get()._field_Decl.ptr()) != _213c76e70_IsVoid(_57417_f.get()._field_Decl.ptr()))) {
			_case_begin_1b84d3a68:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b84d3969:;
	};
	__jule_func_result=true;
	jule::Ptr<_213d88834_TypeKind>* _58317_old = (*(_self_))._field_k;;
	{
		auto expr = &(_57417_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84d5053:;
		if (it != expr_end) {
			jule::I32 _58414_i = it - expr->begin();
			jule::Ptr<_213c787e0_ParamIns> _58421_fp = *it;
			{
				(*(_self_))._field_k=(&(_57017_pf.get()._field_Params[_58414_i].get()._field_Kind));
				__jule_func_result=(_213d4ba28_annotateKind(_self_, &(_58421_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_1b84d5053:;
			++it;
			_58414_i++;
			goto _iter_begin_1b84d5053;
		}
		_iter_end_1b84d5053:;
	};
	if ((!(_213c76e70_IsVoid(_57017_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_57017_pf.get()._field_Result));
		__jule_func_result=(_213d4ba28_annotateKind(_self_, &(_57417_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _213d4ace1_annotatePtr(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _59842_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213d97d4e_Ptr> _59917_pptr = _213d8b529_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_59917_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_213d97d4e_Ptr> _60317_ptr = _213d8b529_Ptr((*(_59842_k)).ptr());;
	(*(_self_))._field_k=(&(_59917_pptr.get()._field_Elem));
	__jule_func_result = _213d4ba28_annotateKind(_self_, &(_60317_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _213d4b0ee_annotateSptr(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _60843_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213d947da_Sptr> _60917_ssptr = _213d8b2b5_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_60917_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_213d947da_Sptr> _61317_sptr = _213d8b2b5_Sptr((*(_60843_k)).ptr());;
	(*(_self_))._field_k=(&(_60917_ssptr.get()._field_Elem));
	__jule_func_result = _213d4ba28_annotateKind(_self_, &(_61317_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _213d4b40c_annotateStruct(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _61845_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213c64402_StructIns> _61917_s = _213d8c4a3_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_61917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_213c64402_StructIns> _62317_s2 = _213d8c4a3_Struct((*(_61845_k)).ptr());;
	if ((_61917_s.get()._field_Generics.len() != _62317_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_61917_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84e2a00:;
		if (it != expr_end) {
			jule::I32 _62714_i = it - expr->begin();
			jule::Ptr<_213d870a2_InsGeneric> _62721_g = *it;
			{
				jule::Ptr<_213d870a2_InsGeneric> _62821_g2 = _62317_s2.get()._field_Generics[_62714_i];;
				if (_213d88ee9_Equal(_62721_g.get()._field_Kind, _62821_g2.get()._field_Kind)) {
					goto _iter_next_1b84e2a00;
				};
				(*(_self_))._field_k=(&(_62721_g.get()._field_Kind));
				if ((!(_213d4ba28_annotateKind(_self_, &(_62821_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b84e2a00:;
			++it;
			_62714_i++;
			goto _iter_begin_1b84e2a00;
		}
		_iter_end_1b84e2a00:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _213d4b71a_annotateAny(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _64042_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64113_kind = _213d88bdb_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84e53d7:;
		if (it != expr_end) {
			jule::I32 _64213_i = it - expr->begin();
			jule::Ptr<_213c4dcc1_GenericDecl> _64216_g = *it;
			{
				if ((_64113_kind != _64216_g.get()._field_Ident)) {
					goto _iter_next_1b84e53d7;
				};
				jule::Ptr<_213d870a2_InsGeneric> _64617_t = (*(_self_))._field_f.get()._field_Generics[_64213_i];;
				{
					
					if ((_64617_t == nullptr) || (_64617_t.get()._field_Kind == nullptr)) {
						_case_begin_1b84e6d12:;
						{
							_213d495d6_pushGeneric(_self_, _64042_k, _64213_i);
						}
					}
					else if ((!(_213d88ee9_Equal(_64617_t.get()._field_Kind, (*(_64042_k)))))) {
						_case_begin_1b84e6d78:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1b84e6b8b:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_64042_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1b84e53d7:;
			++it;
			_64213_i++;
			goto _iter_begin_1b84e53d7;
		}
		_iter_end_1b84e53d7:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _213d4ba28_annotateKind(_213d47bab_dynamicTypeAnnotation* _self_, jule::Ptr<_213d88834_TypeKind>* _66143_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_213d4b71a_annotateAny(_self_, _66143_k)) {
			_case_begin_1b84e9595:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_213d8b051_Prim((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b84e9056:;
			{
				__jule_func_result = _213d498e4_annotatePrim(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_213d8bc66_Arr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b84e90cd:;
			{
				__jule_func_result = _213d49c02_annotateArr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_213d8beca_Slc((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b84e930e:;
			{
				__jule_func_result = _213d4a010_annotateSlc(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_213d8c97b_Map((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b84e9375:;
			{
				__jule_func_result = _213d4a6c5_annotateMap(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_213d8c23e_Fn((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b84e93ec:;
			{
				__jule_func_result = _213d4a9d3_annotateFn(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_213d8b529_Ptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b84e9474:;
			{
				__jule_func_result = _213d4ace1_annotatePtr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_213d8b2b5_Sptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b84e960b:;
			{
				__jule_func_result = _213d4b0ee_annotateSptr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_213d8c4a3_Struct((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b84e9672:;
			{
				__jule_func_result = _213d4b40c_annotateStruct(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b84e8e24:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b84e88b3:;
	};
}



inline jule::Bool _213d4bc8c_annotate(_213d47bab_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _213d4ba28_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _213d47bab_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _213d4cb06_pushErrToken(_213d4c5a6_fnCallArgChecker* _self_, jule::Ptr<_2114c1b73_Token> _70631_token, jule::Str _70646_fmt, jule::Slice<jule::Any> _70659_args) {
	_213ce38d2_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _70631_token, _70646_fmt, _70659_args);
}



inline void _213d4ce25_pushErr(_213d4c5a6_fnCallArgChecker* _self_, jule::Str _71026_fmt, jule::Slice<jule::Any> _71039_args) {
	_213d4cb06_pushErrToken(_self_, (*(_self_))._field_errorToken, _71026_fmt, _71039_args);
}



inline jule::Slice<jule::Ptr<_213c787e0_ParamIns>> _213d4d189_getParams(_213d4c5a6_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _213c757a9_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _213d4d464_checkCounts(_213d4c5a6_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_213c787e0_ParamIns>>* _72331_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _72417_n = (*(_72331_params)).len();;
	if (((_72417_n > 0LL) && _213c757a9_IsSelf((*(_72331_params))[0LL].get()._field_Decl.ptr()))) {
		(_72417_n)--;
	};
	jule::I32 _72917_diff = (_72417_n - (*(_self_))._field_args.len());;
	jule::Str _73017_log = jule::Str();;
	{
		
		if ((_72917_diff == 0LL)) {
			_case_begin_1b8504924:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72417_n > 0LL) && (*(_72331_params))[(_72417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1b8504a45:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72917_diff < 0LL) || (_72917_diff > (*(_72331_params)).len()))) {
			_case_begin_1b850466b:;
			{
				_73017_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1b8504605:;
			{
				_73017_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_1b85045a0:;
	};
	jule::Str _74117_err = (*(_self_))._field_f.get()._field_Decl.get()._field_Ident;;
	(_74117_err).append("\n       wanted (", 16);
	{
		auto expr = _72331_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8502adc:;
		if (it != expr_end) {
			jule::I32 _74313_i = it - expr->begin();
			jule::Ptr<_213c787e0_ParamIns> *_74316_p = it;
			{
				_74117_err+=_213d88bdb_Str((*(_74316_p)).get()._field_Kind.ptr());
				if ((((*(_72331_params)).len() - _74313_i) > 1LL)) {
					(_74117_err).append(", ", 2);
				};
			}
			_iter_next_1b8502adc:;
			++it;
			_74313_i++;
			goto _iter_begin_1b8502adc;
		}
		_iter_end_1b8502adc:;
	};
	(_74117_err).append(")", 1);
	_213d4ce25_pushErr(_self_, _73017_log, jule::Slice<jule::Any>::make({jule::Any(_74117_err, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _213d4d8b5_checkArg(_213d4c5a6_fnCallArgChecker* _self_, jule::Ptr<_213c787e0_ParamIns>* _75432_p, jule::Ptr<_213d5ae22_Data>* _75451_arg, jule::Ptr<_2114c1b73_Token>* _75468_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _213c7b7c1_parameterUsesGenerics(_75432_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=((!((*(_75432_p)).get()._field_Decl.get()._field_Variadic)) && _213d55636_isGoodValueToInfer(_75451_arg));
		if (__jule_func_result) {
			_213d47bab_dynamicTypeAnnotation _75925_dta = _213d47bab_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75432_p)), ._field_a=(*(_75451_arg)), ._field_errorToken=(*(_75468_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_213d4bc8c_annotate(&_75925_dta);
		};
		if ((!(__jule_func_result))) {
			_213d4cb06_pushErrToken(_self_, (*(_75468_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_213cedd93_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Mutable, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, _75468_errorToken)) {
		_213ceab70_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, (*(_75468_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _213d4dc6c_push(_213d4c5a6_fnCallArgChecker* _self_, jule::Ptr<_213c787e0_ParamIns>* _78328_p, jule::Ptr<_213c45ea5_Expr> _78346_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213d88834_TypeKind> _78417_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _78513_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_78328_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_78328_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_78328_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_213d5ae22_Data> _79317_d = _213d7945c_evalExpr((*(_self_))._field_e, _78346_arg);;
	(*(_self_))._field_e.get()._field_prefix=_78417_old;
	(*(_self_))._field_e.get()._field_immutable=_78513_oldImmut;
	if ((_79317_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_213d4d8b5_checkArg(_self_, _78328_p, &(_79317_d), &(_78346_arg.get()._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_79317_d.get()._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _213d4e124_pushVariadic(_213d4c5a6_fnCallArgChecker* _self_, jule::Ptr<_213c787e0_ParamIns>* _80736_p, jule::I32 _80754_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _80917_variadiced = false;;
	jule::Bool _81013_more = ((_80754_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_213c6aaac_SliceExprModel> _81117_model = jule::new_ptr<_213c6aaac_SliceExprModel>(_213c6aaac_SliceExprModel{._field_ElemKind=(*(_80736_p)).get()._field_Kind, });;
	jule::Ptr<_213d88834_TypeKind> _81517_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _82013_variadic = (*(_80736_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_80736_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_80736_p)).get()._field_Kind.get()._field_Variadic=_82013_variadic;
	});;
	for (; (_80754_i < (*(_self_))._field_args.len()); (_80754_i)++) {
		{
			jule::Ptr<_213c45ea5_Expr> _82721_arg = (*(_self_))._field_args[_80754_i];;
			{
				auto &_match_expr{ _82721_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type81) {
					_case_begin_1b8514e0c:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213d95247_Slc>(_213d95247_Slc{._field_Elem=(*(_80736_p)).get()._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1b851511b:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_80736_p)).get()._field_Kind;
					}
				}
				_match_end_1b85150b6:;
			};
			jule::Ptr<_213d5ae22_Data> _84021_d = _213d78d41_eval((*(_self_))._field_e, _82721_arg);;
			if ((_84021_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1b8513d1d;
			};
			if (_84021_d.get()._field_Kind.get()._field_Variadic) {
				_80917_variadiced=true;
				(*(_80736_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _213d4d8b5_checkArg(_self_, _80736_p, &(_84021_d), &(_82721_arg.get()._field_Token)));
				{
					auto &_match_expr{ _84021_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1b85185c5:;
						{
							_81117_model=_84021_d.get()._field_Model.cast_ptr<_213c6aaac_SliceExprModel>(&__jule_any_type82);
							_81117_model.get()._field_ElemKind=(*(_80736_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_1b8517e32:;
						{
							_81117_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_84021_d.get()._field_Model); };
						}
					}
					_match_end_1b8517dcc:;
				};
				(_80754_i)++;
				goto _iter_end_1b8513d1d;
			};
			__jule_func_result=(__jule_func_result && _213d4d8b5_checkArg(_self_, _80736_p, &(_84021_d), &(_82721_arg.get()._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = _81117_model.get()._field_Elems; __jule_push_dest.push(_84021_d.get()._field_Model); };
		}
	_iter_next_1b8513d1d:;
	}
	_iter_end_1b8513d1d:;;
	(*(_self_))._field_e.get()._field_prefix=_81517_old;
	if ((_80917_variadiced && _81013_more)) {
		_213d4cb06_pushErrToken(_self_, (*(_self_))._field_args[_80754_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81117_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81117_model, &__jule_any_type82)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _213d4e432_checkArgs(_213d4c5a6_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_213c787e0_ParamIns>>* _88333_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88413_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I32 _88817_i = 0LL;;
	if ((((*(_88333_params)).len() > 0LL) && _213c757a9_IsSelf((*(_88333_params))[0LL].get()._field_Decl.ptr()))) {
		(_88817_i)++;
	};
	_julec_label_iter:;
	while ((_88817_i < (*(_88333_params)).len())) {
		{
			jule::Ptr<_213c787e0_ParamIns> _89521_p = (*(_88333_params))[_88817_i];;
			{
				
				if (_89521_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1b851dad6:;
					{
						__jule_func_result=(_213d4e124_pushVariadic(_self_, &(_89521_p), _88817_i) && __jule_func_result);
						goto _iter_end_1b851c5b8;
					}
				}
				else if (((*(_self_))._field_args.len() <= _88817_i)) {
					_case_begin_1b851db4c:;
					{
						__jule_func_result=false;
						goto _iter_end_1b851c5b8;
					}
				}
				else {
					_case_begin_1b851d773:;
					{
						__jule_func_result=(_213d4dc6c_push(_self_, &(_89521_p), (*(_self_))._field_args[_88817_i]) && __jule_func_result);
					}
				}
				_match_end_1b851d71d:;
			};
			(_88817_i)++;
		}
	_iter_next_1b851c5b8:;
	}
	_iter_end_1b851c5b8:;;
	(*(_self_))._field_e.get()._field_arg=_88413_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _213d4e6b8_checkDynamicTypeAnnotation(_213d4c5a6_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8520863:;
		if (it != expr_end) {
			jule::Ptr<_213d870a2_InsGeneric> _91516_g = *it;
			{
				if ((_91516_g == nullptr)) {
					_213d4ce25_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b8520863:;
			++it;
			goto _iter_begin_1b8520863;
		}
		_iter_end_1b8520863:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _213d4e93d_check(_213d4c5a6_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_213c787e0_ParamIns>> _92517_params = _213d4d189_getParams(_self_);;
	__jule_func_result=_213d4d464_checkCounts(_self_, &(_92517_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_213d4e432_checkArgs(_self_, &(_92517_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_213d4e6b8_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _213d4c5a6_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _213d50774_pushErr(_213d50268_structLitChecker* _self_, jule::Ptr<_2114c1b73_Token> _96326_token, jule::Str _96341_fmt, jule::Slice<jule::Any> _96354_args) {
	_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), _96326_token, _96341_fmt, _96354_args);
}



inline void _213d50a93_pushSuggestion(_213d50268_structLitChecker* _self_, jule::Str _96833_fmt, jule::Slice<jule::Any> _96846_args) {
	_213d5d2ba_pushSuggestion((*(_self_))._field_e.ptr(), _96833_fmt, _96846_args);
}



inline void _213d50e5b_pushMatch(_213d50268_structLitChecker* _self_, jule::Ptr<_213c6390c_FieldIns>* _97233_f, jule::Ptr<_213d5ae22_Data>* _97252_d, jule::Ptr<_2114c1b73_Token>* _97267_errorToken) {
	;
	jule::Bool _97813_mutable = ((!((*(_self_))._field_e.get()._field_immutable)) || ((*(_97233_f)).get()._field_Decl.get()._field_Mutable && ((*(_self_))._field_s.get()._field_Methods.len() > 0LL)));;
	if (_213cedd93_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, _97813_mutable, false, &((*(_97233_f)).get()._field_Kind), _97252_d, _97267_errorToken)) {
		_213ceab70_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_97233_f)).get()._field_Kind), _97252_d, (*(_97267_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_213c69171_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_213c69171_StructArgExprModel>(_213c69171_StructArgExprModel{._field_Token=(*(_97267_errorToken)), ._field_Field=(*(_97233_f)), ._field_Expr=(*(_97252_d))})); };
}



inline void _213d5127a_checkPair(_213d50268_structLitChecker* _self_, jule::Ptr<_213c4a84a_FieldExprPair>* _99133_pair, jule::Slice<jule::Ptr<_213c45ea5_Expr>>* _99160_exprs) {
	jule::Ptr<_213c6390c_FieldIns> _99317_f = _213c656ab_FindField((*(_self_))._field_s.ptr(), (*(_99133_pair)).get()._field_Field.get()._field_Kind);;
	if ((_99317_f == nullptr)) {
		_213d50774_pushErr(_self_, (*(_99133_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_99133_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _99317_f.get()._field_Decl.get()._field_Public, _99317_f.get()._field_Decl.get()._field_Token)))) {
		_213d50774_pushErr(_self_, (*(_99133_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_99133_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_213d50a93_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _99160_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b852a791:;
		if (it != expr_end) {
			jule::Ptr<_213c45ea5_Expr> _100521_expr = *it;
			{
				{
					auto &_match_expr{ _100521_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1b852b121:;
						{
							jule::Ptr<_213c4a84a_FieldExprPair> _100825_dpair = _100521_expr.get()._field_Kind.cast_ptr<_213c4a84a_FieldExprPair>(&__jule_any_type83);;
							{
								
								if (((*(_99133_pair)) == _100825_dpair)) {
									_case_begin_1b852be8a:;
									{
										goto _iter_end_1b852a791;
									}
								}
								else if (((*(_99133_pair)).get()._field_Field.get()._field_Kind == _100825_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1b852c012:;
									{
										_213d50774_pushErr(_self_, (*(_99133_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_99133_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_1b852a791;
									}
								}
								_match_end_1b852bdd0:;
							};
						}
					}
					_match_end_1b852ae67:;
				};
			}
			_iter_next_1b852a791:;
			++it;
			goto _iter_begin_1b852a791;
		}
		_iter_end_1b852a791:;
	};
	jule::Ptr<_213d88834_TypeKind> _101917_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_101917_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_99317_f.get()._field_Kind;
	jule::Ptr<_213d5ae22_Data> _102317_d = _213d7945c_evalExpr((*(_self_))._field_e, (*(_99133_pair)).get()._field_Expr);;
	if ((_102317_d == nullptr)) {
		return;;
	};
	_213d50e5b_pushMatch(_self_, &(_99317_f), &(_102317_d), &((*(_99133_pair)).get()._field_Field));
}



inline jule::Bool _213d51588_readyExprs(_213d50268_structLitChecker* _self_, jule::Slice<jule::Ptr<_213c45ea5_Expr>>* _103034_exprs) {
	jule::Bool _103117_ok = true;;
	{
		auto expr = _103034_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b853039a:;
		if (it != expr_end) {
			jule::I32 _103214_i = it - expr->begin();
			jule::Ptr<_213c45ea5_Expr> _103221_expr = *it;
			{
				{
					auto &_match_expr{ _103221_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1b8531016:;
						{
							jule::Ptr<_213c4be78_KeyValPair> _103525_pair = _103221_expr.get()._field_Kind.cast_ptr<_213c4be78_KeyValPair>(&__jule_any_type84);;
							{
								auto &_match_expr{ _103525_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type85) {
									_case_begin_1b8531c70:;
									{
										goto _match_end_1b8532006;
									}
								}
								else {
									_case_begin_1b853205b:;
									{
										_213d50774_pushErr(_self_, _103525_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_103117_ok=false;
										goto _iter_next_1b853039a;
									}
								}
								_match_end_1b8532006:;
							};
							(*(_103034_exprs))[_103214_i].get()._field_Kind=jule::Any(jule::new_ptr<_213c4a84a_FieldExprPair>(_213c4a84a_FieldExprPair{._field_Field=_103525_pair.get()._field_Key.get()._field_Token, ._field_Expr=_103525_pair.get()._field_Val}), &__jule_any_type83);
						}
					}
					_match_end_1b8530d5c:;
				};
			}
			_iter_next_1b853039a:;
			++it;
			_103214_i++;
			goto _iter_begin_1b853039a;
		}
		_iter_end_1b853039a:;
	};
	return _103117_ok;;
}



inline void _213d5180d_check(_213d50268_structLitChecker* _self_, jule::Slice<jule::Ptr<_213c45ea5_Expr>>* _105429_exprs) {
	if (((*(_105429_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_213d51588_readyExprs(_self_, _105429_exprs)))) {
		return;;
	};
	jule::Bool _106117_paired = false;;
	{
		auto expr = _105429_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8530ca2:;
		if (it != expr_end) {
			jule::I32 _106214_i = it - expr->begin();
			jule::Ptr<_213c45ea5_Expr> _106221_expr = *it;
			{
				{
					auto &_match_expr{ _106221_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1b853823d:;
						{
							jule::Ptr<_213c4a84a_FieldExprPair> _106525_pair = _106221_expr.get()._field_Kind.cast_ptr<_213c4a84a_FieldExprPair>(&__jule_any_type83);;
							if (((_106214_i > 0LL) && (!(_106117_paired)))) {
								_213d50774_pushErr(_self_, _106525_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_106117_paired=true;
							_213d5127a_checkPair(_self_, &(_106525_pair), _105429_exprs);
						}
					}
					else {
						_case_begin_1b8534d1c:;
						{
							if (_106117_paired) {
								_213d50774_pushErr(_self_, _106221_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_106214_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_213d50774_pushErr(_self_, _106221_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1b8530ca2;
							};
							jule::Ptr<_213c6390c_FieldIns> _108025_field = (*(_self_))._field_s.get()._field_Fields[_106214_i];;
							if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _108025_field.get()._field_Decl.get()._field_Public, _108025_field.get()._field_Decl.get()._field_Token)))) {
								_213d50774_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_213d50a93_pushSuggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_213d88834_TypeKind> _108825_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_108825_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_108025_field.get()._field_Kind;
							jule::Ptr<_213d5ae22_Data> _109225_d = _213d7945c_evalExpr((*(_self_))._field_e, _106221_expr);;
							if ((_109225_d == nullptr)) {
								goto _iter_next_1b8530ca2;
							};
							_213d50e5b_pushMatch(_self_, &(_108025_field), &(_109225_d), &(_106221_expr.get()._field_Token));
						}
					}
					_match_end_1b8534b96:;
				};
			}
			_iter_next_1b8530ca2:;
			++it;
			_106214_i++;
			goto _iter_begin_1b8530ca2;
		}
		_iter_end_1b8530ca2:;
	};
	if ((!(_106117_paired))) {
		jule::I32 _110317_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I32 _110421_diff = (_110317_n - (*(_105429_exprs)).len());;
		{
			
			if ((_110421_diff <= 0LL)) {
				_case_begin_1b853b8e5:;
				{
					return;;
				}
			}
			_match_end_1b853b7c4:;
		};
		jule::Str _111021_idents = jule::Str();;
		for (; (_110421_diff > 0LL); (_110421_diff)--) {
			{
				_111021_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_110317_n - _110421_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1b853c1cb:;
		}
		_iter_end_1b853c1cb:;;
		(_111021_idents).mut_slice(2LL);;
		_213d50774_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_111021_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213d50268_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213d11988_Var> _213d52314_buildVar(_213d51d4c_rangeChecker* _self_, jule::Ptr<_213c54436_VarDecl>* _112928_decl) {
	jule::Ptr<_213d11988_Var> _113017_v = _213c825eb_buildVar((*(_112928_decl)));;
	return _113017_v;;
}



inline void _213d524e0_setSizeKey(_213d51d4c_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _2114c4417_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_213d52314_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=_213e55a22_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b85406da:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_213d10943_IterRelation>(_213d10943_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_213d11988_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1b8540685:;
	};
}



inline void _213d528a8_checkRangeExprValidity(_213d51d4c_rangeChecker* _self_, jule::Ptr<_213d5ae22_Data>* _115646_d, jule::Ptr<_213d11988_Var>* _115657_key, jule::Ptr<_213d88834_TypeKind>* _115673_k) {
	jule::Bool _115717__mut = (*(_115657_key)).get()._field_Mutable;;
	if ((_115717__mut && (!(_213d8a0c7_Mutable((*(_115673_k)).ptr()))))) {
		_115717__mut=false;
	};
	_213cedd93_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _115717__mut, (*(_115657_key)).get()._field_Reference, &((*(_115657_key)).get()._field_Kind.get()._field_Kind), _115646_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _213d52a84_checkSlice(_213d51d4c_rangeChecker* _self_) {
	_213d524e0_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _2114c4417_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_213d95247_Slc> _117517_slc = _213d8beca_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_213d52314_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=_117517_slc.get()._field_Elem});
	_213d528a8_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_117517_slc.get()._field_Elem));
}



inline void _213d52c60_checkArray(_213d51d4c_rangeChecker* _self_) {
	_213d524e0_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _2114c4417_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_213d973e2_Arr> _118817_arr = _213d8bc66_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_213d52314_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=_118817_arr.get()._field_Elem});
	_213d528a8_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_118817_arr.get()._field_Elem));
}



inline void _213d52e3b_checkMapKeyA(_213d51d4c_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _2114c4417_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_213d967ed_Map> _120017_m = _213d8c97b_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_213d52314_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=_120017_m.get()._field_Key});
	jule::Ptr<_213d5ae22_Data> _120417_d = jule::new_ptr<_213d5ae22_Data>((*((*(_self_))._field_d)));;
	_120417_d.get()._field_Kind=_120017_m.get()._field_Key;
	_213d528a8_checkRangeExprValidity(_self_, &(_120417_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_120017_m.get()._field_Key));
}



inline void _213d53117_checkMapKeyB(_213d51d4c_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _2114c4417_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_213d967ed_Map> _121517_m = _213d8c97b_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_213d52314_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=_121517_m.get()._field_Val});
	jule::Ptr<_213d5ae22_Data> _121917_d = jule::new_ptr<_213d5ae22_Data>((*((*(_self_))._field_d)));;
	_121917_d.get()._field_Kind=_121517_m.get()._field_Val;
	_213d528a8_checkRangeExprValidity(_self_, &(_121917_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_121517_m.get()._field_Val));
}



inline void _213d532e3_checkMap(_213d51d4c_rangeChecker* _self_) {
	_213d52e3b_checkMapKeyA(_self_);
	_213d53117_checkMapKeyB(_self_);
}



inline void _213d534be_checkStr(_213d51d4c_rangeChecker* _self_) {
	_213d524e0_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _2114c4417_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_213d52314_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=_213e55a22_findBuiltinTypeAlias(jule::Str("u8", 2)).get()._field_Kind;
}



inline void _213d5369a_checkComptime(_213d51d4c_rangeChecker* _self_) {
	_213d524e0_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyA != nullptr) && (*(_self_))._field_rang.get()._field_KeyA.get()._field_Mutable)) {
		_213ce38d2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyA.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB != nullptr) && (*(_self_))._field_rang.get()._field_KeyB.get()._field_Mutable)) {
		_213ce38d2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyB.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _2114c4417_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_213d52314_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
}



inline jule::Bool _213d5390e_checkComptimeRange(_213d51d4c_rangeChecker* _self_) {
	jule::Ptr<_213c8eb47_comptimeRange> _125417_range = _213d8e142_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _125417_range.get()._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1b85576ad:;
			{
				_213d5369a_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1b8556910:;
			{
				_213ce38d2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b85568aa:;
	};
}



inline jule::Bool _213d53b73_check(_213d51d4c_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1b8558615:;
		}
		else if ((_213d8beca_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b855867b:;
			{
				_213d52a84_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_213d8bc66_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b85586e2:;
			{
				_213d52c60_checkArray(_self_);
				return true;;
			}
		}
		else if ((_213d8c97b_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8558758:;
			{
				_213d532e3_checkMap(_self_);
				return true;;
			}
		}
		else if ((_213d8e142_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b85599ac:;
			{
				return _213d5390e_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1b8557e72:;
			{
				jule::Ptr<_213d91089_Prim> _128617_prim = _213d8b051_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_128617_prim != nullptr) && _213d9428a_IsStr(_128617_prim.ptr()))) {
					_213d534be_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1b85584b1:;
	};
	_213ce38d2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _213d51d4c_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _213d54756_prepareTypes(_213d54349_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_213c7a7d1_Types((*(_self_))._field_f.ptr());
	};
}



inline void _213d549cb_prepareExprs(_213d54349_retTypeChecker* _self_, jule::Ptr<_213c45ea5_Expr>* _131436_e) {
	if (((*(_131436_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_131436_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b855e64e:;
			{
				(*(_self_))._field_exprs=(*(_131436_e)).get()._field_Kind.cast_ptr<_213c46b32_TupleExpr>(&__jule_any_type86).get()._field_Expr;
			}
		}
		else {
			_case_begin_1b855e275:;
			{
				{ jule::Slice<jule::Ptr<_213c45ea5_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_131436_e))); };
			}
		}
		_match_end_1b855e220:;
	};
}



inline void _213d54ba7_checkExprs(_213d54349_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_213d5ae22_Data>> _133017_datas = jule::Slice<jule::Ptr<_213d5ae22_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_213d5c990_Eval> _133117_eval = _213cea675_eval((*(_self_))._field_sc.get()._field_s, jule::Trait<_213da6b60_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b855eee0:;
		if (it != expr_end) {
			jule::I32 _133214_i = it - expr->begin();
			jule::Ptr<_213c45ea5_Expr> _133221_expr = *it;
			{
				if ((_133214_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1b855eee0;
				};
				jule::Ptr<_213d88834_TypeKind> _133721_t = (*(_self_))._field_types[_133214_i];;
				_133117_eval.get()._field_prefix=_133721_t;
				jule::Ptr<_213d5ae22_Data> _134021_d = _213d7945c_evalExpr(_133117_eval, _133221_expr);;
				if ((_134021_d == nullptr)) {
					goto _iter_next_1b855eee0;
				};
				{ jule::Slice<jule::Ptr<_213d5ae22_Data>> &__jule_push_dest = _133017_datas; __jule_push_dest.push(_134021_d); };
				if (((!(_134021_d.get()._field_Mutable)) && _213d8a0c7_Mutable(_134021_d.get()._field_Kind.ptr()))) {
					_213ce38d2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_213d461c6_assignTypeChecker _135221_ac = _213d461c6_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_133721_t, ._field_d=_134021_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_213d4734d_check(&_135221_ac);
			}
			_iter_next_1b855eee0:;
			++it;
			_133214_i++;
			goto _iter_begin_1b855eee0;
		}
		_iter_end_1b855eee0:;
	};
	if ((_133017_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_213c6e42e_TupleExprModel>(_213c6e42e_TupleExprModel{._field_Datas=_133017_datas}), &__jule_any_type87);
	} else if ((_133017_datas.len() == 1LL)) {
		(*(_self_))._field_model=_133017_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _213d54eb5_check(_213d54349_retTypeChecker* _self_, jule::Ptr<_213c45ea5_Expr>* _137129_e) {
	_213d54756_prepareTypes(_self_);
	_213d549cb_prepareExprs(_self_, _137129_e);
	jule::I32 _137513_n = (*(_self_))._field_exprs.len();;
	if (((_137513_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_213c77b85_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_213ce38d2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_137513_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _213c76e70_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_213ce38d2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_137513_n > (*(_self_))._field_types.len())) {
		_213ce38d2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_137513_n < (*(_self_))._field_types.len())) {
		_213ce38d2_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_213d54ba7_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _213d54349_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _213d568ce_SelectPackage(_213d56417_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b856bccc:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1b856bccc:;
			++it;
			goto _iter_begin_1b856bccc;
		}
		_iter_end_1b856bccc:;
	};
	return nullptr;;
}



inline jule::Ptr<_213d11988_Var> _213d56c86_FindVar(_213d56417_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _213d5888c_findVar(_self_, _4126_ident, _4138_binded, false);;
}



inline jule::Ptr<_213d87adb_TypeAlias> _213d5713d_FindTypeAlias(_213d56417_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _213d58cdd_findTypeAlias(_self_, _4732_ident, _4744_binded, false);;
}



inline jule::Ptr<_213c615db_Struct> _213d574e5_FindStruct(_213d56417_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b856e142:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> _5421_s = *it;
			{
				if (((_5421_s.get()._field_Ident == _5329_ident) && (_5421_s.get()._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1b856e142:;
			++it;
			goto _iter_begin_1b856e142;
		}
		_iter_end_1b856e142:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c76a0d_Fn> _213d5789c_FindFn(_213d56417_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85704d9:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _6521_f = *it;
			{
				if (((_6521_f.get()._field_Ident == _6425_ident) && (_6521_f.get()._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1b85704d9:;
			++it;
			goto _iter_begin_1b85704d9;
		}
		_iter_end_1b85704d9:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c88b63_Trait> _213d57baa_FindTrait(_213d56417_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8570bb0:;
		if (it != expr_end) {
			jule::Ptr<_213c88b63_Trait> _7621_t = *it;
			{
				if ((_7621_t.get()._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1b8570bb0:;
			++it;
			goto _iter_begin_1b8570bb0;
		}
		_iter_end_1b8570bb0:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c8b3e6_Enum> _213d57eb8_FindEnum(_213d56417_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8572497:;
		if (it != expr_end) {
			jule::Ptr<_213c8b3e6_Enum> _8721_e = *it;
			{
				if ((_8721_e.get()._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1b8572497:;
			++it;
			goto _iter_begin_1b8572497;
		}
		_iter_end_1b8572497:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c8c9e1_TypeEnum> _213d582c6_FindTypeEnum(_213d56417_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8573377:;
		if (it != expr_end) {
			jule::Ptr<_213c8c9e1_TypeEnum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1b8573377:;
			++it;
			goto _iter_begin_1b8573377;
		}
		_iter_end_1b8573377:;
	};
	return nullptr;;
}



inline jule::Ptr<_213d11988_Var> _213d5888c_findVar(_213d56417_SymbolTable* _self_, jule::Str _10826_ident, jule::Bool _10838_binded, jule::Bool _10852_reverse) {
	if (_10852_reverse) {
		jule::I32 _11021_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_213d11988_Var> _11225_v = (*(_self_))._field_Vars[_11021_i];;
				if (((_11225_v.get()._field_Ident == _10826_ident) && (_11225_v.get()._field_Binded == _10838_binded))) {
					return _11225_v;;
				};
			}
		_iter_next_1b8574ca2:;
		}
		_iter_end_1b8574ca2:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8576556:;
			if (it != expr_end) {
				jule::Ptr<_213d11988_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_Ident == _10826_ident) && (_11825_v.get()._field_Binded == _10838_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1b8576556:;
				++it;
				goto _iter_begin_1b8576556;
			}
			_iter_end_1b8576556:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_213d87adb_TypeAlias> _213d58cdd_findTypeAlias(_213d56417_SymbolTable* _self_, jule::Str _12732_ident, jule::Bool _12744_binded, jule::Bool _12758_reverse) {
	if (_12758_reverse) {
		jule::I32 _12921_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_213d87adb_TypeAlias> _13125_ta = (*(_self_))._field_TypeAliases[_12921_i];;
				if (((_13125_ta.get()._field_Ident == _12732_ident) && (_13125_ta.get()._field_Binded == _12744_binded))) {
					return _13125_ta;;
				};
			}
		_iter_next_1b8577bd9:;
		}
		_iter_end_1b8577bd9:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b857948d:;
			if (it != expr_end) {
				jule::Ptr<_213d87adb_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_Ident == _12732_ident) && (_13725_ta.get()._field_Binded == _12744_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1b857948d:;
				++it;
				goto _iter_begin_1b857948d;
			}
			_iter_end_1b857948d:;
		};
	};
	return nullptr;;
}



inline jule::Any _213d59195_defByIdent(_213d56417_SymbolTable* _self_, jule::Str _14829_ident, jule::Bool _14841_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b857a417:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_Ident == _14829_ident) && (_14921_v.get()._field_Binded == _14841_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1b857a417:;
			++it;
			goto _iter_begin_1b857a417;
		}
		_iter_end_1b857a417:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b857adc9:;
		if (it != expr_end) {
			jule::Ptr<_213d87adb_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_Ident == _14829_ident) && (_15521_ta.get()._field_Binded == _14841_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type67);;
				};
			}
			_iter_next_1b857adc9:;
			++it;
			goto _iter_begin_1b857adc9;
		}
		_iter_end_1b857adc9:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b857bcdc:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_Ident == _14829_ident) && (_16121_s.get()._field_Binded == _14841_binded))) {
					return jule::Any(_16121_s, &__jule_any_type66);;
				};
			}
			_iter_next_1b857bcdc:;
			++it;
			goto _iter_begin_1b857bcdc;
		}
		_iter_end_1b857bcdc:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b857c78d:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_Ident == _14829_ident) && (_16721_f.get()._field_Binded == _14841_binded))) {
					return jule::Any(_16721_f, &__jule_any_type65);;
				};
			}
			_iter_next_1b857c78d:;
			++it;
			goto _iter_begin_1b857c78d;
		}
		_iter_end_1b857c78d:;
	};
	if (_14841_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b857d838:;
		if (it != expr_end) {
			jule::Ptr<_213c88b63_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_Ident == _14829_ident)) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1b857d838:;
			++it;
			goto _iter_begin_1b857d838;
		}
		_iter_end_1b857d838:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b857e51a:;
		if (it != expr_end) {
			jule::Ptr<_213c8b3e6_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18321_e, &__jule_any_type68);;
				};
			}
			_iter_next_1b857e51a:;
			++it;
			goto _iter_begin_1b857e51a;
		}
		_iter_end_1b857e51a:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85802b8:;
		if (it != expr_end) {
			jule::Ptr<_213c8c9e1_TypeEnum> _18921_te = *it;
			{
				if ((_18921_te.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18921_te, &__jule_any_type69);;
				};
			}
			_iter_next_1b85802b8:;
			++it;
			goto _iter_begin_1b85802b8;
		}
		_iter_end_1b85802b8:;
	};
	return nullptr;;
}



inline jule::Bool _213d595e6_isDuplicatedIdent(_213d56417_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str _20149_ident, jule::Bool _20161_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8580e67:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*(_20216_v)).get()._field_Ident == _20149_ident)) && ((*(_20216_v)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1b8580e67:;
			++it;
			goto _iter_begin_1b8580e67;
		}
		_iter_end_1b8580e67:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8580e23:;
		if (it != expr_end) {
			jule::Ptr<_213d87adb_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*(_20816_ta)).get()._field_Ident == _20149_ident)) && ((*(_20816_ta)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1b8580e23:;
			++it;
			goto _iter_begin_1b8580e23;
		}
		_iter_end_1b8580e23:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85817c5:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*(_21416_s)).get()._field_Ident == _20149_ident)) && ((*(_21416_s)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1b85817c5:;
			++it;
			goto _iter_begin_1b85817c5;
		}
		_iter_end_1b85817c5:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8583eae:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*(_22016_f)).get()._field_Ident == _20149_ident)) && ((*(_22016_f)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1b8583eae:;
			++it;
			goto _iter_begin_1b8583eae;
		}
		_iter_end_1b8583eae:;
	};
	if (_20161_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b858518b:;
		if (it != expr_end) {
			jule::Ptr<_213c88b63_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*(_23016_t)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1b858518b:;
			++it;
			goto _iter_begin_1b858518b;
		}
		_iter_end_1b858518b:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85845db:;
		if (it != expr_end) {
			jule::Ptr<_213c8b3e6_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*(_23616_e)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1b85845db:;
			++it;
			goto _iter_begin_1b85845db;
		}
		_iter_end_1b85845db:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8586a50:;
		if (it != expr_end) {
			jule::Ptr<_213c8c9e1_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*(_24216_te)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1b8586a50:;
			++it;
			goto _iter_begin_1b8586a50;
		}
		_iter_end_1b8586a50:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _213d56417_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _213d5b2b8_IsNil(_213d5ae22_Data* _self_) {
	return _213d8988a_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _213d5b52c_IsVoid(_213d5ae22_Data* _self_) {
	return _213d89aee_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _213d5b791_IsConst(_213d5ae22_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _213d5ba9e_GoodOperand(_213d5ae22_Data* _self_, jule::Ptr<_213d5ae22_Data>* _10031_other) {
	if ((_213d8ba02_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_213d8b051_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_213d944ee_IsAny(_213d8b051_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_213d8c717_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_213d8988a_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _213d5ae22_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213d5be9a_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _213d5ce9b_pushErr(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_213ce38d2_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _213d5d2ba_pushSuggestion(_213d5c990_Eval* _self_, jule::Str _13633_fmt, jule::Slice<jule::Any> _13646_args) {
	_213ce3c01_pushSuggestion((*(_self_))._field_s.ptr(), _13633_fmt, _13646_args);
}



inline void _213d5d496_allowBuiltin(_213d5c990_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _213d5d672_disallowBuiltin(_213d5c990_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _213d5d8d6_isUnsafe(_213d5c990_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _213d5db4a_isGlobal(_213d5c990_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b85ba314:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b85ba3ad:;
			{
				return false;;
			}
		}
		_match_end_1b85ba930:;
	};
}



inline jule::Bool _213d5de25_applyNumericPrefix(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_213d5b791_IsConst((*(_16342_d)).ptr())))) || (_213d8b051_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_213d91089_Prim> _17013_prim = _213d8b051_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_2121a449d_IsFloat(_213d913b9_Str(_17013_prim.ptr()))) {
			_case_begin_1b85bcea4:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>((*((*(_self_))._field_prefix)));
				_2121a84a2_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_2121a7737_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_2121a3aeb_IsSigInt(_213d913b9_Str(_17013_prim.ptr()))) {
			_case_begin_1b85bd01a:;
			{
				if ((!(_213d43921_sigAssignable(_213d913b9_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>((*((*(_self_))._field_prefix)));
				_2121a79ac_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_2121a725e_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_2121a3dd7_IsUnsigInt(_213d913b9_Str(_17013_prim.ptr()))) {
			_case_begin_1b85bd081:;
			{
				if ((!(_213d43ca6_unsigAssignable(_213d913b9_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>((*((*(_self_))._field_prefix)));
				_2121a7c32_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_2121a74c3_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_1b85bcc84:;
	};
	return true;;
}



inline jule::Ptr<_213d5ae22_Data> _213d5e189_litNil(_213d5c990_Eval* _self_) {
	jule::Ptr<_2121a4c51_Const> _20217_constant = static__2121a5e0b_NewNil();;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type19), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213d5e497_litStr(_213d5c990_Eval* _self_, jule::Ptr<_213c46ed9_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_2114c2ec6_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_213d41ec4_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_213d422e3_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_2121a4c51_Const> _21817_constant = static__2121a5966_NewStr(_21217_s);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type19), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213d5e7a5_litBool(_213d5c990_Eval* _self_, jule::Ptr<_213c46ed9_LitExpr>* _22823_l) {
	jule::Ptr<_2121a4c51_Const> _22917_constant = static__2121a56be_NewBool((*(_22823_l)).get()._field_Value.equal("true", 4));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Mutable=true, ._field_Model=jule::Any(_22917_constant, &__jule_any_type19), ._field_Constant=_22917_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213d5eab3_litRune(_213d5c990_Eval* _self_, jule::Ptr<_213c46ed9_LitExpr>* _23823_l) {
	jule::Str _24013_lt = (*(_23823_l)).get()._field_Value.slice(1LL, ((*(_23823_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24113_r = _213d2a342_ToRune(static_cast<jule::Slice<jule::U8>>(_24013_lt));;
	jule::Ptr<_213d5ae22_Data> _24217_data = jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Constant=static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24113_r)))});;
	jule::Bool _24613_isAscii = _213d2a210_IsAscii(_24113_r);;
	if (_24613_isAscii) {
		_24217_data.get()._field_Kind=_213e54724_primU8;
	} else {
		_24217_data.get()._field_Kind=_213e54191_primI32;
	};
	_24217_data.get()._field_Mutable=true;
	_24217_data.get()._field_Model=jule::Any(jule::new_ptr<_213c73543_RuneExprModel>(_213c73543_RuneExprModel{._field_Code=_24113_r}), &__jule_any_type88);
	_24217_data.get()._field_IsRune=true;
	_24217_data.get()._field_untyped=true;
	return _24217_data;;
}



inline jule::Ptr<_213d5ae22_Data> _213d5edc1_litFloat(_213d5c990_Eval* _self_, jule::Ptr<_213c46ed9_LitExpr>* _26024_l) {
	jule::F64 _26113_f = ({
		auto except = _21218a9b2_ParseFloat((*(_26024_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_2121a4c51_Const> _26217_constant = static__2121a5c0d_NewF64(_26113_f);;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_untyped=true, ._field_Kind=_213e557ad_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_26217_constant, &__jule_any_type19), ._field_Constant=_26217_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213d601ce_litInt(_213d5c990_Eval* _self_, jule::Ptr<_213c46ed9_LitExpr>* _27226_l) {
	;
	jule::Str _27517_lit = (*(_27226_l)).get()._field_Value;;
	jule::I32 _27617_base = 0LL;;
	{
		
		if (_2110319be_HasPrefix(_27517_lit, jule::Str("0x", 2))) {
			_case_begin_1b85cc9db:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=16LLU;
			}
		}
		else if (_2110319be_HasPrefix(_27517_lit, jule::Str("0b", 2))) {
			_case_begin_1b85cca52:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=2LLU;
			}
		}
		else if (_2110319be_HasPrefix(_27517_lit, jule::Str("0o", 2))) {
			_case_begin_1b85cc700:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=8LLU;
			}
		}
		else if (((_27517_lit[0LL] == '0') && (_27517_lit.len() > 1LL))) {
			_case_begin_1b85cc766:;
			{
				(_27517_lit).mut_slice(1LL);;
				_27617_base=8LLU;
			}
		}
		else {
			_case_begin_1b85cc689:;
			{
				_27617_base=10LLU;
			}
		}
		_match_end_1b85cc623:;
	};
	jule::Ptr<_213d5ae22_Data> _29617_d = jule::new_ptr<_213d5ae22_Data>();;
	jule::Bool _29817_ok = true;;
	jule::I64 _29913_sig = ({
		auto except = _212184439_ParseInt(_27517_lit, _27617_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_29817_ok=false;

			0LL;
		});
	});;
	if (_29817_ok) {
		_29617_d.get()._field_Constant=static__2121a5180_NewI64(_29913_sig);
		_29617_d.get()._field_Kind=_213e53734_primInt;
	} else {
		jule::U64 _30717_unsig = ({
			auto except = _212183ec7_ParseUint(_27517_lit, _27617_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_213d5ce9b_pushErr(_self_, (*(_27226_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_213d5d2ba_pushSuggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_29617_d.get()._field_Constant=static__2121a5427_NewU64(_30717_unsig);
		_29617_d.get()._field_Kind=_213e5346a_primUint;
	};
	_29617_d.get()._field_Model=jule::Any(_29617_d.get()._field_Constant, &__jule_any_type19);
	if ((!(_213d5de25_applyNumericPrefix(_self_, &(_29617_d))))) {
		_213d82b91_fitBitsize(&(_29617_d));
	};
	_29617_d.get()._field_Mutable=true;
	_29617_d.get()._field_untyped=true;
	return _29617_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d604dc_litNum(_213d5c990_Eval* _self_, jule::Ptr<_213c46ed9_LitExpr>* _32826_l) {
	{
		
		if (_2114c3b31_IsFloat((*(_32826_l)).get()._field_Value)) {
			_case_begin_1b85d486c:;
			{
				return _213d5edc1_litFloat(_self_, _32826_l);;
			}
		}
		else {
			_case_begin_1b85d4185:;
			{
				return _213d601ce_litInt(_self_, _32826_l);;
			}
		}
		_match_end_1b85d40db:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d607ea_evalLit(_213d5c990_Eval* _self_, jule::Ptr<_213c46ed9_LitExpr> _33726_lit) {
	{
		
		if (_213c4733b_IsNil(_33726_lit.ptr())) {
			_case_begin_1b85d5373:;
			{
				return _213d5e189_litNil(_self_);;
			}
		}
		else if (_2114c2c2e_IsStr(_33726_lit.get()._field_Value)) {
			_case_begin_1b85d53d9:;
			{
				return _213d5e497_litStr(_self_, &(_33726_lit));;
			}
		}
		else if (_2114c3889_IsBool(_33726_lit.get()._field_Value)) {
			_case_begin_1b85d5450:;
			{
				return _213d5e7a5_litBool(_self_, &(_33726_lit));;
			}
		}
		else if (_2114c326d_IsRune(_33726_lit.get()._field_Value)) {
			_case_begin_1b85d54b6:;
			{
				return _213d5eab3_litRune(_self_, &(_33726_lit));;
			}
		}
		else if (_2114c3dc8_IsNum(_33726_lit.get()._field_Value)) {
			_case_begin_1b85d5609:;
			{
				return _213d604dc_litNum(_self_, &(_33726_lit));;
			}
		}
		else {
			_case_begin_1b85d4d45:;
			{
				return nullptr;;
			}
		}
		_match_end_1b85d443d:;
	};
}



inline jule::Any _213d60b08_findBuiltins(_213d5c990_Eval* _self_, jule::Str _35431_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1b85d784d:;
			{
				jule::Any _35721_def = _213d82982_findBuiltinsImport(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_213cd7c7d_ImportInfo>(1));;
				if ((_35721_def != nullptr)) {
					return _35721_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1b85d7cb0:;
			{
				jule::Any _36221_def = _213d83620_findBuiltinsSema(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_213ce1050_Sema>(3));;
				if ((_36221_def != nullptr)) {
					return _36221_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1b85d7d26:;
			{
				jule::Any _36721_def = _213d83620_findBuiltinsSema(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_213cc06a0_scopeChecker>(0).get()._field_s);;
				if ((_36721_def != nullptr)) {
					return _36721_def;;
				};
			}
		}
		_match_end_1b85d70ab:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _213e55c31_findBuiltinDef(_35431_ident);;
}



inline jule::Any _213d60eb0_getDef(_213d5c990_Eval* _self_, jule::Str _37825_ident, jule::Bool _37837_binded) {
	jule::Ptr<_213d11988_Var> _38317_v = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da54cc_FindVar((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_38317_v != nullptr)) {
		return jule::Any(_38317_v, &__jule_any_type8);;
	};
	jule::Ptr<_213d87adb_TypeAlias> _38817_ta = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da5884_FindTypeAlias((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_38817_ta != nullptr)) {
		return jule::Any(_38817_ta, &__jule_any_type67);;
	};
	if ((!(_37837_binded))) {
		jule::Ptr<_213c8b3e6_Enum> _39421_enm = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da670e_FindEnum((*(_self_))._field_lookup, _37825_ident);;
		if ((_39421_enm != nullptr)) {
			return jule::Any(_39421_enm, &__jule_any_type68);;
		};
		jule::Ptr<_213c8c9e1_TypeEnum> _39921_tenm = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da6a1c_FindTypeEnum((*(_self_))._field_lookup, _37825_ident);;
		if ((_39921_tenm != nullptr)) {
			return jule::Any(_39921_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_213c76a0d_Fn> _40517_f = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da60e3_FindFn((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_40517_f != nullptr)) {
		return jule::Any(_40517_f, &__jule_any_type65);;
	};
	jule::Ptr<_213c615db_Struct> _41017_s = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da5c3b_FindStruct((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_41017_s != nullptr)) {
		return jule::Any(_41017_s, &__jule_any_type66);;
	};
	return _213d60b08_findBuiltins(_self_, _37825_ident);;
}



inline void _1b85edd2b_pushReference(_213d5c990_Eval* _self_, jule::Ptr<_213c796ae_FnIns>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b86007cd:;
			{
				jule::Ptr<_213cc06a0_scopeChecker> _42121_sc = _213cc373b_getHardRoot((*(_self_))._field_lookup.cast_ptr<_213cc06a0_scopeChecker>(0));;
				if ((!(_1b8601768_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_213c7d284_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1b86001d4:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1b8601768_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_213c7d284_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1b860017e:;
	};
}

inline void _1b861248d_pushReference(_213d5c990_Eval* _self_, jule::Ptr<_213d11988_Var>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b8613deb:;
			{
				jule::Ptr<_213cc06a0_scopeChecker> _42121_sc = _213cc373b_getHardRoot((*(_self_))._field_lookup.cast_ptr<_213cc06a0_scopeChecker>(0));;
				if ((!(_1b8614d86_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_213c7d284_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1b8613802:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1b8614d86_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_213c7d284_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1b861379c:;
	};
}

inline void _1b86a42bb_pushReference(_213d5c990_Eval* _self_, jule::Ptr<_213c64402_StructIns>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b86a5c90:;
			{
				jule::Ptr<_213cc06a0_scopeChecker> _42121_sc = _213cc373b_getHardRoot((*(_self_))._field_lookup.cast_ptr<_213cc06a0_scopeChecker>(0));;
				if ((!(_1b86a6c2a_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_213c7d284_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1b86a5696:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1b86a6c2a_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_213c7d284_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1b86a5641:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d61543__evalEnum(_213d5c990_Eval* _self_, jule::Ptr<_213c8b3e6_Enum> _43528_enm) {
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_43528_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_213d5ae22_Data> _213d618ea_evalEnum(_213d5c990_Eval* _self_, jule::Ptr<_213c8b3e6_Enum> _44431_enm, jule::Ptr<_2114c1b73_Token> _44443_errorToken) {
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), _44431_enm.get()._field_Public, _44431_enm.get()._field_Token)))) {
		_213d5ce9b_pushErr(_self_, _44443_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_44431_enm.get()._field_Ident, &__jule_any_type5)}));
		_213d5d2ba_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _213d61543__evalEnum(_self_, _44431_enm);;
}



inline jule::Ptr<_213d5ae22_Data> _213d61c08__evalTypeEnum(_213d5c990_Eval* _self_, jule::Ptr<_213c8c9e1_TypeEnum> _45332_enm) {
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_45332_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_213d5ae22_Data> _213d620b0_evalTypeEnum(_213d5c990_Eval* _self_, jule::Ptr<_213c8c9e1_TypeEnum> _46235_enm, jule::Ptr<_2114c1b73_Token> _46251_errorToken) {
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), _46235_enm.get()._field_Public, _46235_enm.get()._field_Token)))) {
		_213d5ce9b_pushErr(_self_, _46251_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_46235_enm.get()._field_Ident, &__jule_any_type5)}));
		_213d5d2ba_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _213d61c08__evalTypeEnum(_self_, _46235_enm);;
}



inline jule::Ptr<_213d5ae22_Data> _213d623bd__evalStruct(_213d5c990_Eval* _self_, jule::Ptr<_213c64402_StructIns> _47130_s) {
	jule::Ptr<_213d5ae22_Data> _47217_d = jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_47130_s, 0)}), ._field_Model=jule::Any(_47130_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_47130_s.get()._field_Decl != nullptr) && _47130_s.get()._field_Decl.get()._field_Binded)) {
		_47217_d.get()._field_Kind.get()._field_BindIdent=_47130_s.get()._field_Decl.get()._field_Ident;
	};
	return _47217_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d62775_evalStruct(_213d5c990_Eval* _self_, jule::Ptr<_213c64402_StructIns> _48533_s, jule::Ptr<_2114c1b73_Token> _48548_errorToken) {
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), _48533_s.get()._field_Decl.get()._field_Public, _48533_s.get()._field_Decl.get()._field_Token)))) {
		_213d5ce9b_pushErr(_self_, _48548_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_48533_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_213d5d2ba_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_213d62da2_checkDeprecated(_self_, &(_48533_s.get()._field_Decl.get()._field_Directives), _48548_errorToken);
	return _213d623bd__evalStruct(_self_, _48533_s);;
}



inline jule::Ptr<_213d5ae22_Data> _213d62a83_evalFnIns(_213d5c990_Eval* _self_, jule::Ptr<_213c796ae_FnIns> _49528_f) {
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_49528_f, 1)}), ._field_Model=jule::Any(_49528_f, &__jule_any_type7), });;
}



inline void _213d62da2_checkDeprecated(_213d5c990_Eval* _self_, jule::Slice<jule::Ptr<_213c0e314_Directive>>* _50439_directives, jule::Ptr<_2114c1b73_Token> _50470_tok) {
	if (_213d5d8d6_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_213c0e314_Directive> _50913_d = _213d825ec_findDirective(_50439_directives, jule::Str("deprecated", 10));;
	if ((_50913_d != nullptr)) {
		if ((_50913_d.get()._field_Args.len() == 0LL)) {
			_213d5ce9b_pushErr(_self_, _50470_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_213d5ce9b_pushErr(_self_, _50470_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_50913_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_213d5d2ba_pushSuggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d63259_evalFn(_213d5c990_Eval* _self_, jule::Ptr<_213c76a0d_Fn> _52029_f, jule::Ptr<_2114c1b73_Token> _52037_errorToken) {
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), _52029_f.get()._field_Public, _52029_f.get()._field_Token)))) {
		_213d5ce9b_pushErr(_self_, _52037_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_52029_f.get()._field_Ident, &__jule_any_type5)}));
		_213d5d2ba_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_213d62da2_checkDeprecated(_self_, &(_52029_f.get()._field_Directives), _52037_errorToken);
	jule::Ptr<_213c796ae_FnIns> _52917_ins = _213c7815d_instance(_52029_f);;
	_1b85edd2b_pushReference(_self_, &(_52917_ins));
	return _213d62a83_evalFnIns(_self_, _52917_ins);;
}



inline void _213d63622_pushIllegalCycleError(_213d5c990_Eval* _self_, jule::Ptr<_213d11988_Var>* _53441_v1, jule::Ptr<_213d11988_Var>* _53452_v2, jule::Str* _53467_message) {
	;
	jule::Str _53613_refers_to = _2110be71b_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_53441_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_53452_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_53467_message))).buffer.insert(0, (((_21103124e_Repeat(jule::Str(" ", 1), 7LL) + _53613_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _213d639c9_checkCrossCycle(_213d5c990_Eval* _self_, jule::Ptr<_213d11988_Var>* _54035_v, jule::Str* _54049_message) {
	{
		auto expr = &((*(_54035_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8606592:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> *_54116_d = it;
			{
				if (((*(_54116_d)) == (*(_self_))._field_owner)) {
					_213d63622_pushIllegalCycleError(_self_, _54035_v, _54116_d, _54049_message);
					return false;;
				};
				if ((!(_213d639c9_checkCrossCycle(_self_, _54116_d, _54049_message)))) {
					_213d63622_pushIllegalCycleError(_self_, _54035_v, _54116_d, _54049_message);
					return false;;
				};
			}
			_iter_next_1b8606592:;
			++it;
			goto _iter_begin_1b8606592;
		}
		_iter_end_1b8606592:;
	};
	return true;;
}



inline jule::Bool _213d63d81_checkIllegalCycles(_213d5c990_Eval* _self_, jule::Ptr<_213d11988_Var>* _55942_v, jule::Ptr<_2114c1b73_Token> _55951_decl_token) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*(_self_))._field_owner.get()._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_55942_v)))) {
		_213d5ce9b_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _57217_message = jule::Str();;
	if ((!(_213d639c9_checkCrossCycle(_self_, _55942_v, &(_57217_message))))) {
		jule::Str _57521_errMsg = _57217_message;;
		_57217_message=jule::Str();
		_213d63622_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _55942_v, &(_57217_message));
		_57521_errMsg+=_57217_message;
		_213d5ce9b_pushErr(_self_, _55951_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_57521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = (*(_self_))._field_owner.get()._field_Depends; __jule_push_dest.push((*(_55942_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_213d5ae22_Data> _213d64238_evalVar(_213d5c990_Eval* _self_, jule::Ptr<_213d11988_Var> _58730_v, jule::Ptr<_2114c1b73_Token> _58739_errorToken) {
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), _58730_v.get()._field_Public, _58730_v.get()._field_Token)))) {
		_213d5ce9b_pushErr(_self_, _58739_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_58730_v.get()._field_Ident, &__jule_any_type5)}));
		_213d5d2ba_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_213d62da2_checkDeprecated(_self_, &(_58730_v.get()._field_Directives), _58739_errorToken);
	_58730_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b860d5cc:;
			{
				jule::Bool _60117_ok = _213d63d81_checkIllegalCycles(_self_, &(_58730_v), _58739_errorToken);;
				if ((!(_60117_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1b860d687:;
			{
				if (((!(_58730_v.get()._field_Reference)) || _213d5d8d6_isUnsafe(_self_))) {
					goto _match_end_1b860d577;
				};
				jule::Ptr<_213cc06a0_scopeChecker> _60921_s = (*(_self_))._field_lookup.cast_ptr<_213cc06a0_scopeChecker>(0);;
				while (((_60921_s.get()._field_owner == nullptr) && (_60921_s.get()._field_parent != nullptr))) {
					{
						_60921_s=_60921_s.get()._field_parent;
					}
				_iter_next_1b8610777:;
				}
				_iter_end_1b8610777:;;
				if ((((_60921_s.get()._field_owner != nullptr) && _60921_s.get()._field_owner.get()._field_Anon) && (_58730_v.get()._field_Scope != _60921_s.get()._field_owner.get()._field_Scope))) {
					_213d5ce9b_pushErr(_self_, _58739_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_58730_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_1b860d577:;
	};
	if ((_58730_v.get()._field_Scope == nullptr)) {
		_1b861248d_pushReference(_self_, &(_58730_v));
	};
	if (((!(_58730_v.get()._field_Binded)) && ((_58730_v.get()._field_Value == nullptr) || (_58730_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_58730_v.get()._field_Constant) {
			_213d08d7b_checkVar((*(_self_))._field_s, &(_58730_v), jule::Trait<_213da6b60_Lookup>((*(_self_))._field_s, 3));
			if (((_58730_v.get()._field_Value == nullptr) || (_58730_v.get()._field_Value.get()._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if (((_58730_v.get()._field_Kind == nullptr) || (_58730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_58730_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_213d08d7b_checkVar((*(_self_))._field_s, &(_58730_v), (*(_self_))._field_lookup);
		if (((_58730_v.get()._field_Kind == nullptr) || (_58730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_213d5ae22_Data> _65217_d = jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_58730_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_58730_v.get()._field_Mutable, ._field_Reference=_58730_v.get()._field_Reference, ._field_Lvalue=(!(_58730_v.get()._field_Constant)), ._field_Model=jule::Any(_58730_v, &__jule_any_type8), });;
	if ((((!(_58730_v.get()._field_Binded)) && _213d11d0c_IsInitialized(_58730_v.ptr())) && (_58730_v.get()._field_Value.get()._field_Data != nullptr))) {
		_65217_d.get()._field_IsRune=_58730_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_58730_v.get()._field_Constant && (_58730_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_65217_d.get()._field_Constant=jule::new_ptr<_2121a4c51_Const>((*(_58730_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_65217_d.get()._field_Model=jule::Any(_65217_d.get()._field_Constant, &__jule_any_type19);
		if (_213d122d5_untypedConstant(_58730_v.ptr())) {
			_213d5de25_applyNumericPrefix(_self_, &(_65217_d));
			_65217_d.get()._field_untyped=true;
		};
	};
	return _65217_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d645e0_evalTypeAlias(_213d5c990_Eval* _self_, jule::Ptr<_213d87adb_TypeAlias> _67636_ta, jule::Ptr<_2114c1b73_Token> _67652_errorToken) {
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), _67636_ta.get()._field_Public, _67636_ta.get()._field_Token)))) {
		_213d5ce9b_pushErr(_self_, _67652_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_67636_ta.get()._field_Ident, &__jule_any_type5)}));
		_213d5d2ba_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_67636_ta.get()._field_Used=true;
	jule::Trait<_213d883c2_Kind> _68517_kind = _67636_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_213d5ae22_Data> _68617_d = nullptr;;
	{
		auto &_match_expr{ _68517_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b86235c0:;
			{
				_68617_d=_213d623bd__evalStruct(_self_, _68517_kind.cast_ptr<_213c64402_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1b8622d72:;
			{
				_68617_d=_213d61543__evalEnum(_self_, _68517_kind.cast_ptr<_213c8b3e6_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b8621e4d:;
			{
				_68617_d=_213d61c08__evalTypeEnum(_self_, _68517_kind.cast_ptr<_213c8c9e1_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1b8621d4e:;
			{
				_68617_d=jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=_67636_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_67636_ta.get()._field_Binded) {
					_68617_d.get()._field_Kind.get()._field_BindIdent=_67636_ta.get()._field_Ident;
				} else {
					_68617_d.get()._field_Kind.get()._field_BindIdent=_67636_ta.get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
				};
				_68617_d.get()._field_Model=jule::Any(_68617_d.get()._field_Kind, &__jule_any_type89);
			}
		}
		_match_end_1b86219b9:;
	};
	_68617_d.get()._field_Kind.get()._field_Generic=_67636_ta.get()._field_Generic;
	return _68617_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d64997_evalDef(_213d5c990_Eval* _self_, jule::Any _71230_def, jule::Ptr<_2114c1b73_Token> _71240_ident) {
	{
		auto &_match_expr{ _71230_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b8625ea7:;
			{
				return _213d64238_evalVar(_self_, _71230_def.cast_ptr<_213d11988_Var>(&__jule_any_type8), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1b862601d:;
			{
				return _213d618ea_evalEnum(_self_, _71230_def.cast_ptr<_213c8b3e6_Enum>(&__jule_any_type68), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1b8626084:;
			{
				return _213d620b0_evalTypeEnum(_self_, _71230_def.cast_ptr<_213c8c9e1_TypeEnum>(&__jule_any_type69), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b862610b:;
			{
				return _213d62775_evalStruct(_self_, _213c61a4d_instance(_71230_def.cast_ptr<_213c615db_Struct>(&__jule_any_type66)), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b8626172:;
			{
				jule::Ptr<_213c76a0d_Fn> _72321_f = _71230_def.cast_ptr<_213c76a0d_Fn>(&__jule_any_type65);;
				if ((!_72321_f.get()._field_Ident.equal("init", 4))) {
					return _213d63259_evalFn(_self_, _72321_f, _71240_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b86261e9:;
			{
				return _213d62a83_evalFnIns(_self_, _71230_def.cast_ptr<_213c796ae_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b8626271:;
			{
				return _213d645e0_evalTypeAlias(_self_, _71230_def.cast_ptr<_213d87adb_TypeAlias>(&__jule_any_type67), _71240_ident);;
			}
		}
		_match_end_1b8625db9:;
	};
	_213d5ce9b_pushErr(_self_, _71240_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_71240_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_213d5ae22_Data> _213d64ca5_evalIdent(_213d5c990_Eval* _self_, jule::Ptr<_213c47a9a_IdentExpr> _73628_ident) {
	jule::Any _73717_def = _213d60eb0_getDef(_self_, _73628_ident.get()._field_Ident, _73628_ident.get()._field_Binded);;
	return _213d64997_evalDef(_self_, _73717_def, _73628_ident.get()._field_Token);;
}



inline jule::Ptr<_213d5ae22_Data> _213d650b3_evalUnary(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c482a4_UnaryExpr> _74133_u) {
	_213d798d0_unaryEval _74217_unary = static__213d79d0e_new(_self_);;
	return _213d7b0da_eval(&_74217_unary, _74133_u);;
}



inline jule::Ptr<_213d5ae22_Data> _213d653c1_evalVariadic(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c4865b_VariadicExpr> _74636_v) {
	if ((_74636_v.get()._field_Expr == nullptr)) {
		_213d5ce9b_pushErr(_self_.ptr(), _74636_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213d88834_TypeKind> _75217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75217_prefix;
	});;
	jule::Ptr<_213d5ae22_Data> _75617_d = _213d7945c_evalExpr(_self_, _74636_v.get()._field_Expr);;
	if ((_75617_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_213d8acdc_Variadicable(_75617_d.get()._field_Kind.ptr())))) {
		_213d5ce9b_pushErr(_self_.ptr(), _74636_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_75617_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213d95247_Slc> _76617_slc = _213d8beca_Slc(_75617_d.get()._field_Kind.ptr());;
	_75617_d.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_BindIdent=_76617_slc.get()._field_Elem.get()._field_BindIdent, ._field_Generic=_76617_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_76617_slc.get()._field_Elem.get()._field_Kind});
	return _75617_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d656ce_evalUnsafe(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c47627_UnsafeExpr> _77634_u) {
	jule::Bool _77713_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_213d5ae22_Data> _77917_d = _213d7945c_evalExpr(_self_, _77634_u.get()._field_Expr);;
	_self_.get()._field_unsafety=_77713_unsafety;
	return _77917_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d659dc_evalArr(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c4c5e9_SliceExpr> _78431_s) {
	jule::Ptr<_213d973e2_Arr> _78617_pt = _213d8bc66_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_213d973e2_Arr> _78817_arr = jule::new_ptr<_213d973e2_Arr>(_213d973e2_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_78617_pt.get()._field_Elem});;
	jule::Bool _79417_filled = false;;
	if ((_78431_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _78431_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1b8634bdb:;
				{
					if ((_78431_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_213c4865b_VariadicExpr>(&__jule_any_type81).get()._field_Expr != nullptr)) {
						goto _match_end_1b8634b86;
					};
					if (_78617_pt.get()._field_Auto) {
						_213d5ce9b_pushErr(_self_.ptr(), _78431_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_79417_filled=true;
					_78431_s.get()._field_Exprs=_78431_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1b8634b86:;
		};
	};
	_78817_arr.get()._field_N=static_cast<jule::I32>(_78431_s.get()._field_Exprs.len());
	if ((!(_78617_pt.get()._field_Auto))) {
		if ((_78817_arr.get()._field_N > _78617_pt.get()._field_N)) {
			_213d5ce9b_pushErr(_self_.ptr(), _78431_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_78817_arr.get()._field_N < _78617_pt.get()._field_N)) {
			_78817_arr.get()._field_N=_78617_pt.get()._field_N;
		};
	};
	jule::Ptr<_213c6d7d5_ArrayExprModel> _82317_model = jule::new_ptr<_213c6d7d5_ArrayExprModel>(_213c6d7d5_ArrayExprModel{._field_Kind=_78817_arr, });;
	if (_79417_filled) {
		_82317_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_82317_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _78431_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_213d88834_TypeKind> _83217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78817_arr.get()._field_Elem;
	{
		auto expr = &(_78431_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8639a6a:;
		if (it != expr_end) {
			jule::Ptr<_213c45ea5_Expr> _83421_elem = *it;
			{
				jule::Ptr<_213d5ae22_Data> _83521_d = _213d7945c_evalExpr(_self_, _83421_elem);;
				if ((_83521_d == nullptr)) {
					goto _iter_next_1b8639a6a;
				};
				_213ceab70_checkAssignType(_self_.get()._field_s, false, &(_78817_arr.get()._field_Elem), &(_83521_d), _78431_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _82317_model.get()._field_Elems; __jule_push_dest.push(_83521_d.get()._field_Model); };
			}
			_iter_next_1b8639a6a:;
			++it;
			goto _iter_begin_1b8639a6a;
		}
		_iter_end_1b8639a6a:;
	};
	_self_.get()._field_prefix=_83217_prefix;
	if (_79417_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _82317_model.get()._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_78817_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_82317_model, &__jule_any_type90), });;
}



inline jule::Ptr<_213d5ae22_Data> _213d65e3d_evalExpSlc(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c4c5e9_SliceExpr> _85834_s, jule::Ptr<_213d88834_TypeKind> _85853_t, jule::Any _85871_first) {
	jule::Ptr<_213d95247_Slc> _85917_slc = jule::new_ptr<_213d95247_Slc>(_213d95247_Slc{._field_Elem=_85853_t});;
	jule::I32 _86317_i = 0LL;;
	jule::Ptr<_213c6aaac_SliceExprModel> _86417_model = jule::new_ptr<_213c6aaac_SliceExprModel>(_213c6aaac_SliceExprModel{._field_ElemKind=_85853_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _85834_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_85871_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _86417_model.get()._field_Elems; __jule_push_dest.push(_85871_first); };
		_86317_i=1LL;
	};
	jule::Ptr<_213d88834_TypeKind> _87317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85917_slc.get()._field_Elem;
	{
		auto expr = _85834_s.get()._field_Exprs.slice(_86317_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b8640114:;
		if (it != expr_end) {
			jule::Ptr<_213c45ea5_Expr> _87521_elem = *it;
			{
				jule::Ptr<_213d5ae22_Data> _87621_d = _213d7945c_evalExpr(_self_, _87521_elem);;
				if ((_87621_d == nullptr)) {
					goto _iter_next_1b8640114;
				};
				_213ceab70_checkAssignType(_self_.get()._field_s, false, &(_85917_slc.get()._field_Elem), &(_87621_d), _85834_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _86417_model.get()._field_Elems; __jule_push_dest.push(_87621_d.get()._field_Model); };
			}
			_iter_next_1b8640114:;
			++it;
			goto _iter_begin_1b8640114;
		}
		_iter_end_1b8640114:;
	};
	_self_.get()._field_prefix=_87317_prefix;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_85917_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_86417_model, &__jule_any_type82), });;
}



inline jule::Ptr<_213d5ae22_Data> _213d6624b_evalSliceExpr(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c4c5e9_SliceExpr> _89437_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_213d8bc66_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b8647e0d:;
				{
					return _213d659dc_evalArr(_self_, _89437_s);;
				}
			}
			else if ((_213d8beca_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b8647e85:;
				{
					jule::Ptr<_213d95247_Slc> _90025_pt = _213d8beca_Slc(_self_.get()._field_prefix.ptr());;
					return _213d65e3d_evalExpSlc(_self_, _89437_s, _90025_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_1b8647ced:;
		};
	};
	jule::Ptr<_213d88834_TypeKind> _90517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_89437_s.get()._field_Exprs.len() == 0LL)) {
		_213d5ce9b_pushErr(_self_.ptr(), _89437_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213d5ae22_Data> _91317_firstElem = _213d7945c_evalExpr(_self_, _89437_s.get()._field_Exprs[0LL]);;
	if ((_91317_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_213d5ae22_Data> _91817_d = _213d65e3d_evalExpSlc(_self_, _89437_s, _91317_firstElem.get()._field_Kind, _91317_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_90517_prefix;
	return _91817_d;;
}



inline void _213d6658c_checkIntegerIndexingByData(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data>* _92450_d, jule::Ptr<_2114c1b73_Token> _92460_token) {
	jule::Str _92513_err_key = _213d84a94_checkDataForIntegerIndexing(_92450_d);;
	{
		auto &_match_expr{ _92513_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b864c96d:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1b864d573:;
			{
				_213d5ce9b_pushErr(_self_, _92460_token, _92513_err_key, jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_92450_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1b864cce2:;
			{
				_213d5ce9b_pushErr(_self_, _92460_token, _92513_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1b864cc15:;
	};
}



inline void _213d66966_indexingPtr(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data>* _93635_d, jule::Ptr<_213d5ae22_Data>* _93650_index, jule::Ptr<_213c4ce57_IndexingExpr>* _93665_i) {
	_213d6658c_checkIntegerIndexingByData(_self_, _93650_index, (*(_93665_i)).get()._field_Token);
	jule::Ptr<_213d97d4e_Ptr> _93917_ptr = _213d8b529_Ptr((*(_93635_d)).get()._field_Kind.ptr());;
	{
		
		if (_213d98822_IsUnsafe(_93917_ptr.ptr())) {
			_case_begin_1b8650311:;
			{
				_213d5ce9b_pushErr(_self_, (*(_93665_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_213d5d8d6_isUnsafe(_self_)))) {
			_case_begin_1b8650388:;
			{
				_213d5ce9b_pushErr(_self_, (*(_93665_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b8650201:;
	};
	(*(_93635_d)).get()._field_Kind=_93917_ptr.get()._field_Elem;
}



inline void _213d66d2e_indexingArr(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data>* _95135_d, jule::Ptr<_213d5ae22_Data>* _95150_index, jule::Ptr<_213c4ce57_IndexingExpr>* _95165_i) {
	jule::Ptr<_213d973e2_Arr> _95217_arr = _213d8bc66_Arr((*(_95135_d)).get()._field_Kind.ptr());;
	(*(_95135_d)).get()._field_Kind=_95217_arr.get()._field_Elem;
	_213d6658c_checkIntegerIndexingByData(_self_, _95150_index, (*(_95165_i)).get()._field_Token);
	if ((_213d5b791_IsConst((*(_95150_index)).ptr()) && (_2121a7737_AsF64((*(_95150_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_95217_arr.get()._field_N)))) {
		_213d5ce9b_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _213d671e7_indexingSlc(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data>* _96035_d, jule::Ptr<_213d5ae22_Data>* _96050_index, jule::Ptr<_213c4ce57_IndexingExpr>* _96065_i) {
	jule::Ptr<_213d95247_Slc> _96117_slc = _213d8beca_Slc((*(_96035_d)).get()._field_Kind.ptr());;
	(*(_96035_d)).get()._field_Kind=_96117_slc.get()._field_Elem;
	_213d6658c_checkIntegerIndexingByData(_self_, _96050_index, (*(_96065_i)).get()._field_Token);
	if ((!(_213d5b791_IsConst((*(_96050_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_96035_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b8655679:;
			{
				jule::Ptr<_213c6aaac_SliceExprModel> _97121_m = (*(_96035_d)).get()._field_Model.cast_ptr<_213c6aaac_SliceExprModel>(&__jule_any_type82);;
				jule::F64 _97217_indx = _2121a7737_AsF64((*(_96050_index)).get()._field_Constant.ptr());;
				if ((_97217_indx >= static_cast<jule::F64>(_97121_m.get()._field_Elems.len()))) {
					_213d5ce9b_pushErr(_self_, (*(_96065_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_96035_d)).get()._field_Model=_97121_m.get()._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_97217_indx))];
					(*(_96035_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_1b86555e1:;
	};
}



inline void _213d675b0_indexingMap(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data>* _98235_d, jule::Ptr<_213d5ae22_Data>* _98250_index, jule::Ptr<_213c4ce57_IndexingExpr>* _98269_i) {
	if (((*(_98250_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_213d967ed_Map> _98617_m = _213d8c97b_Map((*(_98235_d)).get()._field_Kind.ptr());;
	_213d461c6_assignTypeChecker _98717_atc = _213d461c6_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_98617_m.get()._field_Key, ._field_d=(*(_98250_index)), ._field_errorToken=(*(_98269_i)).get()._field_Token};;
	_213d4734d_check(&_98717_atc);
	(*(_98235_d)).get()._field_Kind=_98617_m.get()._field_Val;
}



inline void _213d67978_indexingStr(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data>* _99735_d, jule::Ptr<_213d5ae22_Data>* _99750_index, jule::Ptr<_213c4ce57_IndexingExpr>* _99765_i) {
	(*(_99735_d)).get()._field_Kind=_213e54724_primU8;
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	_213d6658c_checkIntegerIndexingByData(_self_, _99750_index, (*(_99765_i)).get()._field_Token);
	if ((!(_213d5b791_IsConst((*(_99750_index)).ptr())))) {
		(*(_99735_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_213d5b791_IsConst((*(_99735_d)).ptr())) {
		jule::Ptr<_2114c1b73_Token> _101217_errorToken = (*(_99765_i)).get()._field_Token;;
		jule::I64 _101317_j = _2121a725e_AsI64((*(_99750_index)).get()._field_Constant.ptr());;
		jule::Str _101417_s = _2121a6c86_ReadStr((*(_99735_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I32>(_101317_j) >= _101417_s.len())) {
			_213d5ce9b_pushErr(_self_, _101217_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_2121a7c32_SetU64((*(_99735_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101417_s[static_cast<jule::I32>(_101317_j)])));
		};
	};
}



inline void _213d67d41_toIndexing(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data>* _102334_d, jule::Ptr<_213d5ae22_Data>* _102349_index, jule::Ptr<_213c4ce57_IndexingExpr>* _102368_i) {
	{
		
		if ((_213d8b529_Ptr((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b865e243:;
			{
				_213d66966_indexingPtr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_213d8bc66_Arr((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b865e2ba:;
			{
				_213d66d2e_indexingArr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_213d8beca_Slc((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b865e342:;
			{
				_213d671e7_indexingSlc(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_213d8c97b_Map((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b865e3b9:;
			{
				_213d675b0_indexingMap(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_213d8b051_Prim((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b865e441:;
			{
				jule::Ptr<_213d91089_Prim> _103817_prim = _213d8b051_Prim((*(_102334_d)).get()._field_Kind.ptr());;
				{
					
					if (_213d9428a_IsStr(_103817_prim.ptr())) {
						_case_begin_1b8662b81:;
						{
							_213d67978_indexingStr(_self_, _102334_d, _102349_index, _102368_i);
							return;;
						}
					}
					_match_end_1b8662ae8:;
				};
			}
		}
		_match_end_1b865e100:;
	};
	_213d5ce9b_pushErr(_self_, (*(_102368_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_102334_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _213d682b4_pushGenericsFromExprSubIdent(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c4933d_SubIdentExpr>* _104853_sexpr, jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>>* _104914_generics, jule::Ptr<_213c45ea5_Expr>* _104942_expr) {
	jule::Ptr<_213c426cc_SubIdentTypeDecl> _105017_t = jule::new_ptr<_213c426cc_SubIdentTypeDecl>();;
	if ((!(_213d85864_pushSubIdentFromExpr(jule::Any((*(_104853_sexpr)), &__jule_any_type91), &(_105017_t))))) {
		_213d5ce9b_pushErr(_self_.ptr(), (*(_104942_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> &__jule_push_dest = (*(_104914_generics)); __jule_push_dest.push(jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Kind=jule::Any(_105017_t, &__jule_any_type92)})); };
	return true;;
}



inline jule::Bool _213d6867c_pushGenericsFromData(jule::Ptr<_213d5c990_Eval> _self_, jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>>* _105945_generics, jule::Ptr<_213c45ea5_Expr>* _105973_expr) {
	{
		auto &_match_expr{ (*(_105973_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b86665ad:;
			{
				jule::Ptr<_213c482a4_UnaryExpr> _106221_u = (*(_105973_expr)).get()._field_Kind.cast_ptr<_213c482a4_UnaryExpr>(&__jule_any_type93);;
				{
					auto &_match_expr{ _106221_u.get()._field_Op.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_1b8667449:;
						{
							jule::Ptr<_213c43810_PtrTypeDecl> _106525_kind = jule::new_ptr<_213c43810_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> _106625__generics = jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>>::alloc(0LL, 1LL);;
							_213d6867c_pushGenericsFromData(_self_, &(_106625__generics), &(_106221_u.get()._field_Expr));
							_106525_kind.get()._field_Elem=_106625__generics[0LL];
							{ jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=(*(_105973_expr)).get()._field_Token, ._field_Kind=jule::Any(_106525_kind, &__jule_any_type77)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_1b8667c85:;
						{
							jule::Ptr<_213c42d3c_SptrTypeDecl> _107425_kind = jule::new_ptr<_213c42d3c_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> _107525__generics = jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>>::alloc(0LL, 1LL);;
							_213d6867c_pushGenericsFromData(_self_, &(_107525__generics), &(_106221_u.get()._field_Expr));
							_107425_kind.get()._field_Elem=_107525__generics[0LL];
							{ jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=(*(_105973_expr)).get()._field_Token, ._field_Kind=jule::Any(_107425_kind, &__jule_any_type78)})); };
						}
					}
					else {
						_case_begin_1b8667735:;
						{
							_213d5ce9b_pushErr(_self_.ptr(), _106221_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1b86676d0:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b8666833:;
			{
				{ jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push((*(_105973_expr)).get()._field_Kind.cast_ptr<_213c41d2a_TypeDecl>(&__jule_any_type94)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b8666723:;
			{
				jule::Ptr<_213c4933d_SubIdentExpr> _108921_sexpr = (*(_105973_expr)).get()._field_Kind.cast_ptr<_213c4933d_SubIdentExpr>(&__jule_any_type91);;
				return _213d682b4_pushGenericsFromExprSubIdent(_self_, &(_108921_sexpr), _105945_generics, _105973_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b8665da4:;
			{
				jule::Ptr<_213c47a9a_IdentExpr> _109221_ident = (*(_105973_expr)).get()._field_Kind.cast_ptr<_213c47a9a_IdentExpr>(&__jule_any_type85);;
				{ jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_213c423e1_IdentTypeDecl>(_213c423e1_IdentTypeDecl{._field_Token=_109221_ident.get()._field_Token, ._field_Ident=_109221_ident.get()._field_Ident, ._field_Binded=_109221_ident.get()._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b8665e1a:;
			{
				{
					auto expr = &((*(_105973_expr)).get()._field_Kind.cast_ptr<_213c46b32_TupleExpr>(&__jule_any_type86).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b866e1cb:;
					if (it != expr_end) {
						jule::Ptr<_213c45ea5_Expr> _110125_texpr = *it;
						{
							if ((!(_213d6867c_pushGenericsFromData(_self_, _105945_generics, &(_110125_texpr))))) {
								return false;;
							};
						}
						_iter_next_1b866e1cb:;
						++it;
						goto _iter_begin_1b866e1cb;
					}
					_iter_end_1b866e1cb:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b8665e81:;
			{
				jule::Ptr<_213c48dba_NsSelectionExpr> _110721_ns = (*(_105973_expr)).get()._field_Kind.cast_ptr<_213c48dba_NsSelectionExpr>(&__jule_any_type95);;
				jule::Ptr<_213c423e1_IdentTypeDecl> _110821_decl = jule::new_ptr<_213c423e1_IdentTypeDecl>(_213c423e1_IdentTypeDecl{._field_Token=_110721_ns.get()._field_Ident, ._field_Ident=_110721_ns.get()._field_Ident.get()._field_Kind, });;
				{ jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> &__jule_push_dest = (*(_105945_generics)); __jule_push_dest.push(jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=_110821_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_213c42a51_NamespaceTypeDecl>(_213c42a51_NamespaceTypeDecl{._field_Idents=_110721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=_110821_decl.get()._field_Token, ._field_Kind=jule::Any(_110821_decl, &__jule_any_type20)})}), &__jule_any_type96)})); };
			}
		}
		else {
			_case_begin_1b8665d2c:;
			{
				_213d5ce9b_pushErr(_self_.ptr(), (*(_105973_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b8665cc7:;
	};
	return true;;
}



inline void _213d689bd_evalIdentDeclFromIndexing(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213d5ae22_Data>* _112950_d, jule::Ptr<_213c4ce57_IndexingExpr>* _112965_i) {
	jule::Ptr<_213c64402_StructIns> _113017_s = _213d8c4a3_Struct((*(_112950_d)).get()._field_Kind.ptr());;
	if ((_113017_s == nullptr)) {
		_213d5ce9b_pushErr(_self_.ptr(), (*(_112965_i)).get()._field_Expr.get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_112950_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_112950_d))=nullptr;
		return;;
	};
	jule::Ptr<_213c423e1_IdentTypeDecl> _113717_decl = nullptr;;
	{
		auto &_match_expr{ (*(_112965_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b8673e7d:;
			{
				jule::Ptr<_213c47a9a_IdentExpr> _114021_expr = (*(_112965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_213c47a9a_IdentExpr>(&__jule_any_type85);;
				_113717_decl=jule::new_ptr<_213c423e1_IdentTypeDecl>(_213c423e1_IdentTypeDecl{._field_Token=_114021_expr.get()._field_Token, ._field_Ident=_114021_expr.get()._field_Ident, ._field_Binded=_114021_expr.get()._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b8674d19:;
			{
				jule::Ptr<_213c48dba_NsSelectionExpr> _114721_expr = (*(_112965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_213c48dba_NsSelectionExpr>(&__jule_any_type95);;
				_113717_decl=jule::new_ptr<_213c423e1_IdentTypeDecl>(_213c423e1_IdentTypeDecl{._field_Token=_114721_expr.get()._field_Ident, ._field_Ident=_114721_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1b86741d1:;
			{
				_213d5ce9b_pushErr(_self_.ptr(), (*(_112965_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112950_d))=nullptr;
				return;;
			}
		}
		_match_end_1b867417b:;
	};
	if ((!(_213d6867c_pushGenericsFromData(_self_, &(_113717_decl.get()._field_Generics), &((*(_112965_i)).get()._field_Index))))) {
		(*(_112950_d))=nullptr;
		return;;
	};
	_113017_s=({ auto _wrap_copy = _213d6ec27_typeChecker(_self_.ptr()); _213d9d6d4_fromStruct(&_wrap_copy, &(_113717_decl), &(_113017_s.get()._field_Decl)); });
	if ((_113017_s == nullptr)) {
		(*(_112950_d))=nullptr;
		return;;
	};
	(*(_112950_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_213d883c2_Kind>(_113017_s, 0);
}



inline jule::Bool _213d68e30_checkGenericFn(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c796ae_FnIns>* _117239_f, jule::Ptr<_2114c1b73_Token>* _117255_et, jule::Any* _117272_model) {
	jule::Bool _117313_ok = _213ced03a_reloadFnInsTypes(_self_.get()._field_s, (*(_117239_f)));;
	(*(_117239_f)).get()._field_reloaded=true;
	if ((!(_117313_ok))) {
		return false;;
	};
	jule::Ptr<_213c796ae_FnIns> _117817_existInstance = _213c78438_appendInstance((*(_117239_f)).get()._field_Decl.ptr(), _117239_f);;
	if ((!(_213cec19e_checkConstraintsFn(_self_.get()._field_s, _117239_f, _117255_et, _117817_existInstance)))) {
		return false;;
	};
	if ((_117817_existInstance != nullptr)) {
		(*(_117239_f))=_117817_existInstance;
		_213d85622_updateModelToGenericIns(_117272_model, &(_117817_existInstance));
	} else {
		_213d0bb81_checkFnInsCaller(_self_.get()._field_s, _117239_f, (*(_117255_et)));
	};
	return true;;
}



inline void _213d69271_evalFnGenericFromIndexing(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213d5ae22_Data>* _119750_d, jule::Ptr<_213c4ce57_IndexingExpr>* _119765_i) {
	jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> _119817_generics = jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_213d6867c_pushGenericsFromData(_self_, &(_119817_generics), &((*(_119765_i)).get()._field_Index))))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	jule::Ptr<_213c796ae_FnIns> _120417_f = _213d8c23e_Fn((*(_119750_d)).get()._field_Kind.ptr());;
	jule::I32 _120517_genericsLen = 0LL;;
	if ((_120417_f.get()._field_Decl != nullptr)) {
		_120517_genericsLen=static_cast<jule::I32>(_120417_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_213ce4c79_checkGenericQuantity(_self_.get()._field_s.ptr(), _120517_genericsLen, static_cast<jule::I32>(_119817_generics.len()), (*(_119765_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	_120417_f.get()._field_Generics=jule::Slice<jule::Ptr<_213d870a2_InsGeneric>>::alloc(0LL, _120417_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_119817_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b867e153:;
		if (it != expr_end) {
			jule::Ptr<_213c41d2a_TypeDecl> _121621_g = *it;
			{
				jule::Ptr<_213d5ae22_Data> _121721_k = _213d70035_evalType(_self_.ptr(), _121621_g);;
				if ((_121721_k == nullptr)) {
					(*(_119750_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_213d870a2_InsGeneric>> &__jule_push_dest = _120417_f.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_213d870a2_InsGeneric>(_213d870a2_InsGeneric{._field_Kind=_121721_k.get()._field_Kind, })); };
			}
			_iter_next_1b867e153:;
			++it;
			goto _iter_begin_1b867e153;
		}
		_iter_end_1b867e153:;
	};
	if (_213c7aa45_IsBuiltin(_120417_f.ptr())) {
		return;;
	};
	if (_213d68e30_checkGenericFn(_self_, &(_120417_f), &((*(_119765_i)).get()._field_Expr.get()._field_Token), &((*(_119750_d)).get()._field_Model))) {
		(*(_119750_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_213d883c2_Kind>(_120417_f, 1);
	} else {
		(*(_119750_d))=nullptr;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d69590_evalIndexing(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c4ce57_IndexingExpr> _123636_i) {
	jule::Ptr<_213d88834_TypeKind> _123717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_123717_prefix;
	});;
	jule::Ptr<_213d5ae22_Data> _124117_d = _213d78725_evalExprKind(_self_, _123636_i.get()._field_Expr.get()._field_Kind);;
	if ((_124117_d == nullptr)) {
		return nullptr;;
	};
	if (_124117_d.get()._field_Decl) {
		_213d689bd_evalIdentDeclFromIndexing(_self_, &(_124117_d), &(_123636_i));
		return _124117_d;;
	};
	if ((_213d8c23e_Fn(_124117_d.get()._field_Kind.ptr()) != nullptr)) {
		_213d69271_evalFnGenericFromIndexing(_self_, &(_124117_d), &(_123636_i));
		return _124117_d;;
	};
	_213d5ae22_Data _125717_old_d = (*(_124117_d));;
	jule::Ptr<_213d5ae22_Data> _125917_index = _213d7945c_evalExpr(_self_, _123636_i.get()._field_Index);;
	if ((_125917_index == nullptr)) {
		return nullptr;;
	};
	_124117_d.get()._field_Decl=false;
	_213d67d41_toIndexing(_self_.ptr(), &(_124117_d), &(_125917_index), &(_123636_i));
	if (_213d5b791_IsConst(_124117_d.ptr())) {
		_124117_d.get()._field_Decl=false;
		_124117_d.get()._field_Model=jule::Any(_124117_d.get()._field_Constant, &__jule_any_type19);
	} else if (_124117_d.get()._field_Decl) {
		_124117_d.get()._field_Decl=false;
	} else {
		_124117_d.get()._field_Model=jule::Any(jule::new_ptr<_213c6b030_IndexingExprModel>(_213c6b030_IndexingExprModel{._field_Token=_123636_i.get()._field_Token, ._field_Expr=jule::new_ptr<_213d5ae22_Data>(_125717_old_d), ._field_Index=_125917_index}), &__jule_any_type46);
	};
	return _124117_d;;
}



inline __jule_tuple_x_213d5ae22_Data__jule_tuple_x_213d5ae22_Data _213d6989d_evalSlicingExprs(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c4d562_SlicingExpr>* _129041_s) {
	__jule_tuple_x_213d5ae22_Data__jule_tuple_x_213d5ae22_Data __jule_func_result;
	jule::Ptr<_213d88834_TypeKind> _129117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_129117_prefix;
	});;
	jule::Ptr<_213d5ae22_Data> _129517_l = nullptr;;
	jule::Ptr<_213d5ae22_Data> _129617_r = nullptr;;
	if (((*(_129041_s)).get()._field_Start != nullptr)) {
		_129517_l=_213d7945c_evalExpr(_self_, (*(_129041_s)).get()._field_Start);
		if ((_129517_l != nullptr)) {
			_213d6658c_checkIntegerIndexingByData(_self_.ptr(), &(_129517_l), (*(_129041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129517_l=jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e53734_primInt, ._field_Constant=static__2121a5180_NewI64(0LL)});
		_129517_l.get()._field_Constant.get()._field_Kind=jule::Str("int", 3);
		_129517_l.get()._field_Model=jule::Any(_129517_l.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_129041_s)).get()._field_To != nullptr)) {
		_129617_r=_213d7945c_evalExpr(_self_, (*(_129041_s)).get()._field_To);
		if ((_129617_r != nullptr)) {
			_213d6658c_checkIntegerIndexingByData(_self_.ptr(), &(_129617_r), (*(_129041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129517_l;
	__jule_func_result.__jule_result_arg1 = _129617_r;
	return __jule_func_result;;
}



inline void _213d69b23_slicingArr(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data>* _132630_d) {
	jule::Ptr<_213d88834_TypeKind> _132717_elemType = _213d8bc66_Arr((*(_132630_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_132630_d)).get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213d95247_Slc>(_213d95247_Slc{._field_Elem=_132717_elemType}), 22)});
	(*(_132630_d)).get()._field_Lvalue=false;
	(*(_132630_d)).get()._field_Mutable=((*(_132630_d)).get()._field_Mutable || (!(_213d8a0c7_Mutable(_132717_elemType.ptr()))));
}



inline void _213d69edb_slicingStr(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data>* _134130_d, jule::Ptr<_213d5ae22_Data>* _134141_l, jule::Ptr<_213d5ae22_Data>* _134152_r) {
	(*(_134130_d)).get()._field_Lvalue=false;
	(*(_134130_d)).get()._field_Mutable=true;
	if ((!(_213d5b791_IsConst((*(_134130_d)).ptr())))) {
		return;;
	};
	if ((((*(_134141_l)) == nullptr) || ((*(_134152_r)) == nullptr))) {
		(*(_134130_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_213d5b791_IsConst((*(_134141_l)).ptr()) && _213d5b791_IsConst((*(_134152_r)).ptr()))) {
		jule::I64 _135417_left = _2121a725e_AsI64((*(_134141_l)).get()._field_Constant.ptr());;
		if ((_135417_left < 0LL)) {
			return;;
		};
		jule::Str _135917_s = _2121a6c86_ReadStr((*(_134130_d)).get()._field_Constant.ptr());;
		jule::I64 _136021_right = 0LL;;
		if (((*(_134152_r)) == nullptr)) {
			_136021_right=static_cast<jule::I64>(static_cast<jule::I64>(_135917_s.len()));
		} else {
			_136021_right=static_cast<jule::I64>(_2121a725e_AsI64((*(_134152_r)).get()._field_Constant.ptr()));
		};
		if ((_135417_left > _136021_right)) {
			return;;
		};
		_2121a822c_SetStr((*(_134130_d)).get()._field_Constant.ptr(), _135917_s.slice(static_cast<jule::I32>(_135417_left), static_cast<jule::I32>(_136021_right)));
		(*(_134130_d)).get()._field_Decl=true;
	} else {
		(*(_134130_d)).get()._field_Constant=nullptr;
	};
}



inline void _213d6a44d_checkSlicing(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data>* _137736_d, jule::Ptr<_213d5ae22_Data>* _137747_l, jule::Ptr<_213d5ae22_Data>* _137758_r, jule::Ptr<_213c4d562_SlicingExpr>* _137769_s) {
	{
		
		if ((_213d8bc66_Arr((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8695026:;
			{
				_213d69b23_slicingArr(_self_, _137736_d);
				return;;
			}
		}
		else if ((_213d8beca_Slc((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b869509d:;
			{
				return;;
			}
		}
		else if ((_213d8b051_Prim((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8695125:;
			{
				jule::Ptr<_213d91089_Prim> _138517_prim = _213d8b051_Prim((*(_137736_d)).get()._field_Kind.ptr());;
				{
					
					if (_213d9428a_IsStr(_138517_prim.ptr())) {
						_case_begin_1b8697149:;
						{
							_213d69edb_slicingStr(_self_, _137736_d, _137747_l, _137758_r);
							return;;
						}
					}
					_match_end_1b86970b1:;
				};
			}
		}
		_match_end_1b8694e05:;
	};
	_213d5ce9b_pushErr(_self_, (*(_137769_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_137736_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_213d5ae22_Data> _213d6a75b_evalSlicing(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c4d562_SlicingExpr> _139635_s) {
	jule::Ptr<_213d5ae22_Data> _139717_d = _213d7945c_evalExpr(_self_, _139635_s.get()._field_Expr);;
	if ((_139717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_213d5ae22_Data> _140218_l;;
	jule::Ptr<_213d5ae22_Data> _140225_r;;
	({
		__jule_tuple_x_213d5ae22_Data__jule_tuple_x_213d5ae22_Data __jule_assign_result = _213d6989d_evalSlicingExprs(_self_, &(_139635_s));
		_140218_l = __jule_assign_result.__jule_result_arg0;
		_140225_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140218_l == nullptr)) {
		return _139717_d;;
	};
	_139717_d.get()._field_Decl=false;
	_213d6a44d_checkSlicing(_self_.ptr(), &(_139717_d), &(_140218_l), &(_140225_r), &(_139635_s));
	if (_213d5b791_IsConst(_139717_d.ptr())) {
		_139717_d.get()._field_Decl=false;
		_139717_d.get()._field_Model=jule::Any(_139717_d.get()._field_Constant, &__jule_any_type19);
	} else if (_139717_d.get()._field_Decl) {
		_139717_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_213c6c251_SlicingExprModel> _142021_model = jule::new_ptr<_213c6c251_SlicingExprModel>(_213c6c251_SlicingExprModel{._field_Token=_139635_s.get()._field_Token, ._field_Expr=_139717_d.get()._field_Model, ._field_Left=_140218_l.get()._field_Model, });;
		if ((_140225_r != nullptr)) {
			_142021_model.get()._field_Right=_140225_r.get()._field_Model;
		};
		_139717_d.get()._field_Model=jule::Any(_142021_model, &__jule_any_type97);
	};
	return _139717_d;;
}



inline void _213d6ab24_castPtr(_213d5c990_Eval* _self_, jule::Ptr<_213d88834_TypeKind> _143330_t, jule::Ptr<_213d5ae22_Data> _143348_d, jule::Ptr<_2114c1b73_Token> _143358_errorToken) {
	_143348_d.get()._field_Constant=nullptr;
	jule::Ptr<_213d947da_Sptr> _143513_sptr = _213d8b2b5_Sptr(_143348_d.get()._field_Kind.ptr());;
	if ((_143513_sptr != nullptr)) {
		if ((!(_213d88ee9_Equal(_213d8b529_Ptr(_143330_t.ptr()).get()._field_Elem, _143513_sptr.get()._field_Elem)))) {
			_213d5ce9b_pushErr(_self_, _143358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_143348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_143330_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_213d5d8d6_isUnsafe(_self_)))) {
		_213d5ce9b_pushErr(_self_, _143358_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_213d91089_Prim> _144813_prim = _213d8b051_Prim(_143348_d.get()._field_Kind.ptr());;
	if (((_213d8b529_Ptr(_143348_d.get()._field_Kind.ptr()) == nullptr) && ((_144813_prim == nullptr) || (!(_2121a417e_IsInt(_213d913b9_Str(_144813_prim.ptr()))))))) {
		_213d5ce9b_pushErr(_self_, _143358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_143348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_143330_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _213d6aedc_castStruct(_213d5c990_Eval* _self_, jule::Ptr<_213d88834_TypeKind> _145433_t, jule::Ptr<_213d5ae22_Data> _145451_d, jule::Ptr<_2114c1b73_Token> _145461_errorToken) {
	_145451_d.get()._field_Constant=nullptr;
	jule::Ptr<_213c88b63_Trait> _145617_tr = _213d8c717_Trait(_145451_d.get()._field_Kind.ptr());;
	if ((_145617_tr == nullptr)) {
		_213d5ce9b_pushErr(_self_, _145461_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_145451_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_145433_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_213c64402_StructIns> _146217_s = _213d8c4a3_Struct(_145433_t.ptr());;
	_1b86a42bb_pushReference(_self_, &(_146217_s));
	if ((!(_213c62b09_IsImplements(_146217_s.get()._field_Decl.ptr(), _145617_tr)))) {
		_213d5ce9b_pushErr(_self_, _145461_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_145451_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_145433_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _213d6b3a5_castRef(_213d5c990_Eval* _self_, jule::Ptr<_213d88834_TypeKind> _147030_t, jule::Ptr<_213d5ae22_Data> _147048_d, jule::Ptr<_2114c1b73_Token> _147058_errorToken) {
	_147048_d.get()._field_Constant=nullptr;
	jule::Ptr<_213d947da_Sptr> _147217_sptr = _213d8b2b5_Sptr(_147030_t.ptr());;
	jule::Ptr<_213d97d4e_Ptr> _147417_ptr = _213d8b529_Ptr(_147048_d.get()._field_Kind.ptr());;
	if (((_147417_ptr != nullptr) && _213d88ee9_Equal(_147217_sptr.get()._field_Elem, _147417_ptr.get()._field_Elem))) {
		if ((!(_213d5d8d6_isUnsafe(_self_)))) {
			_213d5ce9b_pushErr(_self_, _147058_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_213d8c4a3_Struct(_147217_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_213d6aedc_castStruct(_self_, _147217_sptr.get()._field_Elem, _147048_d, _147058_errorToken);
		return;;
	};
	_213d5ce9b_pushErr(_self_, _147058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_147048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_147030_t.ptr()), &__jule_any_type5)}));
}



inline void _213d6b76d_castSlc(_213d5c990_Eval* _self_, jule::Ptr<_213d88834_TypeKind> _149230_t, jule::Ptr<_213d5ae22_Data> _149248_d, jule::Ptr<_2114c1b73_Token> _149258_errorToken) {
	jule::Ptr<_2121a4c51_Const> _149313_c = _149248_d.get()._field_Constant;;
	_149248_d.get()._field_Constant=nullptr;
	if ((_213d8b78d_Enum(_149248_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_213d8b051_Prim(_213d8b78d_Enum(_149248_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_213d9428a_IsStr(_213d8b051_Prim(_213d8b78d_Enum(_149248_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_213d5ce9b_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_149230_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_213d8b051_Prim(_149248_d.get()._field_Kind.ptr()) == nullptr) || (!(_213d9428a_IsStr(_213d8b051_Prim(_149248_d.get()._field_Kind.ptr()).ptr()))))) {
		_213d5ce9b_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_149230_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_149230_t=_213d8beca_Slc(_149230_t.ptr()).get()._field_Elem;
	jule::Ptr<_213d91089_Prim> _150713_prim = _213d8b051_Prim(_149230_t.ptr());;
	if (((_150713_prim == nullptr) || ((!(_213d92860_IsU8(_150713_prim.ptr()))) && (!(_213d92387_IsI32(_150713_prim.ptr())))))) {
		_213d5ce9b_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_149230_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	if ((_149313_c != nullptr)) {
		{
			
			if (_213d92860_IsU8(_150713_prim.ptr())) {
				_case_begin_1b86b5ae6:;
				{
					jule::Slice<jule::U8> _151721_bytes = static_cast<jule::Slice<jule::U8>>(_2121a6c86_ReadStr(_149313_c.ptr()));;
					jule::Ptr<_213c6aaac_SliceExprModel> _151825_model = jule::new_ptr<_213c6aaac_SliceExprModel>(_213c6aaac_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _151721_bytes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_151721_bytes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b86b7411:;
						if (it != expr_end) {
							jule::U8 *_152224_b = it;
							{
								jule::Ptr<_2121a4c51_Const> _152329_bc = static__2121a5427_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_152224_b)))));;
								_152329_bc.get()._field_Kind=_150713_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _151825_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_152329_bc, &__jule_any_type19)); };
							}
							_iter_next_1b86b7411:;
							++it;
							goto _iter_begin_1b86b7411;
						}
						_iter_end_1b86b7411:;
					};
					_149248_d.get()._field_Model=jule::Any(_151825_model, &__jule_any_type82);
					_149248_d.get()._field_Decl=true;
				}
			}
			else if (_213d92387_IsI32(_150713_prim.ptr())) {
				_case_begin_1b86b5b6d:;
				{
					jule::Slice<jule::I32> _153021_runes = static_cast<jule::Slice<jule::I32>>(_2121a6c86_ReadStr(_149313_c.ptr()));;
					jule::Ptr<_213c6aaac_SliceExprModel> _153125_model = jule::new_ptr<_213c6aaac_SliceExprModel>(_213c6aaac_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153021_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153021_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b86b9e2a:;
						if (it != expr_end) {
							jule::I32 *_153524_r = it;
							{
								jule::Ptr<_2121a4c51_Const> _153629_rc = static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_153524_r)))));;
								_153629_rc.get()._field_Kind=_150713_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _153125_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_153629_rc, &__jule_any_type19)); };
							}
							_iter_next_1b86b9e2a:;
							++it;
							goto _iter_begin_1b86b9e2a;
						}
						_iter_end_1b86b9e2a:;
					};
					_149248_d.get()._field_Model=jule::Any(_153125_model, &__jule_any_type82);
					_149248_d.get()._field_Decl=true;
				}
			}
			_match_end_1b86b59d6:;
		};
	};
}



inline void _213d6ba8c_castStr(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data> _154630_d, jule::Ptr<_2114c1b73_Token> _154640_errorToken) {
	if ((_213d8b78d_Enum(_154630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_213c8b3e6_Enum> _154821_e = _213d8b78d_Enum(_154630_d.get()._field_Kind.ptr());;
		if (((_213d8b051_Prim(_154821_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _213d9428a_IsStr(_213d8b051_Prim(_154821_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_2121a4c51_Const> _155413_c = _154630_d.get()._field_Constant;;
	_154630_d.get()._field_Constant=nullptr;
	if ((_213d8b051_Prim(_154630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_213d91089_Prim> _155717_prim = _213d8b051_Prim(_154630_d.get()._field_Kind.ptr());;
		if (((!(_213d92860_IsU8(_155717_prim.ptr()))) && (!(_213d92387_IsI32(_155717_prim.ptr()))))) {
			_213d5ce9b_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_213d88bdb_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
		if ((_155413_c != nullptr)) {
			{
				
				if (_213d92860_IsU8(_155717_prim.ptr())) {
					_case_begin_1b86c0859:;
					{
						_154630_d.get()._field_Constant=static__2121a5966_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_2121a74c3_AsU64(_155413_c.ptr()))));
						_154630_d.get()._field_Model=jule::Any(_154630_d.get()._field_Constant, &__jule_any_type19);
						_154630_d.get()._field_Decl=true;
					}
				}
				else if (_213d92387_IsI32(_155717_prim.ptr())) {
					_case_begin_1b86c08d1:;
					{
						_154630_d.get()._field_Constant=static__2121a5966_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_2121a725e_AsI64(_155413_c.ptr()))));
						_154630_d.get()._field_Model=jule::Any(_154630_d.get()._field_Constant, &__jule_any_type19);
						_154630_d.get()._field_Decl=true;
					}
				}
				_match_end_1b86c0749:;
			};
		};
		return;;
	};
	jule::Ptr<_213d95247_Slc> _157817_s = _213d8beca_Slc(_154630_d.get()._field_Kind.ptr());;
	if ((_157817_s == nullptr)) {
		_213d5ce9b_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_213d88bdb_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_213d88834_TypeKind> _158417_t = _157817_s.get()._field_Elem;;
	jule::Ptr<_213d91089_Prim> _158513_prim = _213d8b051_Prim(_158417_t.ptr());;
	if (((_158513_prim == nullptr) || ((!(_213d92860_IsU8(_158513_prim.ptr()))) && (!(_213d92387_IsI32(_158513_prim.ptr())))))) {
		_213d5ce9b_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_213d88bdb_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
}



inline void _213d6be55_castInt(_213d5c990_Eval* _self_, jule::Ptr<_213d88834_TypeKind> _159230_t, jule::Ptr<_213d5ae22_Data> _159248_d, jule::Ptr<_2114c1b73_Token> _159258_errorToken) {
	if (_213d5b791_IsConst(_159248_d.ptr())) {
		jule::Ptr<_213d91089_Prim> _159417_prim = _213d8b051_Prim(_159230_t.ptr());;
		{
			
			if (_2121a3aeb_IsSigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1b86c6e9d:;
				{
					_2121a79ac_SetI64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_2121a725e_AsI64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			else if (_2121a3dd7_IsUnsigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1b86c7025:;
				{
					_2121a7c32_SetU64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_2121a74c3_AsU64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1b86c6e15:;
		};
	} else {
		_159248_d.get()._field_Constant=nullptr;
	};
	if ((_213d8b78d_Enum(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_213c8b3e6_Enum> _160617_e = _213d8b78d_Enum(_159248_d.get()._field_Kind.ptr());;
		if (_2121a4745_IsNum(_213d88bdb_Str(_160617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_213d8b2b5_Sptr(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_213d91089_Prim> _161317_prim = _213d8b051_Prim(_159230_t.ptr());;
		if ((!(_213d93cb2_IsUintptr(_161317_prim.ptr())))) {
			_213d5ce9b_pushErr(_self_, _159258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_159230_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_213d8b529_Ptr(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_213d91089_Prim> _162017_prim = _213d8b051_Prim(_159230_t.ptr());;
		if (_213d93cb2_IsUintptr(_162017_prim.ptr())) {
		} else if ((!(_213d5d8d6_isUnsafe(_self_)))) {
			_213d5ce9b_pushErr(_self_, _159258_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_213d91089_Prim> _162913_prim = _213d8b051_Prim(_159248_d.get()._field_Kind.ptr());;
	if (((_162913_prim != nullptr) && _2121a4745_IsNum(_213d913b9_Str(_162913_prim.ptr())))) {
		return;;
	};
	_213d5ce9b_pushErr(_self_, _159258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_159230_t.ptr()), &__jule_any_type5)}));
}



inline void _213d6c31d_castNum(_213d5c990_Eval* _self_, jule::Ptr<_213d88834_TypeKind> _163730_t, jule::Ptr<_213d5ae22_Data> _163748_d, jule::Ptr<_2114c1b73_Token> _163758_errorToken) {
	if (_213d5b791_IsConst(_163748_d.ptr())) {
		jule::Ptr<_213d91089_Prim> _163917_prim = _213d8b051_Prim(_163730_t.ptr());;
		{
			
			if (_2121a449d_IsFloat(_163917_prim.get()._field_Kind)) {
				_case_begin_1b86d05a0:;
				{
					_2121a84a2_SetF64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_2121a7737_AsF64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_2121a3aeb_IsSigInt(_163917_prim.get()._field_Kind)) {
				_case_begin_1b86d0627:;
				{
					_2121a79ac_SetI64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_2121a725e_AsI64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_2121a3dd7_IsUnsigInt(_163917_prim.get()._field_Kind)) {
				_case_begin_1b86d069e:;
				{
					_2121a7c32_SetU64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_2121a74c3_AsU64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1b86d0506:;
		};
	} else {
		_163748_d.get()._field_Constant=nullptr;
	};
	if ((_213d8b78d_Enum(_163748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_213c8b3e6_Enum> _165317_e = _213d8b78d_Enum(_163748_d.get()._field_Kind.ptr());;
		if (_2121a4745_IsNum(_213d88bdb_Str(_165317_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_213d91089_Prim> _165913_prim = _213d8b051_Prim(_163748_d.get()._field_Kind.ptr());;
	if (((_165913_prim != nullptr) && _2121a4745_IsNum(_213d913b9_Str(_165913_prim.ptr())))) {
		return;;
	};
	_213d5ce9b_pushErr(_self_, _163758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_163748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_163730_t.ptr()), &__jule_any_type5)}));
}



inline void _213d6c6d6_castPrim(_213d5c990_Eval* _self_, jule::Ptr<_213d88834_TypeKind> _166731_t, jule::Ptr<_213d5ae22_Data> _166749_d, jule::Ptr<_2114c1b73_Token> _166759_errorToken) {
	jule::Ptr<_213d91089_Prim> _166813_prim = _213d8b051_Prim(_166731_t.ptr());;
	{
		
		if (_213d944ee_IsAny(_166813_prim.ptr())) {
			_case_begin_1b86d65c8:;
			{
				_166749_d.get()._field_Constant=nullptr;
			}
		}
		else if (_213d9428a_IsStr(_166813_prim.ptr())) {
			_case_begin_1b86d6287:;
			{
				_213d6ba8c_castStr(_self_, _166749_d, _166759_errorToken);
			}
		}
		else if (_2121a417e_IsInt(_213d913b9_Str(_166813_prim.ptr()))) {
			_case_begin_1b86d62ed:;
			{
				_213d6be55_castInt(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else if (_2121a4745_IsNum(_213d913b9_Str(_166813_prim.ptr()))) {
			_case_begin_1b86d6375:;
			{
				_213d6c31d_castNum(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else {
			_case_begin_1b86d6221:;
			{
				_213d5ce9b_pushErr(_self_, _166759_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_166731_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_1b86d61bb:;
	};
}



inline void _213d6ca05_castConstant(_213d5c990_Eval* _self_, jule::Ptr<_213d88834_TypeKind>* _168436_t, jule::Ptr<_213d5ae22_Data>* _168455_d) {
	if ((((*(_168455_d)) == nullptr) || (!(_213d5b791_IsConst((*(_168455_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_213d91089_Prim> _168813_prim = _213d8b051_Prim((*(_168436_t)).ptr());;
	_213d85116_castConstByType(&(_168813_prim.get()._field_Kind), _168455_d);
	(*(_168455_d)).get()._field_Model=jule::Any((*(_168455_d)).get()._field_Constant, &__jule_any_type19);
}



inline void _213d6cdbd_castTypeEnum(_213d5c990_Eval* _self_, jule::Ptr<_213d88834_TypeKind>* _169336_t, jule::Ptr<_213d5ae22_Data>* _169355_d, jule::Ptr<_2114c1b73_Token>* _169370_errorToken) {
	jule::I32 _169413_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_213ceb0c1_checkTypeCompatibility((*(_self_))._field_s, &((*(_169355_d)).get()._field_Kind), _169336_t, _169370_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _169413_n);
		_213d5ce9b_pushErr(_self_, (*(_169370_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_169355_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_169336_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_169355_d)).get()._field_Constant=nullptr;
}



inline void _213d6d286_castTypeEnumT(_213d5c990_Eval* _self_, jule::Ptr<_213d88834_TypeKind>* _170237_t, jule::Ptr<_213d5ae22_Data>* _170256_d, jule::Ptr<_2114c1b73_Token>* _170271_errorToken) {
	jule::I32 _170313_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_213ceb0c1_checkTypeCompatibility((*(_self_))._field_s, _170237_t, &((*(_170256_d)).get()._field_Kind), _170271_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _170313_n);
		_213d5ce9b_pushErr(_self_, (*(_170271_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_170256_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_170237_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_170256_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_213d5ae22_Data> _213d6d6d7_evalCastByTypeNData(_213d5c990_Eval* _self_, jule::Ptr<_213d88834_TypeKind> _171142_t, jule::Ptr<_213d5ae22_Data> _171160_d, jule::Ptr<_2114c1b73_Token> _171174_errorToken) {
	if (((_171160_d != nullptr) && _171160_d.get()._field_Decl)) {
		_213d5ce9b_pushErr(_self_, _171174_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_213d5b2b8_IsNil(_171160_d.ptr())) {
			_case_begin_1b86e1bdd:;
			{
				if ((!(_213d8a5a0_NilCompatible(_171142_t.ptr())))) {
					_213d5ce9b_pushErr(_self_, _171174_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_213d88bdb_Str(_171142_t.ptr()), &__jule_any_type5)}));
				};
				_171160_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_213d8b051_Prim(_171160_d.get()._field_Kind.ptr()) != nullptr) && _213d944ee_IsAny(_213d8b051_Prim(_171160_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b86e1429:;
			{
				if ((_213d8b78d_Enum(_171142_t.ptr()) != nullptr)) {
					_213d5ce9b_pushErr(_self_, _171174_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_213d5d2ba_pushSuggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_213d8ba02_TypeEnum(_171142_t.ptr()) != nullptr)) {
					_213d5ce9b_pushErr(_self_, _171174_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_171160_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_213d8ba02_TypeEnum(_171160_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b86e122b:;
			{
				_213d6cdbd_castTypeEnum(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_213d8ba02_TypeEnum(_171142_t.ptr()) != nullptr)) {
			_case_begin_1b86e1292:;
			{
				_213d6d286_castTypeEnumT(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_213d8b529_Ptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1b86e1d31:;
			{
				_213d6ab24_castPtr(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_213d8b2b5_Sptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1b86e1d97:;
			{
				_213d6b3a5_castRef(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_213d8beca_Slc(_171142_t.ptr()) != nullptr)) {
			_case_begin_1b86e1e0d:;
			{
				_213d6b76d_castSlc(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_213d8c4a3_Struct(_171142_t.ptr()) != nullptr)) {
			_case_begin_1b86e1e74:;
			{
				_213d6aedc_castStruct(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_213d8b051_Prim(_171142_t.ptr()) != nullptr)) {
			_case_begin_1b86e1eda:;
			{
				_213d6c6d6_castPrim(_self_, _171142_t, _171160_d, _171174_errorToken);
				_213d6ca05_castConstant(_self_, &(_171142_t), &(_171160_d));
			}
		}
		else {
			_case_begin_1b86e0846:;
			{
				_213d5ce9b_pushErr(_self_, _171174_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_171142_t.ptr()), &__jule_any_type5)}));
				_171160_d=nullptr;
			}
		}
		_match_end_1b86e0978:;
	};
	if ((_171160_d == nullptr)) {
		return nullptr;;
	};
	_171160_d.get()._field_Mutable=(_171160_d.get()._field_Mutable || (!(_213d8a0c7_Mutable(_171160_d.get()._field_Kind.ptr()))));
	if (((!(_171160_d.get()._field_Decl)) && ((_213d8b78d_Enum(_171160_d.get()._field_Kind.ptr()) == nullptr) || (!(_213d88ee9_Equal(_213d8b78d_Enum(_171160_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _171142_t)))))) {
		_213d845cc_applyCastKind(&(_171160_d), &(_171142_t));
		_171160_d.get()._field_Model.cast_ptr<_213c69d53_CastingExprModel>(&__jule_any_type98).get()._field_Token=_171174_errorToken;
	} else {
		_171160_d.get()._field_Kind=_171142_t;
	};
	_171160_d.get()._field_Decl=false;
	_171160_d.get()._field_Lvalue=false;
	_171160_d.get()._field_untyped=false;
	if (_213d5b791_IsConst(_171160_d.ptr())) {
		_171160_d.get()._field_Constant.get()._field_Kind=_213d8b051_Prim(_171142_t.ptr()).get()._field_Kind;
	};
	return _171160_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d6db38_evalCastT(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213d88834_TypeKind>* _178234_t, jule::Ptr<_213c45ea5_Expr>* _178253_e, jule::Ptr<_2114c1b73_Token>* _178268_et) {
	jule::Ptr<_213d88834_TypeKind> _178317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_178317_prefix;
	});;
	if ((_213d8beca_Slc((*(_178234_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_178253_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1b86ed7cc:;
				{
					_self_.get()._field_prefix=(*(_178234_t));
				}
			}
			_match_end_1b86ed733:;
		};
	};
	jule::Ptr<_213d5ae22_Data> _179217_d = _213d7945c_evalExpr(_self_, (*(_178253_e)));;
	if (((_179217_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _179217_d;;
	};
	return _213d6d6d7_evalCastByTypeNData(_self_.ptr(), (*(_178234_t)), _179217_d, (*(_178268_et)));;
}



inline jule::Ptr<_213d5ae22_Data> _213d6de46_evalCast(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c48a13_CastExpr> _179932_c) {
	jule::Ptr<_213d906d7_TypeSymbol> _180017_t = _213c7dc9b_buildType(_179932_c.get()._field_Kind);;
	jule::Bool _180113_ok = _213ce8ee2_checkType(_self_.get()._field_s, &(_180017_t), _self_.get()._field_lookup);;
	if ((!(_180113_ok))) {
		return nullptr;;
	};
	return _213d6db38_evalCastT(_self_, &(_180017_t.get()._field_Kind), &(_179932_c.get()._field_Expr), &(_179932_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_213d5ae22_Data> _213d6e254_evalNsSelection(_213d5c990_Eval* _self_, jule::Ptr<_213c48dba_NsSelectionExpr> _180834_s) {
	jule::Str _180913_path = _213da3e26_buildLinkPathByTokens(&(_180834_s.get()._field_Ns));;
	jule::Ptr<_213cd7c7d_ImportInfo> _181017_imp = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da5125_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)>([=](jule::Ptr<_213cd7c7d_ImportInfo> _181052_imp) mutable -> jule::Bool {
		if (((_180834_s.get()._field_Ns.len() == 1LL) && (_181052_imp.get()._field_Alias == _180913_path))) {
			return true;;
		};
		return ((_181052_imp.get()._field_LinkPath == _180913_path) && _213cda5bb_isAccessibleViaSelection(_181052_imp.ptr()));;
	}));;
	if ((_181017_imp == nullptr)) {
		_213d5ce9b_pushErr(_self_, _180834_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_180913_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_213da6b60_Lookup> _182217_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_213da6b60_Lookup>(_181017_imp, 1);
	;
	_213d5d672_disallowBuiltin(_self_);
	jule::Any _182717_def = _213d60eb0_getDef(_self_, _180834_s.get()._field_Ident.get()._field_Kind, false);;
	_213d5d496_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_182217_lookup;
	jule::Ptr<_213d5ae22_Data> _183017_d = _213d64997_evalDef(_self_, _182717_def, _180834_s.get()._field_Ident);;
	return _183017_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d6e6a5_evalStructLitExplicit(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c64402_StructIns> _183445_s, jule::Slice<jule::Ptr<_213c45ea5_Expr>> _183513_exprs, jule::Ptr<_2114c1b73_Token> _183533_errorToken) {
	jule::Bool _183613_ok = _213ce4c79_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_183445_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_183445_s.get()._field_Generics.len()), _183533_errorToken);;
	if ((!(_183613_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _183445_s.get()._field_Decl))) {
		_213d5ce9b_pushErr(_self_.ptr(), _183533_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_183445_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_1b86a42bb_pushReference(_self_.ptr(), &(_183445_s));
	_213d62da2_checkDeprecated(_self_.ptr(), &(_183445_s.get()._field_Decl.get()._field_Directives), _183533_errorToken);
	_213d50268_structLitChecker _184917_slc = _213d50268_structLitChecker{._field_e=_self_, ._field_errorToken=_183533_errorToken, ._field_s=_183445_s, };;
	_213d5180d_check(&_184917_slc, &(_183513_exprs));
	jule::Ptr<_213d5ae22_Data> _185617_d = jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_183445_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_213c694e5_StructLitExprModel>(_213c694e5_StructLitExprModel{._field_Strct=_183445_s, ._field_Args=_184917_slc._field_args}), &__jule_any_type100), });;
	if (_183445_s.get()._field_Decl.get()._field_Binded) {
		_185617_d.get()._field_Kind.get()._field_BindIdent=_183445_s.get()._field_Decl.get()._field_Ident;
	};
	return _185617_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d6e9b3_evalStructLit(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c4b120_StructLit> _187237_lit) {
	jule::Ptr<_213d906d7_TypeSymbol> _187317_t = _213c7dc9b_buildType(_187237_lit.get()._field_Kind);;
	jule::Bool _187413_ok = _213ce8ee2_checkType(_self_.get()._field_s, &(_187317_t), _self_.get()._field_lookup);;
	if ((!(_187413_ok))) {
		return nullptr;;
	};
	jule::Ptr<_213c64402_StructIns> _187917_s = _213d8c4a3_Struct(_187317_t.get()._field_Kind.ptr());;
	if ((_187917_s == nullptr)) {
		if ((_213d8b2b5_Sptr(_187317_t.get()._field_Kind.ptr()) != nullptr)) {
			_187917_s=_213d8c4a3_Struct(_213d8b2b5_Sptr(_187317_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_187917_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_213d5ce9b_pushErr(_self_.ptr(), _187237_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_213d5ae22_Data> _189217_d = _213d6e6a5_evalStructLitExplicit(_self_, _187917_s, _187237_lit.get()._field_Exprs, _187237_lit.get()._field_Kind.get()._field_Token);;
	if ((_213d8b2b5_Sptr(_187317_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_213c694e5_StructLitExprModel> _189421_model = _189217_d.get()._field_Model.cast_ptr<_213c694e5_StructLitExprModel>(&__jule_any_type100);;
		_213d82e8d_makeStructLitAlloc(&(_189217_d), &(_189421_model));
	};
	return _189217_d;;
}



inline _213d99b75_typeChecker _213d6ec27_typeChecker(_213d5c990_Eval* _self_) {
	return _213ce7dd1_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_213d5ae22_Data> _213d70035_evalType(_213d5c990_Eval* _self_, jule::Ptr<_213c41d2a_TypeDecl> _190431_t) {
	jule::Ptr<_213d906d7_TypeSymbol> _190517_tk = _213c7dc9b_buildType(_190431_t);;
	jule::Bool _190613_ok = _213ce8ee2_checkType((*(_self_))._field_s, &(_190517_tk), (*(_self_))._field_lookup);;
	if ((!(_190613_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_190517_tk.get()._field_Kind, ._field_Model=jule::Any(_190517_tk.get()._field_Kind, &__jule_any_type89), ._field_Decl=true, });;
}



inline void _213d70354_callTypeFn(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c49dbb_FnCallExpr>* _191735_fc, jule::Ptr<_213d5ae22_Data>* _191757_d) {
	if (((*(_191735_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_191735_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_191757_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_191735_fc)).get()._field_IsCo) {
		_213d5ce9b_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	} else if (((*(_191735_fc)).get()._field_Exception != nullptr)) {
		_213d5ce9b_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	};
	if (((*(_191735_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_213c45ea5_Expr> _193321_arg = (*(_191735_fc)).get()._field_Args[0LL];;
		(*(_191757_d))=_213d6db38_evalCastT(_self_, &((*(_191757_d)).get()._field_Kind), &(_193321_arg), &(_193321_arg.get()._field_Token));
		return;;
	};
	if (((*(_191757_d)) != nullptr)) {
		(*(_191757_d)).get()._field_Decl=false;
	};
}



inline void _213d70673_callBuiltinFn(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c49dbb_FnCallExpr>* _194338_fc, jule::Ptr<_213d5ae22_Data>* _194360_d) {
	if ((!(_213c4a22e_Unhandled((*(_194338_fc)).ptr())))) {
		_213d5ce9b_pushErr(_self_.ptr(), (*(_194338_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_194360_d))=_213d8c23e_Fn((*(_194360_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _194338_fc, _194360_d);
	if (((*(_194360_d)) == nullptr)) {
		return;;
	};
	(*(_194360_d)).get()._field_Mutable=true;
}



inline void _213d709b4_checkFnOfConcurrentCall(_213d5c990_Eval* _self_, jule::Ptr<_213c796ae_FnIns>* _195543_f, jule::Ptr<_2114c1b73_Token> _195554_errorToken) {
	if (_213d5d8d6_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_195543_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b871c983:;
		if (it != expr_end) {
			jule::Ptr<_213c787e0_ParamIns> *_195916_p = it;
			{
				if (_213c757a9_IsSelf((*(_195916_p)).get()._field_Decl.ptr())) {
					if ((!(_213c75a1d_IsRef((*(_195916_p)).get()._field_Decl.ptr())))) {
						_213d5ce9b_pushErr(_self_, _195554_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_213d5d2ba_pushSuggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_195916_p)).get()._field_Decl.get()._field_Reference) {
					_213d5ce9b_pushErr(_self_, _195554_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_213d5d2ba_pushSuggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1b871c983:;
			++it;
			goto _iter_begin_1b871c983;
		}
		_iter_end_1b871c983:;
	};
}



inline void _213d70db0_processExceptionalHandler(_213d5c990_Eval* _self_, jule::Ptr<_213c796ae_FnIns>* _197449_f, jule::Ptr<_213c49dbb_FnCallExpr>* _197465_fc, jule::Ptr<_213d5ae22_Data>* _197487_d) {
	jule::Bool _197513_resultNeeded = ((!(_213c76e70_IsVoid((*(_197449_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_213cc06a0_scopeChecker> _197617_csc = nullptr;;
	jule::Ptr<_213cb8a72_Scope> _197717_ch = nullptr;;
	jule::Ptr<_213c6a705_FnCallExprModel> _197917_model = (*(_197487_d)).get()._field_Model.cast_ptr<_213c6a705_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_213cc06a0_scopeChecker> _198317_sc = (*(_self_))._field_lookup.cast_ptr<_213cc06a0_scopeChecker>(0);;
	_197617_csc=_213cd0d53_newChildChecker(_198317_sc);
	if (_197513_resultNeeded) {
		_197617_csc.get()._field_result=(*(_197449_f));
	};
	_197717_ch=_213cc4c7b_getChild(_198317_sc.ptr());
	(*(_197465_fc)).get()._field_Exception.get()._field_Parent=_198317_sc.get()._field_tree;
	{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = _197617_csc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_213d832ce_buildErrorVar(&(_197717_ch), _197465_fc)); };
	_213cc5144_checkChildSsc(_198317_sc, &((*(_197465_fc)).get()._field_Exception), &(_197717_ch), &(_197617_csc));
	_197917_model.get()._field_Assigned=_197513_resultNeeded;
	_197917_model.get()._field_Except=_197717_ch;
	if ((_197513_resultNeeded && (_197617_csc.get()._field_result != nullptr))) {
		_213d5ce9b_pushErr(_self_, (*(_197465_fc)).get()._field_Token, jule::Str("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _213d711e0_callFn(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c49dbb_FnCallExpr>* _200131_fc, jule::Ptr<_213d5ae22_Data>* _200153_d) {
	jule::Ptr<_213c796ae_FnIns> _200217_f = _213d8c23e_Fn((*(_200153_d)).get()._field_Kind.ptr());;
	if (_213c7aa45_IsBuiltin(_200217_f.ptr())) {
		_213d70673_callBuiltinFn(_self_, _200131_fc, _200153_d);
		return;;
	};
	if ((_213d5db4a_isGlobal(_self_.ptr()) && _200217_f.get()._field_Decl.get()._field_Exceptional)) {
		_213d5ce9b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_213d5d2ba_pushSuggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((!(_213c771d4_IsMethod(_200217_f.get()._field_Decl.ptr()))) && _213da3079_hasDirective(&(_200217_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_213d5ce9b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_200153_d))=nullptr;
		return;;
	};
	if (((((!((*(_200153_d)).get()._field_Mutable)) && _213c771d4_IsMethod(_200217_f.get()._field_Decl.ptr())) && (!(_200217_f.get()._field_Decl.get()._field_Statically))) && _200217_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		if ((!(_self_.get()._field_immutable))) {
			_213d5ce9b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_213c694e5_StructLitExprModel> _202821_lit = _213d861e4_isLitBased(&((*(_200153_d)).get()._field_Model));;
			if ((_202821_lit == nullptr)) {
				_213d5ce9b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_213d4ecc3_checkMutRiskOfStructLit(&(_self_.get()._field_s), &(_202821_lit));
			};
		};
	} else if (((!(_213d5d8d6_isUnsafe(_self_.ptr()))) && _200217_f.get()._field_Decl.get()._field_Unsafety)) {
		_213d5ce9b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _204017_dynamicAnnotation = (((_200217_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_200217_f.get()._field_Generics.len() == 0LL)) && (_200217_f.get()._field_Params.len() > 0LL));;
	if (_204017_dynamicAnnotation) {
		_200217_f.get()._field_Generics=jule::Slice<jule::Ptr<_213d870a2_InsGeneric>>::alloc(_200217_f.get()._field_Decl.get()._field_Generics.len(), _200217_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_200217_f.get()._field_Generics.len() != _200217_f.get()._field_Decl.get()._field_Generics.len())) {
		_213ce4c79_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I32>(_200217_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_200217_f.get()._field_Generics.len()), (*(_200131_fc)).get()._field_Token);
		(*(_200153_d))=nullptr;
		return;;
	};
	jule::Ptr<_213ce1050_Sema> _204917_old = _self_.get()._field_s;;
	if ((_200217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_200217_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_204917_old != _self_.get()._field_s)) {
			(_204917_old.get()._field_errors).append(_self_.get()._field_s.get()._field_errors);;
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_204917_old;
	});;
	_213d4c5a6_fnCallArgChecker _206217_fcac = _213d4c5a6_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_200131_fc)).get()._field_Args, ._field_errorToken=(*(_200131_fc)).get()._field_Token, ._field_dynamicAnnotation=_204017_dynamicAnnotation, };;
	if ((!(_204017_dynamicAnnotation))) {
		if ((!(_200217_f.get()._field_reloaded))) {
			jule::Bool _207121_ok = _213ced03a_reloadFnInsTypes(_self_.get()._field_s, _200217_f);;
			_200217_f.get()._field_reloaded=true;
			if ((!(_207121_ok))) {
				(*(_200153_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_213c796ae_FnIns> _207821_existInstance = _213c78438_appendInstance(_200217_f.get()._field_Decl.ptr(), &(_200217_f));;
		if ((_207821_existInstance != nullptr)) {
			_200217_f=_207821_existInstance;
		};
	} else if ((!(_213ceb92e_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_200217_f), &(_206217_fcac._field_ignored))))) {
		(*(_200153_d))=nullptr;
		return;;
	};
	_206217_fcac._field_f=_200217_f;
	jule::Bool _208917_ok = false;;
	if ((_200217_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_213ce1050_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_213ce1050_Sema> _1___jule_assign_arg = _204917_old;
			_204917_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_208917_ok=_213d4e93d_check(&_206217_fcac);
		({
			jule::Ptr<_213ce1050_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_213ce1050_Sema> _1___jule_assign_arg = _204917_old;
			_204917_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_208917_ok=_213d4e93d_check(&_206217_fcac);
	};
	if (_204017_dynamicAnnotation) {
		if ((!(_208917_ok))) {
			(*(_200153_d))=nullptr;
			return;;
		};
		if ((!(_213d68e30_checkGenericFn(_self_, &(_200217_f), &((*(_200131_fc)).get()._field_Token), &((*(_200153_d)).get()._field_Model))))) {
			(*(_200153_d))=nullptr;
			return;;
		};
	};
	jule::Any _210917_callModel = (*(_200153_d)).get()._field_Model;;
	if (_213c76e70_IsVoid(_200217_f.get()._field_Decl.ptr())) {
		(*(_200153_d))=_213d847ca_buildVoidData();
	} else {
		(*(_200153_d)).get()._field_Kind=_200217_f.get()._field_Result;
		(*(_200153_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_213c6a705_FnCallExprModel> _211817_model = jule::new_ptr<_213c6a705_FnCallExprModel>(_213c6a705_FnCallExprModel{._field_Token=(*(_200131_fc)).get()._field_Token, ._field_Func=_200217_f, ._field_IsCo=(*(_200131_fc)).get()._field_IsCo, ._field_Expr=_210917_callModel, ._field_Args=_206217_fcac._field_argModels, });;
	(*(_200153_d)).get()._field_Model=jule::Any(_211817_model, &__jule_any_type35);
	(*(_200153_d)).get()._field_Mutable=true;
	if (_200217_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_200131_fc)).get()._field_IsCo) {
			_213ce38d2_pushErr(_self_.get()._field_s.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_213ce3c01_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_213c4a22e_Unhandled((*(_200131_fc)).ptr())) {
				_case_begin_1b873a6d7:;
				{
					_213d5ce9b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_213d5d2ba_pushSuggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_213c4a493_Ignored((*(_200131_fc)).ptr())) {
				_case_begin_1b873a132:;
				{
					goto _match_end_1b87395b5;
				}
			}
			else {
				_case_begin_1b873931d:;
				{
					_213d70db0_processExceptionalHandler(_self_.ptr(), &(_200217_f), _200131_fc, _200153_d);
				}
			}
			_match_end_1b87395b5:;
		};
	} else if ((!(_213c4a22e_Unhandled((*(_200131_fc)).ptr())))) {
		_213d5ce9b_pushErr(_self_.ptr(), (*(_200131_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_200131_fc)).get()._field_IsCo) {
		_213d709b4_checkFnOfConcurrentCall(_self_.ptr(), &(_211817_model.get()._field_Func), (*(_200131_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d714ed_evalFnCall(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c49dbb_FnCallExpr> _215334_fc) {
	jule::Ptr<_213d88834_TypeKind> _215417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_215417_prefix;
	});;
	{
		auto &_match_expr{ _215334_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b873ce59:;
			{
				if (_215334_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _213e57c00_builtinCallerError(&(_self_), &(_215334_fc));;
				};
			}
		}
		_match_end_1b873ce04:;
	};
	jule::Ptr<_213d5ae22_Data> _216717_d = _213d78725_evalExprKind(_self_, _215334_fc.get()._field_Expr.get()._field_Kind);;
	if ((_216717_d == nullptr)) {
		return nullptr;;
	};
	if (_216717_d.get()._field_Decl) {
		_213d70354_callTypeFn(_self_, &(_215334_fc), &(_216717_d));
		return _216717_d;;
	};
	if ((_213d8c23e_Fn(_216717_d.get()._field_Kind.ptr()) == nullptr)) {
		_213d5ce9b_pushErr(_self_.ptr(), _215334_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_213d711e0_callFn(_self_, &(_215334_fc), &(_216717_d));
	return _216717_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d718a5_evalEnumStatic(_213d5c990_Eval* _self_, jule::Ptr<_213c8b3e6_Enum> _218637_enm, jule::Ptr<_2114c1b73_Token> _218649_ident) {
	jule::Ptr<_213c8a901_EnumItem> _218717_item = _213c8be63_FindItem(_218637_enm.ptr(), _218649_ident.get()._field_Kind);;
	if ((_218717_item == nullptr)) {
		_213d5ce9b_pushErr(_self_, _218649_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_218637_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_218649_ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _213d85e4c_evalEnumStatic(&(_218637_enm), &(_218717_item));;
}



inline jule::Ptr<_213d5ae22_Data> _213d71c5c_evalTypeEnumStatic(_213d5c990_Eval* _self_, jule::Ptr<_213c8c9e1_TypeEnum> _219441_enm, jule::Ptr<_2114c1b73_Token> _219457_ident) {
	jule::Ptr<_213c8c45d_TypeEnumItem> _219517_item = _213c8d52a_FindItem(_219441_enm.ptr(), _219457_ident.get()._field_Kind);;
	if ((_219517_item == nullptr)) {
		_213d5ce9b_pushErr(_self_, _219457_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_219441_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_219457_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_213d8b78d_Enum(_219517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8744aed:;
			{
				return _213d61543__evalEnum(_self_, _213d8b78d_Enum(_219517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_213d8ba02_TypeEnum(_219517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8744e72:;
			{
				return _213d61c08__evalTypeEnum(_self_, _213d8ba02_TypeEnum(_219517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_213d8c4a3_Struct(_219517_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b874415d:;
			{
				return _213d623bd__evalStruct(_self_, _213d8c4a3_Struct(_219517_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1b8743e93:;
			{
				jule::Ptr<_213d5ae22_Data> _220821_d = jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_219517_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_220821_d.get()._field_Model=jule::Any(_220821_d.get()._field_Kind, &__jule_any_type89);
				return _220821_d;;
			}
		}
		_match_end_1b8743657:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d72114_evalStructStatic(_213d5c990_Eval* _self_, jule::Ptr<_213c64402_StructIns> _221739_s, jule::Ptr<_2114c1b73_Token> _221754_ident) {
	jule::Ptr<_213d5ae22_Data> _221817_d = jule::new_ptr<_213d5ae22_Data>();;
	;
	jule::Ptr<_213c76a0d_Fn> _222217_method = _213c6539d_FindMethod(_221739_s.ptr(), _221754_ident.get()._field_Kind, true);;
	if ((_222217_method != nullptr)) {
		if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), _222217_method.get()._field_Public, _222217_method.get()._field_Token)))) {
			_213d5ce9b_pushErr(_self_, _221754_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_221754_ident.get()._field_Kind, &__jule_any_type5)}));
			_213d5d2ba_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_213c796ae_FnIns> _222921_ins = _213c7815d_instance(_222217_method);;
		_222921_ins.get()._field_Owner=_221739_s;
		_1b85edd2b_pushReference(_self_, &(_222921_ins));
		_221817_d.get()._field_Model=jule::Any(jule::new_ptr<_213c6d41c_StructStaticIdentExprModel>(_213c6d41c_StructStaticIdentExprModel{._field_Structure=_221739_s, ._field_Expr=_221817_d.get()._field_Model, ._field_Method=_222921_ins}), &__jule_any_type101);
		_221817_d.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_222921_ins, 1)});
		return _221817_d;;
	};
	jule::Ptr<_213d11988_Var> _224317_sttc = _213c659b9_FindStatic(_221739_s.ptr(), _221754_ident.get()._field_Kind);;
	if ((_224317_sttc != nullptr)) {
		return _213d64238_evalVar(_self_, _224317_sttc, _221754_ident);;
	};
	_213d5ce9b_pushErr(_self_, _221754_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_221739_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_221754_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_213d5ae22_Data> _213d72565_evalTraitSubIdent(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data> _225240_d, jule::Ptr<_213c88b63_Trait> _225254_trt, jule::Ptr<_2114c1b73_Token> _225271_ident) {
	jule::Ptr<_213c76a0d_Fn> _225317_f = _213c89a10_FindMethod(_225254_trt.ptr(), _225271_ident.get()._field_Kind);;
	if ((_225317_f == nullptr)) {
		_213d5ce9b_pushErr(_self_, _225271_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_225254_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_225271_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213c7815d_instance(_225317_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_213c6c790_TraitSubIdentExprModel>(_213c6c790_TraitSubIdentExprModel{._field_Token=_225271_ident, ._field_Expr=_225240_d.get()._field_Model, ._field_Method=_225317_f, ._field_Trt=_225254_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_213d5ae22_Data> _213d72a82_evalStructSubIdentField(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data>* _227247_d, jule::Ptr<_213c64402_StructIns>* _227262_s, jule::Ptr<_2114c1b73_Token>* _227282_tok, jule::Ptr<_213c6390c_FieldIns>* _2272100_f) {
	jule::Ptr<_213c6d076_StructSubIdentExprModel> _227317_model = jule::new_ptr<_213c6d076_StructSubIdentExprModel>(_213c6d076_StructSubIdentExprModel{._field_Token=(*(_227282_tok)), ._field_Expr=jule::new_ptr<_213d5ae22_Data>((*((*(_227247_d))))), ._field_Field=(*(_2272100_f)), ._field_Owner=(*(_227262_s))});;
	(*(_227247_d)).get()._field_Model=jule::Any(_227317_model, &__jule_any_type71);
	(*(_227247_d)).get()._field_Kind=(*(_2272100_f)).get()._field_Kind;
	(*(_227247_d)).get()._field_Lvalue=true;
	if (((*(_2272100_f)).get()._field_Decl.get()._field_Mutable && (!((*(_227247_d)).get()._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1b87533e2:;
				{
					jule::Ptr<_213cc06a0_scopeChecker> _228721_scope = _213cc34c7_getRoot((*(_self_))._field_lookup.cast_ptr<_213cc06a0_scopeChecker>(0));;
					(*(_227247_d)).get()._field_Mutable=((_228721_scope.get()._field_owner != nullptr) && (_228721_scope.get()._field_owner.get()._field_Owner == (*(_227262_s))));
				}
			}
			_match_end_1b875338c:;
		};
	};
	return (*(_227247_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213d7308d_evalStructSubIdent(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data> _229541_d, jule::Ptr<_213c64402_StructIns> _229555_s, jule::Ptr<_213c4933d_SubIdentExpr> _229574_si, jule::Bool _229593_ref) {
	jule::Ptr<_213c6390c_FieldIns> _229617_f = _213c656ab_FindField(_229555_s.ptr(), _229574_si.get()._field_Ident.get()._field_Kind);;
	if ((_229617_f != nullptr)) {
		if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), _229617_f.get()._field_Decl.get()._field_Public, _229617_f.get()._field_Decl.get()._field_Token)))) {
			_213d5ce9b_pushErr(_self_, _229574_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_229617_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_213d5d2ba_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _213d72a82_evalStructSubIdentField(_self_, &(_229541_d), &(_229555_s), &(_229574_si.get()._field_Ident), &(_229617_f));;
	};
	;
	jule::Ptr<_213c76a0d_Fn> _230617_m = _213c6539d_FindMethod(_229555_s.ptr(), _229574_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_230617_m == nullptr)) {
		_213d5ce9b_pushErr(_self_, _229574_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_229555_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_229574_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), _230617_m.get()._field_Public, _230617_m.get()._field_Token)))) {
		_213d5ce9b_pushErr(_self_, _229574_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_230617_m.get()._field_Ident, &__jule_any_type5)}));
		_213d5d2ba_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_213c75a1d_IsRef(_230617_m.get()._field_Params[0LL].ptr()) && (!(_229593_ref)))) {
		_213d5ce9b_pushErr(_self_, _229574_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_213d62da2_checkDeprecated(_self_, &(_230617_m.get()._field_Directives), _229574_si.get()._field_Ident);
	jule::Ptr<_213c796ae_FnIns> _232217_ins = _213c7815d_instance(_230617_m);;
	_232217_ins.get()._field_Owner=_229555_s;
	_1b85edd2b_pushReference(_self_, &(_232217_ins));
	jule::Ptr<_213d5ae22_Data> _232517_model = jule::new_ptr<_213d5ae22_Data>((*(_229541_d)));;
	_229541_d.get()._field_Model=jule::Any(jule::new_ptr<_213c6d076_StructSubIdentExprModel>(_213c6d076_StructSubIdentExprModel{._field_Token=_229574_si.get()._field_Ident, ._field_Expr=_232517_model, ._field_Method=_232217_ins, ._field_Owner=_229555_s}), &__jule_any_type71);
	_229541_d.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_232217_ins, 1)});
	return _229541_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d73445_evalSliceSubIdent(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data> _233640_d, jule::Ptr<_2114c1b73_Token> _233654_ident) {
	{
		auto &_match_expr{ _233654_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1b875de14:;
			{
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_Params=jule::Slice<jule::Ptr<_213c787e0_ParamIns>>::make({jule::new_ptr<_213c787e0_ParamIns>(_213c787e0_ParamIns{._field_Decl=jule::new_ptr<_213c751c1_Param>(_213c751c1_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_213d55306_lenKind()}),jule::new_ptr<_213c787e0_ParamIns>(_213c787e0_ParamIns{._field_Decl=jule::new_ptr<_213c751c1_Param>(_213c751c1_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_213d55306_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e578ae_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_233640_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_213c6e132_CommonSubIdentExprModel>(_213c6e132_CommonSubIdentExprModel{._field_ExprKind=_233640_d.get()._field_Kind, ._field_Expr=_233640_d.get()._field_Model, ._field_Token=_233654_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1b875e1de:;
			{
				_213d5ce9b_pushErr(_self_, _233654_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_233640_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_233654_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b875de9c:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d737ec_evalArraySubIdent(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data> _237340_d, jule::Ptr<_2114c1b73_Token> _237354_ident) {
	{
		auto &_match_expr{ _237354_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1b875e3cb:;
			{
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_Params=jule::Slice<jule::Ptr<_213c787e0_ParamIns>>::make({jule::new_ptr<_213c787e0_ParamIns>(_213c787e0_ParamIns{._field_Decl=jule::new_ptr<_213c751c1_Param>(_213c751c1_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_213d55306_lenKind()}),jule::new_ptr<_213c787e0_ParamIns>(_213c787e0_ParamIns{._field_Decl=jule::new_ptr<_213c751c1_Param>(_213c751c1_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_213d55306_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e578ae_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_237340_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_213c6e132_CommonSubIdentExprModel>(_213c6e132_CommonSubIdentExprModel{._field_ExprKind=_237340_d.get()._field_Kind, ._field_Expr=_237340_d.get()._field_Model, ._field_Token=_237354_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1b8762ac7:;
			{
				_213d5ce9b_pushErr(_self_, _237354_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_237340_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_237354_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8762a50:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d73b0a_evalIntTypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _241036_ident) {
	;
	{
		auto &_match_expr{ _241036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b876746c:;
			{
				jule::Ptr<_2121a4c51_Const> _241421_c = static__2121a5180_NewI64(static_cast<jule::I64>(_21219d475_MaxI(jule::Str("int", 3))));;
				_241421_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e53734_primInt, ._field_Model=jule::Any(_241421_c, &__jule_any_type19), ._field_Constant=_241421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b87674d3:;
			{
				jule::Ptr<_2121a4c51_Const> _242221_c = static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_21219d92b_Min(jule::Str("int", 3)))));;
				_242221_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e53734_primInt, ._field_Model=jule::Any(_242221_c, &__jule_any_type19), ._field_Constant=_242221_c});;
			}
		}
		else {
			_case_begin_1b8766812:;
			{
				_213d5ce9b_pushErr(_self_, _241036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_241036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b87667ac:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d73e18_evalUintTypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _243537_ident) {
	;
	{
		auto &_match_expr{ _243537_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b876a706:;
			{
				jule::Ptr<_2121a4c51_Const> _243921_c = static__2121a5427_NewU64(static_cast<jule::U64>(_21219d71c_MaxU(jule::Str("uint", 4))));;
				_243921_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e5346a_primUint, ._field_Model=jule::Any(_243921_c, &__jule_any_type19), ._field_Constant=_243921_c});;
			}
		}
		else {
			_case_begin_1b8769c88:;
			{
				_213d5ce9b_pushErr(_self_, _243537_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_243537_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8769c33:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d74226_evalI8TypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _245235_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _245235_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b876d5b6:;
			{
				jule::Ptr<_2121a4c51_Const> _245821_c = static__2121a5180_NewI64(127LL);;
				_245821_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e53b0d_primI8, ._field_Model=jule::Any(_245821_c, &__jule_any_type19), ._field_Constant=_245821_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b876d62c:;
			{
				jule::Ptr<_2121a4c51_Const> _246621_c = static__2121a5180_NewI64(-128LL);;
				_246621_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e53b0d_primI8, ._field_Model=jule::Any(_246621_c, &__jule_any_type19), ._field_Constant=_246621_c});;
			}
		}
		else {
			_case_begin_1b876c98e:;
			{
				_213d5ce9b_pushErr(_self_, _245235_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_245235_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b876c8e5:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d74534_evalI16TypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _247936_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _247936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b8771e05:;
			{
				jule::Ptr<_2121a4c51_Const> _248521_c = static__2121a5180_NewI64(32767LL);;
				_248521_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e53dc7_primI16, ._field_Model=jule::Any(_248521_c, &__jule_any_type19), ._field_Constant=_248521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b8771861:;
			{
				jule::Ptr<_2121a4c51_Const> _249321_c = static__2121a5180_NewI64(-32768LL);;
				_249321_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e53dc7_primI16, ._field_Model=jule::Any(_249321_c, &__jule_any_type19), ._field_Constant=_249321_c});;
			}
		}
		else {
			_case_begin_1b87713aa:;
			{
				_213d5ce9b_pushErr(_self_, _247936_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_247936_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8771311:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d74842_evalI32TypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _250636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _250636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b8775832:;
			{
				jule::Ptr<_2121a4c51_Const> _251221_c = static__2121a5180_NewI64(2147483647LL);;
				_251221_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e54191_primI32, ._field_Model=jule::Any(_251221_c, &__jule_any_type19), ._field_Constant=_251221_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b877528d:;
			{
				jule::Ptr<_2121a4c51_Const> _252021_c = static__2121a5180_NewI64(-2147483648LL);;
				_252021_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e54191_primI32, ._field_Model=jule::Any(_252021_c, &__jule_any_type19), ._field_Constant=_252021_c});;
			}
		}
		else {
			_case_begin_1b8774cd7:;
			{
				_213d5ce9b_pushErr(_self_, _250636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_250636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8774c3d:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d74b50_evalI64TypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _253336_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _253336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b877925e:;
			{
				jule::Ptr<_2121a4c51_Const> _253921_c = static__2121a5180_NewI64(jule::MAX_I64);;
				_253921_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e5445a_primI64, ._field_Model=jule::Any(_253921_c, &__jule_any_type19), ._field_Constant=_253921_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b8778bba:;
			{
				jule::Ptr<_2121a4c51_Const> _254721_c = static__2121a5180_NewI64(jule::MIN_I64);;
				_254721_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e5445a_primI64, ._field_Model=jule::Any(_254721_c, &__jule_any_type19), ._field_Constant=_254721_c});;
			}
		}
		else {
			_case_begin_1b8778714:;
			{
				_213d5ce9b_pushErr(_self_, _253336_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_253336_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b877866a:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d74e5d_evalU8TypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _256035_ident) {
	;
	;
	{
		auto &_match_expr{ _256035_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b877c020:;
			{
				jule::Ptr<_2121a4c51_Const> _256521_c = static__2121a5427_NewU64(255LLU);;
				_256521_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e54724_primU8, ._field_Model=jule::Any(_256521_c, &__jule_any_type19), ._field_Constant=_256521_c});;
			}
		}
		else {
			_case_begin_1b8778879:;
			{
				_213d5ce9b_pushErr(_self_, _256035_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_256035_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b877bae1:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7526b_evalU16TypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _257836_ident) {
	;
	;
	{
		auto &_match_expr{ _257836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b877e022:;
			{
				jule::Ptr<_2121a4c51_Const> _258321_c = static__2121a5427_NewU64(65535LLU);;
				_258321_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e549dd_primU16, ._field_Model=jule::Any(_258321_c, &__jule_any_type19), ._field_Constant=_258321_c});;
			}
		}
		else {
			_case_begin_1b877e352:;
			{
				_213d5ce9b_pushErr(_self_, _257836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_257836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b877e2ec:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d75579_evalU32TypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _259636_ident) {
	;
	;
	{
		auto &_match_expr{ _259636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b87816a6:;
			{
				jule::Ptr<_2121a4c51_Const> _260121_c = static__2121a5427_NewU64(4294967295LLU);;
				_260121_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e54ca7_primU32, ._field_Model=jule::Any(_260121_c, &__jule_any_type19), ._field_Constant=_260121_c});;
			}
		}
		else {
			_case_begin_1b87819d6:;
			{
				_213d5ce9b_pushErr(_self_, _259636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_259636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8781981:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d75887_evalU64TypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _261436_ident) {
	;
	;
	{
		auto &_match_expr{ _261436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b8783d3a:;
			{
				jule::Ptr<_2121a4c51_Const> _261921_c = static__2121a5427_NewU64(jule::MAX_U64);;
				_261921_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e55071_primU64, ._field_Model=jule::Any(_261921_c, &__jule_any_type19), ._field_Constant=_261921_c});;
			}
		}
		else {
			_case_begin_1b878416a:;
			{
				_213d5ce9b_pushErr(_self_, _261436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_261436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8784115:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d75b95_evalF32TypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _263236_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _263236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b8787b0d:;
			{
				jule::Ptr<_2121a4c51_Const> _263921_c = static__2121a5c0d_NewF64(340282346638528860000000000000000000000.0);;
				_263921_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e554e4_primF32, ._field_Model=jule::Any(_263921_c, &__jule_any_type19), ._field_Constant=_263921_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b8787569:;
			{
				jule::Ptr<_2121a4c51_Const> _264721_c = static__2121a5c0d_NewF64(-340282346638528860000000000000000000000.0);;
				_264721_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e554e4_primF32, ._field_Model=jule::Any(_264721_c, &__jule_any_type19), ._field_Constant=_264721_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1b8787beb:;
			{
				jule::Ptr<_2121a4c51_Const> _265521_c = static__2121a5c0d_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_265521_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e554e4_primF32, ._field_Model=jule::Any(_265521_c, &__jule_any_type19), ._field_Constant=_265521_c});;
			}
		}
		else {
			_case_begin_1b878702a:;
			{
				_213d5ce9b_pushErr(_self_, _263236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type5),jule::Any(_263236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8786da4:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d75ea3_evalF64TypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_2114c1b73_Token> _266836_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _266836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b878c85a:;
			{
				jule::Ptr<_2121a4c51_Const> _267521_c = static__2121a5c0d_NewF64(jule::MAX_F64);;
				_267521_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e557ad_primF64, ._field_Model=jule::Any(_267521_c, &__jule_any_type19), ._field_Constant=_267521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b878c8c1:;
			{
				jule::Ptr<_2121a4c51_Const> _268321_c = static__2121a5c0d_NewF64(jule::MIN_F64);;
				_268321_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e557ad_primF64, ._field_Model=jule::Any(_268321_c, &__jule_any_type19), ._field_Constant=_268321_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1b878c6c3:;
			{
				jule::Ptr<_2121a4c51_Const> _269121_c = static__2121a5c0d_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_269121_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e557ad_primF64, ._field_Model=jule::Any(_269121_c, &__jule_any_type19), ._field_Constant=_269121_c});;
			}
		}
		else {
			_case_begin_1b878bbbc:;
			{
				_213d5ce9b_pushErr(_self_, _266836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type5),jule::Any(_266836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b878bb67:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7635a_evalPrimStatic(_213d5c990_Eval* _self_, jule::Str _270433_kind, jule::Ptr<_2114c1b73_Token> _270444_ident) {
	{
		auto &_match_expr{ _270433_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b8791562:;
			{
				return _213d73b0a_evalIntTypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b87902ca:;
			{
				return _213d73e18_evalUintTypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b87909c3:;
			{
				return _213d74226_evalI8TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b8790a39:;
			{
				return _213d74534_evalI16TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b8790aa0:;
			{
				return _213d74842_evalI32TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b8790b16:;
			{
				return _213d74b50_evalI64TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b87915d9:;
			{
				return _213d74e5d_evalU8TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b8791650:;
			{
				return _213d7526b_evalU16TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b87916b6:;
			{
				return _213d75579_evalU32TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b879172c:;
			{
				return _213d75887_evalU64TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b8791793:;
			{
				return _213d75b95_evalF32TypeStatic(_self_, _270444_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b8791809:;
			{
				return _213d75ea3_evalF64TypeStatic(_self_, _270444_ident);;
			}
		}
		else {
			_case_begin_1b878bdcb:;
			{
				_213d5ce9b_pushErr(_self_, _270444_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_270433_kind, &__jule_any_type5),jule::Any(_270444_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b878c937:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d76712_evalTypeStatic(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data> _273637_d, jule::Ptr<_213c4933d_SubIdentExpr> _273651_si) {
	{
		
		if ((_213d8b051_Prim(_273637_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8796699:;
			{
				return _213d7635a_evalPrimStatic(_self_, _213d913b9_Str(_213d8b051_Prim(_273637_d.get()._field_Kind.ptr()).ptr()), _273651_si.get()._field_Ident);;
			}
		}
		else if ((_213d8b78d_Enum(_273637_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8796710:;
			{
				return _213d718a5_evalEnumStatic(_self_, _213d8b78d_Enum(_273637_d.get()._field_Kind.ptr()), _273651_si.get()._field_Ident);;
			}
		}
		else if ((_213d8ba02_TypeEnum(_273637_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8796512:;
			{
				return _213d71c5c_evalTypeEnumStatic(_self_, _213d8ba02_TypeEnum(_273637_d.get()._field_Kind.ptr()), _273651_si.get()._field_Ident);;
			}
		}
		else if ((_213d8c4a3_Struct(_273637_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8796578:;
			{
				return _213d72114_evalStructStatic(_self_, _213d8c4a3_Struct(_273637_d.get()._field_Kind.ptr()), _273651_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1b87957a8:;
			{
				_213d5ce9b_pushErr(_self_, _273651_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_273637_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8795225:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _1b879c1b6_comptimeObjSubIdent(_213d5c990_Eval* _self_, jule::Ptr<_213ca374e_comptimeTypeInfo>* _275257_ct, jule::Ptr<_213d5ae22_Data>* _275277_d, jule::Ptr<_213c4933d_SubIdentExpr>* _275288_si) {
	jule::Ptr<_213d5ae22_Data> _275317_cd = _213ca8e5d_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_213d5ce9b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}

inline jule::Ptr<_213d5ae22_Data> _1b87a56db_comptimeObjSubIdent(_213d5c990_Eval* _self_, jule::Ptr<_213c9063c_comptimeStructField>* _275257_ct, jule::Ptr<_213d5ae22_Data>* _275277_d, jule::Ptr<_213c4933d_SubIdentExpr>* _275288_si) {
	jule::Ptr<_213d5ae22_Data> _275317_cd = _213c91d03_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_213d5ce9b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}

inline jule::Ptr<_213d5ae22_Data> _1b87a8d60_comptimeObjSubIdent(_213d5c990_Eval* _self_, jule::Ptr<_213c9b4a0_comptimeEnumField>* _275257_ct, jule::Ptr<_213d5ae22_Data>* _275277_d, jule::Ptr<_213c4933d_SubIdentExpr>* _275288_si) {
	jule::Ptr<_213d5ae22_Data> _275317_cd = _213c9c3d5_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_213d5ce9b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}

inline jule::Ptr<_213d5ae22_Data> _1b87ac79d_comptimeObjSubIdent(_213d5c990_Eval* _self_, jule::Ptr<_213c9dc22_comptimeParam>* _275257_ct, jule::Ptr<_213d5ae22_Data>* _275277_d, jule::Ptr<_213c4933d_SubIdentExpr>* _275288_si) {
	jule::Ptr<_213d5ae22_Data> _275317_cd = _213ca07a1_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_213d5ce9b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}

inline jule::Ptr<_213d5ae22_Data> _1b87b0e22_comptimeObjSubIdent(_213d5c990_Eval* _self_, jule::Ptr<_213c93640_comptimeStatic>* _275257_ct, jule::Ptr<_213d5ae22_Data>* _275277_d, jule::Ptr<_213c4933d_SubIdentExpr>* _275288_si) {
	jule::Ptr<_213d5ae22_Data> _275317_cd = _213c94d06_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_213d5ce9b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}

inline jule::Ptr<_213d5ae22_Data> _1b87b4596_comptimeObjSubIdent(_213d5c990_Eval* _self_, jule::Ptr<_213ca9249_comptimeValue>* _275257_ct, jule::Ptr<_213d5ae22_Data>* _275277_d, jule::Ptr<_213c4933d_SubIdentExpr>* _275288_si) {
	jule::Ptr<_213d5ae22_Data> _275317_cd = _213cab559_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_213d5ce9b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}

inline jule::Ptr<_213d5ae22_Data> _1b87b7c1a_comptimeObjSubIdent(_213d5c990_Eval* _self_, jule::Ptr<_213cacd0d_comptimeFile>* _275257_ct, jule::Ptr<_213d5ae22_Data>* _275277_d, jule::Ptr<_213c4933d_SubIdentExpr>* _275288_si) {
	jule::Ptr<_213d5ae22_Data> _275317_cd = _213cae4c4_subIdent((*(_275257_ct)), (*(_275288_si)).get()._field_Ident.get()._field_Kind);;
	if ((_275317_cd == nullptr)) {
		_213d5ce9b_pushErr(_self_, (*(_275288_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_275277_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_275288_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _275317_cd;;
}



inline jule::Ptr<_213d5ae22_Data> _213d7701a_evalObjSubIdent(_213d5c990_Eval* _self_, jule::Ptr<_213d5ae22_Data> _276038_d, jule::Ptr<_213c4933d_SubIdentExpr> _276052_si) {
	if (_2114c4417_IsIgnoreIdent(_276052_si.get()._field_Ident.get()._field_Kind)) {
		_213d5ce9b_pushErr(_self_, _276052_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if ((_213d8e61a_comptimeTypeInfo(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b879a03d:;
			{
				jule::Ptr<_213ca374e_comptimeTypeInfo> _276821_ct = _213d8e61a_comptimeTypeInfo(_276038_d.get()._field_Kind.ptr());;
				return _1b879c1b6_comptimeObjSubIdent(_self_, &(_276821_ct), &(_276038_d), &(_276052_si));;
			}
		}
		else if ((_213d8d42c_comptimeStructField(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b879a8ce:;
			{
				jule::Ptr<_213c9063c_comptimeStructField> _277121_ct = _213d8d42c_comptimeStructField(_276038_d.get()._field_Kind.ptr());;
				return _1b87a56db_comptimeObjSubIdent(_self_, &(_277121_ct), &(_276038_d), &(_276052_si));;
			}
		}
		else if ((_213d8d905_comptimeEnumField(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b879a945:;
			{
				jule::Ptr<_213c9b4a0_comptimeEnumField> _277421_ct = _213d8d905_comptimeEnumField(_276038_d.get()._field_Kind.ptr());;
				return _1b87a8d60_comptimeObjSubIdent(_self_, &(_277421_ct), &(_276038_d), &(_276052_si));;
			}
		}
		else if ((_213d8ddcd_comptimeParam(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b879a9ab:;
			{
				jule::Ptr<_213c9dc22_comptimeParam> _277721_ct = _213d8ddcd_comptimeParam(_276038_d.get()._field_Kind.ptr());;
				return _1b87ac79d_comptimeObjSubIdent(_self_, &(_277721_ct), &(_276038_d), &(_276052_si));;
			}
		}
		else if ((_213d8eae3_comptimeStatic(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b879aa22:;
			{
				jule::Ptr<_213c93640_comptimeStatic> _278021_ct = _213d8eae3_comptimeStatic(_276038_d.get()._field_Kind.ptr());;
				return _1b87b0e22_comptimeObjSubIdent(_self_, &(_278021_ct), &(_276038_d), &(_276052_si));;
			}
		}
		else if ((_213d8ed57_comptimeValue(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b879aa88:;
			{
				jule::Ptr<_213ca9249_comptimeValue> _278321_ct = _213d8ed57_comptimeValue(_276038_d.get()._field_Kind.ptr());;
				return _1b87b4596_comptimeObjSubIdent(_self_, &(_278321_ct), &(_276038_d), &(_276052_si));;
			}
		}
		else if ((_213d900bb_comptimeFile(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b879aaee:;
			{
				jule::Ptr<_213cacd0d_comptimeFile> _278621_ct = _213d900bb_comptimeFile(_276038_d.get()._field_Kind.ptr());;
				return _1b87b7c1a_comptimeObjSubIdent(_self_, &(_278621_ct), &(_276038_d), &(_276052_si));;
			}
		}
		_match_end_1b879a109:;
	};
	jule::Ptr<_213d88834_TypeKind> _279017_kind = _276038_d.get()._field_Kind;;
	{
		
		if ((_213d8b529_Ptr(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b87b81b0:;
			{
				jule::Ptr<_213d97d4e_Ptr> _279317_ptr = _213d8b529_Ptr(_276038_d.get()._field_Kind.ptr());;
				if (_213d98822_IsUnsafe(_279317_ptr.ptr())) {
					goto _match_end_1b87ba190;
				};
				if (((!(_276052_si.get()._field_IsSelf)) && (!(_213d5d8d6_isUnsafe(_self_))))) {
					_213d5ce9b_pushErr(_self_, _276052_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_279017_kind=_213d8b529_Ptr(_276038_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_213d8b2b5_Sptr(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b87b9e70:;
			{
				_279017_kind=_213d8b2b5_Sptr(_276038_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1b87ba190:;
	};
	{
		
		if ((_213d8c717_Trait(_276038_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b87bcbdc:;
			{
				return _213d72565_evalTraitSubIdent(_self_, _276038_d, _213d8c717_Trait(_276038_d.get()._field_Kind.ptr()), _276052_si.get()._field_Ident);;
			}
		}
		else if ((_213d8c4a3_Struct(_279017_kind.ptr()) != nullptr)) {
			_case_begin_1b87bcc64:;
			{
				jule::Ptr<_213c64402_StructIns> _280917_s = _213d8c4a3_Struct(_279017_kind.ptr());;
				if (_213d83c6e_isInstancedStruct(_280917_s)) {
					jule::Bool _281125_usedReferenceElem = (_213d8b2b5_Sptr(_276038_d.get()._field_Kind.ptr()) != nullptr);;
					return _213d7308d_evalStructSubIdent(_self_, _276038_d, _213d8c4a3_Struct(_279017_kind.ptr()), _276052_si, _281125_usedReferenceElem);;
				};
			}
		}
		else if ((_213d8beca_Slc(_279017_kind.ptr()) != nullptr)) {
			_case_begin_1b87bccdb:;
			{
				return _213d73445_evalSliceSubIdent(_self_, _276038_d, _276052_si.get()._field_Ident);;
			}
		}
		else if ((_213d8bc66_Arr(_279017_kind.ptr()) != nullptr)) {
			_case_begin_1b87bcd63:;
			{
				return _213d737ec_evalArraySubIdent(_self_, _276038_d, _276052_si.get()._field_Ident);;
			}
		}
		_match_end_1b87bcb10:;
	};
	_213d5ce9b_pushErr(_self_, _276052_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_276038_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_213d5ae22_Data> _213d77328_evalSubIdent(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c4933d_SubIdentExpr> _282336_si) {
	jule::Ptr<_213d88834_TypeKind> _282417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_282417_prefix;
	});;
	jule::Ptr<_213d5ae22_Data> _282717_d = _213d78725_evalExprKind(_self_, _282336_si.get()._field_Expr.get()._field_Kind);;
	if ((_282717_d == nullptr)) {
		return nullptr;;
	};
	if (_282717_d.get()._field_Decl) {
		return _213d76712_evalTypeStatic(_self_.ptr(), _282717_d, _282336_si);;
	};
	return _213d7701a_evalObjSubIdent(_self_.ptr(), _282717_d, _282336_si);;
}



inline jule::Ptr<_213d5ae22_Data> _213d77636_evalTuple(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c46b32_TupleExpr> _283733_tup) {
	jule::Ptr<_213d95d4c_Tuple> _283817_tupT = jule::new_ptr<_213d95d4c_Tuple>();;
	_283817_tupT.get()._field_Types=jule::Slice<jule::Ptr<_213d88834_TypeKind>>::alloc(0LL, _283733_tup.get()._field_Expr.len());
	jule::Ptr<_213c6e42e_TupleExprModel> _284117_model = jule::new_ptr<_213c6e42e_TupleExprModel>(_213c6e42e_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_213d5ae22_Data>>::alloc(0LL, _283733_tup.get()._field_Expr.len())});;
	jule::Bool _284517_ok = true;;
	{
		auto expr = &(_283733_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b87c6179:;
		if (it != expr_end) {
			jule::Ptr<_213c45ea5_Expr> _284621_expr = *it;
			{
				jule::Ptr<_213d5ae22_Data> _284721_d = _213d7945c_evalExpr(_self_, _284621_expr);;
				if ((_284721_d == nullptr)) {
					_284517_ok=false;
					goto _iter_next_1b87c6179;
				};
				{ jule::Slice<jule::Ptr<_213d88834_TypeKind>> &__jule_push_dest = _283817_tupT.get()._field_Types; __jule_push_dest.push(_284721_d.get()._field_Kind); };
				{ jule::Slice<jule::Ptr<_213d5ae22_Data>> &__jule_push_dest = _284117_model.get()._field_Datas; __jule_push_dest.push(_284721_d); };
			}
			_iter_next_1b87c6179:;
			++it;
			goto _iter_begin_1b87c6179;
		}
		_iter_end_1b87c6179:;
	};
	if ((!(_284517_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_283817_tupT, 23)}), ._field_Model=jule::Any(_284117_model, &__jule_any_type87), });;
}



inline jule::Ptr<_213d5ae22_Data> _213d779dd_evalMap(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213d967ed_Map> _286631_m, jule::Ptr<_213c4b593_BraceLit> _286644_lit) {
	jule::Ptr<_213c6bc12_MapExprModel> _286717_model = jule::new_ptr<_213c6bc12_MapExprModel>(_213c6bc12_MapExprModel{._field_KeyKind=_286631_m.get()._field_Key, ._field_ValKind=_286631_m.get()._field_Val, });;
	{
		auto expr = &(_286644_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b87c94ce:;
		if (it != expr_end) {
			jule::Ptr<_213c45ea5_Expr> _287221_expr = *it;
			{
				{
					auto &_match_expr{ _287221_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1b87c9c0a:;
						{
							goto _match_end_1b87c9cb5;
						}
					}
					else {
						_case_begin_1b87c9e3b:;
						{
							_213d5ce9b_pushErr(_self_.ptr(), _286644_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1b87c9cb5:;
				};
				jule::Ptr<_213c4be78_KeyValPair> _288221_pair = _287221_expr.get()._field_Kind.cast_ptr<_213c4be78_KeyValPair>(&__jule_any_type84);;
				jule::Ptr<_213d5ae22_Data> _288421_key = _213d7945c_evalExpr(_self_, _288221_pair.get()._field_Key);;
				if ((_288421_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_213d5ae22_Data> _288921_val = _213d7945c_evalExpr(_self_, _288221_pair.get()._field_Val);;
				if ((_288921_val == nullptr)) {
					return nullptr;;
				};
				_213ceab70_checkAssignType(_self_.get()._field_s, false, &(_286631_m.get()._field_Key), &(_288421_key), _288221_pair.get()._field_Colon);
				_213ceab70_checkAssignType(_self_.get()._field_s, false, &(_286631_m.get()._field_Val), &(_288921_val), _288221_pair.get()._field_Colon);
				{ jule::Slice<jule::Ptr<_213c6b78e_KeyValPairExprModel>> &__jule_push_dest = _286717_model.get()._field_Entries; __jule_push_dest.push(jule::new_ptr<_213c6b78e_KeyValPairExprModel>(_213c6b78e_KeyValPairExprModel{._field_Key=_288421_key.get()._field_Model, ._field_Val=_288921_val.get()._field_Model})); };
			}
			_iter_next_1b87c94ce:;
			++it;
			goto _iter_begin_1b87c94ce;
		}
		_iter_end_1b87c94ce:;
	};
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_286631_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_286717_model, &__jule_any_type102), });;
}



inline jule::Ptr<_213d5ae22_Data> _213d77ceb_evalBraceLit(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c4b593_BraceLit> _291036_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1b87ceaab:;
			{
				_213d5ce9b_pushErr(_self_.ptr(), _291036_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_213d8c97b_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b87cee63:;
			{
				return _213d779dd_evalMap(_self_, _213d8c97b_Map(_self_.get()._field_prefix.ptr()), _291036_lit);;
			}
		}
		else if ((_213d8c4a3_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b87d0062:;
			{
				return _213d6e6a5_evalStructLitExplicit(_self_, _213d8c4a3_Struct(_self_.get()._field_prefix.ptr()), _291036_lit.get()._field_Exprs, _291036_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1b87ce490:;
			{
				_213d5ce9b_pushErr(_self_.ptr(), _291036_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b87ce1b5:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d78109_evalAnonFunc(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c53457_FnDecl> _292536_decl) {
	_213d99b75_typeChecker _292617_tc = _213d99b75_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_213c796ae_FnIns> _293117_ins = _213da1198_buildFunc(&_292617_tc, _292536_decl);;
	if ((_293117_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b87d39d3:;
			{
				jule::Ptr<_213cc06a0_scopeChecker> _293721_sc = _self_.get()._field_lookup.cast_ptr<_213cc06a0_scopeChecker>(0);;
				jule::Ptr<_213cc06a0_scopeChecker> _293821_scc = _213cd0d53_newChildChecker(_293721_sc);;
				_293821_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_213cbe418_scopeLabel>>>(nullptr);
				_293821_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_213cbe88b_scopeGoto>>>(nullptr);
				_293821_scc.get()._field_owner=nullptr;
				_293821_scc.get()._field_childIndex=0LL;
				_293821_scc.get()._field_it=0LLU;
				_293821_scc.get()._field_cse=0LLU;
				_293821_scc.get()._field_owner=_293117_ins;
				_213d0b862_checkFnInsSc(_self_.get()._field_s.ptr(), &(_293117_ins), &(_293821_scc));
			}
		}
		else {
			_case_begin_1b87d3890:;
			{
				_213d0be06_checkFnIns(_self_.get()._field_s, &(_293117_ins));
			}
		}
		_match_end_1b87d383a:;
	};
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_293117_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_213c6b3d7_AnonFnExprModel>(_213c6b3d7_AnonFnExprModel{._field_Func=_293117_ins, ._field_Global=_213d5db4a_isGlobal(_self_.ptr())}), &__jule_any_type103), });;
}



inline jule::Ptr<_213d5ae22_Data> _213d78417_evalBinop(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c497b1_BinopExpr> _296033_op) {
	_213d7b6a1_binaryEval _296117_bs = static__213d7bc78_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_213d91089_Prim> _296417_prim = _213d8b051_Prim(_self_.get()._field_prefix.ptr());;
		if (((_296417_prim == nullptr) || (!(_2121a4745_IsNum(_213d913b9_Str(_296417_prim.ptr())))))) {
			jule::Ptr<_213d88834_TypeKind> _296625_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_296625_prefix;
			});;
			return _213d82201_eval(&_296117_bs, &(_296033_op));;
		};
	};
	return _213d82201_eval(&_296117_bs, &(_296033_op));;
}



inline jule::Ptr<_213d5ae22_Data> _213d78725_evalExprKind(jule::Ptr<_213d5c990_Eval> _self_, jule::Any _297536_kind) {
	{
		auto &_match_expr{ _297536_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b87d8257:;
			{
				jule::Ptr<_213c46291_RangeExpr> _297821_e = _297536_kind.cast_ptr<_213c46291_RangeExpr>(&__jule_any_type104);;
				return _213d78725_evalExprKind(_self_, _297821_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1b87dacc6:;
			{
				return _213d607ea_evalLit(_self_.ptr(), _297536_kind.cast_ptr<_213c46ed9_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b87dad3c:;
			{
				return _213d64ca5_evalIdent(_self_.ptr(), _297536_kind.cast_ptr<_213c47a9a_IdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b87da842:;
			{
				return _213d650b3_evalUnary(_self_, _297536_kind.cast_ptr<_213c482a4_UnaryExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b87da8a8:;
			{
				return _213d653c1_evalVariadic(_self_, _297536_kind.cast_ptr<_213c4865b_VariadicExpr>(&__jule_any_type81));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1b87da930:;
			{
				return _213d656ce_evalUnsafe(_self_, _297536_kind.cast_ptr<_213c47627_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b87da9a7:;
			{
				return _213d6624b_evalSliceExpr(_self_, _297536_kind.cast_ptr<_213c4c5e9_SliceExpr>(&__jule_any_type99));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1b87dadb4:;
			{
				return _213d69590_evalIndexing(_self_, _297536_kind.cast_ptr<_213c4ce57_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1b87dae3b:;
			{
				return _213d6a75b_evalSlicing(_self_, _297536_kind.cast_ptr<_213c4d562_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1b87daeb3:;
			{
				return _213d6de46_evalCast(_self_, _297536_kind.cast_ptr<_213c48a13_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b87db03a:;
			{
				return _213d6e254_evalNsSelection(_self_.ptr(), _297536_kind.cast_ptr<_213c48dba_NsSelectionExpr>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b87db0b2:;
			{
				return _213d6e9b3_evalStructLit(_self_, _297536_kind.cast_ptr<_213c4b120_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b87db139:;
			{
				return _213d70035_evalType(_self_.ptr(), _297536_kind.cast_ptr<_213c41d2a_TypeDecl>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b87db1b1:;
			{
				return _213d714ed_evalFnCall(_self_, _297536_kind.cast_ptr<_213c49dbb_FnCallExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b87db238:;
			{
				return _213d77328_evalSubIdent(_self_, _297536_kind.cast_ptr<_213c4933d_SubIdentExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b87db2b0:;
			{
				return _213d77636_evalTuple(_self_, _297536_kind.cast_ptr<_213c46b32_TupleExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b87db337:;
			{
				return _213d77ceb_evalBraceLit(_self_, _297536_kind.cast_ptr<_213c4b593_BraceLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b87db3ae:;
			{
				return _213d78109_evalAnonFunc(_self_, _297536_kind.cast_ptr<_213c53457_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b87db436:;
			{
				return _213d78417_evalBinop(_self_, _297536_kind.cast_ptr<_213c497b1_BinopExpr>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1b87da6dd:;
			{
				return nullptr;;
			}
		}
		_match_end_1b87da138:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d78a33_eval1(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c45ea5_Expr> _302329_expr) {
	jule::Ptr<_213d5ae22_Data> _302417_d = _213d78725_evalExprKind(_self_, _302329_expr.get()._field_Kind);;
	if (((_302417_d == nullptr) || (_302417_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_213d8c23e_Fn(_302417_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b87e58b3:;
			{
				jule::Ptr<_213c796ae_FnIns> _303121_f = _213d8c23e_Fn(_302417_d.get()._field_Kind.ptr());;
				if (_213c7aa45_IsBuiltin(_303121_f.ptr())) {
					_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _302329_expr.get()._field_Token, jule::Str("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1b87e5253;
				};
				if ((_303121_f.get()._field_Generics.len() != _303121_f.get()._field_Decl.get()._field_Generics.len())) {
					_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _302329_expr.get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!(_303121_f.get()._field_Decl.get()._field_Statically)) && _213c771d4_IsMethod(_303121_f.get()._field_Decl.ptr()))) {
					_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _302329_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1b87e5253:;
	};
	return _302417_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d78d41_eval(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c45ea5_Expr> _305028_expr) {
	jule::Ptr<_213d5ae22_Data> _305117_d = _213d78a33_eval1(_self_, _305028_expr);;
	if ((_305117_d == nullptr)) {
		return nullptr;;
	};
	if ((((_self_.get()._field_owner == nullptr) || (!(_self_.get()._field_owner.get()._field_Constant))) && _213d8ce54_comptime(_305117_d.get()._field_Kind.ptr()))) {
		_213ce38d2_pushErr(_self_.get()._field_s.ptr(), _305028_expr.get()._field_Token, jule::Str("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _305117_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d7914e_evalExpr1(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c45ea5_Expr> _306533_expr) {
	jule::Ptr<_213d5ae22_Data> _306617_d = _213d78a33_eval1(_self_, _306533_expr);;
	{
		
		if ((_306617_d == nullptr)) {
			_case_begin_1b87eb578:;
			{
				return nullptr;;
			}
		}
		else if (_306617_d.get()._field_Decl) {
			_case_begin_1b87eb600:;
			{
				_213d5ce9b_pushErr(_self_.ptr(), _306533_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b87eb4ce:;
			{
				return _306617_d;;
			}
		}
		_match_end_1b87eb446:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7945c_evalExpr(jule::Ptr<_213d5c990_Eval> _self_, jule::Ptr<_213c45ea5_Expr> _308132_expr) {
	jule::Ptr<_213d5ae22_Data> _308217_d = _213d78d41_eval(_self_, _308132_expr);;
	{
		
		if ((_308217_d == nullptr)) {
			_case_begin_1b87ed080:;
			{
				return nullptr;;
			}
		}
		else if (_308217_d.get()._field_Decl) {
			_case_begin_1b87ed107:;
			{
				_213d5ce9b_pushErr(_self_.ptr(), _308132_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b87eced6:;
			{
				return _308217_d;;
			}
		}
		_match_end_1b87ece3c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213d5c990_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _213d798d0_unaryEval static__213d79d0e_new(jule::Ptr<_213d5c990_Eval> _310223_e) {
	return _213d798d0_unaryEval{._field_e=_310223_e, };;
}



inline void _213d79eda_minus(_213d798d0_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b87ee944:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_213d8b051_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b87ee625:;
			{
				if ((!(_2121a4745_IsNum(_213d88bdb_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_213d8c4a3_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b87ee68b:;
			{
				if ((_213d8c4a3_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b87ee5ae:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b87ee3c2:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_213d5b791_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_2121a9393_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b880367e:;
				{
					_2121a84a2_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_2121a6eea_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2121a88e2_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b8803706:;
				{
					_2121a79ac_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_2121a6549_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2121a8b56_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b880377d:;
				{
					_2121a79ac_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_2121a725e_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1b8803294:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3140:17"));;
				}
			}
			_match_end_1b88031c8:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_213c68b76_UnaryExprModel>(_213c68b76_UnaryExprModel{._field_Expr=jule::new_ptr<_213d5ae22_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _213d7a1b6_plus(_213d798d0_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b8807683:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_213d8b051_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8807353:;
			{
				if ((!(_2121a4745_IsNum(_213d88bdb_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_213d8c4a3_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88073b9:;
			{
				if ((_213d8c4a3_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b88072dc:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b8807221:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_213d5b791_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_2121a9393_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b880b3bd:;
				{
					_2121a84a2_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_2121a6eea_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2121a88e2_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b880b445:;
				{
					_2121a79ac_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_2121a6549_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2121a8b56_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b880b4bc:;
				{
					_2121a79ac_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_2121a725e_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1b880aed3:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3185:17"));;
				}
			}
			_match_end_1b880ae17:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_213c68b76_UnaryExprModel>(_213c68b76_UnaryExprModel{._field_Expr=jule::new_ptr<_213d5ae22_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _213d7a392_caret(_213d798d0_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b88103c2:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_213d8b051_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8810092:;
			{
				if ((!(_2121a417e_IsInt(_213d88bdb_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_213d8c4a3_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8810108:;
			{
				if ((_213d8c4a3_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b881002b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b880ee60:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_213d5b791_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_2121a88e2_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b88140eb:;
				{
					_2121a79ac_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_2121a6549_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_2121a8b56_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b8814173:;
				{
					_2121a7c32_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_2121a67ad_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1b8813c22:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3228:17"));;
				}
			}
			_match_end_1b8813b56:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_213c68b76_UnaryExprModel>(_213c68b76_UnaryExprModel{._field_Expr=jule::new_ptr<_213d5ae22_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _213d7a56d_excl(_213d798d0_unaryEval* _self_) {
	jule::Ptr<_213d91089_Prim> _324213_t = _213d8b051_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_324213_t == nullptr) || (!(_213d94026_IsBool(_324213_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_213d5b791_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_2121a8dba_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b8818dc0:;
				{
					_2121a7ea7_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_2121a6a22_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1b8818a07:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3256:17"));;
				}
			}
			_match_end_1b881893b:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_213c68b76_UnaryExprModel>(_213c68b76_UnaryExprModel{._field_Expr=jule::new_ptr<_213d5ae22_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _213d7a749_star(_213d798d0_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_213c68b76_UnaryExprModel>(_213c68b76_UnaryExprModel{._field_Expr=jule::new_ptr<_213d5ae22_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_213d8b529_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b881b9e9:;
			{
				if ((!(_213d5d8d6_isUnsafe((*(_self_))._field_e.ptr())))) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_213d97d4e_Ptr> _328121_t = _213d8b529_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_213d98822_IsUnsafe(_328121_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_328121_t.get()._field_Elem;
				(*(_self_))._field_d.get()._field_Mutable=true;
			}
		}
		else if ((_213d8b2b5_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b881b6db:;
			{
				(*(_self_))._field_d.get()._field_Kind=_213d8b2b5_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1b881b675:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b881a91b:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _213d7a925_amper(_213d798d0_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b882335d:;
			{
				jule::Ptr<_213c694e5_StructLitExprModel> _330221_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_213c694e5_StructLitExprModel>(&__jule_any_type100);;
				_213d82e8d_makeStructLitAlloc(&((*(_self_))._field_d), &(_330221_lit));
			}
		}
		else {
			_case_begin_1b8820c84:;
			{
				{
					
					if (_213da3321_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1b8820921:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213d97d4e_Ptr>(_213d97d4e_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 26)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_213c68b76_UnaryExprModel>(_213c68b76_UnaryExprModel{._field_Expr=jule::new_ptr<_213d5ae22_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_1b882127e:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1b88211b3:;
				};
			}
		}
		_match_end_1b8820c0c:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
}



inline void _213d7ab01_typeDecl(_213d798d0_unaryEval* _self_) {
	_213d99b75_typeChecker _332617_tc = _213d99b75_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b8824969:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213d9ea37_buildPtrFromType(&_332617_tc, &((*(_self_))._field_d.get()._field_Kind)), 26)});
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b8827153:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213d9e41b_buildSptrFromType(&_332617_tc, &((*(_self_))._field_d.get()._field_Kind)), 21)});
			}
		}
		else {
			_case_begin_1b8825ad0:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b8825a7a:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _213d7accc_evalData(_213d798d0_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b88295b7:;
			{
				jule::Ptr<_213d88834_TypeKind> _334921_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_213d78d41_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
				(*(_self_))._field_e.get()._field_prefix=_334921_prefix;
			}
		}
		else {
			_case_begin_1b8829188:;
			{
				(*(_self_))._field_d=_213d78d41_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
			}
		}
		_match_end_1b8829133:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7b0da_eval(_213d798d0_unaryEval* _self_, jule::Ptr<_213c482a4_UnaryExpr> _335827_u) {
	(*(_self_))._field_u=_335827_u;
	_213d7accc_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_213d7ab01_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_213d88834_TypeKind> _336913_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b882d533:;
			{
				_213d79eda_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1b882d027:;
			{
				_213d7a1b6_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b882d08d:;
			{
				_213d7a392_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1b882d104:;
			{
				_213d7a56d_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b882d16a:;
			{
				_213d7a749_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b882d6cb:;
			{
				_213d7a925_amper(_self_);
			}
		}
		else {
			_case_begin_1b882ceb1:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1b882ce5b:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b882d742:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str(_336913_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_213d5b791_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1b883036a:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1b8830601:;
	};
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _213d798d0_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _213d7b6a1_binaryEval static__213d7bc78_newPlain(jule::Ptr<_213d5c990_Eval> _340628_e) {
	return _213d7b6a1_binaryEval{._field_e=_340628_e, };;
}



inline _213d7b6a1_binaryEval static__213d7c086_new(jule::Ptr<_213d5c990_Eval> _341223_e, jule::Ptr<_2114c1b73_Token> _341237_op) {
	return _213d7b6a1_binaryEval{._field_e=_341223_e, ._field_op=_341237_op};;
}



inline jule::Bool _213d7c2ea_checkTypeCompatibility(_213d7b6a1_binaryEval* _self_) {
	return _213ceb0c1_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _213d7c592_checkStructCommonOperatorCompatibility(_213d7b6a1_binaryEval* _self_) {
	jule::Ptr<_213c796ae_FnIns> _342617_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1b883586a:;
			{
				_342617_overload=_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b8830d1b:;
			{
				_342617_overload=_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1b883576b:;
			{
				_342617_overload=_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b883476a:;
			{
				_342617_overload=_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1b88347d1:;
			{
				_342617_overload=_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b88358d1:;
			{
				_342617_overload=_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b8835947:;
			{
				_342617_overload=_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b88359ad:;
			{
				_342617_overload=_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1b8835a24:;
			{
				_342617_overload=_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b8835a8a:;
			{
				_342617_overload=_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1b8834638:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1b8834429:;
	};
	if ((_342617_overload == nullptr)) {
		_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_213c787e0_ParamIns> _345817_p = _342617_overload.get()._field_Params[1LL];;
	return _213ceab70_checkAssignType((*(_self_))._field_e.get()._field_s, _345817_p.get()._field_Decl.get()._field_Reference, &(_345817_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_213d5ae22_Data> _213d7c839_evalComptimeTypeInfo(_213d7b6a1_binaryEval* _self_) {
	jule::Ptr<_213ca374e_comptimeTypeInfo> _346317_r = _213d8e61a_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((_346317_r == nullptr)) {
		_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("comptimeTypeInfo", 16), &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213ca374e_comptimeTypeInfo> _346817_l = _213d8e61a_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1b8840336:;
			{
				jule::Ptr<_2121a4c51_Const> _347121_constant = static__2121a56be_NewBool(_213d88ee9_Equal(_346817_l.get()._field_base, _346317_r.get()._field_base));;
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_347121_constant, &__jule_any_type19), ._field_Constant=_347121_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b884169a:;
			{
				jule::Ptr<_2121a4c51_Const> _347821_constant = static__2121a56be_NewBool((!(_213d88ee9_Equal(_346817_l.get()._field_base, _346317_r.get()._field_base))));;
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, ._field_Model=jule::Any(_347821_constant, &__jule_any_type19), ._field_Constant=_347821_constant});;
			}
		}
		else {
			_case_begin_1b88405cd:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8840578:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7ca9d_evalNil(_213d7b6a1_binaryEval* _self_) {
	if ((!(_213d8a5a0_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b8842a75:;
			{
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else {
			_case_begin_1b8844aee:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8844a55:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7cd12_evalEnum(_213d7b6a1_binaryEval* _self_) {
	jule::Ptr<_213c8b3e6_Enum> _350917_enm = _213d8b78d_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88469be:;
			{
				jule::Ptr<_213d88834_TypeKind> _351321_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_213d8b78d_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_351321_rkind=_213d8b78d_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_213ceb0c1_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_350917_enm.get()._field_Kind.get()._field_Kind), &(_351321_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		_match_end_1b8846947:;
	};
	if (((_213d8b78d_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_350917_enm != _213d8b78d_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_350917_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b8845957:;
			{
				if ((!(_2121a4745_IsNum(_213d88bdb_Str(_350917_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_350917_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b884b782:;
			{
				jule::Ptr<_213c8a901_EnumItem> _354317_first = _350917_enm.get()._field_Items[0LL];;
				{
					
					if (_2121a88e2_IsI64(_354317_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1b884e1e1:;
						{
							if ((_2121a6549_ReadI64(_354317_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else if (_2121a8b56_IsU64(_354317_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1b884e257:;
						{
							if ((_2121a67ad_ReadU64(_354317_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else {
						_case_begin_1b884dd4a:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3556:17"));;
						}
					}
					_match_end_1b884dcd4:;
				};
				_julec_label_err:;
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_350917_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_213d5d2ba_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_next:;
				goto _case_begin_1b884b7e8;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b884b7e8:;
			{
				if (((_213d8b051_Prim(_350917_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_2121a417e_IsInt(_213d913b9_Str(_213d8b051_Prim(_350917_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_350917_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b884a880:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_350917_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b884a792:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7d076_evalTypeEnum(_213d7b6a1_binaryEval* _self_) {
	jule::Ptr<_213c8c9e1_TypeEnum> _357617_enm = _213d8ba02_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_213d7c2ea_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b885658e:;
			{
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else {
			_case_begin_1b885614e:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213c8cd21_Str(_357617_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8855ca8:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7d2da_evalSptr(_213d7b6a1_binaryEval* _self_) {
	if ((!(_213d7c2ea_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b8857e20:;
			{
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else {
			_case_begin_1b8858041:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b885746e:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7d54e_evalPtr(_213d7b6a1_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b8859916:;
			{
				if ((!(_213d7c2ea_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b885ab04:;
			{
				if ((_213d8b529_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_213d98822_IsUnsafe(_213d8b529_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_213d840d2_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b88593e9:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8859394:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7d7b3_evalArr(_213d7b6a1_binaryEval* _self_) {
	if ((!(_213d7c2ea_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88609a5:;
			{
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else {
			_case_begin_1b8860a82:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b885b6e8:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7da27_evalSlc(_213d7b6a1_binaryEval* _self_) {
	if ((!(_213d7c2ea_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88628b9:;
			{
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else {
			_case_begin_1b88629da:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8861e18:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7dc8b_evalStruct(_213d7b6a1_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1b8863e09:;
			{
				if ((_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b8863e81:;
			{
				if ((_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1b88645e1:;
			{
				if ((_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b8864657:;
			{
				if ((_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88646bd:;
			{
				if ((!(_213d7c2ea_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		_match_end_1b8863d3d:;
	};
	if ((!(_213d7c592_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_213d5ae22_Data> _213d7e000_evalTrait(_213d7b6a1_binaryEval* _self_) {
	if ((!(_213d7c2ea_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b886c83b:;
			{
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else {
			_case_begin_1b886c95c:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b886c682:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7e264_evalAny(_213d7b6a1_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b886e332:;
			{
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else {
			_case_begin_1b886dd15:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b886dcb0:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7e4c8_evalBool(_213d7b6a1_binaryEval* _self_) {
	if ((!(_213d7c2ea_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1b8870e9e:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b88710c0:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b88704ed:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d7e73c_evalStr(_213d7b6a1_binaryEval* _self_) {
	jule::Str _377517_rk = _213d88bdb_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_377517_rk.equal("str", 3))) {
		_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_377517_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1b8873501:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b8874e4d:;
			{
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		else {
			_case_begin_1b8873424:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b88733be:;
	};
}



inline void _213d7e918_setTypeToGreater(_213d7b6a1_binaryEval* _self_) {
	jule::Ptr<_213d91089_Prim> _380013_lp = _213d8b051_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_213d91089_Prim> _380113_rp = _213d8b051_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_213d5b791_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_213d5b791_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_380113_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_213d5b791_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_380013_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_213d5b791_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_380113_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_2121a2ab7_IsGreater(_380113_rp.get()._field_Kind, _380013_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_213d5b791_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_380113_rp.get()._field_Kind;
		};
	};
}



inline void _213d7eb5a_checkModData(_213d7b6a1_binaryEval* _self_, jule::Ptr<_213d5ae22_Data>* _383336_d) {
	if ((!(_213d5b791_IsConst((*(_383336_d)).ptr())))) {
		if (((_213d8b051_Prim((*(_383336_d)).get()._field_Kind.ptr()) == nullptr) || (!(_2121a417e_IsInt(_213d8b051_Prim((*(_383336_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_213d43921_sigAssignable(jule::Str("i64", 3), _383336_d)) {
			_case_begin_1b887e4da:;
			{
				_2121a79ac_SetI64((*(_383336_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_2121a725e_AsI64((*(_383336_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_213d43ca6_unsigAssignable(jule::Str("u64", 3), _383336_d)) {
			_case_begin_1b887e1dd:;
			{
				_2121a7c32_SetU64((*(_383336_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_2121a74c3_AsU64((*(_383336_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1b887cc69:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b887cc14:;
	};
}



inline void _213d7ed36_mod(_213d7b6a1_binaryEval* _self_) {
	_213d7eb5a_checkModData(_self_, &((*(_self_))._field_l));
	_213d7eb5a_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _213d801dd_numbersAreCompatibile(_213d7b6a1_binaryEval* _self_, jule::Str* _385537_lk, jule::Str* _385547_rk) {
	if ((!(_2121a4745_IsNum((*(_385547_rk)))))) {
		return false;;
	};
	if ((_213d5b791_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_385537_lk)).equal("f32", 3)) {
		if ((_213d5b791_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_385547_rk)).equal("f32", 3);;
	};
	if ((*(_385537_lk)).equal("f64", 3)) {
		if ((_213d5b791_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_385547_rk)).equal("f64", 3);;
	};
	if ((_213d5b791_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_385537_lk)) == (*(_385547_rk)));;
}



inline jule::Ptr<_213d5ae22_Data> _213d80452_evalFloat(_213d7b6a1_binaryEval* _self_) {
	jule::Str _388113_lk = _213d8b051_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _388213_rk = _213d8b051_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_213d801dd_numbersAreCompatibile(_self_, &(_388113_lk), &(_388213_rk))))) {
		_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_388113_lk, &__jule_any_type5),jule::Any(_388213_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b88870b4:;
			{
				if (((!(_213d5b791_IsConst((*(_self_))._field_l.ptr()))) || (!(_213d440e7_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_388113_lk, &__jule_any_type5),jule::Any(_388213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_213d5b791_IsConst((*(_self_))._field_r.ptr()))) || (!(_213d440e7_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_388113_lk, &__jule_any_type5),jule::Any(_388213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_2121a79ac_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_2121a725e_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_2121a7c32_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_2121a74c3_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_213d838b7_isOkForShifting(&((*(_self_))._field_r))))) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1b888646a:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b888b77d:;
			{
				_213d7e918_setTypeToGreater(_self_);
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		_match_end_1b888b728:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1b8886514:;
			{
				_213d7e918_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b888d719:;
			{
				if ((!(_2121a417e_IsInt(_388213_rk)))) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_388113_lk, &__jule_any_type5),jule::Any(_388213_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_213d7ed36_mod(_self_);
				_213d7e918_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1b888ca8c:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b888c5e7:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d806b6_evalInt(_213d7b6a1_binaryEval* _self_) {
	jule::Str _394513_lk = _213d8b051_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _394613_rk = _213d8b051_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b88915c9:;
			{
				if (((!(_2121a417e_IsInt(_394513_lk))) || (!(_2121a417e_IsInt(_394613_rk))))) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_394513_lk, &__jule_any_type5),jule::Any(_394613_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_213d838b7_isOkForShifting(&((*(_self_))._field_r))))) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1b8891893:;
	};
	if ((!(_213d801dd_numbersAreCompatibile(_self_, &(_394513_lk), &(_394613_rk))))) {
		_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_394513_lk, &__jule_any_type5),jule::Any(_394613_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b88946a9:;
			{
				return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52dd7_primBool, });;
			}
		}
		_match_end_1b88945bb:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b88919c5:;
			{
				_213d7e918_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b8896458:;
			{
				_213d7ed36_mod(_self_);
				_213d7e918_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b88956cc:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b88958ca:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d8092a_evalPrim(_213d7b6a1_binaryEval* _self_) {
	jule::Ptr<_213d91089_Prim> _400213_prim = _213d8b051_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_213d94026_IsBool(_400213_prim.ptr())) {
			_case_begin_1b889857b:;
			{
				return _213d7e4c8_evalBool(_self_);;
			}
		}
		else if (_213d9428a_IsStr(_400213_prim.ptr())) {
			_case_begin_1b8898603:;
			{
				return _213d7e73c_evalStr(_self_);;
			}
		}
		_match_end_1b88984d2:;
	};
	if ((_213d8b051_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_213d913b9_Str(_400213_prim.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_2121a449d_IsFloat(_400213_prim.get()._field_Kind)) {
			_case_begin_1b889ac32:;
			{
				return _213d80452_evalFloat(_self_);;
			}
		}
		else if (_2121a417e_IsInt(_400213_prim.get()._field_Kind)) {
			_case_begin_1b889a605:;
			{
				return _213d806b6_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1b889a58e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b88986ad:;
	};
}



inline void _213d80b06_checkSpecialCases(_213d7b6a1_binaryEval* _self_) {
	if (((!(_213d89d63_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_213d8988a_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_213d89d63_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_213d8988a_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d80d6a_evalOp(_213d7b6a1_binaryEval* _self_) {
	_213d80b06_checkSpecialCases(_self_);
	{
		
		if (_213d89aee_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1b889e9b1:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if ((_213d8e61a_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b889e395:;
			{
				({
					jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b88a0929;
			}
		}
		else if ((_213d8e61a_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a0929:;
			{
				return _213d7c839_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_213d8b051_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _213d944ee_IsAny(_213d8b051_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b88a0a17:;
			{
				({
					jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b88a0ad3;
			}
		}
		else if (_213d8988a_IsNil((*(_self_))._field_r.get()._field_Kind.ptr())) {
			_case_begin_1b88a0ad3:;
			{
				({
					jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b88a0b49;
			}
		}
		else if (_213d8988a_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1b88a0b49:;
			{
				return _213d7ca9d_evalNil(_self_);;
			}
		}
		else if (((_213d8b051_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _213d944ee_IsAny(_213d8b051_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b88a0bb0:;
			{
				return _213d7e264_evalAny(_self_);;
			}
		}
		else if ((_213d8ba02_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a0c26:;
			{
				({
					jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b88a0c8c;
			}
		}
		else if ((_213d8ba02_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a0c8c:;
			{
				return _213d7d076_evalTypeEnum(_self_);;
			}
		}
		else if ((_213d8b78d_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a0d03:;
			{
				({
					jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b88a0d69;
			}
		}
		else if ((_213d8b78d_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a0d69:;
			{
				return _213d7cd12_evalEnum(_self_);;
			}
		}
		else if ((_213d8b2b5_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a0dd0:;
			{
				({
					jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b88a0e46;
			}
		}
		else if ((_213d8b2b5_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a0e46:;
			{
				return _213d7d2da_evalSptr(_self_);;
			}
		}
		else if ((_213d8b529_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a0eac:;
			{
				({
					jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b88a1023;
			}
		}
		else if ((_213d8b529_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a1023:;
			{
				return _213d7d54e_evalPtr(_self_);;
			}
		}
		else if ((_213d8bc66_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a1089:;
			{
				return _213d7d7b3_evalArr(_self_);;
			}
		}
		else if ((_213d8beca_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a1100:;
			{
				return _213d7da27_evalSlc(_self_);;
			}
		}
		else if ((_213d8c717_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a1166:;
			{
				({
					jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b88a11cc;
			}
		}
		else if ((_213d8c717_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a11cc:;
			{
				return _213d7e000_evalTrait(_self_);;
			}
		}
		else if ((_213d8c4a3_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a1243:;
			{
				return _213d7dc8b_evalStruct(_self_);;
			}
		}
		else if ((_213d8b051_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b88a12a9:;
			{
				return _213d8092a_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1b889e7b3:;
			{
				_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_213d88bdb_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b889e74c:;
	};
}



inline void _213d810e0_evalConst(_213d7b6a1_binaryEval* _self_, jule::Ptr<_213d5ae22_Data>* _409333_d) {
	{
		
		if (((*(_409333_d)) == nullptr) || ((*(_self_))._field_l.get()._field_Model == nullptr) || ((*(_self_))._field_r.get()._field_Model == nullptr)) {
			_case_begin_1b88b0a38:;
			{
				return;;
			}
		}
		else if ((!(_213d5b791_IsConst((*(_self_))._field_l.ptr()))) || (!(_213d5b791_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1b88b1132:;
			{
				(*(_409333_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1b88b0928:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1b88b2d04:;
			{
				(*(_409333_d)).get()._field_Constant=static__2121a56be_NewBool(_2121aa33e_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b88b2d6a:;
			{
				(*(_409333_d)).get()._field_Constant=static__2121a56be_NewBool((!(_2121aa33e_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1b88b2dd1:;
			{
				(*(_409333_d)).get()._field_Constant=static__2121a56be_NewBool(_2121aa031_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1b88b2e47:;
			{
				(*(_409333_d)).get()._field_Constant=static__2121a56be_NewBool(_2121a9c23_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1b88b2ead:;
			{
				(*(_409333_d)).get()._field_Constant=static__2121a56be_NewBool(_2121aac68_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1b88b3024:;
			{
				(*(_409333_d)).get()._field_Constant=static__2121a56be_NewBool(_2121aa64c_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1b88b308a:;
			{
				(*(_409333_d)).get()._field_Constant=static__2121a56be_NewBool(_2121ab076_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1b88b3101:;
			{
				(*(_409333_d)).get()._field_Constant=static__2121a56be_NewBool(_2121aa95a_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1b88b3167:;
			{
				_2121ab384_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1b88b31cd:;
			{
				_2121ab692_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b88b3244:;
			{
				_2121ab9a0_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1b88b32aa:;
			{
				jule::Bool _413217_ok = _2121abcad_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_413217_ok)) && (_2121a7737_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_213d91089_Prim> _413721_prim = _213d8b051_Prim((*(_409333_d)).get()._field_Kind.ptr());;
				{
					
					if (_2121a3aeb_IsSigInt(_413721_prim.get()._field_Kind)) {
						_case_begin_1b88bec12:;
						{
							_2121a79ac_SetI64((*(_409333_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_2121a725e_AsI64((*(_409333_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_2121a3dd7_IsUnsigInt(_413721_prim.get()._field_Kind)) {
						_case_begin_1b88bec89:;
						{
							_2121a7c32_SetU64((*(_409333_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_2121a74c3_AsU64((*(_409333_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_1b88beb57:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b88b3332:;
			{
				jule::Bool _414517_ok = _2121ac0bb_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_414517_ok)) && (_2121a7737_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1b88b33a9:;
			{
				_2121ac6d7_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b88b3431:;
			{
				_2121ac3c9_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b88b34a8:;
			{
				_2121ac9e5_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1b88b3530:;
			{
				_2121acd03_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1b88b35a7:;
			{
				_2121ad111_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_409333_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_1b88b25b7:;
	};
	(*(_409333_d)).get()._field_Model=jule::Any((*(_409333_d)).get()._field_Constant, &__jule_any_type19);
	_213d84d5d_applyCastModelByEnum(_409333_d, _213d8b78d_Enum((*(_409333_d)).get()._field_Kind.ptr()));
}



inline void _213d81365_checkData(_213d7b6a1_binaryEval* _self_, jule::Ptr<_213d5ae22_Data>* _417033_d) {
	jule::Ptr<_213c796ae_FnIns> _417113_f = _213d8c23e_Fn((*(_417033_d)).get()._field_Kind.ptr());;
	if ((((_417113_f != nullptr) && (_417113_f.get()._field_Decl != nullptr)) && _213c771d4_IsMethod(_417113_f.get()._field_Decl.ptr()))) {
		_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _213d81541_checkDatas(_213d7b6a1_binaryEval* _self_) {
	_213d81365_checkData(_self_, &((*(_self_))._field_l));
	_213d81365_checkData(_self_, &((*(_self_))._field_r));
}



inline void _213d817b6_setModel(_213d7b6a1_binaryEval* _self_, jule::Ptr<_213d5ae22_Data>* _418232_d) {
	if (_213d5b791_IsConst((*(_418232_d)).ptr())) {
		if (((_213d5b791_IsConst((*(_self_))._field_l.ptr()) && _213d5b791_IsConst((*(_self_))._field_r.ptr())) || (((*(_self_))._field_l.get()._field_Model == nullptr) && ((*(_self_))._field_r.get()._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_213d5ae22_Data> _419118_l;;
	jule::Ptr<_213d5ae22_Data> _419125_r;;
	({
		jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_419118_l = ___jule_assign_arg;
		_419125_r = _1___jule_assign_arg;
	});
	if ((!(_213d5ba9e_GoodOperand(_419118_l.ptr(), &(_419125_r))))) {
		({
			jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = _419125_r;
			jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = _419118_l;
			_419118_l = ___jule_assign_arg;
			_419125_r = _1___jule_assign_arg;
		});
	};
	(*(_418232_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c687be_BinopExprModel>(_213c687be_BinopExprModel{._field_Left=jule::new_ptr<_213c68307_OperandExprModel>(_213c68307_OperandExprModel{._field_Kind=_419118_l.get()._field_Kind, ._field_Model=_419118_l.get()._field_Model}), ._field_Right=jule::new_ptr<_213c68307_OperandExprModel>(_213c68307_OperandExprModel{._field_Kind=_419125_r.get()._field_Kind, ._field_Model=_419125_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _213d81a3b_postEval(_213d7b6a1_binaryEval* _self_, jule::Ptr<_213d5ae22_Data>* _420932_d) {
	(*(_420932_d)).get()._field_Lvalue=false;
	_213d817b6_setModel(_self_, _420932_d);
}



inline jule::Ptr<_213d5ae22_Data> _213d81de3_solveExplicit(_213d7b6a1_binaryEval* _self_, jule::Ptr<_213d5ae22_Data>* _421437_l, jule::Ptr<_213d5ae22_Data>* _421452_r) {
	({
		jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = (*(_421437_l));
		jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = (*(_421452_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_213d81541_checkDatas(_self_);
	jule::Ptr<_213d5ae22_Data> _421917_d = _213d80d6a_evalOp(_self_);;
	({
		jule::Ptr<_213d5ae22_Data> ___jule_assign_arg = (*(_421437_l));
		jule::Ptr<_213d5ae22_Data> _1___jule_assign_arg = (*(_421452_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_213d810e0_evalConst(_self_, &(_421917_d));
	if ((_421917_d != nullptr)) {
		_421917_d.get()._field_Mutable=true;
		_213d81a3b_postEval(_self_, &(_421917_d));
	};
	return _421917_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213d82201_eval(_213d7b6a1_binaryEval* _self_, jule::Ptr<_213c497b1_BinopExpr>* _423428_op) {
	if (((*(_423428_op)).get()._field_Op.get()._field_Id == static_cast<jule::U32>(71LLU))) {
		_213d5ce9b_pushErr((*(_self_))._field_e.ptr(), (*(_423428_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_213d5d2ba_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213d5ae22_Data> _424117_l = _213d7914e_evalExpr1((*(_self_))._field_e, (*(_423428_op)).get()._field_Left);;
	if (((_424117_l == nullptr) || (_424117_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_213d88834_TypeKind> _424617_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_424117_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_424617_prefix;
	});;
	jule::Ptr<_213d5ae22_Data> _424917_r = _213d7914e_evalExpr1((*(_self_))._field_e, (*(_423428_op)).get()._field_Right);;
	if (((_424917_r == nullptr) || (_424917_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_423428_op)).get()._field_Op;
	jule::Ptr<_213d5ae22_Data> _425617_d = _213d81de3_solveExplicit(_self_, &(_424117_l), &(_424917_r));;
	if ((((_425617_d != nullptr) && _424117_l.get()._field_IsRune) && _424917_r.get()._field_IsRune)) {
		_425617_d.get()._field_IsRune=true;
	};
	return _425617_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _213d7b6a1_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213d870a2_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213d87adb_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _213d88bdb_Str(_213d88834_TypeKind* _self_) {
	if (_213d8988a_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		(_7417_kind).append("...", 3);
	};
	if (_213d89626_Binded(_self_)) {
		(_7417_kind).append("cpp.", 4);
		_7417_kind+=(*(_self_))._field_BindIdent;
	} else {
		_7417_kind+=_213d883c2_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._213d87e71_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _213d88ee9_Equal(jule::Ptr<_213d88834_TypeKind> _self_, jule::Ptr<_213d88834_TypeKind> _9021_other) {
	if (_213d8988a_IsNil(_self_.ptr())) {
		return _213d8988a_IsNil(_9021_other.ptr());;
	};
	if (_213d89626_Binded(_self_.ptr())) {
		return (_213d89626_Binded(_9021_other.ptr()) && (_self_.get()._field_BindIdent == _9021_other.get()._field_BindIdent));;
	};
	return _213d883c2_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._213d8827e_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _213d89626_Binded(_213d88834_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _213d8988a_IsNil(_213d88834_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _213d89aee_Void(_213d88834_TypeKind* _self_) {
	jule::Ptr<_213d91089_Prim> _11013_prim = _213d8b051_Prim(_self_);;
	return ((_11013_prim != nullptr) && _11013_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _213d89d63_Comparable(_213d88834_TypeKind* _self_) {
	{
		_213d88834_TypeKind* _11721__self = (&((*(_self_))));;
		if ((_213d8c4a3_Struct(_11721__self) != nullptr)) {
			return _213d8c4a3_Struct(_11721__self).get()._field_Comparable;;
		};
		return (((_213d8c97b_Map(_11721__self) == nullptr) && (_213d8beca_Slc(_11721__self) == nullptr)) && (_213d8c23e_Fn(_11721__self) == nullptr));;
	};
}



inline jule::Bool _213d8a0c7_Mutable(_213d88834_TypeKind* _self_) {
	{
		_213d88834_TypeKind* _12821__self = (&((*(_self_))));;
		if ((_213d8c4a3_Struct(_12821__self) != nullptr)) {
			return _213d8c4a3_Struct(_12821__self).get()._field_Mutable;;
		};
		if ((_213d8c717_Trait(_12821__self) != nullptr)) {
			return true;;
		};
		if ((_213d8b051_Prim(_12821__self) != nullptr)) {
			jule::Ptr<_213d91089_Prim> _13621_p = _213d8b051_Prim(_12821__self);;
			return _213d944ee_IsAny(_13621_p.ptr());;
		};
		if ((_213d8bc66_Arr(_12821__self) != nullptr)) {
			return _213d8a0c7_Mutable(_213d8bc66_Arr(_12821__self).get()._field_Elem.ptr());;
		};
		return (((_213d8beca_Slc(_12821__self) != nullptr) || (_213d8b529_Ptr(_12821__self) != nullptr)) || (_213d8b2b5_Sptr(_12821__self) != nullptr));;
	};
}



inline jule::Bool _213d8a33b_Ordered(_213d88834_TypeKind* _self_) {
	{
		_213d88834_TypeKind* _15121__self = (&((*(_self_))));;
		jule::Ptr<_213d91089_Prim> _15217_prim = _213d8b051_Prim(_15121__self);;
		if ((_15217_prim != nullptr)) {
			return (_2121a4745_IsNum(_15217_prim.get()._field_Kind) || _213d9428a_IsStr(_15217_prim.ptr()));;
		};
		if ((_213d8b529_Ptr(_15121__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_213c64402_StructIns> _15917_s = _213d8c4a3_Struct(_15121__self);;
		if ((_15917_s != nullptr)) {
			return ((((_15917_s.get()._field_Operators._field_Gt != nullptr) && (_15917_s.get()._field_Operators._field_GtEq != nullptr)) && (_15917_s.get()._field_Operators._field_Lt != nullptr)) && (_15917_s.get()._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_213c8b3e6_Enum> _16617_enm = _213d8b78d_Enum(_15121__self);;
		if ((_16617_enm != nullptr)) {
			return _2121a4745_IsNum(_213d88bdb_Str(_16617_enm.get()._field_Kind.get()._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _213d8a5a0_NilCompatible(_213d88834_TypeKind* _self_) {
	{
		_213d88834_TypeKind* _17721__self = (&((*(_self_))));;
		jule::Ptr<_213d91089_Prim> _17917_prim = _213d8b051_Prim(_17721__self);;
		if (((_17917_prim != nullptr) && _213d944ee_IsAny(_17917_prim.ptr()))) {
			return true;;
		};
		return (((((((_213d8988a_IsNil(_17721__self) || (_213d8c23e_Fn(_17721__self) != nullptr)) || (_213d8b2b5_Sptr(_17721__self) != nullptr)) || (_213d8b529_Ptr(_17721__self) != nullptr)) || (_213d8c717_Trait(_17721__self) != nullptr)) || (_213d8beca_Slc(_17721__self) != nullptr)) || (_213d8c97b_Map(_17721__self) != nullptr)) || (_213d8ba02_TypeEnum(_17721__self) != nullptr));;
	};
}



inline jule::Bool _213d8a814_PerformsRC(_213d88834_TypeKind* _self_) {
	{
		_213d88834_TypeKind* _19821__self = (&((*(_self_))));;
		jule::Ptr<_213d91089_Prim> _19917_prim = _213d8b051_Prim(_19821__self);;
		if ((_19917_prim != nullptr)) {
			return _213d944ee_IsAny(_19917_prim.ptr());;
		};
		return (((_213d8b2b5_Sptr(_19821__self) != nullptr) || (_213d8beca_Slc(_19821__self) != nullptr)) || (_213d8c717_Trait(_19821__self) != nullptr));;
	};
}



inline jule::Bool _213d8aa78_SupportsCloning(_213d88834_TypeKind* _self_) {
	{
		_213d88834_TypeKind* _21021__self = (&((*(_self_))));;
		{
			
			if ((_213d8b051_Prim(_21021__self) != nullptr)) {
				_case_begin_1b8913805:;
				{
					return (!(_213d944ee_IsAny(_213d8b051_Prim(_21021__self).ptr())));;
				}
			}
			else if ((_213d8b78d_Enum(_21021__self) != nullptr)) {
				_case_begin_1b891386b:;
				{
					return true;;
				}
			}
			else if ((_213d8c23e_Fn(_21021__self) != nullptr)) {
				_case_begin_1b89138d2:;
				{
					return true;;
				}
			}
			else if ((_213d8b529_Ptr(_21021__self) != nullptr)) {
				_case_begin_1b8913b24:;
				{
					return true;;
				}
			}
			else if ((_213d8beca_Slc(_21021__self) != nullptr)) {
				_case_begin_1b8913b8a:;
				{
					return _213d8aa78_SupportsCloning(_213d8beca_Slc(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_213d8c97b_Map(_21021__self) != nullptr)) {
				_case_begin_1b8913c12:;
				{
					jule::Ptr<_213d967ed_Map> _22321_m = _213d8c97b_Map(_21021__self);;
					return (_213d8aa78_SupportsCloning(_22321_m.get()._field_Key.ptr()) && _213d8aa78_SupportsCloning(_22321_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_213d8bc66_Arr(_21021__self) != nullptr)) {
				_case_begin_1b8913c89:;
				{
					return _213d8aa78_SupportsCloning(_213d8bc66_Arr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_213d8b2b5_Sptr(_21021__self) != nullptr)) {
				_case_begin_1b8913e21:;
				{
					return _213d8aa78_SupportsCloning(_213d8b2b5_Sptr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_213d8c4a3_Struct(_21021__self) != nullptr)) {
				_case_begin_1b8913e87:;
				{
					jule::Ptr<_213c64402_StructIns> _23025_s = _213d8c4a3_Struct(_21021__self);;
					return (((_23025_s.get()._field_Decl != nullptr) && (!(_23025_s.get()._field_Decl.get()._field_Binded))) && _213c62e17_IsDerives(_23025_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1b89136d4:;
				{
					return false;;
				}
			}
			_match_end_1b891366d:;
		};
	};
}



inline jule::Bool _213d8acdc_Variadicable(_213d88834_TypeKind* _self_) {
	{
		_213d88834_TypeKind* _24121__self = (&((*(_self_))));;
		return (_213d8beca_Slc(_24121__self) != nullptr);;
	};
}



inline jule::Ptr<_213d91089_Prim> _213d8b051_Prim(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1b891a840:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213d91089_Prim>(20);;
			}
		}
		else {
			_case_begin_1b891122b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89111c6:;
	};
}



inline jule::Ptr<_213d947da_Sptr> _213d8b2b5_Sptr(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1b891aac6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213d947da_Sptr>(21);;
			}
		}
		else {
			_case_begin_1b891b225:;
			{
				return nullptr;;
			}
		}
		_match_end_1b891b1c0:;
	};
}



inline jule::Ptr<_213d97d4e_Ptr> _213d8b529_Ptr(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1b891b2ad:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213d97d4e_Ptr>(26);;
			}
		}
		else {
			_case_begin_1b891bd91:;
			{
				return nullptr;;
			}
		}
		_match_end_1b891c2c0:;
	};
}



inline jule::Ptr<_213c8b3e6_Enum> _213d8b78d_Enum(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b891be4b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c8b3e6_Enum>(3);;
			}
		}
		else {
			_case_begin_1b891ca62:;
			{
				return nullptr;;
			}
		}
		_match_end_1b891ce91:;
	};
}



inline jule::Ptr<_213c8c9e1_TypeEnum> _213d8ba02_TypeEnum(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1b891cb1c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c8c9e1_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1b891d733:;
			{
				return nullptr;;
			}
		}
		_match_end_1b891db62:;
	};
}



inline jule::Ptr<_213d973e2_Arr> _213d8bc66_Arr(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1b891d7dd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213d973e2_Arr>(25);;
			}
		}
		else {
			_case_begin_1b891e404:;
			{
				return nullptr;;
			}
		}
		_match_end_1b891e833:;
	};
}



inline jule::Ptr<_213d95247_Slc> _213d8beca_Slc(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1b891e4ae:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213d95247_Slc>(22);;
			}
		}
		else {
			_case_begin_1b89200c5:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8920504:;
	};
}



inline jule::Ptr<_213c796ae_FnIns> _213d8c23e_Fn(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1b8920180:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c796ae_FnIns>(1);;
			}
		}
		else {
			_case_begin_1b8920c96:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89211c5:;
	};
}



inline jule::Ptr<_213c64402_StructIns> _213d8c4a3_Struct(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b8920d51:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c64402_StructIns>(0);;
			}
		}
		else {
			_case_begin_1b8921967:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8921d96:;
	};
}



inline jule::Ptr<_213c88b63_Trait> _213d8c717_Trait(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1b8921a22:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c88b63_Trait>(2);;
			}
		}
		else {
			_case_begin_1b8922638:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8922a67:;
	};
}



inline jule::Ptr<_213d967ed_Map> _213d8c97b_Map(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1b89226e3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213d967ed_Map>(24);;
			}
		}
		else {
			_case_begin_1b8923309:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8923738:;
	};
}



inline jule::Ptr<_213d95d4c_Tuple> _213d8cbe0_Tup(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1b89233b4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213d95d4c_Tuple>(23);;
			}
		}
		else {
			_case_begin_1b8924063:;
			{
				return nullptr;;
			}
		}
		_match_end_1b892400d:;
	};
}



inline jule::Bool _213d8ce54_comptime(_213d88834_TypeKind* _self_) {
	return ((((((((((((((_213d8e3a6_comptimeTypeInfos(_self_) != nullptr) || (_213d8e61a_comptimeTypeInfo(_self_) != nullptr)) || (_213d8d1b8_comptimeStructFields(_self_) != nullptr)) || (_213d8d42c_comptimeStructField(_self_) != nullptr)) || (_213d8d691_comptimeEnumFields(_self_) != nullptr)) || (_213d8d905_comptimeEnumField(_self_) != nullptr)) || (_213d8e87e_comptimeStatics(_self_) != nullptr)) || (_213d8eae3_comptimeStatic(_self_) != nullptr)) || (_213d8db69_comptimeParams(_self_) != nullptr)) || (_213d8ddcd_comptimeParam(_self_) != nullptr)) || (_213d8e142_comptimeRange(_self_) != nullptr)) || (_213d8ed57_comptimeValue(_self_) != nullptr)) || (_213d90330_comptimeFiles(_self_) != nullptr)) || (_213d900bb_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_213c92166_comptimeStructFields> _213d8d1b8_comptimeStructFields(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1b8924bbd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c92166_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1b8928ee1:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8928d48:;
	};
}



inline jule::Ptr<_213c9063c_comptimeStructField> _213d8d42c_comptimeStructField(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1b892919a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c9063c_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1b892984e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89297e9:;
	};
}



inline jule::Ptr<_213c9c6c1_comptimeEnumFields> _213d8d691_comptimeEnumFields(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1b89298d7:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c9c6c1_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1b892a564:;
			{
				return nullptr;;
			}
		}
		_match_end_1b892a50e:;
	};
}



inline jule::Ptr<_213c9b4a0_comptimeEnumField> _213d8d905_comptimeEnumField(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1b892a5ec:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c9b4a0_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1b892b213:;
			{
				return nullptr;;
			}
		}
		_match_end_1b892b1ad:;
	};
}



inline jule::Ptr<_213ca0cbd_comptimeParams> _213d8db69_comptimeParams(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1b892b29b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213ca0cbd_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1b892be28:;
			{
				return nullptr;;
			}
		}
		_match_end_1b892bdc3:;
	};
}



inline jule::Ptr<_213c9dc22_comptimeParam> _213d8ddcd_comptimeParam(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1b892beb1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c9dc22_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1b892cac7:;
			{
				return nullptr;;
			}
		}
		_match_end_1b892ca72:;
	};
}



inline jule::Ptr<_213c8eb47_comptimeRange> _213d8e142_comptimeRange(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1b892cb60:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c8eb47_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1b892d7dc:;
			{
				return nullptr;;
			}
		}
		_match_end_1b892d787:;
	};
}



inline jule::Ptr<_213ca2286_comptimeTypeInfos> _213d8e3a6_comptimeTypeInfos(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1b892d875:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213ca2286_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1b892e4d0:;
			{
				return nullptr;;
			}
		}
		_match_end_1b892e47a:;
	};
}



inline jule::Ptr<_213ca374e_comptimeTypeInfo> _213d8e61a_comptimeTypeInfo(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1b892e568:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213ca374e_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1b893017e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8930129:;
	};
}



inline jule::Ptr<_213c9a05e_comptimeStatics> _213d8e87e_comptimeStatics(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1b8930217:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c9a05e_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1b8930d50:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8930cea:;
	};
}



inline jule::Ptr<_213c93640_comptimeStatic> _213d8eae3_comptimeStatic(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1b8930dd8:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213c93640_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1b8931a21:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89319bb:;
	};
}



inline jule::Ptr<_213ca9249_comptimeValue> _213d8ed57_comptimeValue(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1b8931aa9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213ca9249_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1b8932736:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89326d1:;
	};
}



inline jule::Ptr<_213cacd0d_comptimeFile> _213d900bb_comptimeFile(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1b89327be:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213cacd0d_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1b8933429:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89333c4:;
	};
}



inline jule::Ptr<_213cab845_comptimeFiles> _213d90330_comptimeFiles(_213d88834_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1b89334b2:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_213cab845_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1b89340c8:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8934073:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213d88834_TypeKind _Src) {
	_Stream << _213d88bdb_Str(&_Src);
	return _Stream;
}



inline jule::Bool _213d90a4a_checked(_213d906d7_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _213d906d7_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _213d913b9_Str(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _213d916c7_Equal(jule::Ptr<_213d91089_Prim> _self_, jule::Ptr<_213d88834_TypeKind> _53821_other) {
	jule::Ptr<_213d91089_Prim> _53913_prim = _213d8b051_Prim(_53821_other.ptr());;
	if ((_53913_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _53913_prim.get()._field_Kind);;
}



inline jule::Bool _213d91b4a_IsConstraint(_213d91089_Prim* _self_) {
	return ((((!(_213d9428a_IsStr(_self_))) && (!(_213d944ee_IsAny(_self_)))) && (!(_213d94026_IsBool(_self_)))) && (!(_2121a4745_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _213d91dae_IsI8(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _213d92123_IsI16(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _213d92387_IsI32(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _213d925eb_IsI64(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _213d92860_IsU8(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _213d92ac4_IsU16(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _213d92d38_IsU32(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _213d9309c_IsU64(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _213d93311_IsF32(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _213d93575_IsF64(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _213d937d9_IsInt(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _213d93a4d_IsUint(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _213d93cb2_IsUintptr(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _213d94026_IsBool(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _213d9428a_IsStr(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _213d944ee_IsAny(_213d91089_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _213d91089_Prim _Src) {
	_Stream << _213d913b9_Str(&_Src);
	return _Stream;
}



inline jule::Str _213d94b4d_Str(_213d947da_Sptr* _self_) {
	return (jule::Str("&", 1) + _213d88bdb_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _213d94e5b_Equal(jule::Ptr<_213d947da_Sptr> _self_, jule::Ptr<_213d88834_TypeKind> _61521_other) {
	jule::Ptr<_213d947da_Sptr> _61613_sptr = _213d8b2b5_Sptr(_61521_other.ptr());;
	if ((_61613_sptr == nullptr)) {
		return false;;
	};
	return _213d88ee9_Equal(_self_.get()._field_Elem, _61613_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _213d947da_Sptr _Src) {
	_Stream << _213d94b4d_Str(&_Src);
	return _Stream;
}



inline jule::Str _213d956ba_Str(_213d95247_Slc* _self_) {
	return (jule::Str("[]", 2) + _213d88bdb_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _213d959c8_Equal(jule::Ptr<_213d95247_Slc> _self_, jule::Ptr<_213d88834_TypeKind> _63421_other) {
	jule::Ptr<_213d95247_Slc> _63513_slc = _213d8beca_Slc(_63421_other.ptr());;
	if ((_63513_slc == nullptr)) {
		return false;;
	};
	return _213d88ee9_Equal(_self_.get()._field_Elem, _63513_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _213d95247_Slc _Src) {
	_Stream << _213d956ba_Str(&_Src);
	return _Stream;
}



inline jule::Str _213d961b0_Str(_213d95d4c_Tuple* _self_) {
	jule::Str _65117_s = jule::Str("(", 1);;
	_65117_s+=_213d88bdb_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b8943208:;
		if (it != expr_end) {
			jule::Ptr<_213d88834_TypeKind> *_65316_t = it;
			{
				(_65117_s).append(",", 1);
				_65117_s+=_213d88bdb_Str((*(_65316_t)).ptr());
			}
			_iter_next_1b8943208:;
			++it;
			goto _iter_begin_1b8943208;
		}
		_iter_end_1b8943208:;
	};
	(_65117_s).append(")", 1);
	return _65117_s;;
}



inline jule::Bool _213d964bd_Equal(jule::Ptr<_213d95d4c_Tuple> _self_, jule::Ptr<_213d88834_TypeKind> _66221_other) {
	jule::Ptr<_213d95d4c_Tuple> _66313_tup = _213d8cbe0_Tup(_66221_other.ptr());;
	if ((_66313_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _66313_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I32 _67017_i = 0LL;;
	for (; (_67017_i < _self_.get()._field_Types.len()); (_67017_i)++) {
		{
			if ((!(_213d88ee9_Equal(_self_.get()._field_Types[_67017_i], _66313_tup.get()._field_Types[_67017_i])))) {
				return false;;
			};
		}
	_iter_next_1b89458e2:;
	}
	_iter_end_1b89458e2:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _213d95d4c_Tuple _Src) {
	_Stream << _213d961b0_Str(&_Src);
	return _Stream;
}



inline jule::Str _213d96b61_Str(_213d967ed_Map* _self_) {
	jule::Str _69017_s = jule::Str("map[", 4);;
	_69017_s+=_213d88bdb_Str((*(_self_))._field_Key.ptr());
	(_69017_s).append("]", 1);
	_69017_s+=_213d88bdb_Str((*(_self_))._field_Val.ptr());
	return _69017_s;;
}



inline jule::Bool _213d96e6e_Equal(jule::Ptr<_213d967ed_Map> _self_, jule::Ptr<_213d88834_TypeKind> _69821_other) {
	jule::Ptr<_213d967ed_Map> _69913_m = _213d8c97b_Map(_69821_other.ptr());;
	if ((_69913_m == nullptr)) {
		return false;;
	};
	return (_213d88ee9_Equal(_self_.get()._field_Key, _69913_m.get()._field_Key) && _213d88ee9_Equal(_self_.get()._field_Val, _69913_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _213d967ed_Map _Src) {
	_Stream << _213d96b61_Str(&_Src);
	return _Stream;
}



inline jule::Str _213d97755_Str(_213d973e2_Arr* _self_) {
	jule::Str _71717_s = jule::Str("[", 1);;
	_71717_s+=_2121950d7_Itoa((*(_self_))._field_N);
	(_71717_s).append("]", 1);
	_71717_s+=_213d88bdb_Str((*(_self_))._field_Elem.ptr());
	return _71717_s;;
}



inline jule::Bool _213d97a63_Equal(jule::Ptr<_213d973e2_Arr> _self_, jule::Ptr<_213d88834_TypeKind> _72521_other) {
	jule::Ptr<_213d973e2_Arr> _72613_arr = _213d8bc66_Arr(_72521_other.ptr());;
	if ((_72613_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _72613_arr.get()._field_N) && _213d88ee9_Equal(_self_.get()._field_Elem, _72613_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _213d973e2_Arr _Src) {
	_Stream << _213d97755_Str(&_Src);
	return _Stream;
}



inline jule::Str _213d981b2_Str(_213d97d4e_Ptr* _self_) {
	if (_213d98822_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _213d88bdb_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _213d984c0_Equal(jule::Ptr<_213d97d4e_Ptr> _self_, jule::Ptr<_213d88834_TypeKind> _74921_other) {
	jule::Ptr<_213d97d4e_Ptr> _75013_ptr = _213d8b529_Ptr(_74921_other.ptr());;
	if ((_75013_ptr == nullptr)) {
		return false;;
	};
	return _213d88ee9_Equal(_self_.get()._field_Elem, _75013_ptr.get()._field_Elem);;
}



inline jule::Bool _213d98822_IsUnsafe(_213d97d4e_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _213d97d4e_Ptr _Src) {
	_Stream << _213d981b2_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213d98c95_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _213d9a36d_pushErr(_213d99b75_typeChecker* _self_, jule::Ptr<_2114c1b73_Token> _83526_token, jule::Str _83541_fmt, jule::Slice<jule::Any> _83554_args) {
	_213ce38d2_pushErr((*(_self_))._field_s.ptr(), _83526_token, _83541_fmt, _83554_args);
}



inline void _213d9a549_allowBuiltin(_213d99b75_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _213d9a725_disallowBuiltin(_213d99b75_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1b895213a_pushReference(_213d99b75_typeChecker* _self_, jule::Ptr<_213c64402_StructIns>* _84740_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b86a6c2a_Exist((*(_self_))._field_refers.ptr(), (*(_84740_t)))) {
		return;;
	};
	_213c7d284_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84740_t)), &__jule_any_type9));
}

inline void _1b8954c64_pushReference(_213d99b75_typeChecker* _self_, jule::Ptr<_213c88b63_Trait>* _84740_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b895689d_Exist((*(_self_))._field_refers.ptr(), (*(_84740_t)))) {
		return;;
	};
	_213c7d284_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84740_t)), &__jule_any_type10));
}



inline void _213d9ac20_pushReferenceByKind(_213d99b75_typeChecker* _self_, jule::Ptr<_213d88834_TypeKind>* _85743_k) {
	{
		
		if ((_213d8c4a3_Struct((*(_85743_k)).ptr()) != nullptr)) {
			_case_begin_1b8950d92:;
			{
				jule::Ptr<_213c64402_StructIns> _86021_t = _213d8c4a3_Struct((*(_85743_k)).ptr());;
				_1b895213a_pushReference(_self_, &(_86021_t));
			}
		}
		else if ((_213d8c717_Trait((*(_85743_k)).ptr()) != nullptr)) {
			_case_begin_1b8950e19:;
			{
				jule::Ptr<_213c88b63_Trait> _86321_t = _213d8c717_Trait((*(_85743_k)).ptr());;
				_1b8954c64_pushReference(_self_, &(_86321_t));
			}
		}
		_match_end_1b8950c82:;
	};
}



inline void _213d9b0d8_pushCycleError(_213d99b75_typeChecker* _self_, jule::Any _86829_def1, jule::Any _86840_def2, jule::Str* _86856_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _87013_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _87028_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_87028_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1b89593c8:;
				{
					return (*(_87028_def)).cast_ptr<_213d87adb_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1b895997d:;
				{
					return (*(_87028_def)).cast_ptr<_213c615db_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1b895954e:;
				{
					return jule::Str();;
				}
			}
			_match_end_1b8959472:;
		};
	});;
	jule::Str _88013_def1Ident = _87013_getIdent(&(_86829_def1));;
	jule::Str _88113_def2Ident = _87013_getIdent(&(_86840_def2));;
	jule::Str _88213_refersTo = _2110be71b_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_88013_def1Ident, &__jule_any_type5),jule::Any(_88113_def2Ident, &__jule_any_type5)}));;
	((*(_86856_message))).buffer.insert(0, (((_21103124e_Repeat(jule::Str(" ", 1), 7LL) + _88213_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _213d9b490_checkCrossCycle(_213d99b75_typeChecker* _self_, jule::Any _88630_decl, jule::Str* _88646_message) {
	{
		auto &_match_expr{ _88630_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b895bc8d:;
			{
				jule::Ptr<_213d87adb_TypeAlias> _88917_ta = _88630_decl.cast_ptr<_213d87adb_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_88917_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b895c761:;
					if (it != expr_end) {
						jule::Any *_89020_d = it;
						{
							{
								
								if (((*(_89020_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_1b895d366:;
									{
										_213d9b0d8_pushCycleError(_self_, jule::Any(_88917_ta, &__jule_any_type67), (*(_89020_d)), _88646_message);
										return false;;
									}
								}
								else if ((!(_213d9b490_checkCrossCycle(_self_, (*(_89020_d)), _88646_message)))) {
									_case_begin_1b895d3dd:;
									{
										_213d9b0d8_pushCycleError(_self_, jule::Any(_88917_ta, &__jule_any_type67), (*(_89020_d)), _88646_message);
										return false;;
									}
								}
								_match_end_1b895d256:;
							};
						}
						_iter_next_1b895c761:;
						++it;
						goto _iter_begin_1b895c761;
					}
					_iter_end_1b895c761:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b895bd04:;
			{
				jule::Ptr<_213c615db_Struct> _90117_s = _88630_decl.cast_ptr<_213c615db_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_90117_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b895d0be:;
					if (it != expr_end) {
						jule::Ptr<_213c615db_Struct> *_90220_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_90220_d))))) {
									_case_begin_1b89603ac:;
									{
										_213d9b0d8_pushCycleError(_self_, jule::Any(_90117_s, &__jule_any_type66), jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message);
										return false;;
									}
								}
								else if ((!(_213d9b490_checkCrossCycle(_self_, jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message)))) {
									_case_begin_1b8960434:;
									{
										_213d9b0d8_pushCycleError(_self_, jule::Any(_90117_s, &__jule_any_type66), jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message);
										return false;;
									}
								}
								_match_end_1b896029c:;
							};
						}
						_iter_next_1b895d0be:;
						++it;
						goto _iter_begin_1b895d0be;
					}
					_iter_end_1b895d0be:;
				};
			}
		}
		_match_end_1b895bc38:;
	};
	return true;;
}



inline jule::Bool _213d9b847_checkIllegalCycles(_213d99b75_typeChecker* _self_, jule::Ptr<_213c423e1_IdentTypeDecl>* _92038_ident, jule::Any _92065_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92065_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b89622c1:;
			{
				if (_92065_decl.cast_ptr<_213c615db_Struct>(&__jule_any_type66).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b8962348:;
			{
				if (_92065_decl.cast_ptr<_213d87adb_TypeAlias>(&__jule_any_type67).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b8961d81:;
	};
	if ((_92065_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_213d9a36d_pushErr(_self_, (*(_92038_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _94317_message = jule::Str();;
	if ((!(_213d9b490_checkCrossCycle(_self_, _92065_decl, &(_94317_message))))) {
		jule::Str _94621_errMsg = _94317_message;;
		_94317_message=jule::Str();
		_213d9b0d8_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _92065_decl, &(_94317_message));
		_94621_errMsg+=_94317_message;
		_213d9a36d_pushErr(_self_, (*(_92038_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_94621_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b8965b87:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*(_self_))._field_referencer.get()._field_refs; __jule_push_dest->push(_92065_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b8965c53:;
			{
				{
					auto &_match_expr{ _92065_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1b89664a1:;
						{
							jule::Ptr<_213c615db_Struct> _96225_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_213c615db_Struct>(&__jule_any_type66);;
							{ jule::Slice<jule::Ptr<_213c615db_Struct>> &__jule_push_dest = _96225_s.get()._field_Depends; __jule_push_dest.push(_92065_decl.cast_ptr<_213c615db_Struct>(&__jule_any_type66)); };
						}
					}
					_match_end_1b89663b3:;
				};
			}
		}
		_match_end_1b8965b32:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_213d883c2_Kind> _213d9bbee_fromTypeAlias(_213d99b75_typeChecker* _self_, jule::Ptr<_213c423e1_IdentTypeDecl>* _97033_decl, jule::Ptr<_213d87adb_TypeAlias>* _97060_ta) {
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_97060_ta)).get()._field_Public, (*(_97060_ta)).get()._field_Token)))) {
		_213d9a36d_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_97060_ta)).get()._field_Used=true;
	if (((*(_97033_decl)).get()._field_Generics.len() > 0LL)) {
		_213d9a36d_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b896a52c:;
			if (it != expr_end) {
				jule::Ptr<_213d87adb_TypeAlias> _98720_bg = *it;
				{
					if (((_98720_bg == (*(_97060_ta))) || (((*(_97060_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _213d88ee9_Equal((*(_97060_ta)).get()._field_Kind.get()._field_Kind, _98720_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1b896a52c;
					};
				}
				_iter_next_1b896a52c:;
				++it;
				goto _iter_begin_1b896a52c;
			}
			_iter_end_1b896a52c:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b896c09a:;
			if (it != expr_end) {
				jule::Ptr<_213d87adb_TypeAlias> _99820_bg = *it;
				{
					if ((_99820_bg == (*(_97060_ta)))) {
						_213d9a36d_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_97060_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b896d596:;
						if (it != expr_end) {
							jule::Ptr<_213d87adb_TypeAlias> _100324_dg = *it;
							{
								if ((_99820_bg == _100324_dg)) {
									_213d9a36d_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_1b896d596:;
							++it;
							goto _iter_begin_1b896d596;
						}
						_iter_end_1b896d596:;
					};
				}
				_iter_next_1b896c09a:;
				++it;
				goto _iter_begin_1b896c09a;
			}
			_iter_end_1b896c09a:;
		};
	};
	jule::Bool _101217_ok = _213d9b847_checkIllegalCycles(_self_, _97033_decl, jule::Any((*(_97060_ta)), &__jule_any_type67));;
	if ((!(_101217_ok))) {
		return nullptr;;
	};
	if (((*(_97060_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_101217_ok=_213cee25b_checkTypeAliasDeclKind((*(_self_))._field_s, _97060_ta, (*(_self_))._field_lookup);
		if ((!(_101217_ok))) {
			return nullptr;;
		};
	};
	if (((*(_97060_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> &__jule_push_dest = (*(_self_))._field_ownerAlias.get()._field_Generics; __jule_push_dest.push((*(_97060_ta))); };
	};
	jule::Ptr<_213d88834_TypeKind> _103117_tk = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Generic=(*(_97060_ta)).get()._field_Generic, ._field_Kind=(*(_97060_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_213d9ac20_pushReferenceByKind(_self_, &(_103117_tk));
	if ((*(_97060_ta)).get()._field_Binded) {
		_103117_tk.get()._field_BindIdent=(*(_97060_ta)).get()._field_Ident;
	} else {
		_103117_tk.get()._field_BindIdent=(*(_97060_ta)).get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
	};
	return jule::Trait<_213d883c2_Kind>(_103117_tk, 19);;
}



inline jule::Ptr<_213c8b3e6_Enum> _213d9c0a6_fromEnum(_213d99b75_typeChecker* _self_, jule::Ptr<_213c423e1_IdentTypeDecl>* _104428_decl, jule::Ptr<_213c8b3e6_Enum>* _104455_e) {
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_104455_e)).get()._field_Public, (*(_104455_e)).get()._field_Token)))) {
		_213d9a36d_pushErr(_self_, (*(_104428_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_104428_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_104428_decl)).get()._field_Generics.len() > 0LL)) {
		_213d9a36d_pushErr(_self_, (*(_104428_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_104428_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_104455_e));;
}



inline jule::Ptr<_213c8c9e1_TypeEnum> _213d9c45d_fromTypeEnum(_213d99b75_typeChecker* _self_, jule::Ptr<_213c423e1_IdentTypeDecl>* _105632_decl, jule::Ptr<_213c8c9e1_TypeEnum>* _105659_e) {
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_105659_e)).get()._field_Public, (*(_105659_e)).get()._field_Token)))) {
		_213d9a36d_pushErr(_self_, (*(_105632_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_105632_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_105632_decl)).get()._field_Generics.len() > 0LL)) {
		_213d9a36d_pushErr(_self_, (*(_105632_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_105632_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_105659_e));;
}



inline jule::Ptr<_213c88b63_Trait> _213d9c815_fromTrait(_213d99b75_typeChecker* _self_, jule::Ptr<_213c423e1_IdentTypeDecl>* _106829_decl, jule::Ptr<_213c88b63_Trait>* _106856_t) {
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_106856_t)).get()._field_Public, (*(_106856_t)).get()._field_Token)))) {
		_213d9a36d_pushErr(_self_, (*(_106829_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106829_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_106829_decl)).get()._field_Generics.len() > 0LL)) {
		_213d9a36d_pushErr(_self_, (*(_106829_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_106829_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_1b8954c64_pushReference(_self_, _106856_t);
	return (*(_106856_t));;
}



inline jule::Bool _213d9cbbc_checkStructIns(_213d99b75_typeChecker* _self_, jule::Ptr<_213c64402_StructIns>* _108138_ins, jule::Ptr<_2114c1b73_Token>* _108160_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_108138_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_108138_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_108138_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_213d0a3dd_precheckStructIns((*(_self_))._field_s, _108138_ins, (*(_108160_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_108138_ins)).get()._field_Generics.len() > 0LL)) {
		_213d0ad5b_checkStructInsOperators((*(_self_))._field_s, (*(_108138_ins)));
		_213d0a663_checkStructIns((*(_self_))._field_s, _108138_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _213d9ce64_appendUsedStructReference(_213d99b75_typeChecker* _self_, jule::Ptr<_213c615db_Struct>* _110249_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b897c95c:;
			{
				jule::Ptr<_213c615db_Struct> _110821_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_213c615db_Struct>(&__jule_any_type66);;
				if ((!(_213c63225_IsUses(_110821_refS.ptr(), (*(_110249_s)))))) {
					{ jule::Slice<jule::Ptr<_213c615db_Struct>> &__jule_push_dest = _110821_refS.get()._field_Uses; __jule_push_dest.push((*(_110249_s))); };
				};
			}
		}
		_match_end_1b897c907:;
	};
}



inline jule::Ptr<_213c64402_StructIns> _213d9d32c_buildStructInstance(_213d99b75_typeChecker* _self_, jule::Ptr<_213c423e1_IdentTypeDecl>* _111543_decl, jule::Ptr<_213c615db_Struct>* _111570_s) {
	jule::Ptr<_213d98c95_referencer> _111717_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> _111917_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1b8980531:;
				{
					jule::Ptr<_213cc06a0_scopeChecker> _112625_sc = (*(_self_))._field_lookup.cast_ptr<_213cc06a0_scopeChecker>(0);;
					jule::Ptr<_213cc06a0_scopeChecker> _112725_hard = _213cc373b_getHardRoot(_112625_sc);;
					if (((_112725_hard.get()._field_owner.get()._field_Owner == nullptr) || (_112725_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_111570_s))))) {
						goto _match_end_1b89804cb;
					};
					jule::I32 _113121_n = (_112725_hard.get()._field_owner.get()._field_Generics.len() + _112725_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_112725_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _113121_n);
				}
			}
			_match_end_1b89804cb:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_213da6b60_Lookup> _114117_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_213c64402_StructIns> _114517_ins = _213c61a4d_instance((*(_111570_s)));;
	_114517_ins.get()._field_Generics=jule::Slice<jule::Ptr<_213d870a2_InsGeneric>>::alloc(0LL, (*(_111543_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_111543_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8983bc7:;
		if (it != expr_end) {
			jule::Ptr<_213c41d2a_TypeDecl> _114721_g = *it;
			{
				jule::Ptr<_213d88834_TypeKind> _114821_kind = _213da17b4_build(_self_, &(_114721_g.get()._field_Kind));;
				if ((_114821_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_213d870a2_InsGeneric>> &__jule_push_dest = _114517_ins.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_213d870a2_InsGeneric>(_213d870a2_InsGeneric{._field_Kind=_114821_kind, })); };
			}
			_iter_next_1b8983bc7:;
			++it;
			goto _iter_begin_1b8983bc7;
		}
		_iter_end_1b8983bc7:;
	};
	(*(_self_))._field_lookup=_114117_lookup;
	(*(_self_))._field_bannedGenerics=_111917_bannedGenerics;
	(*(_self_))._field_referencer=_111717_referencer;
	return _114517_ins;;
}



inline jule::Ptr<_213c64402_StructIns> _213d9d6d4_fromStruct(_213d99b75_typeChecker* _self_, jule::Ptr<_213c423e1_IdentTypeDecl>* _116334_decl, jule::Ptr<_213c615db_Struct>* _116361_s) {
	if ((!(_213ce40a8_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_116361_s)).get()._field_Public, (*(_116361_s)).get()._field_Token)))) {
		_213d9a36d_pushErr(_self_, (*(_116334_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_116334_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_116334_decl)).get()._field_Generics.len() > 0LL)) {
			_213d9a36d_pushErr(_self_, (*(_116334_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_213c64402_StructIns>(_213c64402_StructIns{._field_Decl=(*(_116361_s)), });;
	};
	jule::Bool _118117_ok = _213d9b847_checkIllegalCycles(_self_, _116334_decl, jule::Any((*(_116361_s)), &__jule_any_type66));;
	if ((!(_118117_ok))) {
		return nullptr;;
	};
	_213d9ce64_appendUsedStructReference(_self_, _116361_s);
	jule::Ptr<_213c64402_StructIns> _118717_ins = _213d9d32c_buildStructInstance(_self_, _116334_decl, _116361_s);;
	if ((_118717_ins == nullptr)) {
		return nullptr;;
	};
	_118117_ok=_213ce4c79_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I32>(_118717_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I32>(_118717_ins.get()._field_Generics.len()), (*(_116334_decl)).get()._field_Token);
	if ((!(_118117_ok))) {
		return nullptr;;
	};
	jule::Ptr<_213c64402_StructIns> _119717_existInstance = _213c61d28_appendInstance((*(_116361_s)).ptr(), &(_118717_ins));;
	if ((_119717_existInstance != nullptr)) {
		if ((!(_213cec600_checkConstraintsStruct((*(_self_))._field_s, &(_118717_ins), &((*(_116334_decl)).get()._field_Token), _119717_existInstance)))) {
			return nullptr;;
		};
		_1b895213a_pushReference(_self_, &(_119717_existInstance));
		return _119717_existInstance;;
	};
	if ((!(_213d9cbbc_checkStructIns(_self_, &(_118717_ins), &((*(_116334_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_1b895213a_pushReference(_self_, &(_118717_ins));
	return _118717_ins;;
}



inline jule::Trait<_213d883c2_Kind> _213d9d9e2_getDef(_213d99b75_typeChecker* _self_, jule::Ptr<_213c423e1_IdentTypeDecl>* _122130_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b898d4b7:;
		if (it != expr_end) {
			jule::Ptr<_213c4dcc1_GenericDecl> _122216_g = *it;
			{
				if ((_122216_g.get()._field_Ident == (*(_122130_decl)).get()._field_Ident)) {
					return jule::Trait<_213d883c2_Kind>(_213da42cd_buildPrimType(_122216_g.get()._field_Ident), 20);;
				};
			}
			_iter_next_1b898d4b7:;
			++it;
			goto _iter_begin_1b898d4b7;
		}
		_iter_end_1b898d4b7:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b898ddd0:;
		if (it != expr_end) {
			jule::Ptr<_213d87adb_TypeAlias> _122821_g = *it;
			{
				if ((_122821_g.get()._field_Ident == (*(_122130_decl)).get()._field_Ident)) {
					if (((*(_122130_decl)).get()._field_Generics.len() > 0LL)) {
						_213d9a36d_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_122130_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_213c64402_StructIns> _123425_st = _213d8c4a3_Struct(_122821_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_123425_st != nullptr)) {
						jule::Bool _123625_ok = _213d9b847_checkIllegalCycles(_self_, _122130_decl, jule::Any(_123425_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_123625_ok))) {
							return nullptr;;
						};
					};
					return _122821_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1b898ddd0:;
			++it;
			goto _iter_begin_1b898ddd0;
		}
		_iter_end_1b898ddd0:;
	};
	if ((!((*(_122130_decl)).get()._field_Binded))) {
		jule::Ptr<_213c8b3e6_Enum> _124621_e = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da670e_FindEnum((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_124621_e != nullptr)) {
			return jule::Trait<_213d883c2_Kind>(_213d9c0a6_fromEnum(_self_, _122130_decl, &(_124621_e)), 3);;
		};
		jule::Ptr<_213c8c9e1_TypeEnum> _125121_te = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da6a1c_FindTypeEnum((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_125121_te != nullptr)) {
			return jule::Trait<_213d883c2_Kind>(_213d9c45d_fromTypeEnum(_self_, _122130_decl, &(_125121_te)), 4);;
		};
		jule::Ptr<_213c88b63_Trait> _125621_t = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da6401_FindTrait((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_125621_t != nullptr)) {
			return jule::Trait<_213d883c2_Kind>(_213d9c815_fromTrait(_self_, _122130_decl, &(_125621_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_213d9a36d_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213c615db_Struct> _126517_s = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da5c3b_FindStruct((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident, (*(_122130_decl)).get()._field_Binded);;
	if ((_126517_s != nullptr)) {
		return jule::Trait<_213d883c2_Kind>(_213d9d6d4_fromStruct(_self_, _122130_decl, &(_126517_s)), 0);;
	};
	jule::Ptr<_213d87adb_TypeAlias> _127017_ta = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da5884_FindTypeAlias((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident, (*(_122130_decl)).get()._field_Binded);;
	if (((_127017_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_127017_ta=_213e55a22_findBuiltinTypeAlias((*(_122130_decl)).get()._field_Ident);
	};
	if ((_127017_ta != nullptr)) {
		return _213d9bbee_fromTypeAlias(_self_, _122130_decl, &(_127017_ta));;
	};
	_213d9a36d_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_122130_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_213d883c2_Kind> _213d9dd00_buildIdent(_213d99b75_typeChecker* _self_, jule::Ptr<_213c423e1_IdentTypeDecl> _128233_decl) {
	return _213d9d9e2_getDef(_self_, &(_128233_decl));;
}



inline jule::Trait<_213d883c2_Kind> _213d9e10d_buildSubIdent(_213d99b75_typeChecker* _self_, jule::Ptr<_213c426cc_SubIdentTypeDecl> _128636_decl) {
	jule::Trait<_213d883c2_Kind> _128717_ident = _213d9dd00_buildIdent(_self_, _128636_decl.get()._field_Idents[0LL]);;
	if ((_128717_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _128717_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1b8999b99:;
			{
				goto _match_end_1b8999957;
			}
		}
		else {
			_case_begin_1b899965a:;
			{
				_213d9a36d_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8999957:;
	};
	jule::Ptr<_213c8c9e1_TypeEnum> _129817_t = _128717_ident.cast_ptr<_213c8c9e1_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_213c423e1_IdentTypeDecl>> _129917_idents = _128636_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_129917_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b899b01e:;
		if (it != expr_end) {
			jule::I32 _130013_i = it - expr->begin();
			jule::Ptr<_213c423e1_IdentTypeDecl> _130016_id = *it;
			{
				jule::Ptr<_213c8c45d_TypeEnumItem> _130121_item = _213c8d52a_FindItem(_129817_t.ptr(), _130016_id.get()._field_Ident);;
				if ((_130121_item == nullptr)) {
					_213d9a36d_pushErr(_self_, _130016_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_129817_t.get()._field_Ident, &__jule_any_type5),jule::Any(_130016_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_129917_idents.len() - _130013_i) == 1LL)) {
					_213d9ac20_pushReferenceByKind(_self_, &(_130121_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_213d883c2_Kind>(_130121_item.get()._field_Kind.get()._field_Kind, 19);;
				};
				_129817_t=_213d8ba02_TypeEnum(_130121_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_129817_t == nullptr)) {
					_213d9a36d_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1b899b01e:;
			++it;
			_130013_i++;
			goto _iter_begin_1b899b01e;
		}
		_iter_end_1b899b01e:;
	};
	return nullptr;;
}



inline jule::Ptr<_213d947da_Sptr> _213d9e41b_buildSptrFromType(_213d99b75_typeChecker* _self_, jule::Ptr<_213d88834_TypeKind>* _132041_elem) {
	{
		
		if (((*(_132041_elem)) == nullptr)) {
			_case_begin_1b899e8c4:;
			{
				return nullptr;;
			}
		}
		else if ((_213d8c4a3_Struct((*(_132041_elem)).ptr()) != nullptr)) {
			_case_begin_1b899e94b:;
			{
				jule::Ptr<_213c64402_StructIns> _132617_s = _213d8c4a3_Struct((*(_132041_elem)).ptr());;
				if (((_132617_s.get()._field_Decl != nullptr) && _132617_s.get()._field_Decl.get()._field_Binded)) {
					_213d9a36d_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_213d8bc66_Arr((*(_132041_elem)).ptr()) != nullptr) && _213d8bc66_Arr((*(_132041_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1b899e9c3:;
			{
				_213d9a36d_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b899e0dd:;
	};
	return jule::new_ptr<_213d947da_Sptr>(_213d947da_Sptr{._field_Elem=(*(_132041_elem))});;
}



inline jule::Ptr<_213d947da_Sptr> _213d9e729_buildSptr(_213d99b75_typeChecker* _self_, jule::Ptr<_213c42d3c_SptrTypeDecl> _134032_decl) {
	jule::Bool _134113_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_134113_cycleRisk;
	});;
	jule::Ptr<_213d88834_TypeKind> _134517_elem = _213da1ac2_checkDecl(_self_, &(_134032_decl.get()._field_Elem));;
	return _213d9e41b_buildSptrFromType(_self_, &(_134517_elem));;
}



inline jule::Ptr<_213d97d4e_Ptr> _213d9ea37_buildPtrFromType(_213d99b75_typeChecker* _self_, jule::Ptr<_213d88834_TypeKind>* _134940_elem) {
	{
		
		if (((*(_134940_elem)) == nullptr)) {
			_case_begin_1b89a41d1:;
			{
				return nullptr;;
			}
		}
		else if (((_213d8bc66_Arr((*(_134940_elem)).ptr()) != nullptr) && _213d8bc66_Arr((*(_134940_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1b89a4258:;
			{
				_213d9a36d_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_213d97d4e_Ptr>();;
			}
		}
		_match_end_1b89a40c1:;
	};
	return jule::new_ptr<_213d97d4e_Ptr>(_213d97d4e_Ptr{._field_Elem=(*(_134940_elem))});;
}



inline jule::Ptr<_213d97d4e_Ptr> _213d9ed45_buildPtr(_213d99b75_typeChecker* _self_, jule::Ptr<_213c43810_PtrTypeDecl> _136431_decl) {
	jule::Bool _136513_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_136513_cycleRisk;
	});;
	jule::Ptr<_213d88834_TypeKind> _136917_elem = nullptr;;
	if ((!(_213c43b62_IsUnsafe(_136431_decl.ptr())))) {
		_136917_elem=_213da1ac2_checkDecl(_self_, &(_136431_decl.get()._field_Elem));
		return _213d9ea37_buildPtrFromType(_self_, &(_136917_elem));;
	};
	return jule::new_ptr<_213d97d4e_Ptr>(_213d97d4e_Ptr{._field_Elem=_136917_elem});;
}



inline jule::Ptr<_213d95247_Slc> _213da0153_buildSlc(_213d99b75_typeChecker* _self_, jule::Ptr<_213c43238_SlcTypeDecl> _138131_decl) {
	jule::Bool _138213_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_138213_cycleRisk;
	});;
	jule::Ptr<_213d88834_TypeKind> _138617_elem = _213da1ac2_checkDecl(_self_, &(_138131_decl.get()._field_Elem));;
	{
		
		if ((_138617_elem == nullptr)) {
			_case_begin_1b89a8d2e:;
			{
				return nullptr;;
			}
		}
		else if (((_213d8bc66_Arr(_138617_elem.ptr()) != nullptr) && _213d8bc66_Arr(_138617_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b89a8da6:;
			{
				_213d9a36d_pushErr(_self_, _138131_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b89a8cc9:;
	};
	return jule::new_ptr<_213d95247_Slc>(_213d95247_Slc{._field_Elem=_138617_elem});;
}



inline jule::Ptr<_213d973e2_Arr> _213da0461_buildArr(_213d99b75_typeChecker* _self_, jule::Ptr<_213c43ed6_ArrTypeDecl> _140231_decl) {
	jule::I32 _140317_n = 0LL;;
	if ((!(_213c44338_AutoSized(_140231_decl.ptr())))) {
		jule::Ptr<_213d5ae22_Data> _140621_size = _213d7945c_evalExpr(_213cea675_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _140231_decl.get()._field_Size);;
		if ((_140621_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_213d5b791_IsConst(_140621_size.ptr())))) {
			_213d9a36d_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_213d8b051_Prim(_140621_size.get()._field_Kind.ptr()) == nullptr) || (!(_2121a417e_IsInt(_213d8b051_Prim(_140621_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_213d9a36d_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_140317_n=static_cast<jule::I32>(static_cast<jule::I32>(_2121a725e_AsI64(_140621_size.get()._field_Constant.ptr())));
		if ((_140317_n < 0LL)) {
			_213d9a36d_pushErr(_self_, _140231_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _142421_max = _21219d475_MaxI(jule::Str("int", 3));;
			if (((_21219636e_BitSize != 64LL) && (static_cast<jule::I64>(_140317_n) > _142421_max))) {
				_213d9a36d_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_213d85b0b_constoa(&(_140621_size.get()._field_Constant)), &__jule_any_type5),jule::Any(_212194d40_FmtInt(_142421_max, 10LL), &__jule_any_type5)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_213d88834_TypeKind> _143317_elem = _213da1ac2_checkDecl(_self_, &(_140231_decl.get()._field_Elem));;
	{
		
		if ((_143317_elem == nullptr)) {
			_case_begin_1b89b19a2:;
			{
				return nullptr;;
			}
		}
		else if (((_213d8bc66_Arr(_143317_elem.ptr()) != nullptr) && _213d8bc66_Arr(_143317_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b89b1a29:;
			{
				_213d9a36d_pushErr(_self_, _140231_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b89b194c:;
	};
	return jule::new_ptr<_213d973e2_Arr>(_213d973e2_Arr{._field_Auto=_213c44338_AutoSized(_140231_decl.ptr()), ._field_N=_140317_n, ._field_Elem=_143317_elem});;
}



inline jule::Ptr<_213d967ed_Map> _213da076e_buildMap(_213d99b75_typeChecker* _self_, jule::Ptr<_213c446e0_MapTypeDecl> _145131_decl) {
	jule::Bool _145213_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_145213_cycleRisk;
	});;
	jule::Ptr<_213d88834_TypeKind> _145617_key = _213da1ac2_checkDecl(_self_, &(_145131_decl.get()._field_Key));;
	if ((_145617_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_213d88834_TypeKind> _146117_val = _213da1ac2_checkDecl(_self_, &(_145131_decl.get()._field_Val));;
	if ((_146117_val == nullptr)) {
		return nullptr;;
	};
	if ((_213d8b78d_Enum(_146117_val.ptr()) != nullptr)) {
		_213d9a36d_pushErr(_self_, _145131_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_213d967ed_Map>(_213d967ed_Map{._field_Key=_145617_key, ._field_Val=_146117_val});;
}



inline jule::Ptr<_213d95d4c_Tuple> _213da0a7c_buildTuple(_213d99b75_typeChecker* _self_, jule::Ptr<_213c43524_TupleTypeDecl> _147533_decl) {
	jule::Slice<jule::Ptr<_213d88834_TypeKind>> _147617_types = jule::Slice<jule::Ptr<_213d88834_TypeKind>>::alloc(0LL, _147533_decl.get()._field_Types.len());;
	{
		auto expr = &(_147533_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b89b70b2:;
		if (it != expr_end) {
			jule::Ptr<_213c41d2a_TypeDecl> _147721_t = *it;
			{
				jule::Ptr<_213d88834_TypeKind> _147821_kind = _213da1ac2_checkDecl(_self_, &(_147721_t));;
				if ((_147821_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_213d88834_TypeKind>> &__jule_push_dest = _147617_types; __jule_push_dest.push(_147821_kind); };
			}
			_iter_next_1b89b70b2:;
			++it;
			goto _iter_begin_1b89b70b2;
		}
		_iter_end_1b89b70b2:;
	};
	return jule::new_ptr<_213d95d4c_Tuple>(_213d95d4c_Tuple{._field_Types=_147617_types});;
}



inline jule::Bool _213da0d8a_checkFuncTypes(_213d99b75_typeChecker* _self_, jule::Ptr<_213c796ae_FnIns>* _148838_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_148838_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b89b8b30:;
		if (it != expr_end) {
			jule::Ptr<_213c787e0_ParamIns> _148921_p = *it;
			{
				_148921_p.get()._field_Kind=_213da17b4_build(_self_, &(_148921_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_148921_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_213cecc2c_checkFnParamKind((*(_self_))._field_s, &(_148921_p));
			}
			_iter_next_1b89b8b30:;
			++it;
			goto _iter_begin_1b89b8b30;
		}
		_iter_end_1b89b8b30:;
	};
	if ((!(_213c76e70_IsVoid((*(_148838_f)).get()._field_Decl.ptr())))) {
		(*(_148838_f)).get()._field_Result=_213da17b4_build(_self_, &((*(_148838_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_148838_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_213c796ae_FnIns> _213da1198_buildFunc(_213d99b75_typeChecker* _self_, jule::Ptr<_213c53457_FnDecl> _150632_decl) {
	jule::Bool _150713_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_150713_cycleRisk;
	});;
	if ((_150632_decl.get()._field_Generics.len() > 0LL)) {
		_213d9a36d_pushErr(_self_, _150632_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213c76a0d_Fn> _151617_f = _213c807e7_buildFunc(_150632_decl);;
	jule::I32 _151813_n = (*(_self_))._field_s.get()._field_errors.len();;
	_213d065a4_checkAnonFuncDecl((*(_self_))._field_s, &(_151617_f));
	if ((_151813_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_213c796ae_FnIns> _152417_ins = _213c77de9_instanceForce(_151617_f);;
	_152417_ins.get()._field_Anon=true;
	jule::Bool _152713_ok = _213da0d8a_checkFuncTypes(_self_, &(_152417_ins));;
	if ((!(_152713_ok))) {
		return nullptr;;
	};
	return _152417_ins;;
}



inline jule::Trait<_213d883c2_Kind> _213da14a6_buildByNamespace(_213d99b75_typeChecker* _self_, jule::Ptr<_213c42a51_NamespaceTypeDecl> _153539_decl) {
	jule::Str _153613_path = _213da3e26_buildLinkPathByTokens(&(_153539_decl.get()._field_Idents));;
	jule::Ptr<_213cd7c7d_ImportInfo> _153717_imp = _213da6b60_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._213da5125_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)>([=](jule::Ptr<_213cd7c7d_ImportInfo> _153752_imp) mutable -> jule::Bool {
		if (((_153539_decl.get()._field_Idents.len() == 1LL) && (_153752_imp.get()._field_Alias == _153613_path))) {
			return true;;
		};
		return ((_153752_imp.get()._field_LinkPath == _153613_path) && _213cda5bb_isAccessibleViaSelection(_153752_imp.ptr()));;
	}));;
	if (((_153717_imp == nullptr) || (!(_213cda027_isLookupable(_153717_imp.ptr(), jule::Str("self", 4)))))) {
		_213d9a36d_pushErr(_self_, _153539_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_153613_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_213d9a725_disallowBuiltin(_self_);
	jule::Trait<_213da6b60_Lookup> _155017_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_213da6b60_Lookup>(_153717_imp, 1);
	jule::Ptr<_213d88834_TypeKind> _155217_kind = _213da1ac2_checkDecl(_self_, &(_153539_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_155017_lookup;
	_213d9a549_allowBuiltin(_self_);
	return jule::Trait<_213d883c2_Kind>(_155217_kind, 19);;
}



inline jule::Ptr<_213d88834_TypeKind> _213da17b4_build(_213d99b75_typeChecker* _self_, jule::Any* _155829_declKind) {
	jule::Trait<_213d883c2_Kind> _155917_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155829_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b89c5796:;
			{
				jule::Trait<_213d883c2_Kind> _156221_t = _213d9dd00_buildIdent(_self_, (*(_155829_declKind)).cast_ptr<_213c423e1_IdentTypeDecl>(&__jule_any_type20));;
				if ((_156221_t != nullptr)) {
					_155917_kind=_156221_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b89c6423:;
			{
				jule::Trait<_213d883c2_Kind> _156721_t = _213d9e10d_buildSubIdent(_self_, (*(_155829_declKind)).cast_ptr<_213c426cc_SubIdentTypeDecl>(&__jule_any_type92));;
				if ((_156721_t != nullptr)) {
					_155917_kind=_156721_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b89c6489:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_213d947da_Sptr> _157321_t = _213d9e729_buildSptr(_self_, (*(_155829_declKind)).cast_ptr<_213c42d3c_SptrTypeDecl>(&__jule_any_type78));;
				if ((_157321_t != nullptr)) {
					_155917_kind=jule::Trait<_213d883c2_Kind>(_157321_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b89c5a71:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_213d97d4e_Ptr> _157921_t = _213d9ed45_buildPtr(_self_, (*(_155829_declKind)).cast_ptr<_213c43810_PtrTypeDecl>(&__jule_any_type77));;
				if ((_157921_t != nullptr)) {
					_155917_kind=jule::Trait<_213d883c2_Kind>(_157921_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b89c5ad7:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_213d95247_Slc> _158521_t = _213da0153_buildSlc(_self_, (*(_155829_declKind)).cast_ptr<_213c43238_SlcTypeDecl>(&__jule_any_type76));;
				if ((_158521_t != nullptr)) {
					_155917_kind=jule::Trait<_213d883c2_Kind>(_158521_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b89c5b4d:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_213d973e2_Arr> _159121_t = _213da0461_buildArr(_self_, (*(_155829_declKind)).cast_ptr<_213c43ed6_ArrTypeDecl>(&__jule_any_type75));;
				if ((_159121_t != nullptr)) {
					_155917_kind=jule::Trait<_213d883c2_Kind>(_159121_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b89c5bb4:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_213d967ed_Map> _159721_t = _213da076e_buildMap(_self_, (*(_155829_declKind)).cast_ptr<_213c446e0_MapTypeDecl>(&__jule_any_type79));;
				if ((_159721_t != nullptr)) {
					_155917_kind=jule::Trait<_213d883c2_Kind>(_159721_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b89c6500:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_213d95d4c_Tuple> _160321_t = _213da0a7c_buildTuple(_self_, (*(_155829_declKind)).cast_ptr<_213c43524_TupleTypeDecl>(&__jule_any_type80));;
				if ((_160321_t != nullptr)) {
					_155917_kind=jule::Trait<_213d883c2_Kind>(_160321_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b89c6566:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_213c796ae_FnIns> _160921_t = _213da1198_buildFunc(_self_, (*(_155829_declKind)).cast_ptr<_213c53457_FnDecl>(&__jule_any_type14));;
				if ((_160921_t != nullptr)) {
					_155917_kind=jule::Trait<_213d883c2_Kind>(_160921_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b89c65cc:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_213d883c2_Kind> _161521_t = _213da14a6_buildByNamespace(_self_, (*(_155829_declKind)).cast_ptr<_213c42a51_NamespaceTypeDecl>(&__jule_any_type96));;
				if ((_161521_t != nullptr)) {
					_155917_kind=_161521_t;
				};
			}
		}
		else {
			_case_begin_1b89c591c:;
			{
				_213d9a36d_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b89c582e:;
	};
	if ((_155917_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _155917_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1b89d4145:;
			{
				return _155917_kind.cast_ptr<_213d88834_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1b89d1b6a:;
			{
				jule::Ptr<_213d88834_TypeKind> _163021_tk = jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=_155917_kind});;
				{
					auto &_match_expr{ _155917_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1b89d2ae4:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_213d88834_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_163021_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1b89d2b5a:;
						{
							jule::Ptr<_213c64402_StructIns> _163721_s = _155917_kind.cast_ptr<_213c64402_StructIns>(0);;
							if (((_163721_s.get()._field_Decl != nullptr) && _163721_s.get()._field_Decl.get()._field_Binded)) {
								_163021_tk.get()._field_BindIdent=_163721_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1b89d2a8e:;
				};
				return _163021_tk;;
			}
		}
		_match_end_1b89c6896:;
	};
}



inline jule::Ptr<_213d88834_TypeKind> _213da1ac2_checkDecl(_213d99b75_typeChecker* _self_, jule::Ptr<_213c41d2a_TypeDecl>* _164633_decl) {
	jule::Ptr<_2114c1b73_Token> _164817_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_164633_decl)).get()._field_Token;
	jule::Ptr<_213d88834_TypeKind> _165117_kind = _213da17b4_build(_self_, &((*(_164633_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_164817_errorToken;
	return _165117_kind;;
}







std::ostream &operator<<(std::ostream &_Stream, _213d99b75_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__213da24a7_prim(jule::Str* _167321_ident, jule::Ptr<_213d91089_Prim> _167333_t) {
	return (_167333_t.get()._field_Kind == (*(_167321_ident)));;
}



inline jule::Bool static__213da27e8_exist(jule::Str* _167722_ident, jule::Ptr<_213d88834_TypeKind>* _167739_k) {
	{
		
		if ((_213d8b051_Prim((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b89d8787:;
			{
				return static__213da24a7_prim(_167722_ident, _213d8b051_Prim((*(_167739_k)).ptr()));;
			}
		}
		else if ((_213d8b2b5_Sptr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b89d87ed:;
			{
				jule::Ptr<_213d947da_Sptr> _168221_sptr = _213d8b2b5_Sptr((*(_167739_k)).ptr());;
				return static__213da27e8_exist(_167722_ident, &(_168221_sptr.get()._field_Elem));;
			}
		}
		else if ((_213d8b529_Ptr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b89d8864:;
			{
				jule::Ptr<_213d97d4e_Ptr> _168521_ptr = _213d8b529_Ptr((*(_167739_k)).ptr());;
				return static__213da27e8_exist(_167722_ident, &(_168521_ptr.get()._field_Elem));;
			}
		}
		else if ((_213d8beca_Slc((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b89d8aa6:;
			{
				jule::Ptr<_213d95247_Slc> _168821_slc = _213d8beca_Slc((*(_167739_k)).ptr());;
				return static__213da27e8_exist(_167722_ident, &(_168821_slc.get()._field_Elem));;
			}
		}
		else if ((_213d8bc66_Arr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b89d8b1c:;
			{
				jule::Ptr<_213d973e2_Arr> _169121_arr = _213d8bc66_Arr((*(_167739_k)).ptr());;
				return static__213da27e8_exist(_167722_ident, &(_169121_arr.get()._field_Elem));;
			}
		}
		else if ((_213d8c97b_Map((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b89d8b94:;
			{
				jule::Ptr<_213d967ed_Map> _169421_m = _213d8c97b_Map((*(_167739_k)).ptr());;
				return (static__213da27e8_exist(_167722_ident, &(_169421_m.get()._field_Key)) || static__213da27e8_exist(_167722_ident, &(_169421_m.get()._field_Val)));;
			}
		}
		else if ((_213d8c4a3_Struct((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b89d8c1b:;
			{
				jule::Ptr<_213c64402_StructIns> _169821_s = _213d8c4a3_Struct((*(_167739_k)).ptr());;
				{
					auto expr = &(_169821_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b89de716:;
					if (it != expr_end) {
						jule::Ptr<_213d870a2_InsGeneric> _169925_g = *it;
						{
							if (static__213da27e8_exist(_167722_ident, &(_169925_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b89de716:;
						++it;
						goto _iter_begin_1b89de716;
					}
					_iter_end_1b89de716:;
				};
				return false;;
			}
		}
		else if ((_213d8c23e_Fn((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b89d8da3:;
			{
				jule::Ptr<_213c796ae_FnIns> _170621_f = _213d8c23e_Fn((*(_167739_k)).ptr());;
				{
					auto expr = &(_170621_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b89e0e98:;
					if (it != expr_end) {
						jule::Ptr<_213c787e0_ParamIns> _170725_p = *it;
						{
							if (_213c757a9_IsSelf(_170725_p.get()._field_Decl.ptr())) {
								goto _iter_next_1b89e0e98;
							};
							if (static__213da27e8_exist(_167722_ident, &(_170725_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b89e0e98:;
						++it;
						goto _iter_begin_1b89e0e98;
					}
					_iter_end_1b89e0e98:;
				};
				if ((_170621_f.get()._field_Result != nullptr)) {
					return static__213da27e8_exist(_167722_ident, &(_170621_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_213d8cbe0_Tup((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b89d8e19:;
			{
				jule::Ptr<_213d95d4c_Tuple> _172021_tup = _213d8cbe0_Tup((*(_167739_k)).ptr());;
				{
					auto expr = &(_172021_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b89e3033:;
					if (it != expr_end) {
						jule::Ptr<_213d88834_TypeKind> _172125_t = *it;
						{
							if (static__213da27e8_exist(_167722_ident, &(_172125_t))) {
								return true;;
							};
						}
						_iter_next_1b89e3033:;
						++it;
						goto _iter_begin_1b89e3033;
					}
					_iter_end_1b89e3033:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1b89d8666:;
			{
				return false;;
			}
		}
		_match_end_1b89d859a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213da2067_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e7b5c569_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e7ba19cb_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1e7ba2955_stop(_1e7ba2306_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1e7ba2bb9_stopped(_1e7ba2306_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1e7ba2e2d_finished(_1e7ba2306_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1e7ba3192_isLastSt(_1e7ba2306_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1e7ba34b1_pushErr(_1e7ba2306_scopeParser* _self_, jule::Ptr<_2114c1b73_Token> _18926_token, jule::Str _18941_fmt) {
	_1e7bbe411_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1e7ba37d0_pushSuggestion(_1e7ba2306_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1e7bbe730_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1e7ba3a55_insertAsNext(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1e7ba19cb_stmt>(_1e7ba19cb_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1e7ba19cb_stmt> _1e7ba3cb9_next(_1e7ba2306_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_213c51961_ScopeTree> _1e7ba4171_buildScope(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _20834_tokens, jule::Ptr<_2114c1b73_Token> _20856_end) {
	jule::Ptr<_213c51961_ScopeTree> _20917_s = _1e7ba08cb_newScope();;
	_20917_s.get()._field_Parent=(*(_self_))._field_s;
	_20917_s.get()._field_End=_20856_end;
	_1e7ba2306_scopeParser _21217_ssp = _1e7ba2306_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1e7bad213_build(&_21217_ssp, _20834_tokens, &(_20917_s));
	return _20917_s;;
}



inline jule::Ptr<_213c54436_VarDecl> _1e7ba447e_buildVarSt(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _21934_tokens) {
	jule::Ptr<_213c54436_VarDecl> _22017_v = _1e7bc1e4c_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	_22017_v.get()._field_Scope=(*(_self_))._field_s;
	return _22017_v;;
}



inline jule::Ptr<_213c547dd_RetSt> _1e7ba478c_buildRetSt(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _22533_tokens) {
	jule::Ptr<_213c547dd_RetSt> _22617_st = jule::new_ptr<_213c547dd_RetSt>(_213c547dd_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		_22533_tokens=_22533_tokens.slice(1LL);
		_22617_st.get()._field_Expr=_1e7bbea3d_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22617_st;;
}



inline jule::Ptr<_213c54e4d_Iter> _1e7ba4a9a_buildWhileNextIter(_1e7ba2306_scopeParser* _self_, jule::Ptr<_1e7ba19cb_stmt>* _23642_s) {
	jule::Ptr<_213c54e4d_Iter> _23717_it = jule::new_ptr<_213c54e4d_Iter>(_213c54e4d_Iter{._field_Token=(*(_23642_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _24017_tokens = (*(_23642_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_213c55723_WhileKind> _24117_kind = jule::new_ptr<_213c55723_WhileKind>();;
	if ((_24017_tokens.len() > 0LL)) {
		_24117_kind.get()._field_Expr=_1e7bbea3d_buildExpr((*(_self_))._field_p, &(_24017_tokens));
	};
	if (_1e7ba3192_isLastSt(_self_)) {
		_1e7ba34b1_pushErr(_self_, _23717_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24017_tokens=_1e7ba3cb9_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _25317_stTokens = _1e7bb8eaa_getBlockExpr(&(_24017_tokens));;
	if ((_25317_stTokens.len() > 0LL)) {
		jule::Ptr<_1e7ba19cb_stmt> _25521_stmt = jule::new_ptr<_1e7ba19cb_stmt>(_1e7ba19cb_stmt{._field_tokens=_25317_stTokens, ._field_terminated=(*(_23642_s)).get()._field_terminated});;
		_24117_kind.get()._field_NextToken=_25317_stTokens[0LL];
		_24117_kind.get()._field_Next=_1e7bacde4_buildSt(_self_, &(_25521_stmt));
	};
	jule::I32 _26317_i = _25317_stTokens.len();;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _26417_blockTokens = _1e7bbc079_range(&(_26317_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_24017_tokens));;
	if ((_26417_blockTokens == nullptr)) {
		_1e7ba2955_stop(_self_);
		_1e7ba34b1_pushErr(_self_, _23717_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1e7ba37d0_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26317_i < _24017_tokens.len())) {
		_1e7ba34b1_pushErr(_self_, _24017_tokens[_26317_i], jule::Str("invalid syntax", 14));
	};
	_23717_it.get()._field_Scope=_1e7ba4171_buildScope(_self_, &(_26417_blockTokens), _24017_tokens[(_26317_i - 1LL)]);
	_23717_it.get()._field_Kind=jule::Any(_24117_kind, &__jule_any_type38);
	return _23717_it;;
}



inline jule::Ptr<_213c55723_WhileKind> _1e7ba4da8_buildWhileIterKind(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _28142_tokens) {
	return jule::new_ptr<_213c55723_WhileKind>(_213c55723_WhileKind{._field_Expr=_1e7bbea3d_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _1e7ba51b6_getRangeKindKeysTokens(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _28818_vars;;
	jule::Slice<_2110be2cb_Log> _28824_errs;;
	({
		__jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1e7bbc70b_parts(_28746_toks, static_cast<jule::U32>(5LLU), true);
		_28818_vars = __jule_assign_result.__jule_result_arg0;
		_28824_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_28824_errs);;
	return _28818_vars;;
}



inline jule::Ptr<_213c54436_VarDecl> _1e7ba54c4_buildRangeKindKey(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_213c54436_VarDecl> _29717_key = jule::new_ptr<_213c54436_VarDecl>(_213c54436_VarDecl{._field_Token=(*(_29341_tokens))[0LL], });;
	if ((_29717_key.get()._field_Token.get()._field_Id == static_cast<jule::U32>(32LLU))) {
		_29717_key.get()._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1e7ba34b1_pushErr(_self_, _29717_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29717_key.get()._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1e7ba34b1_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29717_key.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1e7ba34b1_pushErr(_self_, _29717_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1e7ba37d0_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29717_key.get()._field_Ident=_29717_key.get()._field_Token.get()._field_Kind;
	return _29717_key;;
}



inline jule::Slice<jule::Ptr<_213c54436_VarDecl>> _1e7ba57d2_buildRangeKindKeys(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_213c54436_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8b88184:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_213c54436_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1e7ba54c4_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1b8b88184:;
			++it;
			goto _iter_begin_1b8b88184;
		}
		_iter_end_1b8b88184:;
	};
	return _31917_keys;;
}



inline void _1e7ba5b23_setupRangeKindKeysPlain(_1e7ba2306_scopeParser* _self_, jule::Ptr<_213c560b4_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _32717_keyTokens = _1e7ba51b6_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32717_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32717_keyTokens.len() > 2LL)) {
		_1e7ba34b1_pushErr(_self_, (*(_32647_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_213c54436_VarDecl>> _33417_keys = _1e7ba57d2_buildRangeKindKeys(_self_, &(_32717_keyTokens));;
	(*(_32647_rng)).get()._field_KeyA=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		(*(_32647_rng)).get()._field_KeyB=_33417_keys[1LL];
	};
}



inline void _1e7ba5e75_setupRangeKindKeysExplicit(_1e7ba2306_scopeParser* _self_, jule::Ptr<_213c560b4_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _34172_tokens) {
	jule::I32 _34217_i = 0LL;;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _34317_rang = _1e7bbc079_range(&(_34217_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _34172_tokens);;
	if ((_34217_i < (*(_34172_tokens)).len())) {
		_1e7ba34b1_pushErr(_self_, (*(_34150_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1e7ba5b23_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34317_rang));
}



inline void _1e7ba62a5_setupRangeKindKeys(_1e7ba2306_scopeParser* _self_, jule::Ptr<_213c560b4_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _35064_tokens) {
	if (((*(_35064_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(74LLU))) {
		_1e7ba5e75_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1e7ba5b23_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_213c560b4_RangeKind> _1e7ba6706_buildRangeIterKind(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _35914_exprTokens, jule::Ptr<_2114c1b73_Token>* _35941_inToken) {
	jule::Ptr<_213c560b4_RangeKind> _36017_rng = jule::new_ptr<_213c560b4_RangeKind>(_213c560b4_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1e7ba34b1_pushErr(_self_, _36017_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36017_rng;;
	};
	_36017_rng.get()._field_Expr=_1e7bbea3d_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1e7ba62a5_setupRangeKindKeys(_self_, &(_36017_rng), _35842_var_tokens);
	};
	return _36017_rng;;
}



inline jule::Any _1e7ba6aad_buildCommonIterKind(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _37443_tokens, jule::Ptr<_2114c1b73_Token>* _37462_err_tok) {
	jule::I32 _37517_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8b92237:;
		if (it != expr_end) {
			jule::I32 _37614_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ _37621_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8b92dc5:;
						{
							(_37517_braceN)++;
							goto _iter_next_1b8b92237;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8b92e4c:;
						{
							(_37517_braceN)--;
						}
					}
					_match_end_1b8b92ba5:;
				};
				if ((_37517_braceN != 0LL)) {
					goto _iter_next_1b8b92237;
				};
				{
					auto &_match_expr{ _37621_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_1b8b92aea:;
						{
							jule::Slice<jule::Ptr<_2114c1b73_Token>> _39325_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_2114c1b73_Token>> _39425_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1e7ba6706_buildRangeIterKind(_self_, &(_39325_declTokens), &(_39425_exprTokens), &(_37621_tok)), &__jule_any_type40);;
						}
					}
					_match_end_1b8b93d71:;
				};
			}
			_iter_next_1b8b92237:;
			++it;
			_37614_i++;
			goto _iter_begin_1b8b92237;
		}
		_iter_end_1b8b92237:;
	};
	return jule::Any(_1e7ba4da8_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_213c54e4d_Iter> _1e7ba6dbb_buildCommonIter(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _40138_tokens) {
	jule::Ptr<_213c54e4d_Iter> _40217_it = jule::new_ptr<_213c54e4d_Iter>(_213c54e4d_Iter{._field_Token=_40138_tokens[0LL], });;
	_40138_tokens=_40138_tokens.slice(1LL);
	if ((_40138_tokens.len() == 0LL)) {
		_1e7ba2955_stop(_self_);
		_1e7ba34b1_pushErr(_self_, _40217_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1e7ba37d0_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _41217_exprTokens = _1e7bb8eaa_getBlockExpr(&(_40138_tokens));;
	if ((_41217_exprTokens.len() > 0LL)) {
		_40217_it.get()._field_Kind=_1e7ba6aad_buildCommonIterKind(_self_, &(_41217_exprTokens), &(_40217_it.get()._field_Token));
	};
	jule::I32 _41617_i = _41217_exprTokens.len();;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _41717_scopeTokens = _1e7bbc079_range(&(_41617_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_40138_tokens));;
	if ((_41717_scopeTokens == nullptr)) {
		_1e7ba2955_stop(_self_);
		_1e7ba34b1_pushErr(_self_, _40217_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1e7ba37d0_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41617_i < _40138_tokens.len())) {
		_1e7ba34b1_pushErr(_self_, _40138_tokens[_41617_i], jule::Str("invalid syntax", 14));
	};
	_40217_it.get()._field_Scope=_1e7ba4171_buildScope(_self_, &(_41717_scopeTokens), _40138_tokens[(_41617_i - 1LL)]);
	return _40217_it;;
}



inline jule::Ptr<_213c54e4d_Iter> _1e7ba71c9_buildIterSt(_1e7ba2306_scopeParser* _self_, jule::Ptr<_1e7ba19cb_stmt>* _43135_st) {
	if ((*(_43135_st)).get()._field_terminated) {
		return _1e7ba4a9a_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1e7ba6dbb_buildCommonIter(_self_, (*(_43135_st)).get()._field_tokens);;
}



inline jule::Ptr<_213c5646b_BreakSt> _1e7ba74d7_buildBreakSt(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _43836_tokens) {
	jule::Ptr<_213c5646b_BreakSt> _43917_brk = jule::new_ptr<_213c5646b_BreakSt>(_213c5646b_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*(_43836_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(1LLU))) {
			_1e7ba34b1_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1e7ba37d0_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_43917_brk.get()._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1e7ba34b1_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _43917_brk;;
}



inline jule::Ptr<_213c56823_ContSt> _1e7ba77e5_buildContSt(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _45635_tokens) {
	jule::Ptr<_213c56823_ContSt> _45717_cont = jule::new_ptr<_213c56823_ContSt>(_213c56823_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*(_45635_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(1LLU))) {
			_1e7ba34b1_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1e7ba37d0_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_45717_cont.get()._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1e7ba34b1_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _45717_cont;;
}



inline jule::Ptr<_213c56c96_If> _1e7ba7b03_buildIf(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _47431_tokens) {
	jule::Ptr<_213c56c96_If> _47517_model = jule::new_ptr<_213c56c96_If>(_213c56c96_If{._field_Token=(*(_47431_tokens))[0LL], });;
	(*(_47431_tokens))=(*(_47431_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _47917_exprTokens = _1e7bb8eaa_getBlockExpr(_47431_tokens);;
	jule::I32 _48017_i = 0LL;;
	if ((_47917_exprTokens.len() == 0LL)) {
		_1e7ba34b1_pushErr(_self_, _47517_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48017_i=static_cast<jule::I32>(_47917_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _48617_scopeTokens = _1e7bbc079_range(&(_48017_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47431_tokens);;
	if ((_48617_scopeTokens == nullptr)) {
		_1e7ba2955_stop(_self_);
		_1e7ba34b1_pushErr(_self_, _47517_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1e7ba37d0_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2114c1b73_Token> _49317_end = (*(_47431_tokens))[(_48017_i - 1LL)];;
	if ((_48017_i < (*(_47431_tokens)).len())) {
		if (((*(_47431_tokens))[_48017_i].get()._field_Id == static_cast<jule::U32>(14LLU))) {
			(*(_47431_tokens))=(*(_47431_tokens)).slice(_48017_i);
		} else {
			_1e7ba34b1_pushErr(_self_, (*(_47431_tokens))[_48017_i], jule::Str("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	_47517_model.get()._field_Expr=_1e7bbea3d_buildExpr((*(_self_))._field_p, &(_47917_exprTokens));
	_47517_model.get()._field_Scope=_1e7ba4171_buildScope(_self_, &(_48617_scopeTokens), _49317_end);
	return _47517_model;;
}



inline jule::Ptr<_213c5714d_Else> _1e7ba7e11_buildElse(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _50733_tokens) {
	jule::Ptr<_213c5714d_Else> _50817_els = jule::new_ptr<_213c5714d_Else>(_213c5714d_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	(*(_50733_tokens))=(*(_50733_tokens)).slice(1LL);
	jule::I32 _51217_i = 0LL;;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _51317_scopeTokens = _1e7bbc079_range(&(_51217_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _50733_tokens);;
	if ((_51317_scopeTokens == nullptr)) {
		if ((_51217_i < (*(_50733_tokens)).len())) {
			_1e7ba34b1_pushErr(_self_, _50817_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1e7ba2955_stop(_self_);
			_1e7ba34b1_pushErr(_self_, _50817_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1e7ba37d0_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51217_i < (*(_50733_tokens)).len())) {
		_1e7ba34b1_pushErr(_self_, (*(_50733_tokens))[_51217_i], jule::Str("invalid syntax", 14));
	};
	_50817_els.get()._field_Scope=_1e7ba4171_buildScope(_self_, &(_51317_scopeTokens), (*(_50733_tokens))[(_51217_i - 1LL)]);
	return _50817_els;;
}



inline jule::Ptr<_213c575c1_Conditional> _1e7ba821e_buildIfElseChain(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _53139_tokens) {
	jule::Ptr<_213c575c1_Conditional> _53217_chain = jule::new_ptr<_213c575c1_Conditional>(_213c575c1_Conditional{._field_Head=_1e7ba7b03_buildIf(_self_, &(_53139_tokens)), });;
	if ((_53217_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if ((_53139_tokens[0LL].get()._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_1b8bac681;
			};
			if (((_53139_tokens.len() > 1LL) && (_53139_tokens[1LL].get()._field_Id == static_cast<jule::U32>(13LLU)))) {
				_53139_tokens=_53139_tokens.slice(1LL);
				jule::Ptr<_213c56c96_If> _54425_elif = _1e7ba7b03_buildIf(_self_, &(_53139_tokens));;
				{ jule::Slice<jule::Ptr<_213c56c96_If>> &__jule_push_dest = _53217_chain.get()._field_Tail; __jule_push_dest.push(_54425_elif); };
				goto _iter_next_1b8bac681;
			};
			_53217_chain.get()._field_Default=_1e7ba7e11_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1b8bac681;
		}
	_iter_next_1b8bac681:;
	}
	_iter_end_1b8bac681:;;
	return _53217_chain;;
}



inline jule::Ptr<_213c45ea5_Expr> _1e7ba852c_buildCoCallSt(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _55436_tokens) {
	jule::Ptr<_2114c1b73_Token> _55513_token = _55436_tokens[0LL];;
	_55436_tokens=_55436_tokens.slice(1LL);
	jule::Ptr<_213c45ea5_Expr> _55717_e = _1e7bbea3d_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55717_e == nullptr)) {
		return _55717_e;;
	};
	{
		auto &_match_expr{ _55717_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b8bb16c9:;
			{
				_55717_e.get()._field_Kind.cast_ptr<_213c49dbb_FnCallExpr>(&__jule_any_type111).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1b8bb1311:;
			{
				_1e7ba34b1_pushErr(_self_, _55513_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1b8bb12ab:;
	};
	return _55717_e;;
}



inline jule::Ptr<_213c4e530_GotoSt> _1e7ba883a_buildGotoSt(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _57035_tokens) {
	jule::Ptr<_213c4e530_GotoSt> _57117_gt = jule::new_ptr<_213c4e530_GotoSt>(_213c4e530_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1e7ba34b1_pushErr(_self_, _57117_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1e7ba34b1_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_2114c1b73_Token> _58017_identToken = (*(_57035_tokens))[1LL];;
	if ((_58017_identToken.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1e7ba34b1_pushErr(_self_, _58017_identToken, jule::Str("invalid syntax", 14));
		_1e7ba37d0_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57117_gt;;
	};
	_57117_gt.get()._field_Label=_58017_identToken;
	return _57117_gt;;
}



inline jule::Ptr<_213c4e81b_FallSt> _1e7ba8b48_buildFallSt(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _59035_tokens) {
	jule::Ptr<_213c4e81b_FallSt> _59117_fll = jule::new_ptr<_213c4e81b_FallSt>(_213c4e81b_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1e7ba34b1_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59117_fll;;
}



inline jule::Ptr<_213c57c97_TypeAliasDecl> _1e7ba8e56_buildTypeAliasSt(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _60040_tokens) {
	jule::Ptr<_213c57c97_TypeAliasDecl> _60117_tad = _1e7bc1138_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	_60117_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60117_tad;;
}



inline void _1e7ba93b8_pushCaseExpr(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _60635_tokens, jule::Ptr<_2114c1b73_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_213c45ea5_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I32 _61321_i = 0LL;;
		jule::Ptr<_213c41d2a_TypeDecl> _61422_t;;
		jule::Bool _61425_ok = false;;
		({
			__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61321_i)), true);
			_61422_t = __jule_assign_result.__jule_result_arg0;
			_61425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61425_ok) {
			{ jule::Slice<jule::Ptr<_213c45ea5_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_213c45ea5_Expr>(_213c45ea5_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61422_t, &__jule_any_type94)})); };
			if ((_61321_i < _60635_tokens.len())) {
				_1e7ba34b1_pushErr(_self_, _60635_tokens[_61321_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_213c45ea5_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_1e7bbea3d_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline jule::Slice<jule::Ptr<_213c45ea5_Expr>> _1e7ba9819_buildCaseExprs(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _63038_tokens, jule::Ptr<_2114c1b73_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_213c45ea5_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_213c45ea5_Expr>>::alloc(0LL, 1LL);;
	jule::I32 _63317_braceN = 0LL;;
	jule::I32 _63417_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8bbc2a6:;
		if (it != expr_end) {
			jule::I32 _63514_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> _63521_tok = *it;
			{
				{
					auto &_match_expr{ _63521_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1b8bbd0a9:;
						{
							(_63317_braceN)++;
							goto _iter_next_1b8bbc2a6;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1b8bbd131:;
						{
							(_63317_braceN)--;
							goto _iter_next_1b8bbc2a6;
						}
					}
					_match_end_1b8bbcd89:;
				};
				if ((_63317_braceN != 0LL)) {
					goto _iter_next_1b8bbc2a6;
				};
				{
					
					if ((_63521_tok.get()._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_1b8bbe42e:;
						{
							jule::Slice<jule::Ptr<_2114c1b73_Token>> _65421_exprTokens = (*(_63038_tokens)).slice(_63417_j, _63514_i);;
							if ((_65421_exprTokens.len() == 0LL)) {
								_1e7ba34b1_pushErr(_self_, _63521_tok, jule::Str("expression missing", 18));
							} else {
								_1e7ba93b8_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63417_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63117_exprs));
							};
							_63417_j=static_cast<jule::I32>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_1b8bbe4a6:;
						{
							(*(_63061_colon))=_63521_tok;
							_1e7ba93b8_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63417_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63117_exprs));
							(*(_63038_tokens))=(*(_63038_tokens)).slice((_63514_i + 1LL));
							return _63117_exprs;;
						}
					}
					_match_end_1b8bbccce:;
				};
			}
			_iter_next_1b8bbc2a6:;
			++it;
			_63514_i++;
			goto _iter_begin_1b8bbc2a6;
		}
		_iter_end_1b8bbc2a6:;
	};
	_1e7ba34b1_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_213c51961_ScopeTree> _1e7ba9b27_buildCaseScope(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _67338_tokens) {
	jule::I32 _67417_n = 0LL;;
	for (;;) {
		{
			jule::I32 _67621_i = 0LL;;
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _67722_next;;
			({
				__jule_tuple_sx_2114c1b73_Token__jule_tuple_bool __jule_assign_result = _1e7ba16ce_skipSt(&(_67621_i), (*(_67338_tokens)).slice(_67417_n));
				_67722_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67722_next.len() == 0LL)) {
				goto _iter_end_1b8bc7459;
			};
			jule::Ptr<_2114c1b73_Token> _68117_tok = _67722_next[0LL];;
			if ((_68117_tok.get()._field_Id != static_cast<jule::U32>(66LLU))) {
				_67417_n+=_67621_i;
				goto _iter_next_1b8bc7459;
			};
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _68621_scopeTokens = (*(_67338_tokens)).slice(0LL, _67417_n);;
			jule::Ptr<_213c51961_ScopeTree> _68721_scope = _1e7ba4171_buildScope(_self_, &(_68621_scopeTokens), (*(_67338_tokens))[_67417_n]);;
			(*(_67338_tokens))=(*(_67338_tokens)).slice(_67417_n);
			return _68721_scope;;
		}
	_iter_next_1b8bc7459:;
	}
	_iter_end_1b8bc7459:;;
	jule::Ptr<_2114c1b73_Token> _69117_end;;
	if (((*(_67338_tokens)).len() > 0LL)) {
		_69117_end=(*(_67338_tokens))[((*(_67338_tokens)).len() - 1LL)];
	};
	jule::Ptr<_213c51961_ScopeTree> _69517_scope = _1e7ba4171_buildScope(_self_, _67338_tokens, _69117_end);;
	(*(_67338_tokens))=nullptr;
	return _69517_scope;;
}



inline __jule_tuple_x_213c5821a_Case__jule_tuple_bool _1e7ba9ece_buildCase(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _70033_tokens, jule::Bool _70051_typeMatch) {
	__jule_tuple_x_213c5821a_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_213c5821a_Case> _70117_c = jule::new_ptr<_213c5821a_Case>(_213c5821a_Case{._field_Token=(*(_70033_tokens))[0LL], });;
	(*(_70033_tokens))=(*(_70033_tokens)).slice(1LL);
	jule::Ptr<_2114c1b73_Token> _70517_colon = nullptr;;
	_70117_c.get()._field_Exprs=_1e7ba9819_buildCaseExprs(_self_, _70033_tokens, &(_70517_colon), _70051_typeMatch);
	_70117_c.get()._field_Scope=_1e7ba9b27_buildCaseScope(_self_, _70033_tokens);
	if ((_70117_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70117_c.get()._field_Scope.get()._field_End=_70517_colon;
	};
	jule::Bool _71113_isDefault = (_70117_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70117_c;
	__jule_func_result.__jule_result_arg1 = _71113_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_213c5821a_Case__jule_tuple_x_213c5714d_Else _1e7baa386_buildCases(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _71533_tokens, jule::Bool _71551_typeMatch) {
	__jule_tuple_sx_213c5821a_Case__jule_tuple_x_213c5714d_Else __jule_func_result;
	jule::Slice<jule::Ptr<_213c5821a_Case>> _71617_cases = nullptr;;
	jule::Ptr<_213c5714d_Else> _71717_def = nullptr;;
	jule::Bool _71817_defNotLast = false;;
	while ((_71533_tokens.len() > 0LL)) {
		{
			jule::Ptr<_2114c1b73_Token> _72021_tok = _71533_tokens[0LL];;
			if ((_72021_tok.get()._field_Id != static_cast<jule::U32>(66LLU))) {
				_1e7ba34b1_pushErr(_self_, _72021_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1b8bcea8d;
			};
			jule::Ptr<_213c5821a_Case> _72522_c;;
			jule::Bool _72525_isDefault = false;;
			({
				__jule_tuple_x_213c5821a_Case__jule_tuple_bool __jule_assign_result = _1e7ba9ece_buildCase(_self_, &(_71533_tokens), _71551_typeMatch);
				_72522_c = __jule_assign_result.__jule_result_arg0;
				_72525_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72525_isDefault) {
				_72522_c.get()._field_Token=_72021_tok;
				if ((_71717_def == nullptr)) {
					_71717_def=jule::new_ptr<_213c5714d_Else>(_213c5714d_Else{._field_Token=_72522_c.get()._field_Token, ._field_Scope=_72522_c.get()._field_Scope});
				} else {
					_1e7ba34b1_pushErr(_self_, _72021_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_71817_defNotLast=(_71817_defNotLast || (_71717_def != nullptr));
				{ jule::Slice<jule::Ptr<_213c5821a_Case>> &__jule_push_dest = _71617_cases; __jule_push_dest.push(_72522_c); };
			};
		}
	_iter_next_1b8bcea8d:;
	}
	_iter_end_1b8bcea8d:;;
	if (_71817_defNotLast) {
		_1e7ba34b1_pushErr(_self_, _71717_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71617_cases;
	__jule_func_result.__jule_result_arg1 = _71717_def;
	return __jule_func_result;;
}



inline jule::Ptr<_213c588e1_MatchCase> _1e7baa694_buildMatchCase(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _74937_tokens) {
	jule::Ptr<_213c588e1_MatchCase> _75017_m = jule::new_ptr<_213c588e1_MatchCase>(_213c588e1_MatchCase{._field_Token=_74937_tokens[0LL], });;
	_74937_tokens=_74937_tokens.slice(1LL);
	if (((_74937_tokens.len() > 0LL) && (_74937_tokens[0LL].get()._field_Id == static_cast<jule::U32>(7LLU)))) {
		_75017_m.get()._field_TypeMatch=true;
		_74937_tokens=_74937_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _76017_exprTokens = _1e7bb8eaa_getBlockExpr(&(_74937_tokens));;
	if ((_76017_exprTokens.len() > 0LL)) {
		_75017_m.get()._field_Expr=_1e7bbea3d_buildExpr((*(_self_))._field_p, &(_76017_exprTokens));
	} else if (_75017_m.get()._field_TypeMatch) {
		_1e7ba34b1_pushErr(_self_, _75017_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I32 _76717_i = _76017_exprTokens.len();;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _76817_blockToks = _1e7bbc079_range(&(_76717_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_74937_tokens));;
	if ((_76817_blockToks == nullptr)) {
		_1e7ba2955_stop(_self_);
		_1e7ba34b1_pushErr(_self_, _75017_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1e7ba37d0_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76717_i < _74937_tokens.len())) {
		_1e7ba34b1_pushErr(_self_, _74937_tokens[_76717_i], jule::Str("invalid syntax", 14));
	};
	_75017_m.get()._field_End=_74937_tokens[(_76717_i - 1LL)];
	({
		__jule_tuple_sx_213c5821a_Case__jule_tuple_x_213c5714d_Else __jule_assign_result = _1e7baa386_buildCases(_self_, _76817_blockToks, _75017_m.get()._field_TypeMatch);
		_75017_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75017_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75017_m;;
}



inline jule::Ptr<_213c51961_ScopeTree> _1e7baa9a2_buildScopeSt(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _78235_tokens) {
	jule::Bool _78317_isUnsafe = false;;
	jule::Bool _78417_isDeferred = false;;
	jule::Ptr<_2114c1b73_Token> _78517_token = _78235_tokens[0LL];;
	if ((_78517_token.get()._field_Id == static_cast<jule::U32>(31LLU))) {
		_78317_isUnsafe=true;
		_78235_tokens=_78235_tokens.slice(1LL);
		if ((_78235_tokens.len() == 0LL)) {
			_1e7ba34b1_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78517_token=_78235_tokens[0LL];
		if ((_78517_token.get()._field_Id == static_cast<jule::U32>(33LLU))) {
			_78417_isDeferred=true;
			_78235_tokens=_78235_tokens.slice(1LL);
			if ((_78235_tokens.len() == 0LL)) {
				_1e7ba34b1_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78517_token.get()._field_Id == static_cast<jule::U32>(33LLU))) {
		_78417_isDeferred=true;
		_78235_tokens=_78235_tokens.slice(1LL);
		if ((_78235_tokens.len() == 0LL)) {
			_1e7ba34b1_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I32 _81117_i = 0LL;;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _81217_scopeTokens = _1e7bbc079_range(&(_81117_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_78235_tokens));;
	if ((_81217_scopeTokens == nullptr)) {
		_1e7ba34b1_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81117_i < _78235_tokens.len())) {
		_1e7ba34b1_pushErr(_self_, _78235_tokens[_81117_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_213c51961_ScopeTree> _81917_scope = _1e7ba4171_buildScope(_self_, &(_81217_scopeTokens), _78235_tokens[(_81117_i - 1LL)]);;
	_81917_scope.get()._field_Unsafety=_78317_isUnsafe;
	_81917_scope.get()._field_Deferred=_78417_isDeferred;
	return _81917_scope;;
}



inline jule::Ptr<_213c4e178_LabelSt> _1e7baacb0_buildLabelSt(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _82536_tokens) {
	jule::Ptr<_213c4e178_LabelSt> _82617_lbl = jule::new_ptr<_213c4e178_LabelSt>(_213c4e178_LabelSt{._field_Token=(*(_82536_tokens))[0LL], ._field_Ident=(*(_82536_tokens))[0LL].get()._field_Kind});;
	if (((*(_82536_tokens)).len() > 2LL)) {
		(*(_82536_tokens))=(*(_82536_tokens)).slice(2LL);
		_1e7ba3a55_insertAsNext(_self_, _82536_tokens);
	};
	return _82617_lbl;;
}



inline __jule_tuple__213c51125_StmtData__jule_tuple_bool _1e7bab0bd_buildIdSt(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _84033_tokens) {
	__jule_tuple__213c51125_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84033_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_2114c1b73_Token> _84517_token = (*(_84033_tokens))[1LL];;
	{
		auto &_match_expr{ _84517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1b8be39a3:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1e7baacb0_buildLabelSt(_self_, _84033_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b8be4003:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1e7bba4d9_assignInfo> _1e7bab3cb_buildAssignInfo(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _85439_tokens) {
	jule::Ptr<_1e7bba4d9_assignInfo> _85517_info = jule::new_ptr<_1e7bba4d9_assignInfo>(_1e7bba4d9_assignInfo{._field_ok=true});;
	jule::I32 _85817_braceN = 0LL;;
	{
		auto expr = _85439_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8be57b8:;
		if (it != expr_end) {
			jule::I32 _85914_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> _85921_token = *it;
			{
				{
					auto &_match_expr{ _85921_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8be6533:;
						{
							(_85817_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8be65aa:;
						{
							(_85817_braceN)--;
						}
					}
					_match_end_1b8be6489:;
				};
				{
					
					if ((_85817_braceN > 0LL)) {
						_case_begin_1b8be7787:;
						{
							goto _iter_next_1b8be57b8;
						}
					}
					else if (((!(_2114c675a_IsAssignOp(_85921_token.get()._field_Id))) && (_85921_token.get()._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_1b8be780e:;
						{
							goto _iter_next_1b8be57b8;
						}
					}
					_match_end_1b8be7721:;
				};
				_85517_info.get()._field_l=(*(_85439_tokens)).slice(0LL, _85914_i);
				if ((_85517_info.get()._field_l.len() == 0LL)) {
					_85517_info.get()._field_ok=false;
				};
				_85517_info.get()._field_setter=_85921_token;
				if (((_85914_i + 1LL) >= (*(_85439_tokens)).len())) {
					_85517_info.get()._field_r=nullptr;
					_85517_info.get()._field_ok=_2114c64b3_IsPostfixOp(_85517_info.get()._field_setter.get()._field_Id);
					goto _iter_end_1b8be57b8;
				};
				_85517_info.get()._field_r=(*(_85439_tokens)).slice((_85914_i + 1LL));
				if (_2114c64b3_IsPostfixOp(_85517_info.get()._field_setter.get()._field_Id)) {
					if ((_85517_info.get()._field_r.len() > 0LL)) {
						_1e7ba34b1_pushErr(_self_, _85517_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85517_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1b8be57b8;
			}
			_iter_next_1b8be57b8:;
			++it;
			_85914_i++;
			goto _iter_begin_1b8be57b8;
		}
		_iter_end_1b8be57b8:;
	};
	return _85517_info;;
}



inline jule::Ptr<_213c4ee26_AssignLeft> _1e7bab6d9_buildAssignL(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _89936_tokens) {
	jule::Ptr<_213c4ee26_AssignLeft> _90017_l = jule::new_ptr<_213c4ee26_AssignLeft>(_213c4ee26_AssignLeft{._field_Token=(*(_89936_tokens))[0LL], });;
	if (((*(_89936_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(1LLU))) {
		_90017_l.get()._field_Ident=_90017_l.get()._field_Token.get()._field_Kind;
	};
	_90017_l.get()._field_Expr=_1e7bbea3d_buildExpr((*(_self_))._field_p, _89936_tokens);
	return _90017_l;;
}



inline jule::Slice<jule::Ptr<_213c4ee26_AssignLeft>> _1e7bab9e7_buildAssignLs(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>>* _91037_parts) {
	jule::Slice<jule::Ptr<_213c4ee26_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto expr = _91037_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8bed5e5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _91221_part = *it;
			{
				jule::Ptr<_213c4ee26_AssignLeft> _91321_l = _1e7bab6d9_buildAssignL(_self_, &(_91221_part));;
				{ jule::Slice<jule::Ptr<_213c4ee26_AssignLeft>> &__jule_push_dest = _91117_lefts; __jule_push_dest.push(_91321_l); };
			}
			_iter_next_1b8bed5e5:;
			++it;
			goto _iter_begin_1b8bed5e5;
		}
		_iter_end_1b8bed5e5:;
	};
	return _91117_lefts;;
}



inline __jule_tuple_x_213c50465_AssignSt__jule_tuple_bool _1e7babd05_buildPlainAssign(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _92040_tokens) {
	__jule_tuple_x_213c50465_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1e7bba4d9_assignInfo> _92117_info = _1e7bab3cb_buildAssignInfo(_self_, _92040_tokens);;
	if ((!(_92117_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_213c50465_AssignSt> _92617_assign = jule::new_ptr<_213c50465_AssignSt>(_213c50465_AssignSt{._field_Setter=_92117_info.get()._field_setter, });;
	if ((_92117_info.get()._field_setter.get()._field_Id == static_cast<jule::U32>(38LLU))) {
		_92617_assign.get()._field_Declarative=true;
		_92617_assign.get()._field_Right=_1e7bbea3d_buildExpr((*(_self_))._field_p, &(_92117_info.get()._field_r));
		jule::Bool _93417_ok = _1e7bac1ac_buildDeclAssign1(_self_, &(_92117_info.get()._field_l), &(_92617_assign));;
		__jule_func_result.__jule_result_arg0 = _92617_assign;
		__jule_func_result.__jule_result_arg1 = _93417_ok;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _93818_parts;;
	jule::Slice<_2110be2cb_Log> _93825_errs;;
	({
		__jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1e7bbc70b_parts(&(_92117_info.get()._field_l), static_cast<jule::U32>(5LLU), true);
		_93818_parts = __jule_assign_result.__jule_result_arg0;
		_93825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93825_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_93825_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_92617_assign.get()._field_Left=_1e7bab9e7_buildAssignLs(_self_, &(_93818_parts));
	if ((_92117_info.get()._field_r != nullptr)) {
		_92617_assign.get()._field_Right=_1e7bbea3d_buildExpr((*(_self_))._field_p, &(_92117_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _92617_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1e7bac1ac_buildDeclAssign1(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _95240_lefts, jule::Ptr<_213c50465_AssignSt>* _95262_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _95418_parts;;
	jule::Slice<_2110be2cb_Log> _95425_errs;;
	({
		__jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1e7bbc70b_parts(_95240_lefts, static_cast<jule::U32>(5LLU), true);
		_95418_parts = __jule_assign_result.__jule_result_arg0;
		_95425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95425_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_95425_errs);;
		return false;;
	};
	{
		auto expr = &(_95418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c06730:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _96021_part = *it;
			{
				jule::Bool _96121_isMut = false;;
				jule::Bool _96221_isRef = false;;
				jule::Ptr<_2114c1b73_Token> _96417_token = _96021_part[0LL];;
				if ((_96417_token.get()._field_Id == static_cast<jule::U32>(32LLU))) {
					_96121_isMut=true;
					_96021_part=_96021_part.slice(1LL);
					if ((_96021_part.len() == 0LL)) {
						_1e7ba34b1_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1b8c06730;
					};
				};
				if ((_96021_part[0LL].get()._field_Id == static_cast<jule::U32>(65LLU))) {
					_96221_isRef=true;
					_96021_part=_96021_part.slice(1LL);
					if ((_96021_part.len() == 0LL)) {
						_1e7ba34b1_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1b8c06730;
					};
				};
				if (((_96021_part[0LL].get()._field_Id != static_cast<jule::U32>(1LLU)) && (_96021_part[0LL].get()._field_Id != static_cast<jule::U32>(74LLU)))) {
					_1e7ba34b1_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1b8c06730;
				};
				jule::Ptr<_213c4ee26_AssignLeft> _98821_l = _1e7bab6d9_buildAssignL(_self_, &(_96021_part));;
				_98821_l.get()._field_Mutable=_96121_isMut;
				_98821_l.get()._field_Reference=_96221_isRef;
				{ jule::Slice<jule::Ptr<_213c4ee26_AssignLeft>> &__jule_push_dest = (*(_95262_assign)).get()._field_Left; __jule_push_dest.push(_98821_l); };
			}
			_iter_next_1b8c06730:;
			++it;
			goto _iter_begin_1b8c06730;
		}
		_iter_end_1b8c06730:;
	};
	return true;;
}



inline __jule_tuple_x_213c50465_AssignSt__jule_tuple_bool _1e7bac4ba_buildDeclAssign(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _99738_tokens) {
	__jule_tuple_x_213c50465_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99738_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_99738_tokens=_99738_tokens.slice(1LL);
	jule::Ptr<_2114c1b73_Token> _100317_token = _99738_tokens[0LL];;
	if ((_100317_token.get()._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_213c50465_AssignSt> _100817_assign = jule::new_ptr<_213c50465_AssignSt>(_213c50465_AssignSt{._field_Declarative=true, });;
	jule::I32 _101217_i = 0LL;;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _101317_rang = _1e7bbc079_range(&(_101217_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_99738_tokens));;
	if ((_101317_rang == nullptr)) {
		_1e7ba34b1_pushErr(_self_, _100317_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_101217_i + 1LL) < _99738_tokens.len())) {
		_100817_assign.get()._field_Setter=_99738_tokens[_101217_i];
		if ((_100817_assign.get()._field_Setter.get()._field_Id != static_cast<jule::U32>(71LLU))) {
			_1e7ba34b1_pushErr(_self_, _100817_assign.get()._field_Setter, jule::Str("invalid syntax", 14));
		};
		(_101217_i)++;
		jule::Slice<jule::Ptr<_2114c1b73_Token>> _102321_exprTokens = _99738_tokens.slice(_101217_i);;
		_100817_assign.get()._field_Right=_1e7bbea3d_buildExpr((*(_self_))._field_p, &(_102321_exprTokens));
	};
	jule::Bool _102713_ok = _1e7bac1ac_buildDeclAssign1(_self_, &(_101317_rang), &(_100817_assign));;
	__jule_func_result.__jule_result_arg0 = _100817_assign;
	__jule_func_result.__jule_result_arg1 = _102713_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_213c50465_AssignSt__jule_tuple_bool _1e7bac7c8_buildAssignSt(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _103137_tokens) {
	__jule_tuple_x_213c50465_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1e7bba880_checkAssignTokens(_103137_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_103137_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b8c13165:;
			{
				({
					__jule_tuple_x_213c50465_AssignSt__jule_tuple_bool __jule_assign_result = _1e7bac4ba_buildDeclAssign(_self_, (*(_103137_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b8c12c7a:;
			{
				({
					__jule_tuple_x_213c50465_AssignSt__jule_tuple_bool __jule_assign_result = _1e7babd05_buildPlainAssign(_self_, _103137_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b8c12c25:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_213c46846_UseExpr> _1e7bacad6_buildUseExpr(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _104636_tokens) {
	if (((*(_104636_tokens)).len() == 1LL)) {
		_1e7ba34b1_pushErr(_self_, (*(_104636_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_213c46846_UseExpr> _105117_ue = jule::new_ptr<_213c46846_UseExpr>(_213c46846_UseExpr{._field_Token=(*(_104636_tokens))[0LL], });;
	(*(_104636_tokens))=(*(_104636_tokens)).slice(1LL);
	_105117_ue.get()._field_Expr=_1e7bbea3d_buildExpr((*(_self_))._field_p, _104636_tokens);
	return _105117_ue;;
}



inline jule::Any _1e7bacde4_buildSt(_1e7ba2306_scopeParser* _self_, jule::Ptr<_1e7ba19cb_stmt>* _105931_st) {
	jule::Ptr<_2114c1b73_Token> _106017_token = (*(_105931_st)).get()._field_tokens[0LL];;
	if ((_106017_token.get()._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _106222_s = jule::Any(nullptr);;
		jule::Bool _106225_ok = false;;
		({
			__jule_tuple__213c51125_StmtData__jule_tuple_bool __jule_assign_result = _1e7bab0bd_buildIdSt(_self_, &((*(_105931_st)).get()._field_tokens));
			_106222_s = __jule_assign_result.__jule_result_arg0;
			_106225_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_106225_ok) {
			return _106222_s;;
		};
	};
	jule::Ptr<_213c50465_AssignSt> _106818_s;;
	jule::Bool _106821_ok = false;;
	({
		__jule_tuple_x_213c50465_AssignSt__jule_tuple_bool __jule_assign_result = _1e7bac7c8_buildAssignSt(_self_, &((*(_105931_st)).get()._field_tokens));
		_106818_s = __jule_assign_result.__jule_result_arg0;
		_106821_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106821_ok) {
		return jule::Any(_106818_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _106017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1b8c17eb1:;
			{
				return jule::Any(_1e7bacad6_buildUseExpr(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1b8c17c91:;
			{
				return jule::Any(_1e7ba447e_buildVarSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1b8c17d07:;
			{
				return jule::Any(_1e7ba478c_buildRetSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1b8c17d6d:;
			{
				return jule::Any(_1e7ba71c9_buildIterSt(_self_, _105931_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1b8c180c1:;
			{
				return jule::Any(_1e7ba74d7_buildBreakSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1b8c18137:;
			{
				return jule::Any(_1e7ba77e5_buildContSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1b8c1819d:;
			{
				return jule::Any(_1e7ba821e_buildIfElseChain(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1b8c18225:;
			{
				return jule::Any(_1e7ba852c_buildCoCallSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_1b8c1829c:;
			{
				return jule::Any(_1e7ba883a_buildGotoSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1b8c18324:;
			{
				return jule::Any(_1e7ba8b48_buildFallSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b8c1839b:;
			{
				return jule::Any(_1e7ba8e56_buildTypeAliasSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1b8c18423:;
			{
				return jule::Any(_1e7baa694_buildMatchCase(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU) || _match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1b8c1849a:;
			{
				return jule::Any(_1e7baa9a2_buildScopeSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1b8c18522:;
			{
				return jule::Any(_1e7baa9a2_buildScopeSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		_match_end_1b8c17994:;
	};
	jule::Ptr<_213c45ea5_Expr> _110717_expr = _1e7bbea3d_buildExpr((*(_self_))._field_p, &((*(_105931_st)).get()._field_tokens));;
	if ((_110717_expr != nullptr)) {
		return jule::Any(_110717_expr, &__jule_any_type53);;
	};
	_1e7ba34b1_pushErr(_self_, _106017_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1e7bad213_build(_1e7ba2306_scopeParser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _111529_tokens, jule::Ptr<_213c51961_ScopeTree>* _111552_s) {
	if (((*(_111552_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1e7ba1d72_splitStmts(_111529_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_111552_s));
	while (((!(_1e7ba3192_isLastSt(_self_))) && (!(_1e7ba2e2d_finished(_self_))))) {
		{
			jule::Ptr<_1e7ba19cb_stmt> _112321_st = _1e7ba3cb9_next(_self_);;
			jule::Any _112421_data = _1e7bacde4_buildSt(_self_, &(_112321_st));;
			if ((_112421_data != nullptr)) {
				{ jule::Slice<_213c51356_Stmt> &__jule_push_dest = (*(_self_))._field_s.get()._field_Stmts; __jule_push_dest.push(_213c51356_Stmt{._field_Token=_112321_st.get()._field_tokens[0LL], ._field_Data=_112421_data}); };
			};
			if (_1e7ba2bb9_stopped(_self_)) {
				goto _iter_end_1b8c20b45;
			};
		}
	_iter_next_1b8c20b45:;
	}
	_iter_end_1b8c20b45:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e7ba2306_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1e7bae434_pushErr(_1e7badba3_exprBuilder* _self_, jule::Ptr<_2114c1b73_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1e7bbe411_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1e7bae753_pushSuggestion(_1e7badba3_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1e7bbe730_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_213c46b32_TupleExpr> _1e7baea61_buildTuple(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>>* _5434_parts) {
	jule::Ptr<_213c46b32_TupleExpr> _5517_tuple = jule::new_ptr<_213c46b32_TupleExpr>(_213c46b32_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_213c45ea5_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c3d7ab:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_213c45ea5_Expr>> &__jule_push_dest = _5517_tuple.get()._field_Expr; __jule_push_dest.push(_1e7bb8581_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1b8c3d7ab:;
			++it;
			goto _iter_begin_1b8c3d7ab;
		}
		_iter_end_1b8c3d7ab:;
	};
	return _5517_tuple;;
}



inline jule::Ptr<_213c46ed9_LitExpr> _1e7baed6e_buildLit(_1e7badba3_exprBuilder* _self_, jule::Ptr<_2114c1b73_Token> _6427_token) {
	return jule::new_ptr<_213c46ed9_LitExpr>(_213c46ed9_LitExpr{._field_Token=_6427_token, ._field_Value=_6427_token.get()._field_Kind});;
}



inline jule::Any _1e7bb048a_buildSingle(_1e7badba3_exprBuilder* _self_, jule::Ptr<_2114c1b73_Token> _7534_token) {
	{
		auto &_match_expr{ _7534_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1b8c4037e:;
			{
				return jule::Any(_1e7baed6e_buildLit(_self_, _7534_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1b8c403e5:;
			{
				return jule::Any(jule::new_ptr<_213c4865b_VariadicExpr>(_213c4865b_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type81);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1b8c4045b:;
			{
				return jule::Any(_1e7bb987e_buildIdentExpr(&(_7534_token)), &__jule_any_type85);;
			}
		}
		_match_end_1b8c402c4:;
	};
	_1e7bae434_pushErr(_self_, _7534_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_213c47a9a_IdentExpr> _1e7bb0798_buildBindIdent(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _9238_tokens) {
	if (((*(_9238_tokens))[0LL].get()._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*(_9238_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(17LLU))) {
		_1e7bae434_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bae753_pushSuggestion(_self_, jule::Str("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2114c1b73_Token> _10017_token = (*(_9238_tokens))[2LL];;
	if ((_10017_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1e7bae434_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bae753_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213c47a9a_IdentExpr> _10617_expr = _1e7bb987e_buildIdentExpr(&(_10017_token));;
	_10617_expr.get()._field_Binded=true;
	return _10617_expr;;
}



inline jule::Ptr<_213c482a4_UnaryExpr> _1e7bb0aa6_buildUnary(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _11133_tokens) {
	jule::Ptr<_2114c1b73_Token> _11217_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1e7bae434_pushErr(_self_, _11217_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_2114c237c_IsUnaryOp(_11217_op.get()._field_Id)))) {
		_1e7bae434_pushErr(_self_, _11217_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11217_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11133_tokens=_11133_tokens.slice(1LL);
	return jule::new_ptr<_213c482a4_UnaryExpr>(_213c482a4_UnaryExpr{._field_Op=_11217_op, ._field_Expr=_1e7bb8581_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_213c4933d_SubIdentExpr> _1e7bb0db4_buildObjSubIdent(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _13239_tokens) {
	jule::I32 _13317_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_2114c1b73_Token> _13417_identToken = _13239_tokens[_13317_i];;
	(_13317_i)--;
	_13239_tokens=_13239_tokens.slice(0LL, _13317_i);
	if ((_13239_tokens.len() == 0LL)) {
		_1e7bae434_pushErr(_self_, _13417_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_213c4933d_SubIdentExpr>(_213c4933d_SubIdentExpr{._field_Expr=_1e7bb8581_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13417_identToken});;
}



inline jule::Ptr<_213c48dba_NsSelectionExpr> _1e7bb11c2_buildNsSubIdent(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _14739_tokens) {
	jule::Ptr<_213c48dba_NsSelectionExpr> _14817_ns = jule::new_ptr<_213c48dba_NsSelectionExpr>();;
	{
		auto expr = _14739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c4a0e2:;
		if (it != expr_end) {
			jule::I32 _14914_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> _14921_token = *it;
			{
				if (((_14914_i & 1LL) == 0LL)) {
					if ((_14921_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
						_1e7bae434_pushErr(_self_, _14921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1e7bae753_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					{ jule::Slice<jule::Ptr<_2114c1b73_Token>> &__jule_push_dest = _14817_ns.get()._field_Ns; __jule_push_dest.push(_14921_token); };
				} else if ((_14921_token.get()._field_Id != static_cast<jule::U32>(19LLU))) {
					_1e7bae434_pushErr(_self_, _14921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1e7bae753_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b8c4a0e2:;
			++it;
			_14914_i++;
			goto _iter_begin_1b8c4a0e2;
		}
		_iter_end_1b8c4a0e2:;
	};
	_14817_ns.get()._field_Ident=_14817_ns.get()._field_Ns[(_14817_ns.get()._field_Ns.len() - 1LL)];
	_14817_ns.get()._field_Ns=_14817_ns.get()._field_Ns.slice(0LL, (_14817_ns.get()._field_Ns.len() - 1LL));
	return _14817_ns;;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1e7bb14d0_buildType(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _16633_tokens) {
	jule::I32 _16717_i = 0LL;;
	jule::Ptr<_213c41d2a_TypeDecl> _16818_t;;
	jule::Bool _16821_ok = false;;
	({
		__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType((*(_self_))._field_p, _16633_tokens, (&(_16717_i)), false);
		_16818_t = __jule_assign_result.__jule_result_arg0;
		_16821_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_16821_ok))) {
		_1e7bae434_pushErr(_self_, (*(_16633_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16717_i < (*(_16633_tokens)).len())) {
		_1e7bae434_pushErr(_self_, (*(_16633_tokens))[_16717_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _16818_t;;
}



inline jule::Any _1e7bb17dd_buildSubIdent(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _18037_tokens) {
	jule::I32 _18113_i = ((*(_18037_tokens)).len() - 2LL);;
	jule::Ptr<_2114c1b73_Token> _18213_token = (*(_18037_tokens))[_18113_i];;
	{
		auto &_match_expr{ _18213_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_1b8c51758:;
			{
				return jule::Any(_1e7bb0db4_buildObjSubIdent(_self_, (*(_18037_tokens))), &__jule_any_type91);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1b8c51c31:;
			{
				return jule::Any(_1e7bb11c2_buildNsSubIdent(_self_, _18037_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1b8c51c97:;
			{
				return jule::Any(_1e7bb14d0_buildType(_self_, _18037_tokens), &__jule_any_type94);;
			}
		}
		_match_end_1b8c519de:;
	};
	_1e7bae434_pushErr(_self_, _18213_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_213c4865b_VariadicExpr> _1e7bb1aeb_buildVariadic(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _19636_tokens) {
	jule::Ptr<_2114c1b73_Token> _19717_token = _19636_tokens[(_19636_tokens.len() - 1LL)];;
	_19636_tokens=_19636_tokens.slice(0LL, (_19636_tokens.len() - 1LL));
	return jule::new_ptr<_213c4865b_VariadicExpr>(_213c4865b_VariadicExpr{._field_Token=_19717_token, ._field_Expr=_1e7bb8581_buildFromTokens(_self_, _19636_tokens)});;
}



inline jule::Ptr<_213c46291_RangeExpr> _1e7bb1e2b_buildBetweenParentheses(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _20546_tokens) {
	if ((_20546_tokens.len() == 2LL)) {
		_1e7bae434_pushErr(_self_, _20546_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1e7bae753_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20546_tokens=_20546_tokens.slice(1LL, (_20546_tokens.len() - 1LL));
	return jule::new_ptr<_213c46291_RangeExpr>(_213c46291_RangeExpr{._field_Expr=_1e7bb8581_buildFromTokens(_self_, _20546_tokens)});;
}



inline jule::Ptr<_213c48a13_CastExpr> _1e7bb224a_tryBuildCast(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _21736_tokens) {
	jule::I32 _21817_rangeN = 0LL;;
	{
		auto expr = _21736_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c56c14:;
		if (it != expr_end) {
			jule::I32 _21913_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> _21916_token = *it;
			{
				{
					auto &_match_expr{ _21916_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8c578e6:;
						{
							(_21817_rangeN)++;
							goto _iter_next_1b8c56c14;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8c5796d:;
						{
							(_21817_rangeN)--;
						}
					}
					_match_end_1b8c576c6:;
				};
				if ((_21817_rangeN > 0LL)) {
					goto _iter_next_1b8c56c14;
				} else if (((_21913_i + 1LL) == (*(_21736_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_2114c1b73_Token>> _23821_typeTokens = (*(_21736_tokens)).slice(0LL, (_21913_i + 1LL));;
				jule::Slice<jule::Ptr<_2114c1b73_Token>> _23921_exprTokens = (*(_21736_tokens)).slice((_21913_i + 1LL));;
				if ((_23921_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_2114c1b73_Token> _24617_tok = _23921_exprTokens[0LL];;
				if ((_24617_tok.get()._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_213c48a13_CastExpr> _25121_cast = jule::new_ptr<_213c48a13_CastExpr>(_213c48a13_CastExpr{});;
				if ((_23921_exprTokens.len() == 2LL)) {
					_1e7bae434_pushErr(_self_, _23921_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1e7bae753_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_23821_typeTokens.len() == 2LL)) {
					_1e7bae434_pushErr(_self_, _23821_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1e7bae753_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_23821_typeTokens=_23821_typeTokens.slice(1LL, (_23821_typeTokens.len() - 1LL));
					jule::I32 _26525_typeIndex = 0LL;;
					jule::Ptr<_213c41d2a_TypeDecl> _26626_t;;
					jule::Bool _26629_ok = false;;
					({
						__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType((*(_self_))._field_p, &(_23821_typeTokens), (&(_26525_typeIndex)), true);
						_26626_t = __jule_assign_result.__jule_result_arg0;
						_26629_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_26629_ok && (_26525_typeIndex < _23821_typeTokens.len()))) {
						_1e7bae434_pushErr(_self_, _23821_typeTokens[_26525_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_26629_ok))) {
						return _25121_cast;;
					};
					_25121_cast.get()._field_Kind=_26626_t;
					if ((_23921_exprTokens.len() > 2LL)) {
						jule::I32 _27629_j = 0LL;;
						_1e7bbc079_range(&(_27629_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_23921_exprTokens));
						if ((_27629_j < _23921_exprTokens.len())) {
							return nullptr;;
						};
						_23921_exprTokens=_23921_exprTokens.slice(0LL, _27629_j);
						_25121_cast.get()._field_Expr=_1e7bb8581_buildFromTokens(_self_, _23921_exprTokens);
					};
				};
				return _25121_cast;;
			}
			_iter_next_1b8c56c14:;
			++it;
			_21913_i++;
			goto _iter_begin_1b8c56c14;
		}
		_iter_end_1b8c56c14:;
	};
	return nullptr;;
}



inline void _1e7bb2613_pushArg(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_213c45ea5_Expr>>* _29131_args, jule::Slice<jule::Ptr<_2114c1b73_Token>> _29150_tokens, jule::Ptr<_2114c1b73_Token> _29168_err_token) {
	if ((_29150_tokens.len() == 0LL)) {
		_1e7bae434_pushErr(_self_, _29168_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bae753_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_213c45ea5_Expr>> &__jule_push_dest = (*(_29131_args)); __jule_push_dest.push(_1e7bb8581_buildFromTokens(_self_, _29150_tokens)); };
}



inline jule::Slice<jule::Ptr<_213c45ea5_Expr>> _1e7bb2921_buildArgs(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _30032_tokens) {
	if ((_30032_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_213c45ea5_Expr>> _30617_args = nullptr;;
	jule::I32 _30717_last = 0LL;;
	jule::I32 _30817_rangeN = 0LL;;
	_30032_tokens=_30032_tokens.slice(1LL, (_30032_tokens.len() - 1LL));
	{
		auto expr = &(_30032_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c6476b:;
		if (it != expr_end) {
			jule::I32 _31013_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> _31016_token = *it;
			{
				{
					auto &_match_expr{ _31016_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8c652e9:;
						{
							(_30817_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8c65371:;
						{
							(_30817_rangeN)--;
						}
					}
					_match_end_1b8c650c9:;
				};
				if (((_30817_rangeN > 0LL) || (_31016_token.get()._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1b8c6476b;
				};
				_1e7bb2613_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last, _31013_i), _31016_token);
				_30717_last=static_cast<jule::I32>((_31013_i + 1LL));
			}
			_iter_next_1b8c6476b:;
			++it;
			_31013_i++;
			goto _iter_begin_1b8c6476b;
		}
		_iter_end_1b8c6476b:;
	};
	if ((_30717_last < _30032_tokens.len())) {
		if ((_30717_last == 0LL)) {
			if ((_30032_tokens.len() > 0LL)) {
				_1e7bb2613_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last), _30032_tokens[_30717_last]);
			};
		} else {
			_1e7bb2613_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last), _30032_tokens[(_30717_last - 1LL)]);
		};
	};
	return _30617_args;;
}



inline jule::Ptr<_213c49dbb_FnCallExpr> _1e7bb3180_buildFnCall(_1e7badba3_exprBuilder* _self_, jule::Ptr<_2114c1b73_Token>* _36635_token, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _36655_expr, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _36676_args) {
	return jule::new_ptr<_213c49dbb_FnCallExpr>(_213c49dbb_FnCallExpr{._field_Token=(*(_36635_token)), ._field_Expr=_1e7bb8581_buildFromTokens(_self_, (*(_36655_expr))), ._field_Args=_1e7bb2921_buildArgs(_self_, (*(_36676_args))), });;
}



inline jule::Any _1e7bb348d_buildParenthesesRange(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _37445_tokens) {
	jule::Ptr<_2114c1b73_Token> _37517_token = (*(_37445_tokens))[0LL];;
	if ((_37517_token.get()._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_213c48a13_CastExpr> _37721_expr = _1e7bb224a_tryBuildCast(_self_, _37445_tokens);;
		if ((_37721_expr != nullptr)) {
			return jule::Any(_37721_expr, &__jule_any_type109);;
		};
	};
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _38218_exprTokens;;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _38234_args_tokens;;
	({
		__jule_tuple_sx_2114c1b73_Token__jule_tuple_sx_2114c1b73_Token __jule_assign_result = _1e7bbc321_rangeLast(_37445_tokens);
		_38218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38218_exprTokens.len() == 0LL)) {
		return jule::Any(_1e7bb1e2b_buildBetweenParentheses(_self_, _38234_args_tokens), &__jule_any_type104);;
	};
	return jule::Any(_1e7bb3180_buildFnCall(_self_, &(_37517_token), &(_38218_exprTokens), &(_38234_args_tokens)), &__jule_any_type111);;
}



inline jule::Ptr<_213c47627_UnsafeExpr> _1e7bb379b_buildUnsafeExpr(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _39138_tokens) {
	jule::Ptr<_2114c1b73_Token> _39217_token = _39138_tokens[0LL];;
	_39138_tokens=_39138_tokens.slice(1LL);
	jule::I32 _39417_i = 0LL;;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _39517_rangeTokens = _1e7bbc079_range(&(_39417_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_39138_tokens));;
	if ((_39517_rangeTokens.len() == 0LL)) {
		_1e7bae434_pushErr(_self_, _39138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_213c47627_UnsafeExpr>(_213c47627_UnsafeExpr{._field_Token=_39217_token, ._field_Expr=_1e7bb8581_buildFromTokens(_self_, _39517_rangeTokens)});;
}



inline jule::Ptr<_213c53457_FnDecl> _1e7bb3aa9_buildAnonFn(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _40635_tokens) {
	jule::Ptr<_213c53457_FnDecl> _40717_f = _1e7bc4e72_buildFn((*(_self_))._field_p, _40635_tokens, false, false);;
	if ((!(_213c537a9_IsAnon(_40717_f.ptr())))) {
		_1e7bae434_pushErr(_self_, _40717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bae753_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _40717_f;;
}



inline jule::Any _1e7bb3db7_buildUnsafe(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _41535_tokens) {
	{
		auto &_match_expr{ (*(_41535_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1b8c753d6:;
			{
				return jule::Any(_1e7bb3aa9_buildAnonFn(_self_, _41535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1b8c7579e:;
			{
				return jule::Any(_1e7bb379b_buildUnsafeExpr(_self_, (*(_41535_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_1b8c75727:;
	};
}



inline void _1e7bb4280_pushRangeLitPart(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _42539_part, jule::Ptr<_2114c1b73_Token> _4269_errorToken, jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>>* _42634_parts) {
	if ((_42539_part.len() == 0LL)) {
		_1e7bae434_pushErr(_self_, _4269_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bae753_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> &__jule_push_dest = (*(_42634_parts)); __jule_push_dest.push(_42539_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _1e7bb45b0_getBraceRangeLitExprParts(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _43648_tokens) {
	if ((_43648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _44217_parts = nullptr;;
	jule::I32 _44417_last = 0LL;;
	jule::I32 _44517_rangeN = 0LL;;
	_43648_tokens=_43648_tokens.slice(1LL, (_43648_tokens.len() - 1LL));
	{
		auto expr = &(_43648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c79792:;
		if (it != expr_end) {
			jule::I32 _44713_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> _44716_token = *it;
			{
				{
					auto &_match_expr{ _44716_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8c7a320:;
						{
							(_44517_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8c7a397:;
						{
							(_44517_rangeN)--;
						}
					}
					_match_end_1b8c7a100:;
				};
				if (((_44517_rangeN > 0LL) || (_44716_token.get()._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1b8c79792;
				};
				_1e7bb4280_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last, _44713_i), _44716_token, &(_44217_parts));
				_44417_last=static_cast<jule::I32>((_44713_i + 1LL));
			}
			_iter_next_1b8c79792:;
			++it;
			_44713_i++;
			goto _iter_begin_1b8c79792;
		}
		_iter_end_1b8c79792:;
	};
	if ((_44417_last < _43648_tokens.len())) {
		if ((_44417_last == 0LL)) {
			if ((_43648_tokens.len() > 0LL)) {
				_1e7bb4280_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last), _43648_tokens[_44417_last], &(_44217_parts));
			};
		} else {
			_1e7bb4280_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last), _43648_tokens[(_44417_last - 1LL)], &(_44217_parts));
		};
	};
	return _44217_parts;;
}



inline jule::Ptr<_213c4a84a_FieldExprPair> _1e7bb48ce_buildFieldExprPair(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _47841_tokens) {
	if (((_47841_tokens.len() - 2LL) == 0LL)) {
		_1e7bae434_pushErr(_self_, _47841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213c4a84a_FieldExprPair> _48317_pair = jule::new_ptr<_213c4a84a_FieldExprPair>(_213c4a84a_FieldExprPair{._field_Field=_47841_tokens[0LL], });;
	_47841_tokens=_47841_tokens.slice(2LL);
	_48317_pair.get()._field_Expr=_1e7bb8581_buildFromTokens(_self_, _47841_tokens);
	return _48317_pair;;
}



inline jule::Ptr<_213c45ea5_Expr> _1e7bb4bdc_buildStructLitExpr(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _49142_tokens) {
	jule::Ptr<_2114c1b73_Token> _49217_token = (*(_49142_tokens))[0LL];;
	if (((_49217_token.get()._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_49142_tokens)).len() > 1LL))) {
		_49217_token=(*(_49142_tokens))[1LL];
		if ((_49217_token.get()._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_213c45ea5_Expr>(_213c45ea5_Expr{._field_Token=_49217_token, ._field_End=(*(_49142_tokens))[((*(_49142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1e7bb48ce_buildFieldExprPair(_self_, (*(_49142_tokens))), &__jule_any_type83)});;
		};
	};
	return _1e7bb8581_buildFromTokens(_self_, (*(_49142_tokens)));;
}



inline jule::Slice<jule::Ptr<_213c45ea5_Expr>> _1e7bb4eea_buildStructLitExprs(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _50643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _50717_parts = _1e7bb45b0_getBraceRangeLitExprParts(_self_, (*(_50643_tokens)));;
	if ((_50717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_213c45ea5_Expr>> _51217_pairs = jule::Slice<jule::Ptr<_213c45ea5_Expr>>::alloc(0LL, _50717_parts.len());;
	{
		auto expr = &(_50717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c8327e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _51321_part = *it;
			{
				{ jule::Slice<jule::Ptr<_213c45ea5_Expr>> &__jule_push_dest = _51217_pairs; __jule_push_dest.push(_1e7bb4bdc_buildStructLitExpr(_self_, &(_51321_part))); };
			}
			_iter_next_1b8c8327e:;
			++it;
			goto _iter_begin_1b8c8327e;
		}
		_iter_end_1b8c8327e:;
	};
	return _51217_pairs;;
}



inline jule::Ptr<_213c4b120_StructLit> _1e7bb532a_buildTypedStructLiteral(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _51946_tokens) {
	jule::I32 _52017_i = 0LL;;
	jule::Ptr<_213c41d2a_TypeDecl> _52118_t;;
	jule::Bool _52121_ok = false;;
	({
		__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType((*(_self_))._field_p, &(_51946_tokens), (&(_52017_i)), true);
		_52118_t = __jule_assign_result.__jule_result_arg0;
		_52121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52121_ok))) {
		return nullptr;;
	} else if ((_52017_i >= _51946_tokens.len())) {
		_1e7bae434_pushErr(_self_, _51946_tokens[_52017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_51946_tokens=_51946_tokens.slice(_52017_i);
	jule::Ptr<_2114c1b73_Token> _53013_token = _51946_tokens[0LL];;
	if ((_53013_token.get()._field_Id != static_cast<jule::U32>(72LLU))) {
		_1e7bae434_pushErr(_self_, _53013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_213c4b120_StructLit>(_213c4b120_StructLit{._field_End=_51946_tokens[(_51946_tokens.len() - 1LL)], ._field_Kind=_52118_t, ._field_Exprs=_1e7bb4eea_buildStructLitExprs(_self_, &(_51946_tokens))});;
}



inline jule::Ptr<_213c45ea5_Expr> _1e7bb5649_buildBraceLitPart(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _54341_tokens) {
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _54418_l;;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _54425_r;;
	({
		__jule_tuple_sx_2114c1b73_Token__jule_tuple_sx_2114c1b73_Token __jule_assign_result = _1e7bb9340_splitDelim(_54341_tokens, static_cast<jule::U32>(8LLU));
		_54418_l = __jule_assign_result.__jule_result_arg0;
		_54425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54418_l != nullptr)) {
		return jule::new_ptr<_213c45ea5_Expr>(_213c45ea5_Expr{._field_Token=(*(_54341_tokens))[0LL], ._field_End=(*(_54341_tokens))[((*(_54341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_213c4be78_KeyValPair>(_213c4be78_KeyValPair{._field_Key=_1e7bb8581_buildFromTokens(_self_, _54418_l), ._field_Val=_1e7bb8581_buildFromTokens(_self_, _54425_r), ._field_Colon=(*(_54341_tokens))[_54418_l.len()]}), &__jule_any_type84)});;
	};
	return _1e7bb8581_buildFromTokens(_self_, (*(_54341_tokens)));;
}



inline jule::Ptr<_213c4b593_BraceLit> _1e7bb5957_buildBraceLit(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _56037_tokens) {
	jule::Ptr<_213c4b593_BraceLit> _56117_lit = jule::new_ptr<_213c4b593_BraceLit>(_213c4b593_BraceLit{._field_Token=(*(_56037_tokens))[0LL], ._field_End=(*(_56037_tokens))[((*(_56037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _56617_parts = _1e7bb45b0_getBraceRangeLitExprParts(_self_, (*(_56037_tokens)));;
	if ((_56617_parts == nullptr)) {
		return _56117_lit;;
	};
	_56117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_213c45ea5_Expr>>::alloc(0LL, _56617_parts.len());
	{
		auto expr = &(_56617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c8c0bd:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _57221_part = *it;
			{
				{ jule::Slice<jule::Ptr<_213c45ea5_Expr>> &__jule_push_dest = _56117_lit.get()._field_Exprs; __jule_push_dest.push(_1e7bb5649_buildBraceLitPart(_self_, &(_57221_part))); };
			}
			_iter_next_1b8c8c0bd:;
			++it;
			goto _iter_begin_1b8c8c0bd;
		}
		_iter_end_1b8c8c0bd:;
	};
	return _56117_lit;;
}



inline jule::Any _1e7bb5c65_buildBraceRange(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _57939_tokens) {
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _58018_exprTokens;;
	jule::I32 _58030_rangeN = 0;;
	({
		__jule_tuple_sx_2114c1b73_Token__jule_tuple_int __jule_assign_result = _1e7bb9b26_getRangeExprTokens(_57939_tokens);
		_58018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58018_exprTokens.len() == 0LL)) {
			_case_begin_1b8c8d982:;
			{
				return jule::Any(_1e7bb5957_buildBraceLit(_self_, _57939_tokens), &__jule_any_type112);;
			}
		}
		else if ((_58030_rangeN > 0LL)) {
			_case_begin_1b8c8dc3a:;
			{
				_1e7bae434_pushErr(_self_, (*(_57939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8c8d168:;
	};
	jule::Ptr<_2114c1b73_Token> _59113_elseToken = _58018_exprTokens[(_58018_exprTokens.len() - 1LL)];;
	if ((_58018_exprTokens[(_58018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U32>(14LLU))) {
		_58018_exprTokens=_58018_exprTokens.slice(0LL, (_58018_exprTokens.len() - 1LL));
		jule::Any _59421_d = _1e7bb7e65_build(_self_, &(_58018_exprTokens));;
		if ((_59421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _59421_d };
			
			if (_match_expr.type == &__jule_any_type111) {
				_case_begin_1b8c91a1d:;
				{
					(*(_57939_tokens))=(*(_57939_tokens)).slice((_58018_exprTokens.len() + 1LL));
					jule::I32 _60125_i = 0LL;;
					jule::Slice<jule::Ptr<_2114c1b73_Token>> _60225_rangeTokens = _1e7bbc079_range(&(_60125_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _57939_tokens);;
					jule::Ptr<_213c49dbb_FnCallExpr> _60325_model = _59421_d.cast_ptr<_213c49dbb_FnCallExpr>(&__jule_any_type111);;
					if (_213c4a493_Ignored(_60325_model.ptr())) {
						_1e7bae434_pushErr(_self_, _59113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1e7bae753_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_60325_model.get()._field_Exception=_1e7bc0478_buildScope((*(_self_))._field_p, &(_60225_rangeTokens), (*(_57939_tokens))[(_60125_i - 1LL)]);
					return _59421_d;;
				}
			}
			else {
				_case_begin_1b8c91556:;
				{
					_1e7bae434_pushErr(_self_, _58018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1b8c917ed:;
		};
	};
	{
		auto &_match_expr{ _58018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b8c95747:;
			{
				return _1e7bb3db7_buildUnsafe(_self_, _57939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1b8c95e51:;
			{
				return jule::Any(_1e7bb3aa9_buildAnonFn(_self_, _57939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1b8c95eb7:;
			{
				return jule::Any(_1e7bb532a_buildTypedStructLiteral(_self_, (*(_57939_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_1b8c92359:;
			{
				_1e7bae434_pushErr(_self_, _58018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8c90676:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _1e7bb6073_getEnumerableParts(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _63141_tokens) {
	_63141_tokens=_63141_tokens.slice(1LL, (_63141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _63318_parts;;
	jule::Slice<_2110be2cb_Log> _63325_errors;;
	({
		__jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1e7bbc70b_parts(&(_63141_tokens), static_cast<jule::U32>(5LLU), true);
		_63318_parts = __jule_assign_result.__jule_result_arg0;
		_63325_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_63325_errors);;
	return _63318_parts;;
}



inline jule::Ptr<_213c4c5e9_SliceExpr> _1e7bb6381_buildSlice(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _63833_tokens) {
	jule::Ptr<_213c4c5e9_SliceExpr> _63917_slc = jule::new_ptr<_213c4c5e9_SliceExpr>(_213c4c5e9_SliceExpr{._field_Token=_63833_tokens[0LL], ._field_End=_63833_tokens[(_63833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _64417_parts = _1e7bb6073_getEnumerableParts(_self_, _63833_tokens);;
	if ((_64417_parts.len() == 0LL)) {
		return _63917_slc;;
	};
	_63917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_213c45ea5_Expr>>::alloc(0LL, _64417_parts.len());
	{
		auto expr = &(_64417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c9a153:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _65021_p = *it;
			{
				if ((_65021_p.len() == 0LL)) {
					goto _iter_next_1b8c9a153;
				};
				{ jule::Slice<jule::Ptr<_213c45ea5_Expr>> &__jule_push_dest = _63917_slc.get()._field_Exprs; __jule_push_dest.push(_1e7bb8581_buildFromTokens(_self_, _65021_p)); };
			}
			_iter_next_1b8c9a153:;
			++it;
			goto _iter_begin_1b8c9a153;
		}
		_iter_end_1b8c9a153:;
	};
	return _63917_slc;;
}



inline jule::Ptr<_213c4ce57_IndexingExpr> _1e7bb67d2_buildIndexing(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _66036_exprTokens, jule::Slice<jule::Ptr<_2114c1b73_Token>> _66113_tokens, jule::Ptr<_2114c1b73_Token> _66135_errorToken) {
	jule::Ptr<_2114c1b73_Token> _66217_end = _66113_tokens[(_66113_tokens.len() - 1LL)];;
	_66113_tokens=_66113_tokens.slice(1LL, (_66113_tokens.len() - 1LL));
	if ((_66113_tokens.len() == 0LL)) {
		_1e7bae434_pushErr(_self_, _66135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213c45ea5_Expr> _66817_expr = _1e7bb8581_buildFromTokens(_self_, _66036_exprTokens);;
	if ((_66817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_213c45ea5_Expr> _67217_index = _1e7bb8581_buildFromTokens(_self_, _66113_tokens);;
	if ((_67217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_213c4ce57_IndexingExpr>(_213c4ce57_IndexingExpr{._field_Token=_66135_errorToken, ._field_End=_66217_end, ._field_Expr=_66817_expr, ._field_Index=_67217_index});;
}



inline jule::Ptr<_213c4d562_SlicingExpr> _1e7bb6d76_buildSlicing(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _68436_exprTokens, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _68463_start, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _68514_to, jule::Ptr<_2114c1b73_Token>* _68533_errorToken, jule::Ptr<_2114c1b73_Token> _68557_end) {
	jule::Ptr<_213c4d562_SlicingExpr> _68617_slc = jule::new_ptr<_213c4d562_SlicingExpr>(_213c4d562_SlicingExpr{._field_Token=(*(_68533_errorToken)), ._field_End=_68557_end, ._field_Expr=_1e7bb8581_buildFromTokens(_self_, (*(_68436_exprTokens))), });;
	if (((*(_68463_start)).len() > 0LL)) {
		_68617_slc.get()._field_Start=_1e7bb8581_buildFromTokens(_self_, (*(_68463_start)));
	};
	if (((*(_68514_to)).len() > 0LL)) {
		_68617_slc.get()._field_To=_1e7bb8581_buildFromTokens(_self_, (*(_68514_to)));
	};
	return _68617_slc;;
}



inline jule::Any _1e7bb7184_buildBracketRange(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _70040_tokens) {
	jule::Ptr<_2114c1b73_Token> _70117_errorToken = _70040_tokens[0LL];;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _70218_exprTokens;;
	jule::I32 _70230_rangeN = 0;;
	({
		__jule_tuple_sx_2114c1b73_Token__jule_tuple_int __jule_assign_result = _1e7bb9b26_getRangeExprTokens(&(_70040_tokens));
		_70218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70218_exprTokens.len() == 0LL)) {
		return jule::Any(_1e7bb6381_buildSlice(_self_, _70040_tokens), &__jule_any_type99);;
	} else if ((_70230_rangeN > 0LL)) {
		_1e7bae434_pushErr(_self_, _70117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_70040_tokens=_70040_tokens.slice(_70218_exprTokens.len());
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _71717_splitTokens = _70040_tokens.slice(1LL, (_70040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _71818_start;;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _71829_to;;
	({
		__jule_tuple_sx_2114c1b73_Token__jule_tuple_sx_2114c1b73_Token __jule_assign_result = _1e7bb9340_splitDelim(&(_71717_splitTokens), static_cast<jule::U32>(8LLU));
		_71818_start = __jule_assign_result.__jule_result_arg0;
		_71829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_71818_start != nullptr) || (_71829_to != nullptr))) {
		return jule::Any(_1e7bb6d76_buildSlicing(_self_, &(_70218_exprTokens), &(_71818_start), &(_71829_to), &(_70117_errorToken), _70040_tokens[(_70040_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_1e7bb67d2_buildIndexing(_self_, _70218_exprTokens, _70040_tokens, _70117_errorToken), &__jule_any_type107);;
}



inline jule::Any _1e7bb7492_buildExclRight(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _72538_tokens) {
	jule::Ptr<_2114c1b73_Token> _72613_token = (*(_72538_tokens))[((*(_72538_tokens)).len() - 1LL)];;
	(*(_72538_tokens))=(*(_72538_tokens)).slice(0LL, ((*(_72538_tokens)).len() - 1LL));
	jule::Any _72817_d = _1e7bb7e65_build(_self_, _72538_tokens);;
	if ((_72817_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _72817_d };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b8ca7b11:;
			{
				_72817_d.cast_ptr<_213c49dbb_FnCallExpr>(&__jule_any_type111).get()._field_Exception=jule::new_ptr<_213c51961_ScopeTree>(_213c51961_ScopeTree{._field_Deferred=true, });
				return _72817_d;;
			}
		}
		_match_end_1b8ca79ce:;
	};
	_1e7bae434_pushErr(_self_, _72613_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1e7bb77a0_buildData(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _74333_tokens) {
	{
		auto _match_expr{ (*(_74333_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b8ca9272:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b8ca92e9:;
			{
				return _1e7bb048a_buildSingle(_self_, (*(_74333_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b8ca93b5:;
			{
				if (((*(_74333_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_1e7bb0798_buildBindIdent(_self_, _74333_tokens), &__jule_any_type85);;
				};
			}
		}
		_match_end_1b8ca7836:;
	};
	jule::Ptr<_2114c1b73_Token> _75517_token = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
	if ((_75517_token.get()._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_1e7bb1aeb_buildVariadic(_self_, (*(_74333_tokens))), &__jule_any_type81);;
	};
	_75517_token=(*(_74333_tokens))[0LL];
	if (_2114c237c_IsUnaryOp(_75517_token.get()._field_Id)) {
		if (((*(_74333_tokens)).len() > 1LL)) {
			_75517_token=(*(_74333_tokens))[1LL];
			if ((_75517_token.get()._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_1e7bb14d0_buildType(_self_, _74333_tokens), &__jule_any_type94);;
			};
		};
		return jule::Any(_1e7bb0aa6_buildUnary(_self_, (*(_74333_tokens))), &__jule_any_type93);;
	};
	if (((*(_74333_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ _75517_token.get()._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_1b8cad474:;
				{
					if (((*(_74333_tokens)).len() > 3LL)) {
						jule::Ptr<_2114c1b73_Token> _78125_t = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
						if ((_78125_t.get()._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_1b8cad287;
						};
					};
					jule::Ptr<_2114c1b73_Token> _78721_next = (*(_74333_tokens))[1LL];;
					if ((_78721_next.get()._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_1b8cad287;
					};
					return jule::Any(_1e7bb14d0_buildType(_self_, _74333_tokens), &__jule_any_type94);;
				}
			}
			_match_end_1b8cad287:;
		};
	};
	_75517_token=(*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _75517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1b8cb109d:;
			{
				return _1e7bb17dd_buildSubIdent(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1b8cb1114:;
			{
				return _1e7bb7492_buildExclRight(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1b8cb117a:;
			{
				return _1e7bb348d_buildParenthesesRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1b8cb11e1:;
			{
				return _1e7bb5c65_buildBraceRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1b8cb1257:;
			{
				return _1e7bb7184_buildBracketRange(_self_, (*(_74333_tokens)));;
			}
		}
		_match_end_1b8caae33:;
	};
	if ((_75517_token.get()._field_Id == static_cast<jule::U32>(29LLU))) {
		return jule::Any(_1e7bb14d0_buildType(_self_, _74333_tokens), &__jule_any_type94);;
	};
	_1e7bae434_pushErr(_self_, _75517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1e7bb7b57_buildBinop(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _81834_tokens, jule::I32 _81852_i) {
	jule::Ptr<_2114c1b73_Token> _81917_op = (*(_81834_tokens))[_81852_i];;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _82017_leftTokens = (*(_81834_tokens)).slice(0LL, _81852_i);;
	if ((_1e7bb8927_isTypeOp(&(_81917_op.get()._field_Id)) && _1e7bb8c13_isTypeRange(&(_82017_leftTokens)))) {
		return jule::Any(_1e7bb14d0_buildType(_self_, _81834_tokens), &__jule_any_type94);;
	};
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _82517_rightTokens = (*(_81834_tokens)).slice((_81852_i + 1LL));;
	if ((_82017_leftTokens.len() == 0LL)) {
		_1e7bae434_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bae753_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82517_rightTokens.len() == 0LL)) {
		_1e7bae434_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bae753_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_213c497b1_BinopExpr>(_213c497b1_BinopExpr{._field_Left=_1e7bb8581_buildFromTokens(_self_, _82017_leftTokens), ._field_Right=_1e7bb8581_buildFromTokens(_self_, _82517_rightTokens), ._field_Op=_81917_op}), &__jule_any_type113);;
}



inline jule::Any _1e7bb7e65_build(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _84329_tokens) {
	if (((*(_84329_tokens))[0LL].get()._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_1e7bb14d0_buildType(_self_, _84329_tokens), &__jule_any_type94);;
	};
	jule::I32 _84713_i = _1e7bb95d7_findLowestPrecOp(_84329_tokens);;
	if ((_84713_i == -1LL)) {
		return _1e7bb77a0_buildData(_self_, _84329_tokens);;
	};
	return _1e7bb7b57_buildBinop(_self_, _84329_tokens, _84713_i);;
}



inline jule::Any _1e7bb8273_buildKind(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _85433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _85518_parts;;
	jule::Slice<_2110be2cb_Log> _85525_errors;;
	({
		__jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1e7bbc70b_parts(_85433_tokens, static_cast<jule::U32>(5LLU), true);
		_85518_parts = __jule_assign_result.__jule_result_arg0;
		_85525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85525_errors != nullptr)) {
		((*(_self_))._field_p.get()._field_errors).append(_85525_errors);;
		return nullptr;;
	} else if ((_85518_parts.len() > 1LL)) {
		return jule::Any(_1e7baea61_buildTuple(_self_, &(_85518_parts)), &__jule_any_type86);;
	};
	return _1e7bb7e65_build(_self_, _85433_tokens);;
}



inline jule::Ptr<_213c45ea5_Expr> _1e7bb8581_buildFromTokens(_1e7badba3_exprBuilder* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _86538_tokens) {
	if ((_86538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _86917_kind = _1e7bb8273_buildKind(_self_, &(_86538_tokens));;
	if ((_86917_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_213c45ea5_Expr>(_213c45ea5_Expr{._field_Token=_86538_tokens[0LL], ._field_End=_86538_tokens[(_86538_tokens.len() - 1LL)], ._field_Kind=_86917_kind});;
}







std::ostream &operator<<(std::ostream &_Stream, _1e7badba3_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e7bba4d9_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1e7bbdcd4_stop(_1e7bbd9e8_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1e7bbe048_stopped(_1e7bbd9e8_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1e7bbe411_pushErr(_1e7bbd9e8_parser* _self_, jule::Ptr<_2114c1b73_Token> _23726_token, jule::Str _23741_fmt, jule::Slice<jule::Any> _23754_args) {
	{ jule::Slice<_2110be2cb_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1e7bbcd8d_compilerErr(&(_23726_token), &(_23741_fmt), _23754_args)); };
}



inline void _1e7bbe730_pushSuggestion(_1e7bbd9e8_parser* _self_, jule::Str _24233_fmt, jule::Slice<jule::Any> _24246_args) {
	{
		_1e7bbd1e0_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _24233_fmt, _24246_args);
	};
}



inline jule::Ptr<_213c45ea5_Expr> _1e7bbea3d_buildExpr(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _24634_tokens) {
	return _1e7bb8581_buildFromTokens(_self_.get()._field_ep.ptr(), (*(_24634_tokens)));;
}



inline jule::Ptr<_213c0e314_Directive> _1e7bbed4b_buildDirective(_1e7bbd9e8_parser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _25037_tokens) {
	if ((_25037_tokens.len() == 1LL)) {
		_1e7bbe411_pushErr(_self_, _25037_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_25037_tokens[1LL].get()._field_Column != (_25037_tokens[0LL].get()._field_Column + 1LL))) {
		_1e7bbe411_pushErr(_self_, _25037_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_213c0e314_Directive>(_213c0e314_Directive{._field_Tag=_25037_tokens[1LL], ._field_Args=_25037_tokens.slice(2LL)});;
}



inline void _1e7bc00c1_pushDirective(_1e7bbd9e8_parser* _self_, jule::Ptr<_213c0e314_Directive> _26536_d) {
	if ((_26536_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8cdd6d5:;
		if (it != expr_end) {
			jule::Ptr<_213c0e314_Directive> _27016_pd = *it;
			{
				if ((_26536_d.get()._field_Tag.get()._field_Kind == _27016_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1b8cdd6d5:;
			++it;
			goto _iter_begin_1b8cdd6d5;
		}
		_iter_end_1b8cdd6d5:;
	};
	{ jule::Slice<jule::Ptr<_213c0e314_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_26536_d); };
}



inline jule::Ptr<_213c51961_ScopeTree> _1e7bc0478_buildScope(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _27835_tokens, jule::Ptr<_2114c1b73_Token> _27857_end) {
	jule::Ptr<_213c51961_ScopeTree> _27917_s = _1e7ba08cb_newScope();;
	_27917_s.get()._field_End=_27857_end;
	_1e7ba2306_scopeParser _28117_sp = _1e7ba2306_scopeParser{._field_p=_self_, };;
	_1e7bad213_build(&_28117_sp, _27835_tokens, &(_27917_s));
	return _27917_s;;
}



inline __jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool _1e7bc08c9__buildType(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _28842_tokens, jule::I32* _28913_i, jule::Bool _28922_err) {
	__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1cdcd02a5_typeBuilder _29017_tb = _1cdcd02a5_typeBuilder{._field_p=_self_, ._field_tokens=(*(_28842_tokens)), ._field_i=_28913_i, ._field_err=_28922_err};;
	jule::Ptr<_213c41d2a_TypeDecl> _29618_decl;;
	jule::Bool _29624_ok = false;;
	({
		__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1cdcd3011_build(&_29017_tb);
		_29618_decl = __jule_assign_result.__jule_result_arg0;
		_29624_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _29618_decl;
	__jule_func_result.__jule_result_arg1 = _29624_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool _1e7bc0d2a_buildType(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _30141_tokens, jule::I32* _30213_i, jule::Bool _30222_err) {
	__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_2114c1b73_Token> _30313_token = (*(_30141_tokens))[(*(_30213_i))];;
	jule::Ptr<_213c41d2a_TypeDecl> _30418_t;;
	jule::Bool _30421_ok = false;;
	({
		__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc08c9__buildType(_self_, _30141_tokens, _30213_i, _30222_err);
		_30418_t = __jule_assign_result.__jule_result_arg0;
		_30421_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_30222_err && (!(_30421_ok)))) {
		_1e7bbe411_pushErr(_self_.ptr(), _30313_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _30418_t;
	__jule_func_result.__jule_result_arg1 = _30421_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_213c57c97_TypeAliasDecl> _1e7bc1138_buildTypeAliasDecl(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _31143_tokens) {
	jule::I32 _31217_i = 1LL;;
	if ((_31217_i >= (*(_31143_tokens)).len())) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_31143_tokens))[(_31217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213c57c97_TypeAliasDecl> _31717_tad = jule::new_ptr<_213c57c97_TypeAliasDecl>(_213c57c97_TypeAliasDecl{._field_Token=(*(_31143_tokens))[1LL], ._field_Ident=(*(_31143_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_2114c1b73_Token> _32117_token = (*(_31143_tokens))[_31217_i];;
	if ((_32117_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1e7bbe411_pushErr(_self_.ptr(), _32117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_31217_i)++;
	if ((_31217_i >= (*(_31143_tokens)).len())) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_31143_tokens))[(_31217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _31717_tad;;
	};
	_32117_token=(*(_31143_tokens))[_31217_i];
	if ((_32117_token.get()._field_Id != static_cast<jule::U32>(8LLU))) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_31143_tokens))[(_31217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _31717_tad;;
	};
	(_31217_i)++;
	if ((_31217_i >= (*(_31143_tokens)).len())) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_31143_tokens))[(_31217_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _31717_tad;;
	};
	jule::Ptr<_213c41d2a_TypeDecl> _34218_t;;
	jule::Bool _34221_ok = false;;
	({
		__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, _31143_tokens, (&(_31217_i)), true);
		_34218_t = __jule_assign_result.__jule_result_arg0;
		_34221_ok = __jule_assign_result.__jule_result_arg1;
	});
	_31717_tad.get()._field_Kind=_34218_t;
	if ((_34221_ok && (_31217_i < (*(_31143_tokens)).len()))) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_31143_tokens))[_31217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_31717_tad.get()._field_Public=_1cdcce23d_isPub(&(_31717_tad.get()._field_Ident));
	return _31717_tad;;
}



inline void _1e7bc1457_buildVarTypeAndExpr(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Ptr<_213c54436_VarDecl>* _35144_v, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _35162_tokens) {
	jule::I32 _35217_i = 0LL;;
	jule::Ptr<_2114c1b73_Token> _35317_tok = (*(_35162_tokens))[_35217_i];;
	if ((_35317_tok.get()._field_Id == static_cast<jule::U32>(8LLU))) {
		(_35217_i)++;
		if (((_35217_i >= (*(_35162_tokens)).len()) || ((*(_35162_tokens))[_35217_i].get()._field_Id == static_cast<jule::U32>(71LLU)))) {
			_1e7bbe411_pushErr(_self_.ptr(), _35317_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_213c41d2a_TypeDecl> _36022_t;;
		jule::Bool _36025_ok = false;;
		({
			__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, _35162_tokens, (&(_35217_i)), true);
			_36022_t = __jule_assign_result.__jule_result_arg0;
			_36025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_36025_ok) {
			(*(_35144_v)).get()._field_Kind=_36022_t;
			if ((_35217_i >= (*(_35162_tokens)).len())) {
				return;;
			};
			_35317_tok=(*(_35162_tokens))[_35217_i];
		};
	};
	if ((_35317_tok.get()._field_Id != static_cast<jule::U32>(71LLU))) {
		_1e7bbe411_pushErr(_self_.ptr(), _35317_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _37517_exprTokens = (*(_35162_tokens)).slice((_35217_i + 1LL));;
	if ((_37517_exprTokens.len() == 0LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), _35317_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_35144_v)).get()._field_Expr=_1e7bbea3d_buildExpr(_self_, &(_37517_exprTokens));
}



inline void _1e7bc1776_buildVarCommon(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Ptr<_213c54436_VarDecl>* _38339_v, jule::Slice<jule::Ptr<_2114c1b73_Token>> _38356_tokens) {
	(*(_38339_v)).get()._field_Token=_38356_tokens[0LL];
	if (((*(_38339_v)).get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_38339_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_38339_v)).get()._field_Ident=(*(_38339_v)).get()._field_Token.get()._field_Kind;
	(*(_38339_v)).get()._field_Public=_1cdcce23d_isPub(&((*(_38339_v)).get()._field_Ident));
	(*(_38339_v)).get()._field_Kind=nullptr;
	if ((_38356_tokens.len() > 1LL)) {
		_38356_tokens=_38356_tokens.slice(1LL);
		_1e7bc1457_buildVarTypeAndExpr(_self_, _38339_v, &(_38356_tokens));
	};
}



inline void _1e7bc1b3e_buildVarBegin(_1e7bbd9e8_parser* _self_, jule::Ptr<_213c54436_VarDecl>* _39937_v, jule::I32* _39955_i, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _39964_tokens) {
	jule::Ptr<_2114c1b73_Token> _40013_tok = (*(_39964_tokens))[(*(_39955_i))];;
	{
		auto &_match_expr{ _40013_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1b8d0507b:;
			{
				(*(_39937_v)).get()._field_Statically=true;
				goto _case_begin_1b8d05d18;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b8d05d18:;
			{
				((*(_39955_i)))++;
				if (((*(_39955_i)) >= (*(_39964_tokens)).len())) {
					_1e7bbe411_pushErr(_self_, _40013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_39964_tokens))[(*(_39955_i))].get()._field_Id == static_cast<jule::U32>(32LLU))) {
					(*(_39937_v)).get()._field_Mutable=true;
					((*(_39955_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1b8d05598:;
			{
				((*(_39955_i)))++;
				(*(_39937_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1b8d054dd:;
			{
				_1e7bbe411_pushErr(_self_, _40013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b8d05367:;
	};
	if (((*(_39955_i)) >= (*(_39964_tokens)).len())) {
		_1e7bbe411_pushErr(_self_, _40013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_213c54436_VarDecl> _1e7bc1e4c_buildVar(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _42932_tokens) {
	jule::I32 _43017_i = 0LL;;
	jule::Ptr<_213c54436_VarDecl> _43117_v = jule::new_ptr<_213c54436_VarDecl>(_213c54436_VarDecl{._field_Token=_42932_tokens[0LL], });;
	_1e7bc1b3e_buildVarBegin(_self_.ptr(), &(_43117_v), &(_43017_i), &(_42932_tokens));
	if ((_43017_i >= _42932_tokens.len())) {
		return nullptr;;
	};
	_42932_tokens=_42932_tokens.slice(_43017_i);
	if ((_42932_tokens[0LL].get()._field_Id == static_cast<jule::U32>(65LLU))) {
		_43117_v.get()._field_Reference=true;
		if ((_42932_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_42932_tokens=_42932_tokens.slice(1LL);
	};
	_1e7bc1776_buildVarCommon(_self_, &(_43117_v), _42932_tokens);
	return _43117_v;;
}



inline jule::Ptr<_213c4dcc1_GenericDecl> _1e7bc225a_buildGeneric(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _45137_tokens) {
	jule::Ptr<_213c4dcc1_GenericDecl> _45217_g = jule::new_ptr<_213c4dcc1_GenericDecl>(_213c4dcc1_GenericDecl{._field_Token=(*(_45137_tokens))[0LL], });;
	if ((_45217_g.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1e7bbe411_pushErr(_self_.ptr(), _45217_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_45217_g.get()._field_Ident=_45217_g.get()._field_Token.get()._field_Kind;
	if (((*(_45137_tokens)).len() > 1LL)) {
		if (((*(_45137_tokens))[1LL].get()._field_Id != static_cast<jule::U32>(8LLU))) {
			_1e7bbe411_pushErr(_self_.ptr(), (*(_45137_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_45137_tokens)).len() == 2LL)) {
			_1e7bbe411_pushErr(_self_.ptr(), (*(_45137_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_2114c1b73_Token>> _46921_constraintTokens = (*(_45137_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _47022_parts;;
		jule::Slice<_2110be2cb_Log> _47029_errors;;
		({
			__jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1e7bbc70b_parts(&(_46921_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_47022_parts = __jule_assign_result.__jule_result_arg0;
			_47029_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_47029_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_47029_errors);;
			return nullptr;;
		};
		_45217_g.get()._field_Constraint=jule::new_ptr<_213c4d84d_Constraint>(_213c4d84d_Constraint{._field_Mask=jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>>::alloc(0LL, _47022_parts.len())});
		{
			auto expr = &(_47022_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8d11494:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_2114c1b73_Token>> _47625_part = *it;
				{
					jule::I32 _47725_i = 0LL;;
					jule::Ptr<_213c41d2a_TypeDecl> _47826_kind;;
					({
						__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, &(_47625_part), (&(_47725_i)), true);
						_47826_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> &__jule_push_dest = _45217_g.get()._field_Constraint.get()._field_Mask; __jule_push_dest.push(_47826_kind); };
					if ((_47725_i < _47625_part.len())) {
						_1e7bbe411_pushErr(_self_.ptr(), _47625_part[_47725_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b8d11494:;
				++it;
				goto _iter_begin_1b8d11494;
			}
			_iter_end_1b8d11494:;
		};
	};
	return _45217_g;;
}



inline jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>> _1e7bc2612_buildGenerics(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _48838_tokens, jule::Ptr<_2114c1b73_Token>* _48857_errorToken) {
	if (((*(_48838_tokens)).len() == 0LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_48857_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _49418_parts;;
	jule::Slice<_2110be2cb_Log> _49425_errors;;
	({
		__jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1e7bbc70b_parts(_48838_tokens, static_cast<jule::U32>(5LLU), true);
		_49418_parts = __jule_assign_result.__jule_result_arg0;
		_49425_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_49425_errors.len() > 0LL)) {
		(_self_.get()._field_errors).append(_49425_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>> _50017_generics = jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>>::alloc(0LL, _49418_parts.len());;
	{
		auto expr = &(_49418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8d152de:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _50121_part = *it;
			{
				{ jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>> &__jule_push_dest = _50017_generics; __jule_push_dest.push(_1e7bc225a_buildGeneric(_self_, &(_50121_part))); };
			}
			_iter_next_1b8d152de:;
			++it;
			goto _iter_begin_1b8d152de;
		}
		_iter_end_1b8d152de:;
	};
	return _50017_generics;;
}



inline jule::Ptr<_213c52137_ParamDecl> _1e7bc2920_buildSelfParam(_1e7bbd9e8_parser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _50837_tokens) {
	if ((_50837_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_213c52137_ParamDecl> _51317_param = jule::new_ptr<_213c52137_ParamDecl>();;
	jule::I32 _51617_i = 0LL;;
	if ((_50837_tokens[_51617_i].get()._field_Id == static_cast<jule::U32>(32LLU))) {
		_51317_param.get()._field_Mutable=true;
		(_51617_i)++;
		if ((_51617_i >= _50837_tokens.len())) {
			_1e7bbe411_pushErr(_self_, _50837_tokens[(_51617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_50837_tokens[_51617_i].get()._field_Id == static_cast<jule::U32>(65LLU))) {
		_51317_param.get()._field_Ident=jule::Str("&", 1);
		(_51617_i)++;
		if ((_51617_i >= _50837_tokens.len())) {
			_1e7bbe411_pushErr(_self_, _50837_tokens[(_51617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_50837_tokens[_51617_i].get()._field_Id == static_cast<jule::U32>(24LLU))) {
		(_51317_param.get()._field_Ident).append("self", 4);
		_51317_param.get()._field_Token=_50837_tokens[_51617_i];
		(_51617_i)++;
		if ((_51617_i < _50837_tokens.len())) {
			_1e7bbe411_pushErr(_self_, _50837_tokens[_51617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _51317_param;;
}



inline void _1e7bc2cd8_paramTypeBegin(_1e7bbd9e8_parser* _self_, jule::Ptr<_213c52137_ParamDecl>* _54738_param, jule::I32* _54762_i, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _54771_tokens) {
	for (; ((*(_54762_i)) < (*(_54771_tokens)).len()); ((*(_54762_i)))++) {
		{
			jule::Ptr<_2114c1b73_Token> _54917_token = (*(_54771_tokens))[(*(_54762_i))];;
			if ((_54917_token.get()._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*(_54738_param)).get()._field_Variadic) {
				_1e7bbe411_pushErr(_self_, _54917_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1b8d1b955;
			};
			(*(_54738_param)).get()._field_Variadic=true;
		}
	_iter_next_1b8d1b955:;
	}
	_iter_end_1b8d1b955:;;
}



inline void _1e7bc3107_buildParamType(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Ptr<_213c52137_ParamDecl>* _56239_param, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _56263_tokens) {
	jule::I32 _56317_i = 0LL;;
	_1e7bc2cd8_paramTypeBegin(_self_.ptr(), _56239_param, &(_56317_i), _56263_tokens);
	if ((_56317_i >= (*(_56263_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, _56263_tokens, (&(_56317_i)), true);
		(*(_56239_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_56317_i < (*(_56263_tokens)).len())) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_56263_tokens))[_56317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1e7bc3426_buildParamBody(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Ptr<_213c52137_ParamDecl>* _57539_param, jule::Slice<jule::Ptr<_2114c1b73_Token>> _57562_tokens) {
	jule::Ptr<_2114c1b73_Token> _57617_tok = _57562_tokens[0LL];;
	if ((_57562_tokens.len() == 1LL)) {
		(*(_57539_param)).get()._field_Ident=_57617_tok.get()._field_Kind;
		return;;
	} else if ((_57562_tokens.len() < 3LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), _57617_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_57562_tokens[1LL].get()._field_Id != static_cast<jule::U32>(8LLU))) {
		(*(_57539_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_1e7bc3107_buildParamType(_self_, _57539_param, &(_57562_tokens));
		return;;
	};
	(*(_57539_param)).get()._field_Ident=_57617_tok.get()._field_Kind;
	_57562_tokens=_57562_tokens.slice(2LL);
	_1e7bc3107_buildParamType(_self_, _57539_param, &(_57562_tokens));
}



inline jule::Ptr<_213c52137_ParamDecl> _1e7bc3734_buildParam(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _59534_tokens) {
	jule::Ptr<_213c52137_ParamDecl> _59617_param = jule::new_ptr<_213c52137_ParamDecl>(_213c52137_ParamDecl{._field_Token=_59534_tokens[0LL], });;
	if ((_59617_param.get()._field_Token.get()._field_Id == static_cast<jule::U32>(32LLU))) {
		_59617_param.get()._field_Mutable=true;
		if ((_59534_tokens.len() == 1LL)) {
			_1e7bbe411_pushErr(_self_.ptr(), _59534_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_59534_tokens=_59534_tokens.slice(1LL);
		_59617_param.get()._field_Token=_59534_tokens[0LL];
	};
	if ((_59534_tokens.len() >= 3LL)) {
		if ((_59617_param.get()._field_Token.get()._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_59534_tokens.len() == 1LL)) {
				_1e7bbe411_pushErr(_self_.ptr(), _59534_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_59534_tokens[1LL].get()._field_Id == static_cast<jule::U32>(1LLU)) && (_59534_tokens[2LL].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
				_59617_param.get()._field_Reference=true;
				_59534_tokens=_59534_tokens.slice(1LL);
				_59617_param.get()._field_Token=_59534_tokens[0LL];
			};
		};
	};
	if ((_59617_param.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_59617_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1e7bc3107_buildParamType(_self_, &(_59617_param), &(_59534_tokens));
	} else {
		_1e7bc3426_buildParamBody(_self_, &(_59617_param), _59534_tokens);
	};
	return _59617_param;;
}



inline void _1e7bc39a9_checkParams(_1e7bbd9e8_parser* _self_, jule::Slice<jule::Ptr<_213c52137_ParamDecl>>* _63835_params) {
	{
		auto expr = _63835_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8d290b1:;
		if (it != expr_end) {
			jule::Ptr<_213c52137_ParamDecl> _63921_param = *it;
			{
				if ((_213c5249a_IsSelf(_63921_param.ptr()) || (_63921_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1b8d290b1;
				};
				if ((_63921_param.get()._field_Token == nullptr)) {
					_1e7bbe411_pushErr(_self_, _63921_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_63921_param.get()._field_Kind=jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=_63921_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_213c423e1_IdentTypeDecl>(_213c423e1_IdentTypeDecl{._field_Token=_63921_param.get()._field_Token, ._field_Ident=_63921_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type20)});
					_63921_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1b8d290b1:;
			++it;
			goto _iter_begin_1b8d290b1;
		}
		_iter_end_1b8d290b1:;
	};
}



inline jule::Slice<jule::Ptr<_213c52137_ParamDecl>> _1e7bc3d61_buildParams(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _65836_tokens, jule::Bool _65854_method) {
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _65918_parts;;
	jule::Slice<_2110be2cb_Log> _65925_errs;;
	({
		__jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1e7bbc70b_parts(_65836_tokens, static_cast<jule::U32>(5LLU), true);
		_65918_parts = __jule_assign_result.__jule_result_arg0;
		_65925_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_65925_errs);;
	if ((_65918_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_213c52137_ParamDecl>> _66517_params = nullptr;;
	if ((_65854_method && (_65918_parts.len() > 0LL))) {
		jule::Ptr<_213c52137_ParamDecl> _66721_param = _1e7bc2920_buildSelfParam(_self_.ptr(), _65918_parts[0LL]);;
		if (((_66721_param != nullptr) && _213c5249a_IsSelf(_66721_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_213c52137_ParamDecl>> &__jule_push_dest = _66517_params; __jule_push_dest.push(_66721_param); };
			_65918_parts=_65918_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_65918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8d33d02:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _67421_part = *it;
			{
				jule::Ptr<_213c52137_ParamDecl> _67521_param = _1e7bc3734_buildParam(_self_, _67421_part);;
				if ((_67521_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_213c52137_ParamDecl>> &__jule_push_dest = _66517_params; __jule_push_dest.push(_67521_param); };
				};
			}
			_iter_next_1b8d33d02:;
			++it;
			goto _iter_begin_1b8d33d02;
		}
		_iter_end_1b8d33d02:;
	};
	_1e7bc39a9_checkParams(_self_.ptr(), &(_66517_params));
	return _66517_params;;
}



inline __jule_tuple_x_213c44a97_RetTypeDecl__jule_tuple_bool _1e7bc4218_buildMultiRetType(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _68542_tokens, jule::I32* _68565_i) {
	__jule_tuple_x_213c44a97_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_213c44a97_RetTypeDecl>();
	((*(_68565_i)))++;
	if (((*(_68565_i)) >= (*(_68542_tokens)).len())) {
		((*(_68565_i)))--;
		({
			__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, _68542_tokens, (&((*(_68565_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_68565_i)))--;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _69517_rangeTokens = _1e7bbc079_range(_68565_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _68542_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _69718_parts;;
	jule::Slice<_2110be2cb_Log> _69725_errs;;
	({
		__jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1e7bbc70b_parts(&(_69517_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_69718_parts = __jule_assign_result.__jule_result_arg0;
		_69725_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_69725_errs);;
	if ((_69718_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> _70317_types = jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>>::alloc(0LL, _69718_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_2114c1b73_Token>>::alloc(0LL, _69718_parts.len());
	{
		auto expr = &(_69718_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8d38796:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _70521_part = *it;
			{
				jule::Ptr<_2114c1b73_Token> _70621_token = _70521_part[0LL];;
				jule::I32 _70721_offset = 0LL;;
				if ((_70521_part.len() > 1LL)) {
					_70621_token=_70521_part[1LL];
					if ((_70621_token.get()._field_Id == static_cast<jule::U32>(8LLU))) {
						_70721_offset=2LL;
						if ((_70521_part.len() < 3LL)) {
							_1e7bbe411_pushErr(_self_.ptr(), _70621_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1b8d38796;
						};
					};
				};
				_70621_token=_70521_part[0LL];
				if ((_70721_offset != 2LL)) {
					jule::Ptr<_2114c1b73_Token> _72325_newToken = jule::new_ptr<_2114c1b73_Token>((*(_70621_token)));;
					_72325_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_2114c1b73_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_72325_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_2114c1b73_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_70621_token); };
				};
				jule::Ptr<_213c41d2a_TypeDecl> _73022_tk;;
				({
					__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, &(_70521_part), (&(_70721_offset)), true);
					_73022_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_70721_offset < _70521_part.len())) {
					_1e7bbe411_pushErr(_self_.ptr(), _70521_part[_70721_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> &__jule_push_dest = _70317_types; __jule_push_dest.push(_73022_tk); };
			}
			_iter_next_1b8d38796:;
			++it;
			goto _iter_begin_1b8d38796;
		}
		_iter_end_1b8d38796:;
	};
	if ((_70317_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=(*(_68542_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_213c43524_TupleTypeDecl>(_213c43524_TupleTypeDecl{._field_Types=_70317_types}), &__jule_any_type80)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_70317_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_213c44a97_RetTypeDecl__jule_tuple_bool _1e7bc45c0_buildRetType(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _75337_tokens, jule::I32* _75360_i) {
	__jule_tuple_x_213c44a97_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_213c44a97_RetTypeDecl>();
	if (((*(_75360_i)) >= (*(_75337_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_2114c1b73_Token> _75917_token = (*(_75337_tokens))[(*(_75360_i))];;
	{
		auto &_match_expr{ _75917_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1b8d42272:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1b8d422d8:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1b8d4234e:;
			{
				if ((((*(_75360_i)) + 1LL) >= (*(_75337_tokens)).len())) {
					_1e7bbe411_pushErr(_self_.ptr(), _75917_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_75360_i)))++;
				_75917_token=(*(_75337_tokens))[(*(_75360_i))];
				{
					auto &_match_expr{ _75917_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8d43d89:;
						{
							({
								__jule_tuple_x_213c44a97_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc4218_buildMultiRetType(_self_, _75337_tokens, _75360_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1b8d43e00:;
						{
							_1e7bbe411_pushErr(_self_.ptr(), _75917_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1b8d43d34:;
				};
				({
					__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, _75337_tokens, (&((*(_75360_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1b8d4220b:;
	};
	((*(_75360_i)))++;
	_1e7bbe411_pushErr(_self_.ptr(), _75917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_213c53457_FnDecl> _1e7bc4a21_buildFnPrototype(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _79241_tokens, jule::I32* _79264_i, jule::Bool _79272_method) {
	jule::Ptr<_213c53457_FnDecl> _79317_f = jule::new_ptr<_213c53457_FnDecl>(_213c53457_FnDecl{._field_Token=(*(_79241_tokens))[(*(_79264_i))], });;
	if ((_79317_f.get()._field_Token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		_79317_f.get()._field_Statically=true;
		((*(_79264_i)))++;
		if (((*(_79264_i)) >= (*(_79241_tokens)).len())) {
			_1e7bbe411_pushErr(_self_.ptr(), _79317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_79317_f.get()._field_Token=(*(_79241_tokens))[(*(_79264_i))];
	};
	if ((_79317_f.get()._field_Token.get()._field_Id == static_cast<jule::U32>(31LLU))) {
		_79317_f.get()._field_Unsafety=true;
		((*(_79264_i)))++;
		if (((*(_79264_i)) >= (*(_79241_tokens)).len())) {
			_1e7bbe411_pushErr(_self_.ptr(), _79317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_79317_f.get()._field_Token=(*(_79241_tokens))[(*(_79264_i))];
	};
	((*(_79264_i)))++;
	if (((*(_79264_i)) >= (*(_79241_tokens)).len())) {
		_1e7bbe411_pushErr(_self_.ptr(), _79317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_2114c1b73_Token> _82613_tok = (*(_79241_tokens))[(*(_79264_i))];;
	if ((_82613_tok.get()._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_79264_i)))++;
		if (((*(_79264_i)) >= (*(_79241_tokens)).len())) {
			_1e7bbe411_pushErr(_self_.ptr(), _79317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_79317_f.get()._field_Ident=_82613_tok.get()._field_Kind;
	} else {
		_79317_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_2114c1b73_Token> _83813_errorToken = (*(_79241_tokens))[(*(_79264_i))];;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _83917_genericsTokens = _1e7bbc079_range(_79264_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _79241_tokens);;
	if ((_83917_genericsTokens != nullptr)) {
		_79317_f.get()._field_Generics=_1e7bc2612_buildGenerics(_self_, &(_83917_genericsTokens), &(_83813_errorToken));
	};
	if (((*(_79241_tokens))[(*(_79264_i))].get()._field_Id != static_cast<jule::U32>(74LLU))) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_79241_tokens))[(*(_79264_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _84917_paramsToks = _1e7bbc079_range(_79264_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _79241_tokens);;
	if ((_84917_paramsToks.len() > 0LL)) {
		_79317_f.get()._field_Params=_1e7bc3d61_buildParams(_self_, &(_84917_paramsToks), _79272_method);
	};
	if (((*(_79264_i)) < (*(_79241_tokens)).len())) {
		jule::Ptr<_2114c1b73_Token> _85517_token = (*(_79241_tokens))[(*(_79264_i))];;
		if ((_85517_token.get()._field_Id == static_cast<jule::U32>(68LLU))) {
			_79317_f.get()._field_Exceptional=true;
			((*(_79264_i)))++;
		};
	};
	_79317_f.get()._field_Public=_1cdcce23d_isPub(&(_79317_f.get()._field_Ident));
	({
		__jule_tuple_x_213c44a97_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc45c0_buildRetType(_self_, _79241_tokens, _79264_i);
		_79317_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _79317_f;;
}



inline jule::Ptr<_213c53457_FnDecl> _1e7bc4e72_buildFn(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _86932_tokens, jule::Bool _86950_method, jule::Bool _86964_prototype) {
	jule::I32 _87017_i = 0LL;;
	jule::Ptr<_213c53457_FnDecl> _87117_f = _1e7bc4a21_buildFnPrototype(_self_, _86932_tokens, &(_87017_i), _86950_method);;
	if (_86964_prototype) {
		if ((_87017_i < (*(_86932_tokens)).len())) {
			_1e7bbe411_pushErr(_self_.ptr(), (*(_86932_tokens))[(_87017_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _87117_f;;
	} else if ((_87117_f == nullptr)) {
		return _87117_f;;
	};
	if ((_87017_i >= (*(_86932_tokens)).len())) {
		_1e7bbdcd4_stop(_self_.ptr());
		_1e7bbe411_pushErr(_self_.ptr(), _87117_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _88717_blockTokens = _1e7bbc079_range(&(_87017_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _86932_tokens);;
	if ((_88717_blockTokens != nullptr)) {
		_87117_f.get()._field_Scope=_1e7bc0478_buildScope(_self_, &(_88717_blockTokens), (*(_86932_tokens))[(_87017_i - 1LL)]);
		_87117_f.get()._field_Scope.get()._field_Unsafety=_87117_f.get()._field_Unsafety;
		if ((_87017_i < (*(_86932_tokens)).len())) {
			_1e7bbe411_pushErr(_self_.ptr(), (*(_86932_tokens))[_87017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1e7bbdcd4_stop(_self_.ptr());
		_1e7bbe411_pushErr(_self_.ptr(), _87117_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _87117_f;;
}



inline jule::Slice<jule::Ptr<_2114c1b73_Token>> _1e7bc5280_getUseDeclSelectors(_1e7bbd9e8_parser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _90342_tokens) {
	jule::I32 _90417_i = 0LL;;
	_90342_tokens=_1e7bbc079_range(&(_90417_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_90342_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _90618_parts;;
	jule::Slice<_2110be2cb_Log> _90625_errs;;
	({
		__jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1e7bbc70b_parts(&(_90342_tokens), static_cast<jule::U32>(5LLU), true);
		_90618_parts = __jule_assign_result.__jule_result_arg0;
		_90625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_90625_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_90625_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _91217_selectors = jule::Slice<jule::Ptr<_2114c1b73_Token>>::alloc(0LL, _90618_parts.len());;
	{
		auto expr = &(_90618_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8d58750:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _91321_part = *it;
			{
				if ((_91321_part.len() > 1LL)) {
					_1e7bbe411_pushErr(_self_, _91321_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_2114c1b73_Token> _91721_tok = _91321_part[0LL];;
				if (((_91721_tok.get()._field_Id != static_cast<jule::U32>(1LLU)) && (_91721_tok.get()._field_Id != static_cast<jule::U32>(24LLU)))) {
					_1e7bbe411_pushErr(_self_, _91721_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1e7bbe730_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1b8d58750;
				};
				{ jule::Slice<jule::Ptr<_2114c1b73_Token>> &__jule_push_dest = _91217_selectors; __jule_push_dest.push(_91721_tok); };
			}
			_iter_next_1b8d58750:;
			++it;
			goto _iter_begin_1b8d58750;
		}
		_iter_end_1b8d58750:;
	};
	return _91217_selectors;;
}



inline void _1e7bc559e_buildBindUseDecl(_1e7bbd9e8_parser* _self_, jule::Ptr<_213c59183_UseDecl>* _92840_decl, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _92857_tokens) {
	if (((*(_92857_tokens)).len() > 1LL)) {
		_1e7bbe411_pushErr(_self_, (*(_92857_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_2114c1b73_Token> _93213_token = (*(_92857_tokens))[0LL];;
	if (((_93213_token.get()._field_Id != static_cast<jule::U32>(4LLU)) || ((_93213_token.get()._field_Kind[0LL] != '`') && (_93213_token.get()._field_Kind[0LL] != '\"')))) {
		_1e7bbe411_pushErr(_self_, _93213_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_92840_decl)).get()._field_Binded=true;
	(*(_92840_decl)).get()._field_LinkPath=_93213_token.get()._field_Kind.slice(1LL, (_93213_token.get()._field_Kind.len() - 1LL));
}



inline void _1e7bc58bd_buildStdUseDecl(_1e7bbd9e8_parser* _self_, jule::Ptr<_213c59183_UseDecl>* _94139_decl, jule::Slice<jule::Ptr<_2114c1b73_Token>> _94159_tokens) {
	(*(_94139_decl)).get()._field_Std=true;
	jule::Ptr<_2114c1b73_Token> _94417_token = _94159_tokens[0LL];;
	if ((_94159_tokens.len() < 3LL)) {
		_1e7bbe411_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_94159_tokens=_94159_tokens.slice(2LL);
	_94417_token=_94159_tokens[(_94159_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _94417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1b8d60e61:;
			{
				_1e7bbe411_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1b8d60ed8:;
			{
				jule::Slice<jule::Ptr<_2114c1b73_Token>> _95721_selectors = nullptr;;
				({
					__jule_tuple_sx_2114c1b73_Token__jule_tuple_sx_2114c1b73_Token __jule_assign_result = _1e7bbc321_rangeLast(&(_94159_tokens));
					_94159_tokens = __jule_assign_result.__jule_result_arg0;
					_95721_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_94139_decl)).get()._field_Selected=_1e7bc5280_getUseDeclSelectors(_self_, _95721_selectors);
				if ((_94159_tokens.len() == 0LL)) {
					_1e7bbe411_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94417_token=_94159_tokens[(_94159_tokens.len() - 1LL)];
				if ((_94417_token.get()._field_Id != static_cast<jule::U32>(19LLU))) {
					_1e7bbe411_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94159_tokens=_94159_tokens.slice(0LL, (_94159_tokens.len() - 1LL));
				if ((_94159_tokens.len() == 0LL)) {
					_1e7bbe411_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b8d61060:;
			{
				_94159_tokens=_94159_tokens.slice(0LL, (_94159_tokens.len() - 1LL));
				if ((_94159_tokens.len() == 0LL)) {
					_1e7bbe411_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94417_token=_94159_tokens[(_94159_tokens.len() - 1LL)];
				if ((_94417_token.get()._field_Id != static_cast<jule::U32>(19LLU))) {
					_1e7bbe411_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94159_tokens=_94159_tokens.slice(0LL, (_94159_tokens.len() - 1LL));
				if ((_94159_tokens.len() == 0LL)) {
					_1e7bbe411_pushErr(_self_, _94417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_94139_decl)).get()._field_Full=true;
			}
		}
		_match_end_1b8d60dd9:;
	};
	(*(_94139_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1e7bbd564_tokstoa(&(_94159_tokens)));
}



inline void _1e7bc5bdc_buildIdentUseDecl(_1e7bbd9e8_parser* _self_, jule::Ptr<_213c59183_UseDecl>* _99541_decl, jule::Slice<jule::Ptr<_2114c1b73_Token>> _99561_tokens) {
	(*(_99541_decl)).get()._field_Std=false;
	jule::Ptr<_2114c1b73_Token> _99817_token = _99561_tokens[(_99561_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _99817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1b8d686a5:;
			{
				_1e7bbe411_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1b8d68c27:;
			{
				jule::Slice<jule::Ptr<_2114c1b73_Token>> _100421_selectors = nullptr;;
				({
					__jule_tuple_sx_2114c1b73_Token__jule_tuple_sx_2114c1b73_Token __jule_assign_result = _1e7bbc321_rangeLast(&(_99561_tokens));
					_99561_tokens = __jule_assign_result.__jule_result_arg0;
					_100421_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_99541_decl)).get()._field_Selected=_1e7bc5280_getUseDeclSelectors(_self_, _100421_selectors);
				if ((_99561_tokens.len() == 0LL)) {
					_1e7bbe411_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99817_token=_99561_tokens[(_99561_tokens.len() - 1LL)];
				if ((_99817_token.get()._field_Id != static_cast<jule::U32>(19LLU))) {
					_1e7bbe411_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99561_tokens=_99561_tokens.slice(0LL, (_99561_tokens.len() - 1LL));
				if ((_99561_tokens.len() == 0LL)) {
					_1e7bbe411_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b8d68d6a:;
			{
				_99561_tokens=_99561_tokens.slice(0LL, (_99561_tokens.len() - 1LL));
				if ((_99561_tokens.len() == 0LL)) {
					_1e7bbe411_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99817_token=_99561_tokens[(_99561_tokens.len() - 1LL)];
				if ((_99817_token.get()._field_Id != static_cast<jule::U32>(19LLU))) {
					_1e7bbe411_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99561_tokens=_99561_tokens.slice(0LL, (_99561_tokens.len() - 1LL));
				if ((_99561_tokens.len() == 0LL)) {
					_1e7bbe411_pushErr(_self_, _99817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_99541_decl)).get()._field_Full=true;
			}
		}
		_match_end_1b8d68aa1:;
	};
	(*(_99541_decl)).get()._field_LinkPath=_1e7bbd564_tokstoa(&(_99561_tokens));
}



inline void _1e7bc600b_parseUseDecl(_1e7bbd9e8_parser* _self_, jule::Ptr<_213c59183_UseDecl>* _104336_decl, jule::Slice<jule::Ptr<_2114c1b73_Token>> _104356_tokens) {
	if ((*(_104336_decl)).get()._field_Binded) {
		_1e7bc559e_buildBindUseDecl(_self_, _104336_decl, &(_104356_tokens));
		return;;
	};
	jule::Ptr<_2114c1b73_Token> _104917_token = _104356_tokens[0LL];;
	if ((_104917_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1e7bbe411_pushErr(_self_, _104917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_104356_tokens.len() > 2LL) && (_104356_tokens[1LL].get()._field_Id == static_cast<jule::U32>(9LLU)))) {
		(*(_104336_decl)).get()._field_Alias=_104917_token.get()._field_Kind;
		if ((_104356_tokens[2LL].get()._field_Id != static_cast<jule::U32>(1LLU))) {
			_1e7bbe411_pushErr(_self_, _104917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1e7bbe730_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_104356_tokens=_104356_tokens.slice(2LL);
		_104917_token=_104356_tokens[0LL];
	};
	;
	{
		
		if (_104917_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_1b8d74c11:;
			{
				_1e7bc58bd_buildStdUseDecl(_self_, _104336_decl, _104356_tokens);
			}
		}
		else {
			_case_begin_1b8d748ae:;
			{
				_1e7bc5bdc_buildIdentUseDecl(_self_, _104336_decl, _104356_tokens);
			}
		}
		_match_end_1b8d74859:;
	};
}



inline jule::Ptr<_213c59183_UseDecl> _1e7bc63b3_buildUseDecl(_1e7bbd9e8_parser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _107735_tokens, jule::Bool _107753_binded) {
	jule::Ptr<_213c59183_UseDecl> _107817_decl = jule::new_ptr<_213c59183_UseDecl>(_213c59183_UseDecl{._field_Token=_107735_tokens[0LL], ._field_Binded=_107753_binded, });;
	if ((_107735_tokens.len() < 2LL)) {
		_1e7bbe411_pushErr(_self_, _107817_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_107735_tokens=_107735_tokens.slice(1LL);
	_1e7bc600b_parseUseDecl(_self_, &(_107817_decl), _107735_tokens);
	return _107817_decl;;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1e7bc676a_buildTypeEnumItemKind(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::I32* _109146_i, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _109159_tokens) {
	jule::I32 _109217_braceN = 0LL;;
	jule::I32 _109313_exprStart = (*(_109146_i));;
	for (; ((*(_109146_i)) < (*(_109159_tokens)).len()); ((*(_109146_i)))++) {
		{
			jule::Ptr<_2114c1b73_Token> _109517_t = (*(_109159_tokens))[(*(_109146_i))];;
			{
				auto &_match_expr{ _109517_t.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b8d78c26:;
					{
						(_109217_braceN)++;
						goto _iter_next_1b8d780dd;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b8d78ce2:;
					{
						(_109217_braceN)--;
					}
				}
				_match_end_1b8d78b7c:;
			};
			if ((_109217_braceN > 0LL)) {
				goto _iter_next_1b8d780dd;
			};
			if (((_109517_t.get()._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_109146_i)) + 1LL) >= (*(_109159_tokens)).len()))) {
				jule::Slice<jule::Ptr<_2114c1b73_Token>> _111125_kindTokens = nullptr;;
				if ((_109517_t.get()._field_Id == static_cast<jule::U32>(5LLU))) {
					_111125_kindTokens=(*(_109159_tokens)).slice(_109313_exprStart, (*(_109146_i)));
				} else {
					_111125_kindTokens=(*(_109159_tokens)).slice(_109313_exprStart);
				};
				jule::I32 _111725_j = 0LL;;
				jule::Ptr<_213c41d2a_TypeDecl> _111826_kind;;
				({
					__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, &(_111125_kindTokens), (&(_111725_j)), true);
					_111826_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_111725_j < _111125_kindTokens.len())) {
					_1e7bbe411_pushErr(_self_.ptr(), _111125_kindTokens[_111725_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _111826_kind;;
			};
		}
	_iter_next_1b8d780dd:;
	}
	_iter_end_1b8d780dd:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_213c5a904_TypeEnumItemDecl>> _1e7bc6a78_buildTypeEnumItems(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _112843_tokens) {
	jule::Slice<jule::Ptr<_213c5a904_TypeEnumItemDecl>> _112917_items = jule::Slice<jule::Ptr<_213c5a904_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _113017_i = 0LL;;
	for (; (_113017_i < (*(_112843_tokens)).len()); (_113017_i)++) {
		{
			jule::Ptr<_2114c1b73_Token> _113221_t = (*(_112843_tokens))[_113017_i];;
			jule::Ptr<_213c5a904_TypeEnumItemDecl> _113321_item = jule::new_ptr<_213c5a904_TypeEnumItemDecl>();;
			_113321_item.get()._field_Token=_113221_t;
			if (((_113321_item.get()._field_Token.get()._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_112843_tokens)).len() - _113017_i) > 2LL))) {
				_113221_t=(*(_112843_tokens))[(_113017_i + 1LL)];
				if ((_113221_t.get()._field_Id == static_cast<jule::U32>(8LLU))) {
					_113321_item.get()._field_Ident=_113321_item.get()._field_Token.get()._field_Kind;
					_113017_i+=2LL;
					if (((_113017_i >= (*(_112843_tokens)).len()) || ((*(_112843_tokens))[_113017_i].get()._field_Id == static_cast<jule::U32>(5LLU)))) {
						_1e7bbe411_pushErr(_self_.ptr(), _113221_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1b8d7da0b;
					};
				};
			};
			_113321_item.get()._field_Kind=_1e7bc676a_buildTypeEnumItemKind(_self_, &(_113017_i), _112843_tokens);
			{ jule::Slice<jule::Ptr<_213c5a904_TypeEnumItemDecl>> &__jule_push_dest = _112917_items; __jule_push_dest.push(_113321_item); };
		}
	_iter_next_1b8d7da0b:;
	}
	_iter_end_1b8d7da0b:;;
	return _112917_items;;
}



inline jule::Ptr<_213c5b00e_TypeEnumDecl> _1e7bc6d86_buildTypeEnumDecl(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _115242_tokens) {
	jule::I32 _115317_i = 1LL;;
	jule::Ptr<_213c5b00e_TypeEnumDecl> _115417_e = jule::new_ptr<_213c5b00e_TypeEnumDecl>(_213c5b00e_TypeEnumDecl{._field_Token=(*(_115242_tokens))[_115317_i], });;
	if ((_115417_e.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1e7bbe411_pushErr(_self_.ptr(), _115417_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_115417_e.get()._field_Ident=_115417_e.get()._field_Token.get()._field_Kind;
	_115317_i+=3LL;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _116417_itemTokens = _1e7bbc079_range(&(_115317_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _115242_tokens);;
	if ((_116417_itemTokens == nullptr)) {
		_1e7bbdcd4_stop(_self_.ptr());
		_1e7bbe411_pushErr(_self_.ptr(), _115417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _115417_e;;
	} else if ((_115317_i < (*(_115242_tokens)).len())) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_115242_tokens))[_115317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_115417_e.get()._field_Public=_1cdcce23d_isPub(&(_115417_e.get()._field_Ident));
	_115417_e.get()._field_End=(*(_115242_tokens))[(_115317_i - 1LL)];
	_115417_e.get()._field_Items=_1e7bc6a78_buildTypeEnumItems(_self_, &(_116417_itemTokens));
	return _115417_e;;
}



inline jule::Ptr<_213c45ea5_Expr> _1e7bc723d_buildEnumItemExpr(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::I32* _117942_i, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _117955_tokens) {
	jule::I32 _118017_braceN = 0LL;;
	jule::I32 _118113_exprStart = (*(_117942_i));;
	for (; ((*(_117942_i)) < (*(_117955_tokens)).len()); ((*(_117942_i)))++) {
		{
			jule::Ptr<_2114c1b73_Token> _118317_t = (*(_117955_tokens))[(*(_117942_i))];;
			{
				auto &_match_expr{ _118317_t.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b8d88d79:;
					{
						(_118017_braceN)++;
						goto _iter_next_1b8d88241;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b8d88e45:;
					{
						(_118017_braceN)--;
					}
				}
				_match_end_1b8d88cd0:;
			};
			if ((_118017_braceN > 0LL)) {
				goto _iter_next_1b8d88241;
			};
			if (((_118317_t.get()._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_117942_i)) + 1LL) >= (*(_117955_tokens)).len()))) {
				jule::Slice<jule::Ptr<_2114c1b73_Token>> _119925_exprTokens = nullptr;;
				if ((_118317_t.get()._field_Id == static_cast<jule::U32>(5LLU))) {
					_119925_exprTokens=(*(_117955_tokens)).slice(_118113_exprStart, (*(_117942_i)));
				} else {
					_119925_exprTokens=(*(_117955_tokens)).slice(_118113_exprStart);
				};
				return _1e7bbea3d_buildExpr(_self_, &(_119925_exprTokens));;
			};
		}
	_iter_next_1b8d88241:;
	}
	_iter_end_1b8d88241:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_213c59606_EnumItemDecl>> _1e7bc754b_buildEnumItems(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _121139_tokens) {
	jule::Slice<jule::Ptr<_213c59606_EnumItemDecl>> _121217_items = jule::Slice<jule::Ptr<_213c59606_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I32 _121317_i = 0LL;;
	for (; (_121317_i < (*(_121139_tokens)).len()); (_121317_i)++) {
		{
			jule::Ptr<_2114c1b73_Token> _121521_t = (*(_121139_tokens))[_121317_i];;
			jule::Ptr<_213c59606_EnumItemDecl> _121621_item = jule::new_ptr<_213c59606_EnumItemDecl>();;
			_121621_item.get()._field_Token=_121521_t;
			if ((_121621_item.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
				_1e7bbe411_pushErr(_self_.ptr(), _121621_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_121621_item.get()._field_Ident=_121621_item.get()._field_Token.get()._field_Kind;
			if ((((_121317_i + 1LL) >= (*(_121139_tokens)).len()) || ((*(_121139_tokens))[(_121317_i + 1LL)].get()._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_121317_i + 1LL) < (*(_121139_tokens)).len())) {
					(_121317_i)++;
				};
				{ jule::Slice<jule::Ptr<_213c59606_EnumItemDecl>> &__jule_push_dest = _121217_items; __jule_push_dest.push(_121621_item); };
				goto _iter_next_1b8d8c9c6;
			};
			(_121317_i)++;
			_121521_t=(*(_121139_tokens))[_121317_i];
			(_121317_i)++;
			if ((_121521_t.get()._field_Id != static_cast<jule::U32>(8LLU))) {
				_1e7bbe411_pushErr(_self_.ptr(), _121521_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1b8d8c9c6;
			};
			if (((_121317_i >= (*(_121139_tokens)).len()) || ((*(_121139_tokens))[_121317_i].get()._field_Id == static_cast<jule::U32>(5LLU)))) {
				_1e7bbe411_pushErr(_self_.ptr(), _121521_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1b8d8c9c6;
			};
			_121621_item.get()._field_Expr=_1e7bc723d_buildEnumItemExpr(_self_, &(_121317_i), _121139_tokens);
			{ jule::Slice<jule::Ptr<_213c59606_EnumItemDecl>> &__jule_push_dest = _121217_items; __jule_push_dest.push(_121621_item); };
		}
	_iter_next_1b8d8c9c6:;
	}
	_iter_end_1b8d8c9c6:;;
	return _121217_items;;
}



inline jule::Ptr<_213c5a12e_EnumDecl> _1e7bc7859_buildEnumDecl(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _124838_tokens) {
	if (((*(_124838_tokens)).len() < 3LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_124838_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213c5a12e_EnumDecl> _125317_e = jule::new_ptr<_213c5a12e_EnumDecl>(_213c5a12e_EnumDecl{._field_Token=(*(_124838_tokens))[1LL], });;
	if ((_125317_e.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1e7bbe411_pushErr(_self_.ptr(), _125317_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_125317_e.get()._field_Ident=_125317_e.get()._field_Token.get()._field_Kind;
	jule::I32 _126117_i = 2LL;;
	if (((*(_124838_tokens))[_126117_i].get()._field_Id == static_cast<jule::U32>(8LLU))) {
		(_126117_i)++;
		if ((_126117_i >= (*(_124838_tokens)).len())) {
			_1e7bbe411_pushErr(_self_.ptr(), (*(_124838_tokens))[(_126117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _125317_e;;
		};
		({
			__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, _124838_tokens, (&(_126117_i)), true);
			_125317_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_126117_i >= (*(_124838_tokens)).len())) {
			_1e7bbdcd4_stop(_self_.ptr());
			_1e7bbe411_pushErr(_self_.ptr(), _125317_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _125317_e;;
		};
	} else {
		_125317_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _127817_itemTokens = _1e7bbc079_range(&(_126117_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _124838_tokens);;
	if ((_127817_itemTokens == nullptr)) {
		_1e7bbdcd4_stop(_self_.ptr());
		_1e7bbe411_pushErr(_self_.ptr(), _125317_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _125317_e;;
	} else if ((_126117_i < (*(_124838_tokens)).len())) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_124838_tokens))[_126117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_125317_e.get()._field_Public=_1cdcce23d_isPub(&(_125317_e.get()._field_Ident));
	_125317_e.get()._field_End=(*(_124838_tokens))[(_126117_i - 1LL)];
	_125317_e.get()._field_Items=_1e7bc754b_buildEnumItems(_self_, &(_127817_itemTokens));
	return _125317_e;;
}



inline jule::Any _1e7bc7b67_buildNodeEnumDecl(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _129342_tokens) {
	if ((((*(_129342_tokens)).len() > 3LL) && ((*(_129342_tokens))[2LL].get()._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*(_129342_tokens))[3LL].get()._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_1e7bc6d86_buildTypeEnumDecl(_self_, _129342_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1e7bc7859_buildEnumDecl(_self_, _129342_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_213c5b273_FieldDecl> _1e7bc7e75_buildField(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _130234_tokens) {
	jule::Ptr<_213c5b273_FieldDecl> _130317_f = jule::new_ptr<_213c5b273_FieldDecl>();;
	_130317_f.get()._field_Mutable=(_130234_tokens[0LL].get()._field_Id == static_cast<jule::U32>(32LLU));
	if (_130317_f.get()._field_Mutable) {
		if ((_130234_tokens.len() == 1LL)) {
			_1e7bbe411_pushErr(_self_.ptr(), _130234_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_130234_tokens=_130234_tokens.slice(1LL);
	};
	_130317_f.get()._field_Token=_130234_tokens[0LL];
	if ((_130317_f.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1e7bbe411_pushErr(_self_.ptr(), _130317_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_130317_f.get()._field_Ident=_130317_f.get()._field_Token.get()._field_Kind;
	if ((_130234_tokens.len() == 1LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), _130234_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_130234_tokens.len() < 3LL) || (_130234_tokens[1LL].get()._field_Id != static_cast<jule::U32>(8LLU)))) {
		_1e7bbe411_pushErr(_self_.ptr(), _130234_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_130234_tokens=_130234_tokens.slice(2LL);
	jule::I32 _133117_i = 0LL;;
	({
		__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, &(_130234_tokens), (&(_133117_i)), true);
		_130317_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_133117_i < _130234_tokens.len())) {
		jule::Ptr<_2114c1b73_Token> _133417_token = _130234_tokens[_133117_i];;
		if ((_133417_token.get()._field_Id != static_cast<jule::U32>(71LLU))) {
			_1e7bbe411_pushErr(_self_.ptr(), _130234_tokens[_133117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_133117_i)++;
		if ((_133117_i >= _130234_tokens.len())) {
			_1e7bbe411_pushErr(_self_.ptr(), _133417_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_130234_tokens=_130234_tokens.slice(_133117_i);
		_130317_f.get()._field_Default=_1e7bbea3d_buildExpr(_self_, &(_130234_tokens));
	};
	_130317_f.get()._field_Public=_1cdcce23d_isPub(&(_130317_f.get()._field_Ident));
	return _130317_f;;
}



inline jule::Slice<jule::Ptr<_213c5b273_FieldDecl>> _1e7bc8283_buildStructDeclFields(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _135145_tokens) {
	jule::Slice<jule::Ptr<_213c5b273_FieldDecl>> _135217_fields = nullptr;;
	jule::Slice<jule::Ptr<_1e7ba19cb_stmt>> _135317_stmts = _1e7ba1d72_splitStmts(&(_135145_tokens));;
	{
		auto expr = &(_135317_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8da69ce:;
		if (it != expr_end) {
			jule::Ptr<_1e7ba19cb_stmt> _135421_stmt = *it;
			{
				_135145_tokens=_135421_stmt.get()._field_tokens;
				jule::Ptr<_213c5b273_FieldDecl> _135621_f = _1e7bc7e75_buildField(_self_, _135145_tokens);;
				{ jule::Slice<jule::Ptr<_213c5b273_FieldDecl>> &__jule_push_dest = _135217_fields; __jule_push_dest.push(_135621_f); };
			}
			_iter_next_1b8da69ce:;
			++it;
			goto _iter_begin_1b8da69ce;
		}
		_iter_end_1b8da69ce:;
	};
	return _135217_fields;;
}



inline jule::Ptr<_213c5bac0_StructDecl> _1e7bc8591_buildStructDecl(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _136240_tokens) {
	if (((*(_136240_tokens)).len() < 3LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_136240_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _136817_i = 1LL;;
	jule::Ptr<_213c5bac0_StructDecl> _136917_s = jule::new_ptr<_213c5bac0_StructDecl>(_213c5bac0_StructDecl{._field_Token=(*(_136240_tokens))[_136817_i], });;
	if ((_136917_s.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1e7bbe411_pushErr(_self_.ptr(), _136917_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_136817_i)++;
	if ((_136817_i >= (*(_136240_tokens)).len())) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_136240_tokens))[_136817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _136917_s;;
	};
	_136917_s.get()._field_Ident=_136917_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_2114c1b73_Token> _138313_errorToken = (*(_136240_tokens))[_136817_i];;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _138417_genericsTokens = _1e7bbc079_range(&(_136817_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _136240_tokens);;
	if ((_138417_genericsTokens != nullptr)) {
		_136917_s.get()._field_Generics=_1e7bc2612_buildGenerics(_self_, &(_138417_genericsTokens), &(_138313_errorToken));
	};
	if ((_136817_i >= (*(_136240_tokens)).len())) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_136240_tokens))[(_136817_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136917_s;;
	};
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _139417_bodyTokens = _1e7bbc079_range(&(_136817_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _136240_tokens);;
	if ((_139417_bodyTokens == nullptr)) {
		_1e7bbdcd4_stop(_self_.ptr());
		_1e7bbe411_pushErr(_self_.ptr(), _136917_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _136917_s;;
	};
	if ((_136817_i < (*(_136240_tokens)).len())) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_136240_tokens))[_136817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_136917_s.get()._field_Public=_1cdcce23d_isPub(&(_136917_s.get()._field_Ident));
	_136917_s.get()._field_Fields=_1e7bc8283_buildStructDeclFields(_self_, _139417_bodyTokens);
	_136917_s.get()._field_End=(*(_136240_tokens))[(_136817_i - 1LL)];
	return _136917_s;;
}



inline void _1e7bc8816_checkMethodReceiver(_1e7bbd9e8_parser* _self_, jule::Ptr<_213c53457_FnDecl>* _141039_f) {
	if ((*(_141039_f)).get()._field_Statically) {
		if ((((*(_141039_f)).get()._field_Params.len() > 0LL) && _213c5249a_IsSelf((*(_141039_f)).get()._field_Params[0LL].ptr()))) {
			_1e7bbe411_pushErr(_self_, (*(_141039_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_141039_f)).get()._field_Params.len() == 0LL)) {
		_1e7bbe411_pushErr(_self_, (*(_141039_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_213c52137_ParamDecl> _142213_param = (*(_141039_f)).get()._field_Params[0LL];;
	if ((!(_213c5249a_IsSelf(_142213_param.ptr())))) {
		_1e7bbe411_pushErr(_self_, (*(_141039_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1e7bc8b35_buildTraitBody(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Ptr<_213c5c296_TraitDecl>* _142939_t, jule::Slice<jule::Ptr<_2114c1b73_Token>> _142958_tokens) {
	jule::Slice<jule::Ptr<_1e7ba19cb_stmt>> _143017_stmts = _1e7ba1d72_splitStmts(&(_142958_tokens));;
	{
		auto expr = &(_143017_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8db47bc:;
		if (it != expr_end) {
			jule::Ptr<_1e7ba19cb_stmt> _143121_stmt = *it;
			{
				_142958_tokens=_143121_stmt.get()._field_tokens;
				if ((_142958_tokens.len() == 0LL)) {
					goto _iter_next_1b8db47bc;
				};
				{
					auto &_match_expr{ _142958_tokens[0LL].get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_1b8db702d:;
						{
							jule::Ptr<_213c53457_FnDecl> _143825_f = _1e7bc4e72_buildFn(_self_, &(_142958_tokens), true, true);;
							if ((_143825_f == nullptr)) {
								goto _match_end_1b8db58bc;
							};
							_1e7bc8816_checkMethodReceiver(_self_.ptr(), &(_143825_f));
							if ((_143825_f.get()._field_Generics.len() > 0LL)) {
								_1e7bbe411_pushErr(_self_.ptr(), _143825_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_213c53457_FnDecl>> &__jule_push_dest = (*(_142939_t)).get()._field_Methods; __jule_push_dest.push(_143825_f); };
						}
					}
					else {
						_case_begin_1b8db5317:;
						{
							jule::I32 _144825_i = 0LL;;
							jule::Ptr<_213c41d2a_TypeDecl> _144926_ti;;
							jule::Bool _144930_ok = false;;
							({
								__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, &(_142958_tokens), (&(_144825_i)), true);
								_144926_ti = __jule_assign_result.__jule_result_arg0;
								_144930_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_144930_ok))) {
								goto _match_end_1b8db58bc;
							};
							if ((_144825_i < _142958_tokens.len())) {
								_1e7bbe411_pushErr(_self_.ptr(), _142958_tokens[_144825_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> &__jule_push_dest = (*(_142939_t)).get()._field_Inherits; __jule_push_dest.push(_144926_ti); };
						}
					}
					_match_end_1b8db58bc:;
				};
			}
			_iter_next_1b8db47bc:;
			++it;
			goto _iter_begin_1b8db47bc;
		}
		_iter_end_1b8db47bc:;
	};
}



inline jule::Ptr<_213c5c296_TraitDecl> _1e7bc8e43_buildTraitDecl(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _146139_tokens) {
	if (((*(_146139_tokens)).len() < 3LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_146139_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213c5c296_TraitDecl> _146617_t = jule::new_ptr<_213c5c296_TraitDecl>(_213c5c296_TraitDecl{._field_Token=(*(_146139_tokens))[1LL], });;
	if ((_146617_t.get()._field_Token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1e7bbe411_pushErr(_self_.ptr(), _146617_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_146617_t.get()._field_Ident=_146617_t.get()._field_Token.get()._field_Kind;
	jule::I32 _147417_i = 2LL;;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _147517_bodyTokens = _1e7bbc079_range(&(_147417_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _146139_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_1e7bbdcd4_stop(_self_.ptr());
		_1e7bbe411_pushErr(_self_.ptr(), _146617_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_147417_i < (*(_146139_tokens)).len())) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_146139_tokens))[_147417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_146617_t.get()._field_Public=_1cdcce23d_isPub(&(_146617_t.get()._field_Ident));
	_1e7bc8b35_buildTraitBody(_self_, &(_146617_t), _147517_bodyTokens);
	_146617_t.get()._field_End=(*(_146139_tokens))[(_147417_i - 1LL)];
	return _146617_t;;
}



inline jule::Ptr<_213c53457_FnDecl> _1e7bc9251_buildBindFn(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _149135_tokens) {
	_149135_tokens=_149135_tokens.slice(1LL);
	jule::Ptr<_213c53457_FnDecl> _149317_f = _1e7bc4e72_buildFn(_self_, &(_149135_tokens), false, true);;
	if ((_149317_f != nullptr)) {
		_149317_f.get()._field_Public=false;
		_149317_f.get()._field_Binded=true;
	};
	return _149317_f;;
}



inline jule::Ptr<_213c54436_VarDecl> _1e7bc955e_buildBindVar(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _150136_tokens) {
	_150136_tokens=_150136_tokens.slice(1LL);
	jule::Ptr<_213c54436_VarDecl> _150317_v = _1e7bc1e4c_buildVar(_self_, _150136_tokens);;
	if ((_150317_v != nullptr)) {
		_150317_v.get()._field_Public=false;
		_150317_v.get()._field_Binded=true;
		if ((_150317_v.get()._field_Expr != nullptr)) {
			_1e7bbe411_pushErr(_self_.ptr(), _150317_v.get()._field_Token, jule::Str("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _150317_v;;
}



inline jule::Ptr<_213c5bac0_StructDecl> _1e7bc986c_buildBindStruct(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _151439_tokens) {
	_151439_tokens=_151439_tokens.slice(1LL);
	jule::Ptr<_213c5bac0_StructDecl> _151617_s = _1e7bc8591_buildStructDecl(_self_, &(_151439_tokens));;
	if ((_151617_s != nullptr)) {
		_151617_s.get()._field_Public=false;
		{
			auto expr = &(_151617_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8dc439d:;
			if (it != expr_end) {
				jule::Ptr<_213c5b273_FieldDecl> _151925_f = *it;
				{
					_151925_f.get()._field_Public=true;
				}
				_iter_next_1b8dc439d:;
				++it;
				goto _iter_begin_1b8dc439d;
			}
			_iter_end_1b8dc439d:;
		};
		_151617_s.get()._field_Binded=true;
	};
	return _151617_s;;
}



inline jule::Ptr<_213c57c97_TypeAliasDecl> _1e7bc9b7a_buildBindTypeAlias(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _152842_tokens) {
	_152842_tokens=_152842_tokens.slice(1LL);
	jule::Ptr<_213c57c97_TypeAliasDecl> _153017_t = _1e7bc1138_buildTypeAliasDecl(_self_, &(_152842_tokens));;
	if ((_153017_t != nullptr)) {
		_153017_t.get()._field_Public=false;
		_153017_t.get()._field_Binded=true;
	};
	return _153017_t;;
}



inline jule::Ptr<_213c59183_UseDecl> _1cdccaa42_buildBindUse(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _153836_tokens) {
	if ((_153836_tokens.len() == 1LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), _153836_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_153836_tokens=_153836_tokens.slice(1LL);
	;
	return _1e7bc63b3_buildUseDecl(_self_.ptr(), _153836_tokens, true);;
}



inline jule::Any _1cdccad2d_buildBind(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _154934_tokens) {
	jule::Ptr<_2114c1b73_Token> _155017_token = (*(_154934_tokens))[0LL];;
	if (((*(_154934_tokens)).len() == 1LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), _155017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155017_token=(*(_154934_tokens))[1LL];
	{
		auto &_match_expr{ _155017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b8dc88be:;
			{
				return jule::Any(_1e7bc9251_buildBindFn(_self_, (*(_154934_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1b8dc9392:;
			{
				return jule::Any(_1e7bc955e_buildBindVar(_self_, (*(_154934_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1b8dc9408:;
			{
				return jule::Any(_1e7bc986c_buildBindStruct(_self_, (*(_154934_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b8dc946e:;
			{
				return jule::Any(_1e7bc9b7a_buildBindTypeAlias(_self_, (*(_154934_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1b8dc932b:;
			{
				_1e7bbe411_pushErr(_self_.ptr(), _155017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b8dc92c6:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c53457_FnDecl> _1cdccb13b_getMethod(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _157334_tokens) {
	jule::I32 _157417_i = 0LL;;
	jule::Ptr<_2114c1b73_Token> _157517_token = (*(_157334_tokens))[_157417_i];;
	if ((_157517_token.get()._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_157417_i + 1LL) >= (*(_157334_tokens)).len())) {
			_1e7bbe411_pushErr(_self_.ptr(), _157517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157417_i)++;
		_157517_token=(*(_157334_tokens))[_157417_i];
	};
	if ((_157517_token.get()._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_157417_i + 1LL) >= (*(_157334_tokens)).len())) {
			_1e7bbe411_pushErr(_self_.ptr(), _157517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157417_i)++;
		_157517_token=(*(_157334_tokens))[_157417_i];
	};
	if ((_157517_token.get()._field_Id != static_cast<jule::U32>(29LLU))) {
		_1e7bbe411_pushErr(_self_.ptr(), _157517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1e7bc4e72_buildFn(_self_, _157334_tokens, true, false);;
}



inline void _1cdccb45a_parseImplBody(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Ptr<_213c5c8a1_Impl>* _160238_ipl, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _160255_tokens) {
	jule::Slice<jule::Ptr<_1e7ba19cb_stmt>> _160317_stmts = _1e7ba1d72_splitStmts(_160255_tokens);;
	{
		auto expr = &(_160317_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8dd0c8e:;
		if (it != expr_end) {
			jule::Ptr<_1e7ba19cb_stmt> _160421_stmt = *it;
			{
				(*(_160255_tokens))=_160421_stmt.get()._field_tokens;
				jule::Ptr<_2114c1b73_Token> _160621_token = (*(_160255_tokens))[0LL];;
				{
					auto &_match_expr{ _160621_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1b8dd1d28:;
						{
							_1e7bc00c1_pushDirective(_self_.ptr(), _1e7bbed4b_buildDirective(_self_.ptr(), (*(_160255_tokens))));
							goto _iter_next_1b8dd0c8e;
						}
					}
					_match_end_1b8dd1ba2:;
				};
				{
					auto &_match_expr{ _160621_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_1b8dd1e6b:;
						{
							jule::Ptr<_213c54436_VarDecl> _161525_v = _1e7bc1e4c_buildVar(_self_, (*(_160255_tokens)));;
							if ((_161525_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_213c54436_VarDecl>> &__jule_push_dest = (*(_160238_ipl)).get()._field_Statics; __jule_push_dest.push(_161525_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1b8dd2a93:;
						{
							jule::Ptr<_213c53457_FnDecl> _162225_f = _1cdccb13b_getMethod(_self_, _160255_tokens);;
							if ((_162225_f != nullptr)) {
								_1e7bc8816_checkMethodReceiver(_self_.ptr(), &(_162225_f));
								_1cdccbceb_applyFnMeta(_self_.ptr(), &(_162225_f));
								{ jule::Slice<jule::Ptr<_213c53457_FnDecl>> &__jule_push_dest = (*(_160238_ipl)).get()._field_Methods; __jule_push_dest.push(_162225_f); };
							};
						}
					}
					else {
						_case_begin_1b8dd2345:;
						{
							_1e7bbe411_pushErr(_self_.ptr(), _160621_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1b8dd0c8e;
						}
					}
					_match_end_1b8dd22e0:;
				};
			}
			_iter_next_1b8dd0c8e:;
			++it;
			goto _iter_begin_1b8dd0c8e;
		}
		_iter_end_1b8dd0c8e:;
	};
}



inline jule::Ptr<_213c5c8a1_Impl> _1cdccb768_buildImpl(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _163533_tokens) {
	jule::Ptr<_2114c1b73_Token> _163617_token = _163533_tokens[0LL];;
	if ((_163533_tokens.len() < 2LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), _163617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _164217_i = 1LL;;
	jule::Ptr<_213c41d2a_TypeDecl> _164418_base;;
	jule::Bool _164428_ok = false;;
	({
		__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, &(_163533_tokens), (&(_164217_i)), true);
		_164418_base = __jule_assign_result.__jule_result_arg0;
		_164428_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164428_ok))) {
		return nullptr;;
	};
	if ((_164217_i >= _163533_tokens.len())) {
		_1e7bbe411_pushErr(_self_.ptr(), _163617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213c5c8a1_Impl> _165317_ipl = jule::new_ptr<_213c5c8a1_Impl>(_213c5c8a1_Impl{._field_Base=_164418_base, });;
	_163617_token=_163533_tokens[_164217_i];
	if ((_163617_token.get()._field_Id != static_cast<jule::U32>(9LLU))) {
		if ((_163617_token.get()._field_Id == static_cast<jule::U32>(72LLU))) {
			({
				jule::Ptr<_213c41d2a_TypeDecl> ___jule_assign_arg = _165317_ipl.get()._field_Dest;
				jule::Ptr<_213c41d2a_TypeDecl> _1___jule_assign_arg = _165317_ipl.get()._field_Base;
				_165317_ipl.get()._field_Base = ___jule_assign_arg;
				_165317_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1e7bbdcd4_stop(_self_.ptr());
		_1e7bbe411_pushErr(_self_.ptr(), _163617_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_164217_i)++;
	if ((_164217_i >= _163533_tokens.len())) {
		_1e7bbdcd4_stop(_self_.ptr());
		_1e7bbe411_pushErr(_self_.ptr(), _163617_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType(_self_, &(_163533_tokens), (&(_164217_i)), true);
		_165317_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_164428_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164428_ok))) {
		return nullptr;;
	};
	if ((_164217_i >= _163533_tokens.len())) {
		_1e7bbdcd4_stop(_self_.ptr());
		_1e7bbe411_pushErr(_self_.ptr(), _163617_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _169117_bodyTokens = _1e7bbc079_range(&(_164217_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_163533_tokens));;
	if ((_169117_bodyTokens == nullptr)) {
		_1e7bbdcd4_stop(_self_.ptr());
		_1e7bbe411_pushErr(_self_.ptr(), _163617_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_164217_i < _163533_tokens.len())) {
		_1e7bbe411_pushErr(_self_.ptr(), _163533_tokens[_164217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_165317_ipl.get()._field_End=_163533_tokens[(_164217_i - 1LL)];
	_1cdccb45a_parseImplBody(_self_, &(_165317_ipl), &(_169117_bodyTokens));
	return _165317_ipl;;
}



inline jule::Any _1cdccba76_buildNodeData(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _170638_tokens) {
	jule::Ptr<_2114c1b73_Token> _170717_token = (*(_170638_tokens))[0LL];;
	{
		auto &_match_expr{ _170717_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1b8de11ab:;
			{
				jule::Ptr<_213c53457_FnDecl> _171121_f = _1e7bc4e72_buildFn(_self_, _170638_tokens, false, false);;
				if ((_171121_f != nullptr)) {
					_171121_f.get()._field_Global=true;
				};
				return jule::Any(_171121_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1b8de1bc3:;
			{
				return jule::Any(_1e7bc1e4c_buildVar(_self_, (*(_170638_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1b8de1c39:;
			{
				return jule::Any(_1e7bc1138_buildTypeAliasDecl(_self_, _170638_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1b8de1486:;
			{
				return _1e7bc7b67_buildNodeEnumDecl(_self_, _170638_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1b8de14ec:;
			{
				return jule::Any(_1e7bc8591_buildStructDecl(_self_, _170638_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1b8de1563:;
			{
				return jule::Any(_1e7bc8e43_buildTraitDecl(_self_, _170638_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1b8de15c9:;
			{
				return jule::Any(_1cdccb768_buildImpl(_self_, (*(_170638_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1b8de1e04:;
			{
				return _1cdccad2d_buildBind(_self_, _170638_tokens);;
			}
		}
		else {
			_case_begin_1b8de13dc:;
			{
				_1e7bbe411_pushErr(_self_.ptr(), _170717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8de1244:;
	};
}



inline void _1cdccbceb_applyFnMeta(_1e7bbd9e8_parser* _self_, jule::Ptr<_213c53457_FnDecl>* _173935_f) {
	(*(_173935_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1cdccc071_applyMeta(_1e7bbd9e8_parser* _self_, _213c0de18_Node* _174433_node) {
	{
		auto &_match_expr{ (*(_174433_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b8de6ac9:;
			{
				jule::Ptr<_213c54436_VarDecl> _174721_v = (*(_174433_node))._field_Data.cast_ptr<_213c54436_VarDecl>(&__jule_any_type16);;
				if ((_174721_v == nullptr)) {
					return;;
				};
				_174721_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b8de6b40:;
			{
				jule::Ptr<_213c53457_FnDecl> _175421_f = (*(_174433_node))._field_Data.cast_ptr<_213c53457_FnDecl>(&__jule_any_type14);;
				if ((_175421_f == nullptr)) {
					return;;
				};
				_1cdccbceb_applyFnMeta(_self_, &(_175421_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b8de6ba6:;
			{
				jule::Ptr<_213c5bac0_StructDecl> _176021_sd = (*(_174433_node))._field_Data.cast_ptr<_213c5bac0_StructDecl>(&__jule_any_type13);;
				if ((_176021_sd == nullptr)) {
					return;;
				};
				_176021_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1b8de68ba:;
	};
}



inline void _1cdccc2e6_pushUseDecl(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Ptr<_213c59183_UseDecl>* _176936_decl) {
	{ jule::Slice<jule::Ptr<_213c59183_UseDecl>> &__jule_push_dest = _self_.get()._field_ast.get()._field_UseDecls; __jule_push_dest.push((*(_176936_decl))); };
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), (*(_176936_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1e7bbe730_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1cdccc604_pushMetaNodes(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _177738_tokens) {
	{
		auto &_match_expr{ (*(_177738_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1b8dec23e:;
			{
				;
				jule::Ptr<_213c59183_UseDecl> _178121_decl = _1e7bc63b3_buildUseDecl(_self_.ptr(), (*(_177738_tokens)), false);;
				_1cdccc2e6_pushUseDecl(_self_, &(_178121_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1b8dec2b6:;
			{
				if ((((*(_177738_tokens)).len() > 1LL) && ((*(_177738_tokens))[1LL].get()._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_213c59183_UseDecl> _178625_decl = _1cdccaa42_buildBindUse(_self_, (*(_177738_tokens)));;
					_1cdccc2e6_pushUseDecl(_self_, &(_178625_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1b8dec33d:;
			{
				_1e7bc00c1_pushDirective(_self_.ptr(), _1e7bbed4b_buildDirective(_self_.ptr(), (*(_177738_tokens))));
				return true;;
			}
		}
		_match_end_1b8dec162:;
	};
	return false;;
}



inline _213c0de18_Node _1cdccc912_parseNode(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _179734_st) {
	_213c0de18_Node _179817_node = _213c0de18_Node{._field_Token=(*(_179734_st))[0LL], };;
	if (_1cdccc604_pushMetaNodes(_self_, _179734_st)) {
		return _179817_node;;
	};
	jule::Any _180617_data = _1cdccba76_buildNodeData(_self_, _179734_st);;
	if ((_180617_data == nullptr)) {
		return _179817_node;;
	};
	_179817_node._field_Data=_180617_data;
	_1cdccc071_applyMeta(_self_.ptr(), &(_179817_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _179817_node;;
}



inline void _1cdcccb87_appendNode(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _182135_st) {
	if (((*(_182135_st)).len() == 0LL)) {
		return;;
	};
	_213c0de18_Node _182517_node = _1cdccc912_parseNode(_self_, _182135_st);;
	if (((_182517_node._field_Data == nullptr) || _1e7bbe048_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_213c0de18_Node> &__jule_push_dest = _self_.get()._field_ast.get()._field_Nodes; __jule_push_dest.push(_182517_node); };
}



inline void _1cdccd0e9_removeRange(_1e7bbd9e8_parser* _self_, jule::I32 _183230_i, jule::U32 _183238_id, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _183252_tokens, jule::Slice<jule::I32>* _183275_ranges) {
	jule::U32 _183313_close = _1e7bbc9a3_getCloseOfBrace(_183238_id);;
	for (; (_183230_i >= 0LL); (_183230_i)--) {
		{
			jule::Ptr<_2114c1b73_Token> _183517_tok = (*(_183252_tokens))[(*(_183275_ranges))[_183230_i]];;
			if ((_183517_tok.get()._field_Id != _183313_close)) {
				goto _iter_next_1b8e05a50;
			};
			(*(_183275_ranges))=jule::append((*(_183275_ranges)).slice(0LL, _183230_i),(*(_183275_ranges)).slice((_183230_i + 1LL)));
			goto _iter_end_1b8e05a50;
		}
	_iter_next_1b8e05a50:;
	}
	_iter_end_1b8e05a50:;;
}



inline void _1cdccd4b2_pushWrongOrderCloseErr(_1e7bbd9e8_parser* _self_, jule::Ptr<_2114c1b73_Token>* _184442_t, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _184454_tokens, jule::Slice<jule::I32>* _184473_ranges) {
	{
		auto &_match_expr{ (*(_184454_tokens))[(*(_184473_ranges))[((*(_184473_ranges)).len() - 1LL)]].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_1b8e07d0a:;
			{
				_1e7bbe411_pushErr(_self_, (*(_184442_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1b8e07d82:;
			{
				_1e7bbe411_pushErr(_self_, (*(_184442_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1b8e07e09:;
			{
				_1e7bbe411_pushErr(_self_, (*(_184442_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b8e07bd9:;
	};
}



inline void _1cdccd924_pushRangeClose(_1e7bbd9e8_parser* _self_, jule::Ptr<_2114c1b73_Token> _185533_t, jule::U32 _185544_left, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _185560_tokens, jule::Slice<jule::I32>* _185583_ranges) {
	jule::I32 _185613_n = (*(_185583_ranges)).len();;
	if ((_185613_n == 0LL)) {
		{
			auto &_match_expr{ _185533_t.get()._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_1b8e0a79c:;
				{
					_1e7bbe411_pushErr(_self_, _185533_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_1b8e0a824:;
				{
					_1e7bbe411_pushErr(_self_, _185533_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_1b8e0a89b:;
				{
					_1e7bbe411_pushErr(_self_, _185533_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1b8e0a6c0:;
		};
		return;;
	} else if (((*(_185560_tokens))[(*(_185583_ranges))[(_185613_n - 1LL)]].get()._field_Id != _185544_left)) {
		_1cdccd4b2_pushWrongOrderCloseErr(_self_, &(_185533_t), _185560_tokens, _185583_ranges);
	};
	_1cdccd0e9_removeRange(_self_, static_cast<jule::I32>((_185613_n - 1LL)), _185533_t.get()._field_Id, _185560_tokens, _185583_ranges);
}



inline void _1cdccdb99_checkRanges(_1e7bbd9e8_parser* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _187331_tokens) {
	jule::Slice<jule::I32> _187417_ranges = nullptr;;
	{
		auto expr = _187331_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8e0d67e:;
		if (it != expr_end) {
			jule::I32 _187613_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> *_187616_token = it;
			{
				{
					auto &_match_expr{ (*(_187616_token)).get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1b8e0e383:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _187417_ranges; __jule_push_dest.push(_187613_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8e0e40a:;
						{
							_1cdccd924_pushRangeClose(_self_, (*(_187616_token)), static_cast<jule::U32>(74LLU), _187331_tokens, &(_187417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_1b8e0e482:;
						{
							_1cdccd924_pushRangeClose(_self_, (*(_187616_token)), static_cast<jule::U32>(72LLU), _187331_tokens, &(_187417_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1b8e0e509:;
						{
							_1cdccd924_pushRangeClose(_self_, (*(_187616_token)), static_cast<jule::U32>(76LLU), _187331_tokens, &(_187417_ranges));
						}
					}
					_match_end_1b8e0e141:;
				};
			}
			_iter_next_1b8e0d67e:;
			++it;
			_187613_i++;
			goto _iter_begin_1b8e0d67e;
		}
		_iter_end_1b8e0d67e:;
	};
	{
		auto expr = &(_187417_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8e0d618:;
		if (it != expr_end) {
			jule::I32 _189116_i = *it;
			{
				jule::Ptr<_2114c1b73_Token> _189217_token = (*(_187331_tokens))[_189116_i];;
				{
					auto &_match_expr{ _189217_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8e11dbe:;
						{
							_1e7bbe411_pushErr(_self_, _189217_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1b8e11e35:;
						{
							_1e7bbe411_pushErr(_self_, _189217_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1b8e11e9b:;
						{
							_1e7bbe411_pushErr(_self_, _189217_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1b8e11b8d:;
				};
			}
			_iter_next_1b8e0d618:;
			++it;
			goto _iter_begin_1b8e0d618;
		}
		_iter_end_1b8e0d618:;
	};
}



inline void _1cdccde1e_parse(jule::Ptr<_1e7bbd9e8_parser> _self_, jule::Ptr<_2114c700d_File>* _190430_f) {
	_self_.get()._field_ast=jule::new_ptr<_213c0d07c_Ast>(_213c0d07c_Ast{._field_File=(*(_190430_f)), });
	_self_.get()._field_ep=jule::new_ptr<_1e7badba3_exprBuilder>(_1e7badba3_exprBuilder{._field_p=_self_});
	_1cdccdb99_checkRanges(_self_.ptr(), &((*(_190430_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1e7ba19cb_stmt>> _191717_stmts = _1e7ba1d72_splitStmts(&((*(_190430_f)).get()._field_Tokens));;
	jule::I32 _192017_i = 0LL;;
	for (; (_192017_i < _191717_stmts.len()); (_192017_i)++) {
		{
			jule::Ptr<_1e7ba19cb_stmt> _192221_stmt = _191717_stmts[_192017_i];;
			if ((_192221_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_192221_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_1b8e1507b;
			};
			if ((!(_2110c11ac_IsTopDirective(_192221_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1b8e1507b;
			};
			{ jule::Slice<jule::Ptr<_213c0e314_Directive>> &__jule_push_dest = _self_.get()._field_ast.get()._field_TopDirectives; __jule_push_dest.push(_1e7bbed4b_buildDirective(_self_.ptr(), _192221_stmt.get()._field_tokens)); };
		}
	_iter_next_1b8e1507b:;
	}
	_iter_end_1b8e1507b:;;
	_self_.get()._field_errors=nullptr;
	for (; (_192017_i < _191717_stmts.len()); (_192017_i)++) {
		{
			jule::Ptr<_1e7ba19cb_stmt> _193921_stmt = _191717_stmts[_192017_i];;
			_1cdcccb87_appendNode(_self_, &(_193921_stmt.get()._field_tokens));
			if (_1e7bbe048_stopped(_self_.ptr())) {
				goto _iter_end_1b8e153bc;
			};
		}
	_iter_next_1b8e153bc:;
	}
	_iter_end_1b8e153bc:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1e7bbe411_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1e7bbd9e8_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1cdcd0816_pushErr(_1cdcd02a5_typeBuilder* _self_, jule::Ptr<_2114c1b73_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1e7bbe411_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1cdcd0b35_pushSuggestion(_1cdcd02a5_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1e7bbe730_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd0d99_buildNamespace(_1cdcd02a5_typeBuilder* _self_) {
	jule::Ptr<_213c41d2a_TypeDecl> _5517_t = jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_213c42a51_NamespaceTypeDecl> _5917_nst = jule::new_ptr<_213c42a51_NamespaceTypeDecl>();;
	jule::I32 _6017_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_2114c1b73_Token> _6221_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6017_n & 1LL) == 0LL)) {
				if ((_6221_token.get()._field_Id != static_cast<jule::U32>(1LLU))) {
					_1cdcd0816_pushErr(_self_, _6221_token, jule::Str("invalid syntax", 14));
					_1cdcd0b35_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_2114c1b73_Token>> &__jule_push_dest = _5917_nst.get()._field_Idents; __jule_push_dest.push(_6221_token); };
			} else if ((_6221_token.get()._field_Id != static_cast<jule::U32>(19LLU))) {
				goto _iter_end_1b8e1c54a;
			};
			(_6017_n)++;
		}
	_iter_next_1b8e1c54a:;
	}
	_iter_end_1b8e1c54a:;;
	_5917_nst.get()._field_Idents=_5917_nst.get()._field_Idents.slice(0LL, (_5917_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_5917_nst.get()._field_Kind=_1cdcd15d6_buildIdent(_self_);
	_5517_t.get()._field_Kind=jule::Any(_5917_nst, &__jule_any_type96);
	return _5517_t;;
}



inline jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> _1cdcd110d_buildGenerics(_1cdcd02a5_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_2114c1b73_Token> _8813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((_8813_token.get()._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _9317_parts = _1cdcd1372_identGenerics(_self_);;
	if ((_9317_parts.len() == 0LL)) {
		_1cdcd0816_pushErr(_self_, _8813_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> _9917_types = jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>>::alloc(0LL, _9317_parts.len());;
	{
		auto expr = &(_9317_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8e24068:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _10021_part = *it;
			{
				jule::I32 _10121_j = 0LL;;
				jule::Ptr<_213c41d2a_TypeDecl> _10222_t;;
				({
					__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType((*(_self_))._field_p, &(_10021_part), (&(_10121_j)), true);
					_10222_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10121_j < _10021_part.len())) {
					_1cdcd0816_pushErr(_self_, _10021_part[_10121_j], jule::Str("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>> &__jule_push_dest = _9917_types; __jule_push_dest.push(_10222_t); };
			}
			_iter_next_1b8e24068:;
			++it;
			goto _iter_begin_1b8e24068;
		}
		_iter_end_1b8e24068:;
	};
	return _9917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _1cdcd1372_identGenerics(_1cdcd02a5_typeBuilder* _self_) {
	jule::I32 _11213_first = (*((*(_self_))._field_i));;
	jule::I32 _11317_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_2114c1b73_Token> _11517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ _11517_token.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_1b8e27753:;
					{
						(_11317_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1b8e277b9:;
					{
						(_11317_rangeN)--;
					}
				}
				_match_end_1b8e276a9:;
			};
			if ((_11317_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1b8e2681d;
			};
		}
	_iter_next_1b8e2681d:;
	}
	_iter_end_1b8e2681d:;;
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _12717_tokens = (*(_self_))._field_tokens.slice((_11213_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _12818_parts;;
	jule::Slice<_2110be2cb_Log> _12825_errors;;
	({
		__jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1e7bbc70b_parts(&(_12717_tokens), static_cast<jule::U32>(5LLU), true);
		_12818_parts = __jule_assign_result.__jule_result_arg0;
		_12825_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*(_self_))._field_p.get()._field_errors).append(_12825_errors);;
	};
	return _12818_parts;;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd15d6_buildIdent(_1cdcd02a5_typeBuilder* _self_) {
	jule::Bool _13617_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13617_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _1cdcd0d99_buildNamespace(_self_);;
	};
	jule::Ptr<_2114c1b73_Token> _14017_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_213c423e1_IdentTypeDecl> _14117_it = jule::new_ptr<_213c423e1_IdentTypeDecl>(_213c423e1_IdentTypeDecl{._field_Token=_14017_token, ._field_Ident=_14017_token.get()._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_213c41d2a_TypeDecl> _14717_itd = jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=_14017_token, ._field_Kind=jule::Any(_14117_it, &__jule_any_type20)});;
	if (((!(_13617_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U32>(17LLU)))) {
		_14117_it.get()._field_Generics=_1cdcd110d_buildGenerics(_self_);
		return _14717_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1cdcd0816_pushErr(_self_, _14017_token, jule::Str("invalid syntax", 14));
		return _14717_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U32>(1LLU))) {
		_1cdcd0816_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _14717_itd;;
	};
	jule::Ptr<_213c426cc_SubIdentTypeDecl> _16417_sit = jule::new_ptr<_213c426cc_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_213c423e1_IdentTypeDecl>> &__jule_push_dest = _16417_sit.get()._field_Idents; __jule_push_dest.push(_14117_it); };
	jule::Ptr<_213c41d2a_TypeDecl> _16617_ident = _1cdcd15d6_buildIdent(_self_);;
	{
		auto &_match_expr{ _16617_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b8e32252:;
			{
				{ jule::Slice<jule::Ptr<_213c423e1_IdentTypeDecl>> &__jule_push_dest = _16417_sit.get()._field_Idents; __jule_push_dest.push(_16617_ident.get()._field_Kind.cast_ptr<_213c423e1_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b8e322c9:;
			{
				(_16417_sit.get()._field_Idents).append(_16617_ident.get()._field_Kind.cast_ptr<_213c426cc_SubIdentTypeDecl>(&__jule_any_type92).get()._field_Idents);;
			}
		}
		_match_end_1b8e32175:;
	};
	return jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=_14017_token, ._field_Kind=jule::Any(_16417_sit, &__jule_any_type92)});;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd184a_buildCppLink(_1cdcd02a5_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U32>(17LLU)))) {
		_1cdcd0816_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_213c41d2a_TypeDecl> _18517_t = _1cdcd15d6_buildIdent(_self_);;
	_18517_t.get()._field_Kind.cast_ptr<_213c423e1_IdentTypeDecl>(&__jule_any_type20).get()._field_Binded=true;
	return _18517_t;;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd1aae_buildFn(_1cdcd02a5_typeBuilder* _self_) {
	jule::Ptr<_2114c1b73_Token> _19117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_213c53457_FnDecl> _19217_f = _1e7bc4a21_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19217_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_213c537a9_IsAnon(_19217_f.ptr())))) {
		_1cdcd0816_pushErr(_self_, _19217_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=_19117_token, ._field_Kind=jule::Any(_19217_f, &__jule_any_type14)});;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd1d23_buildPtr(_1cdcd02a5_typeBuilder* _self_) {
	jule::Ptr<_2114c1b73_Token> _20617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1cdcd0816_pushErr(_self_, _20617_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=_20617_token, ._field_Kind=jule::Any(jule::new_ptr<_213c43810_PtrTypeDecl>(_213c43810_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type77)});;
	};
	jule::Ptr<_213c41d2a_TypeDecl> _22317_elem = _1cdcd2c9c_step(_self_);;
	if ((_22317_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=_20617_token, ._field_Kind=jule::Any(jule::new_ptr<_213c43810_PtrTypeDecl>(_213c43810_PtrTypeDecl{._field_Elem=_22317_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd2087_buildSptr(_1cdcd02a5_typeBuilder* _self_) {
	jule::Ptr<_2114c1b73_Token> _23717_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1cdcd0816_pushErr(_self_, _23717_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_213c41d2a_TypeDecl> _24417_elem = _1cdcd2c9c_step(_self_);;
	if ((_24417_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=_23717_token, ._field_Kind=jule::Any(jule::new_ptr<_213c42d3c_SptrTypeDecl>(_213c42d3c_SptrTypeDecl{._field_Elem=_24417_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd22eb_buildSlc(_1cdcd02a5_typeBuilder* _self_) {
	jule::Ptr<_2114c1b73_Token> _25817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_213c41d2a_TypeDecl> _26017_elem = _1cdcd2c9c_step(_self_);;
	if ((_26017_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=_25817_token, ._field_Kind=jule::Any(jule::new_ptr<_213c43238_SlcTypeDecl>(_213c43238_SlcTypeDecl{._field_Elem=_26017_elem}), &__jule_any_type76)});;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd2560_buildArr(_1cdcd02a5_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _27317_exprTokens = _1e7bbc079_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1cdcd0816_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_213c41d2a_TypeDecl> _27917_elem = _1cdcd2c9c_step(_self_);;
	if ((_27917_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_213c43ed6_ArrTypeDecl> _28417_arrt = jule::new_ptr<_213c43ed6_ArrTypeDecl>(_213c43ed6_ArrTypeDecl{._field_Elem=_27917_elem, });;
	jule::Ptr<_2114c1b73_Token> _28817_token = _27317_exprTokens[0LL];;
	if (((_27317_exprTokens.len() == 1LL) && (_28817_token.get()._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		_28417_arrt.get()._field_Size=_1e7bbea3d_buildExpr((*(_self_))._field_p, &(_27317_exprTokens));
	};
	return jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=_28817_token, ._field_Kind=jule::Any(_28417_arrt, &__jule_any_type75)});;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd27c4_buildMap(_1cdcd02a5_typeBuilder* _self_) {
	jule::Ptr<_2114c1b73_Token> _30217_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1cdcd0816_pushErr(_self_, _30217_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _31017_keyTokens = _1e7bbc079_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1cdcd0816_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_31017_keyTokens.len() == 0LL)) {
		_1cdcd0816_pushErr(_self_, _30217_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_213c446e0_MapTypeDecl> _31917_mapt = jule::new_ptr<_213c446e0_MapTypeDecl>();;
	jule::I32 _32017_j = 0LL;;
	jule::Ptr<_213c41d2a_TypeDecl> _32118_keyt;;
	jule::Bool _32128_ok = false;;
	({
		__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType((*(_self_))._field_p, &(_31017_keyTokens), (&(_32017_j)), (*(_self_))._field_err);
		_32118_keyt = __jule_assign_result.__jule_result_arg0;
		_32128_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32128_ok))) {
		return nullptr;;
	} else if ((_32017_j < _31017_keyTokens.len())) {
		_1cdcd0816_pushErr(_self_, _31017_keyTokens[_32017_j], jule::Str("invalid syntax", 14));
	};
	_31917_mapt.get()._field_Key=_32118_keyt;
	jule::Ptr<_213c41d2a_TypeDecl> _32918_valt;;
	({
		__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_assign_result = _1e7bc0d2a_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32918_valt = __jule_assign_result.__jule_result_arg0;
		_32128_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32128_ok))) {
		return nullptr;;
	};
	_31917_mapt.get()._field_Val=_32918_valt;
	return jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Token=_30217_mapToken, ._field_Kind=jule::Any(_31917_mapt, &__jule_any_type79)});;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd2a38_buildEnumerable(_1cdcd02a5_typeBuilder* _self_) {
	jule::Ptr<_2114c1b73_Token> _34117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1cdcd0816_pushErr(_self_, _34117_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34117_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((_34117_token.get()._field_Id == static_cast<jule::U32>(77LLU))) {
		return _1cdcd22eb_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1cdcd2560_buildArr(_self_);;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcd2c9c_step(_1cdcd02a5_typeBuilder* _self_) {
	jule::Ptr<_2114c1b73_Token> _35613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _35613_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1b8e503b3:;
			{
				return _1cdcd15d6_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1b8e50506:;
			{
				return _1cdcd184a_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1b8e5079d:;
			{
				return _1cdcd1aae_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b8e4ebed:;
			{
				return _1cdcd1d23_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1b8e4ec64:;
			{
				return _1cdcd2087_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1b8e4ecca:;
			{
				return jule::new_ptr<_213c41d2a_TypeDecl>(_213c41d2a_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_213c42d3c_SptrTypeDecl>(_213c42d3c_SptrTypeDecl{._field_Elem=_1cdcd2087_buildSptr(_self_)}), &__jule_any_type78)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1b8e4ed41:;
			{
				return _1cdcd2a38_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1b8e50869:;
			{
				return _1cdcd27c4_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1b8e4eb54:;
			{
				((*((*(_self_))._field_i)))++;
				_1cdcd0816_pushErr(_self_, _35613_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1b8e4e9cd:;
	};
}



inline __jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool _1cdcd3011_build(_1cdcd02a5_typeBuilder* _self_) {
	__jule_tuple_x_213c41d2a_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_213c41d2a_TypeDecl> _38817_root = _1cdcd2c9c_step(_self_);;
	if ((_38817_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1cdcceace_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38817_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1cdcd02a5_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _214041ed7_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _214043846_pushErr(_21404333a_directiveEval* _self_, jule::Ptr<_2114c1b73_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_2110be2cb_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_2110be2cb_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_2110be71b_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _214043bed_splitOperans(_21404333a_directiveEval* _self_, jule::U32 _3331_op, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>>::alloc(0LL, 10LL);;
	jule::I32 _3517_i = 0LL;;
	jule::I32 _3617_rangeN = 0LL;;
	jule::I32 _3717_last = 0LL;;
	for (; (_3517_i < ((*(_3349_tokens)).len() - 1LL)); (_3517_i)++) {
		{
			jule::Ptr<_2114c1b73_Token> _3917_b = (*(_3349_tokens))[_3517_i];;
			{
				auto &_match_expr{ _3917_b.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b8e744c5:;
					{
						(_3617_rangeN)++;
						goto _iter_next_1b8e7388c;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b8e74580:;
					{
						(_3617_rangeN)--;
					}
				}
				_match_end_1b8e7445e:;
			};
			if (((_3617_rangeN > 0LL) || (_3917_b.get()._field_Id != _3331_op))) {
				goto _iter_next_1b8e7388c;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3717_last, _3517_i)); };
			_3717_last=static_cast<jule::I32>((_3517_i + 1LL));
		}
	_iter_next_1b8e7388c:;
	}
	_iter_end_1b8e7388c:;;
	if ((_3717_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3717_last)); };
	} else {
		_214043846_pushErr(_self_, (*(_3349_tokens))[(_3717_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _21404400b_evalDirectiveIdent(_21404333a_directiveEval* _self_, jule::Str _6433_ident) {
	if (_6433_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8e77077:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1b8e77077:;
			++it;
			goto _iter_begin_1b8e77077;
		}
		_iter_end_1b8e77077:;
	};
	return false;;
}



inline jule::Bool _214044319_evalDirectivePart(_21404333a_directiveEval* _self_, jule::Slice<jule::Ptr<_2114c1b73_Token>> _7840_part) {
	jule::Bool _7913_logicalNot = (_7840_part[0LL].get()._field_Id == static_cast<jule::U32>(68LLU));;
	if (_7913_logicalNot) {
		_7840_part=_7840_part.slice(1LL);
	};
	if ((_7840_part.len() > 1LL)) {
		_214043846_pushErr(_self_, _7840_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8917_result = _21404400b_evalDirectiveIdent(_self_, _7840_part[0LL].get()._field_Kind);;
	if (_7913_logicalNot) {
		_8917_result=(!(_8917_result));
	};
	return _8917_result;;
}



inline jule::Bool _21404457d_eval(_21404333a_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_214043846_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10217_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _10417_logicalOrParts = _214043bed_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*(_self_))._field_d.get()._field_Args));;
	if ((_10417_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10417_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8e7c0b0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _10921_part = *it;
			{
				jule::Bool _11021_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _11121_logicalAndParts = _214043bed_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10921_part));;
				if ((_11121_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11121_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8e7db3e:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_2114c1b73_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_2114c1b73_Token> _11721_first = _11625_andPart[0LL];;
							if ((_11721_first.get()._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_2114c1b73_Token> _11925_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if ((_11925_end.get()._field_Id != static_cast<jule::U32>(75LLU))) {
									_214043846_pushErr(_self_, _11721_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_11625_andPart=_11625_andPart.slice(1LL, (_11625_andPart.len() - 1LL));
							};
							_11021_and=(_11021_and && _214044319_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1b8e7db3e:;
						++it;
						goto _iter_begin_1b8e7db3e;
					}
					_iter_end_1b8e7db3e:;
				};
				_10217_result=(_10217_result || _11021_and);
			}
			_iter_next_1b8e7c0b0:;
			++it;
			goto _iter_begin_1b8e7c0b0;
		}
		_iter_end_1b8e7c0b0:;
	};
	return _10217_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _21404333a_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1cdcd4023_JuleImporter> static__1cdcd440d_New(_214041ed7_CompileInfo _5819_info) {
	jule::Ptr<_1cdcd4023_JuleImporter> _5917_imp = jule::new_ptr<_1cdcd4023_JuleImporter>(_1cdcd4023_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_2111a7084_PathStdlib}), });;
	_214042801_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_213cd7c7d_ImportInfo>> _1cdcd4672_AllPackages(_1cdcd4023_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1cdcd4a7e_SetModPath(_1cdcd4023_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1cdcd4ce3_GetModPath(_1cdcd4023_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1cdcd5101_ModById(_1cdcd4023_JuleImporter* _self_, jule::I32 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _1cdcd540e_GetImport(_1cdcd4023_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8e84ae0:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1b8e84ae0:;
			++it;
			goto _iter_begin_1b8e84ae0;
		}
		_iter_end_1b8e84ae0:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log _1cdcd57b6_ImportPackage(_1cdcd4023_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log __jule_func_result;
	jule::Slice<jule::Ptr<_22a8b2423_DirEntry>> _9717_dirents = ({
		auto except = static__21103e768_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_2110be2cb_Log>::make({_1cdcd3a8e_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_22a8b2423_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _214053548_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_2110be2cb_Log> _10525_errs = _214053746_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_213c0d07c_Ast>> _11217_asts = jule::Slice<jule::Ptr<_213c0d07c_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8e860ec:;
		if (it != expr_end) {
			jule::Ptr<_22a8b2423_DirEntry> _11316_dirent = *it;
			{
				if ((_22a8c24aa_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_21103223e_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1b8e860ec;
				};
				jule::Str _11917__path = _21103b875_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_2114c700d_File> _12021_file = _2114c82b7_NewFileSet(_11917__path);;
				_2114c73c6_Fill(_12021_file.ptr(), _1cdcd37d6_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_2110be2cb_Log> _12221_errors = _2114d3b63_Lex(_12021_file, static_cast<jule::I32>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1e7b5c569_FileInfo> _12721_finfo = _1e7b9e91e_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_214027709_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1b8e860ec;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_2110be2cb_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1cdcd5e37_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1b8e860ec;
				};
				{ jule::Slice<jule::Ptr<_213c0d07c_Ast>> &__jule_push_dest = _11217_asts; __jule_push_dest.push(_12721_finfo.get()._field_Ast); };
			}
			_iter_next_1b8e860ec:;
			++it;
			goto _iter_begin_1b8e860ec;
		}
		_iter_end_1b8e860ec:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1cdcd5a3b_Imported(_1cdcd4023_JuleImporter* _self_, jule::Ptr<_213cd7c7d_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8e8db4e:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_Binded == _15331_imp.get()._field_Binded) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1b8e8db4e:;
			++it;
			goto _iter_begin_1b8e8db4e;
		}
		_iter_end_1b8e8db4e:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8e95293:;
			if (it != expr_end) {
				jule::I32 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1b8e95293:;
				++it;
				_16217_i++;
				goto _iter_begin_1b8e95293;
			}
			_iter_end_1b8e95293:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I32>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_setted:;
	};
	{ jule::Slice<jule::Ptr<_213cd7c7d_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_2110be2cb_Log _1cdcd5e37_isPassBuildDirectives(_1cdcd4023_JuleImporter* _self_, jule::Ptr<_213c0d07c_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_2110be2cb_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8e981ec:;
		if (it != expr_end) {
			jule::Ptr<_213c0e314_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_1b8e981ec;
				};
				_21404333a_directiveEval _18421_de = _21404333a_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _21404457d_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1b8e981ec:;
			++it;
			goto _iter_begin_1b8e981ec;
		}
		_iter_end_1b8e981ec:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1cdcd4023_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cdcd8cc5_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b8eb7e64_isCommonOrdered(jule::Slice<jule::Ptr<_213c615db_Struct>> _1834_s, jule::Ptr<_213c615db_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8eb8e65:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8eb977e:;
					if (it != expr_end) {
						jule::Ptr<_213c615db_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1b8eb977e:;
						++it;
						goto _iter_begin_1b8eb977e;
					}
					_iter_end_1b8eb977e:;
				};
			}
			_iter_next_1b8eb8e65:;
			++it;
			goto _iter_begin_1b8eb8e65;
		}
		_iter_end_1b8eb8e65:;
	};
	return true;;
}

inline jule::Bool _1b8ebc85e_isCommonOrdered(jule::Slice<jule::Ptr<_213d11988_Var>> _1834_s, jule::Ptr<_213d11988_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8ebd81b:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8ebe135:;
					if (it != expr_end) {
						jule::Ptr<_213d11988_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1b8ebe135:;
						++it;
						goto _iter_begin_1b8ebe135;
					}
					_iter_end_1b8ebe135:;
				};
			}
			_iter_next_1b8ebd81b:;
			++it;
			goto _iter_begin_1b8ebd81b;
		}
		_iter_end_1b8ebd81b:;
	};
	return true;;
}



inline void _1b8eb4a87_orderCommon(jule::Slice<jule::Ptr<_213c615db_Struct>>* _3135_s) {
	jule::I32 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8eb600b:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I32 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1b8eb7e64_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I32>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1b8eb6bdd:;
				}
				_iter_end_1b8eb6bdd:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1b8eb600b;
				};
				(_3217_n)--;
			}
			_iter_next_1b8eb600b:;
			++it;
			goto _iter_begin_1b8eb600b;
		}
		_iter_end_1b8eb600b:;
	};
}

inline void _1b8eb53c3_orderCommon(jule::Slice<jule::Ptr<_213d11988_Var>>* _3135_s) {
	jule::I32 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8eba928:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I32 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1b8ebc85e_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I32>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1b8ebb5d8:;
				}
				_iter_end_1b8ebb5d8:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1b8eba928;
				};
				(_3217_n)--;
			}
			_iter_next_1b8eba928:;
			++it;
			goto _iter_begin_1b8eba928;
		}
		_iter_end_1b8eba928:;
	};
}



inline void static__1cdcd98b9_orderStructures(jule::Slice<jule::Ptr<_213c615db_Struct>>* _5136_structs) {
	_1b8eb4a87_orderCommon(_5136_structs);
}



inline void static__1cdcd9ac8_orderVars(jule::Slice<jule::Ptr<_213d11988_Var>>* _5730_vars) {
	_1b8eb53c3_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1cdcd9039_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cddd4b3a_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1cde1b248_optimizeChild(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Ptr<_213cb8a72_Scope>* _3938_s) {
	jule::Ptr<_1cde1acb4_scopeDeadCode> _4017_sdc = jule::new_ptr<_1cde1acb4_scopeDeadCode>(_1cde1acb4_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1cde1d888_optimizeStmts(_4017_sdc);
	};
}



inline void _1cde1b4e0_optimizeBodyChildExceptional(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Ptr<_213cb8a72_Scope>* _5053_s) {
	jule::Ptr<_1cde1acb4_scopeDeadCode> _5117_sdc = jule::new_ptr<_1cde1acb4_scopeDeadCode>(_1cde1acb4_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1cde1d888_optimizeStmts(_5117_sdc);
	};
}



inline void _1cde1b776_optimizeBodyChild(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Ptr<_213cb8a72_Scope>* _6142_s) {
	jule::Ptr<_1cde1acb4_scopeDeadCode> _6217_sdc = jule::new_ptr<_1cde1acb4_scopeDeadCode>(_1cde1acb4_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1cde1d888_optimizeStmts(_6217_sdc);
	};
}



inline void _1cde1b9eb_optimizeExprModel(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1cde1ec1e_exprDeadCode _7213_edc = static__1cde20307_new(&(_self_));;
	_1cde26022_optimize(&_7213_edc, _7142_model);
}



inline void _1cde1bbc7_eliminateFollowed(_1cde1acb4_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1cde1acb4_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1b9037dc4:;
	}
	_iter_end_1b9037dc4:;;
}



inline void _1cde1be4c_pushGoto(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Ptr<_213cbb59c_GotoSt> _9232_gt) {
	jule::I32 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1b903a8ee:;
	}
	_iter_end_1b903a8ee:;;
	{ jule::Slice<jule::Ptr<_213cbb59c_GotoSt>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1cde1c1c2_pushLabel(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Ptr<_213cbb2b1_Label> _10233_l) {
	jule::I32 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1b903c48e;
			};
			(_10317_i)++;
		}
	_iter_next_1b903c48e:;
	}
	_iter_end_1b903c48e:;;
	{ jule::Slice<jule::Ptr<_213cbb2b1_Label>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1cde1c447_optimizeRangeIter(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Ptr<_213cba722_RangeIter> _11541_it) {
	_1cde1b9eb_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1cde1b776_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1cde1c6bc_optimizeWhileIter(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Ptr<_213cb9d3c_WhileIter> _12041_it) {
	_1cde1b9eb_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1cde1d6ac_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1cde1b776_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1cde1c942_optimizeInfIter(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Ptr<_213cb98b9_InfIter> _12839_it) {
	_1cde1b776_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1cde1cbb7_optimizeConditional(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Ptr<_213cb95cd_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9042719:;
		if (it != expr_end) {
			jule::Ptr<_213cb8e6d_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1cde1b9eb_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1cde1b776_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_1b9042719:;
			++it;
			goto _iter_begin_1b9042719;
		}
		_iter_end_1b9042719:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1cde1b248_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1cde1b776_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1cde1ce3c_optimizeMatch(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Ptr<_213cbc889_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9044e58:;
		if (it != expr_end) {
			jule::Ptr<_213cbd3d4_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b9045783:;
					if (it != expr_end) {
						jule::Ptr<_213d5ae22_Data> _15225_expr = *it;
						{
							_1cde1b9eb_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_1b9045783:;
						++it;
						goto _iter_begin_1b9045783;
					}
					_iter_end_1b9045783:;
				};
				_1cde1b776_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_1b9044e58:;
			++it;
			goto _iter_begin_1b9044e58;
		}
		_iter_end_1b9044e58:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1cde1b248_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1cde1b776_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1cde1d1b2_optimizeAssign(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Ptr<_213cbbdc7_Assign> _16838_assign) {
	_1cde1b9eb_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1cde1b9eb_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1cde1d437_optimizeMultiAssign(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Ptr<_213cbc27e_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9048698:;
		if (it != expr_end) {
			jule::Ptr<_213d5ae22_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1cde1b9eb_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_1b9048698:;
			++it;
			goto _iter_begin_1b9048698;
		}
		_iter_end_1b9048698:;
	};
	_1cde1b9eb_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1cde1d6ac_optimizeStmt(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b9049bd8:;
			{
				jule::Ptr<_213cb8a72_Scope> _18521_scope = _18236_st.cast_ptr<_213cb8a72_Scope>(&__jule_any_type22);;
				if (_18521_scope.get()._field_Deferred) {
					_1cde1dbb8_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1cde1b248_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b9049d5e:;
			{
				_1cde1c447_optimizeRangeIter(_self_, _18236_st.cast_ptr<_213cba722_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b9049dc5:;
			{
				_1cde1c6bc_optimizeWhileIter(_self_, _18236_st.cast_ptr<_213cb9d3c_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b9049e3b:;
			{
				_1cde1c942_optimizeInfIter(_self_, _18236_st.cast_ptr<_213cb98b9_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b9049eb3:;
			{
				_1cde1cbb7_optimizeConditional(_self_, _18236_st.cast_ptr<_213cb95cd_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b904a03a:;
			{
				_1cde1ce3c_optimizeMatch(_self_, _18236_st.cast_ptr<_213cbc889_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b904a0b2:;
			{
				_1cde1d1b2_optimizeAssign(_self_, _18236_st.cast_ptr<_213cbbdc7_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b904a139:;
			{
				_1cde1d437_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_213cbc27e_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b904a1b1:;
			{
				jule::Ptr<_213d5ae22_Data> _20621_d = _18236_st.cast_ptr<_213d5ae22_Data>(&__jule_any_type24);;
				if (_self_.get()._field_except) {
					goto _match_end_1b9049ce8;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_1b90505d4:;
						{
							_1cde1bbc7_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1b904ee52:;
						{
							_1cde1b9eb_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_1b905022c:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b904a238:;
			{
				_1cde1bbc7_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b904a2b0:;
			{
				_1cde1be4c_pushGoto(_self_, _18236_st.cast_ptr<_213cbb59c_GotoSt>(&__jule_any_type43));
				_1cde1bbc7_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b904a337:;
			{
				_1cde1c1c2_pushLabel(_self_, _18236_st.cast_ptr<_213cbb2b1_Label>(&__jule_any_type21));
			}
		}
		_match_end_1b9049ce8:;
	};
}



inline void _1cde1d888_optimizeStmts(jule::Ptr<_1cde1acb4_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1cde1d6ac_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1b905196a:;
	}
	_iter_end_1b905196a:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1cde1acb4_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1cde1ec1e_exprDeadCode static__1cde20307_new(jule::Ptr<_1cde1acb4_scopeDeadCode>* _5024_s) {
	return _1cde1ec1e_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1cde2057c_binary(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c687be_BinopExprModel> _5625_m) {
	_1cde26022_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1cde26022_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1cde20802_unary(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c68b76_UnaryExprModel> _6124_m) {
	_1cde26022_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1cde20a77_structureLit(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c694e5_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9054d25:;
		if (it != expr_end) {
			jule::Ptr<_213c69171_StructArgExprModel> _6621_arg = *it;
			{
				_1cde26022_optimize(_self_, &(_6621_arg.get()._field_Expr.get()._field_Model));
			}
			_iter_next_1b9054d25:;
			++it;
			goto _iter_begin_1b9054d25;
		}
		_iter_end_1b9054d25:;
	};
}



inline void _1cde20cec_allocStructure(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c69803_AllocStructLitExprModel> _7133_m) {
	_1cde20a77_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1cde21072_casting(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c69d53_CastingExprModel> _7526_m) {
	_1cde26022_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1cde212e7_args(_1cde1ec1e_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9056e04:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1cde26022_optimize(_self_, &(_8021_arg));
			}
			_iter_next_1b9056e04:;
			++it;
			goto _iter_begin_1b9056e04;
		}
		_iter_end_1b9056e04:;
	};
}



inline void _1cde2156c_funcCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6a705_FnCallExprModel> _8527_m) {
	_1cde26022_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1cde212e7_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1cde1b4e0_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1cde217e2_slice(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6aaac_SliceExprModel> _9324_m) {
	_1cde212e7_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1cde21a67_array(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6d7d5_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1cde26022_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1cde212e7_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1cde21cdc_indexing(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6b030_IndexingExprModel> _10427_m) {
	_1cde26022_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1cde26022_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1cde22062_anonFunc(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6b3d7_AnonFnExprModel> _10927_m) {
	_1cde1dbb8_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1cde222d7_mapExpr(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6bc12_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b905c25b:;
		if (it != expr_end) {
			jule::Ptr<_213c6b78e_KeyValPairExprModel> _11421_pair = *it;
			{
				_1cde26022_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1cde26022_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_1b905c25b:;
			++it;
			goto _iter_begin_1b905c25b;
		}
		_iter_end_1b905c25b:;
	};
}



inline void _1cde2255c_slicing(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6c251_SlicingExprModel> _12026_m) {
	_1cde26022_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1cde26022_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1cde26022_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1cde227d2_traitSub(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6c790_TraitSubIdentExprModel> _12827_m) {
	_1cde26022_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1cde22a57_structureSub(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6d076_StructSubIdentExprModel> _13231_m) {
	_1cde26022_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1cde22ccc_commonSub(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6e132_CommonSubIdentExprModel> _13628_m) {
	_1cde26022_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1cde23052_tuple(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6e42e_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90610d9:;
		if (it != expr_end) {
			jule::Ptr<_213d5ae22_Data> _14121_d = *it;
			{
				_1cde26022_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_1b90610d9:;
			++it;
			goto _iter_begin_1b90610d9;
		}
		_iter_end_1b90610d9:;
	};
}



inline void _1cde232c7_newCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c703ec_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1cde26022_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1cde2354c_outCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6e808_BuiltinOutCallExprModel> _15226_m) {
	_1cde26022_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1cde237c2_outlnCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c6ebe3_BuiltinOutlnCallExprModel> _15628_m) {
	_1cde26022_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1cde23a47_panicCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c707d7_BuiltinPanicCallExprModel> _16028_m) {
	_1cde26022_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1cde23cbc_assertCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c70c8d_BuiltinAssertCallExprModel> _16429_m) {
	_1cde26022_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1cde24042_errorCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c72b6e_BuiltinErrorCallExprModel> _16828_m) {
	_1cde26022_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1cde242b7_makeCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c71244_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1cde26022_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1cde26022_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1cde2453c_appendCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c7162e_BuiltinAppendCallExprModel> _18129_m) {
	_1cde26022_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1cde26022_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1cde247b2_lenCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c7194d_BuiltinLenCallExprModel> _18626_m) {
	_1cde26022_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1cde24a37_capCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c71c6c_BuiltinCapCallExprModel> _19026_m) {
	_1cde26022_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1cde24cac_cloneCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c70012_BuiltinCloneCallExprModel> _19428_m) {
	_1cde26022_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1cde25032_deleteCall(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c72421_BuiltinDeleteCallExprModel> _19829_m) {
	_1cde26022_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1cde26022_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1cde252a7_sizeof(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c72e6b_SizeofExprModel> _20525_m) {
	_1cde26022_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1cde2552c_alignof(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c73257_AlignofExprModel> _20926_m) {
	_1cde26022_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1cde257a2_integratedToStr(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c73851_IntegratedToStrExprModel> _21334_m) {
	_1cde26022_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1cde25a27_free(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c74005_FreeExprModel> _21723_m) {
	_1cde26022_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1cde25c9c_backendEmit(_1cde1ec1e_exprDeadCode* _self_, jule::Ptr<_213c73c19_BackendEmitExprModel> _22130_m) {
	_1cde212e7_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1cde26022_optimize(_1cde1ec1e_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b906c9b9:;
			{
				_1cde2057c_binary(_self_, (*(_22528_model)).cast_ptr<_213c687be_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b906ca41:;
			{
				_1cde20802_unary(_self_, (*(_22528_model)).cast_ptr<_213c68b76_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b906cab8:;
			{
				_1cde20a77_structureLit(_self_, (*(_22528_model)).cast_ptr<_213c694e5_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b906ce92:;
			{
				_1cde20cec_allocStructure(_self_, (*(_22528_model)).cast_ptr<_213c69803_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b906d008:;
			{
				_1cde21072_casting(_self_, (*(_22528_model)).cast_ptr<_213c69d53_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b906d080:;
			{
				_1cde2156c_funcCall(_self_, (*(_22528_model)).cast_ptr<_213c6a705_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b906d107:;
			{
				_1cde217e2_slice(_self_, (*(_22528_model)).cast_ptr<_213c6aaac_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b906d17e:;
			{
				_1cde21a67_array(_self_, (*(_22528_model)).cast_ptr<_213c6d7d5_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b906d206:;
			{
				_1cde21cdc_indexing(_self_, (*(_22528_model)).cast_ptr<_213c6b030_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b906d27d:;
			{
				_1cde22062_anonFunc(_self_, (*(_22528_model)).cast_ptr<_213c6b3d7_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b906d305:;
			{
				_1cde222d7_mapExpr(_self_, (*(_22528_model)).cast_ptr<_213c6bc12_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b906d37c:;
			{
				_1cde2255c_slicing(_self_, (*(_22528_model)).cast_ptr<_213c6c251_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b906d404:;
			{
				_1cde227d2_traitSub(_self_, (*(_22528_model)).cast_ptr<_213c6c790_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b906d47b:;
			{
				_1cde22a57_structureSub(_self_, (*(_22528_model)).cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b906d503:;
			{
				_1cde22ccc_commonSub(_self_, (*(_22528_model)).cast_ptr<_213c6e132_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b906d57a:;
			{
				_1cde23052_tuple(_self_, (*(_22528_model)).cast_ptr<_213c6e42e_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b906d602:;
			{
				_1cde2354c_outCall(_self_, (*(_22528_model)).cast_ptr<_213c6e808_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b906d679:;
			{
				_1cde237c2_outlnCall(_self_, (*(_22528_model)).cast_ptr<_213c6ebe3_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b906d701:;
			{
				_1cde232c7_newCall(_self_, (*(_22528_model)).cast_ptr<_213c703ec_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b906d778:;
			{
				_1cde23a47_panicCall(_self_, (*(_22528_model)).cast_ptr<_213c707d7_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b906d800:;
			{
				_1cde23cbc_assertCall(_self_, (*(_22528_model)).cast_ptr<_213c70c8d_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b906d877:;
			{
				_1cde24042_errorCall(_self_, (*(_22528_model)).cast_ptr<_213c72b6e_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b906d8ee:;
			{
				_1cde242b7_makeCall(_self_, (*(_22528_model)).cast_ptr<_213c71244_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b906d976:;
			{
				_1cde2453c_appendCall(_self_, (*(_22528_model)).cast_ptr<_213c7162e_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b906d9ed:;
			{
				_1cde247b2_lenCall(_self_, (*(_22528_model)).cast_ptr<_213c7194d_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b906da75:;
			{
				_1cde24a37_capCall(_self_, (*(_22528_model)).cast_ptr<_213c71c6c_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b906daec:;
			{
				_1cde24cac_cloneCall(_self_, (*(_22528_model)).cast_ptr<_213c70012_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b906db74:;
			{
				_1cde25032_deleteCall(_self_, (*(_22528_model)).cast_ptr<_213c72421_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b906dbeb:;
			{
				_1cde252a7_sizeof(_self_, (*(_22528_model)).cast_ptr<_213c72e6b_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b906dc73:;
			{
				_1cde2552c_alignof(_self_, (*(_22528_model)).cast_ptr<_213c73257_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b906dcea:;
			{
				_1cde257a2_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_213c73851_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b906dd72:;
			{
				_1cde25a27_free(_self_, (*(_22528_model)).cast_ptr<_213c74005_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b906dde9:;
			{
				_1cde25c9c_backendEmit(_self_, (*(_22528_model)).cast_ptr<_213c73c19_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1b906cbb7:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1cde1ec1e_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213e6290d_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213e62cc6_StrAppendExprModel _Src) {
	_Stream << "StrAppendExprModel{";
	_Stream << "Str:" << _Src._field_Str << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213e630b2_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213e63447_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213e637cc_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213e63b84_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213e641c3_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213e646ac_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213e64954_InlineStdInternalNosafeStobs _Src) {
	_Stream << "InlineStdInternalNosafeStobs{";
	_Stream << "Str:" << _Src._field_Str;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213e65b86_scopeOptimizer> static__213e660e8_new(jule::Ptr<_213cb8a72_Scope> _4623_scope) {
	return jule::new_ptr<_213e65b86_scopeOptimizer>(_213e65b86_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _213e6636d_setCurrentStmt(_213e65b86_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _213e665e3_optimizeData(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213d5ae22_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b90ade17:;
			{
				jule::Ptr<_213c6a705_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_213c6a705_FnCallExprModel>(&__jule_any_type35);;
				if (_22991518b_Production) {
					if (((!(_213c7aa45_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _213e697a0_isStdPackage(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_213e6636d_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1b90adc08:;
	};
	static__213e6b9d3_optimize(&(_5635_d.get()._field_Model));
}



inline void _213e66868_optimizeVar(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213d11988_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__213e6b9d3_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _213e66add_optimizeConditional(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cb95cd_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90b1b0c:;
		if (it != expr_end) {
			jule::Ptr<_213cb8e6d_If> _7821_elif = *it;
			{
				static__213e6b9d3_optimize(&(_7821_elif.get()._field_Expr));
				_213e69184_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_1b90b1b0c:;
			++it;
			goto _iter_begin_1b90b1b0c;
		}
		_iter_end_1b90b1b0c:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_213e69184_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1cdcddadd_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90b3779:;
		if (it != expr_end) {
			jule::I32 _9314_i = it - expr->begin();
			jule::Ptr<_213cb8e6d_If> _9321_elif = *it;
			{
				if ((!(_213e69aad_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_1b90b3779;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_213cb9259_Else>(_213cb9259_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_1b90b3779;
			}
			_iter_next_1b90b3779:;
			++it;
			_9314_i++;
			goto _iter_begin_1b90b3779;
		}
		_iter_end_1b90b3779:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_213cb8e6d_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_213cb8e6d_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_213e6a44e_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_1b90b65e5:;
	}
	_iter_end_1b90b65e5:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I32 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90b7abe:;
		if (it != expr_end) {
			jule::I32 _13013_j = it - expr->begin();
			jule::Ptr<_213cb8e6d_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_1b90b7abe:;
			++it;
			_13013_j++;
			goto _iter_begin_1b90b7abe;
		}
		_iter_end_1b90b7abe:;
	};
	if ((_12917_only != -1LL)) {
		_213e6636d_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _213e66ec8_buildDefaultConstantTrueCase(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cbd3d4_Case> _14651_case, jule::I32* _14669_i, jule::Ptr<_213cbc889_Match>* _14682_m) {
	_14651_case.get()._field_Exprs=nullptr;
	jule::I32 _14813_start = (*(_14669_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14651_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1b90ba561;
			};
			jule::Any *_15422_stmt = &(_14651_case.get()._field_Scope.get()._field_Stmts[(_14651_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_1b90bbc16:;
					{
						((*(_14669_i)))++;
						if (((*(_14669_i)) >= (*(_14682_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14682_m)).get()._field_Default.get()._field_Scope, &__jule_any_type22);
							goto _iter_end_1b90ba561;
						};
						_14651_case=(*(_14682_m)).get()._field_Cases[(*(_14669_i))];
						(*(_15422_stmt))=jule::Any(_14651_case.get()._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1b90bbcd2:;
					{
						goto _iter_end_1b90ba561;
					}
				}
				_match_end_1b90baa7d:;
			};
		}
	_iter_next_1b90ba561:;
	}
	_iter_end_1b90ba561:;;
	(*(_14682_m)).get()._field_Default=(*(_14682_m)).get()._field_Cases[_14813_start];
	(*(_14682_m)).get()._field_Cases=(*(_14682_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _213e671d7_optimizeMatch(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cbc889_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90bdc7e:;
		if (it != expr_end) {
			jule::Ptr<_213cbd3d4_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b90be5ba:;
					if (it != expr_end) {
						jule::Ptr<_213d5ae22_Data> _17425_expr = *it;
						{
							static__213e6b9d3_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_1b90be5ba:;
						++it;
						goto _iter_begin_1b90be5ba;
					}
					_iter_end_1b90be5ba:;
				};
				_213e69184_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_1b90bdc7e:;
			++it;
			goto _iter_begin_1b90bdc7e;
		}
		_iter_end_1b90bdc7e:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_213e69184_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1cdcddadd_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90c0e3a:;
		if (it != expr_end) {
			jule::I32 _19018_i = it - expr->begin();
			jule::Ptr<_213cbd3d4_Case> _19025_case = *it;
			{
				if ((!(_213e6a1a7_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_1b90c0e3a;
				};
				_18717_constCase=true;
				_213e66ec8_buildDefaultConstantTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_1b90c0e3a;
			}
			_iter_next_1b90c0e3a:;
			++it;
			_19018_i++;
			goto _iter_begin_1b90c0e3a;
		}
		_iter_end_1b90c0e3a:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_213cbd3d4_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_213cbd3d4_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_213e6a707_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_1b90c36ce:;
	}
	_iter_end_1b90c36ce:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I32 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90c46ad:;
		if (it != expr_end) {
			jule::I32 _22013_j = it - expr->begin();
			jule::Ptr<_213cbd3d4_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_1b90c46ad:;
			++it;
			_22013_j++;
			goto _iter_begin_1b90c46ad;
		}
		_iter_end_1b90c46ad:;
	};
	if ((_21917_only != -1LL)) {
		_213e6636d_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _213e6745c_optimizeRangeIter(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cba722_RangeIter> _23640_it) {
	static__213e6b9d3_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_213e69184_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _213e676d2_optimizeWhileIter(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cb9d3c_WhileIter> _24140_it) {
	static__213e6b9d3_optimize(&(_24140_it.get()._field_Expr));
	_213e68e0e_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_213e69184_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _213e679e0_substr(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cbbdc7_Assign> _24729_a) {
	if ((_24729_a.get()._field_Op.get()._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b90c88d2:;
			{
				jule::Ptr<_213c6c251_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_213c6c251_SlicingExprModel>(&__jule_any_type97);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_213e6636d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_213e641c3_MutSlicingExprModel>(_213e641c3_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1b90c887c:;
	};
	return false;;
}



inline jule::Bool _213e67ced_strInsert(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cbbdc7_Assign> _26732_a) {
	if ((_26732_a.get()._field_Op.get()._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ _26732_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b90cb495:;
			{
				jule::Ptr<_213c687be_BinopExprModel> _27321_m = _26732_a.get()._field_R.get()._field_Model.cast_ptr<_213c687be_BinopExprModel>(&__jule_any_type114);;
				if ((_27321_m.get()._field_Right.get()._field_Model == _26732_a.get()._field_L.get()._field_Model)) {
					_213e6636d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_213e646ac_StrInsertBeginExprModel>(_213e646ac_StrInsertBeginExprModel{._field_Dest=_26732_a.get()._field_L.get()._field_Model, ._field_Expr=_27321_m.get()._field_Left.get()._field_Model}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1b90cb440:;
	};
	return false;;
}



inline jule::Bool _213e6810b_strAppend(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cbbdc7_Assign> _28532_a) {
	if ((_28532_a.get()._field_Op.get()._field_Id != static_cast<jule::U32>(40LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ _28532_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b90cde7b:;
			{
				_213e6636d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_213e62cc6_StrAppendExprModel>(_213e62cc6_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_28532_a.get()._field_R.get()._field_Model}), &__jule_any_type125));
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b90ce003:;
			{
				jule::Ptr<_213c69d53_CastingExprModel> _30021_c = _28532_a.get()._field_R.get()._field_Model.cast_ptr<_213c69d53_CastingExprModel>(&__jule_any_type98);;
				jule::Ptr<_213d91089_Prim> _30121_prim = _213d8b051_Prim(_30021_c.get()._field_ExprKind.ptr());;
				if (((_30121_prim == nullptr) && (_213d8beca_Slc(_30021_c.get()._field_ExprKind.ptr()) != nullptr))) {
					_30121_prim=_213d8b051_Prim(_213d8beca_Slc(_30021_c.get()._field_ExprKind.ptr()).get()._field_Elem.ptr());
				};
				if (((_30121_prim == nullptr) || ((!(_213d92860_IsU8(_30121_prim.ptr()))) && (!(_213d92387_IsI32(_30121_prim.ptr())))))) {
					goto _match_end_1b90cde26;
				};
				_213e6636d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_213e62cc6_StrAppendExprModel>(_213e62cc6_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_30021_c.get()._field_Expr}), &__jule_any_type125));
				return true;;
			}
		}
		_match_end_1b90cde26:;
	};
	return false;;
}



inline jule::Bool _213e68419_strAssign(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cbbdc7_Assign> _31732_a) {
	if ((!(_1cdcddda7_Str))) {
		return false;;
	};
	jule::Ptr<_213d91089_Prim> _32113_lp = _213d8b051_Prim(_31732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_32113_lp == nullptr) || (!(_213d9428a_IsStr(_32113_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_213e679e0_substr(_self_, _31732_a) || _213e67ced_strInsert(_self_, _31732_a) || _213e6810b_strAppend(_self_, _31732_a)) {
			_case_begin_1b90d48aa:;
			{
				return true;;
			}
		}
		_match_end_1b90d4855:;
	};
	return false;;
}



inline void _213e6868e_optimizeAssign(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cbbdc7_Assign> _33437_assign) {
	if (_213e68419_strAssign(_self_, _33437_assign)) {
		return;;
	};
	static__213e6b9d3_optimize(&(_33437_assign.get()._field_L.get()._field_Model));
	static__213e6b9d3_optimize(&(_33437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _33437_assign.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1b90d678b:;
			{
				if ((_1cdcdcdb7_Math && (_213d8c4a3_Struct(_33437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_33437_assign.get()._field_Op.get()._field_Kind=_33437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_33437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _34725_model = jule::Any(jule::new_ptr<_213c687be_BinopExprModel>(_213c687be_BinopExprModel{._field_Left=_33437_assign.get()._field_L, ._field_Right=_33437_assign.get()._field_R, ._field_Op=_33437_assign.get()._field_Op}), &__jule_any_type114);;
					static__213e6b9d3_optimize(&(_34725_model));
					{
						auto &_match_expr{ _34725_model };
						
						if (_match_expr.type == &__jule_any_type114) {
							_case_begin_1b90d8cee:;
							{
								_33437_assign.get()._field_R=jule::new_ptr<_213c68307_OperandExprModel>((*(_33437_assign.get()._field_R)));
								_33437_assign.get()._field_Op.get()._field_Id=static_cast<jule::U32>(71LLU);
								_33437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_33437_assign.get()._field_R.get()._field_Model=_34725_model;
								return;;
							}
						}
						_match_end_1b90d8b23:;
					};
					(_33437_assign.get()._field_Op.get()._field_Kind).append("=", 1);
					return;;
				};
			}
		}
		_match_end_1b90d668c:;
	};
	if (_1cdcdcaa9_Append) {
		{
			auto &_match_expr{ _33437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1b90daa04:;
				{
					jule::Ptr<_213c7162e_BuiltinAppendCallExprModel> _36925_m = _33437_assign.get()._field_R.get()._field_Model.cast_ptr<_213c7162e_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_213e737dc_areSameLvalueExprModel(&(_33437_assign.get()._field_L.get()._field_Model), &(_36925_m.get()._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ _36925_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type82) {
							_case_begin_1b90dbc03:;
							{
								_213e6636d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_213e637cc_PushToSliceExprModel>(_213e637cc_PushToSliceExprModel{._field_Dest=_36925_m.get()._field_Dest, ._field_Elems=_36925_m.get()._field_Elements.cast_ptr<_213c6aaac_SliceExprModel>(&__jule_any_type82)}), &__jule_any_type126));
							}
						}
						else {
							_case_begin_1b90dc0dd:;
							{
								_213e6636d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_213e63b84_AppendToSliceExprModel>(_213e63b84_AppendToSliceExprModel{._field_Dest=_33437_assign.get()._field_L.get()._field_Model, ._field_Slice=_36925_m.get()._field_Elements}), &__jule_any_type127));
							}
						}
						_match_end_1b90dc077:;
					};
				}
			}
			_match_end_1b90d8a68:;
		};
	};
}



inline void _213e68914_optimizeMultiAssign(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cbc27e_MultiAssign> _39142_assign) {
	{
		auto expr = &(_39142_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90dd276:;
		if (it != expr_end) {
			jule::Ptr<_213d5ae22_Data> _39221_l = *it;
			{
				if ((_39221_l != nullptr)) {
					static__213e6b9d3_optimize(&(_39221_l.get()._field_Model));
				};
			}
			_iter_next_1b90dd276:;
			++it;
			goto _iter_begin_1b90dd276;
		}
		_iter_end_1b90dd276:;
	};
	static__213e6b9d3_optimize(&(_39142_assign.get()._field_R));
}



inline void _213e68b89_optimizeRet(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cbdd0d_RetSt> _40034_r) {
	static__213e6b9d3_optimize(&(_40034_r.get()._field_Expr));
}



inline void _213e68e0e_optimizeStmt(_213e65b86_scopeOptimizer* _self_, jule::Any _40435_stmt) {
	{
		auto &_match_expr{ _40435_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b90e0102:;
			{
				_213e69184_optimizeChild(_self_, _40435_stmt.cast_ptr<_213cb8a72_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b90e0168:;
			{
				_213e665e3_optimizeData(_self_, _40435_stmt.cast_ptr<_213d5ae22_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b90e01ce:;
			{
				_213e66868_optimizeVar(_self_, _40435_stmt.cast_ptr<_213d11988_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b90e0245:;
			{
				_213e66add_optimizeConditional(_self_, _40435_stmt.cast_ptr<_213cb95cd_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b90e02ab:;
			{
				_213e6745c_optimizeRangeIter(_self_, _40435_stmt.cast_ptr<_213cba722_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b90e0322:;
			{
				_213e676d2_optimizeWhileIter(_self_, _40435_stmt.cast_ptr<_213cb9d3c_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b90e0388:;
			{
				_213e69184_optimizeChild(_self_, _40435_stmt.cast_ptr<_213cb98b9_InfIter>(&__jule_any_type37).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b90e03ee:;
			{
				_213e6868e_optimizeAssign(_self_, _40435_stmt.cast_ptr<_213cbbdc7_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b90e0465:;
			{
				_213e68914_optimizeMultiAssign(_self_, _40435_stmt.cast_ptr<_213cbc27e_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b90e04dc:;
			{
				_213e671d7_optimizeMatch(_self_, _40435_stmt.cast_ptr<_213cbc889_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b90e0564:;
			{
				_213e68b89_optimizeRet(_self_, _40435_stmt.cast_ptr<_213cbdd0d_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_1b90dee9d:;
	};
}



inline void _213e69184_optimizeChild(_213e65b86_scopeOptimizer* _self_, jule::Ptr<_213cb8a72_Scope> _43136_child) {
	jule::Ptr<_213e65b86_scopeOptimizer> _43217_so = static__213e660e8_new(_43136_child);;
	_213e69360_optimize(_43217_so.ptr());
}



inline void _213e69360_optimize(_213e65b86_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90eabe0:;
		if (it != expr_end) {
			jule::I32 _43814_i = it - expr->begin();
			jule::Any _43821_stmt = *it;
			{
				(*(_self_))._field_i=_43814_i;
				_213e68e0e_optimizeStmt(_self_, _43821_stmt);
			}
			_iter_next_1b90eabe0:;
			++it;
			_43814_i++;
			goto _iter_begin_1b90eabe0;
		}
		_iter_end_1b90eabe0:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213e65b86_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__213e6b9d3_optimize(jule::Any* _5829_model) {
	if (_1cde265c7_exprEnabled) {
		jule::Ptr<_213e6b4c7_exprOptimizer> _6121_exop = jule::new_ptr<_213e6b4c7_exprOptimizer>(_213e6b4c7_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_213e73017_do(_6121_exop.ptr());
	};
}



inline jule::Bool _213e6bcd0_strCond(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c687be_BinopExprModel> _6826_m) {
	jule::Ptr<_213d91089_Prim> _6913_lp = _213d8b051_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_213d9428a_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((_6826_m.get()._field_Op.get()._field_Id != static_cast<jule::U32>(50LLU)) && (_6826_m.get()._field_Op.get()._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b9108956:;
			{
				({
					jule::Ptr<_213c68307_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_213c68307_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1b9108901:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b9107bdb:;
			{
				goto _match_end_1b91096e3;
			}
		}
		else {
			_case_begin_1b9109a34:;
			{
				return true;;
			}
		}
		_match_end_1b91096e3:;
	};
	_julec_label_opt:;
	jule::Ptr<_2121a4c51_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_2121a4c51_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1b910ab01:;
			{
				if (_2121a6c86_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_213c6e132_CommonSubIdentExprModel>(_213c6e132_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_1b910aa9b;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_213e6290d_StrCompExprModel>(_213e6290d_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type128);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1b910ab67:;
			{
				if (_2121a6c86_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_2114c1b73_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Id=static_cast<jule::U32>(68LLU);
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_213c68b76_UnaryExprModel>(_213c68b76_UnaryExprModel{._field_Expr=jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Model=jule::Any(jule::new_ptr<_213c6e132_CommonSubIdentExprModel>(_213c6e132_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_1b910aa9b;
				};
				jule::Any _12221_model = jule::Any(jule::new_ptr<_213e6290d_StrCompExprModel>(_213e6290d_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type128);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12221_model))))));
			}
		}
		_match_end_1b910aa9b:;
	};
	return true;;
}



inline void _213e6c055_binary(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c687be_BinopExprModel> _13225_m) {
	static__213e6b9d3_optimize(&(_13225_m.get()._field_Left.get()._field_Model));
	static__213e6b9d3_optimize(&(_13225_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13225_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b9113015:;
			{
				goto _match_end_1b9112a3c;
			}
		}
		else {
			_case_begin_1b9112ad6:;
			{
				return;;
			}
		}
		_match_end_1b9112a3c:;
	};
	if ((_1cdcddadd_Cond && _213e6bcd0_strCond(_self_, _13225_m))) {
		return;;
	};
	if ((!(_1cdcdcdb7_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13225_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b9113ae8:;
			{
				jule::Bool _15218_ok = false;;
				jule::U64 _15222_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _213e73457_checkForBitShiftOpt(&(_13225_m.get()._field_Left), &(_13225_m.get()._field_Right));
					_15218_ok = __jule_assign_result.__jule_result_arg0;
					_15222_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15218_ok) {
					_13225_m.get()._field_Op.get()._field_Id=static_cast<jule::U32>(56LLU);
					_13225_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_2121a4c51_Const> _15625_c = _13225_m.get()._field_Right.get()._field_Model.cast_ptr<_2121a4c51_Const>(&__jule_any_type19);;
					_2121a7c32_SetU64(_15625_c.ptr(), _15222_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1b9113b5e:;
			{
				jule::Bool _16118_ok = false;;
				jule::U64 _16122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _213e73457_checkForBitShiftOpt(&(_13225_m.get()._field_Left), &(_13225_m.get()._field_Right));
					_16118_ok = __jule_assign_result.__jule_result_arg0;
					_16122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_16118_ok) {
					_13225_m.get()._field_Op.get()._field_Id=static_cast<jule::U32>(57LLU);
					_13225_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_2121a4c51_Const> _16525_c = _13225_m.get()._field_Right.get()._field_Model.cast_ptr<_2121a4c51_Const>(&__jule_any_type19);;
					_2121a7c32_SetU64(_16525_c.ptr(), _16122_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b9113bd6:;
			{
				jule::Ptr<_2121a4c51_Const> _17021_c = _13225_m.get()._field_Right.get()._field_Model.cast_ptr<_2121a4c51_Const>(&__jule_any_type19);;
				jule::F64 _17117_d = _2121a7737_AsF64(_17021_c.ptr());;
				if ((_17117_d == 2LL)) {
					_13225_m.get()._field_Op.get()._field_Id=static_cast<jule::U32>(65LLU);
					_13225_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_2121a79ac_SetI64(_17021_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1b9113a93:;
	};
	jule::Any _17817_model = jule::Any(jule::new_ptr<_213e630b2_UnsafeBinopExprModel>(_213e630b2_UnsafeBinopExprModel{._field_Node=_13225_m}), &__jule_any_type129);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17817_model))))));
}



inline void _213e6c2ca_unary(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c68b76_UnaryExprModel> _18224_m) {
	static__213e6b9d3_optimize(&(_18224_m.get()._field_Expr.get()._field_Model));
	if ((_1cdcdd714_Ptr && (_18224_m.get()._field_Op.get()._field_Id == static_cast<jule::U32>(62LLU)))) {
		{
			auto &_match_expr{ _18224_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_1b911b518:;
				{
					jule::Ptr<_213c68b76_UnaryExprModel> _18725_um = _18224_m.get()._field_Expr.get()._field_Model.cast_ptr<_213c68b76_UnaryExprModel>(&__jule_any_type74);;
					if ((_18725_um.get()._field_Op.get()._field_Id == static_cast<jule::U32>(65LLU))) {
						(*((*(_self_))._field_model))=_18725_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1b911b4b3:;
		};
	};
}



inline void _213e6c550_structureLit(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c694e5_StructLitExprModel> _19531_m) {
	{
		auto expr = &(_19531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b911d064:;
		if (it != expr_end) {
			jule::Ptr<_213c69171_StructArgExprModel> _19621_arg = *it;
			{
				static__213e6b9d3_optimize(&(_19621_arg.get()._field_Expr.get()._field_Model));
			}
			_iter_next_1b911d064:;
			++it;
			goto _iter_begin_1b911d064;
		}
		_iter_end_1b911d064:;
	};
}



inline void _213e6c7c5_allocStructure(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c69803_AllocStructLitExprModel> _20133_m) {
	_213e6c550_structureLit(_self_, _20133_m.get()._field_Lit);
}



inline void _213e6ca4a_casting(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c69d53_CastingExprModel> _20526_m) {
	static__213e6b9d3_optimize(&(_20526_m.get()._field_Expr));
}



inline void _213e6ccc0_args(_213e6b4c7_exprOptimizer* _self_, jule::Slice<jule::Any>* _20924_args) {
	{
		auto expr = _20924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b911e917:;
		if (it != expr_end) {
			jule::I32 _21014_i = it - expr->begin();
			jule::Any _21021_arg = *it;
			{
				static__213e6b9d3_optimize(&(_21021_arg));
				(*(_20924_args))[_21014_i]=_21021_arg;
			}
			_iter_next_1b911e917:;
			++it;
			_21014_i++;
			goto _iter_begin_1b911e917;
		}
		_iter_end_1b911e917:;
	};
}



inline void _213e6d045_scope(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213cb8a72_Scope>* _21625_s) {
	jule::Ptr<_213e65b86_scopeOptimizer> _21717_scopt = static__213e660e8_new((*(_21625_s)));;
	_213e69360_optimize(_21717_scopt.ptr());
}



inline jule::Bool _213e6d375_optimizeSpecialFuncCalls(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6a705_FnCallExprModel>* _22144_m) {
	_1cdcda7ee_stdCacheData _22214_data;;
	jule::Bool _22220_ok = false;;
	_1cdcdac2d_stdCache.lookup(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_22144_m)).get()._field_Func)), &(_22214_data), &(_22220_ok));
	if ((!(_22220_ok))) {
		return false;;
	};
	_22214_data._field_do(_self_, &(_22214_data), _22144_m);
	return true;;
}



inline void _213e6d60b_funcCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6a705_FnCallExprModel> _23027_m) {
	if ((_1cde26a5b_stdEnabled && _213e6d375_optimizeSpecialFuncCalls(_self_, &(_23027_m)))) {
		return;;
	};
	static__213e6b9d3_optimize(&(_23027_m.get()._field_Expr));
	_213e6ccc0_args(_self_, &(_23027_m.get()._field_Args));
	if ((_23027_m.get()._field_Except != nullptr)) {
		_213e6d045_scope(_self_, &(_23027_m.get()._field_Except));
	};
}



inline void _213e6d881_slice(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6aaac_SliceExprModel> _24124_m) {
	_213e6ccc0_args(_self_, &(_24124_m.get()._field_Elems));
}



inline void _213e6db06_array(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6d7d5_ArrayExprModel> _24524_m) {
	if (((_24524_m.get()._field_Elems.len() == 2LL) && (_24524_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _24721_elem = _24524_m.get()._field_Elems[0LL];;
		static__213e6b9d3_optimize(&(_24721_elem));
		_24524_m.get()._field_Elems[0LL]=_24721_elem;
	};
	_213e6ccc0_args(_self_, &(_24524_m.get()._field_Elems));
}



inline void _213e6dd7b_indexing(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6b030_IndexingExprModel> _25427_m) {
	static__213e6b9d3_optimize(&(_25427_m.get()._field_Expr.get()._field_Model));
	static__213e6b9d3_optimize(&(_25427_m.get()._field_Index.get()._field_Model));
	if ((!(_1cdcdd181_Access))) {
		return;;
	};
	jule::Bool _26013_array = (_213d8bc66_Arr(_25427_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_26013_array && _213d5b791_IsConst(_25427_m.get()._field_Index.ptr()))) {
		jule::Any _26321_model = jule::Any(jule::new_ptr<_213e63447_UnsafeIndexingExprModel>(_213e63447_UnsafeIndexingExprModel{._field_Node=_25427_m}), &__jule_any_type130);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26321_model))))));
		return;;
	};
	{
		auto &_match_expr{ _25427_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b9128cea:;
			{
				jule::Ptr<_213d11988_Var> _26917_i = _25427_m.get()._field_Index.get()._field_Model.cast_ptr<_213d11988_Var>(&__jule_any_type8);;
				if ((_26917_i.get()._field_Mutable || (_26917_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1b9128b96;
				};
				{
					auto &_match_expr{ _25427_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b912a527:;
						{
							jule::Ptr<_213d11988_Var> _27521_r = _25427_m.get()._field_Expr.get()._field_Model.cast_ptr<_213d11988_Var>(&__jule_any_type8);;
							if ((_26917_i.get()._field_IterRelation.get()._field_Range == _27521_r)) {
								jule::Any _27829_model = jule::Any(jule::new_ptr<_213e63447_UnsafeIndexingExprModel>(_213e63447_UnsafeIndexingExprModel{._field_Node=_25427_m}), &__jule_any_type130);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_27829_model))))));
							};
						}
					}
					_match_end_1b912a4c2:;
				};
			}
		}
		_match_end_1b9128b96:;
	};
}



inline void _213e6e101_anonFunc(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6b3d7_AnonFnExprModel> _28527_m) {
	_213e6d045_scope(_self_, &(_28527_m.get()._field_Func.get()._field_Scope));
}



inline void _213e6e376_mapExpr(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6bc12_MapExprModel> _28926_m) {
	{
		auto expr = &(_28926_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b912ca13:;
		if (it != expr_end) {
			jule::Ptr<_213c6b78e_KeyValPairExprModel> _29021_pair = *it;
			{
				static__213e6b9d3_optimize(&(_29021_pair.get()._field_Key));
				static__213e6b9d3_optimize(&(_29021_pair.get()._field_Val));
			}
			_iter_next_1b912ca13:;
			++it;
			goto _iter_begin_1b912ca13;
		}
		_iter_end_1b912ca13:;
	};
}



inline void _213e6e5eb_slicing(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6c251_SlicingExprModel> _29626_m) {
	static__213e6b9d3_optimize(&(_29626_m.get()._field_Expr));
	static__213e6b9d3_optimize(&(_29626_m.get()._field_Left));
	if ((_29626_m.get()._field_Right != nullptr)) {
		static__213e6b9d3_optimize(&(_29626_m.get()._field_Right));
	};
}



inline void _213e6e871_traitSub(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6c790_TraitSubIdentExprModel> _30427_m) {
	static__213e6b9d3_optimize(&(_30427_m.get()._field_Expr));
}



inline void _213e6eae6_structureSub(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6d076_StructSubIdentExprModel> _30831_m) {
	static__213e6b9d3_optimize(&(_30831_m.get()._field_Expr.get()._field_Model));
}



inline void _213e6ed6b_commonSub(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6e132_CommonSubIdentExprModel> _31228_m) {
	static__213e6b9d3_optimize(&(_31228_m.get()._field_Expr));
}



inline void _213e700e1_tuple(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6e42e_TupleExprModel> _31624_m) {
	{
		auto expr = &(_31624_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b91307e6:;
		if (it != expr_end) {
			jule::Ptr<_213d5ae22_Data> _31721_d = *it;
			{
				static__213e6b9d3_optimize(&(_31721_d.get()._field_Model));
			}
			_iter_next_1b91307e6:;
			++it;
			goto _iter_begin_1b91307e6;
		}
		_iter_end_1b91307e6:;
	};
}



inline void _213e70366_newCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c703ec_BuiltinNewCallExprModel> _32226_m) {
	if ((_32226_m.get()._field_Init != nullptr)) {
		static__213e6b9d3_optimize(&(_32226_m.get()._field_Init));
	};
}



inline void _213e705db_outCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6e808_BuiltinOutCallExprModel> _32826_m) {
	static__213e6b9d3_optimize(&(_32826_m.get()._field_Expr));
}



inline void _213e70861_outlnCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c6ebe3_BuiltinOutlnCallExprModel> _33228_m) {
	static__213e6b9d3_optimize(&(_33228_m.get()._field_Expr));
}



inline void _213e70ad6_panicCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c707d7_BuiltinPanicCallExprModel> _33628_m) {
	static__213e6b9d3_optimize(&(_33628_m.get()._field_Expr));
}



inline void _213e70d5b_assertCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c70c8d_BuiltinAssertCallExprModel> _34029_m) {
	static__213e6b9d3_optimize(&(_34029_m.get()._field_Expr));
}



inline void _213e710d1_errorCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c72b6e_BuiltinErrorCallExprModel> _34428_m) {
	static__213e6b9d3_optimize(&(_34428_m.get()._field_Err.get()._field_Model));
}



inline void _213e71356_makeCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c71244_BuiltinMakeCallExprModel> _34827_m) {
	if ((_34827_m.get()._field_Len != nullptr)) {
		static__213e6b9d3_optimize(&(_34827_m.get()._field_Len));
	};
	if ((_34827_m.get()._field_Cap != nullptr)) {
		static__213e6b9d3_optimize(&(_34827_m.get()._field_Cap));
	};
}



inline void _213e715cb_appendCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c7162e_BuiltinAppendCallExprModel> _35729_m) {
	static__213e6b9d3_optimize(&(_35729_m.get()._field_Dest));
	static__213e6b9d3_optimize(&(_35729_m.get()._field_Elements));
}



inline void _213e71851_lenCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c7194d_BuiltinLenCallExprModel> _36226_m) {
	static__213e6b9d3_optimize(&(_36226_m.get()._field_Expr.get()._field_Model));
}



inline void _213e71ac6_capCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c71c6c_BuiltinCapCallExprModel> _36626_m) {
	static__213e6b9d3_optimize(&(_36626_m.get()._field_Expr.get()._field_Model));
}



inline void _213e71d4b_cloneCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c70012_BuiltinCloneCallExprModel> _37028_m) {
	static__213e6b9d3_optimize(&(_37028_m.get()._field_Expr));
}



inline void _213e720c1_deleteCall(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c72421_BuiltinDeleteCallExprModel> _37429_m) {
	static__213e6b9d3_optimize(&(_37429_m.get()._field_Dest.get()._field_Model));
	if ((_37429_m.get()._field_Key != nullptr)) {
		static__213e6b9d3_optimize(&(_37429_m.get()._field_Key.get()._field_Model));
	};
}



inline void _213e72346_sizeof(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c72e6b_SizeofExprModel> _38125_m) {
	static__213e6b9d3_optimize(&(_38125_m.get()._field_Expr));
}



inline void _213e725bb_alignof(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c73257_AlignofExprModel> _38526_m) {
	static__213e6b9d3_optimize(&(_38526_m.get()._field_Expr));
}



inline void _213e72841_integratedToStr(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c73851_IntegratedToStrExprModel> _38934_m) {
	static__213e6b9d3_optimize(&(_38934_m.get()._field_Expr));
}



inline void _213e72ab6_free(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c74005_FreeExprModel> _39323_m) {
	static__213e6b9d3_optimize(&(_39323_m.get()._field_Expr));
}



inline void _213e72d3b_backendEmit(_213e6b4c7_exprOptimizer* _self_, jule::Ptr<_213c73c19_BackendEmitExprModel> _39730_m) {
	_213e6ccc0_args(_self_, &(_39730_m.get()._field_Exprs));
}



inline void _213e73017_do(_213e6b4c7_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b9138ca5:;
			{
				_213e6c055_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c687be_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b91390a2:;
			{
				_213e6c2ca_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c68b76_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b9139118:;
			{
				_213e6c550_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c694e5_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b913917e:;
			{
				_213e6c7c5_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c69803_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b91391e5:;
			{
				_213e6ca4a_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c69d53_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b913926c:;
			{
				_213e6d60b_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6a705_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b91392e4:;
			{
				_213e6d881_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6aaac_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b913936b:;
			{
				_213e6db06_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6d7d5_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b91393e3:;
			{
				_213e6dd7b_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6b030_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b913946a:;
			{
				_213e6e101_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6b3d7_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b91394e2:;
			{
				_213e6e376_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6bc12_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b9139569:;
			{
				_213e6e5eb_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6c251_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b91395e1:;
			{
				_213e6e871_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6c790_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b9139668:;
			{
				_213e6eae6_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b91396e0:;
			{
				_213e6ed6b_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6e132_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b9139767:;
			{
				_213e700e1_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6e42e_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b91397de:;
			{
				_213e705db_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6e808_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b9139866:;
			{
				_213e70861_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c6ebe3_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b91398dd:;
			{
				_213e70366_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c703ec_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b9139965:;
			{
				_213e70ad6_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c707d7_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b91399dc:;
			{
				_213e70d5b_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c70c8d_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b9139a64:;
			{
				_213e710d1_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c72b6e_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b9139adb:;
			{
				_213e71356_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c71244_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b9139b63:;
			{
				_213e715cb_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c7162e_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b9139bda:;
			{
				_213e71851_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c7194d_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b9139c62:;
			{
				_213e71ac6_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c71c6c_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b9139cd9:;
			{
				_213e71d4b_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c70012_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b9139d61:;
			{
				_213e720c1_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c72421_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b9139dd8:;
			{
				_213e72346_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c72e6b_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b9139e60:;
			{
				_213e725bb_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c73257_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b9139ed7:;
			{
				_213e72841_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c73851_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b913a05e:;
			{
				_213e72ab6_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c74005_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b913a0d6:;
			{
				_213e72d3b_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_213c73c19_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1b9138c50:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213e6b4c7_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1cdcda7ee_stdCacheData _Src) {
	_Stream << "stdCacheData{";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "do:" << _Src._field_do;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1cde26cd1_Optimizer> static__1cde27210_New(jule::Ptr<_1cdcd6784_IR>* _2724_ir) {
	return jule::new_ptr<_1cde26cd1_Optimizer>(_1cde26cd1_Optimizer{._field_ir=(*(_2724_ir))});;
}



inline void _1cde27485_optimizeGlobal(_1cde26cd1_Optimizer* _self_, jule::Ptr<_213d11988_Var>* _3338_v) {
	if ((!((*(_3338_v)).get()._field_Binded))) {
		static__213e6b9d3_optimize(&((*(_3338_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1cde2770a_optimizeFunction(_1cde26cd1_Optimizer* _self_, jule::Ptr<_213c76a0d_Fn>* _3940_func) {
	if ((*(_3940_func)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_3940_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9156465:;
		if (it != expr_end) {
			jule::Ptr<_213c796ae_FnIns> _4321_ins = *it;
			{
				jule::Ptr<_213e65b86_scopeOptimizer> _4421_so = static__213e660e8_new(_4321_ins.get()._field_Scope);;
				_213e69360_optimize(_4421_so.ptr());
			}
			_iter_next_1b9156465:;
			++it;
			goto _iter_begin_1b9156465;
		}
		_iter_end_1b9156465:;
	};
}



inline void _1cde27980_optimizeStruct(_1cde26cd1_Optimizer* _self_, jule::Ptr<_213c615db_Struct>* _4938_s) {
	if ((*(_4938_s)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_4938_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9157884:;
		if (it != expr_end) {
			jule::Ptr<_213c64402_StructIns> _5321_ins = *it;
			{
				{
					auto expr = &(_5321_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b915808d:;
					if (it != expr_end) {
						jule::Ptr<_213c6390c_FieldIns> _5425_f = *it;
						{
							if ((_5425_f.get()._field_Default != nullptr)) {
								static__213e6b9d3_optimize(&(_5425_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_1b915808d:;
						++it;
						goto _iter_begin_1b915808d;
					}
					_iter_end_1b915808d:;
				};
				{
					auto expr = &(_5321_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b9158e07:;
					if (it != expr_end) {
						jule::Ptr<_213c76a0d_Fn> _5925_m = *it;
						{
							_1cde2770a_optimizeFunction(_self_, &(_5925_m));
						}
						_iter_next_1b9158e07:;
						++it;
						goto _iter_begin_1b9158e07;
					}
					_iter_end_1b9158e07:;
				};
			}
			_iter_next_1b9157884:;
			++it;
			goto _iter_begin_1b9157884;
		}
		_iter_end_1b9157884:;
	};
}



inline void _1cde27c05_optimizeGlobals(_1cde26cd1_Optimizer* _self_, jule::Ptr<_213cda8b8_Package>* _6539_p) {
	{
		auto expr = &((*(_6539_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9159314:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _6621_f = *it;
			{
				{
					auto expr = &(_6621_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b915a04b:;
					if (it != expr_end) {
						jule::Ptr<_213d11988_Var> _6725_v = *it;
						{
							_1cde27485_optimizeGlobal(_self_, &(_6725_v));
						}
						_iter_next_1b915a04b:;
						++it;
						goto _iter_begin_1b915a04b;
					}
					_iter_end_1b915a04b:;
				};
			}
			_iter_next_1b9159314:;
			++it;
			goto _iter_begin_1b9159314;
		}
		_iter_end_1b9159314:;
	};
}



inline void _1cde27e7a_optimizeFunctions(_1cde26cd1_Optimizer* _self_, jule::Ptr<_213cda8b8_Package>* _7341_p) {
	{
		auto expr = &((*(_7341_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b915a557:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _7421_f = *it;
			{
				{
					auto expr = &(_7421_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b915b26c:;
					if (it != expr_end) {
						jule::Ptr<_213c76a0d_Fn> _7525_func = *it;
						{
							_1cde2770a_optimizeFunction(_self_, &(_7525_func));
						}
						_iter_next_1b915b26c:;
						++it;
						goto _iter_begin_1b915b26c;
					}
					_iter_end_1b915b26c:;
				};
			}
			_iter_next_1b915a557:;
			++it;
			goto _iter_begin_1b915a557;
		}
		_iter_end_1b915a557:;
	};
}



inline void _1cde28200_optimizeStructs(_1cde26cd1_Optimizer* _self_, jule::Ptr<_213cda8b8_Package>* _8139_p) {
	{
		auto expr = &((*(_8139_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b915b778:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _8221_f = *it;
			{
				{
					auto expr = &(_8221_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b915c48d:;
					if (it != expr_end) {
						jule::Ptr<_213c615db_Struct> _8325_s = *it;
						{
							_1cde27980_optimizeStruct(_self_, &(_8325_s));
						}
						_iter_next_1b915c48d:;
						++it;
						goto _iter_begin_1b915c48d;
					}
					_iter_end_1b915c48d:;
				};
			}
			_iter_next_1b915b778:;
			++it;
			goto _iter_begin_1b915b778;
		}
		_iter_end_1b915b778:;
	};
}



inline void _1cde28475_optimizePackage(_1cde26cd1_Optimizer* _self_, jule::Ptr<_213cda8b8_Package>* _8939_p) {
	_1cde27c05_optimizeGlobals(_self_, _8939_p);
	_1cde27e7a_optimizeFunctions(_self_, _8939_p);
	_1cde28200_optimizeStructs(_self_, _8939_p);
}



inline void _1cde28651_Optimize(_1cde26cd1_Optimizer* _self_) {
	_1cde288b5_detectEnabled();
	if (_1cde26a5b_stdEnabled) {
		_1cdcdae81_buildCache(&((*(_self_))._field_ir));
	};
	if (_1cdcdc7e0_Deadcode) {
		_1cde19554_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1cde267e7_scopeEnabled || _1cde265c7_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b915e715:;
			if (it != expr_end) {
				jule::Ptr<_213cd7c7d_ImportInfo> _10825_u = *it;
				{
					if ((!(_10825_u.get()._field_Binded))) {
						_1cde28475_optimizePackage(_self_, &(_10825_u.get()._field_Package));
					};
				}
				_iter_next_1b915e715:;
				++it;
				goto _iter_begin_1b915e715;
			}
			_iter_end_1b915e715:;
		};
		_1cde28475_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_1cdcdc7e0_Deadcode) {
		_1cde1e647_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1cde26cd1_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1cde4d159_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1cde29157_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1cde4d159_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1cde4e1e3_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1cde509b9_LogFlat(_2110be2cb_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1cde50bc8_LogError(_2110be2cb_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1cde4d159_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_2121950d7_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_2121950d7_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _211038a70_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I32 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I32 _3821_oldLen = _3621_line.len();;
		_3621_line=_211038a70_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _2121950d7_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_21103124e_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_21103124e_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_21103124e_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1cde29157_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1cde50dd7_Log(_2110be2cb_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1b916c05d:;
			{
				static__1cde509b9_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1b916c0c4:;
			{
				static__1cde50bc8_LogError(_6520_l);
			}
		}
		_match_end_1b916be70:;
	};
}



inline void static__1cde510e6_PrintLogs(jule::Slice<_2110be2cb_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b916ce60:;
		if (it != expr_end) {
			_2110be2cb_Log *_7616_l = it;
			{
				static__1cde50dd7_Log(_7616_l);
			}
			_iter_next_1b916ce60:;
			++it;
			goto _iter_begin_1b916ce60;
		}
		_iter_end_1b916ce60:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_2121950d7_Itoa(static_cast<jule::I32>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1cde50777_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213aeb322_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _213aeb9b5_Time static__213aebd5b_Unix(jule::U64 _9120_sec) {
	return _213aeb9b5_Time{._field_sec=_9120_sec};;
}



inline _213aeb9b5_Time static__213aec059_Now(void) {
	return static__213aebd5b_Unix(static_cast<jule::U64>(_213aed951_unix()));;
}



inline _213aeb322_AbsTime _213aed621_Abs(_213aeb9b5_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_213aea8a4_mdays[static_cast<jule::I32>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_213aea8a4_mdays[static_cast<jule::I32>(_16917_months)];
		}
	_iter_next_1b919cb0a:;
	}
	_iter_end_1b919cb0a:;;
	_213aeb322_AbsTime _17417_t = _213aeb322_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _213aeb9b5_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b63eb169_scopeCoder> static__1b63eb763_new(jule::Ptr<_213b05b01_ObjectCoder>* _6624_oc) {
	return jule::new_ptr<_1b63eb169_scopeCoder>(_1b63eb169_scopeCoder{._field_oc=(*(_6624_oc))});;
}



inline void _1b9242474_iterHead(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cba722_RangeIter>* _7332_it, jule::Bool* _7344_ref, jule::Str* _7356_begin) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_213b066a1_addIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_1cdcdc4d2_Copy && _1b6401d2e_isCopyOptimizable(&((*(_7332_it)).get()._field_Expr)))) {
		(*(_7344_ref))=true;
		{
			auto &_match_expr{ (*(_7332_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b9243b07:;
				{
					jule::Ptr<_213d11988_Var> _8221_v = (*(_7332_it)).get()._field_Expr.get()._field_Model.cast_ptr<_213d11988_Var>(&__jule_any_type8);;
					if (_8221_v.get()._field_Reference) {
						_1b64118bb_model(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1b9245334;
					};
					goto _case_begin_1b9245389;
				}
			}
			else {
				_case_begin_1b9245389:;
				{
					_213b06250_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1b64118bb_model(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
					_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1b9245334:;
		};
	} else {
		_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7332_it)).get()._field_Expr.get()._field_Model);
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7344_ref))) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_213b06250_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7344_ref))) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_213b06250_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b064c5_writeR(_self_.get()._field_oc, _7356_begin);
	_213b06250_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_213b066a1_addIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
}



inline void _1b63ebda1_rangeIndexIter(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cba722_RangeIter>* _12239_it) {
	jule::Str _12313_begin = static__1b641a672_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));;
	jule::Str _12413_next = static__1b641abb1_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it)))));;
	jule::Bool _12617_ref = false;;
	_1b9242474_iterHead(_self_, _12239_it, &(_12617_ref), &(_12313_begin));
	if (((*(_12239_it)).get()._field_KeyA != nullptr)) {
		_213b0d774_varInitExpr(_self_.get()._field_oc, &((*(_12239_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12617_ref) {
				_213b06250_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_213b06250_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_213b06a58_indent(_self_.get()._field_oc);
	};
	if (((*(_12239_it)).get()._field_KeyB != nullptr)) {
		(*(_12239_it)).get()._field_KeyB.get()._field_Reference=(_1cdcdc4d2_Copy && _1b64021b4_isIterCopyOptimizable(&((*(_12239_it)).get()._field_Expr), &((*(_12239_it)).get()._field_KeyB)));
		_213b0d774_varInitExpr(_self_.get()._field_oc, &((*(_12239_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_12239_it)).get()._field_KeyB.get()._field_Reference) {
					_213b06250_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_213b06250_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_213b06a58_indent(_self_.get()._field_oc);
	};
	_1b6401713_scope(_self_, (*(_12239_it)).get()._field_Scope);
	_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b064c5_writeR(_self_.get()._field_oc, &(_12413_next));
	_213b06250_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_213b06a58_indent(_self_.get()._field_oc);
	if (((*(_12239_it)).get()._field_KeyA != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, static__1b641a3ca_var((*(_12239_it)).get()._field_KeyA));
		_213b06250_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_213b06a58_indent(_self_.get()._field_oc);
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_213b064c5_writeR(_self_.get()._field_oc, &(_12313_begin));
	_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, static__1b641a919_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12239_it))))));
	_213b06250_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b63ec126_rangeHashmapIter(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cba722_RangeIter>* _18541_it) {
	jule::Str _18613_begin = static__1b641a672_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it)))));;
	jule::Str _18713_next = static__1b641abb1_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it)))));;
	jule::Bool _18917_ref = false;;
	_1b9242474_iterHead(_self_, _18541_it, &(_18917_ref), &(_18613_begin));
	if (((*(_18541_it)).get()._field_KeyA != nullptr)) {
		_213b0d774_varInitExpr(_self_.get()._field_oc, &((*(_18541_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_213b06250_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_213b06a58_indent(_self_.get()._field_oc);
	};
	if (((*(_18541_it)).get()._field_KeyB != nullptr)) {
		_213b0d774_varInitExpr(_self_.get()._field_oc, &((*(_18541_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_213b06250_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_213b06a58_indent(_self_.get()._field_oc);
	};
	_1b6401713_scope(_self_, (*(_18541_it)).get()._field_Scope);
	_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b064c5_writeR(_self_.get()._field_oc, &(_18713_next));
	_213b06250_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_213b064c5_writeR(_self_.get()._field_oc, &(_18613_begin));
	_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, static__1b641a919_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18541_it))))));
	_213b06250_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b63ec39b_ifCase(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cb8e6d_If> _22830_i) {
	if ((_22830_i.get()._field_Expr != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22830_i.get()._field_Expr);
		_213b06250_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1b6401713_scope(_self_, _22830_i.get()._field_Scope);
}



inline void _1b63ec621_conditional(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cb95cd_Conditional> _23735_c) {
	jule::Bool _23817_writed = false;;
	{
		auto expr = &(_23735_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9269336:;
		if (it != expr_end) {
			jule::Ptr<_213cb8e6d_If> _23921_elif = *it;
			{
				if ((_23921_elif == nullptr)) {
					goto _iter_next_1b9269336;
				};
				if (_23817_writed) {
					_213b06250_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23817_writed=true;
				_1b63ec39b_ifCase(_self_, _23921_elif);
			}
			_iter_next_1b9269336:;
			++it;
			goto _iter_begin_1b9269336;
		}
		_iter_end_1b9269336:;
	};
	if ((_23735_c.get()._field_Default != nullptr)) {
		if (_23817_writed) {
			_213b06250_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1b6401713_scope(_self_, _23735_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1b63ec896_infIter(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cb98b9_InfIter> _25731_it) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_213b066a1_addIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_1b6401713_scope(_self_, _25731_it.get()._field_Scope);
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, static__1b641abb1_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25731_it))));
	_213b06250_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, static__1b641a919_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25731_it))));
	_213b06250_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1b63ecb1b_whileIter(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cb9d3c_WhileIter> _27433_it) {
	if (((_27433_it.get()._field_Expr != nullptr) && (_27433_it.get()._field_Next == nullptr))) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27433_it.get()._field_Expr);
		_213b06250_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_213b06250_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27433_it.get()._field_Expr != nullptr)) {
			_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27433_it.get()._field_Expr);
		};
		_213b06250_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27433_it.get()._field_Next != nullptr)) {
			_1b6401218_st(_self_, _27433_it.get()._field_Next);
		};
		_213b06250_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_213b066a1_addIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_1b6401713_scope(_self_, _27433_it.get()._field_Scope);
	_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, static__1b641abb1_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27433_it))));
	_213b06250_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, static__1b641a919_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27433_it))));
	_213b06250_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1b63ecd91_rangeIter(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cba722_RangeIter> _30733_it) {
	{
		
		if ((_213d8beca_Slc(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b9277465:;
			{
				_1b63ebda1_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		else if ((_213d8bc66_Arr(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b927783e:;
			{
				_1b63ebda1_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		else if ((_213d8c97b_Map(_30733_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b9277135:;
			{
				_1b63ec126_rangeHashmapIter(_self_, &(_30733_it));
			}
		}
		else {
			_case_begin_1b92770be:;
			{
				_1b63ebda1_rangeIndexIter(_self_, &(_30733_it));
			}
		}
		_match_end_1b9277003:;
	};
}



inline void _1b63ed116_cont(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbab1d_ContSt> _32024_c) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_213b06250_write(_self_.get()._field_oc, static__1b641abb1_iterNext(_32024_c.get()._field_It));
}



inline void _1b63ed38b_label(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbb2b1_Label> _32525_l) {
	_213b06250_write(_self_.get()._field_oc, static__1b641ae58_label(&(_32525_l.get()._field_Ident)));
	_213b06250_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1b63ed611_gotoSt(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbb59c_GotoSt> _33026_gt) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_213b06250_write(_self_.get()._field_oc, static__1b641ae58_label(&(_33026_gt.get()._field_Ident)));
}



inline void _1b63ed886_postfix(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbb954_Postfix> _33531_p) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33531_p.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
	_213b064c5_writeR(_self_.get()._field_oc, &(_33531_p.get()._field_Op));
}



inline void _1b63edb0b_assign(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbbdc7_Assign> _34230_a) {
	_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34230_a.get()._field_L.get()._field_Model);
	_213b064c5_writeR(_self_.get()._field_oc, &(_34230_a.get()._field_Op.get()._field_Kind));
	_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34230_a.get()._field_R.get()._field_Model);
}



inline void _1b63edd81_mapLookupAssign(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbc27e_MultiAssign>* _34840_a) {
	jule::Ptr<_213c6b030_IndexingExprModel> _34917_iem = (*(_34840_a)).get()._field_R.cast_ptr<_213c6b030_IndexingExprModel>(&__jule_any_type46);;
	_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34917_iem.get()._field_Expr.get()._field_Model);
	_213b06250_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34917_iem.get()._field_Index.get()._field_Model);
	_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34840_a)).get()._field_L[0LL] != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34840_a)).get()._field_L[0LL].get()._field_Model);
		_213b06250_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_213b06250_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34840_a)).get()._field_L[1LL] != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34840_a)).get()._field_L[1LL].get()._field_Model);
		_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_213b06250_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b63ee106_multiAssignTup(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbc27e_MultiAssign>* _37139_a) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_213b066a1_addIndent(_self_.get()._field_oc);
	jule::Ptr<_213c6e42e_TupleExprModel> _37517_tup = (*(_37139_a)).get()._field_R.cast_ptr<_213c6e42e_TupleExprModel>(&__jule_any_type87);;
	{
		auto expr = &(_37517_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9285e8a:;
		if (it != expr_end) {
			jule::I32 _37714_i = it - expr->begin();
			jule::Ptr<_213d5ae22_Data> _37721_r = *it;
			{
				_213b06a58_indent(_self_.get()._field_oc);
				jule::Ptr<_213d5ae22_Data> _37921_l = (*(_37139_a)).get()._field_L[_37714_i];;
				if ((_37921_l != nullptr)) {
					{
						auto &_match_expr{ _37921_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b92885db:;
							{
								jule::Ptr<_213d11988_Var> _38329_v = _37921_l.get()._field_Model.cast_ptr<_213d11988_Var>(&__jule_any_type8);;
								if ((_38329_v.get()._field_Reference && (!(_213d11d0c_IsInitialized(_38329_v.ptr()))))) {
									_213b06250_write(_self_.get()._field_oc, static__1b641a3ca_var(_38329_v));
									_213b06250_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37721_r.get()._field_Model);
									_213b06250_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_37139_a)).get()._field_L[_37714_i]=nullptr;
									goto _iter_next_1b9285e8a;
								};
							}
						}
						_match_end_1b92883cc:;
					};
					_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37921_l.get()._field_Kind));
					_213b06250_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_213b06250_write(_self_.get()._field_oc, static__1b64188d4_toOut(&(_1b63ea9a4_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37714_i))));
					_213b06250_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37721_r.get()._field_Model);
				_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b9285e8a:;
			++it;
			_37714_i++;
			goto _iter_begin_1b9285e8a;
		}
		_iter_end_1b9285e8a:;
	};
	{
		auto expr = &((*(_37139_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9288245:;
		if (it != expr_end) {
			jule::I32 _40414_i = it - expr->begin();
			jule::Ptr<_213d5ae22_Data> _40421_l = *it;
			{
				if ((_40421_l == nullptr)) {
					goto _iter_next_1b9288245;
				};
				_213b06a58_indent(_self_.get()._field_oc);
				_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40421_l.get()._field_Model);
				_213b06250_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_213b06250_write(_self_.get()._field_oc, static__1b64188d4_toOut(&(_1b63ea9a4_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40414_i))));
				_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b9288245:;
			++it;
			_40414_i++;
			goto _iter_begin_1b9288245;
		}
		_iter_end_1b9288245:;
	};
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b63ee37b_multiAssignFn(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbc27e_MultiAssign>* _42038_a) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_213b066a1_addIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	jule::Ptr<_213c6a705_FnCallExprModel> _42517_f = (*(_42038_a)).get()._field_R.cast_ptr<_213c6a705_FnCallExprModel>(&__jule_any_type35);;
	_213b1ed29_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42517_f.get()._field_Func.get()._field_Result));
	_213b06250_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_42038_a)).get()._field_R);
	_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_42038_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b929320b:;
		if (it != expr_end) {
			jule::I32 _43114_i = it - expr->begin();
			jule::Ptr<_213d5ae22_Data> _43121_l = *it;
			{
				if ((_43121_l != nullptr)) {
					_213b06a58_indent(_self_.get()._field_oc);
					_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _43121_l.get()._field_Model);
					_213b06250_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(_43114_i));
					_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1b929320b:;
			++it;
			_43114_i++;
			goto _iter_begin_1b929320b;
		}
		_iter_end_1b929320b:;
	};
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b63ee601_multiAssign(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbc27e_MultiAssign> _44635_a) {
	{
		auto &_match_expr{ _44635_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b9296374:;
			{
				_1b63edd81_mapLookupAssign(_self_, &(_44635_a));
				return;;
			}
		}
		_match_end_1b9296165:;
	};
	{
		auto &_match_expr{ _44635_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b9296099:;
			{
				_1b63ee106_multiAssignTup(_self_, &(_44635_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b929675e:;
			{
				_1b63ee37b_multiAssignFn(_self_, &(_44635_a));
			}
		}
		else {
			_case_begin_1b9296cc0:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:460:13"));;
			}
		}
		_match_end_1b9296c6a:;
	};
}



inline jule::Fn<void(void)> _1b63ee90e_matchExpr(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbc889_Match> _46433_m) {
	if ((!(_213d5b791_IsConst(_46433_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_213b06250_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_2121a8dba_IsBool(_46433_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_2121a6a22_ReadBool(_46433_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46433_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1b63eec2d_case(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbc889_Match> _47428_m, jule::Ptr<_213cbd3d4_Case> _47443_c) {
	if (((_47443_c.get()._field_Exprs.len() != 0LL) && (!(_47428_m.get()._field_Comptime)))) {
		if (((_47428_m.get()._field_Cases.len() > 0LL) && (_47428_m.get()._field_Cases[0LL] == _47443_c))) {
			_213b06250_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_213b06250_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47443_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b929be7e:;
			if (it != expr_end) {
				jule::I32 _48118_i = it - expr->begin();
				jule::Ptr<_213d5ae22_Data> _48125_expr = *it;
				{
					{
						
						if ((!(_47428_m.get()._field_TypeMatch))) {
							_case_begin_1b92a2b00:;
							{
								jule::Fn<void(void)> _48425_caseExpr = _1b63ee90e_matchExpr(_self_, _47428_m);;
								if (_213d5ba9e_GoodOperand(_47428_m.get()._field_Expr.ptr(), &(_48125_expr))) {
									if ((_48425_caseExpr != nullptr)) {
										_48425_caseExpr();
										_213b06250_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _48125_expr.get()._field_Model);
								} else {
									_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _48125_expr.get()._field_Model);
									if ((_48425_caseExpr != nullptr)) {
										_213b06250_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48425_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1b929ce5d:;
							{
								_213b06250_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_213d88834_TypeKind> _50029_tk = _48125_expr.get()._field_Model.cast_ptr<_213d88834_TypeKind>(&__jule_any_type89);;
								if ((_213d8c717_Trait(_47428_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_213b06250_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1b640500d_boolean(_self_.get()._field_oc.get()._field_ec, (_213d8b2b5_Sptr(_48125_expr.get()._field_Kind.ptr()) != nullptr));
									_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(static_cast<jule::I32>(_213b07dcd_findTypeOffset(_self_.get()._field_oc.ptr(), _213d8c717_Trait(_47428_m.get()._field_Expr.get()._field_Kind.ptr()), _48125_expr.get()._field_Kind))));
									_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I32 _50829_j = _213b07174_pushAnyType(_self_.get()._field_oc, _50029_tk);;
									_213b06250_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(_50829_j));
								};
							}
						}
						_match_end_1b929cd92:;
					};
					if (((_47443_c.get()._field_Exprs.len() - _48118_i) > 1LL)) {
						_213b06250_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1b929be7e:;
				++it;
				_48118_i++;
				goto _iter_begin_1b929be7e;
			}
			_iter_end_1b929be7e:;
		};
		_213b06250_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47428_m.get()._field_Default == _47443_c) && (_47428_m.get()._field_Cases.len() != 0LL))) {
		_213b06a58_indent(_self_.get()._field_oc);
		_213b06250_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_213b066a1_addIndent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, static__1b641b497_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47443_c))));
	_213b06250_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47443_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_213b06a58_indent(_self_.get()._field_oc);
		_1b6401713_scope(_self_, _47443_c.get()._field_Scope);
		_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b63eeea3_matchSt(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbc889_Match> _54231_m) {
	if (((_54231_m.get()._field_Cases.len() == 0LL) && (_54231_m.get()._field_Default == nullptr))) {
		return;;
	};
	if ((_54231_m.get()._field_Comptime && ((_54231_m.get()._field_Default == nullptr) || (_54231_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_213b066a1_addIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	if (((!(_54231_m.get()._field_Comptime)) && (!(_213d5b791_IsConst(_54231_m.get()._field_Expr.ptr()))))) {
		if ((_1cdcdc4d2_Copy && _1b6401d2e_isCopyOptimizable(&(_54231_m.get()._field_Expr)))) {
			_213b06250_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_213b06250_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _54231_m.get()._field_Expr.get()._field_Model);
		_213b06250_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_213b06a58_indent(_self_.get()._field_oc);
	};
	if ((_54231_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_54231_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b92ae612:;
			if (it != expr_end) {
				jule::Ptr<_213cbd3d4_Case> _57025_c = *it;
				{
					if ((_57025_c == nullptr)) {
						goto _iter_next_1b92ae612;
					};
					_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_213b06a58_indent(_self_.get()._field_oc);
					_1b63eec2d_case(_self_, _54231_m, _57025_c);
				}
				_iter_next_1b92ae612:;
				++it;
				goto _iter_begin_1b92ae612;
			}
			_iter_end_1b92ae612:;
		};
	};
	if ((_54231_m.get()._field_Default != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b63eec2d_case(_self_, _54231_m, _54231_m.get()._field_Default);
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, static__1b641b200_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54231_m))));
	_213b06250_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b6400228_fallSt(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbd9ab_FallSt> _59726_f) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_213b06250_write(_self_.get()._field_oc, static__1b641b497_caseBegin(_59726_f.get()._field_DestCase));
}



inline void _1b640049d_breakSt(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbaec5_BreakSt> _60227_b) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_60227_b.get()._field_It != 0LLU)) {
		_213b06250_write(_self_.get()._field_oc, static__1b641a919_iterEnd(_60227_b.get()._field_It));
	} else {
		_213b06250_write(_self_.get()._field_oc, static__1b641b200_matchEnd(_60227_b.get()._field_Mtch));
	};
}



inline void _1b6400723_setResult(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbdd0d_RetSt> _61133_r) {
	if ((_61133_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61133_r.get()._field_Expr);
		_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_213b06a58_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_213d5ae22_Data>> _61917_datas = _61133_r.get()._field_Expr.cast_ptr<_213c6e42e_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
	{
		auto expr = &(_61917_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b92b84ea:;
		if (it != expr_end) {
			jule::I32 _62013_i = it - expr->begin();
			jule::Ptr<_213d5ae22_Data> _62016_data = *it;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(_62013_i));
				_213b06250_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62016_data.get()._field_Model);
				_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_213b06a58_indent(_self_.get()._field_oc);
			}
			_iter_next_1b92b84ea:;
			++it;
			_62013_i++;
			goto _iter_begin_1b92b84ea;
		}
		_iter_end_1b92b84ea:;
	};
}



inline void _1b6400998_retSt(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cbdd0d_RetSt> _63029_r) {
	if (_213c76e70_IsVoid(_63029_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_213b06250_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_213b06250_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_63029_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_213b06250_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _63029_r.get()._field_Func.get()._field_Result));
			_213b06250_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _63029_r.get()._field_Expr);
			_213b06250_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_213b06250_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _63029_r.get()._field_Expr);
			_213b06250_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_63029_r.get()._field_Expr != nullptr)) {
		_1b6400723_setResult(_self_, _63029_r);
	};
	if (_63029_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_213b1ed29_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_63029_r.get()._field_Func.get()._field_Result));
		_213b06250_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_213b06250_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1b6400c1d_var(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213d11988_Var> _66627_v) {
	if ((!(_66627_v.get()._field_Constant))) {
		_213b0d9e9_var(_self_.get()._field_oc, _66627_v);
	};
}



inline void _1b6400e93_strAppend(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213e62cc6_StrAppendExprModel> _67233_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67233_m.get()._field_Str);
	_213b06250_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	{
		auto &_match_expr{ _67233_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b92c3406:;
			{
				jule::Ptr<_2121a4c51_Const> _67817_c = _67233_m.get()._field_Expr.cast_ptr<_2121a4c51_Const>(&__jule_any_type19);;
				jule::Slice<jule::U8> _67917_bytes = static_cast<jule::Slice<jule::U8>>(_2121a6c86_ReadStr(_67817_c.ptr()));;
				_213b06250_write(_self_.get()._field_oc, _1b6412889_cstrLit(_67917_bytes));
				_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_213b06250_write(_self_.get()._field_oc, _212194d40_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_67917_bytes.len())), 10LL));
			}
		}
		else {
			_case_begin_1b92c4407:;
			{
				_1b640761a_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67233_m.get()._field_Expr);
			}
		}
		_match_end_1b92c43a2:;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b6401218_st(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Any _69026_st) {
	if ((_69026_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _69026_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b92c78d3:;
			{
				_1b6401713_scope(_self_, _69026_st.cast_ptr<_213cb8a72_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b92c777e:;
			{
				_1b6400c1d_var(_self_, _69026_st.cast_ptr<_213d11988_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b92c8142:;
			{
				_1b64118bb_model(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_213d5ae22_Data>(&__jule_any_type24).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b92c81a8:;
			{
				_1b63ec621_conditional(_self_, _69026_st.cast_ptr<_213cb95cd_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b92c821e:;
			{
				_1b63ec896_infIter(_self_, _69026_st.cast_ptr<_213cb98b9_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b92c8285:;
			{
				_1b63ecb1b_whileIter(_self_, _69026_st.cast_ptr<_213cb9d3c_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b92c82eb:;
			{
				_1b63ecd91_rangeIter(_self_, _69026_st.cast_ptr<_213cba722_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b92c8362:;
			{
				_1b63ed116_cont(_self_, _69026_st.cast_ptr<_213cbab1d_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b92c83c8:;
			{
				_1b63ed38b_label(_self_, _69026_st.cast_ptr<_213cbb2b1_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b92c843e:;
			{
				_1b63ed611_gotoSt(_self_, _69026_st.cast_ptr<_213cbb59c_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b92c84b6:;
			{
				_1b63ed886_postfix(_self_, _69026_st.cast_ptr<_213cbb954_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b92c853d:;
			{
				_1b63edb0b_assign(_self_, _69026_st.cast_ptr<_213cbbdc7_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b92c85b5:;
			{
				_1b63ee601_multiAssign(_self_, _69026_st.cast_ptr<_213cbc27e_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b92c863c:;
			{
				_1b63eeea3_matchSt(_self_, _69026_st.cast_ptr<_213cbc889_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b92c86b4:;
			{
				_1b6400228_fallSt(_self_, _69026_st.cast_ptr<_213cbd9ab_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b92c873b:;
			{
				_1b640049d_breakSt(_self_, _69026_st.cast_ptr<_213cbaec5_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b92c87b3:;
			{
				_1b6400998_retSt(_self_, _69026_st.cast_ptr<_213cbdd0d_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1b92c883a:;
			{
				_1b640e0a0_pushToSlice(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_213e637cc_PushToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1b92c88b2:;
			{
				_1b640e325_appendToSlice(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_213e63b84_AppendToSliceExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b92c8939:;
			{
				_1b6410d93_mutSlicing(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_213e641c3_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b92c89b1:;
			{
				_1b6411118_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _69026_st.cast_ptr<_213e646ac_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1b92c8a38:;
			{
				_1b6400e93_strAppend(_self_, _69026_st.cast_ptr<_213e62cc6_StrAppendExprModel>(&__jule_any_type125));
			}
		}
		else {
			_case_begin_1b92c786c:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1b92c751a:;
	};
}



inline void _1b640148d_scopeStmts(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cb8a72_Scope>* _74435_s) {
	{
		auto expr = &((*(_74435_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b92d36e1:;
		if (it != expr_end) {
			jule::Any _74521_st = *it;
			{
				_213b06a58_indent(_self_.get()._field_oc);
				_1b6401218_st(_self_, _74521_st);
				_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b92d36e1:;
			++it;
			goto _iter_begin_1b92d36e1;
		}
		_iter_end_1b92d36e1:;
	};
}



inline void _1b6401713_scope(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213cb8a72_Scope> _75329_s) {
	_213b066a1_addIndent(_self_.get()._field_oc);
	if (_75329_s.get()._field_Deferred) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b640148d_scopeStmts(_self_, &(_75329_s));
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_75329_s.get()._field_Deferred) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1b6401988_funcScope(jule::Ptr<_1b63eb169_scopeCoder> _self_, jule::Ptr<_213c796ae_FnIns> _76933_f) {
	if ((_76933_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_213b066a1_addIndent(_self_.get()._field_oc);
	if ((!(_213c76e70_IsVoid(_76933_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_213d95d4c_Tuple> _77621_tup = _213d8cbe0_Tup(_76933_f.get()._field_Result.ptr());;
		if ((_77621_tup != nullptr)) {
			_213b06a58_indent(_self_.get()._field_oc);
			_213b1e6db_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _77621_tup);
			_213b06250_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_77621_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b92d8e55:;
				if (it != expr_end) {
					jule::I32 _78122_i = it - expr->begin();
					jule::Ptr<_213d88834_TypeKind> _78129_t = *it;
					{
						if (_213b2215b_shouldInitialized(&(_78129_t))) {
							_213b06a58_indent(_self_.get()._field_oc);
							_213b06250_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(_78122_i));
							_213b06250_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1b6411b41_initExpr(_self_.get()._field_oc.get()._field_ec, _78129_t);
							_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1b92d8e55:;
					++it;
					_78122_i++;
					goto _iter_begin_1b92d8e55;
				}
				_iter_end_1b92d8e55:;
			};
		} else if ((_76933_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_213b06a58_indent(_self_.get()._field_oc);
			_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76933_f.get()._field_Result));
			_213b06250_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_213b2215b_shouldInitialized(&(_76933_f.get()._field_Result))) {
				_213b06250_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b6411b41_initExpr(_self_.get()._field_oc.get()._field_ec, _76933_f.get()._field_Result);
			};
			_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1b640148d_scopeStmts(_self_, &(_76933_f.get()._field_Scope));
	if ((_76933_f.get()._field_Decl.get()._field_Exceptional && _213c76e70_IsVoid(_76933_f.get()._field_Decl.ptr()))) {
		_213b06a58_indent(_self_.get()._field_oc);
		_213b06250_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1b63eb169_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b640465b_exprCoder> static__1b6404a13_new(jule::Ptr<_213b05b01_ObjectCoder>* _11224_oc) {
	return jule::new_ptr<_1b640465b_exprCoder>(_1b640465b_exprCoder{._field_oc=(*(_11224_oc))});;
}



inline void _1b6404c88_string(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_2121a4c51_Const>* _11827_c) {
	jule::Str _11913_content = _2121a6c86_ReadStr((*(_11827_c)).ptr());;
	if ((_11913_content.len() == 0LL)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _12413_bytes = static_cast<jule::Slice<jule::U8>>(_11913_content);;
	jule::Str _12513_len = _212194d40_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_12413_bytes.len())), 10LL);;
	jule::Str _12613_lit = _1b6412889_cstrLit(_12413_bytes);;
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
	_213b064c5_writeR(_self_.get()._field_oc, &(_12613_lit));
	_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_213b064c5_writeR(_self_.get()._field_oc, &(_12513_len));
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640500d_boolean(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Bool _13527_b) {
	if (_13527_b) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_213b06250_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1b64051d9_nilLit(jule::Ptr<_1b640465b_exprCoder> _self_) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1b64054e7_ftoaSpecialCases(jule::Ptr<_1b640465b_exprCoder> _self_, jule::F64* _14737_x) {
	{
		
		if (_212145d8a_IsNaN((*(_14737_x)))) {
			_case_begin_1b9309162:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_212146440_IsInf((*(_14737_x)), 1LL)) {
			_case_begin_1b93091d9:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_212146440_IsInf((*(_14737_x)), -1LL)) {
			_case_begin_1b9309261:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1b93090eb:;
			{
				return false;;
			}
		}
		_match_end_1b9309030:;
	};
	return true;;
}



inline void _1b640576c_float32(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_2121a4c51_Const>* _16128_c) {
	jule::F64 _16213_x = _2121a7737_AsF64((*(_16128_c)).ptr());;
	if (_1b64054e7_ftoaSpecialCases(_self_, &(_16213_x))) {
		return;;
	};
	{
		
		if ((_16213_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1b930bdce:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_16213_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1b930bb26:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1b930ba6b:;
			{
				_213b06250_write(_self_.get()._field_oc, _1b6412b97_ftoa(_16213_x, 32LL));
				_213b06250_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1b930b906:;
	};
}



inline void _1b64059e2_float64(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_2121a4c51_Const>* _18028_c) {
	jule::F64 _18113_x = _2121a7737_AsF64((*(_18028_c)).ptr());;
	if (_1b64054e7_ftoaSpecialCases(_self_, &(_18113_x))) {
		return;;
	};
	{
		
		if ((_18113_x == jule::MAX_F64)) {
			_case_begin_1b930e860:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_18113_x == jule::MIN_F64)) {
			_case_begin_1b930ee7b:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1b930e4ec:;
			{
				_213b06250_write(_self_.get()._field_oc, _1b6412b97_ftoa(_18113_x, 64LL));
			}
		}
		_match_end_1b930e387:;
	};
}



inline void _1b6405c67_constant(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_2121a4c51_Const> _19832_c) {
	{
		
		if (_2121a912e_IsStr(_19832_c.ptr())) {
			_case_begin_1b931118b:;
			{
				_1b6404c88_string(_self_, &(_19832_c));
			}
		}
		else if (_2121a8dba_IsBool(_19832_c.ptr())) {
			_case_begin_1b9311202:;
			{
				_1b640500d_boolean(_self_, _2121a6a22_ReadBool(_19832_c.ptr()));
			}
		}
		else if (_2121a9393_IsF64(_19832_c.ptr())) {
			_case_begin_1b9311268:;
			{
				{
					
					if (_19832_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_1b93132ae:;
						{
							_1b640576c_float32(_self_, &(_19832_c));
						}
					}
					else {
						_case_begin_1b9312e18:;
						{
							_1b64059e2_float64(_self_, &(_19832_c));
						}
					}
					_match_end_1b9312d4c:;
				};
			}
		}
		else if (_2121a88e2_IsI64(_19832_c.ptr())) {
			_case_begin_1b93112ce:;
			{
				_213b06250_write(_self_.get()._field_oc, _1b6412e3e_itoa(static_cast<jule::I64>(_2121a6549_ReadI64(_19832_c.ptr()))));
			}
		}
		else if (_2121a8b56_IsU64(_19832_c.ptr())) {
			_case_begin_1b9311a60:;
			{
				_213b06250_write(_self_.get()._field_oc, _1b64131d6_utoa(static_cast<jule::U64>(_2121a67ad_ReadU64(_19832_c.ptr()))));
			}
		}
		else if (_2121a9607_IsNil(_19832_c.ptr())) {
			_case_begin_1b9311ac6:;
			{
				_1b64051d9_nilLit(_self_);
			}
		}
		else {
			_case_begin_1b9311125:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1b9311059:;
	};
}



inline void _1b6406130_divByZeroBinary(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_2114c1b73_Token>* _22236_op, jule::Ptr<_213c68307_OperandExprModel>* _22253_l, jule::Ptr<_213c68307_OperandExprModel>* _22280_r) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_22236_op)).get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1b931602b:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1b93160a3:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1b9315eb5:;
	};
	if ((!(_22991518b_Production))) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_213b08472_locInfo(_self_.get()._field_oc, _22236_op);
		_213b06250_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1b640761a_possibleRefExpr(_self_, (*(_22253_l)).get()._field_Model);
	_213b06250_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b640761a_possibleRefExpr(_self_, (*(_22280_r)).get()._field_Model);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b64063a5_unsafeBinary(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c687be_BinopExprModel> _24436_m) {
	if (((_24436_m.get()._field_Op.get()._field_Id == static_cast<jule::U32>(50LLU)) || (_24436_m.get()._field_Op.get()._field_Id == static_cast<jule::U32>(51LLU)))) {
		if (_1b6413d30_isAny(&(_24436_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_213d8988a_IsNil(_24436_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1b6413d30_isAny(&(_24436_m.get()._field_Right.get()._field_Kind)))))) {
				_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
				if ((_24436_m.get()._field_Op.get()._field_Id == static_cast<jule::U32>(51LLU))) {
					_213b06250_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I32 _25425_i = _213b07174_pushAnyType(_self_.get()._field_oc, _24436_m.get()._field_Right.get()._field_Kind);;
				_213b06250_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(_25425_i));
				_213b06250_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1b640761a_possibleRefExpr(_self_, _24436_m.get()._field_Left.get()._field_Model);
				_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1b640761a_possibleRefExpr(_self_, _24436_m.get()._field_Right.get()._field_Model);
				_213b06250_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b640761a_possibleRefExpr(_self_, _24436_m.get()._field_Left.get()._field_Model);
	_213b06250_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_213b064c5_writeR(_self_.get()._field_oc, &(_24436_m.get()._field_Op.get()._field_Kind));
	_213b06250_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b640761a_possibleRefExpr(_self_, _24436_m.get()._field_Right.get()._field_Model);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640662a_binary(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c687be_BinopExprModel> _27530_m) {
	{
		auto &_match_expr{ _27530_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1b93217d9:;
			{
				if ((_213d8c4a3_Struct(_27530_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1b6406130_divByZeroBinary(_self_, &(_27530_m.get()._field_Op), &(_27530_m.get()._field_Left), &(_27530_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_1b9321762:;
	};
	_1b64063a5_unsafeBinary(_self_, _27530_m);
}



inline void _1b64068a0_var(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213d11988_Var> _28727_m) {
	if (_28727_m.get()._field_Binded) {
		jule::Ptr<_213c0e314_Directive> _28917_d = _213b21a2e_findDirective(&(_28727_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28917_d != nullptr)) {
			_213b06250_write(_self_.get()._field_oc, _213b12778_concatAllParts(_28917_d.get()._field_Args));
			_213b06250_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_213b06250_write(_self_.get()._field_oc, static__1b641a3ca_var(_28727_m));
}



inline void _1b6406b25_structureIns(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c64402_StructIns> _29836_m) {
	_213b06250_write(_self_.get()._field_oc, _213b188a0_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29836_m));
}



inline void _1b6406d9a_unary(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c68b76_UnaryExprModel> _30229_m) {
	{
		auto &_match_expr{ _30229_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1b93260e6:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1b640761a_possibleRefExpr(_self_, _30229_m.get()._field_Expr.get()._field_Model);
				_213b06250_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1b932616d:;
			{
				if ((_22991518b_Production || (_213d8b2b5_Sptr(_30229_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1b932605d;
				};
				_1b640761a_possibleRefExpr(_self_, _30229_m.get()._field_Expr.get()._field_Model);
				_213b06250_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_213b08472_locInfo(_self_.get()._field_oc, &(_30229_m.get()._field_Op));
				_213b06250_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1b932605d:;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
	_213b064c5_writeR(_self_.get()._field_oc, &(_30229_m.get()._field_Op.get()._field_Kind));
	_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b640761a_possibleRefExpr(_self_, _30229_m.get()._field_Expr.get()._field_Model);
	_213b06250_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1b6407120_structureLit(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c694e5_StructLitExprModel> _32636_m) {
	if (_32636_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_213b06250_write(_self_.get()._field_oc, static__1b6419d8b_structureIns(&(_32636_m.get()._field_Strct)));
	if (_32636_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_32636_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_32636_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b932c790:;
			if (it != expr_end) {
				jule::I32 _33917_i = it - expr->begin();
				jule::Ptr<_213c6390c_FieldIns> _33920_f = *it;
				{
					{
						auto expr = &(_32636_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b932d3c8:;
						if (it != expr_end) {
							jule::Ptr<_213c69171_StructArgExprModel> _34029_arg = *it;
							{
								if ((_34029_arg.get()._field_Field == _33920_f)) {
									_213b06250_write(_self_.get()._field_oc, jule::Str(".", 1));
									_213b06250_write(_self_.get()._field_oc, static__1b641a133_field(&(_34029_arg.get()._field_Field.get()._field_Decl)));
									_213b06250_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1b640761a_possibleRefExpr(_self_, _34029_arg.get()._field_Expr.get()._field_Model);
									if (((_32636_m.get()._field_Strct.get()._field_Fields.len() - _33917_i) > 1LL)) {
										_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1b932c790;
								};
							}
							_iter_next_1b932d3c8:;
							++it;
							goto _iter_begin_1b932d3c8;
						}
						_iter_end_1b932d3c8:;
					};
				}
				_iter_next_1b932c790:;
				++it;
				_33917_i++;
				goto _iter_begin_1b932c790;
			}
			_iter_end_1b932c790:;
		};
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b6407395_allocStructure(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c69803_AllocStructLitExprModel> _35738_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_213b06250_write(_self_.get()._field_oc, static__1b6419d8b_structureIns(&(_35738_m.get()._field_Lit.get()._field_Strct)));
	_213b06250_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1b6407120_structureLit(_self_, _35738_m.get()._field_Lit);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640761a_possibleRefExpr(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Any _36535_expr) {
	{
		auto &_match_expr{ _36535_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b93334aa:;
			{
				jule::Ptr<_213d11988_Var> _36817_v = _36535_expr.cast_ptr<_213d11988_Var>(&__jule_any_type8);;
				if (_36817_v.get()._field_Reference) {
					_213b06250_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_1b64118bb_model(_self_, _36535_expr);
					_213b06250_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1b93333ab:;
	};
	_1b64118bb_model(_self_, _36535_expr);
}



inline void _1b64079d3_castTraitFromTrait(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c69d53_CastingExprModel>* _37943_m, jule::Ptr<_213c88b63_Trait> _37969_t1, jule::Ptr<_213c88b63_Trait> _37985_t2) {
	_1b640761a_possibleRefExpr(_self_, (*(_37943_m)).get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(".mask<", 6));
	_213b06250_write(_self_.get()._field_oc, static__1b64195a5_traitDecl(_37969_t1));
	_213b06250_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_213b081ec_pushAndWriteMaskMapper(_self_.get()._field_oc, _37969_t1, _37985_t2);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b6407c58_casting(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c69d53_CastingExprModel> _39431_m) {
	{
		
		if (_1b6413d30_isAny(&(_39431_m.get()._field_Kind))) {
			_case_begin_1b9337525:;
			{
				if (_213d8988a_IsNil(_39431_m.get()._field_ExprKind.ptr())) {
					_213b06250_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_213d8ba02_TypeEnum(_39431_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1b640761a_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
					return;;
				};
				jule::I32 _40517_i = _213b07174_pushAnyType(_self_.get()._field_oc, _39431_m.get()._field_ExprKind);;
				_213b06250_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _39431_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1b93390a4:;
						{
							jule::Ptr<_213d91089_Prim> _40921_prim = _213d8b051_Prim(_39431_m.get()._field_ExprKind.ptr());;
							if (((_40921_prim != nullptr) && _2121a417e_IsInt(_40921_prim.get()._field_Kind))) {
								_213b06250_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_213b06250_write(_self_.get()._field_oc, _213b15acd_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _40921_prim));
								_213b06250_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1b640761a_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
								_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1b9339e95;
							};
							goto _case_begin_1b9339eea;
						}
					}
					else {
						_case_begin_1b9339eea:;
						{
							_1b640761a_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
						}
					}
					_match_end_1b9339e95:;
				};
				_213b06250_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(_40517_i));
				_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if (_1b6413d30_isAny(&(_39431_m.get()._field_ExprKind))) {
			_case_begin_1b933759c:;
			{
				_1b640761a_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
				_213b06250_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_213d8b2b5_Sptr(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
					_213b06250_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _213d8b2b5_Sptr(_39431_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_213b06250_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
				};
				_213b06250_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_22991518b_Production))) {
					_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_213b08472_locInfo(_self_.get()._field_oc, &(_39431_m.get()._field_Token));
					_213b06250_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_213b06250_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(static_cast<jule::I32>(_213b07174_pushAnyType(_self_.get()._field_oc, _39431_m.get()._field_Kind))));
				_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_213d8b529_Ptr(_39431_m.get()._field_ExprKind.ptr()) != nullptr) || (_213d8b529_Ptr(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b9337624:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("((", 2));
				_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
				_213b06250_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1b640761a_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
				_213b06250_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if ((_213d8c717_Trait(_39431_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b933769b:;
			{
				if ((_213d8c717_Trait(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
					_1b64079d3_castTraitFromTrait(_self_, &(_39431_m), _213d8c717_Trait(_39431_m.get()._field_Kind.ptr()), _213d8c717_Trait(_39431_m.get()._field_ExprKind.ptr()));
					return;;
				};
				_1b640761a_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
				_213b06250_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_213d8b2b5_Sptr(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
					_213b06250_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _213d8b2b5_Sptr(_39431_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_213b06250_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
				};
				_213b06250_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_22991518b_Production))) {
					_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_213b08472_locInfo(_self_.get()._field_oc, &(_39431_m.get()._field_Token));
					_213b06250_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(static_cast<jule::I32>(_213b07dcd_findTypeOffset(_self_.get()._field_oc.ptr(), _213d8c717_Trait(_39431_m.get()._field_ExprKind.ptr()), _39431_m.get()._field_Kind))));
				_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_213d8c717_Trait(_39431_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b9337723:;
			{
				_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
				_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1b640761a_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
				_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(static_cast<jule::I32>(_213b07dcd_findTypeOffset(_self_.get()._field_oc.ptr(), _213d8c717_Trait(_39431_m.get()._field_Kind.ptr()), _39431_m.get()._field_ExprKind))));
				_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		_match_end_1b93373d2:;
	};
	jule::Ptr<_213d91089_Prim> _48613_prim = _213d8b051_Prim(_39431_m.get()._field_Kind.ptr());;
	jule::Ptr<_213d91089_Prim> _48713_eprim = _213d8b051_Prim(_39431_m.get()._field_ExprKind.ptr());;
	if ((((_48713_eprim != nullptr) && (_48613_prim != nullptr)) && _213d9428a_IsStr(_48613_prim.ptr()))) {
		if (_213d92860_IsU8(_48713_eprim.ptr())) {
			_213b06250_write(_self_.get()._field_oc, jule::Str("jule::Str::from_byte(", 21));
		} else {
			_213b06250_write(_self_.get()._field_oc, jule::Str("jule::Str::from_rune(", 21));
		};
		_1b640761a_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
		_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
	_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39431_m.get()._field_Kind));
	_213b06250_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1b640761a_possibleRefExpr(_self_, _39431_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b6407ecd_models(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Slice<jule::Any> _50530_args) {
	if ((_50530_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_50530_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9353541:;
		if (it != expr_end) {
			jule::I32 _50914_i = it - expr->begin();
			jule::Any _50921_a = *it;
			{
				_1b640761a_possibleRefExpr(_self_, _50921_a);
				if (((_50530_args.len() - _50914_i) > 1LL)) {
					_213b06250_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b9353541:;
			++it;
			_50914_i++;
			goto _iter_begin_1b9353541;
		}
		_iter_end_1b9353541:;
	};
}



inline void _1b6408253_args(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6a705_FnCallExprModel>* _51729_m) {
	jule::I32 _51817_j = 0LL;;
	if (((((*(_51729_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_51729_m)).get()._field_Func.get()._field_Decl.get()._field_Statically))) || (((*(_51729_m)).get()._field_Func.get()._field_Params.len() > 0LL) && _213c757a9_IsSelf((*(_51729_m)).get()._field_Func.get()._field_Params[0LL].get()._field_Decl.ptr())))) {
		(_51817_j)++;
	};
	{
		auto expr = &((*(_51729_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9356be8:;
		if (it != expr_end) {
			jule::I32 _52313_i = it - expr->begin();
			jule::Any _52316_arg = *it;
			{
				jule::Ptr<_213c787e0_ParamIns> _52417_p = (*(_51729_m)).get()._field_Func.get()._field_Params[_51817_j];;
				if (((_52417_p.get()._field_Decl != nullptr) && _52417_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _52316_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b93583c0:;
							{
								jule::Ptr<_213d11988_Var> _52825_v = _52316_arg.cast_ptr<_213d11988_Var>(&__jule_any_type8);;
								if (_52825_v.get()._field_Reference) {
									_1b64118bb_model(_self_, _52316_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_1b93582d2:;
					};
					_213b06250_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1b64118bb_model(_self_, _52316_arg);
					_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_1b640761a_possibleRefExpr(_self_, _52316_arg);
				_julec_label_end:;
				if ((((*(_51729_m)).get()._field_Args.len() - _52313_i) > 1LL)) {
					_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_51817_j)++;
			}
			_iter_next_1b9356be8:;
			++it;
			_52313_i++;
			goto _iter_begin_1b9356be8;
		}
		_iter_end_1b9356be8:;
	};
}



inline void _1b64084c8_modelForCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Any _54836_expr) {
	{
		auto &_match_expr{ _54836_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b935c182:;
			{
				_1b640b850_funcIns(_self_, _54836_expr.cast_ptr<_213c796ae_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b935c209:;
			{
				jule::Ptr<_213c6d076_StructSubIdentExprModel> _55421_ssie = _54836_expr.cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_55421_ssie.get()._field_Method != nullptr)) {
					_1b640b850_funcIns(_self_, _55421_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1b935c072:;
	};
	_1b640761a_possibleRefExpr(_self_, _54836_expr);
}



inline void _1b640874d_pushCallInf(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6a705_FnCallExprModel>* _56332_m) {
	if ((_22991518b_Production || ((!((*(_56332_m)).get()._field_Func.get()._field_Anon)) && (!(_1b6413857_isBuiltinCallHasDebuginf(_56332_m)))))) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_56332_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_56332_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1b936011e:;
				{
					if ((*(_56332_m)).get()._field_Expr.cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_Binded) {
						_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1b93602ea;
				}
			}
			else {
				_case_begin_1b93602ea:;
				{
					_213b06250_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1b93601b8:;
		};
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_213b08472_locInfo(_self_.get()._field_oc, &((*(_56332_m)).get()._field_Token));
	_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_56332_m)).get()._field_Args.len() != 0LL)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1b6408a5b_isWrapped(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6a705_FnCallExprModel>* _58834_m) {
	if ((((!(_213c7aa45_IsBuiltin((*(_58834_m)).get()._field_Func.ptr()))) && ((*(_58834_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _213c757a9_IsSelf((*(_58834_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_58834_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1b93637c6:;
				{
					jule::Ptr<_213c6d076_StructSubIdentExprModel> _59225_ssie = (*(_58834_m)).get()._field_Expr.cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_213c75a1d_IsRef((*(_58834_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_213d8b2b5_Sptr(_59225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b9364c39:;
							{
								goto _match_end_1b9364541;
							}
						}
						else {
							_case_begin_1b9364596:;
							{
								if ((_213d8c4a3_Struct(_59225_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_59225_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_213b06250_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1b64118bb_model(_self_, _59225_ssie.get()._field_Expr.get()._field_Model);
										_213b06250_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1b9364541:;
					};
				}
			}
			_match_end_1b93635b7:;
		};
	};
	return false;;
}



inline void _1b6408cd1_pureFuncCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6a705_FnCallExprModel>* _61237_m) {
	jule::Bool _61313_wrapped = _1b6408a5b_isWrapped(_self_, _61237_m);;
	_1b64084c8_modelForCall(_self_, (*(_61237_m)).get()._field_Expr);
	if ((!(_213c7aa45_IsBuiltin((*(_61237_m)).get()._field_Func.ptr())))) {
		if (((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Binded && ((*(_61237_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_213b21db4_hasDirective(&((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_213b06250_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_61237_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b93698a9:;
					if (it != expr_end) {
						jule::I32 _61926_i = it - expr->begin();
						jule::Ptr<_213d870a2_InsGeneric> _61933_g = *it;
						{
							_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _61933_g.get()._field_Kind));
							if ((((*(_61237_m)).get()._field_Func.get()._field_Generics.len() - _61926_i) > 1LL)) {
								_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1b93698a9:;
						++it;
						_61926_i++;
						goto _iter_begin_1b93698a9;
					}
					_iter_end_1b93698a9:;
				};
				_213b06250_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1b640874d_pushCallInf(_self_, _61237_m);
	jule::Bool _63017_locinfo = false;;
	if ((((!(_213c7aa45_IsBuiltin((*(_61237_m)).get()._field_Func.ptr()))) && ((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _213c757a9_IsSelf((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_61237_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1b936cca8:;
				{
					jule::Ptr<_213c6d076_StructSubIdentExprModel> _63425_ssie = (*(_61237_m)).get()._field_Expr.cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_213c75a1d_IsRef((*(_61237_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1b9371691:;
							{
								_1b640761a_possibleRefExpr(_self_, _63425_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_213d8b2b5_Sptr(_63425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b936db66:;
							{
								_1b640761a_possibleRefExpr(_self_, _63425_ssie.get()._field_Expr.get()._field_Model);
								_213b06250_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_22991518b_Production))) {
									_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_213b08472_locInfo(_self_.get()._field_oc, &((*(_61237_m)).get()._field_Token));
									_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1b936db00:;
							{
								if ((_213d8c4a3_Struct(_63425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _63425_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1b936e3a3:;
											{
												jule::Ptr<_213d11988_Var> _65133_v = _63425_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_213d11988_Var>(&__jule_any_type8);;
												if (_65133_v.get()._field_Reference) {
													goto _match_end_1b936e6d3;
												};
												goto _case_begin_1b936e738;
											}
										}
										else {
											_case_begin_1b936e738:;
											{
												_213b06250_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1b936e6d3:;
									};
								};
								if (_61313_wrapped) {
									_213b06250_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1b64118bb_model(_self_, _63425_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1b936da9a:;
					};
					if (((*(_61237_m)).get()._field_Args.len() > 0LL)) {
						_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_1b936cd1e:;
				{
					_1b640761a_possibleRefExpr(_self_, (*(_61237_m)).get()._field_Expr.cast_ptr<_213c6c790_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_22991518b_Production))) {
						_63017_locinfo=true;
					};
					if (((*(_61237_m)).get()._field_Args.len() > 0LL)) {
						_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1b936ca88:;
		};
	};
	_1b6408253_args(_self_, _61237_m);
	if (_63017_locinfo) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_213b08472_locInfo(_self_.get()._field_oc, &((*(_61237_m)).get()._field_Token));
		_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_61313_wrapped) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1b6409056_coFuncCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6a705_FnCallExprModel>* _69335_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_213b066a1_addIndent(_self_.get()._field_oc);
	jule::Str _69617_head = jule::Str("std::thread([", 13);;
	if (((*(_69335_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		(_69617_head).append("_self_", 6);
		if (((*(_69335_m)).get()._field_Args.len() > 0LL)) {
			(_69617_head).append(", ", 2);
		};
	};
	{
		auto expr = &((*(_69335_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b937a700:;
		if (it != expr_end) {
			jule::I32 _70313_i = it - expr->begin();
			jule::Any _70316_arg = *it;
			{
				if ((_70313_i > 0LL)) {
					(_69617_head).append(", ", 2);
				};
				{
					auto &_match_expr{ _70316_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b937b25b:;
						{
							jule::Ptr<_213d11988_Var> _70925_v = _70316_arg.cast_ptr<_213d11988_Var>(&__jule_any_type8);;
							_69617_head+=static__1b641a3ca_var(_70925_v);
							goto _iter_next_1b937a700;
						}
					}
					_match_end_1b937b448:;
				};
				jule::Str _71317_name = (jule::Str("_co_arg_", 8) + _2121950d7_Itoa(_70313_i));;
				_69617_head+=_71317_name;
				_213b06a58_indent(_self_.get()._field_oc);
				_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_69335_m)).get()._field_Func.get()._field_Params[_70313_i].get()._field_Kind));
				_213b06250_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_69335_m)).get()._field_Func.get()._field_Params[_70313_i].get()._field_Decl.get()._field_Reference) {
					_213b06250_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_213b064c5_writeR(_self_.get()._field_oc, &(_71317_name));
				_213b06250_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b640761a_possibleRefExpr(_self_, _70316_arg);
				_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _72517_argS = jule::Any(_71317_name, &__jule_any_type5);;
				(*(_69335_m)).get()._field_Args[_70313_i]=(*(((jule::Any*)((&(_72517_argS))))));
			}
			_iter_next_1b937a700:;
			++it;
			_70313_i++;
			goto _iter_begin_1b937a700;
		}
		_iter_end_1b937a700:;
	};
	_213b06a58_indent(_self_.get()._field_oc);
	_213b064c5_writeR(_self_.get()._field_oc, &(_69617_head));
	_213b06250_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_213b066a1_addIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_1b6408cd1_pureFuncCall(_self_, _69335_m);
	_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b6409375_writeUseExpr(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c796ae_FnIns>* _74337_f, jule::Ptr<_213d5ae22_Data> _74352_d) {
	if ((_213d8cbe0_Tup(_74352_d.get()._field_Kind.ptr()) == nullptr)) {
		_1b640761a_possibleRefExpr(_self_, _74352_d.get()._field_Model);
		_213b06250_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_213c6e42e_TupleExprModel> _74917_tup = _74352_d.get()._field_Model.cast_ptr<_213c6e42e_TupleExprModel>(&__jule_any_type87);;
	_213b1e6db_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _213d8cbe0_Tup((*(_74337_f)).get()._field_Result.ptr()));
	_213b06250_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_74917_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b93864db:;
		if (it != expr_end) {
			jule::I32 _75213_i = it - expr->begin();
			jule::Ptr<_213d5ae22_Data> _75216_data = *it;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(_75213_i));
				_213b06250_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1b640761a_possibleRefExpr(_self_, _75216_data.get()._field_Model);
				if (((_74917_tup.get()._field_Datas.len() - _75213_i) > 1LL)) {
					_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1b93864db:;
			++it;
			_75213_i++;
			goto _iter_begin_1b93864db;
		}
		_iter_end_1b93864db:;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1b64095ea_funcCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6a705_FnCallExprModel> _76432_m) {
	if (_76432_m.get()._field_IsCo) {
		_1b6409056_coFuncCall(_self_, &(_76432_m));
		return;;
	};
	if (((_213c7aa45_IsBuiltin(_76432_m.get()._field_Func.ptr()) || (!(_76432_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_76432_m.get()._field_Except != nullptr) && (_76432_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1b6408cd1_pureFuncCall(_self_, &(_76432_m));
		return;;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_213b066a1_addIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1b6408cd1_pureFuncCall(_self_, &(_76432_m));
	_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_213b06a58_indent(_self_.get()._field_oc);
	if ((_76432_m.get()._field_Except != nullptr)) {
		if (((_76432_m.get()._field_Func.get()._field_Result == nullptr) || (!(_76432_m.get()._field_Assigned)))) {
			_213b06250_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1b6401713_scope(_self_.get()._field_oc.get()._field_sc, _76432_m.get()._field_Except);
			_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _79021_forwarded = _1b641358d_isForwarded(&(_76432_m.get()._field_Except));;
			_213b06250_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_79021_forwarded) {
				_213b06250_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _79525_stmt = _76432_m.get()._field_Except.get()._field_Stmts[(_76432_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79525_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1b938eb10:;
					{
						_76432_m.get()._field_Except.get()._field_Stmts=_76432_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_76432_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_213b06250_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_213b066a1_addIndent(_self_.get()._field_oc);
						_1b640148d_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_76432_m.get()._field_Except));
						_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_213b06a58_indent(_self_.get()._field_oc);
						_1b6409375_writeUseExpr(_self_, &(_76432_m.get()._field_Func), _79525_stmt.cast_ptr<_213d5ae22_Data>(&__jule_any_type24));
						_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_213b0687c_doneIndent(_self_.get()._field_oc);
						_213b06a58_indent(_self_.get()._field_oc);
						_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1b93908d0:;
					{
						_1b6401713_scope(_self_.get()._field_oc.get()._field_sc, _76432_m.get()._field_Except);
					}
				}
				_match_end_1b9390803:;
			};
			if (_79021_forwarded) {
				_213b06250_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1b6411b41_initExpr(_self_, _76432_m.get()._field_Func.get()._field_Result);
				_213b06250_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_213b06250_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_213b0687c_doneIndent(_self_.get()._field_oc);
	} else {
		_213b06250_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_213b08472_locInfo(_self_.get()._field_oc, &(_76432_m.get()._field_Token));
		_213b06250_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_213c76e70_IsVoid(_76432_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_213b06a58_indent(_self_.get()._field_oc);
			_213b06250_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_213b0687c_doneIndent(_self_.get()._field_oc);
	};
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b6409870_slice(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6aaac_SliceExprModel> _83529_m) {
	if ((_83529_m.get()._field_Elems.len() == 0LL)) {
		_213b06250_write(_self_.get()._field_oc, _213b1754c_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83529_m.get()._field_ElemKind));
		_213b06250_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_213b06250_write(_self_.get()._field_oc, _213b1754c_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83529_m.get()._field_ElemKind));
	_213b06250_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1b6407ecd_models(_self_, _83529_m.get()._field_Elems);
	_213b06250_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b6409ae5_indexing(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6b030_IndexingExprModel> _84732_m) {
	_1b640761a_possibleRefExpr(_self_, _84732_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_22991518b_Production || (_213d8b529_Ptr(_84732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_213d8c97b_Map(_84732_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1b6413a88_isExprComesFromBind(&(_84732_m.get()._field_Expr))) {
			_case_begin_1b939aa72:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1b640761a_possibleRefExpr(_self_, _84732_m.get()._field_Index.get()._field_Model);
				_213b06250_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1b939b19e:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_213b08472_locInfo(_self_.get()._field_oc, &(_84732_m.get()._field_Token));
				_213b06250_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_1b640761a_possibleRefExpr(_self_, _84732_m.get()._field_Index.get()._field_Model);
				_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b939b149:;
	};
}



inline void _1b6409d6a_unsafeIndexing(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213e63447_UnsafeIndexingExprModel> _86738_m) {
	_1b640761a_possibleRefExpr(_self_, _86738_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_22991518b_Production || (_213d8b529_Ptr(_86738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_213d8c97b_Map(_86738_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b939d9ed:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1b640761a_possibleRefExpr(_self_, _86738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_213b06250_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1b93a000a:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1b640761a_possibleRefExpr(_self_, _86738_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b939ee94:;
	};
}



inline void _1b640a0e0_anonFunc(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6b3d7_AnonFnExprModel> _88432_m) {
	_213b06250_write(_self_.get()._field_oc, _213b1a022_func(_self_.get()._field_oc.get()._field_tc.ptr(), _88432_m.get()._field_Func));
	_213b06250_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_213b0d455_paramsIns(_self_.get()._field_oc, &(_88432_m.get()._field_Func.get()._field_Params));
	_213b06250_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_213b19906_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_88432_m.get()._field_Func));
	_213b06250_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b6401988_funcScope(_self_.get()._field_oc.get()._field_sc, _88432_m.get()._field_Func);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640a365_mapExpr(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6bc12_MapExprModel> _89531_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89531_m.get()._field_KeyKind));
	_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89531_m.get()._field_ValKind));
	_213b06250_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_89531_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_89531_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b93a80ce:;
			if (it != expr_end) {
				jule::I32 _90218_i = it - expr->begin();
				jule::Ptr<_213c6b78e_KeyValPairExprModel> _90225_pair = *it;
				{
					_213b06250_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1b640761a_possibleRefExpr(_self_, _90225_pair.get()._field_Key);
					_213b06250_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1b640761a_possibleRefExpr(_self_, _90225_pair.get()._field_Val);
					_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_89531_m.get()._field_Entries.len() - _90218_i) > 1LL)) {
						_213b06250_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1b93a80ce:;
				++it;
				_90218_i++;
				goto _iter_begin_1b93a80ce;
			}
			_iter_end_1b93a80ce:;
		};
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b640a5da_slicing(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6c251_SlicingExprModel> _91631_m) {
	_1b640761a_possibleRefExpr(_self_, _91631_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_22991518b_Production))) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_213b08472_locInfo(_self_.get()._field_oc, &(_91631_m.get()._field_Token));
		_213b06250_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1b640761a_possibleRefExpr(_self_, _91631_m.get()._field_Left);
	if ((_91631_m.get()._field_Right != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b640761a_possibleRefExpr(_self_, _91631_m.get()._field_Right);
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640a860_traitSub(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6c790_TraitSubIdentExprModel> _93232_m) {
	_213b06250_write(_self_.get()._field_oc, static__1b64195a5_traitDecl(_93232_m.get()._field_Trt));
	_213b06250_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_213b06250_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1b640761a_possibleRefExpr(_self_, _93232_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_213b06250_write(_self_.get()._field_oc, static__1b6419066_func(&(_93232_m.get()._field_Method)));
}



inline void _1b640aad5_structureSub(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6d076_StructSubIdentExprModel> _94136_m) {
	_1b640761a_possibleRefExpr(_self_, _94136_m.get()._field_Expr.get()._field_Model);
	if ((_94136_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_213d8b529_Ptr(_94136_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_213d8b2b5_Sptr(_94136_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_22991518b_Production))) {
			_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_213b08472_locInfo(_self_.get()._field_oc, &(_94136_m.get()._field_Token));
			_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_213b06250_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_213b06250_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_213b06250_write(_self_.get()._field_oc, static__1b641a133_field(&(_94136_m.get()._field_Field.get()._field_Decl)));
}



inline void _1b640ad5a_commonIdent(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6dac1_CommonIdentExprModel> _96231_m) {
	_213b064c5_writeR(_self_.get()._field_oc, &(_96231_m.get()._field_Ident));
}



inline void _1b640b0d0_commonSub(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6e132_CommonSubIdentExprModel> _96633_m) {
	_1b640761a_possibleRefExpr(_self_, _96633_m.get()._field_Expr);
	{
		
		if ((_213d8b529_Ptr(_96633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b93ba82d:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_213d8b2b5_Sptr(_96633_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b93bade4:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_22991518b_Production))) {
					_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_213b08472_locInfo(_self_.get()._field_oc, &(_96633_m.get()._field_Token));
					_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_213b06250_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1b93bad7d:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1b93bad17:;
	};
	_213b064c5_writeR(_self_.get()._field_oc, &(_96633_m.get()._field_Ident));
}



inline void _1b640b355_array(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6d7d5_ArrayExprModel> _98529_m) {
	_213b06250_write(_self_.get()._field_oc, _213b18bad_array(_self_.get()._field_oc.get()._field_tc.ptr(), _98529_m.get()._field_Kind));
	if ((_98529_m.get()._field_Elems.len() == 0LL)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_98529_m.get()._field_Elems.len() == 2LL) && (_98529_m.get()._field_Elems[1LL] == nullptr))) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1b640761a_possibleRefExpr(_self_, _98529_m.get()._field_Elems[0LL]);
		_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1b6407ecd_models(_self_, _98529_m.get()._field_Elems);
	_213b06250_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1b640b5ca_funcInsCommon(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c796ae_FnIns> _100837_m) {
	_213b06250_write(_self_.get()._field_oc, _213b1a022_func(_self_.get()._field_oc.get()._field_tc.ptr(), _100837_m));
	_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b640b850_funcIns(_self_, _100837_m);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640b850_funcIns(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c796ae_FnIns> _101531_m) {
	if (((_101531_m.get()._field_Decl != nullptr) && _101531_m.get()._field_Decl.get()._field_Binded)) {
		jule::Ptr<_213c0e314_Directive> _101717_d = _213b21a2e_findDirective(&(_101531_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_101717_d != nullptr)) {
			_213b06250_write(_self_.get()._field_oc, _213b12778_concatAllParts(_101717_d.get()._field_Args));
			_213b06250_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_213b06250_write(_self_.get()._field_oc, static__1b641930d_funcIns(&(_101531_m)));
}



inline void _1b640bac5_tuple(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6e42e_TupleExprModel> _102629_m) {
	{
		auto expr = &(_102629_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b93c6b69:;
		if (it != expr_end) {
			jule::I32 _102714_i = it - expr->begin();
			jule::Ptr<_213d5ae22_Data> _102721_d = *it;
			{
				_1b640761a_possibleRefExpr(_self_, _102721_d.get()._field_Model);
				_213b06250_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_102629_m.get()._field_Datas.len() - _102714_i) > 1LL)) {
					_213b06250_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_213b06a58_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1b93c6b69:;
			++it;
			_102714_i++;
			goto _iter_begin_1b93c6b69;
		}
		_iter_end_1b93c6b69:;
	};
}



inline void _1b640bd4a_newCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c703ec_BuiltinNewCallExprModel> _103731_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _103731_m.get()._field_Kind));
	_213b06250_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_103731_m.get()._field_Init != nullptr)) {
		_1b640761a_possibleRefExpr(_self_, _103731_m.get()._field_Init);
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640c0c0_outCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6e808_BuiltinOutCallExprModel> _104731_m) {
	if ((_104731_m.get()._field_Debug && _22991518b_Production)) {
		return;;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1b640761a_possibleRefExpr(_self_, _104731_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640c345_outlnCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6ebe3_BuiltinOutlnCallExprModel> _105633_m) {
	if ((_105633_m.get()._field_Debug && _22991518b_Production)) {
		return;;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1b640761a_possibleRefExpr(_self_, _105633_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640c5ba_panicCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c707d7_BuiltinPanicCallExprModel> _106533_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1b640761a_possibleRefExpr(_self_, _106533_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_213b08472_locInfo(_self_.get()._field_oc, &(_106533_m.get()._field_Token));
	_213b06250_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1b640c840_assertCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c70c8d_BuiltinAssertCallExprModel> _107334_m) {
	if (_22991518b_Production) {
		return;;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1b640761a_possibleRefExpr(_self_, _107334_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_213b06250_write(_self_.get()._field_oc, _1b6412889_cstrLit(static_cast<jule::Slice<jule::U8>>(_107334_m.get()._field_Log)));
	_213b06250_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_213b08472_locInfo(_self_.get()._field_oc, &(_107334_m.get()._field_Token));
	_213b06250_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1b640cab5_errorCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c72b6e_BuiltinErrorCallExprModel> _108633_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_213c76e70_IsVoid(_108633_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _108633_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b93d34c2:;
				{
					jule::Ptr<_213d11988_Var> _109121_v = _108633_m.get()._field_Err.get()._field_Model.cast_ptr<_213d11988_Var>(&__jule_any_type8);;
					if (_109121_v.get()._field_Ident.equal("error", 5)) {
						_213b06250_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1b93d346c:;
		};
		_213b06250_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_213b06250_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_213b1ed29_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_108633_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _108633_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b93d601e:;
				{
					jule::Ptr<_213d11988_Var> _110321_v = _108633_m.get()._field_Err.get()._field_Model.cast_ptr<_213d11988_Var>(&__jule_any_type8);;
					if (_110321_v.get()._field_Ident.equal("error", 5)) {
						_213b06250_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1b93d5e42:;
		};
		_213b06250_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1b640761a_possibleRefExpr(_self_, _108633_m.get()._field_Err.get()._field_Model);
	jule::I32 _111213_i = _213b07174_pushAnyType(_self_.get()._field_oc, _108633_m.get()._field_Err.get()._field_Kind);;
	_213b06250_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(_111213_i));
	_213b06250_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1b640cd3a_copyCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c72784_BuiltinCopyCallExprModel> _111832_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1b640761a_possibleRefExpr(_self_, _111832_m.get()._field_Dest.get()._field_Model);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_213d8b051_Prim(_111832_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1b640761a_possibleRefExpr(_self_, _111832_m.get()._field_Src.get()._field_Model);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_213d8b051_Prim(_111832_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640d0b0_lenCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c7194d_BuiltinLenCallExprModel> _113431_m) {
	_1b640761a_possibleRefExpr(_self_, _113431_m.get()._field_Expr.get()._field_Model);
	_213b06250_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1b640d335_capCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c71c6c_BuiltinCapCallExprModel> _113931_m) {
	_1b640761a_possibleRefExpr(_self_, _113931_m.get()._field_Expr.get()._field_Model);
	_213b06250_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1b640d5aa_deleteCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c72421_BuiltinDeleteCallExprModel> _114434_m) {
	_1b640761a_possibleRefExpr(_self_, _114434_m.get()._field_Dest.get()._field_Model);
	if ((_114434_m.get()._field_Key != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1b640761a_possibleRefExpr(_self_, _114434_m.get()._field_Key.get()._field_Model);
		_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_213b06250_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1b640d830_makeCallSlice(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c71244_BuiltinMakeCallExprModel>* _115538_m) {
	jule::Ptr<_213d95247_Slc> _115617_slice = _213d8beca_Slc((*(_115538_m)).get()._field_Kind.ptr());;
	_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_115538_m)).get()._field_Kind));
	_213b06250_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1b640761a_possibleRefExpr(_self_, (*(_115538_m)).get()._field_Len);
	_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_115538_m)).get()._field_Cap != nullptr)) {
		_1b640761a_possibleRefExpr(_self_, (*(_115538_m)).get()._field_Cap);
	} else {
		_1b640761a_possibleRefExpr(_self_, (*(_115538_m)).get()._field_Len);
	};
	if (_213b2215b_shouldInitialized(&(_115617_slice.get()._field_Elem))) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b6411b41_initExpr(_self_, _115617_slice.get()._field_Elem);
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640daa5_makeCallStr(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c71244_BuiltinMakeCallExprModel>* _117336_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_213b06250_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1b640761a_possibleRefExpr(_self_, (*(_117336_m)).get()._field_Len);
	if (((*(_117336_m)).get()._field_Cap != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b640761a_possibleRefExpr(_self_, (*(_117336_m)).get()._field_Cap);
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640dd2a_makeCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c71244_BuiltinMakeCallExprModel> _118432_m) {
	if ((_213d8beca_Slc(_118432_m.get()._field_Kind.ptr()) != nullptr)) {
		_1b640d830_makeCallSlice(_self_, &(_118432_m));
		return;;
	};
	_1b640daa5_makeCallStr(_self_, &(_118432_m));
}



inline void _1b640e0a0_pushToSlice(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213e637cc_PushToSliceExprModel> _119235_m) {
	;
	_213b06250_write(_self_.get()._field_oc, jule::Str("{ ", 2));
	_213b06250_write(_self_.get()._field_oc, _213b1754c_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _119235_m.get()._field_Elems.get()._field_ElemKind));
	jule::Bool _120017_ptr = false;;
	{
		auto &_match_expr{ _119235_m.get()._field_Dest };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b93e854d:;
			{
				jule::Ptr<_213c68b76_UnaryExprModel> _120421_u = _119235_m.get()._field_Dest.cast_ptr<_213c68b76_UnaryExprModel>(&__jule_any_type74);;
				if ((_213d8b529_Ptr(_120421_u.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					_213b06250_write(_self_.get()._field_oc, jule::Str(" *__jule_push_dest = ", 21));
					_1b640761a_possibleRefExpr(_self_, _120421_u.get()._field_Expr.get()._field_Model);
					_213b06250_write(_self_.get()._field_oc, jule::Str("; ", 2));
					_120017_ptr=true;
					goto _match_end_1b93e972a;
				};
				goto _case_begin_1b93e98a1;
			}
		}
		else {
			_case_begin_1b93e98a1:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str(" &__jule_push_dest = ", 21));
				_1b640761a_possibleRefExpr(_self_, _119235_m.get()._field_Dest);
				_213b06250_write(_self_.get()._field_oc, jule::Str("; ", 2));
			}
		}
		_match_end_1b93e972a:;
	};
	if ((_119235_m.get()._field_Elems.get()._field_Elems.len() == 1LL)) {
		if (_120017_ptr) {
			_213b06250_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->push(", 23));
		} else {
			_213b06250_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.push(", 22));
		};
		_1b640761a_possibleRefExpr(_self_, _119235_m.get()._field_Elems.get()._field_Elems[0LL]);
		_213b06250_write(_self_.get()._field_oc, jule::Str("); }", 4));
		return;;
	};
	if (_120017_ptr) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_213b06250_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.alloc_for_append(", 34));
	};
	_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(static_cast<jule::I32>(_119235_m.get()._field_Elems.get()._field_Elems.len())));
	_213b06250_write(_self_.get()._field_oc, jule::Str("); ", 3));
	{
		auto expr = &(_119235_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9400830:;
		if (it != expr_end) {
			jule::Any _123821_e = *it;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("__jule_push_dest", 16));
				if (_120017_ptr) {
					_213b06250_write(_self_.get()._field_oc, jule::Str("->__push(", 9));
				} else {
					_213b06250_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				};
				_1b640761a_possibleRefExpr(_self_, _123821_e);
				_213b06250_write(_self_.get()._field_oc, jule::Str("); ", 3));
			}
			_iter_next_1b9400830:;
			++it;
			goto _iter_begin_1b9400830;
		}
		_iter_end_1b9400830:;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b640e325_appendToSlice(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213e63b84_AppendToSliceExprModel> _125237_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b640761a_possibleRefExpr(_self_, _125237_m.get()._field_Dest);
	_213b06250_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	_1b640761a_possibleRefExpr(_self_, _125237_m.get()._field_Slice);
	_213b06250_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1b640e59a_appendCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c7162e_BuiltinAppendCallExprModel> _126034_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1b640761a_possibleRefExpr(_self_, _126034_m.get()._field_Dest);
	_213b06250_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b640761a_possibleRefExpr(_self_, _126034_m.get()._field_Elements);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640e820_cloneCall(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c70012_BuiltinCloneCallExprModel> _126833_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1b640761a_possibleRefExpr(_self_, _126833_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640ea95_sizeof(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c72e6b_SizeofExprModel> _127430_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1b640761a_possibleRefExpr(_self_, _127430_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b640ed1a_alignof(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c73257_AlignofExprModel> _128031_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1b640761a_possibleRefExpr(_self_, _128031_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1b6410128_runeLit(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c73543_RuneExprModel> _128627_m) {
	if ((_128627_m.get()._field_Code <= 127LL)) {
		jule::Str _128821_b = _1b64122c3_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_128627_m.get()._field_Code)));;
		if (_128821_b.equal("'", 1)) {
			_128821_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _128821_b) + jule::Str("'", 1));;
	};
	return _1b6412e3e_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_128627_m.get()._field_Code)));;
}



inline void _1b641039d_structureStatic(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c6d41c_StructStaticIdentExprModel> _129739_m) {
	_213b06250_write(_self_.get()._field_oc, static__1b641930d_funcIns(&(_129739_m.get()._field_Method)));
}



inline void _1b6410623_integratedToStr(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c73851_IntegratedToStrExprModel> _130139_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1b640761a_possibleRefExpr(_self_, _130139_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b6410898_backendEmit(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c73c19_BackendEmitExprModel> _130735_m) {
	if ((_130735_m.get()._field_Exprs.len() == 0LL)) {
		_213b064c5_writeR(_self_.get()._field_oc, &(_130735_m.get()._field_Code));
		return;;
	};
	jule::I32 _131213_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _131317_args = jule::Slice<jule::Any>::alloc(_130735_m.get()._field_Exprs.len(), _130735_m.get()._field_Exprs.len());;
	{
		auto expr = &(_130735_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b940c375:;
		if (it != expr_end) {
			jule::I32 _131414_i = it - expr->begin();
			jule::Any _131421_expr = *it;
			{
				_1b640761a_possibleRefExpr(_self_, _131421_expr);
				_131317_args[_131414_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_131213_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _131213_n);
			}
			_iter_next_1b940c375:;
			++it;
			_131414_i++;
			goto _iter_begin_1b940c375;
		}
		_iter_end_1b940c375:;
	};
	_213b06250_write(_self_.get()._field_oc, _213e51710_Format(_130735_m.get()._field_Code, _131317_args));
}



inline void _1b6410b1d_free(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213c74005_FreeExprModel> _132228_m) {
	_1b640761a_possibleRefExpr(_self_, _132228_m.get()._field_Expr);
	if (_2299149e8_RC) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1b6410d93_mutSlicing(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213e641c3_MutSlicingExprModel> _133134_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b640761a_possibleRefExpr(_self_, _133134_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_22991518b_Production))) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_213b08472_locInfo(_self_.get()._field_oc, &(_133134_m.get()._field_Token));
		_213b06250_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1b640761a_possibleRefExpr(_self_, _133134_m.get()._field_Left);
	if ((_133134_m.get()._field_Right != nullptr)) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b640761a_possibleRefExpr(_self_, _133134_m.get()._field_Right);
	};
	_213b06250_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1b6411118_strInsertBegin(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213e646ac_StrInsertBeginExprModel> _134838_m) {
	_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b640761a_possibleRefExpr(_self_, _134838_m.get()._field_Dest);
	_213b06250_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1b640761a_possibleRefExpr(_self_, _134838_m.get()._field_Expr);
	_213b06250_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1b641138d_strComp(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213e6290d_StrCompExprModel> _135631_m) {
	if (_135631_m.get()._field_NotEq) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Slice<jule::U8> _136013_bytes = static_cast<jule::Slice<jule::U8>>(_2121a6c86_ReadStr(_135631_m.get()._field_Right.ptr()));;
	_1b640761a_possibleRefExpr(_self_, _135631_m.get()._field_Left);
	_213b06250_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_213b06250_write(_self_.get()._field_oc, _1b6412889_cstrLit(_136013_bytes));
	_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(static_cast<jule::I32>(_136013_bytes.len())));
	_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_135631_m.get()._field_NotEq) {
		_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1b6411635_inlineStdInternalNosafeStobs(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213e64954_InlineStdInternalNosafeStobs> _137252_m) {
	_1b640761a_possibleRefExpr(_self_, _137252_m.get()._field_Str);
	_213b06250_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
}



inline void _1b64118bb_model(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Any _137729_m) {
	{
		auto &_match_expr{ _137729_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b941a98d:;
			{
				_213b06250_write(_self_.get()._field_oc, _137729_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b941ac68:;
			{
				_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _137729_m.cast_ptr<_213d88834_TypeKind>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b941acce:;
			{
				_1b6405c67_constant(_self_, _137729_m.cast_ptr<_2121a4c51_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b941ad45:;
			{
				_1b64068a0_var(_self_, _137729_m.cast_ptr<_213d11988_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b941adab:;
			{
				_1b6406b25_structureIns(_self_, _137729_m.cast_ptr<_213c64402_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b941b83a:;
			{
				_1b640b5ca_funcInsCommon(_self_, _137729_m.cast_ptr<_213c796ae_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1b941b8a1:;
			{
				_1b64063a5_unsafeBinary(_self_, _137729_m.cast_ptr<_213e630b2_UnsafeBinopExprModel>(&__jule_any_type129).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b941b917:;
			{
				_1b640662a_binary(_self_, _137729_m.cast_ptr<_213c687be_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b941b97d:;
			{
				_1b6406d9a_unary(_self_, _137729_m.cast_ptr<_213c68b76_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b941b9e4:;
			{
				_1b6407120_structureLit(_self_, _137729_m.cast_ptr<_213c694e5_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b941ba5a:;
			{
				_1b6407395_allocStructure(_self_, _137729_m.cast_ptr<_213c69803_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b941bac1:;
			{
				_1b6407c58_casting(_self_, _137729_m.cast_ptr<_213c69d53_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b941bb37:;
			{
				_1b64095ea_funcCall(_self_, _137729_m.cast_ptr<_213c6a705_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b941bb9d:;
			{
				_1b6409870_slice(_self_, _137729_m.cast_ptr<_213c6aaac_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b941bc14:;
			{
				_1b640b355_array(_self_, _137729_m.cast_ptr<_213c6d7d5_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b941bc7a:;
			{
				_1b6409d6a_unsafeIndexing(_self_, _137729_m.cast_ptr<_213e63447_UnsafeIndexingExprModel>(&__jule_any_type130));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b941bce1:;
			{
				_1b6409ae5_indexing(_self_, _137729_m.cast_ptr<_213c6b030_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b941bd68:;
			{
				_1b640a0e0_anonFunc(_self_, _137729_m.cast_ptr<_213c6b3d7_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b941bde0:;
			{
				_1b640a365_mapExpr(_self_, _137729_m.cast_ptr<_213c6bc12_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b941be67:;
			{
				_1b640a5da_slicing(_self_, _137729_m.cast_ptr<_213c6c251_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b941bede:;
			{
				_1b640a860_traitSub(_self_, _137729_m.cast_ptr<_213c6c790_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b941c066:;
			{
				_1b640aad5_structureSub(_self_, _137729_m.cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b941c0dd:;
			{
				_1b640ad5a_commonIdent(_self_, _137729_m.cast_ptr<_213c6dac1_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b941c165:;
			{
				_1b640b0d0_commonSub(_self_, _137729_m.cast_ptr<_213c6e132_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b941c1dc:;
			{
				_1b640bac5_tuple(_self_, _137729_m.cast_ptr<_213c6e42e_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b941c264:;
			{
				_1b640c0c0_outCall(_self_, _137729_m.cast_ptr<_213c6e808_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b941c2db:;
			{
				_1b640c345_outlnCall(_self_, _137729_m.cast_ptr<_213c6ebe3_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b941c363:;
			{
				_1b640bd4a_newCall(_self_, _137729_m.cast_ptr<_213c703ec_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b941c3da:;
			{
				_1b640c5ba_panicCall(_self_, _137729_m.cast_ptr<_213c707d7_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b941c462:;
			{
				_1b640c840_assertCall(_self_, _137729_m.cast_ptr<_213c70c8d_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b941c4d9:;
			{
				_1b640cab5_errorCall(_self_, _137729_m.cast_ptr<_213c72b6e_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b941c561:;
			{
				_1b640dd2a_makeCall(_self_, _137729_m.cast_ptr<_213c71244_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b941c5d8:;
			{
				_1b640e59a_appendCall(_self_, _137729_m.cast_ptr<_213c7162e_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b941c660:;
			{
				_1b640e820_cloneCall(_self_, _137729_m.cast_ptr<_213c70012_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b941c6d7:;
			{
				_1b640cd3a_copyCall(_self_, _137729_m.cast_ptr<_213c72784_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b941c75e:;
			{
				_1b640d0b0_lenCall(_self_, _137729_m.cast_ptr<_213c7194d_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b941c7d6:;
			{
				_1b640d335_capCall(_self_, _137729_m.cast_ptr<_213c71c6c_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b941c85d:;
			{
				_1b640d5aa_deleteCall(_self_, _137729_m.cast_ptr<_213c72421_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b941c8d5:;
			{
				_1b640ea95_sizeof(_self_, _137729_m.cast_ptr<_213c72e6b_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b941c95c:;
			{
				_1b640ed1a_alignof(_self_, _137729_m.cast_ptr<_213c73257_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b941c9d4:;
			{
				_213b06250_write(_self_.get()._field_oc, _1b6410128_runeLit(_self_, _137729_m.cast_ptr<_213c73543_RuneExprModel>(&__jule_any_type88)));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b941ca5b:;
			{
				_1b641039d_structureStatic(_self_, _137729_m.cast_ptr<_213c6d41c_StructStaticIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b941cad3:;
			{
				_1b6410623_integratedToStr(_self_, _137729_m.cast_ptr<_213c73851_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b941cb5a:;
			{
				_1b6410898_backendEmit(_self_, _137729_m.cast_ptr<_213c73c19_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b941cbd2:;
			{
				_1b6410b1d_free(_self_, _137729_m.cast_ptr<_213c74005_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b941cc59:;
			{
				_1b6410d93_mutSlicing(_self_, _137729_m.cast_ptr<_213e641c3_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b941ccd1:;
			{
				_1b6411118_strInsertBegin(_self_, _137729_m.cast_ptr<_213e646ac_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1b941cd58:;
			{
				_1b641138d_strComp(_self_, _137729_m.cast_ptr<_213e6290d_StrCompExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1b941cdd0:;
			{
				_1b6411635_inlineStdInternalNosafeStobs(_self_, _137729_m.cast_ptr<_213e64954_InlineStdInternalNosafeStobs>(&__jule_any_type131));
			}
		}
		else {
			_case_begin_1b941ab14:;
			{
				_213b06250_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1b941aa37:;
	};
}



inline void _1b6411b41_initExpr(jule::Ptr<_1b640465b_exprCoder> _self_, jule::Ptr<_213d88834_TypeKind> _148232_t) {
	if (_213d8a5a0_NilCompatible(_148232_t.ptr())) {
		if ((_213d8b529_Ptr(_148232_t.ptr()) != nullptr)) {
			_213b06250_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _148232_t));
			_213b06250_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_213d95d4c_Tuple> _149217_tup = _213d8cbe0_Tup(_148232_t.ptr());;
	if ((_149217_tup != nullptr)) {
		_213b1e6db_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _149217_tup);
		_213b06250_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_149217_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b9436635:;
			if (it != expr_end) {
				jule::I32 _149618_i = it - expr->begin();
				jule::Ptr<_213d88834_TypeKind> _149625_tt = *it;
				{
					if ((!(_213b2215b_shouldInitialized(&(_149625_tt))))) {
						goto _iter_next_1b9436635;
					};
					_213b06250_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_213b06250_write(_self_.get()._field_oc, _2121950d7_Itoa(_149618_i));
					_213b06250_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1b6411b41_initExpr(_self_, _149625_tt);
					if (((_149217_tup.get()._field_Types.len() - _149618_i) > 1LL)) {
						_213b06250_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1b9436635:;
				++it;
				_149618_i++;
				goto _iter_begin_1b9436635;
			}
			_iter_end_1b9436635:;
		};
		_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_213c8b3e6_Enum> _151117_enm = _213d8b78d_Enum(_148232_t.ptr());;
	if ((_151117_enm != nullptr)) {
		_1b64118bb_model(_self_, _151117_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_213d91089_Prim> _151613_prim = _213d8b051_Prim(_148232_t.ptr());;
	if ((_151613_prim != nullptr)) {
		if (_2121a4745_IsNum(_151613_prim.get()._field_Kind)) {
			_213b06250_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_213d94026_IsBool(_151613_prim.ptr())) {
			_213b06250_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_213d9428a_IsStr(_151613_prim.ptr())) {
			_213b06250_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_213d8bc66_Arr(_148232_t.ptr()) != nullptr)) {
		jule::Ptr<_213d973e2_Arr> _152821_arr = _213d8bc66_Arr(_148232_t.ptr());;
		_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _148232_t));
		_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1b6411b41_initExpr(_self_, _152821_arr.get()._field_Elem);
		_213b06250_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_213c64402_StructIns> _153517_s = _213d8c4a3_Struct(_148232_t.ptr());;
	if ((((_153517_s != nullptr) && _153517_s.get()._field_Decl.get()._field_Binded) && (_213b21a2e_findDirective(&(_153517_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("(", 1));
		_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _148232_t));
		_213b06250_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_213b06250_write(_self_.get()._field_oc, _213b1a330_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _148232_t));
	_213b06250_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1b640465b_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b6414429_deriveCoder> static__1b64147c0_new(jule::Ptr<_213b05b01_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_1b6414429_deriveCoder>(_1b6414429_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _1b6414acd_cloneFuncDecl(_1b6414429_deriveCoder* _self_, jule::Ptr<_213c615db_Struct>* _1633_s) {
	jule::Str _1717_obj = _213b18592_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	(_1717_obj).append(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _1b6414ddb_cloneFuncDef(_1b6414429_deriveCoder* _self_, jule::Ptr<_213c615db_Struct>* _2232_s) {
	jule::Str _2317_obj = _213b18592_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	(_2317_obj).append("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b6414429_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b6415d10_TestCoder> static__1b641623e_New(jule::Ptr<_213b05b01_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1b6415d10_TestCoder>(_1b6415d10_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _1b64164a3_findTestingPackage(jule::Ptr<_1b6415d10_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9444225:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1b9444225:;
			++it;
			goto _iter_begin_1b9444225;
		}
		_iter_end_1b9444225:;
	};
	return nullptr;;
}



inline void _1b6416728_appendTest(jule::Ptr<_1b6415d10_TestCoder> _self_, jule::Ptr<_213c796ae_FnIns> _4334_f) {
	_213b06a58_indent(_self_.get()._field_oc);
	_1b6416ddd_callTmReset(_self_);
	_213b06250_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \" ", 34));
	_213b06250_write(_self_.get()._field_oc, _1b6412889_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_213b06250_write(_self_.get()._field_oc, jule::Str(" << std::endl;\n", 15));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, static__1b641930d_funcIns(&(_4334_f)));
	_213b06250_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1b641699d_appendPackageTests(jule::Ptr<_1b6415d10_TestCoder> _self_, jule::Ptr<_213cda8b8_Package>* _5843_p) {
	{
		auto expr = &((*(_5843_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9448801:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &(_5921_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b944913c:;
					if (it != expr_end) {
						jule::Ptr<_213c76a0d_Fn> _6025_f = *it;
						{
							if (_213b21db4_hasDirective(&(_6025_f.get()._field_Directives), jule::Str("test", 4))) {
								_1b6416728_appendTest(_self_, _6025_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1b944913c:;
						++it;
						goto _iter_begin_1b944913c;
					}
					_iter_end_1b944913c:;
				};
			}
			_iter_next_1b9448801:;
			++it;
			goto _iter_begin_1b9448801;
		}
		_iter_end_1b9448801:;
	};
}



inline jule::Bool _1b6416c12_readyTestingPackage(jule::Ptr<_1b6415d10_TestCoder> _self_) {
	jule::Ptr<_213cd7c7d_ImportInfo> _6917_p = _1b64164a3_findTestingPackage(_self_);;
	if ((_6917_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_213cd8d5b_FindStruct(_6917_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_213c6539d_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_213c6539d_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_213c6539d_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1b6416ddd_callTmReset(jule::Ptr<_1b6415d10_TestCoder> _self_) {
	_213b06250_write(_self_.get()._field_oc, static__1b6419066_func(&(_self_.get()._field_tmReset)));
	_213b06250_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b64170b9_callTmFailed(jule::Ptr<_1b6415d10_TestCoder> _self_) {
	_213b06250_write(_self_.get()._field_oc, static__1b6419066_func(&(_self_.get()._field_tmFailed)));
	_213b06250_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b6417295_callTmSkipped(jule::Ptr<_1b6415d10_TestCoder> _self_) {
	_213b06250_write(_self_.get()._field_oc, static__1b6419066_func(&(_self_.get()._field_tmSkipped)));
	_213b06250_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b6417471_Serialize(jule::Ptr<_1b6415d10_TestCoder> _self_) {
	_213b11e09_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_213b11c2d_end(_self_.get()._field_oc);
	});;
	_213b06250_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_213b066a1_addIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	if ((!(_1b6416c12_readyTestingPackage(_self_)))) {
		_213b06250_write(_self_.get()._field_oc, jule::Str("}", 1));
		_213b0687c_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_213b06250_write(_self_.get()._field_oc, _213b161e9_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _213b188a0_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_213b06250_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_213b06250_write(_self_.get()._field_oc, _213b188a0_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_213b06250_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_213b066a1_addIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1b64170b9_callTmFailed(_self_);
	_213b06250_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1b6417295_callTmSkipped(_self_);
	_213b06250_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1b641699d_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_213b06250_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_213b0687c_doneIndent(_self_.get()._field_oc);
	_213b06a58_indent(_self_.get()._field_oc);
	_213b06250_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1b6415d10_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1b64188d4_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		(_3521_obj).append("_", 1);
		_3521_obj+=_2121949aa_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		(_3521_obj).append("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	(_4217_obj).append("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__1b6418cbe_toLocal(jule::I32 _5423_row, jule::I32 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	(_5517_obj).append("_", 1);
	_5517_obj+=_2121950d7_Itoa(_5423_row);
	_5517_obj+=_2121950d7_Itoa(_5433_col);
	(_5517_obj).append("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__1b6419066_func(jule::Ptr<_213c76a0d_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_Binded) {
			_case_begin_1b945e086:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if ((*(_6521_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_1b945e0ec:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_213c771d4_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_1b945d580:;
			{
				jule::Str _7221_obj = static__1b64188d4_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1b945cc77:;
			{
				return static__1b64188d4_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_1b945d4d6:;
	};
}



inline jule::Str static__1b641930d_funcIns(jule::Ptr<_213c796ae_FnIns>* _8424_f) {
	if (_213c7aa45_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_Binded || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__1b6419066_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__1b64188d4_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__1b64195a5_traitDecl(jule::Ptr<_213c88b63_Trait> _9525_t) {
	if (_213c89702_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1b64188d4_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1b641984c_param(jule::Ptr<_213c751c1_Param>* _10322_p) {
	if ((_2114c46ae_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _2114c4417_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_213c757a9_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__1b6418cbe_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__1b6418cbe_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__1b6419ae4_structure(jule::Ptr<_213c615db_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_Binded) {
		if (_213b21db4_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__1b64188d4_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__1b6419d8b_structureIns(jule::Ptr<_213c64402_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_Binded || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__1b6419ae4_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__1b64188d4_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__1b641a133_field(jule::Ptr<_213c5da17_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_Binded) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__1b641a3ca_var(jule::Ptr<_213d11988_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_Binded) {
			_case_begin_1b9468337:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_1b9467743:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_1b94677a9:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1b9467820:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1b9467886:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _2121950d7_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1b9467ac8:;
			{
				return static__1b6418cbe_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_1b9466e6d:;
			{
				return static__1b64188d4_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1b94671e3:;
	};
}



inline jule::Str static__1b641a672_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	(_16517_obj).append("_iter_begin_", 12);
	_16517_obj+=_2121949aa_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__1b641a919_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	(_17317_obj).append("_iter_end_", 10);
	_17317_obj+=_2121949aa_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__1b641abb1_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	(_18117_obj).append("_iter_next_", 11);
	_18117_obj+=_2121949aa_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__1b641ae58_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	(_18917_obj).append("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__1b641b200_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	(_19717_obj).append("_match_end_", 11);
	_19717_obj+=_2121949aa_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__1b641b497_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	(_20517_obj).append("_case_begin_", 12);
	_20517_obj+=_2121949aa_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b6418351_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213b0425e_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213b04726_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _213b04acd_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _213b14769_Str(_213b144e4_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _213b14a77_Equal(jule::Ptr<_213b144e4_customType> _self_, jule::Ptr<_213d88834_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _213b144e4_customType _Src) {
	_Stream << _213b14769_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_213b14e73_typeCoder> static__213b154b2_new(jule::Ptr<_213b05b01_ObjectCoder>* _6324_oc) {
	jule::Ptr<_213b14e73_typeCoder> _6417_tc = jule::new_ptr<_213b14e73_typeCoder>(_213b14e73_typeCoder{._field_oc=(*(_6324_oc)), });;
	_6417_tc.get()._field_rc=static__213b1d003_new(&(_6417_tc));
	return _6417_tc;;
}



inline jule::Str _213b157c0_toType(_213b14e73_typeCoder* _self_, jule::Str _7029_id) {
	if ((!_7029_id.equal("uintptr", 7))) {
		_7029_id=_2121970d9_RealKindOf(_7029_id);
	};
	if (((97LL <= _7029_id[0LL]) && (_7029_id[0LL] <= 122LLU))) {
		_7029_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _7029_id);;
}



inline jule::Str _213b15acd_prim(_213b14e73_typeCoder* _self_, jule::Ptr<_213d91089_Prim> _8123_p) {
	return _213b157c0_toType(_self_, _213d913b9_Str(_8123_p.ptr()));;
}



inline jule::Str _213b15ddb_tuple(_213b14e73_typeCoder* _self_, jule::Ptr<_213d95d4c_Tuple> _8628_t) {
	jule::Str _8717_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8628_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b957d6e4:;
		if (it != expr_end) {
			jule::Ptr<_213d88834_TypeKind> _8821_tk = *it;
			{
				_8717_obj+=_213b1a330_kind(_self_, _8821_tk);
				(_8717_obj).append(",", 1);
			}
			_iter_next_1b957d6e4:;
			++it;
			goto _iter_begin_1b957d6e4;
		}
		_iter_end_1b957d6e4:;
	};
	(_8717_obj).mut_slice(0LL, (_8717_obj.len() - 1LL));;
	(_8717_obj).append(">", 1);
	return _8717_obj;;
}



inline jule::Str _213b161e9_asSptr(_213b14e73_typeCoder* _self_, jule::Str _9825_elem) {
	jule::Str _9917_obj = jule::Str("jule::Ptr<", 10);;
	_9917_obj+=_9825_elem;
	(_9917_obj).append(">", 1);
	return _9917_obj;;
}



inline jule::Str _213b16507_asPtr(_213b14e73_typeCoder* _self_, jule::Str _10624_elem) {
	return (_10624_elem + jule::Str("*", 1));;
}



inline jule::Str _213b16815_sptr(_213b14e73_typeCoder* _self_, jule::Ptr<_213d947da_Sptr> _11127_sptr) {
	return _213b161e9_asSptr(_self_, _213b1a330_kind(_self_, _11127_sptr.get()._field_Elem));;
}



inline jule::Str _213b16b23_ptr(_213b14e73_typeCoder* _self_, jule::Ptr<_213d97d4e_Ptr> _11626_p) {
	;
	if (_213d98822_IsUnsafe(_11626_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12117_elem = _213b1a330_kind(_self_, _11626_p.get()._field_Elem);;
	(_12117_elem).append("*", 1);
	return _12117_elem;;
}



inline jule::Str _213b16e31_enumDecl(_213b14e73_typeCoder* _self_, jule::Ptr<_213c8b3e6_Enum> _12731_e) {
	return _213b1a330_kind(_self_, _12731_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _213b1723e_typeEnumDecl(_213b14e73_typeCoder* _self_, jule::Ptr<_213c8c9e1_TypeEnum> _13235_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _213b1754c_asSlice(_213b14e73_typeCoder* _self_, jule::Ptr<_213d88834_TypeKind> _13630_elem) {
	jule::Str _13717_obj = jule::Str("jule::Slice<", 12);;
	_13717_obj+=_213b1a330_kind(_self_, _13630_elem);
	(_13717_obj).append(">", 1);
	return _13717_obj;;
}



inline jule::Str _213b1785a_slice(_213b14e73_typeCoder* _self_, jule::Ptr<_213d95247_Slc> _14428_s) {
	return _213b1754c_asSlice(_self_, _14428_s.get()._field_Elem);;
}



inline jule::Str _213b17b68_mapType(_213b14e73_typeCoder* _self_, jule::Ptr<_213d967ed_Map> _14930_m) {
	jule::Str _15017_obj = jule::Str("jule::Map<", 10);;
	_15017_obj+=_213b1a330_kind(_self_, _14930_m.get()._field_Key);
	(_15017_obj).append(",", 1);
	_15017_obj+=_213b1a330_kind(_self_, _14930_m.get()._field_Val);
	(_15017_obj).append(">", 1);
	return _15017_obj;;
}



inline jule::Str _213b17e76_traitIdent(_213b14e73_typeCoder* _self_, jule::Str _15829_ident) {
	jule::Str _15917_obj = jule::Str("jule::Trait<", 12);;
	_15917_obj+=_15829_ident;
	(_15917_obj).append(">", 1);
	return _15917_obj;;
}



inline jule::Str _213b18284_traitDecl(_213b14e73_typeCoder* _self_, jule::Ptr<_213c88b63_Trait> _16628_t) {
	return _213b17e76_traitIdent(_self_, static__1b64195a5_traitDecl(_16628_t));;
}



inline jule::Str _213b18592_structure(_213b14e73_typeCoder* _self_, jule::Ptr<_213c615db_Struct> _17128_s) {
	jule::Str _17217_rep = jule::Str();;
	if ((_17128_s.get()._field_Binded && (!(_213b21db4_hasDirective(&(_17128_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		(_17217_rep).append("struct ", 7);
	};
	_17217_rep+=static__1b6419ae4_structure(&(_17128_s));
	return _17217_rep;;
}



inline jule::Str _213b188a0_structureIns(_213b14e73_typeCoder* _self_, jule::Ptr<_213c64402_StructIns> _18135_s) {
	if (_18135_s.get()._field_Decl.get()._field_Binded) {
		jule::Str _18321_ident = static__1b6419d8b_structureIns(&(_18135_s));;
		if ((_18135_s.get()._field_Generics.len() > 0LL)) {
			(_18321_ident).append("<", 1);
			{
				auto expr = &(_18135_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b9589315:;
				if (it != expr_end) {
					jule::Ptr<_213d870a2_InsGeneric> _18629_g = *it;
					{
						_18321_ident+=_213b1a330_kind(_self_, _18629_g.get()._field_Kind);
						(_18321_ident).append(",", 1);
					}
					_iter_next_1b9589315:;
					++it;
					goto _iter_begin_1b9589315;
				}
				_iter_end_1b9589315:;
			};
			(_18321_ident).mut_slice(0LL, (_18321_ident.len() - 1LL));;
			(_18321_ident).append(">", 1);
		};
		jule::Ptr<_213c0e314_Directive> _19317_d = _213b21a2e_findDirective(&(_18135_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19317_d != nullptr)) {
			(_18321_ident).buffer.insert(0, ((_213b12778_concatAllParts(_19317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18321_ident;;
	};
	return static__1b6419d8b_structureIns(&(_18135_s));;
}



inline jule::Str _213b18bad_array(_213b14e73_typeCoder* _self_, jule::Ptr<_213d973e2_Arr> _20328_a) {
	jule::Str _20417_obj = jule::Str("jule::Array<", 12);;
	_20417_obj+=_213b1a330_kind(_self_, _20328_a.get()._field_Elem);
	(_20417_obj).append(",", 1);
	_20417_obj+=_2121950d7_Itoa(_20328_a.get()._field_N);
	(_20417_obj).append(">", 1);
	return _20417_obj;;
}



inline jule::Str _213b192c9_paramIns(_213b14e73_typeCoder* _self_, jule::Ptr<_213c787e0_ParamIns>* _22932_p) {
	jule::Str _23017_obj = jule::Str();;
	if ((*(_22932_p)).get()._field_Decl.get()._field_Variadic) {
		(_23017_obj).append("jule::Slice<", 12);
		_23017_obj+=_213b1a330_kind(_self_, (*(_22932_p)).get()._field_Kind);
		(_23017_obj).append(">", 1);
	} else {
		_23017_obj+=_213b1a330_kind(_self_, (*(_22932_p)).get()._field_Kind);
	};
	if ((*(_22932_p)).get()._field_Decl.get()._field_Reference) {
		(_23017_obj).append("*", 1);
	};
	return _23017_obj;;
}



inline void _213b19906_funcInsResult(_213b14e73_typeCoder* _self_, jule::Str* _25937_s, jule::Ptr<_213c796ae_FnIns>* _25950_f) {
	if (_213c76e70_IsVoid((*(_25950_f)).get()._field_Decl.ptr())) {
		if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
			((*(_25937_s))).append("jule::VoidExceptional", 21);
		} else {
			((*(_25937_s))).append("void", 4);
		};
		return;;
	};
	if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
		((*(_25937_s))).append("jule::Exceptional<", 18);
		_213b1ed29_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
		((*(_25937_s))).append(">", 1);
		return;;
	};
	_213b1ed29_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
}



inline jule::Str _213b19c14_anonFunc(_213b14e73_typeCoder* _self_, jule::Ptr<_213c796ae_FnIns> _27731_f) {
	if (((_27731_f.get()._field_Result != nullptr) && (_213d8cbe0_Tup(_27731_f.get()._field_Result.ptr()) != nullptr))) {
		_213b073e9_pushResultIns((*(_self_))._field_oc, &(_27731_f));
	};
	jule::Str _28117_decl = jule::Str();;
	_213b19906_funcInsResult(_self_, &(_28117_decl), &(_27731_f));
	(_28117_decl).append("(", 1);
	if ((_27731_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27731_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b95971e1:;
			if (it != expr_end) {
				jule::Ptr<_213c787e0_ParamIns> _28525_param = *it;
				{
					if (_213c757a9_IsSelf(_28525_param.get()._field_Decl.ptr())) {
						goto _iter_next_1b95971e1;
					};
					_28117_decl+=_213b192c9_paramIns(_self_, &(_28525_param));
					(_28117_decl).append(",", 1);
				}
				_iter_next_1b95971e1:;
				++it;
				goto _iter_begin_1b95971e1;
			}
			_iter_end_1b95971e1:;
		};
		(_28117_decl).mut_slice(0LL, (_28117_decl.len() - 1LL));;
	} else {
		(_28117_decl).append("void", 4);
	};
	(_28117_decl).append(")", 1);
	return _28117_decl;;
}



inline jule::Str _213b1a022_func(_213b14e73_typeCoder* _self_, jule::Ptr<_213c796ae_FnIns> _30127_f) {
	jule::Str _30217_obj = jule::Str("jule::Fn<", 9);;
	_30217_obj+=_213b19c14_anonFunc(_self_, _30127_f);
	(_30217_obj).append(">", 1);
	return _30217_obj;;
}



inline jule::Str _213b1a330_kind(_213b14e73_typeCoder* _self_, jule::Ptr<_213d88834_TypeKind> _30927_k) {
	{
		
		if ((_213d8c4a3_Struct(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b9599e19:;
			{
				return _213b188a0_structureIns(_self_, _213d8c4a3_Struct(_30927_k.ptr()));;
			}
		}
		else if (_213d89626_Binded(_30927_k.ptr())) {
			_case_begin_1b9599e91:;
			{
				return _30927_k.get()._field_BindIdent;;
			}
		}
		else if ((_213d8b051_Prim(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b959a018:;
			{
				return _213b15acd_prim(_self_, _213d8b051_Prim(_30927_k.ptr()));;
			}
		}
		else if ((_213d8cbe0_Tup(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b959a090:;
			{
				return _213b15ddb_tuple(_self_, _213d8cbe0_Tup(_30927_k.ptr()));;
			}
		}
		else if ((_213d8b2b5_Sptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b959a117:;
			{
				return _213b16815_sptr(_self_, _213d8b2b5_Sptr(_30927_k.ptr()));;
			}
		}
		else if ((_213d8b529_Ptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b959a18e:;
			{
				return _213b16b23_ptr(_self_, _213d8b529_Ptr(_30927_k.ptr()));;
			}
		}
		else if ((_213d8b78d_Enum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b959a216:;
			{
				return _213b16e31_enumDecl(_self_, _213d8b78d_Enum(_30927_k.ptr()));;
			}
		}
		else if ((_213d8ba02_TypeEnum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b959a28d:;
			{
				return _213b1723e_typeEnumDecl(_self_, _213d8ba02_TypeEnum(_30927_k.ptr()));;
			}
		}
		else if ((_213d8beca_Slc(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b959a315:;
			{
				return _213b1785a_slice(_self_, _213d8beca_Slc(_30927_k.ptr()));;
			}
		}
		else if ((_213d8c97b_Map(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b959a38c:;
			{
				return _213b17b68_mapType(_self_, _213d8c97b_Map(_30927_k.ptr()));;
			}
		}
		else if ((_213d8c717_Trait(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b959a414:;
			{
				return _213b18284_traitDecl(_self_, _213d8c717_Trait(_30927_k.ptr()));;
			}
		}
		else if ((_213d8bc66_Arr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b959a48b:;
			{
				return _213b18bad_array(_self_, _213d8bc66_Arr(_30927_k.ptr()));;
			}
		}
		else if ((_213d8c23e_Fn(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b959a513:;
			{
				return _213b1a022_func(_self_, _213d8c23e_Fn(_30927_k.ptr()));;
			}
		}
		_match_end_1b9599c71:;
	};
	{
		auto &_match_expr{ _30927_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1b959a5bd:;
			{
				return _30927_k.get()._field_Kind.cast_ptr<_213b144e4_customType>(27).get()._field_kind;;
			}
		}
		else {
			_case_begin_1b95a1d99:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1b95a1151:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _213b14e73_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213b1ca3b_resultCoder> static__213b1d003_new(jule::Ptr<_213b14e73_typeCoder>* _36324_tc) {
	return jule::new_ptr<_213b1ca3b_resultCoder>(_213b1ca3b_resultCoder{._field_tc=(*(_36324_tc))});;
}



inline void _213b1d322_ptr(_213b1ca3b_resultCoder* _self_, jule::Str* _36727_s, jule::Ptr<_213d97d4e_Ptr> _36739_p) {
	((*(_36727_s))).append("p", 1);
	_213b1ea0a_codeMut(_self_, _36727_s, &(_36739_p.get()._field_Elem));
}



inline void _213b1d641_sptr(_213b1ca3b_resultCoder* _self_, jule::Str* _37228_s, jule::Ptr<_213d947da_Sptr> _37240_p) {
	((*(_37228_s))).append("x", 1);
	_213b1ea0a_codeMut(_self_, _37228_s, &(_37240_p.get()._field_Elem));
}



inline void _213b1d960_mapType(_213b1ca3b_resultCoder* _self_, jule::Str* _37731_s, jule::Ptr<_213d967ed_Map> _37743_p) {
	((*(_37731_s))).append("m", 1);
	_213b1ea0a_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Key));
	_213b1ea0a_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Val));
}



inline void _213b1dc7e_slice(_213b1ca3b_resultCoder* _self_, jule::Str* _38329_s, jule::Ptr<_213d95247_Slc> _38341_slc) {
	((*(_38329_s))).append("s", 1);
	_213b1ea0a_codeMut(_self_, _38329_s, &(_38341_slc.get()._field_Elem));
}



inline void _213b1e09d_arr(_213b1ca3b_resultCoder* _self_, jule::Str* _38827_s, jule::Ptr<_213d973e2_Arr> _38839_arr) {
	((*(_38827_s))).append("a", 1);
	(*(_38827_s))+=_212194d40_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38839_arr.get()._field_N)), 16LL);
	_213b1ea0a_codeMut(_self_, _38827_s, &(_38839_arr.get()._field_Elem));
}



inline void _213b1e3bc_func(_213b1ca3b_resultCoder* _self_, jule::Str* _39428_s, jule::Ptr<_213c796ae_FnIns> _39440_f) {
	((*(_39428_s))).append("f", 1);
	{
		auto expr = &(_39440_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b95a7bc4:;
		if (it != expr_end) {
			jule::Ptr<_213c787e0_ParamIns> _39621_p = *it;
			{
				if (_39621_p.get()._field_Decl.get()._field_Reference) {
					((*(_39428_s))).append("r", 1);
				};
				_213b1ea0a_codeMut(_self_, _39428_s, &(_39621_p.get()._field_Kind));
			}
			_iter_next_1b95a7bc4:;
			++it;
			goto _iter_begin_1b95a7bc4;
		}
		_iter_end_1b95a7bc4:;
	};
	if ((_39440_f.get()._field_Result != nullptr)) {
		_213b1ea0a_codeMut(_self_, _39428_s, &(_39440_f.get()._field_Result));
	};
}



inline void _213b1e6db_tup(_213b1ca3b_resultCoder* _self_, jule::Str* _40727_s, jule::Ptr<_213d95d4c_Tuple> _40739_tup) {
	{
		auto expr = &(_40739_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b95a96cb:;
		if (it != expr_end) {
			jule::Ptr<_213d88834_TypeKind> _40821_t = *it;
			{
				((*(_40727_s))).append("__jule_tuple_", 13);
				_213b1ea0a_codeMut(_self_, _40727_s, &(_40821_t));
			}
			_iter_next_1b95a96cb:;
			++it;
			goto _iter_begin_1b95a96cb;
		}
		_iter_end_1b95a96cb:;
	};
}



inline void _213b1ea0a_codeMut(_213b1ca3b_resultCoder* _self_, jule::Str* _41431_s, jule::Ptr<_213d88834_TypeKind>* _41444_t) {
	{
		auto &_match_expr{ (*(_41444_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1b95aa6dd:;
			{
				_213b1d322_ptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_213d97d4e_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1b95aaa62:;
			{
				_213b1d641_sptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_213d947da_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1b95aaac8:;
			{
				_213b1d960_mapType(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_213d967ed_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1b95ab029:;
			{
				_213b1dc7e_slice(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_213d95247_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1b95ab090:;
			{
				_213b1e09d_arr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_213d973e2_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1b95ab106:;
			{
				_213b1e3bc_func(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_213c796ae_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1b95ab16c:;
			{
				jule::Ptr<_213c8b3e6_Enum> _42917_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_213c8b3e6_Enum>(3);;
				(*(_41431_s))+=static__1b64188d4_toOut(&(_42917_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42917_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b95ab1d3:;
			{
				jule::Ptr<_213c8c9e1_TypeEnum> _43217_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_213c8c9e1_TypeEnum>(4);;
				(*(_41431_s))+=static__1b64188d4_toOut(&(_43217_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43217_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1b95ab249:;
			{
				jule::Ptr<_213c64402_StructIns> _43521_si = (*(_41444_t)).get()._field_Kind.cast_ptr<_213c64402_StructIns>(0);;
				(*(_41431_s))+=static__1b6419d8b_structureIns(&(_43521_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1b95ab2b0:;
			{
				jule::Ptr<_213c88b63_Trait> _43821_trt = (*(_41444_t)).get()._field_Kind.cast_ptr<_213c88b63_Trait>(2);;
				(*(_41431_s))+=static__1b64195a5_traitDecl(_43821_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1b95ab326:;
			{
				(*(_41431_s))+=(*(_41444_t)).get()._field_Kind.cast_ptr<_213d91089_Prim>(20).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1b95ab38c:;
			{
				_213b1e6db_tup(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_213d95d4c_Tuple>(23));
			}
		}
		else {
			_case_begin_1b95aa8ca:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:445:13"));;
			}
		}
		_match_end_1b95aa875:;
	};
}



inline void _213b1ed29_codeMut1(_213b1ca3b_resultCoder* _self_, jule::Str* _44932_s, jule::Ptr<_213d88834_TypeKind>* _44945_t) {
	jule::Ptr<_213d95d4c_Tuple> _45017_tup = _213d8cbe0_Tup((*(_44945_t)).ptr());;
	if ((_45017_tup != nullptr)) {
		_213b1e6db_tup(_self_, _44932_s, _45017_tup);
	} else {
		(*(_44932_s))+=_213b1a330_kind((*(_self_))._field_tc.ptr(), (*(_44945_t)));
	};
}



inline jule::Str _213b20104_code(_213b1ca3b_resultCoder* _self_, jule::Ptr<_213d88834_TypeKind>* _45828_t) {
	jule::Str _45917_s = jule::Str::alloc(0LL, 20LL);;
	_213b1ea0a_codeMut(_self_, &(_45917_s), _45828_t);
	return _45917_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _213b1ca3b_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b95b551c_Name(_1b95b57d6_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b95b5660_What(_1b95b57d6_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b95b5ac2_Reset(_1b95b57d6_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b95b5c04_Short(_1b95b57d6_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b95b57d6_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b95b8b19_Name(_1b95b908c_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b95b9378_What(_1b95b908c_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b95b94aa_Reset(_1b95b908c_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b95b95dc_Short(_1b95b908c_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b95b908c_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b95bc2c1_Name(_1b95bc744_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b95bca30_What(_1b95bc744_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b95bcb62_Reset(_1b95bc744_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b95bcc94_Short(_1b95bc744_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b95bc744_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b95c09bc_Name(_1b95c0e40_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b95c122b_What(_1b95c0e40_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b95c135d_Reset(_1b95c0e40_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b95c1490_Short(_1b95c0e40_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b95c0e40_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b95c4174_Name(_1b95c45e7_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b95c48d3_What(_1b95c45e7_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b95c4a15_Reset(_1b95c45e7_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b95c4b47_Short(_1b95c45e7_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b95c45e7_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b662c3ab_FlagSet> static__1b662c697_New(void) {
	return jule::new_ptr<_1b662c3ab_FlagSet>(_1b662c3ab_FlagSet{._field_flags=jule::Slice<jule::Trait<_1b662a94d_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1b662a94d_CommonFlag> _1b662cad7_FindFlag(_1b662c3ab_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b95ce635:;
		if (it != expr_end) {
			jule::Trait<_1b662a94d_CommonFlag> _7221_flag = *it;
			{
				if ((_1b662a94d_CommonFlag_mptr_data[(_7221_flag).type_offset]._1b65eae7e_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1b95ce635:;
			++it;
			goto _iter_begin_1b95ce635;
		}
		_iter_end_1b95ce635:;
	};
	return nullptr;;
}



inline jule::Trait<_1b662a94d_CommonFlag> _1b662cde5_FindFlagShort(_1b662c3ab_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b95d0537:;
		if (it != expr_end) {
			jule::Trait<_1b662a94d_CommonFlag> _8221_flag = *it;
			{
				if ((_1b662a94d_CommonFlag_mptr_data[(_8221_flag).type_offset]._1b65eb0b1_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1b95d0537:;
			++it;
			goto _iter_begin_1b95d0537;
		}
		_iter_end_1b95d0537:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1b662d467_Parse(_1b662c3ab_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1b662eab7_argParser _11617_ap = _1b662eab7_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1b6630e70_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline jule::Ptr<_1b95c45e7_Flag> _1b9638172_addFlagCommon(_1b662c3ab_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1b963974a:;
			{
				goto _match_end_1b96396e5;
			}
		}
		_match_end_1b96396e5:;
	};
	if ((_1b662cad7_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1b662cde5_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1b95c45e7_Flag> _14817_flag = jule::new_ptr<_1b95c45e7_Flag>(_1b95c45e7_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1b662a94d_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1b662a94d_CommonFlag>(_14817_flag, 4)); };
	return _14817_flag;;
}

inline jule::Ptr<_1b95c0e40_Flag> _1b9641103_addFlagCommon(_1b662c3ab_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1b9642676:;
			{
				goto _match_end_1b96425cc;
			}
		}
		_match_end_1b96425cc:;
	};
	if ((_1b662cad7_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1b662cde5_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1b95c0e40_Flag> _14817_flag = jule::new_ptr<_1b95c0e40_Flag>(_1b95c0e40_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1b662a94d_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1b662a94d_CommonFlag>(_14817_flag, 3)); };
	return _14817_flag;;
}



inline void _1b96360c6_AddVar(_1b662c3ab_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1b95c45e7_Flag> _17617_flag = _1b9638172_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1b963e09b_AddVar(_1b662c3ab_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1b95c0e40_Flag> _17617_flag = _1b9641103_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1b662c3ab_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1b95d7165_parseInteger(_1b662eab7_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1b95d9ab3:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_2110319be_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1b95d9e15:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2110319be_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1b95da036:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2110319be_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1b95da1ce:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1b95da245:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b95d971c:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b95d9651:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1b95de6bc_parseInteger(_1b662eab7_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1b95e20c6:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_2110319be_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1b95e2428:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2110319be_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1b95e2549:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_2110319be_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1b95e26e2:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1b95e2758:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b95e1c30:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b95e1b64:;
	};
	return __jule_func_result;;
}



inline jule::Str _1b663037b_getData(_1b662eab7_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1b66305bd_processFlag(_1b662eab7_argParser* _self_, jule::Trait<_1b662a94d_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b95d456e:;
			{
				jule::Ptr<_1b95c0e40_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1b95c0e40_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1b95d4508:;
	};
	jule::Str _22513_data = _1b663037b_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1b662a94d_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1b65eae7e_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b95d5a15:;
			{
				jule::Ptr<_1b95b57d6_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1b95b57d6_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1b95d7165_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _23370_s, jule::I32 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _212184439_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1b662a94d_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1b65eae7e_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1b95d62c9:;
			{
				jule::Ptr<_1b95b908c_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1b95b908c_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b95de6bc_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I32)>([=](jule::Str _24171_s, jule::I32 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _212183ec7_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1b662a94d_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1b65eae7e_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1b95d6340:;
			{
				jule::Ptr<_1b95bc744_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1b95bc744_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _21218a9b2_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1b662a94d_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1b65eae7e_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b95d63a6:;
			{
				(*((*(_21735_flag)).cast_ptr<_1b95c45e7_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1b95d6274:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b6630843_singleDash(_1b662eab7_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b95e8929:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1b662a94d_CommonFlag> _26321_flag = _1b662cde5_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1b66305bd_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1b95e8929:;
			++it;
			goto _iter_begin_1b95e8929;
		}
		_iter_end_1b95e8929:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b6630ab8_doubleDash(_1b662eab7_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1b662a94d_CommonFlag> _27617_flag = _1b662cad7_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1b66305bd_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b6630c94_tryArg(_1b662eab7_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1b6630ab8_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1b6630843_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_28413_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b6630e70_parse(_1b662eab7_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1b6630c94_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1b95ed8c9:;
	}
	_iter_end_1b95ed8c9:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1b662eab7_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_213b05b01_ObjectCoder> static__213b05eca_New(jule::Ptr<_1cdcd6784_IR>* _9424_ir, _213b0425e_SerializationInfo _9433_info) {
	jule::Ptr<_213b05b01_ObjectCoder> _9517_oc = jule::new_ptr<_213b05b01_ObjectCoder>(_213b05b01_ObjectCoder{._field_ir=(*(_9424_ir)), ._field_info=_9433_info, });;
	_9517_oc.get()._field_ec=static__1b6404a13_new(&(_9517_oc));
	_9517_oc.get()._field_sc=static__1b63eb763_new(&(_9517_oc));
	_9517_oc.get()._field_tc=static__213b154b2_new(&(_9517_oc));
	_9517_oc.get()._field_dc=static__1b64147c0_new(_9517_oc);
	return _9517_oc;;
}



inline void _213b06250_write(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Str _10625_s) {
	_self_.get()._field_Obj+=_10625_s;
}



inline void _213b064c5_writeR(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Str* _11027_s) {
	_self_.get()._field_Obj+=(*(_11027_s));
}



inline void _213b066a1_addIndent(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	(_self_.get()._field_indentBuffer).append("\t", 1);
}



inline void _213b0687c_doneIndent(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _213b06a58_indent(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I32 _213b06d66_findAnyType(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213d88834_TypeKind>* _12936_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9488632:;
		if (it != expr_end) {
			jule::I32 _13014_i = it - expr->begin();
			jule::Ptr<_213d88834_TypeKind> _13021_at = *it;
			{
				if (_213d88ee9_Equal(_13021_at, (*(_12936_t)))) {
					return _13014_i;;
				};
			}
			_iter_next_1b9488632:;
			++it;
			_13014_i++;
			goto _iter_begin_1b9488632;
		}
		_iter_end_1b9488632:;
	};
	return -1LL;;
}



inline jule::I32 _213b07174_pushAnyType(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213d88834_TypeKind> _13835_t) {
	if ((_213d8b78d_Enum(_13835_t.ptr()) != nullptr)) {
		_13835_t=_213d8b78d_Enum(_13835_t.ptr()).get()._field_Kind.get()._field_Kind;
	};
	jule::I32 _14217_i = _213b06d66_findAnyType(_self_, &(_13835_t));;
	if ((_14217_i != -1LL)) {
		return _14217_i;;
	};
	_14217_i=static_cast<jule::I32>(_self_.get()._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_213d88834_TypeKind>> &__jule_push_dest = _self_.get()._field_anyTypeMap; __jule_push_dest.push(_13835_t); };
	jule::Str _14813_si = _2121950d7_Itoa(_14217_i);;
	if ((_213d8b2b5_Sptr(_13835_t.ptr()) != nullptr)) {
		jule::Str _15017_elem_kind = _213b1a330_kind(_self_.get()._field_tc.ptr(), _213d8b2b5_Sptr(_13835_t.ptr()).get()._field_Elem);;
		jule::Str _15117_kind = _213b161e9_asSptr(_self_.get()._field_tc.ptr(), _15017_elem_kind);;
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_15017_elem_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_15117_kind;
		(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _17717_comparable = _213d89d63_Comparable(_13835_t.ptr());;
		jule::Str _17817_kind = _213b1a330_kind(_self_.get()._field_tc.ptr(), _13835_t);;
		if (_17817_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_213d88bdb_Str(_13835_t.ptr()));
		};
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_17817_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		if (_17717_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66);
			_self_.get()._field_anyObj+=_17817_kind;
			(_self_.get()._field_anyObj).append("*>(alloc) == *reinterpret_cast<", 31);
			_self_.get()._field_anyObj+=_17817_kind;
			(_self_.get()._field_anyObj).append("*>(other); }\n", 13);
		};
		(_self_.get()._field_anyObj).append("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76);
		if ((_213d8b529_Ptr(_13835_t.ptr()) == nullptr)) {
			(_self_.get()._field_anyObj).append("const ", 6);
			_self_.get()._field_anyObj+=_17817_kind;
		} else {
			_self_.get()._field_anyObj+=_17817_kind;
			(_self_.get()._field_anyObj).append("* const", 7);
		};
		(_self_.get()._field_anyObj).append("*>(alloc)); }\n", 14);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_dealloc, ", 10);
		if (_17717_comparable) {
			(_self_.get()._field_anyObj).append(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append("_eq, ", 5);
		};
		(_self_.get()._field_anyObj).append(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_14813_si;
		(_self_.get()._field_anyObj).append("_to_str};\n", 10);
		if (_17717_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_17817_kind;
			(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_14813_si;
			(_self_.get()._field_anyObj).append("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _14217_i;;
}



inline void _213b073e9_pushResultIns(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c796ae_FnIns>* _24638_f) {
	jule::Str _24713_s = _213b20104_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_24638_f)).get()._field_Result));;
	jule::Bool _24817_ok = false;;
	_self_.get()._field_resultMap.lookup(_24713_s, nullptr, &(_24817_ok));
	if (_24817_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_24713_s]=false;
	jule::Str _25317_obj = jule::Str::alloc(0LL, 128LL);;
	(_25317_obj).append("struct ", 7);
	_25317_obj+=_24713_s;
	(_25317_obj).append(" {\n", 3);
	{
		auto expr = &(_213d8cbe0_Tup((*(_24638_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b949aeb3:;
		if (it != expr_end) {
			jule::I32 _25714_i = it - expr->begin();
			jule::Ptr<_213d88834_TypeKind> _25721_t = *it;
			{
				(_25317_obj).append("\t", 1);
				_25317_obj+=_213b1a330_kind(_self_.get()._field_tc.ptr(), _25721_t);
				(_25317_obj).append(" ", 1);
				(_25317_obj).append("__jule_result_arg", 17);
				_25317_obj+=_2121950d7_Itoa(_25714_i);
				(_25317_obj).append(";\n", 2);
			}
			_iter_next_1b949aeb3:;
			++it;
			_25714_i++;
			goto _iter_begin_1b949aeb3;
		}
		_iter_end_1b949aeb3:;
	};
	(_25317_obj).append("};\n", 3);
	{ jule::Slice<jule::Str> &__jule_push_dest = _self_.get()._field_resultDecls; __jule_push_dest.push(_25317_obj); };
}



inline void _213b0766e_pushResult(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c76a0d_Fn>* _26935_f) {
	if ((_213c76e70_IsVoid((*(_26935_f)).ptr()) || ((*(_26935_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _27317_n = (*(_26935_f)).get()._field_Instances.len();;
	if (((*(_26935_f)).get()._field_Generics.len() == 0LL)) {
		_27317_n=1LL;
	};
	{
		auto expr = (*(_26935_f)).get()._field_Instances.slice(0LL, _27317_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b949e3c3:;
		if (it != expr_end) {
			jule::Ptr<_213c796ae_FnIns> _27721_ins = *it;
			{
				_213b073e9_pushResultIns(_self_, &(_27721_ins));
			}
			_iter_next_1b949e3c3:;
			++it;
			goto _iter_begin_1b949e3c3;
		}
		_iter_end_1b949e3c3:;
	};
}



inline jule::I32 _213b07a26_findTypeOffsetS(_213b05b01_ObjectCoder* _self_, jule::Ptr<_213c88b63_Trait> _28230_t, jule::Ptr<_213c64402_StructIns> _28245_s) {
	if ((_28230_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94a09e0:;
		if (it != expr_end) {
			jule::Ptr<_213b04726_traitHash> *_28616_hash = it;
			{
				if ((((*(_28616_hash)).get()._field_t == _28230_t) && ((*(_28616_hash)).get()._field_s == _28245_s))) {
					return (*(_28616_hash)).get()._field_i;;
				};
			}
			_iter_next_1b94a09e0:;
			++it;
			goto _iter_begin_1b94a09e0;
		}
		_iter_end_1b94a09e0:;
	};
	return -1LL;;
}



inline jule::I32 _213b07dcd_findTypeOffset(_213b05b01_ObjectCoder* _self_, jule::Ptr<_213c88b63_Trait> _29429_t, jule::Ptr<_213d88834_TypeKind> _29444_k) {
	if ((_29429_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_213c64402_StructIns> _29817_s = nullptr;;
	if ((_213d8b2b5_Sptr(_29444_k.ptr()) != nullptr)) {
		_29444_k=_213d8b2b5_Sptr(_29444_k.ptr()).get()._field_Elem;
	};
	_29817_s=_213d8c4a3_Struct(_29444_k.ptr());
	if ((_29817_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I32>(_213b07a26_findTypeOffsetS(_self_, _29429_t, _29817_s));;
}



inline void _213b081ec_pushAndWriteMaskMapper(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c88b63_Trait> _30946_t1, jule::Ptr<_213c88b63_Trait> _30962_t2) {
	jule::Str _31017_ident = jule::Str("__jule_trait_offset_mapper_", 27);;
	_31017_ident+=_2121949aa_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30962_t2))), 15LL);
	(_31017_ident).append("_to_", 4);
	_31017_ident+=_2121949aa_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30946_t1))), 15LL);
	_213b064c5_writeR(_self_, &(_31017_ident));
	{
		auto expr = &(_self_.get()._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94a541d:;
		if (it != expr_end) {
			_213b04acd_traitCast _31716_m = *it;
			{
				if (((_31716_m._field_t1 == _30946_t1) && (_31716_m._field_t2 == _30962_t2))) {
					return;;
				};
			}
			_iter_next_1b94a541d:;
			++it;
			goto _iter_begin_1b94a541d;
		}
		_iter_end_1b94a541d:;
	};
	{ jule::Slice<_213b04acd_traitCast> &__jule_push_dest = _self_.get()._field_traitCastMap; __jule_push_dest.push(_213b04acd_traitCast{._field_t1=_30946_t1, ._field_t2=_30962_t2}); };
	;
	(_self_.get()._field_anyObj).append("jule::Int", 9);
	(_self_.get()._field_anyObj).append(" ", 1);
	_self_.get()._field_anyObj+=_31017_ident;
	(_self_.get()._field_anyObj).append("(const jule::Int offset) noexcept { ", 36);
	{
		auto expr = &(_30946_t1.get()._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94a7156:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> _33621_s1 = *it;
			{
				{
					auto expr = &(_30962_t2.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b94a7b90:;
					if (it != expr_end) {
						jule::Ptr<_213c615db_Struct> _33720_s2 = *it;
						{
							if ((_33621_s1 == _33720_s2)) {
								{
									auto expr = &(_33621_s1.get()._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b94a88e9:;
									if (it != expr_end) {
										jule::Ptr<_213c64402_StructIns> _33933_s1i = *it;
										{
											jule::I32 _34029_i1 = _213b07a26_findTypeOffsetS(_self_.ptr(), _30946_t1, _33933_s1i);;
											jule::I32 _34129_i2 = _213b07a26_findTypeOffsetS(_self_.ptr(), _30962_t2, _33933_s1i);;
											(_self_.get()._field_anyObj).append("if (offset == ", 14);
											_self_.get()._field_anyObj+=_2121950d7_Itoa(_34129_i2);
											(_self_.get()._field_anyObj).append(") return ", 9);
											_self_.get()._field_anyObj+=_2121950d7_Itoa(_34029_i1);
											(_self_.get()._field_anyObj).append("; ", 2);
										}
										_iter_next_1b94a88e9:;
										++it;
										goto _iter_begin_1b94a88e9;
									}
									_iter_end_1b94a88e9:;
								};
							};
						}
						_iter_next_1b94a7b90:;
						++it;
						goto _iter_begin_1b94a7b90;
					}
					_iter_end_1b94a7b90:;
				};
			}
			_iter_next_1b94a7156:;
			++it;
			goto _iter_begin_1b94a7156;
		}
		_iter_end_1b94a7156:;
	};
	(_self_.get()._field_anyObj).append(" return ", 8);
	_self_.get()._field_anyObj+=_2121950d7_Itoa(0LL);
	(_self_.get()._field_anyObj).append("; }\n", 4);
}



inline void _213b08472_locInfo(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_2114c1b73_Token>* _35728_t) {
	jule::Str *_35814_loc = &((*(_35728_t)).get()._field_File.get()._field_Path);;
	if (_22991518b_Production) {
		{
			
			if (_2110319be_HasPrefix((*(_35814_loc)), _2111a7084_PathStdlib)) {
				_case_begin_1b94abcd7:;
				{
					_213b06250_write(_self_, _1b641256a_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35814_loc)).slice((_21103c4d0_Dir(_2111a7084_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_2110319be_HasPrefix((*(_35814_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1b94ac39d:;
				{
					_213b06250_write(_self_, _1b641256a_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35814_loc)).slice((_21103c4d0_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1b94ab941:;
				{
					_213b06250_write(_self_, _1b641256a_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35814_loc)))));
				}
			}
			_match_end_1b94ab875:;
		};
	} else {
		_213b06250_write(_self_, _1b641256a_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35814_loc)))));
	};
	_213b06250_write(_self_, jule::Str(":", 1));
	_213b06250_write(_self_, _2121950d7_Itoa((*(_35728_t)).get()._field_Row));
	_213b06250_write(_self_, jule::Str(":", 1));
	_213b06250_write(_self_, _2121950d7_Itoa((*(_35728_t)).get()._field_Column));
}



inline void _213b0864d_head(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_213aeb9b5_Time _38413_time = static__213aec059_Now();;
	_213aeb322_AbsTime _38513_abs = _213aed621_Abs(&_38413_time);;
	_213b06250_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_213b06250_write(_self_, jule::Str("// JuleC version: ", 18));
	_213b06250_write(_self_, jule::Str("jule0.0.15 @master", 18));
	_213b06250_write(_self_, jule::Str("\n", 1));
	_213b06250_write(_self_, jule::Str("// Date: ", 9));
	_213b06250_write(_self_, _2121949aa_FmtUint(_38513_abs._field_Day, 10LL));
	_213b06250_write(_self_, jule::Str("/", 1));
	_213b06250_write(_self_, _2121949aa_FmtUint(_38513_abs._field_Month, 10LL));
	_213b06250_write(_self_, jule::Str("/", 1));
	_213b06250_write(_self_, _2121949aa_FmtUint(_38513_abs._field_Year, 10LL));
	_213b06250_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_213b064c5_writeR(_self_, &(_self_.get()._field_info._field_Compiler));
	_213b06250_write(_self_, jule::Str(" ", 1));
	_213b064c5_writeR(_self_, &(_self_.get()._field_info._field_CompilerCommand));
	_213b06250_write(_self_, jule::Str("\n\n", 2));
	if (_22991518b_Production) {
		_213b06250_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_2299149e8_RC))) {
		_213b06250_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_229914dc2_Safety))) {
		_213b06250_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_213b08829_links(_self_);
	_213b06250_write(_self_, jule::Str("\n\n#include \"", 12));
	_213b064c5_writeR(_self_, &(_2111a786a_PathApi));
	_213b06250_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _213b08829_links(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94b640c:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _42216_used = *it;
			{
				{
					
					if ((!(_42216_used.get()._field_Binded))) {
						_case_begin_1b94b6d8b:;
						{
							goto _iter_next_1b94b640c;
						}
					}
					else if (_2110b171e_IsStdHeaderPath(_42216_used.get()._field_Path)) {
						_case_begin_1b94b6e13:;
						{
							_213b06250_write(_self_, jule::Str("#include ", 9));
							_213b064c5_writeR(_self_, &(_42216_used.get()._field_Path));
							_213b06250_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_2110b19c7_IsValidHeaderExt(_21103bb1c_Ext(_42216_used.get()._field_Path))) {
						_case_begin_1b94b6e8a:;
						{
							_213b06250_write(_self_, jule::Str("#include \"", 10));
							_213b064c5_writeR(_self_, &(_42216_used.get()._field_Path));
							_213b06250_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1b94b6c6a:;
				};
			}
			_iter_next_1b94b640c:;
			++it;
			goto _iter_begin_1b94b640c;
		}
		_iter_end_1b94b640c:;
	};
}



inline void _213b08a9e_prepareStructure(_213b05b01_ObjectCoder* _self_, jule::Ptr<_213c615db_Struct>* _43840_s) {
	{
		auto expr = &((*(_43840_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94b8673:;
		if (it != expr_end) {
			jule::Ptr<_213c64402_StructIns> _43921_ins = *it;
			{
				{
					auto expr = &(_43921_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b94b990a:;
					if (it != expr_end) {
						jule::Ptr<_213c76a0d_Fn> _44025_m = *it;
						{
							if (_44025_m.get()._field_Statically) {
								goto _iter_next_1b94b990a;
							};
							{
								auto expr = &(_44025_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b94ba664:;
								if (it != expr_end) {
									jule::Ptr<_213c796ae_FnIns> _44429_mins = *it;
									{
										jule::Ptr<_213c787e0_ParamIns> _44529_p = _44429_mins.get()._field_Params[0LL];;
										if ((!(_213c75a1d_IsRef(_44529_p.get()._field_Decl.ptr())))) {
											_44529_p.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213b144e4_customType>(_213b144e4_customType{._field_kind=_213b16507_asPtr((*(_self_))._field_tc.ptr(), _213b1a330_kind((*(_self_))._field_tc.ptr(), _44529_p.get()._field_Kind))}), 27)});
										} else {
											_44529_p.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213b144e4_customType>(_213b144e4_customType{._field_kind=_213b1a330_kind((*(_self_))._field_tc.ptr(), _44529_p.get()._field_Kind)}), 27)});
										};
									}
									_iter_next_1b94ba664:;
									++it;
									goto _iter_begin_1b94ba664;
								}
								_iter_end_1b94ba664:;
							};
						}
						_iter_next_1b94b990a:;
						++it;
						goto _iter_begin_1b94b990a;
					}
					_iter_end_1b94b990a:;
				};
			}
			_iter_next_1b94b8673:;
			++it;
			goto _iter_begin_1b94b8673;
		}
		_iter_end_1b94b8673:;
	};
}



inline void _213b08c7a_prepareStructures(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94b6ae4:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> _46521_s = *it;
			{
				if ((_46521_s.get()._field_Token != nullptr)) {
					_213b08a9e_prepareStructure(_self_.ptr(), &(_46521_s));
				};
			}
			_iter_next_1b94b6ae4:;
			++it;
			goto _iter_begin_1b94b6ae4;
		}
		_iter_end_1b94b6ae4:;
	};
}



inline void _213b09000_iterPackages(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_213cda8b8_Package>*)> _47232_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94be13a:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _47321_used = *it;
			{
				if ((!(_47321_used.get()._field_Binded))) {
					_47232_f(&(_47321_used.get()._field_Package));
				};
			}
			_iter_next_1b94be13a:;
			++it;
			goto _iter_begin_1b94be13a;
		}
		_iter_end_1b94be13a:;
	};
	_47232_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _213b091cb_buildTraitMap(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_213b09000_iterPackages(_self_, jule::Fn<void(jule::Ptr<_213cda8b8_Package>*)>([=](jule::Ptr<_213cda8b8_Package>* _48235_pkg) mutable -> void {
		_213b1248c_iterFiles(_48235_pkg, jule::Fn<void(jule::Ptr<_213d56417_SymbolTable>*)>([=](jule::Ptr<_213d56417_SymbolTable>* _48336_file) mutable -> void {
			{
				auto expr = &((*(_48336_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b94c21d7:;
				if (it != expr_end) {
					jule::Ptr<_213c88b63_Trait> _48429_t = *it;
					{
						if ((_48429_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_48429_t.get()._field_Implemented.len() == 0LL)) {
							{ jule::Slice<jule::Ptr<_213b04726_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(jule::new_ptr<_213b04726_traitHash>(_213b04726_traitHash{._field_t=_48429_t, ._field_s=nullptr, ._field_i=0LL})); };
							goto _iter_next_1b94c21d7;
						};
						jule::I32 _49629_i = 0LL;;
						{
							auto expr = &(_48429_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b94c2968:;
							if (it != expr_end) {
								jule::Ptr<_213c615db_Struct> _49733_s = *it;
								{
									{
										auto expr = &(_49733_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b94c38c0:;
										if (it != expr_end) {
											jule::Ptr<_213c64402_StructIns> _49837_ins = *it;
											{
												{ jule::Slice<jule::Ptr<_213b04726_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(jule::new_ptr<_213b04726_traitHash>(_213b04726_traitHash{._field_t=_48429_t, ._field_s=_49837_ins, ._field_i=_49629_i})); };
												(_49629_i)++;
											}
											_iter_next_1b94c38c0:;
											++it;
											goto _iter_begin_1b94c38c0;
										}
										_iter_end_1b94c38c0:;
									};
								}
								_iter_next_1b94c2968:;
								++it;
								goto _iter_begin_1b94c2968;
							}
							_iter_end_1b94c2968:;
						};
						_213b13191_pushMethodsFromInherits(&(_48429_t), &(_48429_t));
					}
					_iter_next_1b94c21d7:;
					++it;
					goto _iter_begin_1b94c21d7;
				}
				_iter_end_1b94c21d7:;
			};
		}));
	}));
}



inline void _213b093a7_traitDecls(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_213b09000_iterPackages(_self_, jule::Fn<void(jule::Ptr<_213cda8b8_Package>*)>([=](jule::Ptr<_213cda8b8_Package>* _51635_pkg) mutable -> void {
		_213b1248c_iterFiles(_51635_pkg, jule::Fn<void(jule::Ptr<_213d56417_SymbolTable>*)>([=](jule::Ptr<_213d56417_SymbolTable>* _51736_file) mutable -> void {
			{
				auto expr = &((*(_51736_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b94c6c25:;
				if (it != expr_end) {
					jule::Ptr<_213c88b63_Trait> _51829_t = *it;
					{
						if ((_51829_t.get()._field_Token == nullptr)) {
							return;;
						};
						_213b06a58_indent(_self_);
						_213b06250_write(_self_, jule::Str("struct ", 7));
						_213b06250_write(_self_, static__1b64195a5_traitDecl(_51829_t));
						_213b06250_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1b94c6c25:;
					++it;
					goto _iter_begin_1b94c6c25;
				}
				_iter_end_1b94c6c25:;
			};
		}));
	}));
}



inline void _213b0962c_structurePlainDecl(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c615db_Struct>* _53143_s) {
	{
		auto expr = &((*(_53143_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94c664d:;
		if (it != expr_end) {
			jule::Ptr<_213c64402_StructIns> _53221_ins = *it;
			{
				_213b06250_write(_self_, jule::Str("struct ", 7));
				_213b06250_write(_self_, static__1b6419d8b_structureIns(&(_53221_ins)));
				_213b06250_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b94c664d:;
			++it;
			goto _iter_begin_1b94c664d;
		}
		_iter_end_1b94c664d:;
	};
}



inline void _213b09808_structurePlainDecls(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94c9585:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> _54021_s = *it;
			{
				if ((_54021_s.get()._field_Token != nullptr)) {
					_213b0962c_structurePlainDecl(_self_, &(_54021_s));
				};
			}
			_iter_next_1b94c9585:;
			++it;
			goto _iter_begin_1b94c9585;
		}
		_iter_end_1b94c9585:;
	};
}



inline void _213b09a7d_fieldDecl(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c6390c_FieldIns>* _54734_f) {
	_213b06250_write(_self_, _213b1a330_kind(_self_.get()._field_tc.ptr(), (*(_54734_f)).get()._field_Kind));
	_213b06250_write(_self_, jule::Str(" ", 1));
	_213b06250_write(_self_, static__1b641a133_field(&((*(_54734_f)).get()._field_Decl)));
	if (((*(_54734_f)).get()._field_Default == nullptr)) {
		if (_213b2215b_shouldInitialized(&((*(_54734_f)).get()._field_Kind))) {
			_213b06250_write(_self_, jule::Str(" = ", 3));
			_1b6411b41_initExpr(_self_.get()._field_ec, (*(_54734_f)).get()._field_Kind);
		};
	} else {
		_213b06250_write(_self_, jule::Str(" = ", 3));
		_1b640761a_possibleRefExpr(_self_.get()._field_ec, (*(_54734_f)).get()._field_Default.get()._field_Model);
	};
	_213b06250_write(_self_, jule::Str(";", 1));
}



inline void _213b09d03_structureDestructor(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c64402_StructIns>* _56544_s) {
	;
	jule::Ptr<_213c76a0d_Fn> _56813_disposeMethod = _213c6539d_FindMethod((*(_56544_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _56917_disposed = static__213d12d63_Dispose(_56813_disposeMethod);;
	if ((!(_56917_disposed))) {
		return;;
	};
	_213b06250_write(_self_, jule::Str("~", 1));
	_213b06250_write(_self_, static__1b6419d8b_structureIns(_56544_s));
	_213b06250_write(_self_, jule::Str("(void) { ", 9));
	_213b06250_write(_self_, static__1b6419066_func(&(_56813_disposeMethod)));
	_213b06250_write(_self_, jule::Str("(this); }", 9));
}



inline void _213b0a09a_structureDeriveDefsDecls(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c64402_StructIns>* _58145_s) {
	if (_213c62e17_IsDerives((*(_58145_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_213b06a58_indent(_self_);
		_213b06250_write(_self_, _1b6414acd_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_58145_s)).get()._field_Decl)));
		_213b06250_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _213b0a3ca_structureOperatorEq(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Str* _58940_ident, jule::Ptr<_213c64402_StructIns>* _58957_s) {
	if ((!((*(_58957_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_58957_s)).get()._field_Operators._field_Eq != nullptr)) {
		_213b0aab2_structureOperator(_self_, _58940_ident, &((*(_58957_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_213b06a58_indent(_self_);
	if (_1cdcdd44a_Inline) {
		_213b06250_write(_self_, jule::Str("inline ", 7));
	};
	_213b06250_write(_self_, jule::Str("bool operator==(", 16));
	_213b064c5_writeR(_self_, _58940_ident);
	_213b06250_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_58957_s)).get()._field_Fields.len() > 0LL)) {
		_213b066a1_addIndent(_self_);
		_213b06250_write(_self_, jule::Str("\n", 1));
		_213b06a58_indent(_self_);
		_213b06250_write(_self_, jule::Str("return ", 7));
		_213b066a1_addIndent(_self_);
		jule::Bool _61221_writed = false;;
		{
			auto expr = &((*(_58957_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b94d5c45:;
			if (it != expr_end) {
				jule::Ptr<_213c6390c_FieldIns> _61325_f = *it;
				{
					jule::Ptr<_213c64402_StructIns> _61521_strct = _213d8c4a3_Struct(_61325_f.get()._field_Kind.ptr());;
					if ((((_61521_strct != nullptr) && (_61521_strct.get()._field_Decl != nullptr)) && _61521_strct.get()._field_Decl.get()._field_Binded)) {
						goto _iter_next_1b94d5c45;
					};
					if (_61221_writed) {
						_213b06250_write(_self_, jule::Str(" &&", 3));
					};
					_61221_writed=true;
					_213b06250_write(_self_, jule::Str("\n", 1));
					_213b06a58_indent(_self_);
					_213b06250_write(_self_, jule::Str("this->", 6));
					jule::Str _62621_fIdent = static__1b641a133_field(&(_61325_f.get()._field_Decl));;
					_213b064c5_writeR(_self_, &(_62621_fIdent));
					_213b06250_write(_self_, jule::Str(" == _other.", 11));
					_213b064c5_writeR(_self_, &(_62621_fIdent));
				}
				_iter_next_1b94d5c45:;
				++it;
				goto _iter_begin_1b94d5c45;
			}
			_iter_end_1b94d5c45:;
		};
		_213b0687c_doneIndent(_self_);
		if ((!(_61221_writed))) {
			_213b06250_write(_self_, jule::Str("true", 4));
		};
		_213b06250_write(_self_, jule::Str(";\n", 2));
		_213b0687c_doneIndent(_self_);
		_213b06a58_indent(_self_);
		_213b06250_write(_self_, jule::Str("}", 1));
	} else {
		_213b06250_write(_self_, jule::Str(" return true; }", 15));
	};
	_213b06250_write(_self_, jule::Str("\n\n", 2));
}



inline void _213b0a6e9_structureOperatorNotEq(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Str* _64543_ident, jule::Ptr<_213c64402_StructIns>* _64560_s) {
	if ((!((*(_64560_s)).get()._field_Comparable))) {
		return;;
	};
	_213b06a58_indent(_self_);
	if (_1cdcdd44a_Inline) {
		_213b06250_write(_self_, jule::Str("inline ", 7));
	};
	_213b06250_write(_self_, jule::Str("bool operator!=(", 16));
	_213b064c5_writeR(_self_, _64543_ident);
	_213b06250_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _213b0aab2_structureOperator(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Str* _65938_ident, jule::Ptr<_213c796ae_FnIns>* _65955_f, jule::Str _65966_op) {
	if (((*(_65955_f)) == nullptr)) {
		return;;
	};
	jule::Bool _66413_unary = ((*(_65955_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _66513_assignment = _213c76e70_IsVoid((*(_65955_f)).get()._field_Decl.ptr());;
	_213b06a58_indent(_self_);
	if (_1cdcdd44a_Inline) {
		_213b06250_write(_self_, jule::Str("inline ", 7));
	};
	if (_66513_assignment) {
		_213b064c5_writeR(_self_, _65938_ident);
		_213b06250_write(_self_, jule::Str("&", 1));
	} else {
		if ((_213d8b051_Prim((*(_65955_f)).get()._field_Result.ptr()) == nullptr)) {
			_213b064c5_writeR(_self_, _65938_ident);
		} else {
			_213b06250_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_213b06250_write(_self_, jule::Str(" operator", 9));
	_213b064c5_writeR(_self_, &(_65966_op));
	_213b06250_write(_self_, jule::Str("(", 1));
	if ((!(_66413_unary))) {
		jule::Ptr<_213c787e0_ParamIns> _68721_p = (*(_65955_f)).get()._field_Params[1LL];;
		_213b06250_write(_self_, _213b192c9_paramIns(_self_.get()._field_tc.ptr(), &(_68721_p)));
		_213b06250_write(_self_, jule::Str(" _other", 7));
	};
	_213b06250_write(_self_, jule::Str(") { ", 4));
	if ((!(_66513_assignment))) {
		_213b06250_write(_self_, jule::Str("return ", 7));
	};
	_213b06250_write(_self_, static__1b641930d_funcIns(_65955_f));
	if ((!(_66413_unary))) {
		_213b06250_write(_self_, jule::Str("(this, _other); ", 16));
		if (_66513_assignment) {
			_213b06250_write(_self_, jule::Str("return *this; ", 14));
		};
		_213b06250_write(_self_, jule::Str("}", 1));
	} else {
		_213b06250_write(_self_, jule::Str("(this); }", 9));
	};
	_213b06250_write(_self_, jule::Str("\n\n", 2));
}



inline void _213b0ad37_structureOperators(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c64402_StructIns>* _70843_s) {
	jule::Str _70913_ident = static__1b6419d8b_structureIns(_70843_s);;
	_213b0a3ca_structureOperatorEq(_self_, &(_70913_ident), _70843_s);
	_213b0a6e9_structureOperatorNotEq(_self_, &(_70913_ident), _70843_s);
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_213b0aab2_structureOperator(_self_, &(_70913_ident), &((*(_70843_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _213b0b0ac_structureInsDecl(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c64402_StructIns>* _74741_s) {
	{
		auto expr = &((*(_74741_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94eeac7:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _74821_m = *it;
			{
				if (_213b136e1_isHeadDecl(&(_74821_m))) {
					_213b0c3bb_funcDecl(_self_, &(_74821_m), false);
				};
			}
			_iter_next_1b94eeac7:;
			++it;
			goto _iter_begin_1b94eeac7;
		}
		_iter_end_1b94eeac7:;
	};
	_213b06250_write(_self_, jule::Str("struct ", 7));
	jule::Str _75513_outIdent = static__1b6419d8b_structureIns(_74741_s);;
	_213b064c5_writeR(_self_, &(_75513_outIdent));
	_213b06250_write(_self_, jule::Str(" {\n", 3));
	_213b066a1_addIndent(_self_);
	{
		auto expr = &((*(_74741_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9501645:;
		if (it != expr_end) {
			jule::Ptr<_213c6390c_FieldIns> _76121_f = *it;
			{
				_213b06a58_indent(_self_);
				_213b09a7d_fieldDecl(_self_, &(_76121_f));
				_213b06250_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1b9501645:;
			++it;
			goto _iter_begin_1b9501645;
		}
		_iter_end_1b9501645:;
	};
	_213b06a58_indent(_self_);
	_213b09d03_structureDestructor(_self_, _74741_s);
	_213b06250_write(_self_, jule::Str("\n\n", 2));
	_213b0a09a_structureDeriveDefsDecls(_self_, _74741_s);
	_213b0ad37_structureOperators(_self_, _74741_s);
	_213b06250_write(_self_, jule::Str("\n", 1));
	_213b0687c_doneIndent(_self_);
	_213b06a58_indent(_self_);
	_213b06250_write(_self_, jule::Str("};", 2));
}



inline void _213b0b332_structureDecl(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c615db_Struct>* _78138_s) {
	{
		auto expr = &((*(_78138_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9504390:;
		if (it != expr_end) {
			jule::Ptr<_213c64402_StructIns> _78221_ins = *it;
			{
				_213b0b0ac_structureInsDecl(_self_, &(_78221_ins));
			}
			_iter_next_1b9504390:;
			++it;
			goto _iter_begin_1b9504390;
		}
		_iter_end_1b9504390:;
	};
}



inline void _213b0b50d_structureDecls(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9504acc:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> _78821_s = *it;
			{
				if ((_78821_s.get()._field_Token != nullptr)) {
					_213b0b332_structureDecl(_self_, &(_78821_s));
					_213b06250_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1b9504acc:;
			++it;
			goto _iter_begin_1b9504acc;
		}
		_iter_end_1b9504acc:;
	};
}



inline void _213b0b6d9_structureMethodDecls(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b950646e:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> _79721_s = *it;
			{
				if ((_79721_s.get()._field_Token != nullptr)) {
					{
						auto expr = &(_79721_s.get()._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b9507272:;
						if (it != expr_end) {
							jule::Ptr<_213c64402_StructIns> _79929_ins = *it;
							{
								{
									auto expr = &(_79929_ins.get()._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b9507aad:;
									if (it != expr_end) {
										jule::Ptr<_213c76a0d_Fn> _80033_m = *it;
										{
											if ((!(_213b136e1_isHeadDecl(&(_80033_m))))) {
												_213b0766e_pushResult(_self_, &(_80033_m));
												_213b0c3bb_funcDecl(_self_, &(_80033_m), false);
											};
										}
										_iter_next_1b9507aad:;
										++it;
										goto _iter_begin_1b9507aad;
									}
									_iter_end_1b9507aad:;
								};
							}
							_iter_next_1b9507272:;
							++it;
							goto _iter_begin_1b9507272;
						}
						_iter_end_1b9507272:;
					};
				};
			}
			_iter_next_1b950646e:;
			++it;
			goto _iter_begin_1b950646e;
		}
		_iter_end_1b950646e:;
	};
}



inline void _213b0b95e_paramsDecls(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Slice<jule::Ptr<_213c787e0_ParamIns>>* _81236_params) {
	if (((*(_81236_params)).len() == 0LL)) {
		_213b06250_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_213b06250_write(_self_, jule::Str("(", 1));
	{
		auto expr = _81236_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9509164:;
		if (it != expr_end) {
			jule::I32 _81914_i = it - expr->begin();
			jule::Ptr<_213c787e0_ParamIns> _81921_p = *it;
			{
				_213b06250_write(_self_, _213b192c9_paramIns(_self_.get()._field_tc.ptr(), &(_81921_p)));
				if ((((*(_81236_params)).len() - _81914_i) > 1LL)) {
					_213b06250_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1b9509164:;
			++it;
			_81914_i++;
			goto _iter_begin_1b9509164;
		}
		_iter_end_1b9509164:;
	};
	_213b06250_write(_self_, jule::Str(")", 1));
}



inline void _213b0bc7d_funcHead(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c796ae_FnIns>* _82933_f, jule::Bool _82944_ptr) {
	if ((((!(_82944_ptr)) && _1cdcdd44a_Inline) && (!(_213c77448_IsEntryPoint((*(_82933_f)).get()._field_Decl.ptr()))))) {
		_213b06250_write(_self_, jule::Str("inline ", 7));
	};
	_213b19906_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _82933_f);
	if (_82944_ptr) {
		_213b06250_write(_self_, jule::Str("(*", 2));
		_213b06250_write(_self_, static__1b641930d_funcIns(_82933_f));
		_213b06250_write(_self_, jule::Str(")", 1));
	} else {
		_213b06250_write(_self_, jule::Str(" ", 1));
		_213b06250_write(_self_, static__1b641930d_funcIns(_82933_f));
	};
}



inline void _213b0c09c_funcDeclIns(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c796ae_FnIns>* _84436_f, jule::Bool _84447_ptr) {
	_213b06a58_indent(_self_);
	_213b0bc7d_funcHead(_self_, _84436_f, _84447_ptr);
	_213b0b95e_paramsDecls(_self_, &((*(_84436_f)).get()._field_Params));
	_213b06250_write(_self_, jule::Str(";\n", 2));
}



inline void _213b0c3bb_funcDecl(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c76a0d_Fn>* _85133_f, jule::Bool _85141_ptr) {
	{
		auto expr = &((*(_85133_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b950eed3:;
		if (it != expr_end) {
			jule::Ptr<_213c796ae_FnIns> _85221_c = *it;
			{
				_213b0c09c_funcDeclIns(_self_, &(_85221_c), _85141_ptr);
			}
			_iter_next_1b950eed3:;
			++it;
			goto _iter_begin_1b950eed3;
		}
		_iter_end_1b950eed3:;
	};
}



inline void _213b0c784_funcDeclTrait(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c88b63_Trait>* _85738_t, jule::Ptr<_213c76a0d_Fn>* _85754_f, jule::Bool _85762_ptr) {
	{
		auto expr = &((*(_85754_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9511149:;
		if (it != expr_end) {
			jule::Ptr<_213c796ae_FnIns> _85821_c = *it;
			{
				jule::Ptr<_213d88834_TypeKind> _85921_k = _85821_c.get()._field_Params[0LL].get()._field_Kind;;
				_85821_c.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>((*(_85738_t)), 2)});
				_213b0c09c_funcDeclIns(_self_, &(_85821_c), _85762_ptr);
				_85821_c.get()._field_Params[0LL].get()._field_Kind=_85921_k;
			}
			_iter_next_1b9511149:;
			++it;
			goto _iter_begin_1b9511149;
		}
		_iter_end_1b9511149:;
	};
}



inline void _213b0c960_funcDecls(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_213b09000_iterPackages(_self_, jule::Fn<void(jule::Ptr<_213cda8b8_Package>*)>([=](jule::Ptr<_213cda8b8_Package>* _86735_pkg) mutable -> void {
		_213b1248c_iterFiles(_86735_pkg, jule::Fn<void(jule::Ptr<_213d56417_SymbolTable>*)>([=](jule::Ptr<_213d56417_SymbolTable>* _86836_file) mutable -> void {
			{
				auto expr = &((*(_86836_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b9519b69:;
				if (it != expr_end) {
					jule::Ptr<_213c76a0d_Fn> _86929_f = *it;
					{
						if (((!(_86929_f.get()._field_Binded)) && (_86929_f.get()._field_Token != nullptr))) {
							_213b0766e_pushResult(_self_, &(_86929_f));
							_213b0c3bb_funcDecl(_self_, &(_86929_f), false);
						};
					}
					_iter_next_1b9519b69:;
					++it;
					goto _iter_begin_1b9519b69;
				}
				_iter_end_1b9519b69:;
			};
		}));
	}));
}



inline void _213b0cc7e_traitDataTypeMethods(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c88b63_Trait>* _87945_owner, jule::Ptr<_213c88b63_Trait>* _87965_t) {
	{
		auto expr = &((*(_87965_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9514977:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _88021_m = *it;
			{
				jule::Ptr<_213c796ae_FnIns> _88121_ins = _88021_m.get()._field_Instances[0LL];;
				jule::Ptr<_213c787e0_ParamIns> _88221_p = _88121_ins.get()._field_Params[0LL];;
				_88221_p.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>((*(_87965_t)), 2)});
				{
					auto expr = _88121_ins.get()._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1b951bc37:;
					if (it != expr_end) {
						jule::I32 _88618_i = it - expr.begin();
						jule::Ptr<_213c787e0_ParamIns> _88625_ip = *it;
						{
							if (_2114c46ae_IsAnonIdent(_88625_ip.get()._field_Decl.get()._field_Ident)) {
								_88625_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _2121950d7_Itoa(_88618_i));
							};
						}
						_iter_next_1b951bc37:;
						++it;
						_88618_i++;
						goto _iter_begin_1b951bc37;
					}
					_iter_end_1b951bc37:;
				};
				if ((!(_22991518b_Production))) {
					jule::Ptr<_213c787e0_ParamIns> _89225_lp = _88121_ins.get()._field_Params[(_88121_ins.get()._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ _89225_lp.get()._field_Kind.get()._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1b9521555:;
							{
								goto _match_end_1b951eaa3;
							}
						}
						else {
							_case_begin_1b951ec18:;
							{
								{ jule::Slice<jule::Ptr<_213c787e0_ParamIns>> &__jule_push_dest = _88121_ins.get()._field_Params; __jule_push_dest.push(jule::new_ptr<_213c787e0_ParamIns>(_213c787e0_ParamIns{._field_Decl=jule::new_ptr<_213c751c1_Param>(_213c751c1_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213b144e4_customType>(_213b144e4_customType{._field_kind=jule::Str("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1b951eaa3:;
					};
				};
				_213b0766e_pushResult(_self_, &(_88021_m));
				_213b0c784_funcDeclTrait(_self_, _87945_owner, &(_88021_m), true);
			}
			_iter_next_1b9514977:;
			++it;
			goto _iter_begin_1b9514977;
		}
		_iter_end_1b9514977:;
	};
}



inline void _213b0ce5a_traitDataTypes(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_213b09000_iterPackages(_self_, jule::Fn<void(jule::Ptr<_213cda8b8_Package>*)>([=](jule::Ptr<_213cda8b8_Package>* _91535_pkg) mutable -> void {
		_213b1248c_iterFiles(_91535_pkg, jule::Fn<void(jule::Ptr<_213d56417_SymbolTable>*)>([=](jule::Ptr<_213d56417_SymbolTable>* _91636_file) mutable -> void {
			{
				auto expr = &((*(_91636_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b95232e3:;
				if (it != expr_end) {
					jule::Ptr<_213c88b63_Trait> _91729_t = *it;
					{
						if ((_91729_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_91729_t.get()._field_Methods.len() == 0LL)) {
							goto _iter_next_1b95232e3;
						};
						_213b06250_write(_self_, jule::Str("struct ", 7));
						_213b06250_write(_self_, static__1b64195a5_traitDecl(_91729_t));
						_213b06250_write(_self_, jule::Str("MptrData", 8));
						_213b06250_write(_self_, jule::Str(" {\n", 3));
						_213b066a1_addIndent(_self_);
						_213b0cc7e_traitDataTypeMethods(_self_, &(_91729_t), &(_91729_t));
						_213b0687c_doneIndent(_self_);
						_213b06a58_indent(_self_);
						_213b06250_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1b95232e3:;
					++it;
					goto _iter_begin_1b95232e3;
				}
				_iter_end_1b95232e3:;
			};
		}));
	}));
}



inline void _213b0d1d0_paramIns(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c787e0_ParamIns>* _93833_p) {
	_213b06250_write(_self_, _213b192c9_paramIns(_self_.get()._field_tc.ptr(), _93833_p));
	_213b06250_write(_self_, jule::Str(" ", 1));
	_213b06250_write(_self_, static__1b641984c_param(&((*(_93833_p)).get()._field_Decl)));
}



inline void _213b0d455_paramsIns(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Slice<jule::Ptr<_213c787e0_ParamIns>>* _94434_params) {
	if (((*(_94434_params)).len() == 0LL)) {
		_213b06250_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_213b06250_write(_self_, jule::Str("(", 1));
	{
		auto expr = _94434_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b95275d3:;
		if (it != expr_end) {
			jule::I32 _95014_i = it - expr->begin();
			jule::Ptr<_213c787e0_ParamIns> _95021_p = *it;
			{
				_213b0d1d0_paramIns(_self_, &(_95021_p));
				if ((((*(_94434_params)).len() - _95014_i) > 1LL)) {
					_213b06250_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1b95275d3:;
			++it;
			_95014_i++;
			goto _iter_begin_1b95275d3;
		}
		_iter_end_1b95275d3:;
	};
	_213b06250_write(_self_, jule::Str(")", 1));
}



inline void _213b0d774_varInitExpr(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213d11988_Var>* _95936_v, jule::Fn<void(void)> _95945_init) {
	if ((*(_95936_v)).get()._field_Statically) {
		_213b06250_write(_self_, jule::Str("static ", 7));
	};
	_213b06250_write(_self_, _213b1a330_kind(_self_.get()._field_tc.ptr(), (*(_95936_v)).get()._field_Kind.get()._field_Kind));
	_213b06250_write(_self_, jule::Str(" ", 1));
	if ((*(_95936_v)).get()._field_Reference) {
		_213b06250_write(_self_, jule::Str("*", 1));
	};
	_213b06250_write(_self_, static__1b641a3ca_var((*(_95936_v))));
	if ((_95945_init != nullptr)) {
		_213b06250_write(_self_, jule::Str(" = ", 3));
		_95945_init();
	};
	_213b06250_write(_self_, jule::Str(";", 1));
}



inline void _213b0d9e9_var(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213d11988_Var> _97727_v) {
	if (_2114c4417_IsIgnoreIdent(_97727_v.get()._field_Ident)) {
		return;;
	};
	if (((_97727_v.get()._field_Value != nullptr) && (_97727_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_97727_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_97727_v.get()._field_Reference) {
				_213b0d774_varInitExpr(_self_, &(_97727_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_213b06250_write(_self_, jule::Str("&(", 2));
					_1b64118bb_model(_self_.get()._field_ec, _97727_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_213b06250_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_213b0d774_varInitExpr(_self_, &(_97727_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1b640761a_possibleRefExpr(_self_.get()._field_ec, _97727_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_213b0d774_varInitExpr(_self_, &(_97727_v), nullptr);
		return;;
	};
	if (_97727_v.get()._field_Reference) {
		_213b0d774_varInitExpr(_self_, &(_97727_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_213b06250_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_213b2215b_shouldInitialized(&(_97727_v.get()._field_Kind.get()._field_Kind))) {
		_213b0d774_varInitExpr(_self_, &(_97727_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b6411b41_initExpr(_self_.get()._field_ec, _97727_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_213b0d774_varInitExpr(_self_, &(_97727_v), nullptr);
}



inline void _213b0dc6e_funcIns(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c796ae_FnIns>* _100832_f) {
	_213b0bc7d_funcHead(_self_, _100832_f, false);
	_213b0d455_paramsIns(_self_, &((*(_100832_f)).get()._field_Params));
	_213b06250_write(_self_, jule::Str(" ", 1));
	_1b6401988_funcScope(_self_.get()._field_sc, (*(_100832_f)));
	if (((*(_100832_f)).get()._field_Scope != nullptr)) {
		_213b06250_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _213b0dee4_func(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c76a0d_Fn>* _101829_f) {
	{
		auto expr = &((*(_101829_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9534c3e:;
		if (it != expr_end) {
			jule::Ptr<_213c796ae_FnIns> _101921_ins = *it;
			{
				_213b0dc6e_funcIns(_self_, &(_101921_ins));
			}
			_iter_next_1b9534c3e:;
			++it;
			goto _iter_begin_1b9534c3e;
		}
		_iter_end_1b9534c3e:;
	};
}



inline void _213b0e313_funcTrait(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213b04726_traitHash>* _102434_hash, jule::Ptr<_213c76a0d_Fn>* _102457_f) {
	jule::Str _102513_ident = (*(_102457_f)).get()._field_Ident;;
	{
		auto expr = &((*(_102457_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b95361d5:;
		if (it != expr_end) {
			jule::Ptr<_213c796ae_FnIns> _102621_ins = *it;
			{
				_102621_ins.get()._field_Scope=nullptr;
				(*(_102457_f)).get()._field_Ident=_102513_ident;
				((*(_102457_f)).get()._field_Ident).append("_", 1);
				(*(_102457_f)).get()._field_Ident+=(*(_102434_hash)).get()._field_t.get()._field_Ident;
				((*(_102457_f)).get()._field_Ident).append("_", 1);
				(*(_102457_f)).get()._field_Ident+=_2121950d7_Itoa((*(_102434_hash)).get()._field_i);
				jule::Ptr<_213d88834_TypeKind> _103521_k = _102621_ins.get()._field_Params[0LL].get()._field_Kind;;
				_102621_ins.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>((*(_102434_hash)).get()._field_t, 2)});
				_213b0dc6e_funcIns(_self_, &(_102621_ins));
				_102621_ins.get()._field_Params[0LL].get()._field_Kind=_103521_k;
			}
			_iter_next_1b95361d5:;
			++it;
			goto _iter_begin_1b95361d5;
		}
		_iter_end_1b95361d5:;
	};
	(*(_102457_f)).get()._field_Ident=_102513_ident;
}



inline void _213b0e632_traitWrapper(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c76a0d_Fn>* _104337_m, jule::Ptr<_213b04726_traitHash>* _104350_hash) {
	_213b0e313_funcTrait(_self_, _104350_hash, _104337_m);
	if (((*(_104350_hash)).get()._field_s == nullptr)) {
		if (_22991518b_Production) {
			_213b06250_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_213b06250_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _105513_ptr = (!(_213c75a1d_IsRef((*(_104337_m)).get()._field_Params[0LL].ptr())));;
	jule::Ptr<_213c76a0d_Fn> _105717_sm = _213c6539d_FindMethod((*(_104350_hash)).get()._field_s.ptr(), (*(_104337_m)).get()._field_Ident, false);;
	if (((_105717_sm == nullptr) || (_105717_sm.get()._field_Instances.len() == 0LL))) {
		return;;
	};
	_213b066a1_addIndent(_self_);
	_213b06250_write(_self_, jule::Str("{\n", 2));
	_213b06a58_indent(_self_);
	if ((_105717_sm.get()._field_Exceptional || (!(_213c76e70_IsVoid(_105717_sm.ptr()))))) {
		_213b06250_write(_self_, jule::Str("return ", 7));
	};
	_213b06250_write(_self_, static__1b6419066_func(&(_105717_sm)));
	_213b06250_write(_self_, jule::Str("(", 1));
	if (_105513_ptr) {
		_213b06250_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_213b06250_write(_self_, _213b188a0_structureIns(_self_.get()._field_tc.ptr(), (*(_104350_hash)).get()._field_s));
		_213b06250_write(_self_, jule::Str(">(", 2));
		if ((!(_22991518b_Production))) {
			_213b06250_write(_self_, jule::Str("_00___file", 10));
		};
		_213b06250_write(_self_, jule::Str(")", 1));
	} else {
		_213b06250_write(_self_, jule::Str("_self_.data.as<", 15));
		_213b06250_write(_self_, _213b18592_structure(_self_.get()._field_tc.ptr(), _105717_sm.get()._field_Owner));
		_213b06250_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*(_104337_m)).get()._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b953db7c:;
		if (it != expr_end) {
			jule::Ptr<_213c751c1_Param> _108316_mp = *it;
			{
				_213b06250_write(_self_, jule::Str(", ", 2));
				_213b06250_write(_self_, static__1b641984c_param(&(_108316_mp)));
			}
			_iter_next_1b953db7c:;
			++it;
			goto _iter_begin_1b953db7c;
		}
		_iter_end_1b953db7c:;
	};
	_213b06250_write(_self_, jule::Str(");\n}\n", 5));
	_213b0687c_doneIndent(_self_);
}



inline void _213b0e80d_traitWrappers(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b95425dc:;
		if (it != expr_end) {
			jule::Ptr<_213b04726_traitHash> _109221_hash = *it;
			{
				{
					auto expr = &(_109221_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b9542e8e:;
					if (it != expr_end) {
						jule::Ptr<_213c76a0d_Fn> _109325_m = *it;
						{
							_213b0e632_traitWrapper(_self_, &(_109325_m), &(_109221_hash));
						}
						_iter_next_1b9542e8e:;
						++it;
						goto _iter_begin_1b9542e8e;
					}
					_iter_end_1b9542e8e:;
				};
			}
			_iter_next_1b95425dc:;
			++it;
			goto _iter_begin_1b95425dc;
		}
		_iter_end_1b95425dc:;
	};
}



inline void _213b0eb2c_traitDataMethods(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c88b63_Trait>* _109941_t, jule::Ptr<_213b04726_traitHash>* _109953_hash) {
	{
		auto expr = &((*(_109941_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9543742:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _110021_m = *it;
			{
				jule::Str _110117_mIdent = static__1b6419066_func(&(_110021_m));;
				_213b06a58_indent(_self_);
				_213b06250_write(_self_, jule::Str(".", 1));
				_213b064c5_writeR(_self_, &(_110117_mIdent));
				_213b06250_write(_self_, jule::Str("=", 1));
				_213b064c5_writeR(_self_, &(_110117_mIdent));
				_213b06250_write(_self_, jule::Str("_", 1));
				_213b064c5_writeR(_self_, &((*(_109953_hash)).get()._field_t.get()._field_Ident));
				_213b06250_write(_self_, jule::Str("_", 1));
				_213b06250_write(_self_, _2121950d7_Itoa((*(_109953_hash)).get()._field_i));
				_213b06250_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_1b9543742:;
			++it;
			goto _iter_begin_1b9543742;
		}
		_iter_end_1b9543742:;
	};
}



inline void _213b0ee4b_traitData(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213b04726_traitHash>* _111534_hash, jule::Ptr<_213c88b63_Trait>* _111557_old) {
	if (((*(_111534_hash)).get()._field_t.get()._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _111913_ident = static__1b64195a5_traitDecl((*(_111534_hash)).get()._field_t);;
	if (((*(_111534_hash)).get()._field_t != (*(_111557_old)))) {
		if (((*(_111557_old)) != nullptr)) {
			_213b0687c_doneIndent(_self_);
			_213b06a58_indent(_self_);
			_213b06250_write(_self_, jule::Str("};\n", 3));
		};
		_213b06250_write(_self_, jule::Str("static ", 7));
		_213b064c5_writeR(_self_, &(_111913_ident));
		_213b06250_write(_self_, jule::Str("MptrData ", 9));
		_213b064c5_writeR(_self_, &(_111913_ident));
		_213b06250_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_111557_old))=(*(_111534_hash)).get()._field_t;
		_213b066a1_addIndent(_self_);
	};
	_213b06a58_indent(_self_);
	_213b06250_write(_self_, jule::Str("{\n", 2));
	_213b066a1_addIndent(_self_);
	_213b0eb2c_traitDataMethods(_self_, &((*(_111534_hash)).get()._field_t), _111534_hash);
	_213b0687c_doneIndent(_self_);
	_213b06a58_indent(_self_);
	_213b06250_write(_self_, jule::Str("},\n", 3));
}



inline void _213b10127_traitDatas(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	jule::Ptr<_213c88b63_Trait> _114417_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b954b728:;
		if (it != expr_end) {
			jule::Ptr<_213b04726_traitHash> _114521_hash = *it;
			{
				_213b0ee4b_traitData(_self_, &(_114521_hash), &(_114417_old));
			}
			_iter_next_1b954b728:;
			++it;
			goto _iter_begin_1b954b728;
		}
		_iter_end_1b954b728:;
	};
	if ((_114417_old != nullptr)) {
		_213b0687c_doneIndent(_self_);
		_213b06a58_indent(_self_);
		_213b06250_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _213b10303_globals(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b954cd78:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> _115621_v = *it;
			{
				_213b06250_write(_self_, _213b1a330_kind(_self_.get()._field_tc.ptr(), _115621_v.get()._field_Kind.get()._field_Kind));
				_213b06250_write(_self_, jule::Str(" ", 1));
				_213b06250_write(_self_, static__1b641a3ca_var(_115621_v));
				_213b06250_write(_self_, jule::Str(" = ", 3));
				_1b64118bb_model(_self_.get()._field_ec, _115621_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_213b06250_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b954cd78:;
			++it;
			goto _iter_begin_1b954cd78;
		}
		_iter_end_1b954cd78:;
	};
}



inline void _213b104ce_decls(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_213b093a7_traitDecls(_self_);
	_213b09808_structurePlainDecls(_self_);
	_213b0b50d_structureDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I32>(_self_.get()._field_Obj.len());
	_213b0b6d9_structureMethodDecls(_self_);
	_213b0c960_funcDecls(_self_);
	_213b06250_write(_self_, jule::Str("\n\n", 2));
	_213b0ce5a_traitDataTypes(_self_);
	_213b06250_write(_self_, jule::Str("\n\n", 2));
	_213b0e80d_traitWrappers(_self_);
	_213b06250_write(_self_, jule::Str("\n\n", 2));
	_213b10127_traitDatas(_self_);
	_213b06250_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I32>(_self_.get()._field_Obj.len());
	_213b10303_globals(_self_);
}



inline void _213b10754_structureMethods(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c64402_StructIns>* _118441_s) {
	{
		auto expr = &((*(_118441_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b955317a:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _118521_f = *it;
			{
				_213b0dee4_func(_self_, &(_118521_f));
				_213b06250_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1b955317a:;
			++it;
			goto _iter_begin_1b955317a;
		}
		_iter_end_1b955317a:;
	};
}



inline void _213b109c9_structureDeriveDefs(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c64402_StructIns>* _119144_s) {
	if (_213c62e17_IsDerives((*(_119144_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_213b06250_write(_self_, _1b6414ddb_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_119144_s)).get()._field_Decl)));
		_213b06250_write(_self_, jule::Str("{\n", 2));
		_213b066a1_addIndent(_self_);
		_213b06a58_indent(_self_);
		_213b06250_write(_self_, _213b188a0_structureIns(_self_.get()._field_tc.ptr(), (*(_119144_s))));
		_213b06250_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_119144_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b9555c0a:;
			if (it != expr_end) {
				jule::Ptr<_213c6390c_FieldIns> _119920_f = *it;
				{
					jule::Str _120021_ident = static__1b641a133_field(&(_119920_f.get()._field_Decl));;
					_213b06a58_indent(_self_);
					_213b06250_write(_self_, jule::Str("clone.", 6));
					_213b064c5_writeR(_self_, &(_120021_ident));
					_213b06250_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_213b064c5_writeR(_self_, &(_120021_ident));
					_213b06250_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1b9555c0a:;
				++it;
				goto _iter_begin_1b9555c0a;
			}
			_iter_end_1b9555c0a:;
		};
		_213b06a58_indent(_self_);
		_213b06250_write(_self_, jule::Str("return clone;\n", 14));
		_213b0687c_doneIndent(_self_);
		_213b06250_write(_self_, jule::Str("}", 1));
	};
}



inline void _213b10c4e_structureOstream(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c64402_StructIns>* _121541_s) {
	_213b06a58_indent(_self_);
	_213b06250_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_213b06250_write(_self_, static__1b6419d8b_structureIns(_121541_s));
	_213b06250_write(_self_, jule::Str(" _Src) {\n", 9));
	_213b066a1_addIndent(_self_);
	_213b06a58_indent(_self_);
	jule::Ptr<_213c76a0d_Fn> _122317_fts = _213c6539d_FindMethod((*(_121541_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__213d1310a_Str(_122317_fts)) {
		_213b06250_write(_self_, jule::Str("_Stream << ", 11));
		_213b06250_write(_self_, static__1b6419066_func(&(_122317_fts)));
		_213b06250_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_213b06250_write(_self_, jule::Str("_Stream << \"", 12));
		_213b064c5_writeR(_self_, &((*(_121541_s)).get()._field_Decl.get()._field_Ident));
		_213b06250_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_121541_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b955be75:;
			if (it != expr_end) {
				jule::I32 _123318_i = it - expr->begin();
				jule::Ptr<_213c6390c_FieldIns> _123325_f = *it;
				{
					_213b06a58_indent(_self_);
					_213b06250_write(_self_, jule::Str("_Stream << \"", 12));
					_213b064c5_writeR(_self_, &(_123325_f.get()._field_Decl.get()._field_Ident));
					_213b06250_write(_self_, jule::Str(":", 1));
					jule::Ptr<_213c64402_StructIns> _124021_strct = _213d8c4a3_Struct(_123325_f.get()._field_Kind.ptr());;
					if ((((_124021_strct != nullptr) && (_124021_strct.get()._field_Decl != nullptr)) && _124021_strct.get()._field_Decl.get()._field_Binded)) {
						_213b06250_write(_self_, jule::Str(" cpp.", 5));
						_213b06250_write(_self_, static__1b641a133_field(&(_123325_f.get()._field_Decl)));
						_213b06250_write(_self_, jule::Str("\"", 1));
					} else {
						_213b06250_write(_self_, jule::Str("\" << _Src.", 10));
						_213b06250_write(_self_, static__1b641a133_field(&(_123325_f.get()._field_Decl)));
					};
					if (((_123318_i + 1LL) < (*(_121541_s)).get()._field_Fields.len())) {
						_213b06250_write(_self_, jule::Str(" << \", \"", 8));
					};
					_213b06250_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1b955be75:;
				++it;
				_123318_i++;
				goto _iter_begin_1b955be75;
			}
			_iter_end_1b955be75:;
		};
		_213b06a58_indent(_self_);
		_213b06250_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_213b06a58_indent(_self_);
	_213b06250_write(_self_, jule::Str("return _Stream;\n", 16));
	_213b0687c_doneIndent(_self_);
	_213b06250_write(_self_, jule::Str("}", 1));
}



inline void _213b10ec4_structureIns(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c64402_StructIns>* _126637_s) {
	_213b10754_structureMethods(_self_, _126637_s);
	_213b06250_write(_self_, jule::Str("\n\n", 2));
	_213b109c9_structureDeriveDefs(_self_, _126637_s);
	_213b06250_write(_self_, jule::Str("\n\n", 2));
	_213b10c4e_structureOstream(_self_, _126637_s);
}



inline void _213b11249_structure(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213c615db_Struct>* _127434_s) {
	{
		auto expr = &((*(_127434_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9563894:;
		if (it != expr_end) {
			jule::Ptr<_213c64402_StructIns> _127521_ins = *it;
			{
				_213b10ec4_structureIns(_self_, &(_127521_ins));
				_213b06250_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1b9563894:;
			++it;
			goto _iter_begin_1b9563894;
		}
		_iter_end_1b9563894:;
	};
}



inline void _213b11425_structures(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9564961:;
		if (it != expr_end) {
			jule::Ptr<_213c615db_Struct> _128221_s = *it;
			{
				if ((_128221_s.get()._field_Token != nullptr)) {
					_213b11249_structure(_self_, &(_128221_s));
					_213b06250_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1b9564961:;
			++it;
			goto _iter_begin_1b9564961;
		}
		_iter_end_1b9564961:;
	};
}



inline void _213b11601_funcs(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_213b09000_iterPackages(_self_, jule::Fn<void(jule::Ptr<_213cda8b8_Package>*)>([=](jule::Ptr<_213cda8b8_Package>* _129135_pkg) mutable -> void {
		_213b1248c_iterFiles(_129135_pkg, jule::Fn<void(jule::Ptr<_213d56417_SymbolTable>*)>([=](jule::Ptr<_213d56417_SymbolTable>* _129236_file) mutable -> void {
			{
				auto expr = &((*(_129236_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b9567964:;
				if (it != expr_end) {
					jule::Ptr<_213c76a0d_Fn> _129329_f = *it;
					{
						if (((!(_22991472e_Test)) && _213b21db4_hasDirective(&(_129329_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1b9567964;
						};
						if (((!(_129329_f.get()._field_Binded)) && (_129329_f.get()._field_Token != nullptr))) {
							_213b0dee4_func(_self_, &(_129329_f));
							_213b06250_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1b9567964:;
					++it;
					goto _iter_begin_1b9567964;
				}
				_iter_end_1b9567964:;
			};
		}));
	}));
}



inline void _213b11876_pushInit(jule::Ptr<_213b05b01_ObjectCoder> _self_, jule::Ptr<_213cda8b8_Package>* _130633_pkg) {
	_213b1248c_iterFiles(_130633_pkg, jule::Fn<void(jule::Ptr<_213d56417_SymbolTable>*)>([=](jule::Ptr<_213d56417_SymbolTable>* _130732_file) mutable -> void {
		{
			auto expr = &((*(_130732_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b9569d84:;
			if (it != expr_end) {
				jule::Ptr<_213c76a0d_Fn> _130820_f = *it;
				{
					if (_130820_f.get()._field_Ident.equal("init", 4)) {
						_213b06a58_indent(_self_);
						_213b06250_write(_self_, static__1b6419066_func(&(_130820_f)));
						_213b06250_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1b9569d84:;
				++it;
				goto _iter_begin_1b9569d84;
			}
			_iter_end_1b9569d84:;
		};
	}));
}



inline void _213b11a52_initCaller(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_213b06250_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_213b066a1_addIndent(_self_);
	_213b09000_iterPackages(_self_, jule::Fn<void(jule::Ptr<_213cda8b8_Package>*)>([=](jule::Ptr<_213cda8b8_Package>* _132135_pkg) mutable -> void {
		_213b11876_pushInit(_self_, _132135_pkg);
	}));
	_213b0687c_doneIndent(_self_);
	_213b06250_write(_self_, jule::Str("\n}", 2));
}



inline void _213b11c2d_end(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_213b06250_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_22991472e_Test) {
		_213b06250_write(_self_, jule::Str("test_point();", 13));
	} else {
		_213b06250_write(_self_, jule::Str("entry_point();", 14));
	};
	_213b06250_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _213b11e09_serializeHead(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_213b08c7a_prepareStructures(_self_);
	_213b091cb_buildTraitMap(_self_);
	_213b0864d_head(_self_);
	_213b06250_write(_self_, jule::Str("\n", 1));
	_213b104ce_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _135621_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b95709c2:;
			if (it != expr_end) {
				jule::Str _135720_decl = *it;
				{
					_135621_head+=_135720_decl;
					_self_.get()._field_declPos+=_135720_decl.len();
				}
				_iter_next_1b95709c2:;
				++it;
				goto _iter_begin_1b95709c2;
			}
			_iter_end_1b95709c2:;
		};
		_135621_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_135621_head;
	};
	_213b06250_write(_self_, jule::Str("\n", 1));
	_213b11425_structures(_self_);
	_213b11601_funcs(_self_);
	_213b11a52_initCaller(_self_);
	_213b06250_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _137221_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_137221_head+=_self_.get()._field_anyObj;
		_137221_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_137221_head;
	};
}



inline void _213b120d5_Serialize(jule::Ptr<_213b05b01_ObjectCoder> _self_) {
	_213b11e09_serializeHead(_self_);
	_213b11c2d_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _213b05b01_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1cddd5003_ObjectDeadCode> static__1cddd5487_new(jule::Ptr<_1cdcd6784_IR>* _3424_ir) {
	return jule::new_ptr<_1cddd5003_ObjectDeadCode>(_1cddd5003_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1b8ee56ab_isLive(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213c88b63_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_213c88b63_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b8ee7416:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1b8ee712a:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8ee7adc:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b8ee7adc:;
			++it;
			_5213_i++;
			goto _iter_begin_1b8ee7adc;
		}
		_iter_end_1b8ee7adc:;
	};
	return false;;
}

inline jule::Bool _1b8eea31a_isLive(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213c796ae_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_213c796ae_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b8eec4b5:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1b8eec40a:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8eecc79:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b8eecc79:;
			++it;
			_5213_i++;
			goto _iter_begin_1b8eecc79;
		}
		_iter_end_1b8eecc79:;
	};
	return false;;
}

inline jule::Bool _1b900470e_isLive(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213c64402_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_213c64402_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b9005996:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1b9005721:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9005a73:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b9005a73:;
			++it;
			_5213_i++;
			goto _iter_begin_1b9005a73;
		}
		_iter_end_1b9005a73:;
	};
	return false;;
}

inline jule::Bool _1b9008108_isLive(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213d11988_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_213d11988_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b9009b54:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1b9009a33:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b900a3a2:;
		if (it != expr_end) {
			jule::I32 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b900a3a2:;
			++it;
			_5213_i++;
			goto _iter_begin_1b900a3a2;
		}
		_iter_end_1b900a3a2:;
	};
	return false;;
}



inline void _1b8ee5a0d_pushLive(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213c88b63_Trait> _6035_t) {
	{
		
{
			_case_begin_1b8ee9407:;
			{
				{ jule::Slice<jule::Ptr<_213c88b63_Trait>> &__jule_push_dest = _self_.get()._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1b8ee90a5:;
	};
}

inline void _1b8eead32_pushLive(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213c796ae_FnIns> _6035_t) {
	{
		
{
			_case_begin_1b8eeec26:;
			{
				{ jule::Slice<jule::Ptr<_213c796ae_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1b8eee9a1:;
	};
}

inline void _1b9001d49_pushLive(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213c64402_StructIns> _6035_t) {
	{
		
{
			_case_begin_1b9003543:;
			{
				{ jule::Slice<jule::Ptr<_213c64402_StructIns>> &__jule_push_dest = _self_.get()._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1b9003257:;
	};
}

inline void _1b900845a_pushLive(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213d11988_Var> _6035_t) {
	{
		
{
			_case_begin_1b900be86:;
			{
				{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = _self_.get()._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1b900bda9:;
	};
}



inline void _1cde176c8_setReferencesAsLive(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213c7c618_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _7717_i = 0LL;;
	for (; (_7717_i < _213c7cc01_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _213c7d00e_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1b8ee4446:;
					{
						jule::Ptr<_213c88b63_Trait> _8225_t = _7921_ref.cast_ptr<_213c88b63_Trait>(&__jule_any_type10);;
						if (_1b8ee56ab_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1b8ee37ca;
						};
						_1b8ee5a0d_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b8ee4ed5:;
							if (it != expr_end) {
								jule::Ptr<_213c76a0d_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b8ee998a:;
										if (it != expr_end) {
											jule::Ptr<_213c796ae_FnIns> _8833_mins = *it;
											{
												if (_1b8eea31a_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1b8ee998a;
												};
												_1b8eead32_pushLive(_self_, _8833_mins);
												_1cde176c8_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_1b8ee998a:;
											++it;
											goto _iter_begin_1b8ee998a;
										}
										_iter_end_1b8ee998a:;
									};
								}
								_iter_next_1b8ee4ed5:;
								++it;
								goto _iter_begin_1b8ee4ed5;
							}
							_iter_end_1b8ee4ed5:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1b8ee44bd:;
					{
						jule::Ptr<_213c796ae_FnIns> _9725_f = _7921_ref.cast_ptr<_213c796ae_FnIns>(&__jule_any_type7);;
						if (_1b8eea31a_isLive(_self_, &(_9725_f))) {
							goto _match_end_1b8ee42e2;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1b900470e_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_1b9001d49_pushLive(_self_, _9725_f.get()._field_Owner);
								_1cde176c8_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_1b8eead32_pushLive(_self_, _9725_f);
						_1cde176c8_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1b8ee459a:;
					{
						jule::Ptr<_213d11988_Var> _11025_v = _7921_ref.cast_ptr<_213d11988_Var>(&__jule_any_type8);;
						if (_1b9008108_isLive(_self_, &(_11025_v))) {
							goto _match_end_1b8ee42e2;
						};
						_1b900845a_pushLive(_self_, _11025_v);
						_1cde176c8_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1b8ee4611:;
					{
						jule::Ptr<_213c64402_StructIns> _11725_s = _7921_ref.cast_ptr<_213c64402_StructIns>(&__jule_any_type9);;
						if (_1b900470e_isLive(_self_, &(_11725_s))) {
							goto _match_end_1b8ee42e2;
						};
						_1b9001d49_pushLive(_self_, _11725_s);
						_1cde176c8_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b900e51b:;
							if (it != expr_end) {
								jule::Ptr<_213c76a0d_Fn> _12329_m = *it;
								{
									{
										auto expr = &(_12329_m.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b90104ea:;
										if (it != expr_end) {
											jule::Ptr<_213c796ae_FnIns> _12433_ins = *it;
											{
												if (_1b8eea31a_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1b90104ea;
												};
												if (_1cde1a0b0_isTraitMethod(&(_11725_s), &(_12433_ins))) {
													_1b8eead32_pushLive(_self_, _12433_ins);
													_1cde176c8_setReferencesAsLive(_self_, &(_12433_ins.get()._field_Refers));
												};
											}
											_iter_next_1b90104ea:;
											++it;
											goto _iter_begin_1b90104ea;
										}
										_iter_end_1b90104ea:;
									};
								}
								_iter_next_1b900e51b:;
								++it;
								goto _iter_begin_1b900e51b;
							}
							_iter_end_1b900e51b:;
						};
					}
				}
				_match_end_1b8ee42e2:;
			};
		}
	_iter_next_1b8ee37ca:;
	}
	_iter_end_1b8ee37ca:;;
}



inline void _1cde1794d_inits(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213cda8b8_Package>* _14130_pkg) {
	{
		auto expr = &((*(_14130_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9011ed0:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &(_14221_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b9010a4a:;
					if (it != expr_end) {
						jule::Ptr<_213c76a0d_Fn> _14325_f = *it;
						{
							if (_14325_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_213c796ae_FnIns> _14529_ins = _14325_f.get()._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_213c796ae_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_14529_ins); };
								_1cde176c8_setReferencesAsLive(_self_, &(_14529_ins.get()._field_Refers));
							};
						}
						_iter_next_1b9010a4a:;
						++it;
						goto _iter_begin_1b9010a4a;
					}
					_iter_end_1b9010a4a:;
				};
			}
			_iter_next_1b9011ed0:;
			++it;
			goto _iter_begin_1b9011ed0;
		}
		_iter_end_1b9011ed0:;
	};
}



inline void _1cde17bc3_collectLivePackage(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213cda8b8_Package>* _15343_pkg) {
	_1cde1794d_inits(_self_, _15343_pkg);
	if (_22991472e_Test) {
		{
			auto expr = &((*(_15343_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b9014a60:;
			if (it != expr_end) {
				jule::Ptr<_213d56417_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &(_15925_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b901539b:;
						if (it != expr_end) {
							jule::Ptr<_213c76a0d_Fn> _16029_f = *it;
							{
								if (_1cde19c2a_hasDirective(&(_16029_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_213c796ae_FnIns> _16233_ins = _16029_f.get()._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_213c796ae_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_16233_ins); };
									_1cde176c8_setReferencesAsLive(_self_, &(_16233_ins.get()._field_Refers));
								};
							}
							_iter_next_1b901539b:;
							++it;
							goto _iter_begin_1b901539b;
						}
						_iter_end_1b901539b:;
					};
				}
				_iter_next_1b9014a60:;
				++it;
				goto _iter_begin_1b9014a60;
			}
			_iter_end_1b9014a60:;
		};
	};
}



inline void _1cde17d9e_collectLive(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90151ae:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _17221_used = *it;
			{
				if ((!(_17221_used.get()._field_Binded))) {
					_1cde17bc3_collectLivePackage(_self_, &(_17221_used.get()._field_Package));
				};
			}
			_iter_next_1b90151ae:;
			++it;
			goto _iter_begin_1b90151ae;
		}
		_iter_end_1b90151ae:;
	};
	_1cde17bc3_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_213c76a0d_Fn> _18017_main = _213cdbd09_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_213c796ae_FnIns> _18117_ins = _18017_main.get()._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_213c796ae_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_18117_ins); };
	_1cde176c8_setReferencesAsLive(_self_, &(_18117_ins.get()._field_Refers));
}



inline void _1cde18124_removeDeadGlobals(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_213d11988_Var>>* _18642_vars) {
	jule::I32 _18717_i = 0LL;;
	while ((_18717_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_213d11988_Var> _18917_v = (*(_18642_vars))[_18717_i];;
			if (_1b9008108_isLive(_self_, &(_18917_v))) {
				(_18717_i)++;
				goto _iter_next_1b9019c0d;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18717_i),(*(_18642_vars)).slice((_18717_i + 1LL)));
		}
	_iter_next_1b9019c0d:;
	}
	_iter_end_1b9019c0d:;;
}



inline void _1cde18399_removeDeadFns(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_213c76a0d_Fn>>* _19838_funcs) {
	jule::I32 _19917_i = 0LL;;
	while ((_19917_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_213c76a0d_Fn> _20121_f = (*(_19838_funcs))[_19917_i];;
			jule::I32 _20221_j = 0LL;;
			while ((_20221_j < _20121_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_213c796ae_FnIns> _20421_ins = _20121_f.get()._field_Instances[_20221_j];;
					if (_1b8eea31a_isLive(_self_, &(_20421_ins))) {
						(_20221_j)++;
						goto _iter_next_1b901cb9a;
					};
					_20121_f.get()._field_Instances=jule::append(_20121_f.get()._field_Instances.slice(0LL, _20221_j),_20121_f.get()._field_Instances.slice((_20221_j + 1LL)));
				}
			_iter_next_1b901cb9a:;
			}
			_iter_end_1b901cb9a:;;
			if ((_20121_f.get()._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19917_i),(*(_19838_funcs)).slice((_19917_i + 1LL)));
				goto _iter_next_1b901bda8;
			};
			(_19917_i)++;
		}
	_iter_next_1b901bda8:;
	}
	_iter_end_1b901bda8:;;
}



inline void _1cde1861e_removeDeadStructs(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_213c615db_Struct>>* _21942_structs) {
	jule::I32 _22017_i = 0LL;;
	while ((_22017_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_213c615db_Struct> _22221_s = (*(_21942_structs))[_22017_i];;
			jule::I32 _22321_j = 0LL;;
			while ((_22321_j < _22221_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_213c64402_StructIns> _22525_ins = _22221_s.get()._field_Instances[_22321_j];;
					_1cde18399_removeDeadFns(_self_, &(_22525_ins.get()._field_Methods));
					if (((_22525_ins.get()._field_Methods.len() != 0LL) || _1b900470e_isLive(_self_, &(_22525_ins)))) {
						(_22321_j)++;
						goto _iter_next_1b902183b;
					};
					_22221_s.get()._field_Instances=jule::append(_22221_s.get()._field_Instances.slice(0LL, _22321_j),_22221_s.get()._field_Instances.slice((_22321_j + 1LL)));
				}
			_iter_next_1b902183b:;
			}
			_iter_end_1b902183b:;;
			if ((_22221_s.get()._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22017_i),(*(_21942_structs)).slice((_22017_i + 1LL)));
				goto _iter_next_1b9020a49;
			};
			(_22017_i)++;
		}
	_iter_next_1b9020a49:;
	}
	_iter_end_1b9020a49:;;
}



inline void _1cde18894_removeDeadTraits(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_213c88b63_Trait>>* _24141_traits) {
	jule::I32 _24217_i = 0LL;;
	while ((_24217_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_213c88b63_Trait> _24421_t = (*(_24141_traits))[_24217_i];;
			if ((!(_1b8ee56ab_isLive(_self_, &(_24421_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24217_i),(*(_24141_traits)).slice((_24217_i + 1LL)));
				goto _iter_next_1b9024e05;
			};
			jule::I32 _24921_j = 0LL;;
			while ((_24921_j < _24421_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_213c615db_Struct> _25121_s = _24421_t.get()._field_Implemented[_24921_j];;
					if ((_25121_s.get()._field_Instances.len() > 0LL)) {
						(_24921_j)++;
						goto _iter_next_1b9025697;
					};
					_24421_t.get()._field_Implemented=jule::append(_24421_t.get()._field_Implemented.slice(0LL, _24921_j),_24421_t.get()._field_Implemented.slice((_24921_j + 1LL)));
				}
			_iter_next_1b9025697:;
			}
			_iter_end_1b9025697:;;
			(_24217_i)++;
		}
	_iter_next_1b9024e05:;
	}
	_iter_end_1b9024e05:;;
}



inline void _1cde18b19_removeDeadsFile(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213d56417_SymbolTable>* _26240_file) {
	_1cde18399_removeDeadFns(_self_, &((*(_26240_file)).get()._field_Funcs));
	_1cde1861e_removeDeadStructs(_self_, &((*(_26240_file)).get()._field_Structs));
	_1cde18894_removeDeadTraits(_self_, &((*(_26240_file)).get()._field_Traits));
	_1cde18124_removeDeadGlobals(_self_, &((*(_26240_file)).get()._field_Vars));
}



inline void _1cde18d8e_removeDeadsPackage(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_, jule::Ptr<_213cda8b8_Package>* _26943_pkg) {
	{
		auto expr = &((*(_26943_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9029aa8:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _27021_file = *it;
			{
				_1cde18b19_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1b9029aa8:;
			++it;
			goto _iter_begin_1b9029aa8;
		}
		_iter_end_1b9029aa8:;
	};
}



inline void _1cde1906a_removeDeads(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b902a218:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _27621_used = *it;
			{
				if ((!(_27621_used.get()._field_Binded))) {
					_1cde18d8e_removeDeadsPackage(_self_, &(_27621_used.get()._field_Package));
				};
			}
			_iter_next_1b902a218:;
			++it;
			goto _iter_begin_1b902a218;
		}
		_iter_end_1b902a218:;
	};
	_1cde18d8e_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1cde19246_elimanate(jule::Ptr<_1cddd5003_ObjectDeadCode> _self_) {
	_1cde17d9e_collectLive(_self_);
	_1cde1906a_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1cddd5003_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1cdcd6784_IR__jule_tuple_s_2110be2cb_Log static__1cdcd6bc4_Build(jule::Str _2721_path, jule::I32 _2732_flags) {
	__jule_tuple_x_1cdcd6784_IR__jule_tuple_s_2110be2cb_Log __jule_func_result;
	jule::Ptr<_1cdcd4023_JuleImporter> _2817_importer = static__1cdcd440d_New(_1cdcd8533_buildCompileInfo());;
	jule::Slice<jule::Ptr<_213c0d07c_Ast>> _2918_files;;
	jule::Slice<_2110be2cb_Log> _2929_logs;;
	({
		__jule_tuple_sx_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1cdcd57b6_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_213cda8b8_Package> _3918_pkg;;
	({
		__jule_tuple_x_213cda8b8_Package__jule_tuple_s_2110be2cb_Log __jule_assign_result = _213da818e_AnalyzePackage(_2918_files, jule::Trait<_213cd50cc_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1cdcd6784_IR> _4417_ir = jule::new_ptr<_1cdcd6784_IR>(_1cdcd6784_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1cdcd4672_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1cdcd8335_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1cdcd7169_appendStructs(_1cdcd6784_IR* _self_, jule::Ptr<_213cda8b8_Package>* _5633_p, jule::Slice<jule::Ptr<_213c615db_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8eac6d9:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8ead025:;
					if (it != expr_end) {
						jule::Ptr<_213c615db_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_Binded))) {
								{ jule::Slice<jule::Ptr<_213c615db_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1b8ead025:;
						++it;
						goto _iter_begin_1b8ead025;
					}
					_iter_end_1b8ead025:;
				};
			}
			_iter_next_1b8eac6d9:;
			++it;
			goto _iter_begin_1b8eac6d9;
		}
		_iter_end_1b8eac6d9:;
	};
}



inline jule::Slice<jule::Ptr<_213c615db_Struct>> _1cdcd73cd_GetAllStructures(_1cdcd6784_IR* _self_) {
	jule::Slice<jule::Ptr<_213c615db_Struct>> _6917_buffer = nullptr;;
	_1cdcd7169_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8eacdc1:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_Binded))) {
					_1cdcd7169_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1b8eacdc1:;
			++it;
			goto _iter_begin_1b8eacdc1;
		}
		_iter_end_1b8eacdc1:;
	};
	return _6917_buffer;;
}



inline void _1cdcd76ec_appendGlobals(_1cdcd6784_IR* _self_, jule::Ptr<_213cda8b8_Package>* _7933_p, jule::Slice<jule::Ptr<_213d11988_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8eb0500:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8eb0d08:;
					if (it != expr_end) {
						jule::Ptr<_213d11988_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_Binded))) && (!(_8125_v.get()._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1b8eb0d08:;
						++it;
						goto _iter_begin_1b8eb0d08;
					}
					_iter_end_1b8eb0d08:;
				};
			}
			_iter_next_1b8eb0500:;
			++it;
			goto _iter_begin_1b8eb0500;
		}
		_iter_end_1b8eb0500:;
	};
}



inline jule::Slice<jule::Ptr<_213d11988_Var>> _1cdcd7961_GetAllGlobals(_1cdcd6784_IR* _self_) {
	jule::Slice<jule::Ptr<_213d11988_Var>> _9217_buffer = nullptr;;
	_1cdcd76ec_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8eb14e0:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_Binded))) {
					_1cdcd76ec_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1b8eb14e0:;
			++it;
			goto _iter_begin_1b8eb14e0;
		}
		_iter_end_1b8eb14e0:;
	};
	return _9217_buffer;;
}



inline void _1cdcd7b3c_Order(_1cdcd6784_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1cdcd73cd_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1cdcd7961_GetAllGlobals(_self_);
	static__1cdcd98b9_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1cdcd9ac8_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _1cdcd6784_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _213c64765_Str(_213c64402_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		(_25017_kind).append("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7d62381:;
			if (it != expr_end) {
				jule::Ptr<_213d870a2_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_213d88bdb_Str((*(_25420_g)).get()._field_Kind.ptr());
					(_25017_kind).append(",", 1);
				}
				_iter_next_1b7d62381:;
				++it;
				goto _iter_begin_1b7d62381;
			}
			_iter_end_1b7d62381:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		(_25017_kind).append("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _213c64a73_Equal(jule::Ptr<_213c64402_StructIns> _self_, jule::Ptr<_213d88834_TypeKind> _26521_other) {
	jule::Ptr<_213c64402_StructIns> _26613_s = _213d8c4a3_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I32 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_213d88ee9_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1b7d654c7:;
	}
	_iter_end_1b7d654c7:;;
	return true;;
}



inline jule::Bool _213c64ee6_Same(_213c64402_StructIns* _self_, jule::Ptr<_213c64402_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d6752e:;
		if (it != expr_end) {
			jule::I32 _29713_i = it - expr->begin();
			jule::Ptr<_213d870a2_InsGeneric> *_29716_g = it;
			{
				jule::Ptr<_213d870a2_InsGeneric> _29817_g2 = _29319_s.get()._field_Generics[_29713_i];;
				if ((((*(_29716_g)).get()._field_Kind.get()._field_BindIdent != _29817_g2.get()._field_Kind.get()._field_BindIdent) || (!(_213d88ee9_Equal((*(_29716_g)).get()._field_Kind, _29817_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b7d6752e:;
			++it;
			_29713_i++;
			goto _iter_begin_1b7d6752e;
		}
		_iter_end_1b7d6752e:;
	};
	return true;;
}



inline jule::Ptr<_213c76a0d_Fn> _213c6539d_FindMethod(_213c64402_StructIns* _self_, jule::Str _30829_ident, jule::Bool _30841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d696a7:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _30921_f = *it;
			{
				if (((_30921_f.get()._field_Statically == _30841_statically) && (_30921_f.get()._field_Ident == _30829_ident))) {
					return _30921_f;;
				};
			}
			_iter_next_1b7d696a7:;
			++it;
			goto _iter_begin_1b7d696a7;
		}
		_iter_end_1b7d696a7:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c6390c_FieldIns> _213c656ab_FindField(_213c64402_StructIns* _self_, jule::Str _31928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d69dc2:;
		if (it != expr_end) {
			jule::Ptr<_213c6390c_FieldIns> _32021_f = *it;
			{
				if ((_32021_f.get()._field_Decl.get()._field_Ident == _31928_ident)) {
					return _32021_f;;
				};
			}
			_iter_next_1b7d69dc2:;
			++it;
			goto _iter_begin_1b7d69dc2;
		}
		_iter_end_1b7d69dc2:;
	};
	return nullptr;;
}



inline jule::Ptr<_213d11988_Var> _213c659b9_FindStatic(_213c64402_StructIns* _self_, jule::Str _33029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d6b962:;
		if (it != expr_end) {
			jule::Ptr<_213d11988_Var> _33121_v = *it;
			{
				if ((_33121_v.get()._field_Ident == _33029_ident)) {
					return _33121_v;;
				};
			}
			_iter_next_1b7d6b962:;
			++it;
			goto _iter_begin_1b7d6b962;
		}
		_iter_end_1b7d6b962:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _213c64402_StructIns _Src) {
	_Stream << _213c64765_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_211160dea_Cmd> static__211161307_New(jule::Str _2619_path) {
	return jule::new_ptr<_211160dea_Cmd>(_211160dea_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _2111614d3_Spawn(_211160dea_Cmd* _self_) {
	({
		auto except = _2111a5428_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _211161923_Wait(_211160dea_Cmd* _self_) {
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(({
		auto except = _2111a5868_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I32>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _2111a5428_spawn(_211160dea_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:78:13"));;
	};
	jule::Str _8013_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8113_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8113_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0));
	};
	if ((_22a87d741_Fcntl(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])), F_SETFD, static_cast<jule::I32>((fcntl(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_22a8aaaae_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[0LL])));
		_22a8aaaae_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I32>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1b73d9e04:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type0));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1b73d93dc:;
			{
				_22a8aaaae_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[0LL])));
				jule::Slice<jule::Str> _9621_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9621_args[0LL]=_8013_path;
				(_9621_args).append((*(_self_))._field_Args);;
				({
					auto except = _2111a51e7_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_2111a4ed8_execvp(&(_8013_path), &(_9621_args));
				jule::Str _10117_code = _2111a15cd_Itoa(static_cast<jule::I32>(_2299ad564_GetLastErrno()));;
				{
					_22a8aae99_Write(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])), (&(_10117_code[0LL])), static_cast<jule::U32>(static_cast<jule::U32>(_10117_code.len())));
				};
				_22a8aaaae_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])));
				_2111a6a9a_Exit(1LL);
			}
		}
		else {
			_case_begin_1b73d6c14:;
			{
				_22a8aaaae_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[1LL])));
				jule::Array<jule::U8,16> _10721_buf = jule::Array<jule::U8,16>(0);;
				jule::I32 _10817_n = _22a8aa73a_Read(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[0LL])), (&(_10721_buf[0LL])), 16LLU);;
				_22a8aaaae_Close(static_cast<jule::I32>(static_cast<jule::I32>(_8113_pipe[0LL])));
				if ((_10817_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I32 _11222_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21116269e_AtoiBp((&(_10721_buf[0LL])), _10817_n);
						_11222_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_2111a60a5_processErrorFromCode(_11222_code), &__jule_any_type0));
				};
			}
		}
		_match_end_1b73d6bae:;
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I32> _2111a5868_wait(_211160dea_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:130:13"));;
	};
	jule::I32 _13217_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13217_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I32>(jule::Any(_2111a62e7_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I32>(jule::Any(), static_cast<jule::I32>(WEXITSTATUS(_13217_stat)));;
}







std::ostream &operator<<(std::ostream &_Stream, _211160dea_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _22a8405e3_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _22a869e9c_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	{
		return static_cast<jule::Str>(_6924_s);;
	};
}



inline jule::I32 _2299ad564_GetLastErrno(void) {
	return errno;;
}



inline jule::I32 _22a87d741_Fcntl(jule::I32 _5410_handle, jule::I32 _5423_cmd, jule::I32 _5433_arg) {
	return static_cast<jule::I32>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I32 _22a87da82_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I32>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I32 _22a87de6c_Open(jule::U8* _6416_path, jule::I32 _6429_flag, jule::I32 _6440_mode) {
	return static_cast<jule::I32>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _22a87e2ad_Getcwd(jule::U8* _7018_buff, jule::U32 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _22a87e786_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _22a87ea2d_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I32 _22a87ecc5_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I32>(closedir(_8124_dir));;
}



inline jule::I32 _22a880655_Mkdir(jule::U8* _9017_path, jule::I32 _9030_mode) {
	return static_cast<jule::I32>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I32 _22a8808ec_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I32>(rmdir(((char*)(_9517_path))));;
}



inline jule::I32 _22a880b94_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I32>(unlink(((char*)(_9818_path))));;
}



inline jule::I32 _22a8aa73a_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return static_cast<jule::I32>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I32 _22a8aaaae_Close(jule::I32 _2510_handle) {
	return static_cast<jule::I32>(close(_2510_handle));;
}



inline jule::I32 _22a8aae99_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return static_cast<jule::I32>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _22a8ab1a8_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _22a8bd2db_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _22a8bd990_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I32 _22a96b8b7_getLastOsError(void) {
	jule::I32 _309_err = _2299ad564_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1b66ab21a:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b66aab21:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1b66aab98:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1b66aac20:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b66aae51:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1b66aaeb7:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1b66ab02d:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else {
			_case_begin_1b66aa9cd:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1b66aa978:;
	};
}



inline jule::Slice<jule::Str> _22a970bda_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _22a97115d_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _22a971a21_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _22a971a21_getwd(void) {
	jule::U8* _1113_buff = _22a87e2ad_Getcwd(nullptr, 0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_22a96b8b7_getLastOsError(), &__jule_any_type0));
	};
	jule::Str _159_pwd = _22a869e9c_BytePtrToStr(_1113_buff);;
	{
		_22a8405e3_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _22c652447_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_22c6b26b6__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _22c6ba9ee_isExcludingLatin(_22c65b62c_Letter, _7613_r);;
}



inline jule::Bool _22c6b9e1b_is16(jule::Slice<_22c6b8359_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b727e491:;
			if (it != expr_end) {
				jule::I32 _19313_i = it - expr->begin();
				{
					_22c6b8359_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1b727e491:;
				++it;
				_19313_i++;
				goto _iter_begin_1b727e491;
			}
			_iter_end_1b727e491:;
		};
		return false;;
	};
	jule::I32 _20813_lo = 0LL;;
	jule::I32 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I32 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_22c6b8359_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I32>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1b727e062:;
	}
	_iter_end_1b727e062:;;
	return false;;
}



inline jule::Bool _22c6ba25c_is32(jule::Slice<_22c6b87cc_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7285046:;
			if (it != expr_end) {
				jule::I32 _23013_i = it - expr->begin();
				{
					_22c6b87cc_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1b7285046:;
				++it;
				_23013_i++;
				goto _iter_begin_1b7285046;
			}
			_iter_end_1b7285046:;
		};
		return false;;
	};
	jule::I32 _24513_lo = 0LL;;
	jule::I32 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I32 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_22c6b87cc_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I32>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1b72820ba:;
	}
	_iter_end_1b72820ba:;;
	return false;;
}



inline jule::Bool _22c6ba9ee_isExcludingLatin(jule::Ptr<_22c6b8c50_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_22c6b8359_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I32 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _22c6b9e1b_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_22c6b87cc_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _22c6ba25c_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _22c6bac96_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_22c6b26b6__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _22c6ba9ee_isExcludingLatin(_22c662b83_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _210ee97de_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _210ee86bc_first[static_cast<jule::I32>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1959_sz = static_cast<jule::I32>((_1879_x & 7LLU));;
	_210ee8c50_acceptRange _1969_accept = _210ee905d_acceptRanges[static_cast<jule::I32>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _210ee9b0d_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _210ee86bc_first[static_cast<jule::I32>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2429_sz = static_cast<jule::I32>((_2349_x & 7LLU));;
	_210ee8c50_acceptRange _2439_accept = _210ee905d_acceptRanges[static_cast<jule::I32>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _210ee9da5_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _2809_end = _27619_p.len();;
	jule::I32 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_210eeb77a_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1b72c5460;
			};
		}
	_iter_next_1b72c5460:;
	}
	_iter_end_1b72c5460:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee97de_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _210eeab53_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _210eeae94_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _210eeae94_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1b72d7791:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1b72d9496:;
			{
				_41242_r=128LL;
				goto _case_begin_1b72d7ad2;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1b72d7ad2:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1b72d710e:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1b72d7098:;
	};
}



inline jule::I32 _210eeb4d3_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1b72e2da6;
			};
			jule::U8 _48213_x = _210ee86bc_first[static_cast<jule::I32>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1b72e2da6;
			};
			jule::I32 _48717_size = static_cast<jule::I32>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1b72e2da6;
			};
			_210ee8c50_acceptRange _49213_accept = _210ee905d_acceptRanges[static_cast<jule::I32>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1b72e2da6:;
	}
	_iter_end_1b72e2da6:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _210eeb77a_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _21101d45b_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7313c0c:;
		if (it != expr_end) {
			jule::I32 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1b7313c0c:;
			++it;
			_399_i++;
			goto _iter_begin_1b7313c0c;
		}
		_iter_end_1b7313c0c:;
	};
	return -1LL;;
}



inline jule::I32 _21103077b_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _549_first = (&(_5017_s[0LL]));;
	jule::U8* _5513_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5513_it >= _549_first); (_5513_it)--) {
		{
			{
				if (((*(_5513_it)) == _5028_b)) {
					return static_cast<jule::I32>(((jule::I32)((_5513_it - _549_first))));;
				};
			};
		}
	_iter_next_1b731446b:;
	}
	_iter_end_1b731446b:;;
	return -1LL;;
}



inline jule::I32 _211030a45_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I32>(_21101d45b_FindByte(_22a8bd2db_Stobs(_6717_s), _6725_b));;
}



inline jule::I32 _211030d86_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I32>(_21103077b_FindLastByte(_22a8bd2db_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _21103124e_Repeat(jule::Str _1211_s, jule::I32 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(2147483647LL,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1b7328d10:;
	}
	_iter_end_1b7328d10:;;
	return _2013_ss;;
}



inline jule::Bool _21103167d_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I32 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I32 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_3213_i + 1LL));
		jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1b732b8b2:;
	}
	_iter_end_1b732b8b2:;;
	return true;;
}



inline jule::Bool _2110319be_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _21103167d_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _211031e31_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I32 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I32>(((*(_4615_s)).len() - _4638_start));
	jule::I32 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1b732d6e9:;
	}
	_iter_end_1b732d6e9:;;
	return true;;
}



inline jule::Bool _21103223e_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _211031e31_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I32 _211032629_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I32 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_21103167d_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1b73314bb:;
	}
	_iter_end_1b73314bb:;;
	return -1LL;;
}



inline jule::I32 _211032e65_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I32 _9333_i) {
	jule::I32 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I32 _10017_k = _9413_j;;
			jule::I32 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I32 ___jule_assign_arg = static_cast<jule::I32>((_10017_k + 1LL));
				jule::I32 _1___jule_assign_arg = static_cast<jule::I32>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1b73340b2;
					};
				}
			_iter_next_1b73355d0:;
			}
			_iter_end_1b73355d0:;;
			return _9413_j;;
		}
	_iter_next_1b73340b2:;
	}
	_iter_end_1b73340b2:;;
	return -1LL;;
}



inline jule::I32 _2110332a6_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I32>(_211032e65_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I32>((_11513_s.len() - 1LL))));;
}



inline jule::I32 _21103454e_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I32 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I32 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee97de_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1b733cad2:;
	}
	_iter_end_1b733cad2:;;
	return -1LL;;
}



inline jule::I32 _211034d8a_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I32>(_211030d86_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I32 _211035b9e_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _22a8bd2db_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _22a8bd2db_Stobs(&(_22820_runes));;
	jule::I32 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I32 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee97de_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21103454e_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1b7342cc4:;
	}
	_iter_end_1b7342cc4:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _2110363ca_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I32 _26232_n) {
	jule::I32 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I32>(_26210_s.len());
	};
	jule::I32 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I32 _27613_j = _211032629_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1b7349050;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i, _27613_j)); };
			_27413_i=static_cast<jule::I32>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1b7349050:;
	}
	_iter_end_1b7349050:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i)); };
	};
	return _26713_parts;;
}



inline jule::Bool _21103671b_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_211032629_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _2110371de_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_211035b9e_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I32 _211037530_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _31613_n = 0LL;;
	jule::I32 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I32 _31913_j = _211032629_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1b7353ee4;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I32>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1b7353ee4:;
	}
	_iter_end_1b7353ee4:;;
	return _31613_n;;
}



inline jule::Str _2110379b4_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I32 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I32 _3379_m = _211037530_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I32 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I32 _34813_j = _211032629_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1b7357877;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I32>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1b7357877:;
	}
	_iter_end_1b7357877:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _211034a27_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I32 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I32 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee97de_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21103454e_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1b735c283:;
	}
	_iter_end_1b735c283:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _211038a70_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _22a8bd2db_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _22a8bd2db_Stobs(&(_40321_cutset));;
	_211034a27_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _211038d28_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I32 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I32 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee9da5_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_21103454e_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1b735ecd0:;
	}
	_iter_end_1b735ecd0:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _2110394aa_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _22a8bd2db_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _22a8bd2db_Stobs(&(_43417_cutset));;
	_211034a27_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_211038d28_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _2110397eb_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b7363b6e:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b7363c7e:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1b7363ae7:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b73649b6:;
		if (it != expr_end) {
			jule::Str *_45212_part = it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=(*(_45212_part));
			}
			_iter_next_1b73649b6:;
			++it;
			goto _iter_begin_1b73649b6;
		}
		_iter_end_1b73649b6:;
	};
	return _45113_s;;
}



inline jule::Str _21103aec3_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I32 _1109_volLen = _21103db63_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _21103d5d0_IsPathSep(_1099_originalPath[0LL])) && _21103d5d0_IsPathSep(_1099_originalPath[1LL]))) {
			return _21103b556_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _21103d5d0_IsPathSep(_10814_path[0LL]);;
	jule::I32 _1269_n = _10814_path.len();;
	_21103a214_lazyBuff _12713_out = _21103a214_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I32 _13214_r = 0;;
	jule::I32 _13221_dotdot = 0;;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_21103a8b8_append(&_12713_out, 47LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_21103d5d0_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1b7374278:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _21103d5d0_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1b7375d3a:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _21103d5d0_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1b7375da1:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1b73781d3:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_21103d5d0_IsPathSep(static_cast<jule::U8>(_21103a643_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1b7378cb6:;
									}
									_iter_end_1b7378cb6:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1b7378579:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_21103a8b8_append(&_12713_out, 47LLU);
									};
									_21103a8b8_append(&_12713_out, '.');
									_21103a8b8_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1b7378502:;
						};
					}
				}
				else {
					_case_begin_1b7371e13:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_21103a8b8_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_21103d5d0_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_21103a8b8_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1b7374bd5:;
						}
						_iter_end_1b7374bd5:;;
					}
				}
				_match_end_1b7371d8b:;
			};
		}
	_iter_next_1b7371ce2:;
	}
	_iter_end_1b7371ce2:;;
	if ((_12713_out._field_w == 0LL)) {
		_21103a8b8_append(&_12713_out, '.');
	};
	return _21103b556_FromSlash(_21103ab2c_string(&_12713_out));;
}



inline jule::Str _21103b556_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _21103b875_Join(jule::Slice<jule::Str> _2259_elem) {
	return _21103e229_join(_2259_elem);;
}



inline jule::Str _21103bb1c_Ext(jule::Str _2308_path) {
	jule::I32 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_21103d5d0_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1b737bdb8:;
	}
	_iter_end_1b737bdb8:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _21103bdb4_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21103de82_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _21103c15b_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _21103d5d0_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_1b737e20b:;
	}
	_iter_end_1b737e20b:;;
	(_25413_path).mut_slice(_21103c777_VolumeName(_25413_path).len());;
	jule::I32 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_21103d5d0_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1b7380b69:;
	}
	_iter_end_1b7380b69:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return jule::Str("/", 1);;
	};
	return _25413_path;;
}



inline jule::Str _21103c4d0_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _21103c777_VolumeName(_2858_path);;
	jule::I32 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_21103d5d0_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1b7382b9e:;
	}
	_iter_end_1b7382b9e:;;
	jule::Str _2919_dir = _21103aec3_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if ((_2919_dir.equal(".", 1) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _21103c777_VolumeName(jule::Str _30315_path) {
	return _21103b556_FromSlash(_30315_path.slice(0LL, _21103db63_volumeNameLen(_30315_path)));;
}



inline jule::Bool _21103d5d0_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _21103d8bb_IsAbs(jule::Str _5310_path) {
	return _2110319be_HasPrefix(_5310_path, jule::Str("/", 1));;
}



inline jule::I32 _21103db63_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _21103de82_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_21103d8bb_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _21103aec3_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _22a97115d_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _21103e229_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _21103e229_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b738ac2e:;
		if (it != expr_end) {
			jule::I32 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if ((!((*(_7412_e)).empty()))) {
					return _21103aec3_Clean(_2110397eb_Join(_739_elem.slice(_749_i), jule::Str("/", 1)));;
				};
			}
			_iter_next_1b738ac2e:;
			++it;
			_749_i++;
			goto _iter_begin_1b738ac2e;
		}
		_iter_end_1b738ac2e:;
	};
	return jule::Str();;
}



inline jule::I32 _22a8b0ae7_getLastFsError(void) {
	jule::I32 _729_err = _2299ad564_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1b7399534:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b7398c09:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1b7398e29:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1b7398e90:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b7399006:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1b739906c:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1b7399655:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1b73996bb:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1b7399732:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1b7399798:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1b7399820:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1b7399897:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b739991e:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1b7399996:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1b7399a1d:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1b7399a95:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1b7399b1c:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1b7399b94:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1b7399c1b:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1b7399c93:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1b7399d1a:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1b7399d92:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1b7399e19:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1b7399e91:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1b739a018:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1b739a090:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1b739a117:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1b739a18e:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1b7398ce7:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1b7398c92:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _21116269e_AtoiBp(jule::U8* _922_b, jule::I32 _936_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _1013_neg = ((*(_922_b)) == '-');;
	if (_1013_neg) {
		if ((_936_n == 1LL)) {
			return __jule_func_result;;
		};
		(_936_n)--;
		(_922_b)++;
	};
	for (; (_936_n > 0LL); (_936_n)--) {
		{
			if ((('0' <= (*(_922_b))) && ((*(_922_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I32>(((*(_922_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_922_b)++;
		}
	_iter_next_1b73be4d2:;
	}
	_iter_end_1b73be4d2:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_1013_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I32>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _2111a15cd_Itoa(jule::I32 _69_x) {
	if ((_69_x < 0LL)) {
		return (jule::Str("-", 1) + _2111a18b9_Utoa(static_cast<jule::U32>(static_cast<jule::U32>((-(_69_x))))));;
	};
	return _2111a18b9_Utoa(static_cast<jule::U32>(static_cast<jule::U32>(_69_x)));;
}



inline jule::Str _2111a18b9_Utoa(jule::U32 _1413_x) {
	if ((_1413_x == 0LLU)) {
		return jule::Str("0", 1);;
	};
	jule::Str _1813_buf = jule::Str::alloc(20LL);;
	jule::I32 _1913_i = (_1813_buf.len() - 1LL);;
	while ((_1413_x >= 10LLU)) {
		{
			jule::U32 _2113_q = (_1413_x / 10LLU);;
			_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1413_x) - (_2113_q * 10LLU))));
			(_1913_i)--;
			_1413_x=_2113_q;
		}
	_iter_next_1b73c6143:;
	}
	_iter_end_1b73c6143:;;
	_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1413_x)));
	(_1813_buf).mut_slice(_1913_i);;
	return _1813_buf;;
}



inline jule::Slice<char*> _2111a4b97_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s) {
	jule::Slice<char*> _3613_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73e3649:;
		if (it != expr_end) {
			jule::I32 _379_i = it - expr->begin();
			{
				_3613_cs[_379_i]=((char*)((&((*(_3525_s))[_379_i][0LL]))));
			}
			_iter_next_1b73e3649:;
			++it;
			_379_i++;
			goto _iter_begin_1b73e3649;
		}
		_iter_end_1b73e3649:;
	};
	_3613_cs[(_3613_cs.len() - 1LL)]=nullptr;
	return _3613_cs;;
}



inline jule::I32 _2111a4ed8_execvp(jule::Str* _4412_file, jule::Slice<jule::Str>* _4424_argv) {
	jule::Slice<char*> _459_cargv = _2111a4b97_strSliceToCstrSlice(_4424_argv);;
	{
		return static_cast<jule::I32>(execvp(((char*)((&((*(_4412_file))[0LL])))), (char*const*)(&(_459_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _2111a51e7_setenv(jule::Slice<jule::Str>* _5112_envv) {
	;
	{
		auto expr = _5112_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73e61eb:;
		if (it != expr_end) {
			jule::Str *_5312_env = it;
			{
				jule::I32 _5413_i = _211030a45_FindByteStr(_5312_env, '=');;
				if ((_5413_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
				};
				{
					jule::Str _5917_key = (*(_5312_env)).slice(0LL, _5413_i);;
					if ((((*(_5312_env)).len() - _5413_i) == 1LL)) {
						jule::Str _6121_val = jule::Str("\x00", 1);;
						if ((setenv(((char*)((&(_5917_key[0LL])))), ((char*)((&(_6121_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
						};
					} else {
						jule::Str _6621_val = (*(_5312_env)).slice((_5413_i + 1LL));;
						if ((setenv(((char*)((&(_5917_key[0LL])))), ((char*)((&(_6621_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
						};
					};
				};
			}
			_iter_next_1b73e61eb:;
			++it;
			goto _iter_begin_1b73e61eb;
		}
		_iter_end_1b73e61eb:;
	};
	return jule::VoidExceptional();
}



inline jule::I32 _2111a60a5_processErrorFromCode(jule::I32 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1b73eaad5:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b73e655e:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1b73e7670:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1b73ea7d8:;
	};
}



inline jule::I32 _2111a62e7_getLastProcessError(void) {
	return _2111a60a5_processErrorFromCode(static_cast<jule::I32>(_2299ad564_GetLastErrno()));;
}



inline void _2111a6a9a_Exit(jule::I32 _129_code) {
	_22a8ab1a8_Exit(_129_code);
}



inline jule::Str _2111a6c98_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _2110b171e_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _2110b19c7_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_2110414e5_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7420885:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1b7420885:;
			++it;
			goto _iter_begin_1b7420885;
		}
		_iter_end_1b7420885:;
	};
	return false;;
}



inline jule::Bool _2110b1c6e_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_2110ae8b5_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74219b8:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1b74219b8:;
			++it;
			goto _iter_begin_1b74219b8;
		}
		_iter_end_1b74219b8:;
	};
	{
		auto expr = &(_2110aead5_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b742203a:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1b742203a:;
			++it;
			goto _iter_begin_1b742203a;
		}
		_iter_end_1b742203a:;
	};
	return false;;
}



inline jule::Str _2110be71b_Logf(jule::Str _3169_fmt, jule::Slice<jule::Any> _31622_args) {
	return _2110c0134_applyFmt(_3169_fmt, _31622_args);;
}



inline jule::Str _2110bea07_argToStr(jule::Any _32013_arg) {
	{
		auto &_match_expr{ _32013_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b7423008:;
			{
				return _32013_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1b742369b:;
			{
				return jule::Str::from_byte(_32013_arg.cast<jule::U8>(&__jule_any_type132));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b7423712:;
			{
				return jule::Str::from_rune(_32013_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1b742327d:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1b7423091:;
	};
}



inline jule::I32 _2110bec9e_findNextFmt(jule::Str _33316_fmt) {
	{
		auto expr = &(_33316_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b742446b:;
		if (it != expr_end) {
			jule::I32 _3349_i = it - expr->begin();
			jule::U8 *_33412_b = it;
			{
				if (((*(_33412_b)) == '@')) {
					return _3349_i;;
				};
			}
			_iter_next_1b742446b:;
			++it;
			_3349_i++;
			goto _iter_begin_1b742446b;
		}
		_iter_end_1b742446b:;
	};
	return -1LL;;
}



inline jule::Str _2110c0134_applyFmt(jule::Str _34217_fmt, jule::Slice<jule::Any> _34227_args) {
	jule::Str _34313_s = jule::Str();;
	{
		auto expr = &(_34227_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7425912:;
		if (it != expr_end) {
			jule::Any *_34412_arg = it;
			{
				jule::I32 _34513_i = _2110bec9e_findNextFmt(_34217_fmt);;
				if ((_34513_i == -1LL)) {
					goto _iter_end_1b7425912;
				};
				_34313_s+=_34217_fmt.slice(0LL, _34513_i);
				_34313_s+=_2110bea07_argToStr((*(_34412_arg)));
				(_34217_fmt).mut_slice((_34513_i + 1LL));;
			}
			_iter_next_1b7425912:;
			++it;
			goto _iter_begin_1b7425912;
		}
		_iter_end_1b7425912:;
	};
	_34313_s+=_34217_fmt;
	return _34313_s;;
}



inline jule::Bool _2110c11ac_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _2110c25dc_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _2110c2895_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _2110c2b3c_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _2110c2e5b_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _2110c3203_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _2110c349a_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _2110c3742_IsUnix(jule::Str _5511_os) {
	return (_2110c2895_IsDarwin(_5511_os) || _2110c2b3c_IsLinux(_5511_os));;
}



inline jule::Bool _2110c3ab6_Is32Bit(jule::Str _5812_arch) {
	return _2110c2e5b_IsI386(_5812_arch);;
}



inline jule::Bool _2110c3d5d_Is64Bit(jule::Str _6112_arch) {
	return (_2110c3203_IsAmd64(_6112_arch) || _2110c349a_IsArm64(_6112_arch));;
}



inline void _2111a8030_init(void) {
	jule::Str _2513_path = _2111a6c98_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_2111a755c_PathWd=({
			auto except = _22a97115d_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_2111a72a4_PathExec=_21103c4d0_Dir(_2513_path);
		_2111a7084_PathStdlib=_21103b875_Join(jule::Slice<jule::Str>::make({_2111a72a4_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_2111a786a_PathApi=_21103b875_Join(jule::Slice<jule::Str>::make({_2111a72a4_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _2114c237c_IsUnaryOp(jule::U32 _33714_id) {
	{
		auto expr = &(_21142b6e3_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74723ed:;
		if (it != expr_end) {
			jule::U32 *_33812_op = it;
			{
				if ((_33714_id == (*(_33812_op)))) {
					return true;;
				};
			}
			_iter_next_1b74723ed:;
			++it;
			goto _iter_begin_1b74723ed;
		}
		_iter_end_1b74723ed:;
	};
	return false;;
}



inline jule::Bool _2114c2668_IsBinOp(jule::U32 _34712_id) {
	{
		auto expr = &(_21142b913_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7473102:;
		if (it != expr_end) {
			jule::U32 *_34812_op = it;
			{
				if ((_34712_id == (*(_34812_op)))) {
					return true;;
				};
			}
			_iter_next_1b7473102:;
			++it;
			goto _iter_begin_1b7473102;
		}
		_iter_end_1b7473102:;
	};
	return false;;
}



inline jule::Bool _2114c2c2e_IsStr(jule::Str _36710_k) {
	return ((!(_36710_k.empty())) && ((_36710_k[0LL] == '\"') || _2114c2ec6_IsRawStr(_36710_k)));;
}



inline jule::Bool _2114c2ec6_IsRawStr(jule::Str _37013_k) {
	return ((!(_37013_k.empty())) && (_37013_k[0LL] == '`'));;
}



inline jule::Bool _2114c326d_IsRune(jule::Str _37411_k) {
	return ((!(_37411_k.empty())) && (_37411_k[0LL] == '\''));;
}



inline jule::Bool _2114c3889_IsBool(jule::Str _38011_k) {
	return (_38011_k.equal("true", 4) || _38011_k.equal("false", 5));;
}



inline jule::Bool _2114c3b31_IsFloat(jule::Str _38312_k) {
	if (_2110319be_HasPrefix(_38312_k, jule::Str("0x", 2))) {
		return _2110371de_ContainsAny(_38312_k, jule::Str(".pP", 3));;
	};
	return _2110371de_ContainsAny(_38312_k, jule::Str(".eE", 3));;
}



inline jule::Bool _2114c3dc8_IsNum(jule::Str _39110_k) {
	if (_39110_k.empty()) {
		return false;;
	};
	jule::U8 _3969_b = _39110_k[0LL];;
	return ((_3969_b == '.') || (('0' <= _3969_b) && (_3969_b <= '9')));;
}



inline jule::Bool _2114c4417_IsIgnoreIdent(jule::Str _40618_ident) {
	return _40618_ident.equal("_", 1);;
}



inline jule::Bool _2114c46ae_IsAnonIdent(jule::Str _40916_ident) {
	return _40916_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _2114c4bed_IsSpace(jule::I32 _42212_r) {
	{
		auto expr = &(_21142b4c3_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b747a604:;
		if (it != expr_end) {
			jule::I32 *_42312_cr = it;
			{
				if ((_42212_r == (*(_42312_cr)))) {
					return true;;
				};
			}
			_iter_next_1b747a604:;
			++it;
			goto _iter_begin_1b747a604;
		}
		_iter_end_1b747a604:;
	};
	return false;;
}



inline jule::Bool _2114c514e_IsLetter(jule::I32 _43213_r) {
	return _22c652447_IsLetter(_43213_r);;
}



inline jule::Bool _2114c568d_IsDecimal(jule::U8 _45214_b) {
	return (('0' <= _45214_b) && (_45214_b <= '9'));;
}



inline jule::Bool _2114c5935_IsBinary(jule::U8 _45513_b) {
	return ((_45513_b == '0') || (_45513_b == '1'));;
}



inline jule::Bool _2114c5bcc_IsOctal(jule::U8 _45812_b) {
	return (('0' <= _45812_b) && (_45812_b <= '7'));;
}



inline jule::Bool _2114c5e74_IsHex(jule::U8 _46110_b) {
	{
		
		if ((('0' <= _46110_b) && (_46110_b <= '9'))) {
			_case_begin_1b747d97b:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46110_b) && (_46110_b <= 'f'))) {
			_case_begin_1b747d9e2:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46110_b) && (_46110_b <= 'F'))) {
			_case_begin_1b747da69:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b747d915:;
			{
				return false;;
			}
		}
		_match_end_1b747d67e:;
	};
}



inline jule::Bool _2114c621b_IsAssign(jule::U32 _47613_id) {
	return (((((((_47613_id == static_cast<jule::U32>(1LLU)) || (_47613_id == static_cast<jule::U32>(27LLU))) || (_47613_id == static_cast<jule::U32>(30LLU))) || (_47613_id == static_cast<jule::U32>(32LLU))) || (_47613_id == static_cast<jule::U32>(24LLU))) || (_47613_id == static_cast<jule::U32>(74LLU))) || (_47613_id == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _2114c64b3_IsPostfixOp(jule::U32 _48716_id) {
	{
		auto expr = &(_2114baed0_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7480021:;
		if (it != expr_end) {
			jule::U32 *_48812_op = it;
			{
				if ((_48716_id == (*(_48812_op)))) {
					return true;;
				};
			}
			_iter_next_1b7480021:;
			++it;
			goto _iter_begin_1b7480021;
		}
		_iter_end_1b7480021:;
	};
	return false;;
}



inline jule::Bool _2114c675a_IsAssignOp(jule::U32 _49715_id) {
	if (_2114c64b3_IsPostfixOp(_49715_id)) {
		return true;;
	};
	{
		auto expr = &(_2114bb2cc_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7481c04:;
		if (it != expr_end) {
			jule::U32 *_50112_op = it;
			{
				if ((_49715_id == (*(_50112_op)))) {
					return true;;
				};
			}
			_iter_next_1b7481c04:;
			++it;
			goto _iter_begin_1b7481c04;
		}
		_iter_end_1b7481c04:;
	};
	return false;;
}



inline jule::Ptr<_2114c700d_File> _2114c82b7_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_2114c700d_File>(_2114c700d_File{._field_Path=_5715_path, });;
}



inline _2110be2cb_Log _2114c9a5a_makeErr(jule::I32 _10212_row, jule::I32 _10222_col, jule::Ptr<_2114c700d_File>* _10233_f, jule::Str _10243_fmt, jule::Slice<jule::Any> _10256_args) {
	return _2110be2cb_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10212_row, ._field_Column=_10222_col, ._field_Path=(*(_10233_f)).get()._field_Path, ._field_Text=_2110be71b_Logf(_10243_fmt, _10256_args), };;
}



inline jule::Bool _2114c9de0_bytesHasPrefix(jule::Slice<jule::U8>* _11220_bytes, jule::Str _11235_prefix) {
	if (((*(_11220_bytes)).len() < _11235_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11235_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b748c160:;
		if (it != expr_end) {
			jule::I32 _1169_i = it - expr->begin();
			{
				if (((*(_11220_bytes))[_1169_i] != _11235_prefix[_1169_i])) {
					return false;;
				};
			}
			_iter_next_1b748c160:;
			++it;
			_1169_i++;
			goto _iter_begin_1b748c160;
		}
		_iter_end_1b748c160:;
	};
	return true;;
}



inline jule::Str _2114ca231_floatFmtE(jule::Slice<jule::U8>* _12415_txt, jule::I32 _12432_i) {
	jule::Str __jule_func_result;
	(_12432_i)++;
	if ((_12432_i >= (*(_12415_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _13013_b = (*(_12415_txt))[_12432_i];;
	if ((_13013_b == '_')) {
		return __jule_func_result;;
	};
	if (((_13013_b == '+') || (_13013_b == '-'))) {
		(_12432_i)++;
		if ((_12432_i >= (*(_12415_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12415_txt))[_12432_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1449_first = _12432_i;;
	for (; (_12432_i < (*(_12415_txt)).len()); (_12432_i)++) {
		{
			_13013_b=(*(_12415_txt))[_12432_i];
			if (((_13013_b != '_') && (!(_2114c568d_IsDecimal(_13013_b))))) {
				goto _iter_end_1b748ed99;
			};
		}
	_iter_next_1b748ed99:;
	}
	_iter_end_1b748ed99:;;
	if ((_12432_i == _1449_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12415_txt)).slice(0LL, _12432_i));
	return __jule_func_result;;
}



inline jule::Str _2114ca5b6_floatFmtP(jule::Slice<jule::U8>* _15815_txt, jule::I32 _15828_i) {
	return _2114ca231_floatFmtE(_15815_txt, _15828_i);;
}



inline jule::Str _2114ca907_floatFmtDotnp(jule::Slice<jule::U8>* _16219_txt, jule::I32 _16236_i) {
	if (((*(_16219_txt))[_16236_i] != '.')) {
		return jule::Str();;
	};
	(_16236_i)++;
	_julec_label_loop:;
	for (; (_16236_i < (*(_16219_txt)).len()); (_16236_i)++) {
		{
			jule::U8 _17013_b = (*(_16219_txt))[_16236_i];;
			{
				
				if ((_17013_b == '_') || _2114c568d_IsDecimal(_17013_b)) {
					_case_begin_1b749286e:;
					{
						goto _iter_next_1b74917e6;
					}
				}
				else if (_2114cc1ab_isFloatFmtP(_17013_b, _16236_i)) {
					_case_begin_1b74928e6:;
					{
						return _2114ca5b6_floatFmtP(_16219_txt, _16236_i);;
					}
				}
				else {
					_case_begin_1b74927a3:;
					{
						goto _iter_end_1b74917e6;
					}
				}
				_match_end_1b749273c:;
			};
		}
	_iter_next_1b74917e6:;
	}
	_iter_end_1b74917e6:;;
	return jule::Str();;
}



inline jule::Str _2114cac48_floatFmtDotfp(jule::Slice<jule::U8>* _18319_txt, jule::I32 _18336_i) {
	_18336_i+=2LL;
	return _2114ca231_floatFmtE(_18319_txt, _18336_i);;
}



inline jule::Str _2114cb089_floatFmtDotp(jule::Slice<jule::U8>* _18818_txt, jule::I32 _18835_i) {
	(_18835_i)++;
	return _2114ca231_floatFmtE(_18818_txt, _18835_i);;
}



inline jule::Str _2114cb4da_floatNum(jule::Slice<jule::U8>* _19314_txt, jule::I32 _19331_i) {
	jule::Str __jule_func_result;
	(_19331_i)++;
	if ((_19331_i >= (*(_19314_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19314_txt)));
		return __jule_func_result;;
	};
	if (((*(_19314_txt))[_19331_i] == '_')) {
		(_19331_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19314_txt)).slice(0LL, _19331_i));
		return __jule_func_result;;
	};
	for (; (_19331_i < (*(_19314_txt)).len()); (_19331_i)++) {
		{
			jule::U8 _20313_b = (*(_19314_txt))[_19331_i];;
			if (((_19331_i > 1LL) && ((_20313_b == 'e') || (_20313_b == 'E')))) {
				__jule_func_result = _2114ca231_floatFmtE(_19314_txt, _19331_i);
				return __jule_func_result;;
			};
			if (((_20313_b != '_') && (!(_2114c568d_IsDecimal(_20313_b))))) {
				goto _iter_end_1b74952ab;
			};
		}
	_iter_next_1b74952ab:;
	}
	_iter_end_1b74952ab:;;
	if ((_19331_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19314_txt)).slice(0LL, _19331_i));
	return __jule_func_result;;
}



inline jule::Str _2114cb782_commonNum(jule::Slice<jule::U8>* _21815_txt) {
	jule::Str __jule_func_result;
	jule::I32 _21913_i = 0LL;;
	_julec_label_loop:;
	for (; (_21913_i < (*(_21815_txt)).len()); (_21913_i)++) {
		{
			jule::U8 _22213_b = (*(_21815_txt))[_21913_i];;
			{
				
				if ((_22213_b == '.')) {
					_case_begin_1b74985cd:;
					{
						__jule_func_result = _2114cb4da_floatNum(_21815_txt, _21913_i);
						return __jule_func_result;;
					}
				}
				else if ((_22213_b == '_')) {
					_case_begin_1b7498655:;
					{
						goto _iter_next_1b74979ea;
					}
				}
				else if (_2114cbd6a_isFloatFmtE(_22213_b, _21913_i)) {
					_case_begin_1b74986cc:;
					{
						__jule_func_result = _2114ca231_floatFmtE(_21815_txt, _21913_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_2114c568d_IsDecimal(_22213_b)))) {
					_case_begin_1b7498754:;
					{
						goto _iter_end_1b74979ea;
					}
				}
				_match_end_1b7498501:;
			};
		}
	_iter_next_1b74979ea:;
	}
	_iter_end_1b74979ea:;;
	if ((_21913_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21815_txt)).slice(0LL, _21913_i));
	return __jule_func_result;;
}



inline jule::Str _2114cba29_binaryNum(jule::Slice<jule::U8>* _24115_txt) {
	jule::Str __jule_func_result;
	if ((!(_2114c9de0_bytesHasPrefix(_24115_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_24115_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _25013_i = 2LL;;
	for (; (_25013_i < (*(_24115_txt)).len()); (_25013_i)++) {
		{
			if ((((*(_24115_txt))[_25013_i] != '_') && (!(_2114c5935_IsBinary((*(_24115_txt))[_25013_i]))))) {
				goto _iter_end_1b749b548;
			};
		}
	_iter_next_1b749b548:;
	}
	_iter_end_1b749b548:;;
	if ((_25013_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_24115_txt)).slice(0LL, _25013_i));
	return __jule_func_result;;
}



inline jule::Bool _2114cbd6a_isFloatFmtE(jule::U8 _26316_b, jule::I32 _26325_i) {
	return ((_26325_i > 0LL) && ((_26316_b == 'e') || (_26316_b == 'E')));;
}



inline jule::Bool _2114cc1ab_isFloatFmtP(jule::U8 _26716_b, jule::I32 _26725_i) {
	return ((_26725_i > 0LL) && ((_26716_b == 'p') || (_26716_b == 'P')));;
}



inline jule::Bool _2114cc4ec_isFloatFmtDotnp(jule::Slice<jule::U8>* _27121_txt, jule::I32 _27138_i) {
	if (((*(_27121_txt))[_27138_i] != '.')) {
		return false;;
	};
	(_27138_i)++;
	_julec_label_loop:;
	for (; (_27138_i < (*(_27121_txt)).len()); (_27138_i)++) {
		{
			jule::U8 _27813_b = (*(_27121_txt))[_27138_i];;
			{
				
				if ((_27813_b == '_') || _2114c568d_IsDecimal(_27813_b)) {
					_case_begin_1b749eedb:;
					{
						goto _iter_next_1b749dd97;
					}
				}
				else if (_2114cc1ab_isFloatFmtP(_27813_b, _27138_i)) {
					_case_begin_1b74a0063:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1b749ee20:;
					{
						goto _iter_end_1b749dd97;
					}
				}
				_match_end_1b749eda9:;
			};
		}
	_iter_next_1b749dd97:;
	}
	_iter_end_1b749dd97:;;
	return false;;
}



inline jule::Bool _2114cc83d_isFloatFmtDotp(jule::Slice<jule::U8>* _29220_txt, jule::I32 _29233_i) {
	{
		
		if (((*(_29220_txt)).len() < 3LL)) {
			_case_begin_1b74a12a6:;
			{
				goto _case_begin_1b74a132d;
			}
		}
		else if (((*(_29220_txt))[_29233_i] != '.')) {
			_case_begin_1b74a132d:;
			{
				goto _case_begin_1b74a13a5;
			}
		}
		else if ((((*(_29220_txt))[(_29233_i + 1LL)] != 'p') && ((*(_29220_txt))[(_29233_i + 1LL)] != 'P'))) {
			_case_begin_1b74a13a5:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b74a1240:;
			{
				return true;;
			}
		}
		_match_end_1b74a1174:;
	};
}



inline jule::Bool _2114ccb7e_isFloatFmtDotfp(jule::Slice<jule::U8>* _30521_txt, jule::I32 _30534_i) {
	{
		
		if (((*(_30521_txt)).len() < 4LL)) {
			_case_begin_1b74a3000:;
			{
				goto _case_begin_1b74a3077;
			}
		}
		else if (((*(_30521_txt))[_30534_i] != '.')) {
			_case_begin_1b74a3077:;
			{
				goto _case_begin_1b74a30ee;
			}
		}
		else if ((((*(_30521_txt))[(_30534_i + 1LL)] != 'f') && ((*(_30521_txt))[(_30534_i + 1LL)] != 'F'))) {
			_case_begin_1b74a30ee:;
			{
				goto _case_begin_1b74a3176;
			}
		}
		else if ((((*(_30521_txt))[(_30534_i + 2LL)] != 'p') && ((*(_30521_txt))[(_30534_i + 1LL)] != 'P'))) {
			_case_begin_1b74a3176:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b74a2b37:;
			{
				return true;;
			}
		}
		_match_end_1b74a2a6b:;
	};
}



inline jule::Str _2114cd0d0_octalNum(jule::Slice<jule::U8>* _32014_txt) {
	jule::Str __jule_func_result;
	if (((*(_32014_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_32014_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _32813_octalStart = 1LL;;
	jule::Bool _33013_o = false;;
	if (((*(_32014_txt))[1LL] == 'o')) {
		if (((*(_32014_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_32813_octalStart)++;
		_33013_o=true;
	};
	jule::I32 _33913_i = _32813_octalStart;;
	for (; (_33913_i < (*(_32014_txt)).len()); (_33913_i)++) {
		{
			jule::U8 _34113_b = (*(_32014_txt))[_33913_i];;
			if ((_34113_b == '.')) {
				if (_33013_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _2114cb4da_floatNum(_32014_txt, _33913_i);
				return __jule_func_result;;
			};
			if (_2114cbd6a_isFloatFmtE(_34113_b, _33913_i)) {
				__jule_func_result = _2114ca231_floatFmtE(_32014_txt, _33913_i);
				return __jule_func_result;;
			};
			if (((_34113_b != '_') && (!(_2114c5bcc_IsOctal(_34113_b))))) {
				goto _iter_end_1b74a77eb;
			};
		}
	_iter_next_1b74a77eb:;
	}
	_iter_end_1b74a77eb:;;
	if ((_33913_i == _32813_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_32014_txt)).slice(0LL, _33913_i));
	return __jule_func_result;;
}



inline jule::Str _2114cd377_hexNum(jule::Slice<jule::U8>* _36212_txt) {
	jule::Str __jule_func_result;
	if (((*(_36212_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36212_txt))[0LL] != '0') || (((*(_36212_txt))[1LL] != 'x') && ((*(_36212_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _37113_i = 2LL;;
	_julec_label_loop:;
	for (; (_37113_i < (*(_36212_txt)).len()); (_37113_i)++) {
		{
			jule::U8 _37413_b = (*(_36212_txt))[_37113_i];;
			{
				
				if (_2114cc83d_isFloatFmtDotp(_36212_txt, _37113_i)) {
					_case_begin_1b74b1b13:;
					{
						__jule_func_result = _2114cb089_floatFmtDotp(_36212_txt, _37113_i);
						return __jule_func_result;;
					}
				}
				else if (_2114ccb7e_isFloatFmtDotfp(_36212_txt, _37113_i)) {
					_case_begin_1b74b1b8a:;
					{
						__jule_func_result = _2114cac48_floatFmtDotfp(_36212_txt, _37113_i);
						return __jule_func_result;;
					}
				}
				else if (_2114cc1ab_isFloatFmtP(_37413_b, _37113_i)) {
					_case_begin_1b74b1c12:;
					{
						__jule_func_result = _2114ca5b6_floatFmtP(_36212_txt, _37113_i);
						return __jule_func_result;;
					}
				}
				else if (_2114cc4ec_isFloatFmtDotnp(_36212_txt, _37113_i)) {
					_case_begin_1b74b1c89:;
					{
						__jule_func_result = _2114ca907_floatFmtDotnp(_36212_txt, _37113_i);
						return __jule_func_result;;
					}
				}
				else if (((_37413_b != '_') && (!(_2114c5e74_IsHex(_37413_b))))) {
					_case_begin_1b74b1d11:;
					{
						goto _iter_end_1b74b1096;
					}
				}
				_match_end_1b74b1a25:;
			};
		}
	_iter_next_1b74b1096:;
	}
	_iter_end_1b74b1096:;;
	if ((_37113_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36212_txt)).slice(0LL, _37113_i));
	return __jule_func_result;;
}



inline jule::Str _2114cd6b8_hexEscape(jule::Slice<jule::U8>* _39515_txt, jule::I32 _39528_n) {
	jule::Str __jule_func_result;
	if (((*(_39515_txt)).len() < _39528_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _40113_i = 2LL;;
	for (; (_40113_i < _39528_n); (_40113_i)++) {
		{
			if ((!(_2114c5e74_IsHex((*(_39515_txt))[_40113_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1b74b4352:;
	}
	_iter_end_1b74b4352:;;
	__jule_func_result=static_cast<jule::Str>((*(_39515_txt)).slice(0LL, _39528_n));
	return __jule_func_result;;
}



inline jule::Str _2114cd960_bigUnicodePointEscape(jule::Slice<jule::U8>* _41327_txt) {
	return _2114cd6b8_hexEscape(_41327_txt, 10LL);;
}



inline jule::Str _2114cdc29_littleUnicodePointEscape(jule::Slice<jule::U8>* _41830_txt) {
	return _2114cd6b8_hexEscape(_41830_txt, 6LL);;
}



inline jule::Str _2114cddd3_hexByteEscape(jule::Slice<jule::U8>* _42319_txt) {
	return _2114cd6b8_hexEscape(_42319_txt, 4LL);;
}



inline jule::Str _2114ce169_byteEscape(jule::Slice<jule::U8>* _42816_txt) {
	jule::Str __jule_func_result;
	if (((*(_42816_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_2114c5bcc_IsOctal((*(_42816_txt))[1LL]))) || (!(_2114c5bcc_IsOctal((*(_42816_txt))[2LL])))) || (!(_2114c5bcc_IsOctal((*(_42816_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42816_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_2110be2cb_Log> _2114d3b63_Lex(jule::Ptr<_2114c700d_File> _81012_f, jule::I32 _81022_mode) {
	if ((_81012_f == nullptr)) {
		return nullptr;;
	};
	_2114ce851_lex _81513_lex = _2114ce851_lex{._field_mode=_81022_mode, ._field_file=_81012_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_2114d239d_newLine(&_81513_lex);
	_2114d039b_lex(&_81513_lex);
	if ((_81513_lex._field_errors.len() > 0LL)) {
		return _81513_lex._field_errors;;
	};
	_81012_f.get()._field_Tokens=_81513_lex._field_tokens;
	return nullptr;;
}



inline jule::I32 _2121342eb_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I32>((64LL - _21213b776_Len64(_6119_x)));;
}



inline jule::I32 _212135231_TrailingZeros(jule::U32 _8318_x) {
	;
	return static_cast<jule::I32>(_212135dbe_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I32 _212135b27_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_212134906__DE_BRUIJN32_TAB[static_cast<jule::I32>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I32 _212135dbe_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(static_cast<jule::I32>(_212134ebc__DE_BRUIJN64_TAB[static_cast<jule::I32>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I32 _21213b4ce_Len32(jule::U32 _35214_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I32 _21213b776_Len64(jule::U64 _36614_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I32>((__jule_func_result + static_cast<jule::I32>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I32>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _21213c436_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _21213dab9_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _212064638_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _212064924_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _212064bbb_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _212064eda_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _2120674c6_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_22beebeac:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_212146440_IsInf(_4714_f, 0LL) || _212145d8a_IsNaN(_4714_f)) {
			_case_begin_22beec034:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_22beebd9c:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2121466d7_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _212064bbb_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_212064eda_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _212145a9e_NaN(void) {
	return static_cast<jule::F64>(_212064eda_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _212145d8a_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _212146132_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_212064eda_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_212064eda_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _212146440_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _2121466d7_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_21214895e_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _2121480bd_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_212145d8a_IsNaN(_1118_x) || _212146440_IsInf(_1118_x, 1LL)) {
			_case_begin_22c039846:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_22c0398ac:;
			{
				return static_cast<jule::F64>(_212145a9e_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_22c039934:;
			{
				return static_cast<jule::F64>(_212146132_Inf(-1LL));;
			}
		}
		_match_end_22c0397e1:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I32 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2120674c6_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _21214895e_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_212064eda_F64FromBits(static_cast<jule::U64>((_212064bbb_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _2121503a0_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _21214895e_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1b7629c26:;
		}
		_iter_end_1b7629c26:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _212150b64_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I32 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _2120674c6_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_2121480bd_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _21217e577_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I32 _7832_prec, jule::I32 _7843_bit_size) {
	return static_cast<jule::Str>(_21217eae9_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _212182b85_max(static_cast<jule::I32>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _21217eae9_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I32 _8258_prec, jule::I32 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_211aa1164_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1b782323d:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_212064638_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_211aa1164_floatInfo>)((&(_21217d7c9_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b78232a4:;
			{
				_8313_bits=static_cast<jule::U64>(_212064bbb_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_211aa1164_floatInfo>)((&(_21217dad7_f64info))));
			}
		}
		else {
			_case_begin_1b7822b00:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1b7822db9:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I32 _9713_exp = (static_cast<jule::I32>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I32>(static_cast<jule::I32>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1b7826ab0:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1b7828496:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1b782872c:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1b7827770:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1b78276a4:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1b7826e89:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1b7825c79:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1b7825dde:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _212181d82_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _212182503_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_21217e038_decimalSlice _13213_digs = _21217e038_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_21218c3cb_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b782bb3c:;
				{
					_8258_prec=static_cast<jule::I32>(_212182b85_max(static_cast<jule::I32>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b782bba3:;
				{
					_8258_prec=static_cast<jule::I32>(_212182b85_max(static_cast<jule::I32>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b782bc5d:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1b782ae16:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I32 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b782de19:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b782c17b:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1b782d80e:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1b782d952:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_21218b232_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_21218b672_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I32>((_9713_exp - static_cast<jule::I32>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _21218026a_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _2121808b9_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _21218026a_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I32 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I32 _18316_exp, _211aa1164_floatInfo* _18327_flt) {
	_212190dc4_decimal _18413_d = _212190dc4_decimal{};;
	_212191259_assign(&_18413_d, _1835_mant);
	_2121914ce_shift(&_18413_d, static_cast<jule::I32>((_18316_exp - static_cast<jule::I32>((*(_18327_flt))._field_mantbits))));
	_21217e038_decimalSlice _18713_digs = _21217e038_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_212180cb5_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_21217e038_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b783499c:;
				{
					_18233_prec=static_cast<jule::I32>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b783576c:;
				{
					_18233_prec=static_cast<jule::I32>(_212182b85_max(static_cast<jule::I32>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b7835827:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1b7835618:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b783475a:;
				{
					_212191c4e_round(&_18413_d, static_cast<jule::I32>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b78347d2:;
				{
					_212191c4e_round(&_18413_d, static_cast<jule::I32>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b7834859:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_212191c4e_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1b78370ed:;
		};
		_18713_digs=_21217e038_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _2121808b9_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _2121808b9_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _21217e038_decimalSlice _2205_digs, jule::I32 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1b783a1ab:;
			{
				return _2121812e3_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b783a222:;
			{
				return _212181777_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1b783a288:;
			{
				jule::I32 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I32 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _2121812e3_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _212181777_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I32>(_212182b85_max(static_cast<jule::I32>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1b783a068:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _212180cb5_roundShortest(_212190dc4_decimal* _25723_d, jule::U64 _25735_mant, jule::I32 _25746_exp, _211aa1164_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_212190dc4_decimal _28713_upper = _212190dc4_decimal{};;
	_212191259_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_2121914ce_shift(&_28713_upper, static_cast<jule::I32>(((_25746_exp - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I32 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I32>((_25746_exp - 1LL));
	};
	_212190dc4_decimal _30613_lower = _212190dc4_decimal{};;
	_212191259_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_2121914ce_shift(&_30613_lower, static_cast<jule::I32>(((_29813_explo - static_cast<jule::I32>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I32 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I32 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1b7846c45;
			};
			jule::I32 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1b784b72d:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1b784b7a5:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1b784b82c:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1b784b6b7:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1b784e27a:;
					{
						_212191c4e_round(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1b784e2e1:;
					{
						_212191754_roundDown(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1b784e357:;
					{
						_2121919c9_roundUp(_25723_d, static_cast<jule::I32>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1b784e1d1:;
			};
		}
	_iter_next_1b7846c45:;
	}
	_iter_end_1b7846c45:;;
}



inline jule::Slice<jule::U8> _2121812e3_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _21217e038_decimalSlice _39637_d, jule::I32 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	if ((_39654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('.'); };
		jule::I32 _41217_i = 1LL;;
		jule::I32 _41313_m = _212182844_min(_39637_d._field_nd, static_cast<jule::I32>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			(_39613_dst).append(_39637_d._field_d.slice(_41217_i, _41313_m));;
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1b7853812:;
		}
		_iter_end_1b7853812:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_39665_fmt); };
	jule::I32 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I32>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1b7855d75:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0'))); };
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1b7855bdd:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1b78559ac:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1b785513d:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _212181777_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _21217e038_decimalSlice _45137_d, jule::I32 _45154_prec) {
	if (_45126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('-'); };
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I32 _45917_m = _212182844_min(_45137_d._field_nd, _45137_d._field_dp);;
		(_45113_dst).append(_45137_d._field_d.slice(0LL, _45917_m));;
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1b78599a0:;
		}
		_iter_end_1b78599a0:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
	};
	if ((_45154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('.'); };
		jule::I32 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push(_47221_ch); };
			}
		_iter_next_1b785a9a1:;
		}
		_iter_end_1b785a9a1:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _212181d82_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I32 _48452_exp, _211aa1164_floatInfo* _48463_flt) {
	if (_48426_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _212195bcb_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('p'); };
	_48452_exp-=static_cast<jule::I32>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _212195bcb_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _212182503_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I32 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I32 _50724_exp, _211aa1164_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1b7861413:;
	}
	_iter_end_1b7861413:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U32 _52113_shift = static_cast<jule::U32>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_50637_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))); };
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		while ((_5079_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1b78669ce:;
		}
		_iter_end_1b78669ce:;;
	} else if ((_50626_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		jule::I32 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I32>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1b78679d0:;
		}
		_iter_end_1b78679d0:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _2121836ad_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I32>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1b786a340:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1b7865071:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1b786a10e:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1b78692d9:;
	};
	return _50613_dst;;
}



inline jule::I32 _212182844_min(jule::I32 _5918_a, jule::I32 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I32 _212182b85_max(jule::I32 _5988_a, jule::I32 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _2121836ad_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__211a9dc00_ConvError _212183adc_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__211a9dc00_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if ((*(_5119_s)).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1b7871500:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1b78713e0:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_2121836ad_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1b7872ee6:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_2121836ad_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1b7872d09:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_2121836ad_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1b7872d81:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1b7872952:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1b7872886:;
					};
				};
			}
		}
		else {
			_case_begin_1b78708b7:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1b7870c2a:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1b7876b87:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1b7876516:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1b7876714:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1b787669d:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1b7876879:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b7877b66:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1b7877b11:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b78789ad:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1b7879c9a:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _2121836ad_lower(_10912_c)) && (_2121836ad_lower(_10912_c) <= 'z'))) {
						_case_begin_1b7879b8a:;
						{
							_11017_d=static_cast<jule::U8>(((_2121836ad_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1b78797c2:;
						{
							goto _iter_next_1b78789ad;
						}
					}
					else {
						_case_begin_1b787975b:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1b7879706:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1b78789ad:;
			++it;
			goto _iter_begin_1b78789ad;
		}
		_iter_end_1b78789ad:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _212183ec7_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I32 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__211a9dc00_ConvError __jule_assign_result = _212183adc_parseUint(&(_14618_s), _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _212184439_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I32 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__211a9dc00_ConvError __jule_assign_result = _212183adc_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I32>(0LL)) && (_18718_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U32>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _212185050_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_212064eda_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _579_clz = _2121342eb_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U32>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21213dab9_Mul64(_4122_man, _212185db9_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21213dab9_Mul64(_4122_man, _212185db9_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_212064eda_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _21218544b_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_212064924_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1329_clz = _2121342eb_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U32>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21213dab9_Mul64(_11022_man, _212185db9_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21213dab9_Mul64(_11022_man, _212185db9_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_212064924_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _212187294_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>* _4631_s, jule::Str _4642_prefix) {
	jule::I32 _4713_n = _4642_prefix.len();;
	if ((_4713_n > (*(_4631_s)).len())) {
		_4713_n=static_cast<jule::I32>((*(_4631_s)).len());
	};
	jule::I32 _5113_i = 0LL;;
	for (; (_5113_i < _4713_n); (_5113_i)++) {
		{
			jule::U8 _5317_c = (*(_4631_s))[_5113_i];;
			if ((('A' <= _5317_c) && (_5317_c <= 'Z'))) {
				_5317_c+=32LL;
			};
			if ((_5317_c != _4642_prefix[_5113_i])) {
				return _5113_i;;
			};
		}
	_iter_next_1b789d153:;
	}
	_iter_end_1b789d153:;;
	return _4713_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _212187591_special(jule::Slice<jule::U8> _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _7313_sign = 1LL;;
	jule::I32 _7413_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1b78a192b:;
			{
				if ((_6912_s[0LL] == '-')) {
					_7313_sign=-1LL;
				};
				_7413_nsign=1LL;
				{
					jule::Slice<jule::U8>* _8321_sp = (&(_6912_s));;
					(*(_8321_sp))=(*(_8321_sp)).slice(1LL);
				};
				goto _case_begin_1b78a19a3;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1b78a19a3:;
			{
				jule::I32 _8817_caseN = _212187294_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("infinity", 8));;
				if (((3LL < _8817_caseN) && (_8817_caseN < 8LL))) {
					_8817_caseN=3LL;
				};
				if (((_8817_caseN == 3LL) || (_8817_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_212146132_Inf(_7313_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_7413_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1b78a1a2a:;
			{
				if ((_212187294_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_212145a9e_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b78a18b5:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _212187838_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1b78a6d4e:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1b78a70d5:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1b78a7019:;
	};
	jule::U64 _12213_base = 10LLU;;
	jule::I32 _12313_maxMantDigits = 19LL;;
	jule::U8 _12413_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_2121836ad_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_12213_base=16LLU;
		_12313_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_12413_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _13213_sawdot = false;;
	jule::Bool _13313_sawdigits = false;;
	jule::I32 _13413_nd = 0LL;;
	jule::I32 _13513_ndMant = 0LL;;
	jule::I32 _13613_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13813_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13813_c == '_')) {
					_case_begin_1b78ac041:;
					{
						goto _iter_next_1b78a67bb;
					}
				}
				else if ((_13813_c == '.')) {
					_case_begin_1b78ac0b8:;
					{
						if (_13213_sawdot) {
							goto _julec_label_loop_end;
						};
						_13213_sawdot=true;
						_13613_dp=_13413_nd;
						goto _iter_next_1b78a67bb;
					}
				}
				else if ((('0' <= _13813_c) && (_13813_c <= '9'))) {
					_case_begin_1b78ac140:;
					{
						_13313_sawdigits=true;
						if (((_13813_c == '0') && (_13413_nd == 0LL))) {
							(_13613_dp)--;
							goto _iter_next_1b78a67bb;
						};
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_12213_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13813_c - '0'));
							(_13513_ndMant)++;
						} else if ((_13813_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1b78a67bb;
					}
				}
				else if ((((_12213_base == 16LLU) && ('a' <= _2121836ad_lower(_13813_c))) && (_2121836ad_lower(_13813_c) <= 'f'))) {
					_case_begin_1b78ac1b7:;
					{
						_13313_sawdigits=true;
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_2121836ad_lower(_13813_c) - 'a') + 10LLU));
							(_13513_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1b78a67bb;
					}
				}
				_match_end_1b78abe64:;
			};
			goto _iter_end_1b78a67bb;
		}
	_iter_next_1b78a67bb:;
	}
	_iter_end_1b78a67bb:;;
	_julec_label_loop_end:;
	if ((!(_13313_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_13213_sawdot))) {
		_13613_dp=_13413_nd;
	};
	if ((_12213_base == 16LLU)) {
		_13613_dp*=4LL;
		_13513_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_2121836ad_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _12413_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _20117_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20117_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _21117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1b78b4a2c;
				};
				if ((_21117_e < 10000LL)) {
					_21117_e=static_cast<jule::I32>((((_21117_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1b78b4a2c:;
		}
		_iter_end_1b78b4a2c:;;
		_13613_dp+=(_21117_e * _20117_esign);
	} else if ((_12213_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I32>((_13613_dp - _13513_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _2121892b8_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _21217dad7_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1b78bd34e:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1b78bd3c6:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_2121886d5_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _2121886d5_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1b78bd44d:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_2121886d5_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b78bcc11:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _2121896a3_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _21217d7c9_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1b78c2694:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1b78c271b:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_212188a26_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _212188a26_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1b78c2793:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_212188a26_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b78c2056:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__211a9dc00_ConvError _212189bd1_atofHex(_211aa1164_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__211a9dc00_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5579_maxExp = ((static_cast<jule::I32>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5589_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1b78c6940:;
	}
	_iter_end_1b78c6940:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1b78c8656:;
	}
	_iter_end_1b78c8656:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5589_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1b78c8d3d:;
	}
	_iter_end_1b78c8d3d:;;
	jule::U64 _58813_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_58813_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_58813_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _60313_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5579_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I32>((_5579_maxExp + 1LL));
		_60313_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _61013_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_61013_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I32>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_61013_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _21217d7c9_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_212064924_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_61013_bits)))));
		__jule_func_result.__jule_result_arg1 = _60313_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_212064eda_F64FromBits(_61013_bits));
	__jule_func_result.__jule_result_arg1 = _60313_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__211a9dc00_ConvError _21218a088_atof32(jule::Str* _62112_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__211a9dc00_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _62314_val = 0;;
		jule::I32 _62319__n = 0;;
		jule::Bool _62323_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _212187591_special(_22a8bd2db_Stobs(_62112_s));
			_62314_val = __jule_assign_result.__jule_result_arg0;
			_62319__n = __jule_assign_result.__jule_result_arg1;
			_62323_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62323_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_62314_val));
			__jule_func_result.__jule_result_arg1 = _62319__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62910_mantissa = 0;;
	jule::I32 _62920_exp = 0;;
	jule::Bool _62925_neg = false;;
	jule::Bool _62930_trunc = false;;
	jule::Bool _62937_hex = false;;
	jule::I32 _62942__n = 0;;
	jule::Bool _62950_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _212187838_readFloat(_62112_s);
		_62910_mantissa = __jule_assign_result.__jule_result_arg0;
		_62920_exp = __jule_assign_result.__jule_result_arg1;
		_62925_neg = __jule_assign_result.__jule_result_arg2;
		_62930_trunc = __jule_assign_result.__jule_result_arg3;
		_62937_hex = __jule_assign_result.__jule_result_arg4;
		_62942__n = __jule_assign_result.__jule_result_arg5;
		_62950_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62942__n;
	if ((!(_62950_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62937_hex) {
		jule::F64 _63617_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__211a9dc00_ConvError __jule_assign_result = _212189bd1_atofHex(&(_21217d7c9_f32info), _62910_mantissa, _62920_exp, _62925_neg, _62930_trunc);
			_63617_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63617_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62930_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _2121896a3_atof32exact(_62910_mantissa, _62920_exp, _62925_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62950_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _21218544b_eiselLemire32(_62910_mantissa, _62920_exp, _62925_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62950_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62950_ok) {
			if ((!(_62930_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65821_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _21218544b_eiselLemire32(static_cast<jule::U64>((_62910_mantissa + 1LLU)), _62920_exp, _62925_neg);
				_65821_fUp = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62950_ok && (__jule_func_result.__jule_result_arg0 == _65821_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_212190dc4_decimal _66713_d = _212190dc4_decimal{};;
	if ((!(_212187e98_set(&_66713_d, _22a8bd2db_Stobs(_62112_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _67110_b = 0;;
	jule::Bool _67113_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _2121882a6_floatBits(&_66713_d, &(_21217d7c9_f32info));
		_67110_b = __jule_assign_result.__jule_result_arg0;
		_67113_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_212064924_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_67110_b))));
	if (_67113_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__211a9dc00_ConvError _21218a330_atof64(jule::Str* _67912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__211a9dc00_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _68114_val = 0;;
		jule::I32 _68119__n = 0;;
		jule::Bool _68123_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _212187591_special(_22a8bd2db_Stobs(_67912_s));
			_68114_val = __jule_assign_result.__jule_result_arg0;
			_68119__n = __jule_assign_result.__jule_result_arg1;
			_68123_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68123_ok) {
			__jule_func_result.__jule_result_arg0 = _68114_val;
			__jule_func_result.__jule_result_arg1 = _68119__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68710_mantissa = 0;;
	jule::I32 _68720_exp = 0;;
	jule::Bool _68725_neg = false;;
	jule::Bool _68730_trunc = false;;
	jule::Bool _68737_hex = false;;
	jule::I32 _68742__n = 0;;
	jule::Bool _68750_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _212187838_readFloat(_67912_s);
		_68710_mantissa = __jule_assign_result.__jule_result_arg0;
		_68720_exp = __jule_assign_result.__jule_result_arg1;
		_68725_neg = __jule_assign_result.__jule_result_arg2;
		_68730_trunc = __jule_assign_result.__jule_result_arg3;
		_68737_hex = __jule_assign_result.__jule_result_arg4;
		_68742__n = __jule_assign_result.__jule_result_arg5;
		_68750_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68742__n;
	if ((!(_68750_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68737_hex) {
		({
			__jule_tuple_f64__jule_tuple__211a9dc00_ConvError __jule_assign_result = _212189bd1_atofHex(&(_21217dad7_f64info), _68710_mantissa, _68720_exp, _68725_neg, _68730_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68730_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _2121892b8_atof64exact(_68710_mantissa, _68720_exp, _68725_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68750_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _212185050_eiselLemire64(_68710_mantissa, _68720_exp, _68725_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68750_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68750_ok) {
			if ((!(_68730_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71521_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _212185050_eiselLemire64(static_cast<jule::U64>((_68710_mantissa + 1LLU)), _68720_exp, _68725_neg);
				_71521_fUp = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68750_ok && (__jule_func_result.__jule_result_arg0 == _71521_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_212190dc4_decimal _72413_d = _212190dc4_decimal{};;
	if ((!(_212187e98_set(&_72413_d, _22a8bd2db_Stobs(_67912_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72810_b = 0;;
	jule::Bool _72813_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _2121882a6_floatBits(&_72413_d, &(_21217dad7_f64info));
		_72810_b = __jule_assign_result.__jule_result_arg0;
		_72813_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_212064eda_F64FromBits(_72810_b));
	if (_72813_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__211a9dc00_ConvError _21218a671_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__211a9dc00_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _73814_f = 0;;
		jule::I32 _73817_n = 0;;
		jule::I32 _73820_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__211a9dc00_ConvError __jule_assign_result = _21218a088_atof32(_73622_s);
			_73814_f = __jule_assign_result.__jule_result_arg0;
			_73817_n = __jule_assign_result.__jule_result_arg1;
			_73820_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73814_f));
		__jule_func_result.__jule_result_arg1 = _73817_n;
		__jule_func_result.__jule_result_arg2 = _73820_err;
		return __jule_func_result;;
	};
	jule::F64 _74110_f = 0;;
	jule::I32 _74113_n = 0;;
	jule::I32 _74116_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__211a9dc00_ConvError __jule_assign_result = _21218a330_atof64(_73622_s);
		_74110_f = __jule_assign_result.__jule_result_arg0;
		_74113_n = __jule_assign_result.__jule_result_arg1;
		_74116_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _74110_f;
	__jule_func_result.__jule_result_arg1 = _74113_n;
	__jule_func_result.__jule_result_arg2 = _74116_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _21218a9b2_ParseFloat(jule::Str _76915_s, jule::I32 _76923_bitSize) {
	jule::F64 _77010_f = 0;;
	jule::I32 _77013_n = 0;;
	jule::I32 _77016_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__211a9dc00_ConvError __jule_assign_result = _21218a671_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_77010_f = __jule_assign_result.__jule_result_arg0;
		_77013_n = __jule_assign_result.__jule_result_arg1;
		_77016_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_77013_n != _76915_s.len()) && ((_77016_err == static_cast<jule::I32>(0LL)) || (_77016_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type0));
	};
	if ((_77016_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77016_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _77010_f);;
}



inline void _21218b232_ryuFtoaFixed32(_21217e038_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _6213_e2 = _4956_exp;;
	jule::I32 _639_b = _21213b4ce_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U32>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I32>(_639_b) - 25LL);
	};
	jule::I32 _749_q = (((-(_21218c673_mulByLog2Log10(static_cast<jule::I32>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I32 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21218dd6c_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _21218e598_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I32>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U32 _949_extra = static_cast<jule::U32>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_21218be58_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _21218b672_ryuFtoaFixed64(_21217e038_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _13113_e2 = _12156_exp;;
	jule::I32 _1329_b = _21213b776_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U32>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I32>(_1329_b) - 55LL);
	};
	jule::I32 _1469_q = (((-(_21218c673_mulByLog2Log10(static_cast<jule::I32>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I32 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21218e257_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _21218e598_divisibleByPow5(_12145_mant, static_cast<jule::I32>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U32 _1669_extra = static_cast<jule::U32>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_21218be58_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _21218be58_formatDecimal(_21217e038_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2019_max = _21218b9a2_u64pow10[_20088_prec];;
	jule::I32 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1b79128c1:;
	}
	_iter_end_1b79128c1:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U32 _22913_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I32>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1b7912a58:;
	}
	_iter_end_1b7912a58:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1b791b457:;
	}
	_iter_end_1b791b457:;;
	(*(_20023_d))._field_dp=static_cast<jule::I32>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _21218c3cb_ryuFtoaShortest(_21217e038_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _211aa1164_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_212135dbe_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U32>((-(_26157_exp)));
		_21218d399_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I32 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _21218cd05_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_21218d399_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I32 _2799_q = (_21218c673_mulByLog2Log10(static_cast<jule::I32>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _21217d7c9_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21218dd6c_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21218dd6c_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21218dd6c_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21218e257_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21218e257_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _21218e257_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_21218e598_divisibleByPow5(_27310_ml, static_cast<jule::I32>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_21218e598_divisibleByPow5(_27314_mc, static_cast<jule::I32>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_21218e598_divisibleByPow5(_27318_mu, static_cast<jule::I32>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U32 _3259_extra = static_cast<jule::U32>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_21218d399_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I32 _21218c673_mulByLog2Log10(jule::I32 _37719_x) {
	return static_cast<jule::I32>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I32 _21218c91a_mulByLog10Log2(jule::I32 _38719_x) {
	return static_cast<jule::I32>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _21218cd05_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _211aa1164_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I32>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _21218d399_ryuDigits(_21217e038_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _21218e840_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _21218e840_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _21218e840_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_21218d982_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_21218d982_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _42817_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1b7939299:;
		}
		_iter_end_1b7939299:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I32>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I32>(static_cast<jule::I32>((9LL - _42817_n)));
		_21218d982_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I32>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1b793bc80:;
	}
	_iter_end_1b793bc80:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1b7938ebe:;
	}
	_iter_end_1b7938ebe:;;
}



inline void _21218d982_ryuDigits32(_21217e038_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I32 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I32>((_45554_endindex + 1LL));
		return;;
	};
	jule::I32 _46013_trimmed = 0LL;;
	jule::I32 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1b793e524;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I32>(static_cast<jule::I32>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1b793e524:;
	}
	_iter_end_1b793e524:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I32 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1b794500d:;
	}
	_iter_end_1b794500d:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I32>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I32>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _21218dd6c_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _212185db9_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21213dab9_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_21218c91a_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _21218e257_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _212185db9_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_21218c91a_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21213dab9_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21213dab9_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _21213c436_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _21218e598_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1b7953967:;
	}
	_iter_end_1b7953967:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _21218e840_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _2121925ac_trim(_212190dc4_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1b7956e98:;
	}
	_iter_end_1b7956e98:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _212192865_rightShift(_212190dc4_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _28513_r = 0LL;;
	jule::I32 _28613_w = 0LL;;
	jule::U32 _28913_n = 0LLU;;
	for (; ((_28913_n >> _28432_k) == 0LLU); (_28513_r)++) {
		{
			if ((_28513_r >= (*(_28420_a))._field_nd)) {
				if ((_28913_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_28913_n >> _28432_k) == 0LLU)) {
					{
						_28913_n=static_cast<jule::U32>((_28913_n * 10LLU));
						(_28513_r)++;
					}
				_iter_next_1b795a70a:;
				}
				_iter_end_1b795a70a:;;
				goto _iter_end_1b7958bc0;
			};
			jule::U32 _30313_c = static_cast<jule::U32>((*(_28420_a))._field_d[_28513_r]);;
			_28913_n=static_cast<jule::U32>((((_28913_n * 10LLU) + _30313_c) - '0'));
		}
	_iter_next_1b7958bc0:;
	}
	_iter_end_1b7958bc0:;;
	(*(_28420_a))._field_dp-=(_28513_r - 1LL);
	jule::U32 _3089_mask = static_cast<jule::U32>((static_cast<jule::U32>((1LL << _28432_k)) - 1LLU));;
	for (; (_28513_r < (*(_28420_a))._field_nd); (_28513_r)++) {
		{
			jule::U32 _31213_c = static_cast<jule::U32>((*(_28420_a))._field_d[_28513_r]);;
			jule::U32 _31313_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_31313_dig + '0')));
			(_28613_w)++;
			_28913_n=static_cast<jule::U32>((((_28913_n * 10LLU) + _31213_c) - '0'));
		}
	_iter_next_1b795c157:;
	}
	_iter_end_1b795c157:;;
	while ((_28913_n > 0LLU)) {
		{
			jule::U32 _32213_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			if ((_28613_w < 800LL)) {
				(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_32213_dig + '0')));
				(_28613_w)++;
			} else if ((_32213_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_28913_n=static_cast<jule::U32>((_28913_n * 10LLU));
		}
	_iter_next_1b795de4a:;
	}
	_iter_end_1b795de4a:;;
	(*(_28420_a))._field_nd=_28613_w;
	_2121925ac_trim(_28420_a);
}



inline jule::Bool _212192cc7_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _33913_i = 0LL;;
	for (; (_33913_i < (*(_33846_s)).len()); (_33913_i)++) {
		{
			if ((_33913_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_33913_i] != (*(_33846_s))[_33913_i])) {
				return (_33821_b[_33913_i] < (*(_33846_s))[_33913_i]);;
			};
		}
	_iter_next_1b79616cd:;
	}
	_iter_end_1b79616cd:;;
	return false;;
}



inline void _21219304c_leftShift(_212190dc4_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _35313_delta = _212190830_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_212192cc7_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_212190830_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))) {
		(_35313_delta)--;
	};
	jule::I32 _35813_r = (*(_35219_a))._field_nd;;
	jule::I32 _35913_w = ((*(_35219_a))._field_nd + _35313_delta);;
	jule::U32 _36213_n = 0LLU;;
	(_35813_r)--;
	for (; (_35813_r >= 0LL); (_35813_r)--) {
		{
			_36213_n+=((static_cast<jule::U32>((*(_35219_a))._field_d[_35813_r]) - '0') << _35231_k);
			jule::U32 _36613_quo = (_36213_n / 10LLU);;
			jule::U32 _36713_rem = (_36213_n - (10LLU * _36613_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_36713_rem + '0')));
			} else if ((_36713_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_36613_quo;
		}
	_iter_next_1b7964b10:;
	}
	_iter_end_1b7964b10:;;
	while ((_36213_n > 0LLU)) {
		{
			jule::U32 _37913_quo = (_36213_n / 10LLU);;
			jule::U32 _38013_rem = (_36213_n - (10LLU * _37913_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38013_rem + '0')));
			} else if ((_38013_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_37913_quo;
		}
	_iter_next_1b7964cec:;
	}
	_iter_end_1b7964cec:;;
	(*(_35219_a))._field_nd+=_35313_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_35313_delta;
	_2121925ac_trim(_35219_a);
}



inline jule::Bool _21219338d_shouldRoundUp(_212190dc4_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _2121949aa_FmtUint(jule::U64 _6012_i, jule::I32 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _212195406_small(static_cast<jule::I32>(static_cast<jule::I32>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _212195bcb_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _212194d40_FmtInt(jule::I64 _7111_i, jule::I32 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _212195406_small(static_cast<jule::I32>(static_cast<jule::I32>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _212195bcb_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _2121950d7_Itoa(jule::I32 _809_i) {
	return _212194d40_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _212195406_small(jule::I32 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _21219569d_isPowerOfTwo(jule::I32 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _212195bcb_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I32 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I32 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U32 _14917_us = static_cast<jule::U32>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U32 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15117_is + 0LLU))]);
			}
		_iter_next_1b799db9e:;
		}
		_iter_end_1b799db9e:;;
		jule::U32 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I32>(_15913_is)]);
		};
	} else if (_21219569d_isPowerOfTwo(_10141_base)) {
		jule::U32 _17413_shift = (static_cast<jule::U32>(_212135231_TrailingZeros(static_cast<jule::U32>(static_cast<jule::U32>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U32 _17613_m = (static_cast<jule::U32>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>((static_cast<jule::U32>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1b79a6b85:;
		}
		_iter_end_1b79a6b85:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1b79a8bcb:;
		}
		_iter_end_1b79a8bcb:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I32>(static_cast<jule::U32>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _2121970d9_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b79be2eb:;
			{
				return _212196638_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b79be362:;
			{
				return _212196902_SysUint;;
			}
		}
		else {
			_case_begin_1b79c0b8d:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1b79bd482:;
	};
}



inline jule::I32 _212197381_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1b79c1b28:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1b79c1c5a:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1b79c1cc1:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1b79c1d37:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b79c1d9d:;
			{
				return _21219636e_BitSize;;
			}
		}
		else {
			_case_begin_1b79c1782:;
			{
				return -1LL;;
			}
		}
		_match_end_1b79c1bb1:;
	};
}



inline jule::Str _2121976a0_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b79c36b8:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b79c409d:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b79c4114:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b79c417a:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1b79c3b3b:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b79c1ee1:;
	};
}



inline jule::Str _212197947_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b79c4a93:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b79c528b:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b79c5302:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b79c5368:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1b79c4697:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b79c4642:;
	};
}



inline jule::Str _212197bde_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1b79c5c81:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b79c6479:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1b79c5885:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b79c5830:;
	};
}



inline jule::Bool _21219878e_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _21218a9b2_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _212198a36_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1b79cb3b3:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b79c9713:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b79ca78b:;
	};
}



inline jule::I32 _212198ccd_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1b79cc0c8:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1b79cbe74:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1b79cbeeb:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b79cb55b:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b79cb99b:;
	};
}



inline jule::I32 _212199075_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1b79cda58:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1b79cd915:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1b79cd97b:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b79ccc22:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b79cd53b:;
	};
}



inline void _2121991da_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _2111a7ded_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1b79ce7d4:;
				{
					_21219636e_BitSize=64LLU;
					_212196638_SysInt=jule::Str("i64", 3);
					_212196902_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1b79ce84a:;
				{
					_21219636e_BitSize=32LLU;
					_212196638_SysInt=jule::Str("i32", 3);
					_212196902_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1b79ce361:;
		};
	};
}



inline void _212199350_init(void) {
	_2121991da_UpdateTarget();
}



inline jule::I64 _21219d189_MinI(jule::Str _6113_k) {
	_6113_k=_2121970d9_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b79cdc34:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b79d1a4a:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b79d1ab1:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b79d1b27:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1b79cec46:;
			{
				return 0LL;;
			}
		}
		_match_end_1b79cea15:;
	};
}



inline jule::I64 _21219d475_MaxI(jule::Str _7913_k) {
	_7913_k=_2121970d9_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b79d1cae:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b79d30bd:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b79d3134:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b79d319a:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1b79d2d04:;
			{
				return 0LL;;
			}
		}
		_match_end_1b79d2a18:;
	};
}



inline jule::U64 _21219d71c_MaxU(jule::Str _9713_k) {
	_9713_k=_2121970d9_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b79d3321:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b79d4630:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b79d4696:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b79d470c:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1b79d4366:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b79d407a:;
	};
}



inline jule::F64 _21219d92b_Min(jule::Str _11512_k) {
	_11512_k=_2121970d9_RealKindOf(_11512_k);
	jule::I64 _1179_i = _21219d189_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b79d6ae9:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b79d6676:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1b79d6104:;
			{
				return 0LL;;
			}
		}
		_match_end_1b79d6742:;
	};
}



inline jule::F64 _21219dbc3_Max(jule::Str _13312_k) {
	_13312_k=_2121970d9_RealKindOf(_13312_k);
	jule::I64 _1359_i = _21219d475_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _21219d71c_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b79d8dd7:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b79d8964:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1b79d869a:;
			{
				return 0LL;;
			}
		}
		_match_end_1b79d8a30:;
	};
}



inline jule::Bool _21219e124_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _21219e410_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _21219e6a7_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _21219e9c6_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _21219ec6d_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _2121a0015_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _2121a02ac_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _2121a0631_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _2121a08c8_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _2121a0b70_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _2121a0eb1_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b79de99d:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b79ddd10:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b79de4d6:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b79de54c:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b79de5b3:;
			{
				return _21219e124_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b79de629:;
			{
				return _21219e410_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b79dea14:;
			{
				return _21219e6a7_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b79dea7a:;
			{
				return _21219e9c6_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b79deae1:;
			{
				return _21219ec6d_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b79deb57:;
			{
				return _2121a0015_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b79debce:;
			{
				return _2121a02ac_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b79dec56:;
			{
				return _2121a0631_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b79deccd:;
			{
				return _2121a08c8_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b79ded55:;
			{
				return _2121a0b70_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1b79dedcc:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1b79dee54:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1b79de371:;
			{
				return false;;
			}
		}
		_match_end_1b79d92b1:;
	};
}



inline jule::Bool _2121a1258_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _2121a1500_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _2121a1797_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _2121a1a3e_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _2121a1e90_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _2121a2237_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _2121a24ce_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _2121a2776_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _2121a2ab7_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b79e7610:;
			{
				return _2121a3aeb_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b79e162b:;
			{
				return _2121a3dd7_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b79e7500:;
			{
				return _2121a3dd7_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b79e7104:;
			{
				return _2121a1258_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b79e716a:;
			{
				return _2121a1500_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b79e71d1:;
			{
				return _2121a1797_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b79e7258:;
			{
				return _2121a1a3e_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b79e7676:;
			{
				return _2121a1e90_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b79e76ed:;
			{
				return _2121a2237_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b79e7775:;
			{
				return _2121a24ce_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b79e77ec:;
			{
				return _2121a2776_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b79e7874:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b79e6ed3:;
			{
				return false;;
			}
		}
		_match_end_1b79e6ca2:;
	};
}



inline jule::Bool _2121a3aeb_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _2121a3dd7_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _2121a417e_IsInt(jule::Str _4610_k) {
	return (_2121a3aeb_IsSigInt(_4610_k) || _2121a3dd7_IsUnsigInt(_4610_k));;
}



inline jule::Bool _2121a449d_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _2121a4745_IsNum(jule::Str _5610_k) {
	return (_2121a417e_IsInt(_5610_k) || _2121a449d_IsFloat(_5610_k));;
}



inline jule::Bool _2121a49dc_IsSigNum(jule::Str _6113_k) {
	return (_2121a3aeb_IsSigInt(_6113_k) || _2121a449d_IsFloat(_6113_k));;
}



inline void _2121ad474_lshiftUnsig(_2121a4c51_Const* _59021_c, _2121a4c51_Const* _59032_x) {
	jule::U64 _5919_l = _2121a74c3_AsU64(_59021_c);;
	jule::U64 _5929_r = _2121a74c3_AsU64(_59032_x);;
	_2121a7c32_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _2121ad771_rshiftUnsig(_2121a4c51_Const* _59621_c, _2121a4c51_Const* _59632_x) {
	jule::U64 _5979_l = _2121a74c3_AsU64(_59621_c);;
	jule::U64 _5989_r = _2121a74c3_AsU64(_59632_x);;
	_2121a7c32_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _213d2a210_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _213d2a342_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I32 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_213d42898_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee97de_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _213d41ec4_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _213d422e3_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I32 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				(_4713_s).append(_213d42bd9_strEsqSeq(_4210_bytes, &(_4813_i)));;
			} else {
				jule::I32 _5418_r = 0;;
				jule::I32 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee97de_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_210eeab53_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1b7aa4832:;
	}
	_iter_end_1b7aa4832:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _213d4258a_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1b7aa8605:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b7aa866b:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b7aa86d2:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1b7aa8748:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1b7aa87c0:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b7aa8847:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1b7aa88be:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1b7aa8946:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1b7aa89bd:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1b7aa8a45:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1b7aa844b:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _213d42898_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I32* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _213d4258a_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1b7aad74d:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _212183ec7_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b7aad132:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _212183ec7_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b7aad198:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _212183ec7_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1b7aabeee:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _212183ec7_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1b7aac2c9:;
	};
}



inline jule::Slice<jule::U8> _213d42bd9_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I32* _12434_i) {
	jule::I32 _1259_r = _213d42898_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1259_r));;
}



inline jule::I32 _213e480db_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I32* _1038_start) {
	jule::I32 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I32 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee97de_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1b7ade185:;
	}
	_iter_end_1b7ade185:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _213e4db91_getFormatRange(jule::I32* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I32 _289_start = (*(_2724_i));;
	jule::I32 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I32 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee97de_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1b7ae1a17:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1b7ae18a2:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1b7ae15c7:;
			};
		}
	_iter_next_1b7ae0b9d:;
	}
	_iter_end_1b7ae0b9d:;;
	return nullptr;;
}



inline void _213e4de49_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		((*(_4722_buf))).append("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1b7ae3530:;
			{
				(*(_4722_buf))+=_21217e577_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type133))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b7ae1c6a:;
			{
				(*(_4722_buf))+=_21217e577_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1b7ae2de2:;
			{
				(*(_4722_buf))+=_212194d40_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type134)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1b7ae2e58:;
			{
				(*(_4722_buf))+=_212194d40_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type135)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b7ae2ebe:;
			{
				(*(_4722_buf))+=_212194d40_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b7ae3035:;
			{
				(*(_4722_buf))+=_212194d40_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1b7ae3596:;
			{
				(*(_4722_buf))+=_2121949aa_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type132)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1b7ae360c:;
			{
				(*(_4722_buf))+=_2121949aa_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type136)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1b7ae3673:;
			{
				(*(_4722_buf))+=_2121949aa_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type137)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b7ae36d9:;
			{
				(*(_4722_buf))+=_2121949aa_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b7ae3750:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b7ae37b6:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					((*(_4722_buf))).append("true", 4);
				} else {
					((*(_4722_buf))).append("false", 5);
				};
			}
		}
		else {
			_case_begin_1b7ae28c5:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_1b7ae273d:;
	};
}



inline void _213e4e323_applyFmtByDefault(jule::Str* _8627_buf, jule::I32* _8642_j, jule::Slice<jule::Any> _8650_args) {
	jule::Any _879_arg = _8650_args[(*(_8642_j))];;
	((*(_8642_j)))++;
	_213e4de49_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _213e4e71e_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I32* _9451_j, jule::Slice<jule::Any> _9459_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_213e4e323_applyFmtByDefault(_9436_buf, _9451_j, _9459_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		((*(_9436_buf))).append("{}", 2);
		return;;
	};
	_22a8bd990_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _213e4ea2c_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _22a8bd2db_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I32 _11913_j = 0LL;;
	jule::I32 _12013_last = 0LL;;
	jule::I32 _12113_i = _213e480db_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I32>(_213e480db_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_22a8bd990_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _213e4db91_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1b7aed529;
			};
			_213e4e71e_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), _11322_args);
			if ((_11913_j >= _11322_args.len())) {
				_22a8bd990_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I32>(_11713_fmtBytes.len());
				goto _iter_end_1b7aed529;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1b7aed529:;
	}
	_iter_end_1b7aed529:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_22a8bd990_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _213e51710_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _213e4ea2c_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _213c7b7c1_parameterUsesGenerics(jule::Ptr<_213c787e0_ParamIns>* _38131_p, jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>>* _38146_generics) {
	if (_213c757a9_IsSelf((*(_38131_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _213da2be4_kindUsesGenerics(&((*(_38131_p)).get()._field_Kind), _38146_generics);;
}



inline jule::Ptr<_213d906d7_TypeSymbol> _213c7dc9b_buildType(jule::Ptr<_213c41d2a_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_213d5be9a_Value> _213c7e087_buildExpr(jule::Ptr<_213c45ea5_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_213d87adb_TypeAlias> _213c7e32e_buildTypeAlias(jule::Ptr<_213c57c97_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_213d87adb_TypeAlias>(_213d87adb_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_Binded=_11223_decl.get()._field_Binded, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_213c7dc9b_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_213c5da17_Field> _213c7e64d_buildField(jule::Ptr<_213c5b273_FieldDecl> _12319_decl) {
	return jule::new_ptr<_213c5da17_Field>(_213c5da17_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_213c7dc9b_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_213c5da17_Field>> _213c7e8e5_buildFields(jule::Slice<jule::Ptr<_213c5b273_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_213c5da17_Field>> _13513_fields = jule::Slice<jule::Ptr<_213c5da17_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d95d43:;
		if (it != expr_end) {
			jule::Ptr<_213c5b273_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_213c5da17_Field>> &__jule_push_dest = _13513_fields; __jule_push_dest.push(_213c7e64d_buildField(_13617_decl)); };
			}
			_iter_next_1b7d95d43:;
			++it;
			goto _iter_begin_1b7d95d43;
		}
		_iter_end_1b7d95d43:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_213c615db_Struct> _213c7eb8c_buildStruct(jule::Ptr<_213c5bac0_StructDecl> _14220_decl) {
	return jule::new_ptr<_213c615db_Struct>(_213c615db_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_213c7e8e5_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_Binded=_14220_decl.get()._field_Binded, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_213c751c1_Param> _213c7ee34_buildParam(jule::Ptr<_213c52137_ParamDecl> _15419_decl) {
	return jule::new_ptr<_213c751c1_Param>(_213c751c1_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_213c7dc9b_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_213c751c1_Param>> _213c802a8_buildParams(jule::Slice<jule::Ptr<_213c52137_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_213c751c1_Param>> _16613_params = jule::Slice<jule::Ptr<_213c751c1_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d98ecd:;
		if (it != expr_end) {
			jule::Ptr<_213c52137_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_213c751c1_Param>> &__jule_push_dest = _16613_params; __jule_push_dest.push(_213c7ee34_buildParam(_16717_decl)); };
			}
			_iter_next_1b7d98ecd:;
			++it;
			goto _iter_begin_1b7d98ecd;
		}
		_iter_end_1b7d98ecd:;
	};
	return _16613_params;;
}



inline jule::Ptr<_213c749b7_RetType> _213c80550_buildRetType(jule::Ptr<_213c44a97_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_213c749b7_RetType>(_213c749b7_RetType{._field_Kind=_213c7dc9b_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_213c76a0d_Fn> _213c807e7_buildFunc(jule::Ptr<_213c53457_FnDecl> _18318_decl) {
	return jule::new_ptr<_213c76a0d_Fn>(_213c76a0d_Fn{._field_Token=_18318_decl.get()._field_Token, ._field_Global=_18318_decl.get()._field_Global, ._field_Unsafety=_18318_decl.get()._field_Unsafety, ._field_Public=_18318_decl.get()._field_Public, ._field_Binded=_18318_decl.get()._field_Binded, ._field_Statically=_18318_decl.get()._field_Statically, ._field_Exceptional=_18318_decl.get()._field_Exceptional, ._field_Ident=_18318_decl.get()._field_Ident, ._field_Directives=_18318_decl.get()._field_Directives, ._field_Scope=_18318_decl.get()._field_Scope, ._field_Generics=_18318_decl.get()._field_Generics, ._field_Result=_213c80550_buildRetType(_18318_decl.get()._field_Result), ._field_Params=_213c802a8_buildParams(&(_18318_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_213c76a0d_Fn>> _213c80a8e_buildMethods(jule::Slice<jule::Ptr<_213c53457_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_213c76a0d_Fn>> _20213_methods = jule::Slice<jule::Ptr<_213c76a0d_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d9ca1a:;
		if (it != expr_end) {
			jule::Ptr<_213c53457_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_213c76a0d_Fn>> &__jule_push_dest = _20213_methods; __jule_push_dest.push(_213c807e7_buildFunc(_20317_decl)); };
			}
			_iter_next_1b7d9ca1a:;
			++it;
			goto _iter_begin_1b7d9ca1a;
		}
		_iter_end_1b7d9ca1a:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_213d906d7_TypeSymbol>> _213c80d36_buildTraitInherits(jule::Slice<jule::Ptr<_213c41d2a_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_213d906d7_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_213d906d7_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d9d5dc:;
		if (it != expr_end) {
			jule::Ptr<_213c41d2a_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_213d906d7_TypeSymbol>> &__jule_push_dest = _21013_symbols; __jule_push_dest.push(_213c7dc9b_buildType(_21117_it)); };
			}
			_iter_next_1b7d9d5dc:;
			++it;
			goto _iter_begin_1b7d9d5dc;
		}
		_iter_end_1b7d9d5dc:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_213c88b63_Trait> _213c810cd_buildTrait(jule::Ptr<_213c5c296_TraitDecl> _21719_decl) {
	return jule::new_ptr<_213c88b63_Trait>(_213c88b63_Trait{._field_Token=_21719_decl.get()._field_Token, ._field_Ident=_21719_decl.get()._field_Ident, ._field_Public=_21719_decl.get()._field_Public, ._field_Inherits=_213c80d36_buildTraitInherits(&(_21719_decl.get()._field_Inherits)), ._field_Methods=_213c80a8e_buildMethods(&(_21719_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_213c8a901_EnumItem> _213c81375_buildEnumItem(jule::Ptr<_213c59606_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_213c8a901_EnumItem>(_213c8a901_EnumItem{._field_Token=_22722_decl.get()._field_Token, ._field_Ident=_22722_decl.get()._field_Ident, ._field_Value=_213c7e087_buildExpr(_22722_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_213c8a901_EnumItem>> _213c8161c_buildEnumItems(jule::Slice<jule::Ptr<_213c59606_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_213c8a901_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_213c8a901_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7da158a:;
		if (it != expr_end) {
			jule::Ptr<_213c59606_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_213c8a901_EnumItem>> &__jule_push_dest = _23613_items; __jule_push_dest.push(_213c81375_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1b7da158a:;
			++it;
			goto _iter_begin_1b7da158a;
		}
		_iter_end_1b7da158a:;
	};
	return _23613_items;;
}



inline jule::Ptr<_213c8b3e6_Enum> _213c81a6d_buildEnum(jule::Ptr<_213c5a12e_EnumDecl> _24318_decl) {
	return jule::new_ptr<_213c8b3e6_Enum>(_213c8b3e6_Enum{._field_Token=_24318_decl.get()._field_Token, ._field_Public=_24318_decl.get()._field_Public, ._field_Ident=_24318_decl.get()._field_Ident, ._field_Kind=_213c7dc9b_buildType(_24318_decl.get()._field_Kind), ._field_Items=_213c8161c_buildEnumItems(&(_24318_decl.get()._field_Items))});;
}



inline jule::Ptr<_213c8c45d_TypeEnumItem> _213c81d15_buildTypeEnumItem(jule::Ptr<_213c5a904_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_213c8c45d_TypeEnumItem>(_213c8c45d_TypeEnumItem{._field_Token=_25326_decl.get()._field_Token, ._field_Ident=_25326_decl.get()._field_Ident, ._field_Kind=_213c7dc9b_buildType(_25326_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_213c8c45d_TypeEnumItem>> _213c820ac_buildTypeEnumItems(jule::Slice<jule::Ptr<_213c5a904_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_213c8c45d_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_213c8c45d_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7da3eb6:;
		if (it != expr_end) {
			jule::Ptr<_213c5a904_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_213c8c45d_TypeEnumItem>> &__jule_push_dest = _26213_items; __jule_push_dest.push(_213c81d15_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1b7da3eb6:;
			++it;
			goto _iter_begin_1b7da3eb6;
		}
		_iter_end_1b7da3eb6:;
	};
	return _26213_items;;
}



inline jule::Ptr<_213c8c9e1_TypeEnum> _213c82354_buildTypeEnum(jule::Ptr<_213c5b00e_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_213c8c9e1_TypeEnum>(_213c8c9e1_TypeEnum{._field_Token=_26922_decl.get()._field_Token, ._field_Public=_26922_decl.get()._field_Public, ._field_Ident=_26922_decl.get()._field_Ident, ._field_Items=_213c820ac_buildTypeEnumItems(&(_26922_decl.get()._field_Items))});;
}



inline jule::Ptr<_213d11988_Var> _213c825eb_buildVar(jule::Ptr<_213c54436_VarDecl> _27817_decl) {
	return jule::new_ptr<_213d11988_Var>(_213d11988_Var{._field_Token=_27817_decl.get()._field_Token, ._field_Ident=_27817_decl.get()._field_Ident, ._field_Binded=_27817_decl.get()._field_Binded, ._field_Constant=_27817_decl.get()._field_Constant, ._field_Mutable=_27817_decl.get()._field_Mutable, ._field_Public=_27817_decl.get()._field_Public, ._field_Statically=_27817_decl.get()._field_Statically, ._field_Reference=_27817_decl.get()._field_Reference, ._field_Kind=_213c7dc9b_buildType(_27817_decl.get()._field_Kind), ._field_Value=_213c7e087_buildExpr(_27817_decl.get()._field_Expr), ._field_Refers=static__213c7c827_new(), ._field_Directives=_27817_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_213d11988_Var>> _213c82893_buildVars(jule::Slice<jule::Ptr<_213c54436_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_213d11988_Var>> _29613_vars = jule::Slice<jule::Ptr<_213d11988_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7da446c:;
		if (it != expr_end) {
			jule::Ptr<_213c54436_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = _29613_vars; __jule_push_dest.push(_213c825eb_buildVar(_29717_decl)); };
			}
			_iter_next_1b7da446c:;
			++it;
			goto _iter_begin_1b7da446c;
		}
		_iter_end_1b7da446c:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_213cb3a17_Impl> _213c82b3a_buildImpl(jule::Ptr<_213c5c8a1_Impl> _30318_decl) {
	return jule::new_ptr<_213cb3a17_Impl>(_213cb3a17_Impl{._field_Base=_30318_decl.get()._field_Base, ._field_Dest=_30318_decl.get()._field_Dest, ._field_Methods=_213c80a8e_buildMethods(&(_30318_decl.get()._field_Methods)), ._field_Statics=_213c82893_buildVars(_30318_decl.get()._field_Statics)});;
}



inline jule::Ptr<_213d5ae22_Data> _213cae848_buildAsComptimeMethodData(jule::Ptr<_213c796ae_FnIns>* _139635_f) {
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>((*(_139635_f)), 1)}), });;
}



inline jule::Ptr<_213cd7c7d_ImportInfo> _213caea35_findComptimePackage(jule::Ptr<_213ce1050_Sema>* _140429_s) {
	return _213ce14c3_SelectPackage((*(_140429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_213cd7c7d_ImportInfo>)>([=](jule::Ptr<_213cd7c7d_ImportInfo> _140528_pkg) mutable -> jule::Bool {
		return _140528_pkg.get()._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_213d5ae22_Data> _213caed98_buildComptimeTypeInfoData(jule::Ptr<_213ce1050_Sema>* _141035_s, jule::Ptr<_213d88834_TypeKind>* _141050_t) {
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_213ce0978_pushComptimeTypeInfo((*(_141035_s)).get()._field_meta.ptr(), _141050_t), 15)}), });;
}



inline jule::Ptr<_213d5ae22_Data> _213cb01c8_buildComptimeValue(jule::Ptr<_213d5ae22_Data>* _141828_d) {
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213ca9249_comptimeValue>(_213ca9249_comptimeValue{._field_data=(*(_141828_d))}), 16)}), });;
}



inline jule::Bool _213cb2e45_matchConstraint(jule::Str* _14221_c, jule::Ptr<_213d88834_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1b7199c6e:;
			{
				jule::Ptr<_213d91089_Prim> _14513_prim = _213d8b051_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _2121a49dc_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1b719a06b:;
			{
				jule::Ptr<_213d91089_Prim> _15113_prim = _213d8b051_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _2121a3dd7_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1b719a0d2:;
			{
				jule::Ptr<_213d91089_Prim> _15713_prim = _213d8b051_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _2121a449d_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1b7193a37:;
			{
				jule::Ptr<_213d91089_Prim> _16313_prim = _213d8b051_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _2121a4745_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1b7193a9d:;
			{
				return _213d8a0c7_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1b7193b14:;
			{
				return (!(_213d8a0c7_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1b7193b7a:;
			{
				return _213d89d63_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1b719a236:;
			{
				return _213d8a33b_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_1b71940ba:;
			{
				return false;;
			}
		}
		_match_end_1b7194065:;
	};
}



inline jule::Bool _213cb3231_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_213cb13a5_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71a003d:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_1b71a003d:;
			++it;
			goto _iter_begin_1b71a003d;
		}
		_iter_end_1b71a003d:;
	};
	return false;;
}



inline jule::Ptr<_213cc06a0_scopeChecker> _213cb5aa2_newScopeCheckerBase(jule::Ptr<_213ce1050_Sema>* _5829_s, jule::Ptr<_213c796ae_FnIns> _5843_owner) {
	return jule::new_ptr<_213cc06a0_scopeChecker>(_213cc06a0_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_213d56417_SymbolTable>(), });;
}



inline jule::Ptr<_213cc06a0_scopeChecker> _213cb5e37_newScopeChecker(jule::Ptr<_213ce1050_Sema>* _6625_s, jule::Ptr<_213c796ae_FnIns> _6639_owner) {
	jule::Ptr<_213cc06a0_scopeChecker> _6713_base = _213cb5aa2_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_213cbe418_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_213cbe88b_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_213cbe418_scopeLabel> _213cb6278_findLabelParent(jule::Str _7620_ident, jule::Ptr<_213cc06a0_scopeChecker> _7636_scope) {
	jule::Ptr<_213cbe418_scopeLabel> _7713_label = _213cc3d57_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_213cc3d57_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1b71b45b3:;
	}
	_iter_end_1b71b45b3:;;
	return _7713_label;;
}



inline jule::Bool _213cb660d_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_213cb8a72_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b71b47d3:;
			{
				jule::Ptr<_213c6a705_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_213c6a705_FnCallExprModel>(&__jule_any_type35);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b71b4849:;
			{
				jule::Ptr<_213d5ae22_Data> _9813_d = _9021_Model.cast_ptr<_213d5ae22_Data>(&__jule_any_type24);;
				return _213cb660d_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1b71b5c68:;
	};
	return false;;
}



inline jule::Bool _213cb694e_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_213cb8a72_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b71b7dad:;
			{
				return ((*(_10421_stmt)).cast_ptr<_213cb8a72_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b71b7e24:;
			{
				return ((*(_10421_stmt)).cast_ptr<_213cb98b9_InfIter>(&__jule_any_type37).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b71b7e8a:;
			{
				jule::Ptr<_213cba722_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_213cba722_RangeIter>(&__jule_any_type41);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _213cb660d_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b71b6142:;
			{
				jule::Ptr<_213cb9d3c_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_213cb9d3c_WhileIter>(&__jule_any_type39);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _213cb660d_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _213cb660d_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b71b61a8:;
			{
				jule::Ptr<_213cbc889_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_213cbc889_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b71bb499:;
					if (it != expr_end) {
						jule::Ptr<_213cbd3d4_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b71bc17b:;
								if (it != expr_end) {
									jule::Ptr<_213d5ae22_Data> *_12420_expr = it;
									{
										if (_213cb660d_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1b71bc17b:;
									++it;
									goto _iter_begin_1b71bc17b;
								}
								_iter_end_1b71bc17b:;
							};
						}
						_iter_next_1b71bb499:;
						++it;
						goto _iter_begin_1b71bb499;
					}
					_iter_end_1b71bb499:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b71b621e:;
			{
				jule::Ptr<_213cb95cd_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_213cb95cd_Conditional>(&__jule_any_type36);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b71bd743:;
					if (it != expr_end) {
						jule::Ptr<_213cb8e6d_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _213cb660d_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1b71bd743:;
						++it;
						goto _iter_begin_1b71bd743;
					}
					_iter_end_1b71bd743:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b71b6285:;
			{
				jule::Ptr<_213d5ae22_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_213d5ae22_Data>(&__jule_any_type24);;
				return _213cb660d_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1b71b60cb:;
			{
				return false;;
			}
		}
		_match_end_1b71b6076:;
	};
}



inline jule::I32 _213cb6c90_countMatchType(jule::Ptr<_213cbc889_Match>* _14720_m, jule::Ptr<_213d88834_TypeKind>* _14732_t) {
	jule::I32 _14813_n = 0LL;;
	jule::Str _1499_kind = _213d88bdb_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71c13d3:;
		if (it != expr_end) {
			jule::Ptr<_213cbd3d4_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1b71c13d3;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b71c2181:;
					if (it != expr_end) {
						jule::Ptr<_213d5ae22_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1b71c13d3;
							};
							if ((_1499_kind == _213d88bdb_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_213d88834_TypeKind>(&__jule_any_type89).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1b71c2181:;
						++it;
						goto _iter_begin_1b71c2181;
					}
					_iter_end_1b71c2181:;
				};
			}
			_iter_next_1b71c13d3:;
			++it;
			goto _iter_begin_1b71c13d3;
		}
		_iter_end_1b71c13d3:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_213d5ae22_Data>> _213cb7037_getDatasFromTupleData(jule::Ptr<_213d5ae22_Data>* _17131_d) {
	if ((_213d8cbe0_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type87) {
				_case_begin_1b71c5c34:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_213c6e42e_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1b71c389c:;
				{
					jule::Ptr<_213d95d4c_Tuple> _17721_t = _213d8cbe0_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_213d5ae22_Data>> _17821_r = jule::Slice<jule::Ptr<_213d5ae22_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b71c4bab:;
						if (it != expr_end) {
							jule::Ptr<_213d88834_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_213d5ae22_Data>> &__jule_push_dest = _17821_r; __jule_push_dest.push(jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1b71c4bab:;
							++it;
							goto _iter_begin_1b71c4bab;
						}
						_iter_end_1b71c4bab:;
					};
					return _17821_r;;
				}
			}
			_match_end_1b71c3726:;
		};
	} else {
		return jule::Slice<jule::Ptr<_213d5ae22_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _213cb7873_checkMut(jule::Ptr<_213ce1050_Sema>* _20618_s, jule::Ptr<_213d5ae22_Data>* _20629_left, jule::Ptr<_213d5ae22_Data> _20646_right, jule::Ptr<_2114c1b73_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1b71c8808:;
			{
				_213ce38d2_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _213d8a0c7_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1b71c886e:;
			{
				if (((_20660_op.get()._field_Id != static_cast<jule::U32>(71LLU)) && (_213d8c4a3_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_213ce38d2_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b71c8792:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b71c7e89:;
	};
}



inline jule::Bool _213cb7d07_checkAssign(jule::Ptr<_213ce1050_Sema>* _22521_s, jule::Ptr<_213d5ae22_Data>* _22536_left, jule::Ptr<_213d5ae22_Data> _22553_right, jule::Ptr<_2114c1b73_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_213c796ae_FnIns> _2269_f = _213d8c23e_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_213ce38d2_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_213d5b791_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1b71ccd07:;
			{
				_213ce38d2_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_213ce3c01_pushSuggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1b71ccd6d:;
			{
				_213ce38d2_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_213cb7873_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1b71ccdd4:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b71ccc91:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b71cc136:;
	};
}



inline jule::Bool _213cb809e_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b71cebc7:;
			{
				return (!((*(_24731_n)).cast_ptr<_213c50465_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b71c8929:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b71cd16a:;
			{
				return false;;
			}
		}
		_match_end_1b71ce963:;
	};
}



inline jule::Bool _213cb8346_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_1b71cea2e:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b71d0ce9:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_213d5ae22_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1b71d1899:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b71d1c2e:;
						{
							return false;;
						}
					}
					_match_end_1b71d1987:;
				};
			}
		}
		else {
			_case_begin_1b71d0865:;
			{
				return false;;
			}
		}
		_match_end_1b71d0810:;
	};
}



inline jule::Bool _213cb85dd_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b71d28bc:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b71d15d0:;
			{
				return false;;
			}
		}
		_match_end_1b71d1cea:;
	};
}



inline jule::U32 _213cd11a5_removeEqFromOp(jule::U32 _213019_op) {
	{
		auto &_match_expr{ _213019_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1b71d13d2:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1b71d2e83:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1b71d2ee9:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1b71d311a:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1b71d3181:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1b71d31e7:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1b71d326e:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1b71d32e6:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1b71d336d:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1b71d33e5:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_1b71d2b31:;
			{
				return _213019_op;;
			}
		}
		_match_end_1b71d2acb:;
	};
}



inline jule::Ptr<_213d11988_Var> _213cd5495_findVarInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82113ab:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_213d11988_Var> _4817_v = _213d56c86_FindVar(_4717_f.ptr(), _4649_ident, _4661_binded);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1b82113ab:;
			++it;
			goto _iter_begin_1b82113ab;
		}
		_iter_end_1b82113ab:;
	};
	return nullptr;;
}



inline jule::Ptr<_213d87adb_TypeAlias> _213cd58c4_findTypeAliasInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b821280d:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_213d87adb_TypeAlias> _6017_ta = _213d5713d_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_binded);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1b821280d:;
			++it;
			goto _iter_begin_1b821280d;
		}
		_iter_end_1b821280d:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c615db_Struct> _213cd5cae_findStructInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8213ca4:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_213c615db_Struct> _7217_s = _213d574e5_FindStruct(_7117_f.ptr(), _7052_ident, _7064_binded);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1b8213ca4:;
			++it;
			goto _iter_begin_1b8213ca4;
		}
		_iter_end_1b8213ca4:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c76a0d_Fn> _213cd6221_findFnInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b821524a:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_213c76a0d_Fn> _8417_f = _213d5789c_FindFn(_8317_file.ptr(), _8248_ident, _8260_binded);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1b821524a:;
			++it;
			goto _iter_begin_1b821524a;
		}
		_iter_end_1b821524a:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c88b63_Trait> _213cd652e_findTraitInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82164c1:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_213c88b63_Trait> _9617_t = _213d57baa_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1b82164c1:;
			++it;
			goto _iter_begin_1b82164c1;
		}
		_iter_end_1b82164c1:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c8b3e6_Enum> _213cd6870_findEnumInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8217747:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_213c8b3e6_Enum> _10817_e = _213d57eb8_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1b8217747:;
			++it;
			goto _iter_begin_1b8217747;
		}
		_iter_end_1b8217747:;
	};
	return nullptr;;
}



inline jule::Ptr<_213c8c9e1_TypeEnum> _213cd6bb1_findTypeEnumInPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8218a01:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_213c8c9e1_TypeEnum> _12017_e = _213d582c6_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1b8218a01:;
			++it;
			goto _iter_begin_1b8218a01;
		}
		_iter_end_1b8218a01:;
	};
	return nullptr;;
}



inline jule::Any _213cd71ab_defByIdentPackage(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b821a00d:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _213d59195_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_binded);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1b821a00d:;
			++it;
			goto _iter_begin_1b821a00d;
		}
		_iter_end_1b821a00d:;
	};
	return nullptr;;
}



inline jule::Bool _213cdcb73_isStdPackage(jule::Str _35517_f, jule::Str _35525_p) {
	return _2110319be_HasPrefix(_35517_f, _21103b875_Join(jule::Slice<jule::Str>::make({_2111a7084_PathStdlib,_35525_p})));;
}



inline jule::Bool _213cdd8cc_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b822ebe3:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b82303a8:;
			{
				jule::Ptr<_213c6d076_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71);;
				return _213cdd8cc_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b823041e:;
			{
				jule::Ptr<_213c6c790_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_213c6c790_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _213cdd8cc_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b8230485:;
			{
				jule::Ptr<_213c68b76_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_213c68b76_UnaryExprModel>(&__jule_any_type74);;
				if ((_2317_unary.get()._field_Op.get()._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_213d8b529_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_213d8b2b5_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _213cdd8cc_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1b822e97e:;
			{
				return false;;
			}
		}
		_match_end_1b822e929:;
	};
}



inline _2110be2cb_Log _213cddd72_compilerErr(jule::Ptr<_2114c1b73_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_2110be2cb_Log _4213_log = _2110be2cb_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_2110be71b_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_2114c7e21_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _213cde1b3_impIsLookupable(jule::Ptr<_213cd7c7d_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_Binded) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _213cda335_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _213cde4b0_appendRetVars(jule::Slice<jule::Ptr<_213d11988_Var>>* _6723_dest, jule::Ptr<_213c796ae_FnIns>* _6742_f) {
	if ((_213c76e70_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_213d88834_TypeKind>> _7213_types = _213c7a7d1_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8238625:;
		if (it != expr_end) {
			jule::I32 _7310_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> _7317_ident = *it;
			{
				if ((_2114c4417_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _2114c46ae_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1b8238625;
				};
				{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = (*(_6723_dest)); __jule_push_dest.push(jule::new_ptr<_213d11988_Var>(_213d11988_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()}), ._field_RetOrder=_7310_i, })); };
			}
			_iter_next_1b8238625:;
			++it;
			_7310_i++;
			goto _iter_begin_1b8238625;
		}
		_iter_end_1b8238625:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _213cde768_appendParamVars(jule::Slice<jule::Ptr<_213d11988_Var>>* _9725_dest, jule::Ptr<_213c796ae_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b823c470:;
		if (it != expr_end) {
			jule::Ptr<_213c787e0_ParamIns> _10217_p = *it;
			{
				if ((_2114c4417_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _2114c46ae_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1b823c470;
				};
				jule::Ptr<_213d11988_Var> _10717_v = jule::new_ptr<_213d11988_Var>(_213d11988_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(), ._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()}), });;
				{
					
					if (_213c757a9_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1b8240473:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_213d883c2_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_213c75a1d_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_213c75a1d_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213d947da_Sptr>(_213d947da_Sptr{._field_Elem=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_BindIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 21);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1b82401ba:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213d95247_Slc>(_213d95247_Slc{._field_Elem=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_BindIdent=_10217_p.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1b8240154:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1b8240044:;
				};
				{ jule::Slice<jule::Ptr<_213d11988_Var>> &__jule_push_dest = (*(_9725_dest)); __jule_push_dest.push(_10717_v); };
			}
			_iter_next_1b823c470:;
			++it;
			goto _iter_begin_1b823c470;
		}
		_iter_end_1b823c470:;
	};
}



inline void _213cdea43_appendGenericTypeAliases(jule::Slice<jule::Ptr<_213d87adb_TypeAlias>>* _15734_dest, jule::Ptr<_213c796ae_FnIns>* _15759_f) {
	jule::I32 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8245ae9:;
		if (it != expr_end) {
			jule::I32 _16710_i = it - expr->begin();
			jule::Ptr<_213d870a2_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_213c4dcc1_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				{ jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> &__jule_push_dest = (*(_15734_dest)); __jule_push_dest.push(jule::new_ptr<_213d87adb_TypeAlias>(_213d87adb_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), })); };
			}
			_iter_next_1b8245ae9:;
			++it;
			_16710_i++;
			goto _iter_begin_1b8245ae9;
		}
		_iter_end_1b8245ae9:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_213c64402_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8247139:;
			if (it != expr_end) {
				jule::I32 _18114_i = it - expr->begin();
				jule::Ptr<_213d870a2_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_213c4dcc1_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					{ jule::Slice<jule::Ptr<_213d87adb_TypeAlias>> &__jule_push_dest = (*(_15734_dest)); __jule_push_dest.push(jule::new_ptr<_213d87adb_TypeAlias>(_213d87adb_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), })); };
				}
				_iter_next_1b8247139:;
				++it;
				_18114_i++;
				goto _iter_begin_1b8247139;
			}
			_iter_end_1b8247139:;
		};
	};
}



inline jule::Ptr<_213d56417_SymbolTable> _213cded95_findFile(jule::Slice<jule::Ptr<_213d56417_SymbolTable>>* _19518_files, jule::Ptr<_2114c700d_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8248b96:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_1b8248b96:;
			++it;
			goto _iter_begin_1b8248b96;
		}
		_iter_end_1b8248b96:;
	};
	return nullptr;;
}



inline void _213ce0307_pushSuggestion(_2110be2cb_Log* _20430_log, jule::Str _20441_fmt, jule::Slice<jule::Any> _20454_args) {
	_20430_log->_field_Suggestion=_2110be71b_Logf(_20441_fmt, _20454_args);
}



inline void _213d0ee70_pushImplemented(jule::Ptr<_213c88b63_Trait> _288124_t, jule::Ptr<_213c615db_Struct>* _288140_d) {
	_julec_label_push:;
	{
		
		if ((_288124_t.get()._field_Implemented.len() > 0LL)) {
			_case_begin_1b824c370:;
			{
				{
					auto expr = &(_288124_t.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b824ce42:;
					if (it != expr_end) {
						jule::Ptr<_213c615db_Struct> _288516_s = *it;
						{
							if ((_288516_s == (*(_288140_d)))) {
								goto _match_end_1b824be63;
							};
						}
						_iter_next_1b824ce42:;
						++it;
						goto _iter_begin_1b824ce42;
					}
					_iter_end_1b824ce42:;
				};
				goto _case_begin_1b824bec9;
			}
		}
		else {
			_case_begin_1b824bec9:;
			{
				{ jule::Slice<jule::Ptr<_213c615db_Struct>> &__jule_push_dest = _288124_t.get()._field_Implemented; __jule_push_dest.push((*(_288140_d))); };
			}
		}
		_match_end_1b824be63:;
	};
	{
		auto expr = &(_288124_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b824d717:;
		if (it != expr_end) {
			jule::Ptr<_213d906d7_TypeSymbol> _289417_i = *it;
			{
				_213d0ee70_pushImplemented(_213d8c717_Trait(_289417_i.get()._field_Kind.ptr()), _288140_d);
			}
			_iter_next_1b824d717:;
			++it;
			goto _iter_begin_1b824d717;
		}
		_iter_end_1b824d717:;
	};
}



inline void _213d10228_pushImplements(jule::Ptr<_213c615db_Struct>* _289924_s, jule::Ptr<_213c88b63_Trait> _289940_t) {
	_julec_label_push:;
	{
		
		if (((*(_289924_s)).get()._field_Implements.len() > 0LL)) {
			_case_begin_1b824ea8c:;
			{
				{
					auto expr = &((*(_289924_s)).get()._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b825065e:;
					if (it != expr_end) {
						jule::Ptr<_213c88b63_Trait> _290316_b = *it;
						{
							if ((_290316_b == _289940_t)) {
								goto _match_end_1b824e680;
							};
						}
						_iter_next_1b825065e:;
						++it;
						goto _iter_begin_1b825065e;
					}
					_iter_end_1b825065e:;
				};
				goto _case_begin_1b824e6e6;
			}
		}
		else {
			_case_begin_1b824e6e6:;
			{
				{ jule::Slice<jule::Ptr<_213c88b63_Trait>> &__jule_push_dest = (*(_289924_s)).get()._field_Implements; __jule_push_dest.push(_289940_t); };
			}
		}
		_match_end_1b824e680:;
	};
	{
		auto expr = &(_289940_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8250e34:;
		if (it != expr_end) {
			jule::Ptr<_213d906d7_TypeSymbol> _291217_i = *it;
			{
				_213d10228_pushImplements(_289924_s, _213d8c717_Trait(_291217_i.get()._field_Kind.ptr()));
			}
			_iter_next_1b8250e34:;
			++it;
			goto _iter_begin_1b8250e34;
		}
		_iter_end_1b8250e34:;
	};
}



inline jule::Bool _213d43338_traitHasReferenceReceiver(jule::Ptr<_213c88b63_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b846a8ce:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_1b846a8ce;
				};
				jule::Ptr<_213c751c1_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_213c75a1d_IsRef(_3313_p.ptr()) && _213c757a9_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1b846a8ce:;
			++it;
			goto _iter_begin_1b846a8ce;
		}
		_iter_end_1b846a8ce:;
	};
	return false;;
}



inline jule::Bool _213d435d0_floatAssignable(jule::Str _4120_kind, jule::Ptr<_213d5ae22_Data>* _4132_d) {
	jule::Str _429_value = _21217e577_FmtFloat(static_cast<jule::F64>(_2121a7737_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _21219878e_CheckBitFloat(_429_value, static_cast<jule::I32>(_212197381_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _213d43921_sigAssignable(jule::Str _4618_kind, jule::Ptr<_213d5ae22_Data>* _4630_d) {
	jule::F64 _479_min = _21219d92b_Min(_4618_kind);;
	jule::F64 _489_max = _21219dbc3_Max(_4618_kind);;
	{
		
		if (_2121a9393_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1b8471dd0:;
			{
				jule::F64 _5113_x = _2121a6eea_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _2121503a0_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_2121a8b56_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1b8471e46:;
			{
				jule::F64 _5813_x = _2121a7737_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_2121a88e2_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1b8471eac:;
			{
				jule::F64 _6313_x = _2121a7737_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1b8471cae:;
	};
	return false;;
}



inline jule::Bool _213d43ca6_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_213d5ae22_Data>* _6932_d) {
	jule::F64 _709_max = _21219dbc3_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && _6920_kind.equal("u8", 2))) {
		return _213d2a210_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_2121a6549_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_2121a9393_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1b8476225:;
			{
				jule::F64 _7713_x = _2121a6eea_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _2121503a0_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_2121a8b56_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1b8476885:;
			{
				jule::F64 _8713_x = _2121a7737_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_2121a88e2_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1b84768eb:;
			{
				jule::F64 _9213_x = _2121a7737_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1b84762be:;
	};
	return false;;
}



inline jule::Bool _213d440e7_intAssignable(jule::Str _9818_kind, jule::Ptr<_213d5ae22_Data>* _9830_d) {
	{
		
		if (_2121a3aeb_IsSigInt(_9818_kind)) {
			_case_begin_1b847a702:;
			{
				return _213d43921_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_2121a3dd7_IsUnsigInt(_9818_kind)) {
			_case_begin_1b847a768:;
			{
				return _213d43ca6_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_1b8477006:;
			{
				return false;;
			}
		}
		_match_end_1b847a207:;
	};
}



inline void _213d4ecc3_checkMutRiskOfStructLit(jule::Ptr<_213ce1050_Sema>* _94233_s, jule::Ptr<_213c694e5_StructLitExprModel>* _94244_m) {
	{
		auto expr = &((*(_94244_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b847b7ad:;
		if (it != expr_end) {
			jule::Ptr<_213c69171_StructArgExprModel> *_94312_arg = it;
			{
				if ((*(_94312_arg)).get()._field_Field.get()._field_Decl.get()._field_Mutable) {
					goto _iter_next_1b847b7ad;
				};
				if (((!((*(_94312_arg)).get()._field_Expr.get()._field_Mutable)) && _213d8a0c7_Mutable((*(_94312_arg)).get()._field_Expr.get()._field_Kind.ptr()))) {
					_213ce38d2_pushErr((*(_94233_s)).ptr(), (*(_94312_arg)).get()._field_Token, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_94312_arg)).get()._field_Expr.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
			}
			_iter_next_1b847b7ad:;
			++it;
			goto _iter_begin_1b847b7ad;
		}
		_iter_end_1b847b7ad:;
	};
}



inline jule::Ptr<_213d88834_TypeKind> _213d55306_lenKind(void) {
	return _213e53734_primInt;;
}



inline jule::Bool _213d55636_isGoodValueToInfer(jule::Ptr<_213d5ae22_Data>* _140524_d) {
	return (!(_213d5b2b8_IsNil((*(_140524_d)).ptr())));;
}



inline jule::Ptr<_213c0e314_Directive> _213d825ec_findDirective(jule::Slice<jule::Ptr<_213c0e314_Directive>>* _426823_directives, jule::Str _426854_d) {
	{
		auto expr = _426823_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8587974:;
		if (it != expr_end) {
			jule::Ptr<_213c0e314_Directive> _426917_dr = *it;
			{
				if ((_426917_dr.get()._field_Tag.get()._field_Kind == _426854_d)) {
					return _426917_dr;;
				};
			}
			_iter_next_1b8587974:;
			++it;
			goto _iter_begin_1b8587974;
		}
		_iter_end_1b8587974:;
	};
	return nullptr;;
}



inline jule::Any _213d82982_findBuiltinsImport(jule::Str _427723_ident, jule::Ptr<_213cd7c7d_ImportInfo> _427735_imp) {
	return _213e56bbb_findPackageBuiltinDef(_427735_imp.get()._field_LinkPath, _427723_ident);;
}



inline void _213d82b91_fitBitsize(jule::Ptr<_213d5ae22_Data>* _428420_d) {
	jule::Ptr<_213d91089_Prim> _428513_prim = _213d8b051_Prim((*(_428420_d)).get()._field_Kind.ptr());;
	jule::I32 _42869_z = _212197381_BitsizeOf(_213d913b9_Str(_428513_prim.ptr()));;
	if ((_42869_z == 64LLU)) {
		return;;
	};
	jule::I32 _429113_k = 0LL;;
	{
		
		if (_2121a88e2_IsI64((*(_428420_d)).get()._field_Constant.ptr())) {
			_case_begin_1b858a34a:;
			{
				_429113_k=static_cast<jule::I32>(_212198ccd_BitsizeOfInt(static_cast<jule::I64>(_2121a6549_ReadI64((*(_428420_d)).get()._field_Constant.ptr()))));
				if ((_429113_k > _42869_z)) {
					(*(_428420_d)).get()._field_Constant.get()._field_Kind=_2121976a0_IntFromBits(_429113_k);
					(*(_428420_d)).get()._field_Kind=_213e55a22_findBuiltinTypeAlias((*(_428420_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_2121a8b56_IsU64((*(_428420_d)).get()._field_Constant.ptr())) {
			_case_begin_1b858a3c2:;
			{
				_429113_k=static_cast<jule::I32>(_212199075_BitsizeOfUint(static_cast<jule::U64>(_2121a67ad_ReadU64((*(_428420_d)).get()._field_Constant.ptr()))));
				if ((_429113_k > _42869_z)) {
					(*(_428420_d)).get()._field_Constant.get()._field_Kind=_212197947_UintFromBits(_429113_k);
					(*(_428420_d)).get()._field_Kind=_213e55a22_findBuiltinTypeAlias((*(_428420_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_2121a9393_IsF64((*(_428420_d)).get()._field_Constant.ptr())) {
			_case_begin_1b858a449:;
			{
				_429113_k=static_cast<jule::I32>(_212198a36_BitsizeOfFloat(static_cast<jule::F64>(_2121a6eea_ReadF64((*(_428420_d)).get()._field_Constant.ptr()))));
				if ((_429113_k > _42869_z)) {
					(*(_428420_d)).get()._field_Constant.get()._field_Kind=_212197bde_FloatFromBits(_429113_k);
					(*(_428420_d)).get()._field_Kind=_213e55a22_findBuiltinTypeAlias((*(_428420_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		_match_end_1b858a2d4:;
	};
}



inline void _213d82e8d_makeStructLitAlloc(jule::Ptr<_213d5ae22_Data>* _431428_d, jule::Ptr<_213c694e5_StructLitExprModel>* _431443_lit) {
	(*(_431428_d)).get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213d947da_Sptr>(_213d947da_Sptr{._field_Elem=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>((*(_431443_lit)).get()._field_Strct, 0)})}), 21)});
	(*(_431428_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c69803_AllocStructLitExprModel>(_213c69803_AllocStructLitExprModel{._field_Lit=(*(_431443_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_213d11988_Var> _213d832ce_buildErrorVar(jule::Ptr<_213cb8a72_Scope>* _432523_s, jule::Ptr<_213c49dbb_FnCallExpr>* _432539_fc) {
	return jule::new_ptr<_213d11988_Var>(_213d11988_Var{._field_Scope=(*(_432523_s)), ._field_Token=(*(_432539_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=_213e55a22_findBuiltinTypeAlias(jule::Str("any", 3)).get()._field_Kind, ._field_Value=jule::new_ptr<_213d5be9a_Value>(_213d5be9a_Value{._field_Data=jule::new_ptr<_213d5ae22_Data>()}), });;
}



inline jule::Any _213d83620_findBuiltinsSema(jule::Str _434021_ident, jule::Ptr<_213ce1050_Sema> _434037_s) {
	{
		auto expr = &(_434037_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b859294b:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _434117_imp = *it;
			{
				if ((_434117_imp.get()._field_ImportAll || _213cda335_existIdent(_434117_imp.ptr(), _434021_ident))) {
					jule::Any _434321_def = _213d82982_findBuiltinsImport(_434021_ident, _434117_imp);;
					if ((_434321_def != nullptr)) {
						return _434321_def;;
					};
				};
			}
			_iter_next_1b859294b:;
			++it;
			goto _iter_begin_1b859294b;
		}
		_iter_end_1b859294b:;
	};
	jule::Str _435113_ppath = _2114c763a_Dir(_434037_s.get()._field_file.get()._field_File.ptr());;
	if (_2110319be_HasPrefix(_435113_ppath, _2111a7084_PathStdlib)) {
		(_435113_ppath).mut_slice(_2111a7084_PathStdlib.len());;
		_435113_ppath=(jule::Str("std", 3) + _2110379b4_Replace(_435113_ppath, jule::Str("/", 1), jule::Str("::", 2), -1LL));
		return _213e56bbb_findPackageBuiltinDef(_435113_ppath, _434021_ident);;
	};
	return nullptr;;
}



inline jule::Bool _213d838b7_isOkForShifting(jule::Ptr<_213d5ae22_Data>* _436525_d) {
	if (_213d5b791_IsConst((*(_436525_d)).ptr())) {
		{
			
			if (_2121a88e2_IsI64((*(_436525_d)).get()._field_Constant.ptr())) {
				_case_begin_1b85959b5:;
				{
					return (_2121a6549_ReadI64((*(_436525_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_2121a8b56_IsU64((*(_436525_d)).get()._field_Constant.ptr())) {
				_case_begin_1b8595a3c:;
				{
					return true;;
				}
			}
			else if (_2121a9393_IsF64((*(_436525_d)).get()._field_Constant.ptr())) {
				_case_begin_1b8595ab4:;
				{
					return (_2121a6eea_ReadF64((*(_436525_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1b859594e:;
				{
					return false;;
				}
			}
			_match_end_1b8595883:;
		};
	};
	jule::Ptr<_213d91089_Prim> _43789_prim = _213d8b051_Prim((*(_436525_d)).get()._field_Kind.ptr());;
	return ((_43789_prim != nullptr) && _2121a417e_IsInt(_213d913b9_Str(_43789_prim.ptr())));;
}



inline jule::Bool _213d83c6e_isInstancedStruct(jule::Ptr<_213c64402_StructIns> _438222_s) {
	return (_438222_s.get()._field_Decl.get()._field_Generics.len() == _438222_s.get()._field_Generics.len());;
}



inline jule::Bool _213d840d2_isPtrArithmeticCompatible(jule::Ptr<_213d5ae22_Data>* _438635_l, jule::Ptr<_213d5ae22_Data>* _438650_r) {
	jule::Ptr<_213d97d4e_Ptr> _43879_ptr = _213d8b529_Ptr((*(_438650_r)).get()._field_Kind.ptr());;
	if ((_43879_ptr != nullptr)) {
		return _213d88ee9_Equal(_213d8b529_Ptr((*(_438635_l)).get()._field_Kind.ptr()).get()._field_Elem, _43879_ptr.get()._field_Elem);;
	};
	if (_213d5b791_IsConst((*(_438650_r)).ptr())) {
		return _213d440e7_intAssignable(jule::Str("int", 3), _438650_r);;
	};
	_213d4459d_typeCompatibilityChecker _439413_tcc = _213d4459d_typeCompatibilityChecker{._field_dest=_213e53734_primInt, ._field_src=(*(_438650_r)).get()._field_Kind, };;
	return _213d45b43_check(&_439413_tcc);;
}



inline void _213d84324_applyCastKindModel(jule::Ptr<_213d5ae22_Data>* _440128_d, jule::Ptr<_213d88834_TypeKind>* _440143_t) {
	(*(_440128_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c69d53_CastingExprModel>(_213c69d53_CastingExprModel{._field_Expr=(*(_440128_d)).get()._field_Model, ._field_Kind=(*(_440143_t)), ._field_ExprKind=(*(_440128_d)).get()._field_Kind}), &__jule_any_type98);
}



inline void _213d845cc_applyCastKind(jule::Ptr<_213d5ae22_Data>* _440923_d, jule::Ptr<_213d88834_TypeKind>* _440938_t) {
	_213d84324_applyCastKindModel(_440923_d, _440938_t);
	(*(_440923_d)).get()._field_Kind=(*(_440938_t));
}



inline jule::Ptr<_213d5ae22_Data> _213d847ca_buildVoidData(void) {
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52502_primVoid, });;
}



inline jule::Str _213d84a94_checkDataForIntegerIndexing(jule::Ptr<_213d5ae22_Data>* _442037_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_442037_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_213d8b051_Prim((*(_442037_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1b859ca22:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_2121a417e_IsInt(_213d913b9_Str(_213d8b051_Prim((*(_442037_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1b859ca88:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_213d5b791_IsConst((*(_442037_d)).ptr())) {
			_case_begin_1b859caee:;
			{
				if ((_2121a7737_AsF64((*(_442037_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_213d8b051_Prim((*(_442037_d)).get()._field_Kind.ptr()) == nullptr) || _213d5b791_IsConst((*(_442037_d)).ptr()) || (_2121970d9_RealKindOf(_213d913b9_Str(_213d8b051_Prim((*(_442037_d)).get()._field_Kind.ptr()).ptr())) != _2121970d9_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1b859cb76:;
			{
				_213d845cc_applyCastKind(_442037_d, &(_213e53734_primInt));
			}
		}
		_match_end_1b859c637:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _213d84d5d_applyCastModelByEnum(jule::Ptr<_213d5ae22_Data>* _444530_d, jule::Ptr<_213c8b3e6_Enum> _444544_e) {
	if ((_444544_e == nullptr)) {
		return;;
	};
	jule::Ptr<_213d91089_Prim> _44499_p = _213d8b051_Prim(_444544_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_213d9428a_IsStr(_44499_p.ptr())) {
		return;;
	};
	_213d84324_applyCastKindModel(_444530_d, &(_444544_e.get()._field_Kind.get()._field_Kind));
}



inline void _213d85116_castConstByType(jule::Str* _445621_t, jule::Ptr<_213d5ae22_Data>* _445634_d) {
	{
		
		if (_2121a3aeb_IsSigInt((*(_445621_t)))) {
			_case_begin_1b85a21a8:;
			{
				{
					auto _match_expr{ _212197381_BitsizeOf(_2121970d9_RealKindOf((*(_445621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b85a2d02:;
						{
							_2121a79ac_SetI64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_2121a725e_AsI64((*(_445634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b85a2d79:;
						{
							_2121a79ac_SetI64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_2121a725e_AsI64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b85a2de0:;
						{
							_2121a79ac_SetI64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_2121a725e_AsI64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b85a2e56:;
						{
							_2121a79ac_SetI64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_2121a725e_AsI64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b85a243e:;
				};
			}
		}
		else if (_2121a3dd7_IsUnsigInt((*(_445621_t)))) {
			_case_begin_1b85a2230:;
			{
				{
					auto _match_expr{ _212197381_BitsizeOf(_2121970d9_RealKindOf((*(_445621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b85a5b5c:;
						{
							_2121a7c32_SetU64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_2121a74c3_AsU64((*(_445634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b85a5be5:;
						{
							_2121a7c32_SetU64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_2121a74c3_AsU64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b85a5c5b:;
						{
							_2121a7c32_SetU64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_2121a74c3_AsU64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b85a5cc2:;
						{
							_2121a7c32_SetU64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_2121a74c3_AsU64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b85a262b:;
				};
			}
		}
		else if (_2121a449d_IsFloat((*(_445621_t)))) {
			_case_begin_1b85a22a7:;
			{
				{
					auto _match_expr{ _212197381_BitsizeOf(_2121970d9_RealKindOf((*(_445621_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b85a8995:;
						{
							_2121a84a2_SetF64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_2121a7737_AsF64((*(_445634_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b85a8a50:;
						{
							_2121a84a2_SetF64((*(_445634_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_2121a7737_AsF64((*(_445634_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b85a274c:;
				};
			}
		}
		_match_end_1b85a2087:;
	};
}



inline void _213d85622_updateModelToGenericIns(jule::Any* _449033_m, jule::Ptr<_213c796ae_FnIns>* _449052_f) {
	{
		auto &_match_expr{ (*(_449033_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b85a8c3c:;
			{
				(*(_449033_m))=jule::Any((*(_449052_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b85a8ca3:;
			{
				(*(_449033_m)).cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_449052_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b85a8d19:;
			{
				(*(_449033_m)).cast_ptr<_213c6d41c_StructStaticIdentExprModel>(&__jule_any_type101).get()._field_Method=(*(_449052_f));
			}
		}
		_match_end_1b85a7ea0:;
	};
}



inline jule::Bool _213d85864_pushSubIdentFromExpr(jule::Any _450129_expr, jule::Ptr<_213c426cc_SubIdentTypeDecl>* _450150_t) {
	{
		auto &_match_expr{ _450129_expr };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b85aac72:;
			{
				jule::Ptr<_213c47a9a_IdentExpr> _450417_e = _450129_expr.cast_ptr<_213c47a9a_IdentExpr>(&__jule_any_type85);;
				{ jule::Slice<jule::Ptr<_213c423e1_IdentTypeDecl>> &__jule_push_dest = (*(_450150_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_213c423e1_IdentTypeDecl>(_213c423e1_IdentTypeDecl{._field_Token=_450417_e.get()._field_Token, ._field_Ident=_450417_e.get()._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b85abc40:;
			{
				jule::Ptr<_213c4933d_SubIdentExpr> _451017_e = _450129_expr.cast_ptr<_213c4933d_SubIdentExpr>(&__jule_any_type91);;
				if ((!(_213d85864_pushSubIdentFromExpr(_451017_e.get()._field_Expr.get()._field_Kind, _450150_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_213c423e1_IdentTypeDecl>> &__jule_push_dest = (*(_450150_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_213c423e1_IdentTypeDecl>(_213c423e1_IdentTypeDecl{._field_Token=_451017_e.get()._field_Ident, ._field_Ident=_451017_e.get()._field_Ident.get()._field_Kind, })); };
			}
		}
		else {
			_case_begin_1b85ab712:;
			{
				return false;;
			}
		}
		_match_end_1b85ab6ac:;
	};
	return true;;
}



inline jule::Str _213d85b0b_constoa(jule::Ptr<_2121a4c51_Const>* _452413_c) {
	{
		
		if (_2121a88e2_IsI64((*(_452413_c)).ptr())) {
			_case_begin_1b85aeccb:;
			{
				return _212194d40_FmtInt(static_cast<jule::I64>(_2121a6549_ReadI64((*(_452413_c)).ptr())), 10LL);;
			}
		}
		else if (_2121a8b56_IsU64((*(_452413_c)).ptr())) {
			_case_begin_1b85ae171:;
			{
				return _2121949aa_FmtUint(static_cast<jule::U64>(_2121a67ad_ReadU64((*(_452413_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1b85ab976:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b85ad78b:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213d85e4c_evalEnumStatic(jule::Ptr<_213c8b3e6_Enum>* _453524_enm, jule::Ptr<_213c8a901_EnumItem>* _453541_item) {
	jule::Ptr<_213d5ae22_Data> _453613_d = jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>((*(_453524_enm)), 3)}), });;
	if (((*(_453541_item)) != nullptr)) {
		_453613_d.get()._field_Constant=jule::new_ptr<_2121a4c51_Const>((*((*(_453541_item)).get()._field_Value.get()._field_Data.get()._field_Constant)));
		_453613_d.get()._field_Model=jule::Any(_453613_d.get()._field_Constant, &__jule_any_type19);
		_213d84d5d_applyCastModelByEnum(&(_453613_d), (*(_453524_enm)));
	};
	return _453613_d;;
}



inline jule::Ptr<_213c694e5_StructLitExprModel> _213d861e4_isLitBased(jule::Any* _455220_m) {
	{
		auto &_match_expr{ (*(_455220_m)) };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b85b3021:;
			{
				return (*(_455220_m)).cast_ptr<_213c694e5_StructLitExprModel>(&__jule_any_type100);;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b85b3087:;
			{
				return (*(_455220_m)).cast_ptr<_213c69803_AllocStructLitExprModel>(&__jule_any_type115).get()._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b85b2d56:;
			{
				jule::Ptr<_213c6d076_StructSubIdentExprModel> _455917_ssi = (*(_455220_m)).cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71);;
				return _213d861e4_isLitBased(&(_455917_ssi.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b85b2dbc:;
			{
				jule::Ptr<_213c69d53_CastingExprModel> _456217_c = (*(_455220_m)).cast_ptr<_213c69d53_CastingExprModel>(&__jule_any_type98);;
				return _213d861e4_isLitBased(&(_456217_c.get()._field_Expr));;
			}
		}
		else {
			_case_begin_1b85b2938:;
			{
				return nullptr;;
			}
		}
		_match_end_1b85b18b0:;
	};
}



inline jule::Bool _213da2be4_kindUsesGenerics(jule::Ptr<_213d88834_TypeKind>* _173326_k, jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>>* _173341_generics) {
	{
		auto expr = _173341_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b88d660d:;
		if (it != expr_end) {
			jule::Ptr<_213c4dcc1_GenericDecl> *_173412_g = it;
			{
				if (static__213da27e8_exist(&((*(_173412_g)).get()._field_Ident), _173326_k)) {
					return true;;
				};
			}
			_iter_next_1b88d660d:;
			++it;
			goto _iter_begin_1b88d660d;
		}
		_iter_end_1b88d660d:;
	};
	return false;;
}



inline jule::Bool _213da3079_hasDirective(jule::Slice<jule::Ptr<_213c0e314_Directive>>* _174322_directives, jule::Str _174353_tag) {
	{
		auto expr = _174322_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b88d6b2a:;
		if (it != expr_end) {
			jule::Ptr<_213c0e314_Directive> _174417_dr = *it;
			{
				if ((_174417_dr.get()._field_Tag.get()._field_Kind == _174353_tag)) {
					return true;;
				};
			}
			_iter_next_1b88d6b2a:;
			++it;
			goto _iter_begin_1b88d6b2a;
		}
		_iter_end_1b88d6b2a:;
	};
	return false;;
}



inline jule::Bool _213da3321_canGetPtr(jule::Ptr<_213d5ae22_Data>* _175219_d) {
	if (((!((*(_175219_d)).get()._field_Lvalue)) || _213d5b791_IsConst((*(_175219_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_213d8c23e_Fn((*(_175219_d)).get()._field_Kind.ptr()) != nullptr) || (_213d8b78d_Enum((*(_175219_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1b88d8962:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b88d88eb:;
			{
				return true;;
			}
		}
		_match_end_1b88d78b7:;
	};
}



inline jule::Bool _213da3640_isValidForSptrType(jule::Ptr<_213d88834_TypeKind>* _176528_t) {
	jule::Ptr<_213c64402_StructIns> _176613_s = _213d8c4a3_Struct((*(_176528_t)).ptr());;
	if ((((_176613_s != nullptr) && (_176613_s.get()._field_Decl != nullptr)) && _176613_s.get()._field_Decl.get()._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _213da38d7_isValidForRef(jule::Ptr<_213d88834_TypeKind>* _177423_t) {
	return (_213d8c23e_Fn((*(_177423_t)).ptr()) == nullptr);;
}



inline jule::Bool _213da3ba1_isBuiltinStrConvertable(jule::Ptr<_213d88834_TypeKind>* _177733_t) {
	return ((((!(_213d89aee_Void((*(_177733_t)).ptr()))) && (_213d8c23e_Fn((*(_177733_t)).ptr()) == nullptr)) && (_213d8cbe0_Tup((*(_177733_t)).ptr()) == nullptr)) && (!(_213d8ce54_comptime((*(_177733_t)).ptr()))));;
}



inline jule::Str _213da3e26_buildLinkPathByTokens(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _178127_tokens) {
	jule::Str _178213_s = (*(_178127_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_178127_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b88dca10:;
		if (it != expr_end) {
			jule::Ptr<_2114c1b73_Token> *_178312_token = it;
			{
				(_178213_s).append("::", 2);
				_178213_s+=(*(_178312_token)).get()._field_Kind;
			}
			_iter_next_1b88dca10:;
			++it;
			goto _iter_begin_1b88dca10;
		}
		_iter_end_1b88dca10:;
	};
	return _178213_s;;
}



inline jule::Ptr<_213d91089_Prim> _213da42cd_buildPrimType(jule::Str _179018_kind) {
	return jule::new_ptr<_213d91089_Prim>(_213d91089_Prim{._field_Kind=_179018_kind});;
}



inline jule::Ptr<_213c615db_Struct> _213da4575_getStructFromKind(jule::Ptr<_213d88834_TypeKind> _179626_k) {
	{
		
		if ((_179626_k == nullptr)) {
			_case_begin_1b88ddb43:;
			{
				return nullptr;;
			}
		}
		else if ((_213d8c4a3_Struct(_179626_k.ptr()) != nullptr)) {
			_case_begin_1b88ddba9:;
			{
				return _213d8c4a3_Struct(_179626_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_213d8b2b5_Sptr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1b88ddc20:;
			{
				return _213da4575_getStructFromKind(_213d8b2b5_Sptr(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_213d8beca_Slc(_179626_k.ptr()) != nullptr)) {
			_case_begin_1b88ddc86:;
			{
				return _213da4575_getStructFromKind(_213d8beca_Slc(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_213d8bc66_Arr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1b88de00b:;
			{
				return _213da4575_getStructFromKind(_213d8bc66_Arr(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_213d8b529_Ptr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1b88de072:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1b88dd22a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b88dd15e:;
	};
}



inline void _213da482d_applyImplicitCast(jule::Ptr<_213d88834_TypeKind>* _181827_dest, jule::Ptr<_213d5ae22_Data>* _181849_d) {
	if (_213d8988a_IsNil((*(_181849_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_213d91089_Prim> _18229_destPrim = _213d8b051_Prim((*(_181827_dest)).ptr());;
	jule::Ptr<_213d91089_Prim> _18239_prim = _213d8b051_Prim((*(_181849_d)).get()._field_Kind.ptr());;
	if ((_18229_destPrim != nullptr)) {
		if (_213d944ee_IsAny(_18229_destPrim.ptr())) {
			if (((_18239_prim == nullptr) || (!(_213d944ee_IsAny(_18239_prim.ptr()))))) {
				_213d845cc_applyCastKind(_181849_d, _181827_dest);
			};
			return;;
		};
		if (((((((!(_213d89626_Binded((*(_181849_d)).get()._field_Kind.ptr()))) && (!((*(_181849_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_181849_d)).get()._field_Lvalue))) && (!(_213d5b791_IsConst((*(_181849_d)).ptr())))) && (_18239_prim != nullptr)) && _2121a4745_IsNum(_18239_prim.get()._field_Kind))) {
			_213d845cc_applyCastKind(_181849_d, _181827_dest);
		};
		return;;
	};
	jule::Ptr<_213c88b63_Trait> _18429_dt = _213d8c717_Trait((*(_181827_dest)).ptr());;
	if ((_18429_dt != nullptr)) {
		jule::Ptr<_213c88b63_Trait> _184413_bt = _213d8c717_Trait((*(_181849_d)).get()._field_Kind.ptr());;
		if (((_184413_bt == nullptr) || (_184413_bt != _18429_dt))) {
			_213d84324_applyCastKindModel(_181849_d, _181827_dest);
			return;;
		};
	};
	if (((_213d8ba02_TypeEnum((*(_181827_dest)).ptr()) != nullptr) && (_213d8ba02_TypeEnum((*(_181849_d)).get()._field_Kind.ptr()) == nullptr))) {
		_213d84324_applyCastKindModel(_181849_d, _181827_dest);
		return;;
	};
}



inline jule::Bool _213da4ac5_validTypeForXof(jule::Ptr<_213d88834_TypeKind>* _185725_t) {
	return ((!(_213d89aee_Void((*(_185725_t)).ptr()))) && (_213d8c23e_Fn((*(_185725_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_213d56417_SymbolTable__jule_tuple_s_2110be2cb_Log _213da7875_buildSymbols(jule::Ptr<_213c0d07c_Ast>* _1622_ast, jule::Trait<_213cd50cc_Importer>* _1638_importer, jule::Ptr<_213c8318a_symbolBuilder> _1662_owner) {
	__jule_tuple_x_213d56417_SymbolTable__jule_tuple_s_2110be2cb_Log __jule_func_result;
	jule::Ptr<_213c8318a_symbolBuilder> _1713_sb = jule::new_ptr<_213c8318a_symbolBuilder>(_213c8318a_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_213c880e6_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_213cda8b8_Package__jule_tuple_s_2110be2cb_Log _213da7ca4_analyzePackage(jule::Slice<jule::Ptr<_213c0d07c_Ast>>* _3024_files, jule::Trait<_213cd50cc_Importer>* _3044_importer, jule::I32* _3065_flags) {
	__jule_tuple_x_213cda8b8_Package__jule_tuple_s_2110be2cb_Log __jule_func_result;
	jule::Slice<jule::Ptr<_213d56417_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_213d56417_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b89e62ab:;
		if (it != expr_end) {
			jule::Ptr<_213c0d07c_Ast> _3317_f = *it;
			{
				jule::Ptr<_213d56417_SymbolTable> _3418_table;;
				jule::Slice<_2110be2cb_Log> _3429_errors;;
				({
					__jule_tuple_x_213d56417_SymbolTable__jule_tuple_s_2110be2cb_Log __jule_assign_result = _213da7875_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_213d56417_SymbolTable>> &__jule_push_dest = _3213_tables; __jule_push_dest.push(_3418_table); };
			}
			_iter_next_1b89e62ab:;
			++it;
			goto _iter_begin_1b89e62ab;
		}
		_iter_end_1b89e62ab:;
	};
	jule::Ptr<_213ce1050_Sema> _4113_sema = jule::new_ptr<_213ce1050_Sema>(_213ce1050_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_213ce0538_commonSemaMeta>()});;
	_213d0d336_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_213cda8b8_Package> _5013_pkg = jule::new_ptr<_213cda8b8_Package>(_213cda8b8_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _5013_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_213cda8b8_Package__jule_tuple_s_2110be2cb_Log _213da818e_AnalyzePackage(jule::Slice<jule::Ptr<_213c0d07c_Ast>> _7423_files, jule::Trait<_213cd50cc_Importer> _7442_importer, jule::I32 _7462_flags) {
	__jule_tuple_x_213cda8b8_Package__jule_tuple_s_2110be2cb_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_213cda8b8_Package> _7814_package;;
	jule::Slice<_2110be2cb_Log> _7827_logs;;
	({
		__jule_tuple_x_213cda8b8_Package__jule_tuple_s_2110be2cb_Log __jule_assign_result = _213da7ca4_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_7814_package = __jule_assign_result.__jule_result_arg0;
		_7827_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7814_package;
	__jule_func_result.__jule_result_arg1 = _7827_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_213c796ae_FnIns> _213e51e80_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1b8a0032b:;
			{
				static jule::Ptr<_213c796ae_FnIns> _2620_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e580da_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1b89ebc40:;
			{
				static jule::Ptr<_213c796ae_FnIns> _2920_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e584c5_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1b8a003e7:;
			{
				static jule::Ptr<_213c796ae_FnIns> _3220_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e58ae1_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1b8a0045d:;
			{
				static jule::Ptr<_213c796ae_FnIns> _3520_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e58ecb_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1b89eee30:;
			{
				static jule::Ptr<_213c796ae_FnIns> _3820_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e593b6_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1b89eeea7:;
			{
				static jule::Ptr<_213c796ae_FnIns> _4120_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e597a1_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1b8a0002e:;
			{
				static jule::Ptr<_213c796ae_FnIns> _4420_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e5a5a4_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1b8a000a6:;
			{
				static jule::Ptr<_213c796ae_FnIns> _4720_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e5bae4_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1b8a004d5:;
			{
				static jule::Ptr<_213c796ae_FnIns> _5020_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e5c661_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1b8a0055c:;
			{
				static jule::Ptr<_213c796ae_FnIns> _5320_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e5d112_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1b8a005d4:;
			{
				static jule::Ptr<_213c796ae_FnIns> _5620_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e5d4ec_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1b8a0065b:;
			{
				static jule::Ptr<_213c796ae_FnIns> _5920_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e5d8d7_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1b89eed31:;
			{
				return nullptr;;
			}
		}
		_match_end_1b89eebee:;
	};
}



inline jule::Ptr<_213d87adb_TypeAlias> _213e52205_primTypeAlias(jule::Ptr<_213d88834_TypeKind>* _6623_k) {
	return jule::new_ptr<_213d87adb_TypeAlias>(_213d87adb_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_213d906d7_TypeSymbol>(_213d906d7_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_213d87adb_TypeAlias> _213e55a22_findBuiltinTypeAlias(jule::Str _9325_ident) {
	{
		auto &_match_expr{ _9325_ident };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b8a009ad:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _9620_t = _213e52205_primTypeAlias(&(_213e52810_primAny));;
				return _9620_t;;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1b8a08785:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _9920_t = _213e52205_primTypeAlias(&(_213e52ac9_primStr));;
				return _9920_t;;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1b8a087eb:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _10220_t = _213e52205_primTypeAlias(&(_213e52dd7_primBool));;
				return _10220_t;;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b8a0828a:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _10520_t = _213e52205_primTypeAlias(&(_213e531a1_primUintptr));;
				return _10520_t;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b8a08301:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _10820_t = _213e52205_primTypeAlias(&(_213e5346a_primUint));;
				return _10820_t;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b8a08367:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _11120_t = _213e52205_primTypeAlias(&(_213e53734_primInt));;
				return _11120_t;;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b8a083cd:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _11420_t = _213e52205_primTypeAlias(&(_213e53b0d_primI8));;
				return _11420_t;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b8a08862:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _11720_t = _213e52205_primTypeAlias(&(_213e53dc7_primI16));;
				return _11720_t;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b8a088c8:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _12020_t = _213e52205_primTypeAlias(&(_213e5445a_primI64));;
				return _12020_t;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b8a0893e:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _12320_t = _213e52205_primTypeAlias(&(_213e549dd_primU16));;
				return _12320_t;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b8a089b6:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _12620_t = _213e52205_primTypeAlias(&(_213e54ca7_primU32));;
				return _12620_t;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b8a08a3d:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _12920_t = _213e52205_primTypeAlias(&(_213e55071_primU64));;
				return _12920_t;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b8a08ab5:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _13220_t = _213e52205_primTypeAlias(&(_213e554e4_primF32));;
				return _13220_t;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b8a08b3c:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _13520_t = _213e52205_primTypeAlias(&(_213e557ad_primF64));;
				return _13520_t;;
			}
		}
		else if (_match_expr == jule::Str("byte", 4) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1b8a08bb4:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _13820_t = _213e52205_primTypeAlias(&(_213e54724_primU8));;
				return _13820_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4) || _match_expr == jule::Str("i32", 3)) {
			_case_begin_1b8a08c3b:;
			{
				static jule::Ptr<_213d87adb_TypeAlias> _14120_t = _213e52205_primTypeAlias(&(_213e54191_primI32));;
				return _14120_t;;
			}
		}
		else {
			_case_begin_1b8a0807b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8a081be:;
	};
}



inline jule::Any _213e55c31_findBuiltinDef(jule::Str _14819_ident) {
	jule::Ptr<_213c796ae_FnIns> _14913_f = _213e51e80_findBuiltinFn(_14819_ident);;
	if ((_14913_f != nullptr)) {
		return jule::Any(_14913_f, &__jule_any_type7);;
	};
	jule::Ptr<_213d87adb_TypeAlias> _15313_ta = _213e55a22_findBuiltinTypeAlias(_14819_ident);;
	if ((_15313_ta != nullptr)) {
		return jule::Any(_15313_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _213e55ec8_findBuiltinDefStdDebug(jule::Str _16027_ident) {
	{
		auto &_match_expr{ _16027_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1b8a13097:;
			{
				static jule::Ptr<_213c796ae_FnIns> _16320_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e62127_builtinCallerStdDebugOut), });;
				return jule::Any(_16320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1b8a1310d:;
			{
				static jule::Ptr<_213c796ae_FnIns> _16620_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e62512_builtinCallerStdDebugOutln), });;
				return jule::Any(_16620_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b8a12717:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8a12629:;
	};
}



inline jule::Any _213e56270_findBuiltinDefStdMem(jule::Str _17325_ident) {
	{
		auto &_match_expr{ _17325_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1b8a1498e:;
			{
				static jule::Ptr<_213c796ae_FnIns> _17620_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e60a4e_builtinCallerStdMemSizeOf), });;
				return jule::Any(_17620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1b8a14a05:;
			{
				static jule::Ptr<_213c796ae_FnIns> _17920_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e60e6c_builtinCallerStdMemAlignOf), });;
				return jule::Any(_17920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1b8a147b3:;
			{
				static jule::Ptr<_213c796ae_FnIns> _18220_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e6138a_builtinCallerStdMemFree), });;
				return jule::Any(_18220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b8a12b13:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8a13174:;
	};
}



inline jule::Any _213e56539_findBuiltinDefStdComptime(jule::Str _18930_ident) {
	{
		auto &_match_expr{ _18930_ident };
		
		if (_match_expr == jule::Str("TypeOf", 6)) {
			_case_begin_1b8a16d04:;
			{
				static jule::Ptr<_213c796ae_FnIns> _19220_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e5dce4_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_19220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("ValueOf", 7)) {
			_case_begin_1b8a16d6a:;
			{
				static jule::Ptr<_213c796ae_FnIns> _19520_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e5e212_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_19520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Range", 5)) {
			_case_begin_1b8a16b39:;
			{
				static jule::Ptr<_213c796ae_FnIns> _19820_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e5e8c7_builtinCallerStdComptimeRange), });;
				return jule::Any(_19820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Line", 4)) {
			_case_begin_1b8a16bb1:;
			{
				static jule::Ptr<_213c796ae_FnIns> _20120_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e5ece5_builtinCallerStdComptimeLine), });;
				return jule::Any(_20120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("File", 4)) {
			_case_begin_1b8a16c38:;
			{
				static jule::Ptr<_213c796ae_FnIns> _20420_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e60213_builtinCallerStdComptimeFile), });;
				return jule::Any(_20420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Files", 5)) {
			_case_begin_1b8a16683:;
			{
				static jule::Ptr<_213c796ae_FnIns> _20720_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e60631_builtinCallerStdComptimeFiles), });;
				return jule::Any(_20720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b8a14373:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8a14a6b:;
	};
}



inline jule::Any _213e568e1_findBuiltinDefStdJuleIntegrated(jule::Str _21436_ident) {
	{
		auto &_match_expr{ _21436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1b8a1aec3:;
			{
				static jule::Ptr<_213c796ae_FnIns> _21720_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e617b9_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_21720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1b8a1b039:;
			{
				static jule::Ptr<_213c796ae_FnIns> _22020_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_Decl=jule::new_ptr<_213c76a0d_Fn>(_213c76a0d_Fn{._field_Generics=jule::Slice<jule::Ptr<_213c4dcc1_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e61bd7_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_22020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b8a1793c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8a17c39:;
	};
}



inline jule::Any _213e56bbb_findPackageBuiltinDef(jule::Str _23226_link_path, jule::Str _23242_ident) {
	{
		auto &_match_expr{ _23226_link_path };
		
		if (_match_expr == jule::Str("std::comptime", 13)) {
			_case_begin_1b8a1d13a:;
			{
				return _213e56539_findBuiltinDefStdComptime(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1b8a1d1a1:;
			{
				return _213e55ec8_findBuiltinDefStdDebug(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1b8a1ce5e:;
			{
				return _213e56270_findBuiltinDefStdMem(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1b8a1cec5:;
			{
				return _213e568e1_findBuiltinDefStdJuleIntegrated(_23242_ident);;
			}
		}
		else {
			_case_begin_1b8a1c832:;
			{
				return nullptr;;
			}
		}
		_match_end_1b8a1c7cc:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213e570c8_builtinCallerCommonPlain(jule::Ptr<_213d5c990_Eval>* _24734_e, jule::Ptr<_213c49dbb_FnCallExpr>* _24749_fc, jule::Ptr<_213d5ae22_Data>* _24771_d) {
	jule::Ptr<_213c796ae_FnIns> _24813_f = _213d8c23e_Fn((*(_24771_d)).get()._field_Kind.ptr());;
	_213d4c5a6_fnCallArgChecker _25013_fcac = _213d4c5a6_fnCallArgChecker{._field_e=(*(_24734_e)), ._field_args=(*(_24749_fc)).get()._field_Args, ._field_errorToken=(*(_24749_fc)).get()._field_Token, ._field_f=_24813_f, ._field_dynamicAnnotation=false, };;
	if ((!(_213d4e93d_check(&_25013_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_213c6a705_FnCallExprModel> _26113_model = jule::new_ptr<_213c6a705_FnCallExprModel>(_213c6a705_FnCallExprModel{._field_Token=(*(_24749_fc)).get()._field_Token, ._field_Func=_24813_f, ._field_Expr=(*(_24771_d)).get()._field_Model, ._field_Args=_25013_fcac._field_argModels, });;
	if ((_24813_f.get()._field_Result == nullptr)) {
		(*(_24771_d))=_213d847ca_buildVoidData();
	} else {
		(*(_24771_d))=jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_24813_f.get()._field_Result, });
	};
	(*(_24771_d)).get()._field_Model=jule::Any(_26113_model, &__jule_any_type35);
	return (*(_24771_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e574c4_builtinCallerCommon(jule::Ptr<_213d5c990_Eval>* _28029_e, jule::Ptr<_213c49dbb_FnCallExpr>* _28044_fc, jule::Ptr<_213d5ae22_Data>* _28066_d) {
	return _213e570c8_builtinCallerCommonPlain(_28029_e, _28044_fc, _28066_d);;
}



inline jule::Ptr<_213d5ae22_Data> _213e578ae_builtinCallerCommonMut(jule::Ptr<_213d5c990_Eval>* _28432_e, jule::Ptr<_213c49dbb_FnCallExpr>* _28447_fc, jule::Ptr<_213d5ae22_Data>* _28469_d) {
	if ((!((*(_28469_d)).get()._field_Mutable))) {
		_213d5ce9b_pushErr((*(_28432_e)).ptr(), (*(_28447_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _213e574c4_builtinCallerCommon(_28432_e, _28447_fc, _28469_d);;
}



inline jule::Ptr<_213d5ae22_Data> _213e57c00_builtinCallerError(jule::Ptr<_213d5c990_Eval>* _29128_e, jule::Ptr<_213c49dbb_FnCallExpr>* _29143_fc) {
	if (((*(_29143_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_29143_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _29913_expr = _213d7945c_evalExpr((*(_29128_e)), (*(_29143_fc)).get()._field_Args[0LL]);;
	if ((_29913_expr == nullptr)) {
		return nullptr;;
	};
	if (_213d5b2b8_IsNil(_29913_expr.ptr())) {
		_213d5ce9b_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_213d5ae22_Data> _30813_d = _213d847ca_buildVoidData();;
	_30813_d.get()._field_Model=jule::Any(jule::new_ptr<_213c72b6e_BuiltinErrorCallExprModel>(_213c72b6e_BuiltinErrorCallExprModel{._field_Err=_29913_expr}), &__jule_any_type23);
	return _30813_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213e580da_builtinCallerOut(jule::Ptr<_213d5c990_Eval>* _31326_e, jule::Ptr<_213c49dbb_FnCallExpr>* _31341_fc, jule::Ptr<_213d5ae22_Data>* ) {
	if (((*(_31341_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_31341_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _32213_expr = _213d7945c_evalExpr((*(_31326_e)), (*(_31341_fc)).get()._field_Args[0LL]);;
	if ((_32213_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_213da3ba1_isBuiltinStrConvertable(&(_32213_expr.get()._field_Kind))))) {
		_213d5ce9b_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213d5ae22_Data> _33213_d = _213d847ca_buildVoidData();;
	_33213_d.get()._field_Model=jule::Any(jule::new_ptr<_213c6e808_BuiltinOutCallExprModel>(_213c6e808_BuiltinOutCallExprModel{._field_Expr=_32213_expr.get()._field_Model, }), &__jule_any_type28);
	return _33213_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213e584c5_builtinCallerOutln(jule::Ptr<_213d5c990_Eval>* _33728_e, jule::Ptr<_213c49dbb_FnCallExpr>* _33743_fc, jule::Ptr<_213d5ae22_Data>* _33765_d) {
	(*(_33765_d))=_213e580da_builtinCallerOut(_33728_e, _33743_fc, _33765_d);
	if (((*(_33765_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_33765_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c6ebe3_BuiltinOutlnCallExprModel>(_213c6ebe3_BuiltinOutlnCallExprModel{._field_Expr=(*(_33765_d)).get()._field_Model.cast_ptr<_213c6e808_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Expr, }), &__jule_any_type29);
	return (*(_33765_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e58ae1_builtinCallerNew(jule::Ptr<_213d5c990_Eval>* _34926_e, jule::Ptr<_213c49dbb_FnCallExpr>* _34941_fc, jule::Ptr<_213d5ae22_Data>* _34963_d) {
	if (((*(_34941_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_34941_fc)).get()._field_Args.len() > 2LL)) {
		_213d5ce9b_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _35813_t = _213d78725_evalExprKind((*(_34926_e)), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_35813_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_35813_t.get()._field_Decl))) {
		_213d5ce9b_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_213da3640_isValidForSptrType(&(_35813_t.get()._field_Kind))))) {
		jule::Ptr<_213c64402_StructIns> _36917_s = _213d8c4a3_Struct(_35813_t.get()._field_Kind.ptr());;
		if ((((_36917_s != nullptr) && (_36917_s.get()._field_Decl != nullptr)) && _36917_s.get()._field_Decl.get()._field_Binded)) {
			_213d5ce9b_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_34963_d)).get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213d947da_Sptr>(_213d947da_Sptr{._field_Elem=_35813_t.get()._field_Kind}), 21)});
	if (((*(_34941_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_213d88834_TypeKind> _38317_old = (*(_34926_e)).get()._field_prefix;;
		(*(_34926_e)).get()._field_prefix=_35813_t.get()._field_Kind;
		jule::Ptr<_213d5ae22_Data> _38617_init = _213d7945c_evalExpr((*(_34926_e)), (*(_34941_fc)).get()._field_Args[1LL]);;
		(*(_34926_e)).get()._field_prefix=_38317_old;
		if ((_38617_init != nullptr)) {
			jule::Ptr<_2114c1b73_Token> _39121_token = (*(_34941_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_213cedd93_checkValidityForInitExpr((*(_34926_e)).get()._field_s, (!((*(_34926_e)).get()._field_immutable)), false, &(_35813_t.get()._field_Kind), &(_38617_init), &(_39121_token));
			_213ceab70_checkAssignType((*(_34926_e)).get()._field_s, false, &(_35813_t.get()._field_Kind), &(_38617_init), _39121_token);
			(*(_34963_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c703ec_BuiltinNewCallExprModel>(_213c703ec_BuiltinNewCallExprModel{._field_Kind=_35813_t.get()._field_Kind, ._field_Init=_38617_init.get()._field_Model}), &__jule_any_type116);
		};
	} else {
		(*(_34963_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c703ec_BuiltinNewCallExprModel>(_213c703ec_BuiltinNewCallExprModel{._field_Kind=_35813_t.get()._field_Kind, }), &__jule_any_type116);
	};
	return (*(_34963_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e58ecb_builtinCallerPanic(jule::Ptr<_213d5c990_Eval>* _41128_e, jule::Ptr<_213c49dbb_FnCallExpr>* _41143_fc, jule::Ptr<_213d5ae22_Data>* ) {
	if (((*(_41143_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_41143_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _42013_expr = _213d7945c_evalExpr((*(_41128_e)), (*(_41143_fc)).get()._field_Args[0LL]);;
	if ((_42013_expr == nullptr)) {
		return nullptr;;
	};
	if (((_213d8b051_Prim(_42013_expr.get()._field_Kind.ptr()) == nullptr) || (!(_213d9428a_IsStr(_213d8b051_Prim(_42013_expr.get()._field_Kind.ptr()).ptr()))))) {
		_213d5ce9b_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_213d5ae22_Data> _42913_d = _213d847ca_buildVoidData();;
	_42913_d.get()._field_Model=jule::Any(jule::new_ptr<_213c707d7_BuiltinPanicCallExprModel>(_213c707d7_BuiltinPanicCallExprModel{._field_Token=(*(_41143_fc)).get()._field_Token, ._field_Expr=_42013_expr.get()._field_Model}), &__jule_any_type30);
	return _42913_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213e593b6_builtinCallerMake(jule::Ptr<_213d5c990_Eval>* _43727_e, jule::Ptr<_213c49dbb_FnCallExpr>* _43742_fc, jule::Ptr<_213d5ae22_Data>* _43764_d) {
	if (((*(_43742_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_43742_fc)).get()._field_Args.len() == 1LL)) {
			_213d5ce9b_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_213d5ce9b_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213d5ae22_Data> _44713_t = _213d78725_evalExprKind((*(_43727_e)), (*(_43742_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_44713_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_44713_t.get()._field_Decl))) {
		_213d5ce9b_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_43742_fc)).get()._field_Args.len() > 3LL)) {
		_213d5ce9b_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_43764_d)).get()._field_Kind=_44713_t.get()._field_Kind;
	jule::Ptr<_213d5ae22_Data> _46313_lenExpr = _213d7945c_evalExpr(_213cea367_evalp((*(_43727_e)).get()._field_s, (*(_43727_e)).get()._field_lookup, _44713_t.get()._field_Kind), (*(_43742_fc)).get()._field_Args[1LL]);;
	if ((_46313_lenExpr == nullptr)) {
		return nullptr;;
	};
	_213d6658c_checkIntegerIndexingByData((*(_43727_e)).ptr(), &(_46313_lenExpr), (*(_43742_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_213c71244_BuiltinMakeCallExprModel> _47013_model = jule::new_ptr<_213c71244_BuiltinMakeCallExprModel>(_213c71244_BuiltinMakeCallExprModel{._field_Kind=_44713_t.get()._field_Kind, ._field_Len=_46313_lenExpr.get()._field_Model, });;
	(*(_43764_d)).get()._field_Model=jule::Any(_47013_model, &__jule_any_type117);
	if (((*(_43742_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_213d5ae22_Data> _47617_capExpr = _213d7945c_evalExpr(_213cea367_evalp((*(_43727_e)).get()._field_s, (*(_43727_e)).get()._field_lookup, _44713_t.get()._field_Kind), (*(_43742_fc)).get()._field_Args[2LL]);;
		if ((_47617_capExpr == nullptr)) {
			return (*(_43764_d));;
		};
		_213d6658c_checkIntegerIndexingByData((*(_43727_e)).ptr(), &(_47617_capExpr), (*(_43742_fc)).get()._field_Args[2LL].get()._field_Token);
		_47013_model.get()._field_Cap=_47617_capExpr.get()._field_Model;
	};
	return (*(_43764_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e597a1_builtinCallerAppend(jule::Ptr<_213d5c990_Eval>* _48629_e, jule::Ptr<_213c49dbb_FnCallExpr>* _48644_fc, jule::Ptr<_213d5ae22_Data>* _48666_d) {
	if (((*(_48644_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_48644_fc)).get()._field_Args.len() == 1LL)) {
			_213d5ce9b_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_213d5ce9b_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213d5ae22_Data> _49613_t = _213d7945c_evalExpr((*(_48629_e)), (*(_48644_fc)).get()._field_Args[0LL]);;
	if ((_49613_t == nullptr)) {
		return nullptr;;
	};
	if ((_213d8beca_Slc(_49613_t.get()._field_Kind.ptr()) == nullptr)) {
		_213d5ce9b_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213c796ae_FnIns> _50613_f = jule::new_ptr<_213c796ae_FnIns>(_213c796ae_FnIns{._field_Params=jule::Slice<jule::Ptr<_213c787e0_ParamIns>>::make({jule::new_ptr<_213c787e0_ParamIns>(_213c787e0_ParamIns{._field_Decl=jule::new_ptr<_213c751c1_Param>(_213c751c1_Param{._field_Mutable=true, }), ._field_Kind=_49613_t.get()._field_Kind}),jule::new_ptr<_213c787e0_ParamIns>(_213c787e0_ParamIns{._field_Decl=jule::new_ptr<_213c751c1_Param>(_213c751c1_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_213d8beca_Slc(_49613_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_49613_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_213d5ae22_Data>(jule::Ptr<_213d5c990_Eval>*,jule::Ptr<_213c49dbb_FnCallExpr>*,jule::Ptr<_213d5ae22_Data>*)>(_213e570c8_builtinCallerCommonPlain), });;
	(*(_48666_d)).get()._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(_50613_f, 1)});
	(*(_48666_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c6dac1_CommonIdentExprModel>(_213c6dac1_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_48666_d))=_213e570c8_builtinCallerCommonPlain(_48629_e, _48644_fc, _48666_d);
	if (((*(_48666_d)) != nullptr)) {
		jule::Ptr<_213c6a705_FnCallExprModel> _53417_model = (*(_48666_d)).get()._field_Model.cast_ptr<_213c6a705_FnCallExprModel>(&__jule_any_type35);;
		(*(_48666_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c7162e_BuiltinAppendCallExprModel>(_213c7162e_BuiltinAppendCallExprModel{._field_Dest=_53417_model.get()._field_Args[0LL], ._field_Elements=_53417_model.get()._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_48666_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e59c35_callerCopySlice(jule::Ptr<_213d5ae22_Data>* _54325_dest, jule::Ptr<_213d5c990_Eval>* _54343_e, jule::Ptr<_213c49dbb_FnCallExpr>* _54358_fc, jule::Ptr<_213d5ae22_Data>* _54380_d) {
	if ((!((*(_54325_dest)).get()._field_Mutable))) {
		_213d5ce9b_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_213d5ae22_Data> _54813_src = _213d7945c_evalExpr((*(_54343_e)), (*(_54358_fc)).get()._field_Args[1LL]);;
	if ((_54813_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_213d95247_Slc> _55213_slc = _213d8beca_Slc(_54813_src.get()._field_Kind.ptr());;
	if ((_55213_slc != nullptr)) {
		if (((!(_54813_src.get()._field_Mutable)) && _213d8a0c7_Mutable(_55213_slc.get()._field_Elem.ptr()))) {
			_213d5ce9b_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_213d88ee9_Equal((*(_54325_dest)).get()._field_Kind, _54813_src.get()._field_Kind)))) {
			_213d5ce9b_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_54325_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_54813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_213d91089_Prim> _56213_destPrim = _213d8b051_Prim(_213d8beca_Slc((*(_54325_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_213d91089_Prim> _56313_prim = _213d8b051_Prim(_54813_src.get()._field_Kind.ptr());;
		if (((((_56213_destPrim == nullptr) || (_56313_prim == nullptr)) || (!(_213d9428a_IsStr(_56313_prim.ptr())))) || (!(_213d92860_IsU8(_56213_destPrim.ptr()))))) {
			_213d5ce9b_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_54325_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_54813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_54380_d)).get()._field_Kind=_213d55306_lenKind();
	(*(_54380_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c72784_BuiltinCopyCallExprModel>(_213c72784_BuiltinCopyCallExprModel{._field_Dest=(*(_54325_dest)), ._field_Src=_54813_src}), &__jule_any_type32);
	return (*(_54380_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e5a1b9_callerCopyStr(jule::Ptr<_213d5ae22_Data>* _57723_dest, jule::Ptr<_213d5c990_Eval>* _57741_e, jule::Ptr<_213c49dbb_FnCallExpr>* _57756_fc, jule::Ptr<_213d5ae22_Data>* _57778_d) {
	if ((!((*(_57723_dest)).get()._field_Mutable))) {
		_213d5ce9b_pushErr((*(_57741_e)).ptr(), (*(_57756_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_213d5ae22_Data> _58213_src = _213d7945c_evalExpr((*(_57741_e)), (*(_57756_fc)).get()._field_Args[1LL]);;
	if ((_58213_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_213d8b051_Prim(_58213_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a58791:;
			{
				if (_213d9428a_IsStr(_213d8b051_Prim(_58213_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_213d8beca_Slc(_58213_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a58807:;
			{
				jule::Ptr<_213d95247_Slc> _59217_slc = _213d8beca_Slc(_58213_src.get()._field_Kind.ptr());;
				if (((_213d8b051_Prim(_59217_slc.get()._field_Elem.ptr()) != nullptr) && _213d92860_IsU8(_213d8b051_Prim(_59217_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1b8a58c47:;
	};
	_213d5ce9b_pushErr((*(_57741_e)).ptr(), (*(_57756_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str((*(_57723_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_213d88bdb_Str(_58213_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_57778_d)).get()._field_Kind=_213d55306_lenKind();
	(*(_57778_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c72784_BuiltinCopyCallExprModel>(_213c72784_BuiltinCopyCallExprModel{._field_Dest=(*(_57723_dest)), ._field_Src=_58213_src}), &__jule_any_type32);
	return (*(_57778_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e5a5a4_builtinCallerCopy(jule::Ptr<_213d5c990_Eval>* _60727_e, jule::Ptr<_213c49dbb_FnCallExpr>* _60742_fc, jule::Ptr<_213d5ae22_Data>* _60764_d) {
	if (((*(_60742_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_60742_fc)).get()._field_Args.len() == 1LL)) {
			_213d5ce9b_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_213d5ce9b_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_60742_fc)).get()._field_Args.len() > 2LL)) {
		_213d5ce9b_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _62013_dest = _213d7945c_evalExpr((*(_60727_e)), (*(_60742_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_62013_dest == nullptr)) {
			_case_begin_1b8a623e3:;
			{
				return nullptr;;
			}
		}
		else if ((_213d8beca_Slc(_62013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a62d83:;
			{
				return _213e59c35_callerCopySlice(&(_62013_dest), _60727_e, _60742_fc, _60764_d);;
			}
		}
		else if (((_213d8b051_Prim(_62013_dest.get()._field_Kind.ptr()) != nullptr) && _213d9428a_IsStr(_213d8b051_Prim(_62013_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b8a62de9:;
			{
				return _213e5a1b9_callerCopyStr(&(_62013_dest), _60727_e, _60742_fc, _60764_d);;
			}
		}
		else {
			_case_begin_1b8a620b3:;
			{
				_213d5ce9b_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8a6205d:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213e5a8e5_callerLenSlice(jule::Ptr<_213d5ae22_Data>* _63424_expr, jule::Ptr<_213d5ae22_Data>* _63442_d) {
	(*(_63442_d)).get()._field_Kind=_213d55306_lenKind();
	(*(_63442_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c7194d_BuiltinLenCallExprModel>(_213c7194d_BuiltinLenCallExprModel{._field_Expr=(*(_63424_expr))}), &__jule_any_type118);
	return (*(_63442_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e5ac36_callerLenMap(jule::Ptr<_213d5ae22_Data>* _64222_expr, jule::Ptr<_213d5ae22_Data>* _64240_d) {
	(*(_64240_d)).get()._field_Kind=_213d55306_lenKind();
	(*(_64240_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c7194d_BuiltinLenCallExprModel>(_213c7194d_BuiltinLenCallExprModel{._field_Expr=(*(_64222_expr))}), &__jule_any_type118);
	return (*(_64240_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e5b077_callerLenArr(jule::Ptr<_213d5ae22_Data>* _65022_expr, jule::Ptr<_213d5ae22_Data>* _65040_d) {
	(*(_65040_d)).get()._field_Kind=_213d55306_lenKind();
	(*(_65040_d)).get()._field_Constant=static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_213d8bc66_Arr((*(_65022_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_65040_d)).get()._field_Model=jule::Any((*(_65040_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_65040_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e5b3b8_callerLenStr(jule::Ptr<_213d5ae22_Data>* _65722_expr, jule::Ptr<_213d5ae22_Data>* _65740_d) {
	(*(_65740_d)).get()._field_Kind=_213d55306_lenKind();
	if (_213d5b791_IsConst((*(_65722_expr)).ptr())) {
		(*(_65740_d)).get()._field_Constant=static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2121a6c86_ReadStr((*(_65722_expr)).get()._field_Constant.ptr()).len())));
		(*(_65740_d)).get()._field_Model=jule::Any((*(_65740_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_65740_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c7194d_BuiltinLenCallExprModel>(_213c7194d_BuiltinLenCallExprModel{._field_Expr=(*(_65722_expr))}), &__jule_any_type118);
	};
	return (*(_65740_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e5b709_callerLenComptime(jule::Ptr<_213d5ae22_Data>* _67027_d, jule::I32 _67037_n) {
	(*(_67027_d)).get()._field_Kind=_213d55306_lenKind();
	(*(_67027_d)).get()._field_Constant=static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67037_n)));
	(*(_67027_d)).get()._field_Model=jule::Any((*(_67027_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_67027_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e5bae4_builtinCallerLen(jule::Ptr<_213d5c990_Eval>* _67726_e, jule::Ptr<_213c49dbb_FnCallExpr>* _67741_fc, jule::Ptr<_213d5ae22_Data>* _67763_d) {
	if (((*(_67741_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_67741_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _68513_dest = _213d7914e_evalExpr1((*(_67726_e)), (*(_67741_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_68513_dest == nullptr)) {
			_case_begin_1b8a725bd:;
			{
				return nullptr;;
			}
		}
		else if ((_213d8beca_Slc(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a7305d:;
			{
				return _213e5a8e5_callerLenSlice(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_213d8bc66_Arr(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a730c4:;
			{
				return _213e5b077_callerLenArr(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_213d8c97b_Map(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a72de8:;
			{
				return _213e5ac36_callerLenMap(&(_68513_dest), _67763_d);;
			}
		}
		else if (((_213d8b051_Prim(_68513_dest.get()._field_Kind.ptr()) != nullptr) && _213d9428a_IsStr(_213d8b051_Prim(_68513_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b8a72e5e:;
			{
				return _213e5b3b8_callerLenStr(&(_68513_dest), _67763_d);;
			}
		}
		else if ((_213d8d1b8_comptimeStructFields(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a72304:;
			{
				return _213e5b709_callerLenComptime(_67763_d, static_cast<jule::I32>(_213d8d1b8_comptimeStructFields(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_213d8d691_comptimeEnumFields(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a7236a:;
			{
				return _213e5b709_callerLenComptime(_67763_d, static_cast<jule::I32>(_213d8d691_comptimeEnumFields(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_213d8e3a6_comptimeTypeInfos(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a723d1:;
			{
				return _213e5b709_callerLenComptime(_67763_d, static_cast<jule::I32>(_213d8e3a6_comptimeTypeInfos(_68513_dest.get()._field_Kind.ptr()).get()._field_types.len()));;
			}
		}
		else if ((_213d8db69_comptimeParams(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a72447:;
			{
				return _213e5b709_callerLenComptime(_67763_d, static_cast<jule::I32>(_213d8db69_comptimeParams(_68513_dest.get()._field_Kind.ptr()).get()._field_params.len()));;
			}
		}
		else if ((_213d8e87e_comptimeStatics(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a7313a:;
			{
				return _213e5b709_callerLenComptime(_67763_d, static_cast<jule::I32>(_213d8e87e_comptimeStatics(_68513_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_213d90330_comptimeFiles(_68513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a731a1:;
			{
				return _213e5b709_callerLenComptime(_67763_d, static_cast<jule::I32>(_213d90330_comptimeFiles(_68513_dest.get()._field_Kind.ptr()).get()._field_files.len()));;
			}
		}
		else {
			_case_begin_1b8a7228d:;
			{
				_213d5ce9b_pushErr((*(_67726_e)).ptr(), (*(_67741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8a72238:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213e5be35_callerCapSlice(jule::Ptr<_213d5ae22_Data>* _71524_expr, jule::Ptr<_213d5ae22_Data>* _71542_d) {
	(*(_71542_d)).get()._field_Kind=_213d55306_lenKind();
	(*(_71542_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c71c6c_BuiltinCapCallExprModel>(_213c71c6c_BuiltinCapCallExprModel{._field_Expr=(*(_71524_expr))}), &__jule_any_type119);
	return (*(_71542_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e5c276_callerCapStr(jule::Ptr<_213d5ae22_Data>* _72322_expr, jule::Ptr<_213d5ae22_Data>* _72340_d) {
	(*(_72340_d)).get()._field_Kind=_213d55306_lenKind();
	if (_213d5b791_IsConst((*(_72322_expr)).ptr())) {
		(*(_72340_d)).get()._field_Constant=static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_2121a6c86_ReadStr((*(_72322_expr)).get()._field_Constant.ptr()).cap())));
		(*(_72340_d)).get()._field_Model=jule::Any((*(_72340_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_72340_d)).get()._field_Model=jule::Any(jule::new_ptr<_213c71c6c_BuiltinCapCallExprModel>(_213c71c6c_BuiltinCapCallExprModel{._field_Expr=(*(_72322_expr))}), &__jule_any_type119);
	};
	return (*(_72340_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e5c661_builtinCallerCap(jule::Ptr<_213d5c990_Eval>* _73626_e, jule::Ptr<_213c49dbb_FnCallExpr>* _73641_fc, jule::Ptr<_213d5ae22_Data>* _73663_d) {
	if (((*(_73641_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_73641_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _74413_dest = _213d7945c_evalExpr((*(_73626_e)), (*(_73641_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_74413_dest == nullptr)) {
			_case_begin_1b8a804bb:;
			{
				return nullptr;;
			}
		}
		else if (_74413_dest.get()._field_Decl) {
			_case_begin_1b8a80e5b:;
			{
				_213d5ce9b_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_213d8beca_Slc(_74413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a80ec2:;
			{
				return _213e5be35_callerCapSlice(&(_74413_dest), _73663_d);;
			}
		}
		else if (((_213d8b051_Prim(_74413_dest.get()._field_Kind.ptr()) != nullptr) && _213d9428a_IsStr(_213d8b051_Prim(_74413_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b8a80ce6:;
			{
				return _213e5c276_callerCapStr(&(_74413_dest), _73663_d);;
			}
		}
		else {
			_case_begin_1b8a8018b:;
			{
				_213d5ce9b_pushErr((*(_73626_e)).ptr(), (*(_73641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8a80136:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213e5cc27_callerDeleteMap(jule::Ptr<_213d5c990_Eval>* _76125_e, jule::Ptr<_213c49dbb_FnCallExpr>* _76140_fc, jule::Ptr<_213d5ae22_Data>* _76162_expr, jule::Ptr<_213d5ae22_Data>* _76180_d) {
	if ((!((*(_76162_expr)).get()._field_Mutable))) {
		_213d5ce9b_pushErr((*(_76125_e)).ptr(), (*(_76140_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_76180_d))=_213d847ca_buildVoidData();
	jule::Ptr<_213c72421_BuiltinDeleteCallExprModel> _76613_model = jule::new_ptr<_213c72421_BuiltinDeleteCallExprModel>(_213c72421_BuiltinDeleteCallExprModel{._field_Dest=(*(_76162_expr)), });;
	if (((*(_76140_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_213d5ae22_Data> _77017_key = _213d7945c_evalExpr((*(_76125_e)), (*(_76140_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_77017_key == nullptr)) {
				_case_begin_1b8a86d63:;
				{
					return nullptr;;
				}
			}
			else if (_77017_key.get()._field_Decl) {
				_case_begin_1b8a856d0:;
				{
					_213d5ce9b_pushErr((*(_76125_e)).ptr(), (*(_76140_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1b8a85669:;
				{
					;
					jule::Ptr<_213d88834_TypeKind> _77921_keyType = _213d8c97b_Map((*(_76162_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_213ceab70_checkAssignType((*(_76125_e)).get()._field_s, false, &(_77921_keyType), &(_77017_key), (*(_76140_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1b8a85603:;
		};
		_76613_model.get()._field_Key=_77017_key;
	};
	(*(_76180_d)).get()._field_Model=jule::Any(_76613_model, &__jule_any_type33);
	return (*(_76180_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e5d112_builtinCallerDelete(jule::Ptr<_213d5c990_Eval>* _79029_e, jule::Ptr<_213c49dbb_FnCallExpr>* _79044_fc, jule::Ptr<_213d5ae22_Data>* _79066_d) {
	if (((*(_79044_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_79044_fc)).get()._field_Args.len() > 2LL)) {
		_213d5ce9b_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _79813_dest = _213d7945c_evalExpr((*(_79029_e)), (*(_79044_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_79813_dest == nullptr)) {
			_case_begin_1b8a8ae77:;
			{
				return nullptr;;
			}
		}
		else if (_79813_dest.get()._field_Decl) {
			_case_begin_1b8a8b917:;
			{
				_213d5ce9b_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_213d8c97b_Map(_79813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8a8b97d:;
			{
				return _213e5cc27_callerDeleteMap(_79029_e, _79044_fc, &(_79813_dest), _79066_d);;
			}
		}
		else {
			_case_begin_1b8a8ab47:;
			{
				_213d5ce9b_pushErr((*(_79029_e)).ptr(), (*(_79044_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b8a8aae2:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213e5d4ec_builtinCallerClone(jule::Ptr<_213d5c990_Eval>* _81328_e, jule::Ptr<_213c49dbb_FnCallExpr>* _81343_fc, jule::Ptr<_213d5ae22_Data>* ) {
	if (((*(_81343_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_81343_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _82213_d = _213d7945c_evalExpr((*(_81328_e)), (*(_81343_fc)).get()._field_Args[0LL]);;
	if ((_82213_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_213d8aa78_SupportsCloning(_82213_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_213d8beca_Slc(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_213d8c97b_Map(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_213d8bc66_Arr(_82213_d.get()._field_Kind.ptr()) != nullptr) || (_213d8b2b5_Sptr(_82213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1b8a9129b:;
				{
					{
						_213d5ce9b_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_213d8c4a3_Struct(_82213_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1b8a90b08:;
				{
					{
						_213d5ce9b_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			else {
				_case_begin_1b8a90a92:;
				{
					{
						_213d5ce9b_pushErr((*(_81328_e)).ptr(), (*(_81343_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_82213_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			_match_end_1b8a909e8:;
		};
	};
	_82213_d.get()._field_Mutable=true;
	_82213_d.get()._field_Model=jule::Any(jule::new_ptr<_213c70012_BuiltinCloneCallExprModel>(_213c70012_BuiltinCloneCallExprModel{._field_Expr=_82213_d.get()._field_Model}), &__jule_any_type27);
	return _82213_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213e5d8d7_builtinCallerAssert(jule::Ptr<_213d5c990_Eval>* _85529_e, jule::Ptr<_213c49dbb_FnCallExpr>* _85544_fc, jule::Ptr<_213d5ae22_Data>* ) {
	if (((*(_85544_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_85544_fc)).get()._field_Args.len() > 2LL)) {
		_213d5ce9b_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _86413_expr = _213d7945c_evalExpr((*(_85529_e)), (*(_85544_fc)).get()._field_Args[0LL]);;
	if ((_86413_expr == nullptr)) {
		return nullptr;;
	};
	if (((_213d8b051_Prim(_86413_expr.get()._field_Kind.ptr()) == nullptr) || (!(_213d94026_IsBool(_213d8b051_Prim(_86413_expr.get()._field_Kind.ptr()).ptr()))))) {
		_213d5ce9b_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_213c70c8d_BuiltinAssertCallExprModel> _87313_model = jule::new_ptr<_213c70c8d_BuiltinAssertCallExprModel>(_213c70c8d_BuiltinAssertCallExprModel{._field_Token=(*(_85544_fc)).get()._field_Token, ._field_Expr=_86413_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_85544_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_213d5ae22_Data> _88117_log = _213d7945c_evalExpr((*(_85529_e)), (*(_85544_fc)).get()._field_Args[1LL]);;
		if ((_88117_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_213d5b791_IsConst(_88117_log.ptr()))) || (_213d8b051_Prim(_88117_log.get()._field_Kind.ptr()) == nullptr)) || (!(_213d9428a_IsStr(_213d8b051_Prim(_88117_log.get()._field_Kind.ptr()).ptr()))))) {
			_213d5ce9b_pushErr((*(_85529_e)).ptr(), (*(_85544_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_213d88bdb_Str(_88117_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_87313_model.get()._field_Log=_2121a6c86_ReadStr(_88117_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_213d5ae22_Data> _89413_d = _213d847ca_buildVoidData();;
	_89413_d.get()._field_Model=jule::Any(_87313_model, &__jule_any_type31);
	return _89413_d;;
}



inline jule::Ptr<_213d5ae22_Data> _213e5dce4_builtinCallerStdComptimeTypeOf(jule::Ptr<_213d5c990_Eval>* _89940_e, jule::Ptr<_213c49dbb_FnCallExpr>* _89955_fc, jule::Ptr<_213d5ae22_Data>* ) {
	if (((*(_89955_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_89955_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _90813_d = _213d78725_evalExprKind((*(_89940_e)), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_90813_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_213c796ae_FnIns> _9129_f = _213d8c23e_Fn(_90813_d.get()._field_Kind.ptr());;
	if ((_9129_f != nullptr)) {
		if (_213c7aa45_IsBuiltin(_9129_f.ptr())) {
			_213d5ce9b_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<built-in fn>", 13), &__jule_any_type5)}));
			return nullptr;;
		};
		if ((_9129_f.get()._field_Generics.len() != _9129_f.get()._field_Decl.get()._field_Generics.len())) {
			_213d5ce9b_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_213c64402_StructIns> _9239_s = _213d8c4a3_Struct(_90813_d.get()._field_Kind.ptr());;
	if (((_9239_s != nullptr) && (_9239_s.get()._field_Generics.len() != _9239_s.get()._field_Decl.get()._field_Generics.len()))) {
		_213d5ce9b_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_213d8ce54_comptime(_90813_d.get()._field_Kind.ptr())) {
		_213d5ce9b_pushErr((*(_89940_e)).ptr(), (*(_89955_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_90813_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	return _213caed98_buildComptimeTypeInfoData(&((*(_89940_e)).get()._field_s), &(_90813_d.get()._field_Kind));;
}



inline jule::Ptr<_213d5ae22_Data> _213e5e212_builtinCallerStdComptimeValueOf(jule::Ptr<_213d5c990_Eval>* _93541_e, jule::Ptr<_213c49dbb_FnCallExpr>* _93556_fc, jule::Ptr<_213d5ae22_Data>* ) {
	if (((*(_93556_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_93556_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _94313_d = _213d7945c_evalExpr((*(_93541_e)), (*(_93556_fc)).get()._field_Args[0LL]);;
	if ((_94313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_213d55636_isGoodValueToInfer(&(_94313_d))))) {
		_213d5ce9b_pushErr((*(_93541_e)).ptr(), (*(_93556_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_94313_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	return _213cb01c8_buildComptimeValue(&(_94313_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e5e4ba_rangeData(jule::Trait<_213c8e96b_comptimeRangeKind> _95518_kind) {
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213c8eb47_comptimeRange>(_213c8eb47_comptimeRange{._field_kind=_95518_kind}), 5)}), });;
}



inline jule::Ptr<_213d5ae22_Data> _213e5e8c7_builtinCallerStdComptimeRange(jule::Ptr<_213d5c990_Eval>* _96539_e, jule::Ptr<_213c49dbb_FnCallExpr>* _96554_fc, jule::Ptr<_213d5ae22_Data>* ) {
	if (((*(_96554_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_96554_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _97413_d = _213d78725_evalExprKind((*(_96539_e)), (*(_96554_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_97413_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_213d8d1b8_comptimeStructFields(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8aae374:;
			{
				return _213e5e4ba_rangeData(jule::Trait<_213c8e96b_comptimeRangeKind>(_213d8d1b8_comptimeStructFields(_97413_d.get()._field_Kind.ptr()), 0));;
			}
		}
		else if ((_213d8d691_comptimeEnumFields(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8aae3da:;
			{
				return _213e5e4ba_rangeData(jule::Trait<_213c8e96b_comptimeRangeKind>(_213d8d691_comptimeEnumFields(_97413_d.get()._field_Kind.ptr()), 2));;
			}
		}
		else if ((_213d8e3a6_comptimeTypeInfos(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8aae1ed:;
			{
				return _213e5e4ba_rangeData(jule::Trait<_213c8e96b_comptimeRangeKind>(_213d8e3a6_comptimeTypeInfos(_97413_d.get()._field_Kind.ptr()), 4));;
			}
		}
		else if ((_213d8db69_comptimeParams(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8aae264:;
			{
				return _213e5e4ba_rangeData(jule::Trait<_213c8e96b_comptimeRangeKind>(_213d8db69_comptimeParams(_97413_d.get()._field_Kind.ptr()), 3));;
			}
		}
		else if ((_213d8e87e_comptimeStatics(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8aad054:;
			{
				return _213e5e4ba_rangeData(jule::Trait<_213c8e96b_comptimeRangeKind>(_213d8e87e_comptimeStatics(_97413_d.get()._field_Kind.ptr()), 1));;
			}
		}
		else if ((_213d90330_comptimeFiles(_97413_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8aad0ba:;
			{
				return _213e5e4ba_rangeData(jule::Trait<_213c8e96b_comptimeRangeKind>(_213d90330_comptimeFiles(_97413_d.get()._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_1b8aad340:;
			{
				_213d5ce9b_pushErr((*(_96539_e)).ptr(), (*(_96554_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_97413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b8aad582:;
	};
}



inline jule::Ptr<_213d5ae22_Data> _213e5ece5_builtinCallerStdComptimeLine(jule::Ptr<_213d5c990_Eval>* _99738_e, jule::Ptr<_213c49dbb_FnCallExpr>* _99753_fc, jule::Ptr<_213d5ae22_Data>* ) {
	if (((*(_99753_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_99738_e)).ptr(), (*(_99753_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Line", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_2121a4c51_Const> _100113_constant = static__2121a5180_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_99753_fc)).get()._field_Token.get()._field_Row)));;
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e53734_primInt, ._field_Model=jule::Any(_100113_constant, &__jule_any_type19), ._field_Constant=_100113_constant});;
}



inline jule::Ptr<_213d5ae22_Data> _213e60213_builtinCallerStdComptimeFile(jule::Ptr<_213d5c990_Eval>* _100938_e, jule::Ptr<_213c49dbb_FnCallExpr>* _100953_fc, jule::Ptr<_213d5ae22_Data>* ) {
	if (((*(_100953_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_100938_e)).ptr(), (*(_100953_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("File", 4), &__jule_any_type5)}));
	};
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213cacd0d_comptimeFile>(_213cacd0d_comptimeFile{._field_file=(*(_100938_e)).get()._field_s.get()._field_file}), 18)}), });;
}



inline jule::Ptr<_213d5ae22_Data> _213e60631_builtinCallerStdComptimeFiles(jule::Ptr<_213d5c990_Eval>* _102239_e, jule::Ptr<_213c49dbb_FnCallExpr>* _102254_fc, jule::Ptr<_213d5ae22_Data>* ) {
	if (((*(_102254_fc)).get()._field_Args.len() > 0LL)) {
		_213d5ce9b_pushErr((*(_102239_e)).ptr(), (*(_102254_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Files", 5), &__jule_any_type5)}));
	};
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=jule::new_ptr<_213d88834_TypeKind>(_213d88834_TypeKind{._field_Kind=jule::Trait<_213d883c2_Kind>(jule::new_ptr<_213cab845_comptimeFiles>(_213cab845_comptimeFiles{._field_files=(*(_102239_e)).get()._field_s.get()._field_files}), 17)}), });;
}



inline jule::Ptr<_213d5ae22_Data> _213e60a4e_builtinCallerStdMemSizeOf(jule::Ptr<_213d5c990_Eval>* _103535_e, jule::Ptr<_213c49dbb_FnCallExpr>* _103550_fc, jule::Ptr<_213d5ae22_Data>* ) {
	jule::Ptr<_213d5ae22_Data> _103613_result = jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e5346a_primUint, });;
	if (((*(_103550_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _103613_result;;
	};
	if (((*(_103550_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _104813_d = _213d78725_evalExprKind((*(_103535_e)), (*(_103550_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_104813_d == nullptr)) {
		return _103613_result;;
	};
	if ((!(_213da4ac5_validTypeForXof(&(_104813_d.get()._field_Kind))))) {
		_213d5ce9b_pushErr((*(_103535_e)).ptr(), (*(_103550_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_104813_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	_103613_result.get()._field_Model=jule::Any(jule::new_ptr<_213c72e6b_SizeofExprModel>(_213c72e6b_SizeofExprModel{._field_Expr=_104813_d.get()._field_Model}), &__jule_any_type120);
	return _103613_result;;
}



inline jule::Ptr<_213d5ae22_Data> _213e60e6c_builtinCallerStdMemAlignOf(jule::Ptr<_213d5c990_Eval>* _106036_e, jule::Ptr<_213c49dbb_FnCallExpr>* _106051_fc, jule::Ptr<_213d5ae22_Data>* ) {
	jule::Ptr<_213d5ae22_Data> _106113_result = jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e5346a_primUint, });;
	if (((*(_106051_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _106113_result;;
	};
	if (((*(_106051_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _107313_d = _213d78725_evalExprKind((*(_106036_e)), (*(_106051_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_107313_d == nullptr)) {
		return _106113_result;;
	};
	if ((!(_213da4ac5_validTypeForXof(&(_107313_d.get()._field_Kind))))) {
		_213d5ce9b_pushErr((*(_106036_e)).ptr(), (*(_106051_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_213d88bdb_Str(_107313_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	_106113_result.get()._field_Model=jule::Any(jule::new_ptr<_213c73257_AlignofExprModel>(_213c73257_AlignofExprModel{._field_Expr=_107313_d.get()._field_Model}), &__jule_any_type121);
	return _106113_result;;
}



inline jule::Ptr<_213d5ae22_Data> _213e6138a_builtinCallerStdMemFree(jule::Ptr<_213d5c990_Eval>* _108533_e, jule::Ptr<_213c49dbb_FnCallExpr>* _108548_fc, jule::Ptr<_213d5ae22_Data>* ) {
	if (((*(_108548_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_108548_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _109413_d = _213d7945c_evalExpr((*(_108533_e)), (*(_108548_fc)).get()._field_Args[0LL]);;
	if ((_109413_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_213d8a814_PerformsRC(_109413_d.get()._field_Kind.ptr())))) {
		_213d5ce9b_pushErr((*(_108533_e)).ptr(), (*(_108548_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_213d5ae22_Data> _110313_result = _213d847ca_buildVoidData();;
	_110313_result.get()._field_Model=jule::Any(jule::new_ptr<_213c74005_FreeExprModel>(_213c74005_FreeExprModel{._field_Expr=_109413_d.get()._field_Model}), &__jule_any_type34);
	return _110313_result;;
}



inline jule::Ptr<_213d5ae22_Data> _213e617b9_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_213d5c990_Eval>* _110845_e, jule::Ptr<_213c49dbb_FnCallExpr>* _110860_fc, jule::Ptr<_213d5ae22_Data>* ) {
	if (((*(_110860_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_110860_fc)).get()._field_Args.len() > 1LL)) {
		_213d5ce9b_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_213d5ae22_Data> _111713_d = _213d7945c_evalExpr((*(_110845_e)), (*(_110860_fc)).get()._field_Args[0LL]);;
	if ((_111713_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_213da3ba1_isBuiltinStrConvertable(&(_111713_d.get()._field_Kind))))) {
		_213d5ce9b_pushErr((*(_110845_e)).ptr(), (*(_110860_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_213d5ae22_Data>(_213d5ae22_Data{._field_Kind=_213e52ac9_primStr, ._field_Model=jule::Any(jule::new_ptr<_213c73851_IntegratedToStrExprModel>(_213c73851_IntegratedToStrExprModel{._field_Expr=_111713_d.get()._field_Model}), &__jule_any_type122), });;
}



inline jule::Ptr<_213d5ae22_Data> _213e61bd7_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_213d5c990_Eval>* _113544_e, jule::Ptr<_213c49dbb_FnCallExpr>* _113559_fc, jule::Ptr<_213d5ae22_Data>* _113581_d) {
	if ((!(_213d5d8d6_isUnsafe((*(_113544_e)).ptr())))) {
		_213d5ce9b_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_113559_fc)).get()._field_Args.len() < 1LL)) {
		_213d5ce9b_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_213d5ae22_Data> _114513_argd = _213d7945c_evalExpr((*(_113544_e)), (*(_113559_fc)).get()._field_Args[0LL]);;
	if ((_114513_argd == nullptr)) {
		return nullptr;;
	};
	if (((_213d8b051_Prim(_114513_argd.get()._field_Kind.ptr()) == nullptr) || (!(_213d9428a_IsStr(_213d8b051_Prim(_114513_argd.get()._field_Kind.ptr()).ptr()))))) {
		_213d5ce9b_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_213d88bdb_Str(_114513_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_213d5b791_IsConst(_114513_argd.ptr()))) || (!(_2121a912e_IsStr(_114513_argd.get()._field_Constant.ptr()))))) {
		_213d5ce9b_pushErr((*(_113544_e)).ptr(), (*(_113559_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_213d5ae22_Data> _116013_r = _213d847ca_buildVoidData();;
	jule::Ptr<_213c796ae_FnIns> _116213_f = _213d8c23e_Fn((*(_113581_d)).get()._field_Kind.ptr());;
	if ((_116213_f.get()._field_Generics.len() > 0LL)) {
		_116013_r.get()._field_Kind=_116213_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_213c73c19_BackendEmitExprModel> _116713_model = jule::new_ptr<_213c73c19_BackendEmitExprModel>(_213c73c19_BackendEmitExprModel{._field_Code=_2121a6c86_ReadStr(_114513_argd.get()._field_Constant.ptr()), });;
	if (((*(_113559_fc)).get()._field_Args.len() > 1LL)) {
		_116713_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_113559_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_113559_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b8ad3145:;
			if (it != expr_end) {
				jule::Ptr<_213c45ea5_Expr> _117321_arg = *it;
				{
					_114513_argd=_213d78a33_eval1((*(_113544_e)), _117321_arg);
					if ((_114513_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _116713_model.get()._field_Exprs; __jule_push_dest.push(_114513_argd.get()._field_Model); };
				}
				_iter_next_1b8ad3145:;
				++it;
				goto _iter_begin_1b8ad3145;
			}
			_iter_end_1b8ad3145:;
		};
	};
	_116013_r.get()._field_Model=jule::Any(_116713_model, &__jule_any_type25);
	return _116013_r;;
}



inline jule::Ptr<_213d5ae22_Data> _213e62127_builtinCallerStdDebugOut(jule::Ptr<_213d5c990_Eval>* _118634_e, jule::Ptr<_213c49dbb_FnCallExpr>* _118649_fc, jule::Ptr<_213d5ae22_Data>* _118671_d) {
	(*(_118671_d))=_213e580da_builtinCallerOut(_118634_e, _118649_fc, _118671_d);
	if (((*(_118671_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_118671_d)).get()._field_Model.cast_ptr<_213c6e808_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_118671_d));;
}



inline jule::Ptr<_213d5ae22_Data> _213e62512_builtinCallerStdDebugOutln(jule::Ptr<_213d5c990_Eval>* _119536_e, jule::Ptr<_213c49dbb_FnCallExpr>* _119551_fc, jule::Ptr<_213d5ae22_Data>* _119573_d) {
	(*(_119573_d))=_213e584c5_builtinCallerOutln(_119536_e, _119551_fc, _119573_d);
	if (((*(_119573_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_119573_d)).get()._field_Model.cast_ptr<_213c6ebe3_BuiltinOutlnCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return (*(_119573_d));;
}



inline jule::Bool _214053416_FindModuleFile(jule::Slice<jule::Ptr<_22a8b2423_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8ad7e4c:;
		if (it != expr_end) {
			jule::Ptr<_22a8b2423_DirEntry> *_1312_d = it;
			{
				if (((!(_22a8c24aa_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1b8ad7e4c:;
			++it;
			goto _iter_begin_1b8ad7e4c;
		}
		_iter_end_1b8ad7e4c:;
	};
	return false;;
}



inline jule::Str _214053548_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_22a8b2423_DirEntry>> _2617_dirents = ({
				auto except = static__21103e768_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1b8ad815b;
				} jule::Slice<jule::Ptr<_22a8b2423_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _214053416_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I32 _3513_n = _2427_path.len();;
			_2427_path=_21103c4d0_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1b8ad815b;
			};
		}
	_iter_next_1b8ad815b:;
	}
	_iter_end_1b8ad815b:;;
	return jule::Str();;
}



inline jule::Slice<_2110be2cb_Log> _214053746_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__22a8c0453_Read(_21103b875_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_2110be2cb_Log>::make({_2110be2cb_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _2110394aa_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_2110be2cb_Log>::make({_2110be2cb_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1e7b5c569_FileInfo> _1e7b9e91e_ParseFile(jule::Ptr<_2114c700d_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1e7b5c569_FileInfo> _2713_finf = jule::new_ptr<_1e7b5c569_FileInfo>();;
	({
		__jule_tuple_x_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log __jule_assign_result = _1e7b9eea2_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log _1e7b9eea2_parseFileset(jule::Ptr<_2114c700d_File> _5521_f) {
	__jule_tuple_x_213c0d07c_Ast__jule_tuple_s_2110be2cb_Log __jule_func_result;
	jule::Ptr<_1e7bbd9e8_parser> _5613_p = jule::new_ptr<_1e7bbd9e8_parser>();;
	_1cdccde1e_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_213c51961_ScopeTree> _1e7ba08cb_newScope(void) {
	return jule::new_ptr<_213c51961_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1e7ba0bb7_isSt(jule::Ptr<_2114c1b73_Token> _499_current, jule::Ptr<_2114c1b73_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U32>(3LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1e7ba1008_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _5526_tokens, jule::I32* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_2114c1b73_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U32>(17LLU)) || (_2114c2668_IsBinOp(_6113_prev.get()._field_Id) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1e7ba138d_nextStPos(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _6815_tokens, jule::I32 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _6913_braceN = 0LL;;
	jule::I32 _7013_i = _6833_start;;
	for (; (_7013_i < (*(_6815_tokens)).len()); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;;
			jule::Bool _7317_terminated = false;;
			jule::Ptr<_2114c1b73_Token> _7413_tok = (*(_6815_tokens))[_7013_i];;
			{
				auto &_match_expr{ _7413_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b8b6531a:;
					{
						if (((_6913_braceN == 0LL) && (_7013_i > _6833_start))) {
							if ((!(_1e7ba1008_prevIsIncompleteExpr(_6815_tokens, &(_7013_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e7ba0bb7_isSt(_7413_tok, (*(_6815_tokens))[(_7013_i - 1LL)]);
									_7217_ok = __jule_assign_result.__jule_result_arg0;
									_7317_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7217_ok) {
									goto _julec_label_return;
								};
							};
						};
						(_6913_braceN)++;
						goto _iter_next_1b8b63ba9;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b8b65381:;
					{
						(_6913_braceN)--;
						if (((_6913_braceN == 0LL) && ((_7013_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e7ba0bb7_isSt((*(_6815_tokens))[(_7013_i + 1LL)], _7413_tok);
								_7217_ok = __jule_assign_result.__jule_result_arg0;
								_7317_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7217_ok) {
								(_7013_i)++;
								goto _julec_label_return;
							};
						};
						goto _iter_next_1b8b63ba9;
					}
				}
				_match_end_1b8b65260:;
			};
			if ((_6913_braceN != 0LL)) {
				goto _iter_next_1b8b63ba9;
			};
			if ((_7013_i > _6833_start)) {
				if (_1e7ba1008_prevIsIncompleteExpr(_6815_tokens, &(_7013_i))) {
					goto _iter_next_1b8b63ba9;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e7ba0bb7_isSt(_7413_tok, (*(_6815_tokens))[(_7013_i - 1LL)]);
					_7217_ok = __jule_assign_result.__jule_result_arg0;
					_7317_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1e7ba0bb7_isSt(_7413_tok, _7413_tok);
					_7217_ok = __jule_assign_result.__jule_result_arg0;
					_7317_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7217_ok))) {
				goto _iter_next_1b8b63ba9;
			};
			_julec_label_return:;
			if (_7317_terminated) {
				(_7013_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7013_i;
			__jule_func_result.__jule_result_arg1 = _7317_terminated;
			return __jule_func_result;;
		}
	_iter_next_1b8b63ba9:;
	}
	_iter_end_1b8b63ba9:;;
	__jule_func_result.__jule_result_arg0 = _7013_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_2114c1b73_Token__jule_tuple_bool _1e7ba16ce_skipSt(jule::I32* _13016_i, jule::Slice<jule::Ptr<_2114c1b73_Token>> _13028_tokens) {
	__jule_tuple_sx_2114c1b73_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _1319_start = (*(_13016_i));;
	jule::Bool _13213_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e7ba138d_nextStPos(&(_13028_tokens), _1319_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_13213_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_2114c1b73_Token>> _13413_stTokens = _13028_tokens.slice(_1319_start, (*(_13016_i)));;
	if (_13213_terminated) {
		if ((_13413_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_2114c1b73_Token__jule_tuple_bool __jule_assign_result = _1e7ba16ce_skipSt(_13016_i, _13028_tokens);
				_13413_stTokens = __jule_assign_result.__jule_result_arg0;
				_13213_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13413_stTokens;
			__jule_func_result.__jule_result_arg1 = _13213_terminated;
			return __jule_func_result;;
		};
		_13413_stTokens=_13413_stTokens.slice(0LL, (_13413_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13413_stTokens;
	__jule_func_result.__jule_result_arg1 = _13213_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1e7ba19cb_stmt>> _1e7ba1d72_splitStmts(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1e7ba19cb_stmt>> _15313_stmts = jule::Slice<jule::Ptr<_1e7ba19cb_stmt>>::alloc(0LL, 20LL);;
	jule::I32 _15413_pos = 0LL;;
	while ((_15413_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_2114c1b73_Token>> _15618_stmt;;
			jule::Bool _15624_terminated = false;;
			({
				__jule_tuple_sx_2114c1b73_Token__jule_tuple_bool __jule_assign_result = _1e7ba16ce_skipSt(&(_15413_pos), (*(_15220_tokens)));
				_15618_stmt = __jule_assign_result.__jule_result_arg0;
				_15624_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1e7ba19cb_stmt>> &__jule_push_dest = _15313_stmts; __jule_push_dest.push(jule::new_ptr<_1e7ba19cb_stmt>(_1e7ba19cb_stmt{._field_tokens=_15618_stmt, ._field_terminated=_15624_terminated})); };
		}
	_iter_next_1b8b6eaa5:;
	}
	_iter_end_1b8b6eaa5:;;
	return _15313_stmts;;
}



inline jule::Bool _1e7bb8927_isTypeOp(jule::U32* _88214_id) {
	return ((((*(_88214_id)) == static_cast<jule::U32>(65LLU)) || ((*(_88214_id)) == static_cast<jule::U32>(54LLU))) || ((*(_88214_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _1e7bb8c13_isTypeRange(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _88921_tokens) {
	jule::Bool _89013_op = false;;
	{
		auto expr = _88921_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c24ae4:;
		if (it != expr_end) {
			jule::I32 _8919_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> _89112_token = *it;
			{
				if ((_89112_token.get()._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_89013_op) {
						return true;;
					};
					jule::I32 _89621_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_2114c1b73_Token>> _89721_lTokens = (*(_88921_tokens)).slice(_8919_i);;
					{
						auto expr = &(_89721_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b8c2651e:;
						if (it != expr_end) {
							jule::Ptr<_2114c1b73_Token> _89820_lToken = *it;
							{
								{
									auto &_match_expr{ _89820_lToken.get()._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_1b8c26ee2:;
										{
											(_89621_rangeN)++;
											goto _iter_next_1b8c2651e;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_1b8c27058:;
										{
											(_89621_rangeN)--;
											goto _iter_next_1b8c2651e;
										}
									}
									_match_end_1b8c26ca0:;
								};
								if ((_89621_rangeN == 0LL)) {
									return _1e7bb8927_isTypeOp(&(_89820_lToken.get()._field_Id));;
								};
							}
							_iter_next_1b8c2651e:;
							++it;
							goto _iter_begin_1b8c2651e;
						}
						_iter_end_1b8c2651e:;
					};
					return true;;
				};
				if ((!(_1e7bb8927_isTypeOp(&(_89112_token.get()._field_Id))))) {
					return false;;
				};
				_89013_op=true;
			}
			_iter_next_1b8c24ae4:;
			++it;
			_8919_i++;
			goto _iter_begin_1b8c24ae4;
		}
		_iter_end_1b8c24ae4:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_2114c1b73_Token>> _1e7bb8eaa_getBlockExpr(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _92222_tokens) {
	jule::I32 _92313_braceN = 0LL;;
	jule::I32 _92413_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c289d8:;
		if (it != expr_end) {
			jule::I32 _9259_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> _92512_tok = *it;
			{
				{
					auto &_match_expr{ _92512_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(13LLU) || _match_expr == static_cast<jule::U32>(14LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1b8c29731:;
						{
							(_92413_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1b8c29797:;
						{
							if (((_92313_braceN > 0LL) || (_92413_skipToNextBraceClose > 0LL))) {
								if ((_92413_skipToNextBraceClose > 0LL)) {
									(_92413_skipToNextBraceClose)--;
								};
								(_92313_braceN)++;
								goto _match_end_1b8c29632;
							};
							return (*(_92222_tokens)).slice(0LL, _9259_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8c2980d:;
						{
							(_92313_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8c29874:;
						{
							(_92313_braceN)--;
						}
					}
					_match_end_1b8c29632:;
				};
			}
			_iter_next_1b8c289d8:;
			++it;
			_9259_i++;
			goto _iter_begin_1b8c289d8;
		}
		_iter_end_1b8c289d8:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_2114c1b73_Token__jule_tuple_sx_2114c1b73_Token _1e7bb9340_splitDelim(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _95220_tokens, jule::U32 _95238_delim) {
	__jule_tuple_sx_2114c1b73_Token__jule_tuple_sx_2114c1b73_Token __jule_func_result;
	jule::I32 _95313_rangeN = 0LL;;
	{
		auto expr = _95220_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c2c02a:;
		if (it != expr_end) {
			jule::I32 _9549_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> _95412_token = *it;
			{
				{
					auto &_match_expr{ _95412_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8c2cc0c:;
						{
							(_95313_rangeN)++;
							goto _iter_next_1b8c2c02a;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8c2cc84:;
						{
							(_95313_rangeN)--;
						}
					}
					else if (_match_expr == _95238_delim) {
						_case_begin_1b8c2cd0b:;
						{
							if ((_95313_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_2114c1b73_Token>> _96725_l = (*(_95220_tokens)).slice(0LL, _9549_i);;
								jule::Slice<jule::Ptr<_2114c1b73_Token>> _96825_r = (*(_95220_tokens)).slice((_9549_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _96725_l;
								__jule_func_result.__jule_result_arg1 = _96825_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1b8c2c9cb:;
				};
			}
			_iter_next_1b8c2c02a:;
			++it;
			_9549_i++;
			goto _iter_begin_1b8c2c02a;
		}
		_iter_end_1b8c2c02a:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1e7bb95d7_findLowestPrecOp(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _97822_tokens) {
	jule::U8 _98313_prec = 255LLU;;
	jule::I32 _98413_precPos = -1LL;;
	jule::I32 _98613_braceN = 0LL;;
	jule::Bool _98713_skipToNextBraceOpen = false;;
	{
		auto expr = _97822_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8c311d8:;
		if (it != expr_end) {
			jule::I32 _9889_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> *_98812_token = it;
			{
				{
					auto &_match_expr{ (*(_98812_token)).get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1b8c31e0e:;
						{
							_98713_skipToNextBraceOpen=false;
							goto _case_begin_1b8c31e86;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1b8c31e86:;
						{
							(_98613_braceN)++;
							goto _iter_next_1b8c311d8;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1b8c3200d:;
						{
							(_98613_braceN)--;
							goto _iter_next_1b8c311d8;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_1b8c32085:;
						{
							_98713_skipToNextBraceOpen=true;
							goto _iter_next_1b8c311d8;
						}
					}
					_match_end_1b8c31bbc:;
				};
				{
					
					if (_98713_skipToNextBraceOpen) {
						_case_begin_1b8c330ca:;
						{
							goto _iter_next_1b8c311d8;
						}
					}
					else if ((_9889_i == 0LL)) {
						_case_begin_1b8c33141:;
						{
							goto _iter_next_1b8c311d8;
						}
					}
					else if ((_98613_braceN > 0LL)) {
						_case_begin_1b8c331a7:;
						{
							goto _iter_next_1b8c311d8;
						}
					}
					else if ((!(_2114c2668_IsBinOp((*(_98812_token)).get()._field_Id)))) {
						_case_begin_1b8c3321d:;
						{
							goto _iter_next_1b8c311d8;
						}
					}
					_match_end_1b8c3365d:;
				};
				jule::Ptr<_2114c1b73_Token> _101713_left = (*(_97822_tokens))[(_9889_i - 1LL)];;
				if ((_2114c237c_IsUnaryOp(_101713_left.get()._field_Id) || (_101713_left.get()._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1b8c311d8;
				};
				if (((_9889_i > 1LL) && (_101713_left.get()._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_2114c1b73_Token> _102517_lleft = (*(_97822_tokens))[(_9889_i - 2LL)];;
					if ((_102517_lleft.get()._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*(_98812_token)).get()._field_Id == static_cast<jule::U32>(65LLU)) || ((*(_98812_token)).get()._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_1b8c311d8;
						};
					};
				};
				jule::U8 _103413_p = _2114c1ed6_Prec((*(_98812_token)).ptr());;
				if (((_103413_p != 0LLU) && (_103413_p <= _98313_prec))) {
					_98313_prec=_103413_p;
					_98413_precPos=_9889_i;
				};
			}
			_iter_next_1b8c311d8:;
			++it;
			_9889_i++;
			goto _iter_begin_1b8c311d8;
		}
		_iter_end_1b8c311d8:;
	};
	return _98413_precPos;;
}



inline jule::Ptr<_213c47a9a_IdentExpr> _1e7bb987e_buildIdentExpr(jule::Ptr<_2114c1b73_Token>* _104324_token) {
	return jule::new_ptr<_213c47a9a_IdentExpr>(_213c47a9a_IdentExpr{._field_Token=(*(_104324_token)), ._field_Ident=(*(_104324_token)).get()._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_2114c1b73_Token__jule_tuple_int _1e7bb9b26_getRangeExprTokens(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _105128_tokens) {
	__jule_tuple_sx_2114c1b73_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _105213_rangeN = 0LL;;
	jule::I32 _105313_i = ((*(_105128_tokens)).len() - 1LL);;
	for (; (_105313_i >= 0LL); (_105313_i)--) {
		{
			jule::Ptr<_2114c1b73_Token> _105513_tok = (*(_105128_tokens))[_105313_i];;
			{
				auto &_match_expr{ _105513_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b8c39994:;
					{
						(_105213_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b8c39a1b:;
					{
						(_105213_rangeN)--;
					}
				}
				_match_end_1b8c3993e:;
			};
			if ((_105213_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105128_tokens)).slice(0LL, _105313_i);
				__jule_func_result.__jule_result_arg1 = _105213_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1b8c38ac5:;
	}
	_iter_end_1b8c38ac5:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _105213_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1e7bba880_checkAssignTokens(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_2114c621b_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I32 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8cbe265:;
		if (it != expr_end) {
			jule::Ptr<_2114c1b73_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*(_2112_t)).get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8cbec27:;
						{
							(_2013_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8cbec9e:;
						{
							(_2013_braceN)--;
						}
					}
					_match_end_1b8cbeb7d:;
				};
				{
					
					if ((_2013_braceN < 0LL)) {
						_case_begin_1b8cc0e8c:;
						{
							return false;;
						}
					}
					else if ((_2013_braceN > 0LL)) {
						_case_begin_1b8cc0a19:;
						{
							goto _iter_next_1b8cbe265;
						}
					}
					else if (_2114c675a_IsAssignOp((*(_2112_t)).get()._field_Id) || ((*(_2112_t)).get()._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_1b8cc0a80:;
						{
							return true;;
						}
					}
					_match_end_1b8cc0e15:;
				};
			}
			_iter_next_1b8cbe265:;
			++it;
			goto _iter_begin_1b8cbe265;
		}
		_iter_end_1b8cbe265:;
	};
	return false;;
}



inline _2110be2cb_Log _1e7bbbaa1_makeErr(jule::I32 _5212_row, jule::I32 _5222_col, jule::Ptr<_2114c700d_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _2110be2cb_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_2110be71b_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_2114c1b73_Token>> _1e7bbc079_range(jule::I32* _7015_i, jule::U32 _7023_open, jule::U32 _7038_close, jule::Slice<jule::Ptr<_2114c1b73_Token>>* _7059_tokens) {
	if (((*(_7015_i)) >= (*(_7059_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_2114c1b73_Token> _749_tok = (*(_7059_tokens))[(*(_7015_i))];;
	if ((_749_tok.get()._field_Id != _7023_open)) {
		return nullptr;;
	};
	((*(_7015_i)))++;
	jule::I32 _7913_rangeN = 1LL;;
	jule::I32 _809_start = (*(_7015_i));;
	for (; ((_7913_rangeN != 0LL) && ((*(_7015_i)) < (*(_7059_tokens)).len())); ((*(_7015_i)))++) {
		{
			jule::Ptr<_2114c1b73_Token> _8213_token = (*(_7059_tokens))[(*(_7015_i))];;
			{
				auto &_match_expr{ _8213_token.get()._field_Id };
				
				if (_match_expr == _7023_open) {
					_case_begin_1b8cc5942:;
					{
						(_7913_rangeN)++;
					}
				}
				else if (_match_expr == _7038_close) {
					_case_begin_1b8cc59b9:;
					{
						(_7913_rangeN)--;
					}
				}
				_match_end_1b8cc5898:;
			};
		}
	_iter_next_1b8cc4d70:;
	}
	_iter_end_1b8cc4d70:;;
	return (*(_7059_tokens)).slice(_809_start, ((*(_7015_i)) - 1LL));;
}



inline __jule_tuple_sx_2114c1b73_Token__jule_tuple_sx_2114c1b73_Token _1e7bbc321_rangeLast(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _10019_tokens) {
	__jule_tuple_sx_2114c1b73_Token__jule_tuple_sx_2114c1b73_Token __jule_func_result;
	if (((*(_10019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _1049_first = (*(_10019_tokens))[((*(_10019_tokens)).len() - 1LL)].get()._field_Id;;
	if ((((_1049_first != static_cast<jule::U32>(73LLU)) && (_1049_first != static_cast<jule::U32>(76LLU))) && (_1049_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_10019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _11013_braceN = 0LL;;
	jule::I32 _11113_i = ((*(_10019_tokens)).len() - 1LL);;
	for (; (_11113_i >= 0LL); (_11113_i)--) {
		{
			jule::Ptr<_2114c1b73_Token> _11313_token = (*(_10019_tokens))[_11113_i];;
			{
				auto &_match_expr{ _11313_token.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1b8cc9902:;
					{
						(_11013_braceN)++;
						goto _iter_next_1b8cc8add;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1b8cc9979:;
					{
						(_11013_braceN)--;
					}
				}
				_match_end_1b8cc989c:;
			};
			if ((_11013_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10019_tokens)).slice(0LL, _11113_i);
				__jule_func_result.__jule_result_arg1 = (*(_10019_tokens)).slice(_11113_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1b8cc8add:;
	}
	_iter_end_1b8cc8add:;;
	__jule_func_result.__jule_result_arg0 = (*(_10019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log _1e7bbc70b_parts(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _13815_tokens, jule::U32 _13833_id, jule::Bool _13846_exprMust) {
	__jule_tuple_ssx_2114c1b73_Token__jule_tuple_s_2110be2cb_Log __jule_func_result;
	if (((*(_13815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> _14313_parts = nullptr;;
	jule::Slice<_2110be2cb_Log> _14413_errors = nullptr;;
	jule::I32 _14613_rangeN = 0LL;;
	jule::I32 _14713_last = 0LL;;
	{
		auto expr = _13815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8ccceee:;
		if (it != expr_end) {
			jule::I32 _1489_i = it - expr->begin();
			jule::Ptr<_2114c1b73_Token> _14812_token = *it;
			{
				{
					auto &_match_expr{ _14812_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1b8ccdc8b:;
						{
							(_14613_rangeN)++;
							goto _iter_next_1b8ccceee;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1b8ccdd13:;
						{
							(_14613_rangeN)--;
						}
					}
					_match_end_1b8ccda6b:;
				};
				if ((_14613_rangeN > 0LL)) {
					goto _iter_next_1b8ccceee;
				};
				if ((_14812_token.get()._field_Id == _13833_id)) {
					if ((_13846_exprMust && ((_1489_i - _14713_last) <= 0LL))) {
						_2110be2cb_Log _16721_err = _1e7bbbaa1_makeErr(_14812_token.get()._field_Row, _14812_token.get()._field_Column, &(_14812_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_2110be2cb_Log> &__jule_push_dest = _14413_errors; __jule_push_dest.push(_16721_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> &__jule_push_dest = _14313_parts; __jule_push_dest.push((*(_13815_tokens)).slice(_14713_last, _1489_i)); };
					_14713_last=static_cast<jule::I32>((_1489_i + 1LL));
				};
			}
			_iter_next_1b8ccceee:;
			++it;
			_1489_i++;
			goto _iter_begin_1b8ccceee;
		}
		_iter_end_1b8ccceee:;
	};
	if ((_14713_last < (*(_13815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> &__jule_push_dest = _14313_parts; __jule_push_dest.push((*(_13815_tokens)).slice(_14713_last)); };
	} else if ((!(_13846_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_2114c1b73_Token>>> &__jule_push_dest = _14313_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_2114c1b73_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14313_parts;
	__jule_func_result.__jule_result_arg1 = _14413_errors;
	return __jule_func_result;;
}



inline jule::U32 _1e7bbc9a3_getCloseOfBrace(jule::U32 _18420_left) {
	{
		auto &_match_expr{ _18420_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1b8cd22cd:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1b8cd2344:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1b8cd23aa:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_1b8cd0265:;
			{
				return _18420_left;;
			}
		}
		_match_end_1b8cd0210:;
	};
}



inline _2110be2cb_Log _1e7bbcd8d_compilerErr(jule::Ptr<_2114c1b73_Token>* _19717_token, jule::Str* _19733_fmt, jule::Slice<jule::Any> _19746_args) {
	return _2110be2cb_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_19717_token)).get()._field_Row, ._field_Column=(*(_19717_token)).get()._field_Column, ._field_Path=(*(_19717_token)).get()._field_File.get()._field_Path, ._field_Text=_2110be71b_Logf((*(_19733_fmt)), _19746_args), ._field_Line=_2114c7e21_GetRow((*(_19717_token)).get()._field_File.ptr(), (*(_19717_token)).get()._field_Row), };;
}



inline void _1e7bbd1e0_pushSuggestion(_2110be2cb_Log* _20830_log, jule::Str _20841_fmt, jule::Slice<jule::Any> _20854_args) {
	_20830_log->_field_Suggestion=_2110be71b_Logf(_20841_fmt, _20854_args);
}



inline jule::Str _1e7bbd564_tokstoa(jule::Slice<jule::Ptr<_2114c1b73_Token>>* _21213_tokens) {
	jule::I32 _21313_n = 0LL;;
	{
		auto expr = _21213_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8cd5cc6:;
		if (it != expr_end) {
			jule::Ptr<_2114c1b73_Token> *_21412_token = it;
			{
				_21313_n+=(*(_21412_token)).get()._field_Kind.len();
			}
			_iter_next_1b8cd5cc6:;
			++it;
			goto _iter_begin_1b8cd5cc6;
		}
		_iter_end_1b8cd5cc6:;
	};
	jule::Str _21713_s = jule::Str::alloc(0LL, _21313_n);;
	{
		auto expr = _21213_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8cd5bd8:;
		if (it != expr_end) {
			jule::Ptr<_2114c1b73_Token> *_21812_token = it;
			{
				_21713_s+=(*(_21812_token)).get()._field_Kind;
			}
			_iter_next_1b8cd5bd8:;
			++it;
			goto _iter_begin_1b8cd5bd8;
		}
		_iter_end_1b8cd5bd8:;
	};
	return _21713_s;;
}



inline jule::Bool _1cdcce23d_isPub(jule::Str* _195311_ident) {
	jule::I32 _195410_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _210ee9b0d_DecodeRuneStr((*(_195311_ident)));
		_195410_r = __jule_assign_result.__jule_result_arg0;
	});
	return _22c6bac96_IsUpper(_195410_r);;
}



inline jule::Ptr<_213c41d2a_TypeDecl> _1cdcceace_buildVoidType(void) {
	return jule::new_ptr<_213c41d2a_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _21402c434_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1b8e6111b:;
			{
				__jule_func_result.__jule_result_arg0=_2110c25dc_IsWindows(_2111a7b34_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1b8e60a11:;
			{
				__jule_func_result.__jule_result_arg0=_2110c2895_IsDarwin(_2111a7b34_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1b8e60a77:;
			{
				__jule_func_result.__jule_result_arg0=_2110c2b3c_IsLinux(_2111a7b34_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1b8e60add:;
			{
				__jule_func_result.__jule_result_arg0=_2110c3742_IsUnix(_2111a7b34_Os);
			}
		}
		else {
			_case_begin_1b8e60417:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b8e60725:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _2140274ea_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1b8e62c33:;
			{
				__jule_func_result.__jule_result_arg0=_2110c2e5b_IsI386(_2111a7ded_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1b8e62c99:;
			{
				__jule_func_result.__jule_result_arg0=_2110c3203_IsAmd64(_2111a7ded_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1b8e62d10:;
			{
				__jule_func_result.__jule_result_arg0=_2110c349a_IsArm64(_2111a7ded_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1b8e62d76:;
			{
				__jule_func_result.__jule_result_arg0=_2110c3d5d_Is64Bit(_2111a7ded_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1b8e62ddc:;
			{
				__jule_func_result.__jule_result_arg0=_2110c3ab6_Is32Bit(_2111a7ded_Arch);
			}
		}
		else {
			_case_begin_1b8e6264a:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b8e62958:;
	};
	return __jule_func_result;;
}



inline jule::Bool _214027709_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_21103c15b_Base(_5029_p);
	jule::I32 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _21103bb1c_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I32 _6413_i = _211034d8a_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _21402c434_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2140274ea_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I32>(_211034d8a_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _21402c434_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2140274ea_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _2140274ea_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _21402c434_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _21402c434_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _2140422e5_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_2111a7b34_Os); };
	if (_2110c3742_IsUnix(_2111a7b34_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str("unix", 4)); };
	};
}



inline void _214042548_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_2111a7ded_Arch); };
	if (_2110c3d5d_Is64Bit(_2111a7ded_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x64", 3)); };
	};
	if (_2110c3ab6_Is32Bit(_2111a7ded_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x32", 3)); };
	};
}



inline void _214042801_initVars(jule::Slice<jule::Str>* _5518_vars, _214041ed7_CompileInfo* _5532_info) {
	_2140422e5_setOsVars(_5518_vars);
	_214042548_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b8e6d931:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b8e6d997:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("gcc", 3)); };
			}
		}
		_match_end_1b8e6d8ba:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b8e6e2c2:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b8e6e338:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b8e6e39e:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp20", 5)); };
			}
		}
		_match_end_1b8e6d03a:;
	};
}



inline jule::Slice<jule::U8> _1cdcd37d6_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__22a8c0453_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_2111a6a9a_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _2110be2cb_Log _1cdcd3a8e_flatCompilerErr(jule::Str _4120_text) {
	return _2110be2cb_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Text=_4120_text, };;
}



inline void _1cdcd7ea0_pushPasses(jule::Ptr<_213cda8b8_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8ea217e:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8ea2aec:;
					if (it != expr_end) {
						_213c7d949_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1b8ea2aec;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b8ea3515:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1b8ea2aec;
										};
									}
									_iter_next_1b8ea3515:;
									++it;
									goto _iter_begin_1b8ea3515;
								}
								_iter_end_1b8ea3515:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1b8ea2aec:;
						++it;
						goto _iter_begin_1b8ea2aec;
					}
					_iter_end_1b8ea2aec:;
				};
			}
			_iter_next_1b8ea217e:;
			++it;
			goto _iter_begin_1b8ea217e;
		}
		_iter_end_1b8ea217e:;
	};
}



inline jule::Slice<jule::Str> _1cdcd8335_getAllUniquePasses(jule::Ptr<_213cda8b8_Package>* _12828_pkg, jule::Slice<jule::Ptr<_213cd7c7d_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1cdcd7ea0_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8ea500b:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_Binded))) {
					_1cdcd7ea0_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1b8ea500b:;
			++it;
			goto _iter_begin_1b8ea500b;
		}
		_iter_end_1b8ea500b:;
	};
	return _12913_passes;;
}



inline _214041ed7_CompileInfo _1cdcd8533_buildCompileInfo(void) {
	_214041ed7_CompileInfo _14213_info = _214041ed7_CompileInfo{._field_Prod=_22991518b_Production, ._field_Test=_22991472e_Test, };;
	{
		auto &_match_expr{ _2299129a2_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b8ea62d7:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b8ea634d:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1b8ea4ba9:;
	};
	{
		auto &_match_expr{ _229913e48_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b8ea6172:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b8ea66d3:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b8ea6749:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1b8ea6ae0:;
	};
	return _14213_info;;
}



inline void _1cde19554_EliminateDefines(jule::Ptr<_1cdcd6784_IR>* _29026_ir) {
	jule::Ptr<_1cddd5003_ObjectDeadCode> _29113_ocd = static__1cddd5487_new(_29026_ir);;
	_1cde19246_elimanate(_29113_ocd);
}



inline jule::Ptr<_213c0e314_Directive> _1cde198d9_findDirective(jule::Slice<jule::Ptr<_213c0e314_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8ee019a:;
		if (it != expr_end) {
			jule::Ptr<_213c0e314_Directive> _29717_dr = *it;
			{
				if ((_29717_dr.get()._field_Tag.get()._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1b8ee019a:;
			++it;
			goto _iter_begin_1b8ee019a;
		}
		_iter_end_1b8ee019a:;
	};
	return nullptr;;
}



inline jule::Bool _1cde19c2a_hasDirective(jule::Slice<jule::Ptr<_213c0e314_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1cde198d9_findDirective(_30618_directives, _30649_tag) != nullptr);;
}



inline jule::Bool _1cde1a0b0_isTraitMethod(jule::Ptr<_213c64402_StructIns>* _31123_owner, jule::Ptr<_213c796ae_FnIns>* _31143_f) {
	{
		auto expr = &((*(_31123_owner)).get()._field_Decl.get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8ee182d:;
		if (it != expr_end) {
			jule::Ptr<_213c88b63_Trait> _31217_t = *it;
			{
				if ((_213c89a10_FindMethod(_31217_t.ptr(), (*(_31143_f)).get()._field_Decl.get()._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1b8ee182d:;
			++it;
			goto _iter_begin_1b8ee182d;
		}
		_iter_end_1b8ee182d:;
	};
	return false;;
}



inline void _1cde1dbb8_eliminateDeadCodeOfScope(jule::Ptr<_213cb8a72_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_213cbb2b1_Label>> _2429_labels = jule::Slice<jule::Ptr<_213cbb2b1_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_213cbb59c_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_213cbb59c_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1cde1acb4_scopeDeadCode> _24413_sdc = jule::new_ptr<_1cde1acb4_scopeDeadCode>(_1cde1acb4_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_213cbb2b1_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_213cbb59c_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1cde1d888_optimizeStmts(_24413_sdc);
	};
}



inline void _1cde1de4e_eliminateScopeFunctions(jule::Slice<jule::Ptr<_213c76a0d_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b902e937:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b902eedc:;
					if (it != expr_end) {
						jule::Ptr<_213c796ae_FnIns> _25621_ins = *it;
						{
							_1cde1dbb8_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1b902eedc:;
						++it;
						goto _iter_begin_1b902eedc;
					}
					_iter_end_1b902eedc:;
				};
			}
			_iter_next_1b902e937:;
			++it;
			goto _iter_begin_1b902e937;
		}
		_iter_end_1b902e937:;
	};
}



inline void _1cde1e191_eliminateFunctionsScopePackage(jule::Ptr<_213cda8b8_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9030471:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _26317_f = *it;
			{
				_1cde1de4e_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_1b9030471:;
			++it;
			goto _iter_begin_1b9030471;
		}
		_iter_end_1b9030471:;
	};
}



inline void _1cde1e438_eliminateScopePackage(jule::Ptr<_213cda8b8_Package>* _26831_pkg) {
	_1cde1e191_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1cde1e647_EliminateScopes(jule::Ptr<_1cdcd6784_IR>* _27325_ir) {
	jule::I32 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_213cd7c7d_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_Binded))) {
				_1cde1e438_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_1b9031692:;
	}
	_iter_end_1b9031692:;;
	_1cde1e438_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _213e697a0_isStdPackage(jule::Str _44517_f, jule::Str _44525_p) {
	return _2110319be_HasPrefix(_44517_f, _21103b875_Join(jule::Slice<jule::Str>::make({_2111a7084_PathStdlib,_44525_p})));;
}



inline jule::Bool _213e69aad_isConstantValidConditionalCase(jule::Ptr<_213cb8e6d_If>* _44936_i) {
	{
		auto &_match_expr{ (*(_44936_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b90a652a:;
			{
				jule::Ptr<_2121a4c51_Const> _45213_c = (*(_44936_i)).get()._field_Expr.cast_ptr<_2121a4c51_Const>(&__jule_any_type19);;
				return (_2121a8dba_IsBool(_45213_c.ptr()) && _2121a6a22_ReadBool(_45213_c.ptr()));;
			}
		}
		_match_end_1b90a63b5:;
	};
	return false;;
}



inline jule::Bool _213e69d66_isUnreachableExpr(jule::Any* _45823_expr) {
	{
		auto &_match_expr{ (*(_45823_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b90a6e43:;
			{
				jule::Ptr<_2121a4c51_Const> _46113_c = (*(_45823_expr)).cast_ptr<_2121a4c51_Const>(&__jule_any_type19);;
				return (_2121a8dba_IsBool(_46113_c.ptr()) && (!(_2121a6a22_ReadBool(_46113_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b90a6eba:;
			{
				jule::Ptr<_213c687be_BinopExprModel> _46413_m = (*(_45823_expr)).cast_ptr<_213c687be_BinopExprModel>(&__jule_any_type114);;
				if ((_46413_m.get()._field_Op.get()._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_213e69d66_isUnreachableExpr(&(_46413_m.get()._field_Left.get()._field_Model)) || _213e69d66_isUnreachableExpr(&(_46413_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_1b90a65e6:;
	};
	return false;;
}



inline jule::Bool _213e6a1a7_isConstantValidMatchCase(jule::Ptr<_213cbd3d4_Case>* _47330_case) {
	{
		auto expr = &((*(_47330_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90a82b8:;
		if (it != expr_end) {
			jule::Ptr<_213d5ae22_Data> *_47412_expr = it;
			{
				if (((_213d5b791_IsConst((*(_47412_expr)).ptr()) && _2121a8dba_IsBool((*(_47412_expr)).get()._field_Constant.ptr())) && _2121a6a22_ReadBool((*(_47412_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1b90a82b8:;
			++it;
			goto _iter_begin_1b90a82b8;
		}
		_iter_end_1b90a82b8:;
	};
	return false;;
}



inline jule::Bool _213e6a44e_isUnreachableConditionalCase(jule::Ptr<_213cb8e6d_If>* _48234_i) {
	return _213e69d66_isUnreachableExpr(&((*(_48234_i)).get()._field_Expr));;
}



inline jule::Bool _213e6a707_isUnreachableMatchCase(jule::Ptr<_213cbd3d4_Case>* _48628_case) {
	{
		auto expr = &((*(_48628_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b90abb90:;
		if (it != expr_end) {
			jule::Ptr<_213d5ae22_Data> *_48712_expr = it;
			{
				if ((!(_213e69d66_isUnreachableExpr(&((*(_48712_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1b90abb90:;
			++it;
			goto _iter_begin_1b90abb90;
		}
		_iter_end_1b90abb90:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _213e73457_checkForBitShiftOpt(jule::Ptr<_213c68307_OperandExprModel>* _48225_l, jule::Ptr<_213c68307_OperandExprModel>* _48248_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_2121a417e_IsInt(_213d88bdb_Str((*(_48225_l)).get()._field_Kind.ptr())))) || (!(_2121a417e_IsInt(_213d88bdb_Str((*(_48248_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_48248_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b90ec593:;
			{
				goto _match_end_1b90ecebc;
			}
		}
		else {
			_case_begin_1b90ed110:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1b90ecebc:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_2121a74c3_AsU64((*(_48248_r)).get()._field_Model.cast_ptr<_2121a4c51_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4969_j = _212150b64_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4979_z = static_cast<jule::U64>(_4969_j);;
	if ((static_cast<jule::F64>(_4979_z) != _4969_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4979_z;
	return __jule_func_result;;
}



inline jule::Bool _213e737dc_areSameLvalueExprModel(jule::Any* _50528_l, jule::Any* _50543_r) {
	{
		auto &_match_expr{ (*(_50528_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b9101146:;
			{
				return ((*(_50543_r)) == (*(_50528_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b91011bd:;
			{
				{
					auto &_match_expr{ (*(_50543_r)) };
					
					if (_match_expr.type == &__jule_any_type71) {
						_case_begin_1b9101a4d:;
						{
							goto _match_end_1b9101ad6;
						}
					}
					else {
						_case_begin_1b9101b3b:;
						{
							return false;;
						}
					}
					_match_end_1b9101ad6:;
				};
				jule::Ptr<_213c6d076_StructSubIdentExprModel> _51813_lsi = (*(_50528_l)).cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71);;
				jule::Ptr<_213c6d076_StructSubIdentExprModel> _51913_rsi = (*(_50543_r)).cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_51813_lsi.get()._field_Field != _51913_rsi.get()._field_Field)) {
					return false;;
				};
				return _213e737dc_areSameLvalueExprModel(&(_51813_lsi.get()._field_Expr.get()._field_Model), &(_51913_rsi.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b9101267:;
			{
				{
					auto &_match_expr{ (*(_50543_r)) };
					
					if (_match_expr.type == &__jule_any_type74) {
						_case_begin_1b9103b1b:;
						{
							jule::Ptr<_213c68b76_UnaryExprModel> _53117_ul = (*(_50528_l)).cast_ptr<_213c68b76_UnaryExprModel>(&__jule_any_type74);;
							jule::Ptr<_213c68b76_UnaryExprModel> _53217_ur = (*(_50543_r)).cast_ptr<_213c68b76_UnaryExprModel>(&__jule_any_type74);;
							if (((_53117_ul.get()._field_Op.get()._field_Id != _53217_ur.get()._field_Op.get()._field_Id) || (_53117_ul.get()._field_Op.get()._field_Kind != _53217_ur.get()._field_Op.get()._field_Kind))) {
								return false;;
							};
							return _213e737dc_areSameLvalueExprModel(&(_53117_ul.get()._field_Expr.get()._field_Model), &(_53217_ur.get()._field_Expr.get()._field_Model));;
						}
					}
					_match_end_1b91033ac:;
				};
			}
		}
		_match_end_1b9101025:;
	};
	return false;;
}



inline void _213e73ee6_doInternalNosafeStobs(_213e6b4c7_exprOptimizer* _727_op, _1cdcda7ee_stdCacheData* _747_data, jule::Ptr<_213c6a705_FnCallExprModel>* _772_m) {
	jule::Any _813_model = jule::Any(jule::new_ptr<_213e64954_InlineStdInternalNosafeStobs>(_213e64954_InlineStdInternalNosafeStobs{._field_Str=(*(_772_m)).get()._field_Args[0LL]}), &__jule_any_type131);;
	{
		(*((*(_727_op))._field_model))=(*(((jule::Any*)((&(_813_model))))));
	};
}



inline void _1cdcdae81_buildCache(jule::Ptr<_1cdcd6784_IR>* _2720_ir) {
	_1cdcdb1c3_buildStdInternalNosafeCache(_2720_ir);
}



inline void _1cdcdb1c3_buildStdInternalNosafeCache(jule::Ptr<_1cdcd6784_IR>* _3137_ir) {
	jule::Ptr<_213cda8b8_Package> _3213_p = _1cdcdbc0c_getPackage(_3137_ir, &(_1cdcda403_stdPackageInternalNosafe));;
	if ((_3213_p == nullptr)) {
		return;;
	};
	_1cdcdb536_pushCache(&(_3213_p), jule::Str("Stobs", 5), jule::Fn<void(_213e6b4c7_exprOptimizer*,_1cdcda7ee_stdCacheData*,jule::Ptr<_213c6a705_FnCallExprModel>*)>(_213e73ee6_doInternalNosafeStobs));
}



inline void _1cdcdb536_pushCache(jule::Ptr<_213cda8b8_Package>* _4119_p, jule::Str _4132_ident, jule::Fn<void(_213e6b4c7_exprOptimizer*,_1cdcda7ee_stdCacheData*,jule::Ptr<_213c6a705_FnCallExprModel>*)> _4144_do) {
	jule::Ptr<_213c796ae_FnIns> _4213_f = _1cdcdb8bb_getFunc(_4119_p, &(_4132_ident));;
	_1cdcdac2d_stdCache[static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_4213_f))]=_1cdcda7ee_stdCacheData{._field_f=_4213_f, ._field_do=_4144_do};
}



inline jule::Ptr<_213c796ae_FnIns> _1cdcdb8bb_getFunc(jule::Ptr<_213cda8b8_Package>* _5017_p, jule::Str* _5031_ident) {
	;
	jule::Ptr<_213c76a0d_Fn> _5213_f = _213cdbd09_FindFn((*(_5017_p)).ptr(), (*(_5031_ident)), false);;
	if ((_5213_f == nullptr)) {
		return nullptr;;
	};
	return _5213_f.get()._field_Instances[0LL];;
}



inline jule::Ptr<_213cda8b8_Package> _1cdcdbc0c_getPackage(jule::Ptr<_1cdcd6784_IR>* _5920_ir, jule::Str* _5930_path) {
	{
		auto expr = &((*(_5920_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9151d78:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> _6017_u = *it;
			{
				if ((_6017_u.get()._field_Std && (_6017_u.get()._field_LinkPath == (*(_5930_path))))) {
					return _6017_u.get()._field_Package;;
				};
			}
			_iter_next_1b9151d78:;
			++it;
			goto _iter_begin_1b9151d78;
		}
		_iter_end_1b9151d78:;
	};
	return nullptr;;
}



inline void _1cdcde34c_PushOptLevel(jule::I32 _3217_level) {
	jule::Bool _339_l1 = (_3217_level >= static_cast<jule::I32>(1LL));;
	jule::Bool _349_l2 = (_3217_level >= static_cast<jule::I32>(2LL));;
	_1cdcdc4d2_Copy=_339_l1;
	_1cdcdc7e0_Deadcode=_339_l1;
	_1cdcdcaa9_Append=_339_l1;
	_1cdcdcdb7_Math=_339_l1;
	_1cdcdd181_Access=_339_l1;
	_1cdcdd44a_Inline=_339_l1;
	_1cdcdd714_Ptr=_339_l1;
	_1cdcddadd_Cond=_339_l1;
	_1cdcddda7_Str=_339_l1;
	_1cdcde171_StdInternalNosafe=_349_l2;
}



inline void _1cde288b5_detectEnabled(void) {
	_1cde265c7_exprEnabled=((((_1cdcdd714_Ptr || _1cdcdcdb7_Math) || _1cdcdd181_Access) || _1cdcddadd_Cond) || _1cdcde171_StdInternalNosafe);
	_1cde267e7_scopeEnabled=(((_1cdcddadd_Cond || _1cdcdcaa9_Append) || _1cdcdc4d2_Copy) || _1cdcddda7_Str);
	_1cde26a5b_stdEnabled=_1cdcde171_StdInternalNosafe;
}



inline void _1cde51a64_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_2111a6a9a_Exit(1LL);
}



inline jule::U64 _213aed951_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1b6401d2e_isCopyOptimizable(jule::Ptr<_213d5ae22_Data>* _81623_expr) {
	if ((!((*(_81623_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81623_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b923de21:;
			{
				return false;;
			}
		}
		_match_end_1b923ddbb:;
	};
	return true;;
}



inline jule::Bool _1b64021b4_isIterCopyOptimizable(jule::Ptr<_213d5ae22_Data>* _82727_expr, jule::Ptr<_213d11988_Var>* _82741_v) {
	if (((!((*(_82727_expr)).get()._field_Lvalue)) && (!(_213d8a0c7_Mutable((*(_82727_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82741_v)).get()._field_Mutable)) && (!((*(_82727_expr)).get()._field_Mutable)));;
}



inline jule::Str _1b6411ed7_decomposeCommonEsq(jule::U8 _154723_b) {
	{
		auto &_match_expr{ _154723_b };
		
		if (_match_expr == '\\') {
			_case_begin_1b92e1aea:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b92daa7d:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b92e19b8:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1b92e15ab:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1b92e1622:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1b92e1688:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1b92e16ee:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1b92e1b61:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1b92e1bc7:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1b92e1c3d:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1b92e14ac:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b92e137a:;
	};
}



inline jule::Str _1b64122c3_sbtoa(jule::U8 _157410_b) {
	if ((_157410_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_157410_b < 128LLU)) {
		jule::Str _157913_seq = _1b6411ed7_decomposeCommonEsq(_157410_b);;
		if ((!(_157913_seq.empty()))) {
			return _157913_seq;;
		};
		if (((32LL <= _157410_b) && (_157410_b <= 126LLU))) {
			return jule::Str::from_byte(_157410_b);;
		};
	};
	jule::Str _15879_seq = _2121949aa_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_157410_b)), 8LL);;
	if ((_15879_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15879_seq);;
	};
	return (jule::Str("\\", 1) + _15879_seq);;
}



inline jule::Str _1b641256a_cstrBytes(jule::Slice<jule::U8> _159414_bytes) {
	jule::Str _159513_lit = jule::Str::alloc(0LL, _159414_bytes.len());;
	{
		auto expr = &(_159414_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b92e689c:;
		if (it != expr_end) {
			jule::U8 *_159612_b = it;
			{
				_159513_lit+=_1b64122c3_sbtoa((*(_159612_b)));
			}
			_iter_next_1b92e689c:;
			++it;
			goto _iter_begin_1b92e689c;
		}
		_iter_end_1b92e689c:;
	};
	return _159513_lit;;
}



inline jule::Str _1b6412889_cstrLit(jule::Slice<jule::U8> _160212_bytes) {
	return ((jule::Str("\"", 1) + _1b641256a_cstrBytes(_160212_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1b6412b97_ftoa(jule::F64 _16069_f, jule::I32 _160617_bitsize) {
	if ((_160617_bitsize != 32LL)) {
		if ((_16069_f == static_cast<jule::F64>(static_cast<jule::I64>(_16069_f)))) {
			return _1b6412e3e_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_16069_f)));;
		};
		if ((_16069_f == static_cast<jule::F64>(static_cast<jule::U64>(_16069_f)))) {
			return _1b64131d6_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_16069_f)));;
		};
	};
	jule::Str _161513_m = _21217e577_FmtFloat(_16069_f, 'f', -1LL, _160617_bitsize);;
	if ((!(_21103671b_Contains(_161513_m, jule::Str(".", 1))))) {
		(_161513_m).append(".0", 2);
	};
	return _161513_m;;
}



inline jule::Str _1b6412e3e_itoa(jule::I64 _16229_x) {
	{
		
		if ((_16229_x == jule::MAX_I64)) {
			_case_begin_1b92e9d23:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_16229_x == jule::MIN_I64)) {
			_case_begin_1b92e9e00:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1b92e9c46:;
	};
	jule::Str _16309_fmt = _212194d40_FmtInt(_16229_x, 10LL);;
	if (_2110c3d5d_Is64Bit(jule::Str("i386", 4))) {
		return (_16309_fmt + jule::Str("LL", 2));;
	};
	return (_16309_fmt + jule::Str("L", 1));;
}



inline jule::Str _1b64131d6_utoa(jule::U64 _16379_x) {
	{
		
		if ((_16379_x == jule::MAX_U64)) {
			_case_begin_1b92eb6e8:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1b92eb0bb:;
	};
	jule::Str _16439_fmt = _2121949aa_FmtUint(_16379_x, 10LL);;
	if (_2110c3d5d_Is64Bit(jule::Str("i386", 4))) {
		return (_16439_fmt + jule::Str("LLU", 3));;
	};
	return (_16439_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1b641358d_isForwarded(jule::Ptr<_213cb8a72_Scope>* _165017_s) {
	jule::Any _16519_last = (*(_165017_s)).get()._field_Stmts[((*(_165017_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16519_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b92ed3ed:;
			{
				{
					auto &_match_expr{ _16519_last.cast_ptr<_213d5ae22_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b92ed783:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b92ee179:;
						{
							return false;;
						}
					}
					_match_end_1b92eddc1:;
				};
			}
		}
		else {
			_case_begin_1b92ed4db:;
			{
				return true;;
			}
		}
		_match_end_1b92ed486:;
	};
}



inline jule::Bool _1b6413857_isBuiltinCallHasDebuginf(jule::Ptr<_213c6a705_FnCallExprModel>* _166530_m) {
	if ((!(_213c7aa45_IsBuiltin((*(_166530_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_166530_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b92ee388:;
			{
				jule::Ptr<_213c6e132_CommonSubIdentExprModel> _167113_csie = (*(_166530_m)).get()._field_Expr.cast_ptr<_213c6e132_CommonSubIdentExprModel>(&__jule_any_type73);;
				return _167113_csie.get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_1b92eea4d:;
			{
				return false;;
			}
		}
		_match_end_1b92eed39:;
	};
}



inline jule::Bool _1b6413a88_isExprComesFromBind(jule::Ptr<_213d5ae22_Data>* _167825_d) {
	{
		auto &_match_expr{ (*(_167825_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b9300235:;
			{
				return (*(_167825_d)).get()._field_Model.cast_ptr<_213d11988_Var>(&__jule_any_type8).get()._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b9301401:;
			{
				return (*(_167825_d)).get()._field_Model.cast_ptr<_213c6d076_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_Binded;;
			}
		}
		else {
			_case_begin_1b930007b:;
			{
				return false;;
			}
		}
		_match_end_1b930116a:;
	};
}



inline jule::Bool _1b6413d30_isAny(jule::Ptr<_213d88834_TypeKind>* _169015_t) {
	if ((_213d8ba02_TypeEnum((*(_169015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_213d91089_Prim> _16949_prim = _213d8b051_Prim((*(_169015_t)).ptr());;
	return ((_16949_prim != nullptr) && _213d944ee_IsAny(_16949_prim.ptr()));;
}



inline void _213b1248c_iterFiles(jule::Ptr<_213cda8b8_Package>* _138519_pkg, jule::Fn<void(jule::Ptr<_213d56417_SymbolTable>*)> _138534_f) {
	{
		auto expr = &((*(_138519_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94708d3:;
		if (it != expr_end) {
			jule::Ptr<_213d56417_SymbolTable> _138617_file = *it;
			{
				_138534_f(&(_138617_file));
			}
			_iter_next_1b94708d3:;
			++it;
			goto _iter_begin_1b94708d3;
		}
		_iter_end_1b94708d3:;
	};
}



inline jule::Str _213b12778_concatAllParts(jule::Slice<jule::Ptr<_2114c1b73_Token>> _139219_parts) {
	jule::I32 _139313_n = 0LL;;
	{
		auto expr = &(_139219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b94718a1:;
		if (it != expr_end) {
			jule::Ptr<_2114c1b73_Token> *_139412_part = it;
			{
				_139313_n+=(*(_139412_part)).get()._field_Kind.len();
			}
			_iter_next_1b94718a1:;
			++it;
			goto _iter_begin_1b94718a1;
		}
		_iter_end_1b94718a1:;
	};
	if ((_139313_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _140013_s = jule::Str::alloc(0LL, _139313_n);;
	{
		auto expr = &(_139219_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9472a17:;
		if (it != expr_end) {
			jule::Ptr<_2114c1b73_Token> *_140112_p = it;
			{
				_140013_s+=(*(_140112_p)).get()._field_Kind;
			}
			_iter_next_1b9472a17:;
			++it;
			goto _iter_begin_1b9472a17;
		}
		_iter_end_1b9472a17:;
	};
	return _140013_s;;
}



inline jule::Bool _213b12ab9_containsTraitMethod(jule::Ptr<_213c88b63_Trait>* _140829_t, jule::Str* _140841_ident) {
	{
		auto expr = &((*(_140829_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9473485:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _140912_m = *it;
			{
				if ((_140912_m.get()._field_Ident == (*(_140841_ident)))) {
					return true;;
				};
			}
			_iter_next_1b9473485:;
			++it;
			goto _iter_begin_1b9473485;
		}
		_iter_end_1b9473485:;
	};
	return false;;
}



inline void _213b12db6_pushMethodsFromInherit(jule::Ptr<_213c88b63_Trait>* _142032_dest, jule::Ptr<_213c88b63_Trait>* _142051_src) {
	_213b13191_pushMethodsFromInherits(_142032_dest, _142051_src);
	{
		auto expr = &((*(_142051_src)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9474640:;
		if (it != expr_end) {
			jule::Ptr<_213c76a0d_Fn> _142217_m = *it;
			{
				if ((!(_213b12ab9_containsTraitMethod(_142032_dest, &(_142217_m.get()._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_213c76a0d_Fn>> &__jule_push_dest = (*(_142032_dest)).get()._field_Methods; __jule_push_dest.push(_142217_m); };
				};
			}
			_iter_next_1b9474640:;
			++it;
			goto _iter_begin_1b9474640;
		}
		_iter_end_1b9474640:;
	};
}



inline void _213b13191_pushMethodsFromInherits(jule::Ptr<_213c88b63_Trait>* _143133_dest, jule::Ptr<_213c88b63_Trait>* _143152_src) {
	{
		auto expr = &((*(_143152_src)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b947495e:;
		if (it != expr_end) {
			jule::Ptr<_213d906d7_TypeSymbol> _143217_inh = *it;
			{
				jule::Ptr<_213c88b63_Trait> _143317_t2 = _213d8c717_Trait(_143217_inh.get()._field_Kind.ptr());;
				_213b12db6_pushMethodsFromInherit(_143133_dest, &(_143317_t2));
			}
			_iter_next_1b947495e:;
			++it;
			goto _iter_begin_1b947495e;
		}
		_iter_end_1b947495e:;
	};
}



inline jule::Bool _213b13449_isOpMethod(jule::Ptr<_213c76a0d_Fn>* _143916_m) {
	if ((((*(_143916_m)).get()._field_Generics.len() > 0LL) || ((*(_143916_m)).get()._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_213c796ae_FnIns> _14439_mi = (*(_143916_m)).get()._field_Instances[0LL];;
	;
	;
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14439_mi == _14439_mi.get()._field_Owner.get()._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _213b136e1_isHeadDecl(jule::Ptr<_213c76a0d_Fn>* _145520_m) {
	if ((((*(_145520_m)).get()._field_Generics.len() > 0LL) || ((*(_145520_m)).get()._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_213b13449_isOpMethod(_145520_m)) {
		return true;;
	};
	jule::Ptr<_213c796ae_FnIns> _146213_mi = (*(_145520_m)).get()._field_Instances[0LL];;
	;
	return static__213d12d63_Dispose(_213c6539d_FindMethod(_146213_mi.get()._field_Owner.ptr(), jule::Str("Dispose", 7), false));;
}



inline jule::Ptr<_213c0e314_Directive> _213b21a2e_findDirective(jule::Slice<jule::Ptr<_213c0e314_Directive>>* _46623_directives, jule::Str _46654_tag) {
	{
		auto expr = _46623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9574157:;
		if (it != expr_end) {
			jule::Ptr<_213c0e314_Directive> _46717_dr = *it;
			{
				if ((_46717_dr.get()._field_Tag.get()._field_Kind == _46654_tag)) {
					return _46717_dr;;
				};
			}
			_iter_next_1b9574157:;
			++it;
			goto _iter_begin_1b9574157;
		}
		_iter_end_1b9574157:;
	};
	return nullptr;;
}



inline jule::Bool _213b21db4_hasDirective(jule::Slice<jule::Ptr<_213c0e314_Directive>>* _47618_directives, jule::Str _47649_tag) {
	return (_213b21a2e_findDirective(_47618_directives, _47649_tag) != nullptr);;
}



inline jule::Bool _213b2215b_shouldInitialized(jule::Ptr<_213d88834_TypeKind>* _48327_t) {
	jule::Ptr<_213d91089_Prim> _4849_prim = _213d8b051_Prim((*(_48327_t)).ptr());;
	if ((_4849_prim != nullptr)) {
		return ((!(_213d944ee_IsAny(_4849_prim.ptr()))) && (!(_213d9428a_IsStr(_4849_prim.ptr()))));;
	};
	{
		
		if ((_213d8b2b5_Sptr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b9576d6e:;
			{
				return false;;
			}
		}
		else if ((_213d8c97b_Map((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b9576962:;
			{
				return false;;
			}
		}
		else if ((_213d8beca_Slc((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b95769d9:;
			{
				return false;;
			}
		}
		else if ((_213d8c717_Trait((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b9576ae9:;
			{
				return false;;
			}
		}
		else if ((_213d8c23e_Fn((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b9576b60:;
			{
				return false;;
			}
		}
		else if ((_213d8bc66_Arr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b9576bc6:;
			{
				jule::Ptr<_213d973e2_Arr> _50017_arr = _213d8bc66_Arr((*(_48327_t)).ptr());;
				return _213b2215b_shouldInitialized(&(_50017_arr.get()._field_Elem));;
			}
		}
		else if ((_213d8c4a3_Struct((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b9576c3c:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b9575bd6:;
			{
				return true;;
			}
		}
		_match_end_1b9575d29:;
	};
}



inline void _2111aae23_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _2111ab176_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_2111aae23_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _4113_max = _2111aac47_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_2111aac47_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b960c8e9:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I32 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1b960c8e9:;
			++it;
			goto _iter_begin_1b960c8e9;
		}
		_iter_end_1b960c8e9:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_2111aac47_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b960e05a:;
		if (it != expr_end) {
			jule::I32 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_21103124e_Repeat(jule::Str(" ", 1), static_cast<jule::I32>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					(_4913_s).append("\n", 1);
				};
			}
			_iter_next_1b960e05a:;
			++it;
			_519_i++;
			goto _iter_begin_1b960e05a;
		}
		_iter_end_1b960e05a:;
	};
	jule::outln(_4913_s);
}



inline void _2111ab385_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_2111aae23_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.15 @master", 18));
}



inline void _2111ab572_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _2111ab6d7_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _2111ab8e6_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_2111aae23_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1b96147be:;
			{
				_2111ab572_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1b9614868:;
			{
				_2111ab6d7_toolDistarch();
			}
		}
		else {
			_case_begin_1b9613dea:;
			{
				_2111aae23_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1b9614329:;
	};
}



inline void _2111abb05_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_2111aae23_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str("architecture: i386", 18));
	jule::outln(jule::Str("operating system: linux", 23));
	jule::outln((jule::Str("default compiler: ", 18) + _2299129a2_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _229913e48_CppStd));
}



inline void _2111abde1_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_2111aae23_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1b9617c12:;
			{
				({
					auto except = static__22a8c07a5_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_2111aae23_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1b961767e:;
			{
				_2111aae23_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1b9617827:;
	};
}



inline jule::Bool _2111ac188_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1b9617cab:;
			{
				_2111ab176_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1b9619252:;
			{
				_2111ab385_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1b96192b8:;
			{
				_2111ab8e6_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1b9618a26:;
			{
				_2111abb05_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1b9618a8c:;
			{
				_2111abde1_mod(_15320_args);
			}
		}
		else {
			_case_begin_1b96189b0:;
			{
				return false;;
			}
		}
		_match_end_1b9618482:;
	};
	return true;;
}



inline void _2111ac2ed_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _22a970bda_Args();;
	if ((_18913_args.len() < 2LL)) {
		_2111ac2ed_showInfo();
		return;;
	};
	if (_2111ac188_processCommand(&(_18913_args))) {
		return;;
	};
	_1b66354e6_compileCommand(&(_18913_args));
}



inline void _1b6632548_init(void) {
	_2299129a2_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_22a8be9e6_File> _1b6632801_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _21103c4d0_Dir((*(_4316_path)));;
	({
		auto except = static__22a8b2db3_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__21103e977_Create(_449_dir);
				if (!except.ok()) {
					_1cde51a64_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__22a8c01ab_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1cde51a64_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1b6632966_clearObjects(void) {
	({
		auto except = static__22a8b1620_Remove(_1b6633a77_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__21103eb86_Remove(_1b6631d3e_OutDir);
}



inline void _1b6632c63_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_211160dea_Cmd> _7313_cmd = static__211161307_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_2110363ca_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _2111614d3_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b961ea0a:;
					{
						static__1cde29157_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b961ec6e:;
					{
						static__1cde29157_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1b961eb3c:;
					{
						static__1cde29157_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1b961ea93:;
			};
			_1cde51a64_Throw(jule::Str());
		}
	});
	jule::I32 _869_status = ({
		auto except = _211161923_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _2299129a2_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1cde29157_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1cde51a64_Throw(jule::Str());
	};
	_1b6632966_clearObjects();
}



inline jule::Bool _1b663300a_isCppSourceFile(jule::Str _9920_path) {
	jule::I32 _1009_offset = _211034d8a_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _2110b1c6e_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1b6633219_pushCompCmdClang(jule::Str* _10726_cmd) {
	((*(_10726_cmd))).append("-Wno-everything ", 16);
	((*(_10726_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _229913e48_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b962337c:;
			{
				((*(_10726_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b9623767:;
			{
				((*(_10726_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b96237cd:;
			{
				((*(_10726_cmd))).append("c++20", 5);
			}
		}
		_match_end_1b9623569:;
	};
	((*(_10726_cmd))).append(" ", 1);
	if (_22991518b_Production) {
		((*(_10726_cmd))).append("-O3 ", 4);
		((*(_10726_cmd))).append("-flto ", 6);
		((*(_10726_cmd))).append("-DNDEBUG ", 9);
		((*(_10726_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_10726_cmd))).append("-O0 ", 4);
	};
}



inline void _1b6633428_pushCompCmdGcc(jule::Str* _13324_cmd) {
	((*(_13324_cmd))).append("-w ", 3);
	((*(_13324_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _229913e48_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b96252e6:;
			{
				((*(_13324_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b9625615:;
			{
				((*(_13324_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b962567b:;
			{
				((*(_13324_cmd))).append("c++20", 5);
			}
		}
		_match_end_1b9625417:;
	};
	((*(_13324_cmd))).append(" ", 1);
	if (_22991518b_Production) {
		((*(_13324_cmd))).append("-O3 ", 4);
		((*(_13324_cmd))).append("-DNDEBUG ", 9);
		((*(_13324_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_13324_cmd))).append("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1b6633879_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1cdcd6784_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_229913c28_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _2299129a2_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b9627c44:;
			{
				_1b6633428_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b96276c2:;
			{
				_1b6633219_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1b9627bde:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b96286b2:;
		if (it != expr_end) {
			jule::Ptr<_213cd7c7d_ImportInfo> *_17112_u = it;
			{
				if (((*(_17112_u)).get()._field_Binded && _1b663300a_isCppSourceFile((*(_17112_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17112_u)).get()._field_Path;
					(_16113_cmd).append(" ", 1);
				};
			}
			_iter_next_1b96286b2:;
			++it;
			goto _iter_begin_1b96286b2;
		}
		_iter_end_1b96286b2:;
	};
	if ((!(_1b663238e_Out.empty()))) {
		(_16113_cmd).append("-o ", 3);
		_16113_cmd+=_1b663238e_Out;
		(_16113_cmd).append(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b9628a47:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				(_16113_cmd).append(" ", 1);
				_16113_cmd+=(*(_18612_pass));
			}
			_iter_next_1b9628a47:;
			++it;
			goto _iter_begin_1b9628a47;
		}
		_iter_end_1b9628a47:;
	};
	if (_2111a7b34_Os.equal("windows", 7)) {
		(_16113_cmd).append(" -lshell32", 10);
	};
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _1b6633a77_getCompilePath(void) {
	return _21103b875_Join(jule::Slice<jule::Str>::make({_1b6631d3e_OutDir,_1b66320c5_OutName}));;
}



inline void _1b6633cb9_applyTargetIndependentOptimizations(jule::Ptr<_1cdcd6784_IR>* _20545_ir) {
	jule::Ptr<_1cde26cd1_Optimizer> _20613_opt = static__1cde27210_New(_20545_ir);;
	_1cde28651_Optimize(_20613_opt.ptr());
}



inline void _1b6633e2e_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _2299129a2_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b962b9d4:;
			{
				_1cde51a64_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b962b6b5:;
			{
				if (_229913c28_CompilerPath.empty()) {
					_229913c28_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b962b72b:;
			{
				if (_229913c28_CompilerPath.empty()) {
					_229913c28_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1b962b64e:;
			{
				_1cde51a64_Throw((jule::Str("invalid option value for --compiler: ", 37) + _2299129a2_Compiler));
			}
		}
		_match_end_1b962b495:;
	};
}



inline void _1b66340e9_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1cde51a64_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1b6634308_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1cde51a64_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1b6634517_checkTargetFlag(jule::Str* _24321_target) {
	if ((*(_24321_target)).empty()) {
		_1cde51a64_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2489_parts = _2110363ca_Split((*(_24321_target)), jule::Str("-", 1), -1LL);;
	if ((_2489_parts.len() != 2LL)) {
		_1cde51a64_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _25310_os;;
	jule::Str _25314_arch;;
	({
		jule::Str ___jule_assign_arg = _2489_parts[0LL];
		jule::Str _1___jule_assign_arg = _2489_parts[1LL];
		_25310_os = ___jule_assign_arg;
		_25314_arch = _1___jule_assign_arg;
	});
	if ((!_25310_os.equal("native", 6))) {
		_1b6634308_checkTargetOs(_25310_os);
		_2111a7b34_Os=_25310_os;
	};
	if ((!_25314_arch.equal("native", 6))) {
		_1b66340e9_checkTargetArch(_25314_arch);
		_2111a7ded_Arch=_25314_arch;
	};
	_2121991da_UpdateTarget();
}



inline void _1b6634726_checkOptFlag(jule::Str* _26618_opt) {
	if ((*(_26618_opt)).empty()) {
		_1cde51a64_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1b9632b2d:;
			{
				goto _match_end_1b9632c1b;
			}
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1b96330c3:;
			{
				_1cdcde34c_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else if (_match_expr == jule::Str("L2", 2)) {
			_case_begin_1b9633139:;
			{
				_1cdcde34c_PushOptLevel(static_cast<jule::I32>(2LL));
			}
		}
		else {
			_case_begin_1b9632985:;
			{
				_1cde51a64_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1b9632c1b:;
	};
}



inline void _1b6634a9a_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _229913e48_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b96331a0:;
			{
				goto _match_end_1b963436b;
			}
		}
		else {
			_case_begin_1b96341b2:;
			{
				_1cde51a64_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _229913e48_CppStd));
			}
		}
		_match_end_1b963436b:;
	};
}



inline jule::Slice<jule::Str> _1b6634d31_checkFlags(jule::Slice<jule::Str>* _29416_args) {
	jule::Str _29513_opt = jule::Str("L0", 2);;
	jule::Str _29613_target = jule::Str("native-native", 13);;
	jule::Ptr<_1b662c3ab_FlagSet> _29813_fs = static__1b662c697_New();;
	_1b96360c6_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29513_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1b96360c6_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29613_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1b96360c6_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1b663238e_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2299141e0_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_229914465_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1b96360c6_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2299129a2_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1b96360c6_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_229913c28_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22991518b_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2299149e8_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_229914dc2_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1b96360c6_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_229913e48_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cdcdc4d2_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cdcdc7e0_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cdcdcaa9_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cdcdcdb7_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cdcdd181_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cdcdd44a_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cdcdd714_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cdcddadd_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cdcddda7_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	_1b963e09b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1cdcde171_StdInternalNosafe)))), jule::Str("opt-internal-nosafe", 19), 0LL, jule::Str("Special optimizations for std::internal::nosafe", 47));
	jule::Slice<jule::Str> _32213_content = ({
		auto except = _1b662d467_Parse(_29813_fs.ptr(), (*(_29416_args)));
		(except.ok()) ? (except.result) : ({
			_1cde51a64_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1b6633e2e_checkCompilerFlag();
	_1b6634a9a_checkCppStdFlag();
	_1b6634517_checkTargetFlag(&(_29613_target));
	_1b6634726_checkOptFlag(&(_29513_opt));
	return _32213_content;;
}



inline void _1b6635040_setupSemaFlags(jule::I32* _33524_flags) {
	if (_2299141e0_Shadowing) {
		(*(_33524_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1cdcd6784_IR> _1b66352d7_buildIr(jule::Slice<jule::Str>* _34113_args) {
	jule::Slice<jule::Str> _3429_content = _1b6634d31_checkFlags(_34113_args);;
	jule::I32 _34413_semaFlags = static_cast<jule::I32>(0LL);;
	_1b6635040_setupSemaFlags(&(_34413_semaFlags));
	if ((_3429_content.len() == 0LL)) {
		_1cde51a64_Throw(_2110be71b_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3429_content.len() > 1LL)) {
		_1cde51a64_Throw((jule::Str("undefined content: ", 19) + _3429_content[1LL]));
	};
	jule::Str _35214_path;;
	jule::Bool _35220_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _21103bdb4_Abs(_3429_content[0LL]);
		_35214_path = __jule_assign_result.__jule_result_arg0;
		_35220_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35220_ok))) {
		_1cde51a64_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_22a8c20e2_Status> _3589_inf = ({
		auto except = static__22a8b2db3_Of(_2111a7084_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1cde51a64_Throw(_2110be71b_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_22a8c20e2_Status>(nullptr);});
	});;
	if ((!(_22a8c24aa_IsDir(_3589_inf.ptr())))) {
		_1cde51a64_Throw(_2110be71b_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1cdcd6784_IR> _36614_ir;;
	jule::Slice<_2110be2cb_Log> _36618_logs;;
	({
		__jule_tuple_x_1cdcd6784_IR__jule_tuple_s_2110be2cb_Log __jule_assign_result = static__1cdcd6bc4_Build(_35214_path, _34413_semaFlags);
		_36614_ir = __jule_assign_result.__jule_result_arg0;
		_36618_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36614_ir == nullptr) && (_36618_logs == nullptr))) {
		_1cde51a64_Throw(_2110be71b_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_35214_path, &__jule_any_type5)})));
	};
	if ((_36618_logs != nullptr)) {
		static__1cde510e6_PrintLogs(&(_36618_logs));
		_1cde51a64_Throw(jule::Str());
	};
	return _36614_ir;;
}



inline void _1b66354e6_compileCommand(jule::Slice<jule::Str>* _38124_args) {
	(*(_38124_args))=(*(_38124_args)).slice(1LL);
	if ((*(_38124_args))[0LL].equal("test", 4)) {
		_22991472e_Test=true;
		(*(_38124_args))=(*(_38124_args)).slice(1LL);
	};
	jule::Ptr<_1cdcd6784_IR> _38713_ir = _1b66352d7_buildIr(_38124_args);;
	;
	if ((!(_22991472e_Test))) {
		jule::Ptr<_213c76a0d_Fn> _39217_main = _213cdbd09_FindFn(_38713_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_39217_main == nullptr)) {
			_1cde51a64_Throw(_2110be71b_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1b6633cb9_applyTargetIndependentOptimizations(&(_38713_ir));
	_1cdcd7b3c_Order(_38713_ir.ptr());
	jule::Str _40310_compiler;;
	jule::Str _40320_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1b6633879_genCompileCmd(_1b6633a77_getCompilePath(), &(_38713_ir));
		_40310_compiler = __jule_assign_result.__jule_result_arg0;
		_40320_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_213b05b01_ObjectCoder> _40513_oc = static__213b05eca_New(&(_38713_ir), _213b0425e_SerializationInfo{._field_Compiler=_40310_compiler, ._field_CompilerCommand=_40320_compilerCmd});;
	if (_22991472e_Test) {
		jule::Ptr<_1b6415d10_TestCoder> _41017_tc = static__1b641623e_New(&(_40513_oc));;
		_1b6417471_Serialize(_41017_tc);
	} else {
		_213b120d5_Serialize(_40513_oc);
	};
	jule::Str _4169_path = _1b6633a77_getCompilePath();;
	jule::Ptr<_22a8be9e6_File> _41713_file = _1b6632801_openOutput(&(_4169_path));;
	({
		auto except = _22a8c1421_WriteStr(_41713_file.ptr(), &(_40513_oc.get()._field_Obj));
		if (!except.ok()) {
			_1cde51a64_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _22a8c15ec_Close(_41713_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:421:5"));
	});
	if ((!(_229914465_Transpilation))) {
		_1b6632c63_compileIr(_40310_compiler, _40320_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_2111a8030_init();
	_212199350_init();
	_1b6632548_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}